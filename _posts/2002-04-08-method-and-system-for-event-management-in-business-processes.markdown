---
title: Method and system for event management in business processes
abstract: An event management method for a computer implemented business process system. The method includes the step of executing a plurality of events for representing a business process, the business process implemented by progressing through the events. A plurality of event nodes are executed for the business process, the event nodes defining points in the progress of the business process for communicating with an external process to exchange information. The business process is executed by sequentially executing the events, wherein the execution proceeds in accordance with the event nodes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07835933&OS=07835933&RS=07835933
owner: Hewlett-Packard Development Company, L.P.
number: 07835933
owner_city: Houston
owner_country: US
publication_date: 20020408
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND ART","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present invention relates generally to electronic commerce information technology. More specifically, the present invention pertains to an electronic commerce information management system for delivering business data and services.","The use of the Internet for electronic commerce and for information retrieval has rapidly proliferated in today's modern world. Hundreds of Internet sites and Web portals are constantly accessed by millions of users for obtaining information, news, entertainment, and the like, via the World Wide Web. Many aspects of everyday life are becoming electronically information based, and the access, control, and the use of such electronic information, through the use of various types of electronic devices, is never far from hand. For example, a desktop computer allows access to banking functions (e.g., checking, bill paying, etc.), shopping (e.g., groceries, clothing, etc.), the weather, and virtually any other need of an individual.","As described above, the emergence of the Internet is changing many aspects of modern life. However, no area is undergoing as rapid and significant changes as the manner in which businesses operate. Today, large and small companies are using the Web to communicate with their partners, to connect with their back-end systems, and to perform electronic commerce transactions. Users will soon witness the evolution of today's e-business and e-commerce into e-services. Examples of e-services are stock trading, customized newspapers, real-time traffic report, or itinerary planning.","The e-service environment creates the business opportunity for providing value-added services, which are delivered by composing existing e-services, possibly offered by different providers. For instance, an \u201ceMove\u201d composite service could support customers for relocations, by composing truck rental, furniture shipments, address change, and airline reservation services in a flexible way to meet various needs for each relocation transaction. Hence, the Web is rapidly becoming the platform through which many companies deliver e-services to businesses and individual customers. E-Services are typically delivered in their primitive forms, called basic services.","Prior art traditional approaches to service composition allow the definition of a composite service as a business process, specified by a graph of nodes (corresponding to activities or services to be executed). In such models, new services are started as other services complete, according to the control flow specifications. However, many processes need to synchronize the activations of their nodes with the occurrence of specific events. For instance, in a candidate interview process, suitable actions must be performed when the candidate decides to withdraw his\/her job application: reservations for interview rooms need to be canceled, e-mails need to be sent to the members of the interview team, and the withdrawal need to be logged in the corporate Human Resource database. The withdrawal of a job application is asynchronous with respect to the activities in the candidate interview process, that is, it does not necessarily occur in correspondence to the completion of a process activity, but can instead occur at any time during process execution. To specify this kind of behaviors, a composition model should provide primitives that enable the definition of paths in the process that are activated as a given event occurs.","In addition, events can also provide for dynamic data exchange between composite services and external applications. For instance, consider a car rental process. This process needs to manage situations in which an accident occurs to the rented car. If the process model and system can manage events, then the process designer can specify suitable actions to be taken as a car accident event is detected. In addition, this event may carry some parameters, such as the car license plate number or the time needed for repair. These data can be made accessible to the process instance in order to react appropriately to the situation.","Depending on the type of events supported by the process model, the specifications of many other behaviors become possible: for instance, events could be used to synchronize the execution of activities executed in two (or more) different process instances, to suspend the execution of a process until a given date and time, to define processes whose instances are created periodically or as a given event occurs, to detect and react to manipulations of a given process variables, to handle exceptional situations such as the inability to invoke a service, and many others.","There currently exists no comprehensive model or architecture that enables the delivery of such value-added services. There exists no solution that supports the specification, deployment, and management of composite e-services, i.e., of e-services that are carried out by invoking several other basic or composite services. There exists no solution that provides the service developer with a simple, easy to use, yet powerful mechanism for defining services. The present invention provides novel solution to the above requirements.","In one embodiment, the present invention is implemented as an event management method for a computer implemented business process management system. The method includes the step of executing a plurality of events representing aspects of a business process. The business process is implemented by progressive execution through the events. A plurality of event nodes for the business process are executed. The event nodes define points in the progress of the business process for communicating with an external process to exchange information.","Reference will now be made in detail to the embodiments of the invention, examples of which are illustrated in the accompanying drawings. While the invention will be described in conjunction with the embodiments described below, it will be understood that they are not intended to limit the invention to these embodiments. On the contrary, the invention is intended to cover alternatives, modifications and equivalents, which may be included within the spirit and scope of the invention as defined by the appended claims. Furthermore, in the following detailed description of embodiments of the present invention, numerous specific details are set forth in order to provide a thorough understanding of the present invention. However, it will be obvious to one of ordinary skill in the art that the present invention may be practiced without these specific details. In other instances, well known methods, procedures, components, and circuits have not been described in detail as not to unnecessarily obscure aspects of the present invention.","Embodiments of the present invention provide a comprehensive model and architecture that enables the delivery of value-added E-business services by extending traditional composition model with a rich and flexible event model. Embodiments of the present invention provide a solution that supports the specification, deployment, and management of composite e-services, i.e., of e-services that are carried out by invoking several other basic or composite services. Embodiments of the present invention is a solution that provides the service developer with a simple, easy to use, yet powerful mechanism for defining services by composing basic ones.","For example, in one embodiment, an event management method for a computer implemented business process system is implemented. The method includes the step of providing a plurality of events (and other steps) for representing many aspects of a business process, the business process implemented by progressing through the events sequentially, in parallel, or conditionally. A plurality of event nodes are provided for the business process, the event nodes defining points in the progress of the business process for communicating with an external process to exchange information or to synchronize the execution. The business process is executed by executing its steps, which may include event nodes. Events can be classified into state change events, error events, application events, and temporal events. The event nodes can be request nodes and publish nodes. The computer implemented process and even definition can be XML (extensible markup language) based.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 1","FIG. 1"],"b":["100","111","112","113","114","100","114","114"]},"Referring still to , embodiments of the present invention utilize the multiple event types  to enable the delivery of value-added services by, for example, implementing a model and architecture that supports the specification, deployment, and management of composite e-services, i.e., of e-services that are carried out by invoking several other basic or composite services. The event management functionality of the embodiments utilize the multiple event types  to provide the service developer with a simple, easy to use, yet powerful mechanism that extends traditional mechanisms for defining services by composing basic ones.","Embodiments of the present invention allows the definition of a composite service as a business process, specified by a graph of nodes (corresponding to activities or services to be executed) which link together a series of, for example, state change events , error events , application specific events , and temporal events . In such models, new services are started as other services complete, according to the control flow specifications. Additionally, embodiments of the present invention provide for the synchronization of the activation of multiple processes and their respective nodes with the occurrence of specific events.","Referring still to , in the embodiments of the invention described below, the different types of events  relevant in the context of service composition, and the approach to event management is described. Classes of events  are defined with respect to the manner in which they are handled by embodiments of the invention, and characteristics of events in each class (e.g., classes -) are described. One objective of the embodiments of the event model and language has been that of making the specifications of the event to be sent or received as simple as possible. Preferably, events , regardless of their type, are specified in a uniform fashion, using the same formalism and the same underlying basic concepts, so that the process designer does not need to learn different languages to specify different kinds of events. High-level constructs can be provided, especially in the critical area of time management, to further simplify event handling.","In accordance with embodiments of the present invention, a composite service refers to a workflow process that composes other basic or composite services. A process can be modeled by a graph (e.g., ), which defines the order of execution among the nodes in the process. The graph may include service, decision, and event nodes. Service nodes represent the invocation of a basic or composite service, decision nodes specify the alternatives and rules controlling the execution flow, while event nodes enable service processes to send and receive several types of events.","A process instance is an enactment of a process definition. The same process may be instantiated several times, and several instances may be concurrently running. Service nodes can access and modify data included in process variables. Each process instance preferably has a local copy of these variables, and embodiments of the present invention controls access to these data.","Different types of events  in accordance with embodiments the present invention are now described. Embodiments of the present invention can capture and manage several different types of events. Some of them are used for exception handling purposes, some for time-based synchronization of service execution, other for synchronization and dynamic data exchange with other services, and other again to monitor service state changes and react appropriately. Preferably, events can carry parameters. Different types of events have different parameters (although a few parameters are common across all event types).","One type of event is a state change event . State change events  are raised by changes in the process instance state. This includes the execution state of nodes and process instances as well as the value of process variables. For instance, in a bank account management process, actions may need to be taken when the value of process variable balance goes below a threshold. Events of interest can be restricted to a specific node, process instance, or process definition, or they can be unrestricted (capturing every state change).","It should be noted that the term \u201cprocess\u201d, \u201cworkflow\u201d, and \u201ccomposite service\u201d are used synonymously. Additionally, it should be noted that an instance of a process refers to the execution of a process.","State-change events  preferably have the following parameters:\n\n","Error events  are notifications of run-time errors occurred during process execution, such as when no service can be selected to execute a node. As for the previous type, events of interest can be restricted to those caused by a specific node, process instance, or process definition, or they can be unrestricted.","Preferably, error events  have the following parameters:\n\n","Application-specific events  do not have a predefined semantics; they are qualified by their name, may carry several parameters, and are explicitly notified to the process engine by another process or by external parties. For instance, the customer Cancel event in a travel reservation process might represent the situation in which the customer cancels his\/her travel reservation. The candidate withdrawal event introduced above is also an example of application-specific event.","Application-specific events  may carry an arbitrary number of parameters. The only event parameters common to all application-specific events  (besides the name) are the occurrence time and the event type, with the same semantics as above.","Temporal events  are raised at specified points in time. Embodiments of the present invention can detect and raise three types of temporal events :\n\n",{"@attributes":{"id":"p-0037","num":"0054"},"figref":"FIG. 2","b":["200","200","200"]},"Referring still to , the steps - describe a candidate interview process. As depicted in , lozenges represent service nodes (e.g., steps , , , , , , , and ), circles with incoming\/outgoing arrows represent event nodes (e.g., step  and step ), while the other symbols represent decision nodes.","Process  begins in step , as when a new instance of the process  is invoked by a candidate applying for employment. In step , service Get Interview data is invoked to collect information regarding the candidate, the interview team, and a set of possible interview dates. Then, in step , if the candidate is a foreigner, process  proceeds to step , where a lawyer analyzes his\/her immigration status to determine whether the candidate can work in the US (or is likely to be able to get a visa) or not. If not, the hiring manager is informed and the process  terminates. Otherwise, process  proceeds to step  and , where an administrative assistant defines the interview schedule, according to the schedule and availability of the interview team members. After the schedule has been fixed, three services are invoked in parallel: \u201cBook rooms\u201d (e.g., step ) will book conference rooms according to the schedule provided. \u201cSend info to interview team\u201d (e.g., step ) will send the candidate's curriculum information to the team members. Finally, \u201cArrange candidate trip\u201d (e.g., step ) is executed by a company travel agent and will take care of verifying the candidate's need in terms of travel tickets, hotels, and car, for a three-day period centered on the interview day.","Referring still to , after steps -, no action needs to be taken until the interview date. In step , this is modeled by the event node \u201cwait interview date\u201d, that will let the flow of process  proceed only at the specified interview day. The event node in step  is followed by the parallel activation of several services in step  (one for each member of the interview team), that will collect feedback from every interview team member. The parallel activation of several instances of the same service of step  is modeled in the present embodiment by a Multiservice node. Finally, in step , as all inputs have been gathered, the hiring manager makes the final decision. An event node in step  notifies the final decision to all other interested processes and\/or services, that will take care of performing the appropriate actions (e.g., start the hiring process or notify the candidate about the rejection). Process  subsequently ends in step .","Thus, in the Candidate Interview example of process  above, multiple event types (e.g., as shown in ) are used to synchronize the execution of the multi-service interview so that it starts on the appropriate date and to publish the result to any interested party. Achieving these (and many other) behaviors without an integrated event management process would be unduly hard and time-consuming.","Referring now to , a diagram depicting the different types of event nodes  in accordance with one embodiment of the present invention is shown. The description of  below describes the manner in which composite services can publish or receive events. In the embodiments of the present invention, points in process execution where events should be sent or received are specified by means of event nodes, e.g., event nodes . There are preferably two types of event nodes: Publish nodes  and Request nodes . Publish nodes  raise an event, which can be notified to other process instances or to other, external parties. Publish nodes  are non-blocking: as the event is notified, process execution proceeds immediately by activating the subsequent node.","As shown in , request nodes  correspond instead to requests of events. Request nodes  are blocking: as a request node  is reached in the control flow of a given process instance, the flow (along the path where the request node  is defined) stops until an event with the specified characteristics is delivered to that node.","Publish nodes  denote points in the flow where a process notifies and communicates with an application-specific event. The specification of a publish node  includes the definition of the event to be generated, described in one embodiment by an XML string. In particular, a set of <name,value>pairs specifies the event parameters. Values may be defined by constants or may refer to the name of a process variable, meaning that the actual value of the parameter is set to the value of process variable at the time the event node is executed.","For example, the candidate interview process  described above publishes an event notifying the interview result (to be captured by all other defined services interested in this event). Assume also that the event must indicate the name of the candidate, the evaluation result, and the interview date. In one embodiment, such a node can be specified as follows:",{"@attributes":{"id":"p-0046","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<PUBLISH_NODE ID=\u201cIntervlew_Result\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<NAME> Interview Result <\/NAME>"]},{"entry":[{},"<EVENT_PARAMETER>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<PAR_NAME> candidate_name <\/PAR NAME>"]},{"entry":[{},"<VALUE> $Candidatelnfo.Name <\/VALUE>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/EVENT_PARAMETER>"]},{"entry":[{},"<EVENT_PARAMETER>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<PAR_NAME> result <\/PAR_NAME>"]},{"entry":[{},"<VALUE> $Decision <\/VALUE>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/EVENT_PARAMETER>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/PUBLISH NODE>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In the above example, event parameters \u201ccandidate_name\u201d and \u201cresult\u201d are set by means of process variables.","A publish node  can restrict the target processes or service that can receive the event. Possible restrictions, specified by means of the <RESTRICT TO> tag, include process (only other instances in the same process can receive the event), group (only processes of the same group can receive the event), system (only process executed by the same engine can receive the event), or all (every body, including external process execution, can receive the event\u2014This is the default).","Request nodes  denote points in a process where the execution is suspended (along the path where the event node is defined), waiting for an event to be delivered. In one embodiment, each request node  execution can receive at most one event. In order for a node to request another event, the node must be fired again. As the event is delivered to the request node , process instance execution proceeds with the activation of the node connected in output to the request node . Preferably, embodiments of the present invention do not require events to have a name. If defined, event names such as InterviewResult are handled like any other parameter.",{"@attributes":{"id":"p-0050","num":"0067"},"figref":["FIG. 4","FIG. 4","FIG. 2"],"b":["410","420","410","200","411","412","413"]},"At runtime , the engine executes the software managing the business process. For example, during the execution, successive nodes are executed . Designated request nodes are assigned to special purpose clients to request information (e.g., provide an input to the process). Depending upon the specific rules in place for the particular process, specific next nodes are requested and executed (request node ) and subsequent request nodes are used, for example, to obtain information from other parties involved in the business process. In this manner, the rules influence the progression and result of the business process.","Preferably, for each request node , the process designer specifies a request rule that defines the kind of events the node is interested in (specified by a filtering rule) and the event data that should be captured within process variables (specified by a capturing rule). The filtering rule is mandatory, while the capturing rule must be specified only if the requesting process needs to capture event data into local process variables. These components are described in greater detail below.","Filtering rules in accordance with the present embodiments are now described. Different event languages may have different expressive power in defining and capturing the events of interest among those of a given type. For instance, consider the problem of defining the application-specific events that a process needs to monitor. Simple event languages could allow the indication of the event of interest by specifying the event name, such as car accident. However, more sophisticated functionality is often needed. For instance, the process designer may need to specify interest in events related to car accidents for a car of a given brand or with a given plate number, not just in any car accident. Indeed, a process instance is only interested in car accident events related to the car that the instance is managing, not in every car accident event. Having every process receive and manage any car accident event would be burdensome both from a process design and from a system perspective. Hence, an advanced event language could allow the use of a finer granularity in specifying the events of interest, by defining constraints over event parameters, that is, by defining an event filtering condition.","Preferably, the event filter may be defined in terms of constant values or in terms of references to process variables. For instance, the plate number of interest could be given as a constant or it can be a reference to a process variable, so that each process instance can receive a different event, and exactly the event that is relevant to that instance.","As another example of frequently needed functionality that goes beyond what provided by simple name-based event matching, consider the case in which a process wants to be notified when a temporal\/instant event occurs, in which the date and time are not fixed beforehand, but can be defined during process instance execution, and indeed can differ from instance to instance. The timestamp could be specified as a reference to a process variable (of the type timestamp) rather than being a constant value: in this way the timestamp to be monitored can be set on a per-instance basis by a previously executed service node.","Referring still to , with request node definition (e.g., request node definition ), a filtering rule in a request node defines the characteristics of the events that the node is interested in receiving. Generally, request nodes can be defined to request error, state change, temporal, or application-specific events. Preferably, all event types are specified using the same formalism: the event of interest is simply defined by a Boolean condition over event parameters and process variables. Typically, the condition compares event parameters with constants or with the value of process variables to check if these values match. At runtime , when a request node is reached by the control flow (i.e., it is fired), process variables present in the filtering rule are replaced with their current value, and a request for the event of interest is issued. The embodiments of the present invention will deliver to the node the first event that satisfies the condition and that occurred after the request node activation (hence, events are not cached).","Examples of filtering rules for the different event types are now provided.\n\n",{"@attributes":{"id":"p-0058","num":"0076"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<REQUEST_NODE D=\u201ccatch_xor_errors\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<NAME> Catch Xor Errors <\/NAME>"]},{"entry":[{},"<FILTER event_type=\u201cerror\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"error_type=\u201cxor_multipleoutput\u201d and"]},{"entry":[{},"process_instance_id=$proc_inst_id"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/FILTER>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/REQUEST_NODE>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0059","num":"0077"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<REQUEST_NODE ID=\u201ccatch_xor_errors\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<NAME> Catch Xor Errors <\/NAME>"]},{"entry":[{},"<FILTER event_type=\u201cerror\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"error_type=\u201cxor_multiple_output\u201d and"]},{"entry":[{},"process_definition_id= \u201ccandidate_interview\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/FILTER>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/REQUEST_NODE>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"State change events: State change events of the present embodiments are specified in the same fashion as error events. The designer specifies the event type (event type=\u201cstate_change\u201d) and the other parameters on which he\/she wants to put constraints in defining the event of interest. For instance, suppose that in a bank account management process, a request node monitors variable balance in order to check when it turns from a positive to a negative value. This node can be specified as follows:",{"@attributes":{"id":"p-0061","num":"0079"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<REQUEST_NODE ID=\u201ccatch_negative_balance\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<NAME> Catch Negative Balance <\/NAME>"]},{"entry":[{},"<FILTER_event_type=\u201cstate_change\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"variable_name=\u201cbalance\u201d and old value >0 and new"]},{"entry":[{},"value <0"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/FILTER>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/REQUEST_NODE>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following node monitors instead every negative variation of the balance:",{"@attributes":{"id":"p-0063","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<REQUEST_NODE ID=\u201ccatch_negative_variations\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<NAME> Catch Negative Variations <\/NAME>"]},{"entry":[{},"<FILTER event_type=\u201cstate_change\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"variable_name=\u201cbalance\u201d and"]},{"entry":[{},"old value < new value"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/FILTER>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/REQUEST_NODE>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Application-specific events: In this type of events, all attributes (except the event type and the occurrence time) are event-specific. As an example of filtering rule on application-specific events, consider the candidate interview process, and assume that the process designer is interested in capturing events that denote that the candidate has withdrawn its application. We assume that this situation is described by an event whose name is Candidate Withdrawal and whose additional parameters are candidate_name (the name of the candidate), position (the code of the position for which he\/she withdrew the application), and reason (the motivation for the cancellation, if provided).","In order to capture this event, the process designer can specify the following filtering condition:",{"@attributes":{"id":"p-0066","num":"0084"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<REQUEST_NODE ID=\u201ccatch_Candidate_Withdrawal\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<NAME> Catch Candidate Withdrawal <\/NAME>"]},{"entry":[{},"<FILTER event_type=\u201capplication_specific\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"event_name=\u201cCandidate Withdrawal\u201d and"]},{"entry":[{},"candidate_name=$candidateName and"]},{"entry":[{},"position=$advertisedPosition"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/FILTER>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/REQUEST NODE>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The above rule specifies that the event node is requesting an application-specific event named \u201cCandidate Withdrawal\u201d, in which the value of parameters candidate_name and position equal the value of process variables candidateName and advertisedPosition at the time the request node is activated.","Temporal events: In principle, \u201ccapturing\u201d temporal events should be different from capturing other event types. The purpose here is to specify interest in the occurrence of a given timestamp, and there is no \u201cevent\u201d that is actually generated and that can be captured. However, to allow the specification of events of interest in a uniform fashion, we use a similar formalism for the specification of these events as well. In fact, the process designer may assume that, conceptually, embodiments of the present invention often raise a temporal event every second. This allows temporal events to be specified by a filter on the occurrence time parameter, by using a simple language that enables the definition of date-time, interval, and periodic times.",{"@attributes":{"id":"p-0069","num":"0087"},"figref":"FIG. 5","b":["501","502","503","502","503","504","505"]},"Instant events: Instant events are specified by giving the timestamp at which the event should be raised. The time can be omitted, and it preferably defaults to 00:00:00. The date can be expressed in the yyyy-mm-dd format, or it can be a symbolic date, such as Thanksgiving or Christmas. Symbolic dates are discussed below. The timestamp can also be specified as a reference to a process variable. Preferably, only the equality operator can be used to define a constraint over the timestamp. For example, the request node Wait Interview Day of the Candidate Interview process can be specified as follows:",{"@attributes":{"id":"p-0071","num":"0089"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<REQUEST_NODE ID=\u201cOn_InterviewDay\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<NAME> On Interview Day <\/NAME>"]},{"entry":[{},"<FILTER event_type=\u201ctemporal_instant\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"timestamp=$InterviewDay 9:00:00"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/FILTER>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/REQUEST_NODE>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Interval events: Interval events are defined by an interval and a base event. The event will be raised as the specified interval has elapsed since the specified base event. For instance, a node that request the event \u201cA week after the candidate withdrawal\u201d is specified as follows:",{"@attributes":{"id":"p-0073","num":"0091"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<REQUEST_NODE ID=\u201ccatch_delay\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<NAME> Catch delay <\/NAME>"]},{"entry":[{},"<FILTER event type= \u201ctemporal_interval\u201d> interval= 7"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"00:00:00"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/FILTER>"]},{"entry":[{},"<BASE_EVENT>"]},{"entry":[{},"<FILTER event_type=application_specific\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"event_name=\u201ccandidate Withdrawal\u201d and candidate"]},{"entry":[{},"name=$candidateName and"]},{"entry":[{},"position=$advertisedposition"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/FILTER>"]},{"entry":[{},"<\/BASE_EVENT>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/REQUEST_NODE>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The interval is preferably specified in the format dd hh:mm:ss. Intervals in terms of months and years cannot be specified, since the length of months and years may vary, and it would therefore be undetermined. As usual, the interval may be defined by a process variable instead of being hard-coded into the node.","Note that the request also includes the specification of the base event, that may include references to process variables. Hence this request node is actually monitoring two events, both of which may include references to process variables. To avoid ambiguities, define a clear semantics, and maintain a consistent behavior among request nodes, the value of process variables is preferably determined as the node is started, and the interval is computed starting from the first base event received after the node is started. Subsequent events matching the base event filter criteria are disregarded.","Periodic events: Periodic events can be specified by providing the base time that defines when the first of the (potentially infinite) series of periodic event should occur, and the time period that should elapse between two successive occurrences of the periodic event. The time period (preceded by keyword every) is expressed in terms of days, hours, minutes, and seconds (just like a temporal interval). For instance, in order to specify an event that should be raised every 20 minutes, starting from 12:00am on Dec. 24, 2000, the designer defines the following rule:",{"@attributes":{"id":"p-0077","num":"0095"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<REQUEST_NODE ID=\u201ccatchperiod\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<NAME> Catch Period <\/NAME>"]},{"entry":[{},"<FILTER event_type=\u201ctemporalperiodic\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"period=\u201cevery 20:00 from 2000-12-24 00:00:00\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/FILTER>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/REQUEST_NODE>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Embodiments of the present invention also allow the definition of an (optional) upper limit timestamp, preceded by keyword to in the period definition, that denotes a point in time from which no more periodic events are generated. For instance, the following expression:\n\nperiod=\u201cevery 20:00 from Dec. 24, 2001 00:00:00 to Dec. 25, 2001 00:00:00\u201d\n\nspecifies that the request node wants to receive a periodic event every 20 minutes from 12:00am on Dec. 24, 2001 to 12:00am on Dec. 25, 2001.\n","Finally, embodiments of the present invention allow the specification of periodic events occurring at a specific time of the day, day of the month, or day of the year. These are defined analogously to a timestamp, where the coarser granularities are omitted. For instance, a node that captures events occurring on the 27th day of the month is specified as:\n\nperiod=\u201con 27 00:00:00\u201d\n\nAgain, remind that a request node can receive only one event. To be able to receive the next periodic event, it must be fired again (for example, it can be inside a loop).\n","Capturing rules in accordance with the present embodiments are now described. Besides defining the event of interest by means of the filtering rule, a request node may also capture the value of event attributes into local process variables. For this purpose, the filtering rule is coupled with a capturing rule. For instance, assume that in the candidate interview process, the designer also wants to capture, from Candidate Withdrawal events, the reason why the candidate canceled the job application.","When filtering this event in the event request, an interview process instance is not interested in the reason of the cancellation: events of interest are all those events that are related to the person and the position for which the process is scheduling the interview, regardless of the cancellation reason. However, when the event is received, the process needs to capture the cancellation reason for bookkeeping purposes (or possibly to propose higher compensations if the reason was that the candidate has received another offer).","Event parameters can be captured into process variables by specifying a set of pairs <process variable name, event attribute name>, meaning that the specified process variable takes the value of the specified event parameter as the event is delivered to the request node. The complete definition of a request node interested in candidate withdrawals including the capturing rule-is therefore as follows:",{"@attributes":{"id":"p-0083","num":"0101"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<REQUEST_NODE ID=\u201cCandldate_Withdrawal\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002<NAME> Candidate Withdrawal <\/NAME>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<FILTER event_type=\u201capplication-specific\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"event_name=\u201cCandidate Withdrawal\u201d and"]},{"entry":[{},"candidate_name=$candidateName and"]},{"entry":[{},"position=$advertisedPosition"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/FILTER>"]},{"entry":[{},"<CAPTURE>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<PAR_NAME> reason <\/PAR NAME>"]},{"entry":[{},"<VAR_NAME> candidate_cancellation_reason <\/VAR"]},{"entry":[{},"NAME>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/CAPTURE>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/REQUEST_NODE>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0084","num":"0102"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<REQUEST_NODE ID=\u201cAt_Christmas\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<NAME> At Christmas <\/NAME>"]},{"entry":[{},"<FILTER event_type=\u201ctemporal_instant\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"timestamp=2001-$$Christmas"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/FILTER>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/REQUEST_NODE>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Note that in general, symbolic dates may identify a time of the day, day of the month, or day of the year. For instance, \u201cChristmas\u201d specifies a day and a month. Hence, to specify a timestamp, the specification must be completed by defining the values for the other time granularities. Instead, the specification needs not be completed to specify periodic events. In fact, a way to define request expression capturing periodic events is exactly that of specifying a timestamp without the coarser granularities. Hence, the event \u201cevery Christmas\u201d can be specified as:",{"@attributes":{"id":"p-0086","num":"0104"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<REQUEST_NODE ID=\u201cEveryChristmas\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<NAME> Every_Christmas <NAME>"]},{"entry":[{},"<FILTER event_type=\u201ctemporalperiodic\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"period= \u201con $$Christmas\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/FILTER>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/REQUEST_NODE>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Christmas symbolic date is simply an easier and user-friendlier way to define a time or time period. However, the power of symbolic dates goes beyond this syntactical rewriting. For example, assume that process designers need to model process fragments to be executed every Thanksgiving. The way to specify this behavior would be to define a request node that waits until Thanksgiving before firing the subsequent nodes. Without symbolic dates, all process designers that need to define such a request node would have to compute the date corresponding to the next Thanksgiving and define the node accordingly. In addition, every year the definition of the request node would have to be updated. By using the symbolic date \u201cThanksgiving\u201d, it is the system who takes care of computing and maintaining the correct date year after year.","In addition to predefined symbolic dates, users can define their own symbolic dates. This is useful since many symbolic dates have meaning within a given company or community. For instance, the salary payday is typically company-specific. The definition of process fragments activated on these dates is very difficult without symbolic dates, since such dates may not have a clearly defined \u201cformula\u201d such as in the Thanksgiving example. On the contrary, they may vary and they may even be undefined at process definition time. However, by using symbolic dates, request nodes can be easily defined and maintained, since it is the system who will take care of delivering the events when appropriate.","Users can create new symbolic dates by specifying the symbolic date name and the timestamps in which a symbolic dates occurs. Timestamps can be specified in two ways:\n\n","Referring now to , an architecture  in accordance with embodiments of the present invention are now described, specifically, the architecture that integrates the above-mentioned event management functionality into the composite services management. Preferably, event nodes are implemented by reusing the main process management functionality, i.e., that of selecting and invoking e-services. Composite service definition are processed by a precompiler  that replaces publish and request nodes with ordinary service nodes, assigned for execution to a specific service, called a Broker Interface (BI) . The generated service nodes will include all the parameters necessary to the BI  to process the event publication or request. In particular, the BI  will receive the XML string defining the node as well as the value of all process variables included in it, needed in order to appropriately filter or publish the event.","Event dispatching is managed by a message broker . There are a number of message brokers available on the market that provide publish-subscribe functionality (e.g., WebMethods Enterprise, STC eGate, or BEA eLink) required by embodiments of the present invention. Hence, existing messaging platforms can optionally be used.","The BI  acts as the link between the management engine  and the message broker . When a publish node is scheduled by the management engine , management engine  realizes that it has to invoke the BI  (as specified in the service node definition generated by the precompiler), thereby providing the XML definition of the publish node and the specified process variables as parameters. The BI  then prepares (from the XML definition of the publish node and from the received process variables) the actual event to be published, connects to the message broker, and publishes the event.","Referring still to , event requests are instead processed by subscribing to the event of interest with the message broker. When a request node is scheduled by the engine , engine  invokes the BI , providing it with the definition of the request node (and in particular of the filtering expression). The BI  then subscribes with the message broker  for events that satisfy the filter. When such an event is published by the broker  (either generated by management engine  or by other applications ) the BI  extracts the parameters of interest as specified in the capturing rule and returns them to the process engine , that in turn updates the process variables of the requesting process instance.","One difference for this scheme comprises requests for temporal events. The problem is that these events are not generated by the engine  or by other applications . Hence, besides subscribing to the event (just like for any other event request), the BI  also takes care of generating the event when appropriate. The BI  computes, from the request node definition, the timestamp at which the request node wants to be notified. Then it sets up an alarm. When the alarm expires, it publishes an event with the timestamp, so that it will be received (due to the previous subscription) and delivered to the requesting node.",{"@attributes":{"id":"p-0095","num":"0115"},"figref":["FIG. 7","FIG. 7"],"b":["605","603","603"]},"In step , a special purpose application is executed. This application can be configured to accomplish a specialized function, for example, some function not usually encountered during a management process execution (e.g., notifying security, etc.). In step , the special purpose application receives a node from the runtime engine (e.g., the engine  from ). In step , the application reads the rules defined in the node. Subsequently, in step , the special purpose application subscribes for the event with the message broker .","Thus, embodiments of the present invention are directed towards a method and system for offloading execution and resources for resource constrained network devices. Embodiments of the present invention provide a comprehensive model and architecture that enables the delivery of value-added E-business services, by extending service composition models with a rich, flexible, and easy to use event mechanism. Embodiments of the present invention provide a solution that supports the specification, deployment, and management of composite e-services, i.e., of e-services that are carried out by invoking several other basic or composite services. Embodiments of the present invention provide a solution that provides the service developer with a simple, easy to use, yet powerful mechanism for defining services by composing basic ones. Additionally, embodiments of the present invention provide a solution that supports the dynamic modification of service definitions while they are under operation, as required for businesses to be operated in dynamic environments such as that of Internet-based e-service communities.","The foregoing descriptions of specific embodiments of the present invention have been presented for purposes of illustration and description. They are not intended to be exhaustive or to limit the invention to the precise forms disclosed, and obviously many modifications and variations are possible in light of the above teaching. The embodiments were chosen and described in order best to explain the principles of the invention and its practical application, thereby to enable others skilled in the art best to utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the Claims appended hereto and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and form a part of this specification, illustrate embodiments of the invention and, together with the description, serve to explain the principles of the invention:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
