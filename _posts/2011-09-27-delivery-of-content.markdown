---
title: Delivery of content
abstract: Systems and methods are provided for a pull model for delivery of data such as content metadata among interconnected content delivery networks (CDNi), allowing for accurate metadata information in appropriate edge servers in a large CDNi system. When a request for an asset in a CDN (CDN A) is to be served by another, interconnected CDN (CDN B), a link to the location where the metadata is stored within CDN A can be provided along with the request for CDN B to serve the content to the user. The link can be passed to the appropriate edge device in CDN B, which can retrieve the metadata to set up and support the content session. The encrypted information can also be passed recursively by CDN B to other CDNs with which it is interconnected.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08984144&OS=08984144&RS=08984144
owner: Comcast Cable Communications, LLC
number: 08984144
owner_city: Philadelphia
owner_country: US
publication_date: 20110927
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority to provisional application 61\/448,454, filed Mar. 2, 2011, titled \u201cPull Model for Delivery of Metadata Among Interconnected Content Delivery Networks,\u201d the contents of which are incorporated herein by reference for all purposes.","A content delivery network (CDN) may be a network of servers that delivers pieces of content (e.g., web pages, audio, video, etc.) to end users, typically on behalf of a content provider. A CDN typically disperses its servers across geographically different locations, and copies the media content to each of those distributed servers, where it's stored (cached). When a user requests a particular piece of media content from the content provider that is stored in the CDN, the CDN is capable of redirecting the request to a server in its network that is closer\/closest to the user, and that server in turn delivers the content directly from its cache (first retrieving it from the originating server if the cached copy cannot be found). CDNs are effective in speeding the delivery of content of Web sites with high traffic and Web sites that have global reach. The closer the CDN server is to the user geographically, the faster the content is typically delivered to the user. CDNs also provide protection from large surges in traffic. The process of accessing content via a CDN is typically transparent to the user.","Ideally, a CDN should be able to deliver content requested by an end user regardless of the user's geographic location or the service provider through which the user is connected. However, the footprint of the CDN might not reach far enough to reach that user (geographically or in terms of network connectivity), or might not be close enough to the user to gain the benefits (e.g., reduced access latency) that a more distributed CDN could provide. In those cases, a CDN interconnect (CDNi) model becomes desirable, whereby several standalone CDNs collaborate so that their collective footprint can be extended. Typically, CDNi setups have a primary CDN with whom the content provider has a business relationship and which is the main party responsible for handling that Content Provider's traffic. At the same time, the primary CDN also has peer relationships with other CDNs, and whenever it needs their help (e.g., to serve content outside its own footprint) its servers follow agreed-upon protocols that communicate with a secondary CDN's servers and ask them to handle the corresponding requests on their behalf.","In order to securely deliver content to a requesting user or client, a CDN edge server (also referred to as a surrogate) uses content metadata, e.g. information about how the content must be handled. The content metadata may include, e.g., geo-blocking policies, availability windows, links to the source of the content, etc. When a request for a piece of content arrives at the surrogate, the server examines the corresponding metadata and makes a decision about if and how to honor the request. CDN metadata is typically prepositioned statically to the edge surrogates, i.e., the metadata is pushed to each surrogate from a CDN's central unit of control. The surrogate must receive the content metadata before serving a request. This requires the CDN provider to schedule time to update all surrogates before a piece of content can be served. In a CDN-Interconnect (CDNi) environment, where two or more CDNs collaborate with each other to deliver content, the CDNi metadata may be shared across CDNs. However, the preposition\/push method becomes unscalable and difficult to manage because there may be too many surrogates to update, and the original CDN might not know how many surrogates the secondary CDN has or where they are. In addition, metadata refresh cycles in the two CDNs might not be synchronized, and the primary CDN may not be able to determine whether the update effort is worth the resource expense with respect to some surrogates, since the original CDN may never ask the second CDN to serve the corresponding content on its behalf.","The following presents a simplified summary in order to provide a basic understanding of some aspects of the disclosure. The summary is not an extensive overview of the disclosure. It is neither intended to identify key or critical elements of the disclosure nor to delineate the scope of the disclosure. The following summary merely presents some concepts of the disclosure in a simplified form as a prelude to the description below.","Aspects of this disclosure relate to systems and methods for a pull model for delivery of metadata content among interconnected content delivery networks (CDNi). Using the pull model described herein, one can maintain accurate metadata information in appropriate edge servers in a large CDNi system. When a request for an asset in a CDN (CDN A) is to be served by another interconnected CDN (CDN B), a link to the location where the metadata is stored within CDN A can be encrypted and provided along with the request for CDN B to serve the asset to the user. The link can be passed to the appropriate edge device in CDN B, which can decrypt the link information and retrieve the metadata to set up and support the content session. The encrypted information can also be passed recursively by CDN B to other CDNs with which it is interconnected, and they can decrypt and use the link to retrieve the metadata from CDN A as well.","According to an illustrative aspect, a first CDN may receive, from a client device, a request for a content item. The first CDN may determine to assign the request for the content item to a second CDN different from the first CDN, and send a query from the first CDN to the second CDN to obtain a location associated with the content item in the second CDN. After receiving a query response from the second CDN, the first CDN sends the location of the content item in the second CDN to the client device. Subsequently, the first CDN receives from the second CDN a request for metadata associated with the content item, and sends the metadata associated with the content item to the second CDN. According to illustrative aspects, the query from the first CDN to the second CDN may include a location of the metadata stored within the first CDN.","According to another illustrative aspect a second CDN may receive from a first CDN a query for a location associated with a content item to be served to a client device by the second CDN. The second CDN may send a query response to the first CDN. The query response may include the location associated with the content item, and may optionally be signed or encrypted. After sending the query response to the first CDN, the second CDN may receive from the client device a request for the content item. Based on the request for the content item, the second CDN may query the first CDN for metadata associated with the content item and determine whether to serve the content item to the client device based on the metadata received from the first CDN. These and other aspects of the disclosure will be described in greater detail below.","In the following description of various illustrative embodiments, reference is made to the accompanying drawings, which form a part hereof, and in which is shown, by way of illustration, various embodiments in which aspects of the disclosure may be practiced. It is to be understood that other embodiments may be utilized, and structural and functional modifications may be made, without departing from the scope of the present disclosure.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["100","100","100","101","102","103","103","101","102"]},"There may be one line  originating from the central office , and it may be split a number of times to distribute the signal to various homes  in the vicinity (which may be many miles) of the central office . The lines  may include components not illustrated, such as splitters, filters, amplifiers, etc. to help convey the signal clearly, but in general each split introduces a bit of signal degradation. Portions of the lines  may also be implemented with fiber-optic cable, while other portions may be implemented with coaxial cable, other lines, or wireless communication paths.","The central office  may include a termination system (TS) , such as a cable modem termination system (CMTS), which may be a computing device configured to manage communications between devices on the network of lines  and backend devices such as servers - (to be discussed further below). The TS may be as specified in a standard, such as the Data Over Cable Service Interface Specification (DOCSIS) standard, published by Cable Television Laboratories, Inc. (a.k.a. CableLabs), or it may be a similar or modified device instead. The TS may be configured to place data on one or more downstream frequencies to be received by modems at the various homes , and to receive upstream communications from those modems on one or more upstream frequencies. The central office  may also include one or more network interfaces , which can permit the central office  to communicate with various other external networks . These networks  may include, for example, networks of Internet devices, telephone networks, cellular telephone networks, fiber optic networks, local wireless networks (e.g., WiMAX), satellite networks, and any other desired network, and the interface  may include the corresponding circuitry needed to communicate on the network , and to other devices on the network such as a cellular telephone network and its corresponding cell phones.","As noted above, the central office  may include a variety of servers - that may be configured to perform various functions. For example, the central office  may include a push notification server . The push notification server  may generate push notifications to deliver data and\/or commands to the various homes  in the network (or more specifically, to the devices in the homes  that are configured to detect such notifications). The central office  may also include a content server . The content server  may be one or more computing devices that are configured to provide content to users in the homes. This content may be, for example, video on demand movies, television programs, songs, text listings, etc. The content server  may include software to validate user identities and entitlements, locate and retrieve requested content, encrypt the content, and initiate delivery (e.g., streaming) of the content to the requesting user and\/or device.","The central office  may also include one or more application servers . An application server  may be a computing device configured to offer any desired service, and may run various languages and operating systems (e.g., servlets and JSP pages running on Tomcat\/MySQL, OSX, BSD, Ubuntu, Redhat, HTML5, JavaScript, AJAX and COMET). For example, an application server may be responsible for collecting television program listings information and generating a data download for electronic program guide listings. Another application server may be responsible for monitoring user viewing habits and collecting that information for use in selecting advertisements. Another application server may be responsible for formatting and inserting advertisements in a video stream being transmitted to the homes . And as will be discussed in greater detail below, another application server may be responsible for enabling chat sessions.","An example premises , such as a home, may include an interface . The interface  may comprise a modem , which may include transmitters and receivers used to communicate on the lines  and with the central office . The modem  may be, for example, a coaxial cable modem (for coaxial cable lines ), a fiber interface node (for fiber optic lines ), or any other desired modem device. The modem  may be connected to, or be a part of, a gateway interface device . The gateway interface device  may be a computing device that communicates with the modem  to allow one or more other devices in the home to communicate with the central office  and other devices beyond the central office. The gateway  may be a set-top box (STB), digital video recorder (DVR), computer server, or any other desired computing device. The gateway  may also include (not shown) local network interfaces to provide communication signals to devices in the home, such as televisions , additional STBs , personal computers , laptop computers , wireless devices  (wireless laptops and netbooks, mobile phones, mobile televisions, personal digital assistants (PDA), etc.), and any other desired devices. Examples of the local network interfaces include Multimedia Over Coax Alliance (MoCA) interfaces, Ethernet interfaces, universal serial bus (USB) interfaces, wireless interfaces (e.g., IEEE 802.11), Bluetooth interfaces, and others.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2","b":["200","201","201","202","203","204","205","200","206","207","208","200","209","210","209","210","101","109"]},"With reference to , some of the various features described herein provide a system architecture  to enable a set of CDNs to interoperate. System  may include a plurality of content delivery networks (CDN) CDN-A , CDN-B , and CDN-C  interconnected by one or more networks . Each CDN , ,  may include a routing service (e.g., hosted on a server) , , , whose purpose is to receive requests, e.g., from end users, and route them to the best positioned edge servers within its network. The CDN's may also include a large set of geographically distributed edge servers , , ; and a metadata service (e.g., hosted on a server) , , , which may centralize storage of metadata for the content that the CDN manages. A plurality of users may connect to the network, and in turn request content from one or more of the CDNs , , . For illustrative and explanatory purposes, only a single user  is depicted in .","System architecture  allows for a dynamic, on-demand, pull model for the sharing of CDNi metadata is provided. The pull model described herein, in one aspect, eliminates the need for two or more collaborating CDNs to share (and periodically refresh) their respective CDN metadata repositories (e.g., each entire repository). According to an illustrative aspect, when CDN-A  decides that its content would be better served by a second CDN, e.g., CDN-B , CDN-A  queries CDN-B  to determine how to redirect the user, passing a reference to the necessary metadata stored in its metadata service-A . CDN-B  prepares and returns a new URL, or another type of message, to access a copy of the requested content from its own network, and attaches to the URL a reference to the metadata that CDN-A  had provided. CDN-A  returns this URL to the end user, who next attempts to access the content from CDN-B . An edge server on CDN-B  will process the request and extract the reference to the metadata record from the request URL and query the metadata server from CDN-A  to retrieve it on-demand or \u201con the fly\u201d. To achieve high scalability and availability, CDN-B  may further cache the content metadata within its network (within any limitations set by CDN-A), either at the corresponding edge server or in its own metadata server CDN-B . The model described herein may also be used in a recursive fashion, e.g., when CDN-B decides to push the request to a third CDN, e.g., CDN-C , and so on.","With reference to , an illustrative method for performing a pull model is now described. Initially, in step , a user\/client sends a request for content to a first CDN, e.g., CDN-A , by sending a request that eventually reaches the routing service  associated with CDN-A. In step , the routing service  (RS-A) of CDN-A , upon receiving the request, decides whether it can handle the request itself or whether it should invoke a peer (in this example, CDN-B). The decision can be made for any desired reason (e.g., load balancing).","If RS-A determines that CDN-B should serve the content, then in step  RS-A contacts a an agreed-upon API (e.g., public or private API) offered by the routing service-B (RS-B)  of CDN-B , asking RS-B where RS-A should redirect the client  so that client  in turn retrieves the content from one of CDN-B's servers. The query from RS-A to RS-B may be performed via an HTTP POST command which may pass in its body information regarding the client's request (e.g., client's IP address), and may also include a URL pointing to the CDN metadata stored in metadata server-A  that CDN-B may need to handle the request.","In step  RS-B  constructs a new URL (Redirect URL), referencing a resource within its network that corresponds to the piece of content originally requested by the user from CDN-A, the URL may either be a direct reference to a particular edge server  that will serve the content for this particular request, or more generally to the central routing service  which would then pick the edge server to handle the request. The Redirect URL may include an element (e.g., an encrypted query parameter) that allows a component of CDN-B (either RS-B  itself, or an edge server  inside CDN-B) to de-reference the content metadata URL given by RS-A . Additionally, the URL may be protected and signed in such a way that only RS-B  or edge surrogates  of CDN-B can interpret and verify its validity, e.g., via a Hashed Message Authentication Code (HMAC). Once the Redirect URL is ready, RS-B  returns it in the body of a response (e.g., OK response) to RS-A .","When RS-A  receives the HTTP OK response (HTTP status code ), RS-A  extracts the Redirect URL from the body, and uses it in step  to in turn redirect the end-user to this new location via an HTTP 302 Redirect response.","The client in step  then issues a new GET command to the Redirect URL (which, as described above, points to the copy of the media resource in CDN-B's network). Once CDN-B edge server  (acting as a surrogate) receives the end user's request in step , it validates the signature in the URL and extracts the metadata URL provided as part of the URL. In step  the surrogate  follows that URL to download the metadata from CDN-A's metadata server  (or finds it already in its cache). After following the rules and policies found in the downloaded metadata, the surrogate  in step  determines whether to serve or deny the client request, how to build a cache key from the URL, and where to find the content if not already cached. Finally, in step , surrogate  serves the content to client .","According to an alternative aspect, recursion may be used. In the recursive example, CDN-B may decide in turn to pass on the content request to CDN-C. In such a scenario, RS-B first retrieves the CDN metadata provided by RS-A, e.g., in the HTTP POST, and makes it available as its own resource (RS-B may optionally also fetch the actual content from CDN-A). RS-B then repeats a portion of the process illustrated in : it contacts RS-C via another HTTP POST, and passes along the URL to the metadata resource in CDN-B. If RS-C decides to handle the content request, CDN-C builds a Redirect URL with the characteristics described above, and returns the Redirect URL to RS-B, which returns the Redirect URL to RS-A, which returns the Redirect URL to client . When user\/client issues the next GET or similar command to CDN-C, one of the surrogates of CDN-C verifies the validity of the Redirect URL, retrieves the metadata from CDN-B, and proceeds as usual.","Additional information and steps performed during a recursive example are now described with reference to . In step  a user (e.g., user ) sends a GET command to CDN-A to retrieve a piece of content. In step  RS-A determines to invoke CDN-B to serve the content request. In step  RS-A sends the user's IP address and the metadata URL in a first POST message to RS-B. In step  RS-B receives the first POST request from RS-A, and determines to ask CDN-C to serve the content request. In step  RS-B first extracts the metadata URL from the POST request (from step ) and downloads the metadata (and optionally the content as well) from CDN-A and stores it in its own metadata server . In step  RS-B repeats this process with CDN-C by sending, via an HTTP POST request to the routing service in CDN-C , the user's location information (e.g., the end user's IP address) and a URL to the copy of the metadata in its own metadata service .","RS-C receives the second POST message in step  and determines that CDN-C will serve the content request. In step  RS-C constructs the new Redirect URL following the guidelines above, and in step  RS-C signs the URL with signatures that its own CDN-C servers may verify. Finally, in step , CDN-C returns the new Redirect URL to CDN-B, in the HTTP 200 OK response.","In step  RS-B sends its own HTTP 200 OK response to RS-A, with the URL it received from CDN-C. RS-A retrieves the URL in the HTTP 200 OK response's body and in step  sends the URL to client  as its HTTP 302 Redirect response to the original end user's request.","In step  client  sends a second GET to CDN-C's edge server . In step  CDN-C edge server  validates the signature of the request and extracts the metadata URL. In step  CDN-C follows the metadata reference provided in the URL and downloads the metadata from CDN-B's metadata server ) In step  CDN-C edge server  examines the data in the metadata and decides if it should serve or deny the client request. In step , CDN-C delivers the content (or a denial of content) to client .","The method steps described herein are illustrative in nature, and may be altered according to various aspects. Method steps may be combined, split into more minute steps, omitted, or altered in order so long as the resulting functionality provides the same result.","Using the above described systems and methods for a pull model for delivery of metadata among interconnected content delivery networks, one can maintain accurate metadata information in appropriate edge servers in an interconnected content delivery network (CDNi). As described above, if a request for an asset in a CDN (CDN A) would be better served by another, interconnected CDN (CDN B), a link to the location where the metadata is stored within CDN A can be encrypted and provided along with the request for CDN B to serve the asset to the user. The link can be passed to the appropriate edge device in CDN B, which can decrypt the link information and retrieve the metadata to set up and support the content session. The encrypted information can also be passed recursively by CDN B to other CDNs with which it is interconnected, and they can decrypt and use the link to retrieve the metadata from CDN A as well.","Other alternatives may be used as well. For example, instead of or in addition to the architecture shown in , a first CDN (e.g., CDN-A) may inform a servicing CDN (e.g., CDN-C) to obtain metadata directly from the Content Provider using similar messaging between CDNs as is described above, so that neither the initial CDN (CDN-A) nor any intermediary CDN (e.g., CDN-B) are required to maintain a copy of the metadata. It will thus be appreciated and understood that modifications may be made without departing from the true spirit and scope of the present disclosure. The description is thus to be regarded as illustrative instead of restrictive on the present disclosure."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present disclosure is illustrated by way of example and not limited in the accompanying figures in which like reference numerals indicate similar elements and in which:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
