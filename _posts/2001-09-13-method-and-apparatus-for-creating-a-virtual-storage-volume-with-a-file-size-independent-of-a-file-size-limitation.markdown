---
title: Method and apparatus for creating a virtual storage volume with a file size independent of a file size limitation
abstract: A method and apparatus for creating a virtual storage volume with a file size independent of a file size limitation of a computer. In one embodiment, a storage area is randomly selected from among a plurality of available storage areas. A determination is made as to whether the selected storage area contains at least a predetermined amount of free space. If so, the predetermined amount of free space is allocated on the selected storage area to create an allocated storage area. A symbolic link to the allocated storage area is written in a directory associated with the virtual storage volume. Data destined for the virtual storage volume is then written in the allocated storage area.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07136981&OS=07136981&RS=07136981
owner: ConocoPhillips Company
number: 07136981
owner_city: Houston
owner_country: US
publication_date: 20010913
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The present invention relates generally to file systems for computers, and more particularly, to a method and apparatus for creating a virtual storage volume with a file size independent of a file size limitation imposed by a computer file system.","An operating system is a program that is used to manage other programs (i.e., application programs) in a computer system. In a typical computer system, the operating system is initially loaded into the computer by a boot program. Once loaded, the operating system can perform a number of services for the application programs. Such services include determining the order in which certain applications can run, managing the sharing of resources (e.g., memory) between the applications, and managing input and output to and from hardware devices, such as disk drives. The application programs make use of the operating system by requesting services, for example, through the use of an application programming interface (API). A user of the computer system can also interact directly with the operating system, for example, through the use of a graphical user interface (GUI).","With respect to managing input and output between the application programs and one or more hardware devices, each type of operating system is typically closely related to and may be designed to work with a specific file system that manages the data on the disk drives. Some examples of operating systems include Unix, Linux (a variant of Unix) and Windows.","A file system typically specifies a convention for naming files, including, for example, the maximum number of characters in a file name, the type of characters that can be used, the format of file extensions that are permitted, etc. The file system also specifies the algorithmic or logical locations where a file can be placed. Windows and Unix-based operating systems typically employ file systems that use a hierarchical or tree-like structure wherein a file is placed in a directory or subdirectory located at a particular position in the hierarchical structure.","Depending on the addressing structure used, a file system can possess two different but related constraints: a limitation on the maximum size of an individual file, and a limitation on the maximum size of the file system itself.","The size of an individual file may be physically limited by the number of bits used in describing an address space of the file. For example, some versions of Linux, which were designed for use with a hardware architecture of 32 bits, use a four byte integer to address the contents of a file. Thus, the maximum size of a file is limited to 2 bytes minus some number of bytes, i.e., about 2 gigabytes.","The size of the file system itself is also limited. While the address space of a file system is typically represented by all or part of an eight byte integer, the maximum size of the file system is usually set to a predetermined limit. Limiting the maximum size of the file system provides a number of advantages. For example, the computer system may require less memory and may be able to locate files faster than if the file system were larger. On older Linux systems, for example, the maximum size of the file system was set at one terabyte. That is, regardless of the size of a physical disk, the disk must be divided into a plurality of partitions, each of which is less than or equal to the maximum allowable size of the file system.","In many applications, particularly seismic applications, a maximum file size of, for example, 2 gigabytes can be very restrictive. Seismic work typically involves the processing of large volumes of seismic data. These volumes of data often span hundreds of magnetic tapes, and can be several hundred gigabytes in size. Typically, as seismic data tapes are entered into a system, the contents of several tapes are copied to multiple files in one directory or data storage area. Then, when that data storage area becomes full, subsequent tapes are copied to many other data storage areas, which can be scattered around the computer system. Because the maximum size of the file system may be limited, for example, to 1 terabyte, one data storage area may not have sufficient free space to hold all of the incoming data. Thus, the user is required to manage the data by recording the locations (in the various data storage areas) of each part of the data. Accordingly, a need exists for a method for creating a virtual storage volume with a file size independent of a file size limitation imposed by the file system used by a computer system.","One aspect of the present invention is directed to a method and apparatus for creating a virtual storage volume having a size that is independent of a file size limitation of a computer system. A physical storage area is randomly selected from among a plurality of available physical storage areas. A determination is made as to whether the selected physical storage area contains at least a predetermined amount of free space. If so, free space corresponding to the predetermined amount is allocated on the selected physical storage area. A symbolic link to the allocated physical storage area is written in a user's directory which is then associated with the virtual storage volume. Data associated with a file which is destined for the virtual storage volume can then be written in the allocated physical storage area. Once the allocated physical storage area has been exhausted, if there remains a need to store additional data associated with the same file, the above steps can be repeated to create another allocated physical storage area, with a symbolic link thereto being written in the user's directory previously described. Thus, the size of the virtual storage volume can exceed the file size limitation of the computer system.","Another aspect of the present invention is directed to a method and apparatus for performing a file operation with respect to a virtual storage volume having a file size that is independent of a file size limitation of a computer system. A symbolic link, which is located in a user's directory, is read. The symbolic link points to an allocated storage area, which had been randomly selected from among a plurality of available storage areas. The file operation is then performed with respect to the allocated storage area.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["110","120","130","140","130","140","135","145"]},"The client computer  is also connected to a third server computer  via a second communications network . The third server computer  runs a third operating system having an associated file system for interfacing to a third storage array . Each of the first, second, and third storage arrays , ,  can include a plurality of storage devices or can be a single storage device. Storage device as used herein can encompass hard disk drives, tape drives, solid state memory devices, or other types of storage devices. The third operating system can be different from the first and second operating systems or can be the same operating system.","The client computer  can be a personal computer or a workstation. The server computers , ,  can be personal computers, workstations, minicomputers, or mainframes. The client computer  and the server computers , ,  can be bi-directionally coupled to the first and second communications networks ,  over communications lines, via wireless systems, or any combination thereof. For example, client computer  and the server computers , ,  can be coupled to one another by various private networks, public networks or any combination thereof, including local-area networks (LANs), wide-area networks (WANs), or the Internet. Those skilled in the art will recognize many modifications that can be made to this configuration without departing from the scope of the present invention.","A virtual storage volume can be created in accordance with the present invention, for example, by a user at the client computer  creating a file in the user's directory, or loading data from a tape or other storage device to a file in the user's directory. Conventionally, files located in the user's directory are conventionally subject to a number of constraints: the maximum file size, the maximum file-system size, and the size of the user's local hard disk drive. The present invention advantageously allows the user to disregard these conventional constraints and to treat the user's directory as a substantially unlimited data storage area. Thus, the user can process and load data by manipulating what appears to the user to be a single file within the user's directory structure.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2"},"The process starts at step . In step , the computer receives a list of available storage areas which can be located in various file systems. The list can indicate only those storage areas that a particular user is permitted to access, or can indicate at least a portion of the storage areas that are connected to and accessible by the computer via one or more networks, such as the first and second communications networks , . In step , the computer randomly selects a storage area from among the available storage areas listed. The computer can also randomly select a storage area without employing the list of available storage areas. In this case, the computer can select a storage area from among the storage areas to which it is connected or has access.","Then, in step , the computer determines whether the selected storage area contains at least a minimum amount of free (e.g., unused or unallocated) space. The amount of free space required can be determined by a system administrator based on the total amount of storage space available, or can be based on other considerations. For example, the use of about a 250 megabyte block of space can result in more efficient utilization of available storage space, while the use of about a 2 gigabyte block can result in more efficient data transfer. The system administrator can set the required amount of free space via a parameter (e.g., a block size parameter) associated with the virtual storage volume. The computer can then look for an amount of free space in the selected storage area based on information representing the block size, which is stored in the parameter. The system administrator can also adjust the size of the block (e.g., based on currently available resources, such as the amount of available hard drive space) by editing the data stored in the block size parameter.","If the selected storage area has at least the required amount of free space available (Yes in step ), the process proceeds to step . If the selected storage area does not have at least the predetermined amount available (No in step ), the process returns to step , wherein the computer randomly selects another storage area.","By randomly selecting a storage area, rather than selecting the storage area having the most amount of free space, the process of the present invention advantageously distributes input\/output activity among the various server computers , ,  and associated storage arrays , , . The random selection of a storage area provides the advantage that, even when multiple users are creating their respective virtual storage volumes, the allocated storage areas are likely to be in different file systems. Thus, multiple users are not likely to be accessing the same file systems at the same time, which can cause an input\/output bottleneck to occur.","Then, in step , the computer allocates an amount of free space in the selected storage area that is equal to the required amount. The amount of free space allocated can be determined, for example, by the block size parameter. In step , the computer writes a symbolic link to the allocated storage area in the user's directory. The symbolic link points to and enables access to the allocated storage area.","In step , the computer writes the data to be stored in the virtual storage volume in the allocated storage area. As data is written into the allocated storage area, the amount of space remaining will diminish. As long as there is space available in the allocated storage area, additional data can be placed there. However, once there is no more space remaining in the allocated storage area (No in step ), and if there remains additional data to be stored in the virtual storage volume, the process returns to step  wherein another storage area is randomly selected. Alternatively, the process can return to step  to receive a list of available storage areas, which list can be changed, for example, due to network conditions, since the last time that a storage area was selected. If no additional data is to be stored in the virtual storage volume, the process ends at step .","The process thus allows a large number of allocated storage areas to be linked to a single virtual storage volume, such that the total amount of space available for a single file (i.e., the aggregate of the allocated storage areas) is greater than the maximum allowable file size as determined by the operating system. Further, as the allocated storage areas can be on different file systems, the total amount of space available can be greater than the maximum size of any particular file system.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3","b":["300","135","145","155","300","135","145","155"]},"More specifically, in this embodiment, the file \u201cUserFile.DAT\u201d contains a symbolic link  that points to a disk DISK in the first storage array . Likewise, the files \u201cUserFile.001\u201d, \u201cUserFile.002\u201d, and \u201cUserFile.xxx\u201d respectively contain symbolic links , ,  that respectively point to DISK in the third storage array , DISK in the first storage array , and DISK in the second storage array . As the allocated storage areas are randomly selected from among the available storage areas, the files associated with the virtual storage volume are randomly interspersed among the first, second, and third storage devices , , .","In the embodiment of , the allocated storage areas and the user's directory containing the virtual storage volume are located in different file systems. In other embodiments, depending on the size of the user's directory, at least a portion of the allocated storage areas can be located in the same file system as the user's directory containing the virtual storage volume.","While the embodiment of  allows the user to see each of the plurality of symbolic links representing the files that make up the virtual storage volume, in other embodiments, the constituent files of the virtual storage volume can be hidden from the user and represented by a single symbolic link which points to all of the allocated storage areas used to create the virtual storage volume. The user can thus only see one symbolic link in the user's directory for each virtual storage volume.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 4"},"The process starts at step . In step , the computer receives an instruction to perform a file operation with respect to the virtual storage volume. For example, the instruction can be to read or load into memory a virtual storage volume named \u201cUserFile\u201d.","In step , the computer locates a symbolic link associated with the virtual storage volume. In the embodiment of , virtual volume \u201cUserFile\u201d includes a file named \u201cUserFile.DAT\u201d containing a symbolic link . Then, in step , the computer reads the symbolic link (e.g., symbolic link  of the file \u201cUserFile.DAT\u201d), which points to an allocated storage area (e.g., DISK of the first data storage area ). The file containing the symbolic link is preferably located in a directory associated with the virtual storage volume, such as the user's directory .","Then, in step , the computer locates the allocated storage area pointed to by the symbolic link. The computer then performs the requested file operation (step ) with respect to the allocated storage area pointed to by the symbolic link (e.g., DISK  of the first data storage area ). Once the file operation has been performed with respect to a first allocated storage area of the virtual storage volume, the process returns to step  to read a second file associated with the virtual storage volume (e.g., \u201cUserFile.001\u201d), locate the next allocated storage area, and perform the file operation with respect to the allocated storage area. Thus, the process repeats steps  through  until the file operation has been performed with respect to all the files of the virtual storage volume (No in step ). The process then ends at step .","Although the present invention has been fully described by way of examples and with reference to the accompanying drawings, it is to be understood that various changes and modifications will be apparent to those skilled in the art without departing from the spirit and scope of the invention. Therefore, unless such changes and modifications depart from the scope of the present invention, they should be construed as being included therein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A more complete understanding of the present invention and its advantages will be readily apparent from the following Detailed Description of the Preferred Embodiments taken in conjunction with the accompanying drawings. Throughout the accompanying drawings, like parts are designated by like reference numbers and in which:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
