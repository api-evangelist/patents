---
title: System and method for multiplexed data back-up
abstract: A server computer receives back-up data from individual client computers and inserts them into a buffer within a shared memory area. The server associates an identification tag with each set of back-up data which identifies from which particular client computer the data was received. The server then multiplexes the back-up data and the identification tags onto a tape. Data from a particular client is de-multiplexed from the tape by scanning all of the identification tags on the tape and pulling off the tape any data which is associated with the identification tag corresponding to the particular client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07127535&OS=07127535&RS=07127535
owner: Veritas Operating Corporation
number: 07127535
owner_city: Cupertino
owner_country: US
publication_date: 20040426
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application is a continuation of U.S. patent application Ser. No. 10\/263,442, entitled \u201cSYSTEM AND METHOD FOR MULTIPLEXED DATA BACKUP TO A STORAGE TAPE AND RESTORE OPERATIONS USING CLIENT IDENTIFICATION TAGS\u201d, filed Oct. 2, 2002, now U.S. Pat. No. 6,742,092, which is a continuation of U.S. patent application Ser. No. 08\/755,004, entitled \u201cSYSTEM AND METHOD FOR MULTIPLEXED DATA BACKUP TO A STORAGE TAPE AND RESTORE OPERATIONS USING CLIENT IDENTIFICATION TAGS\u201d, filed Nov. 22, 1996 now U.S. Pat. No. 6,487,644.","1. Field of the Invention","The present invention relates generally to systems and methods for enterprise data management and more particularly, to multiplexing back-up data from several sources onto a single storage device.","2. Description of the Background Art","Networked client\/server computer systems are becoming increasingly more common as the \u201cInformation Revolution\u201d progresses. In a client\/server computer network, the server computer is a computer that runs a set of services which are available to the client computers. The client computers are computers that run application programs through which the services are requested. The client computers and server computers are inter-coupled via a network. Such services may include database management, Network Information Services (NIS), and Network File System (NFS) programs. The services may operate within an environment that includes a back-up process. A back-up process copies data from an expensive disk storage media to a much less expensive tape storage media so as to provide a back-up copy of the data.","Typically when client computer data is backed-up by a server computer, the server computer backs-up client computer data to tapes in a serial manner, that is, one client computer at a time. This means that the server computer schedules a tape drive resource for backing-up a particular client computer's data, and the tape drive is dedicated solely to that client computer until the client computer stops sending back-up data. In this manner, the back-up data are written to tape in a standardized format. One such standardized format is provided by the Tape ARchive (TAR) function of the UNIX operating system.","Dedicating such a resource to a single client computer during a back-up operation often does not fully utilize a tape drive's data through-put capabilities and results in poor use of a critical resource. Therefore, what is needed is a system and method for keeping enough data available so that that a tape drive's full through-put capabilities may be most completely realized.","The present invention is a system and method for multiplexed data back-up. Within the apparatus of the present invention, a back-up tape manager performs the actual multiplexed data back-up through use of multiple reading processes, a writing process, and a de-multiplexing process. The reading processes monitor the network for back-up data packets from individual client computers and inserts the data into a buffer within a shared memory area. The writing process multiplexes each client computer's back-up data from the buffers in the shared memory with the back-up data from the other client computers onto a tape. The de-multiplexing process receives requests to retrieve data from a particular client computer that has been backed-up onto a tape and scans through the tape, copying only those sets of back-up data corresponding to that particular client computer. The de-multiplexing process reunites individual sets of back-up data from the tape into a single complete client computer data stream. An additional back-up scheduler unit enables the entire multiplexed data back-up process to be tailored to the performance capabilities of an individual set of client\/server computer network resources.","Within the method of the present invention, a server computer receives back-up data over a network from a client computer. The server computer routes the back-up data to an empty buffer within a shared memory area where it attaches a client identification tag to the back-up data. The server computer then scans all of the buffers within the shared memory searching for any full buffers. If a full buffer is found, the server computer copies the client identification tag and the back-up data from the buffer onto a tape in the order in which the buffers fill up regardless of which client computer their data came from.","The back-up data is de-multiplexed in response to a user selecting a file to be retrieved from a back-up image corresponding to a client computer. A client identification tag corresponding to the file is then identified. In response, the server computer scans all the client identification tags from within a set of multiplexed data stored on a source tape. When a client identification tag is found to correspond to the identified client identification tag, the server computer transmits the data block associated with that client identification tag back to the requesting user. Alternatively, data can be de-multiplexed in response to a user command when making a duplicate copy of the source tape.","According to the apparatus and the method described, back-up data may be received from a plurality of client computers and multiplexed onto a single tape drive. In this manner not only may the tape drive resources be used to their fullest capacity, but also client computers need not wait for other client computers to complete their data back-up before they can begin their own.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1","b":["100","100","102","112","118","104","114","120","106","116","122","100","108","102","112","118","110","108","126","124","124","128","130","126"]},"The buses , , ,  conform to Small Computer System Interface (SCSI) parallel interface standards (also known as ANSI X3T9.2). The network  conforms to ISO\/OSI (International Standards Organization\/Open System Interconnection) standards and Transmission Control Protocol\/Internet Protocol (TCP\/IP) standards.","The client computers , ,  may contain one of several operating systems, such as Windows NT, Mac, NetWare or UNIX.","Each client computer , ,  has a BacK-up ARchive (BKAR) process (not shown) for reading data from its disk , ,  and sending the data across the network  to the server computer . The data sent from a client computer to a server computer for back-up is referred to as \u201cback-up data.\u201d The server computer writes the back-up data into the storage unit .","The server computer  is comparable in capabilities to a SPARCcenter 2000 machines, manufactured by Sun Microsystems of Mountain View, Calif. The SPARCcenter 2000 machines run Solaris, a UNIX based multitasking operating system available from SunSoft Corp. Those skilled in the art will recognize that various platforms from other vendors, such as Windows NT, are also acceptable.","The server computer  contains processes for concurrently receiving back-up data from the client computers , ,  and multiplexing the back-up data onto the tape drives within the storage unit  at the highest rate of speed that the storage unit  can handle. The multiple data streams also enable the BKAR process within the client computers to take advantage of any extra server computer  capacity or network  bandwidth that may be available. The server computer  is further discussed with reference to .","The storage unit  is a conventional non-volatile information storage device, such as a tape stacker, a tape library, a tape carousel, a robotics device or an optical jukebox. While \u201ctape\u201d is the storage medium discussed throughout this specification, those skilled in the art recognize that other storage media may be used. The storage unit  includes a set of tape drives ,  each available for reading and writing a tape inserted therein. Preferably the number of tape drives ,  may range from as few as one to as many as 10 or more.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2","b":["108","108","202","204","206","208","210","216","218","210","212","214","208","110","216","126","202","204","206","208","216","210","212","214"]},"The processing unit  executes program instructions which are read from the program memory . The input device  includes a keyboard and\/or mouse for input of commands and data to the processing unit . The output device  is a display monitor for displaying information received from the processing unit . The network interface  provides the server computer  with a communications link with the client computers , ,  over the network . The network interface  includes a hardware interface, generally implemented as a Network Interface Card (NIC), which is not shown. The NIC provides necessary signal translation between the server computer  and the network . The storage unit interface  preferably provides an interface for routing data to and receiving data from the storage unit .","The program memory  stores computer readable program instructions for controlling how the processing unit  accesses, transforms, and outputs data, as described in detail below with reference to . The program memory  preferably comprises both a volatile and a non-volatile portion. Those skilled in the art will recognize that in alternate embodiments the program memory  could be supplemented with other computer useable mediums, including a compact disk, a hard drive or a memory card.","The shared memory  provides a set of memory buffers for storing back-up data received from the client computers , , . During back-ups, each client computer , ,  is preferably assigned its own dedicated memory buffer area within the shared memory . The shared memory  is also used for exchanging data between multiple processes stored within the program memory .",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 3","FIG. 2"],"b":["214","108","214","302","308","310","312","108","1","302","1","102","2","308","2","112","310","118","302","308","310","304","304","302","308","310","312","304","302","308","310","304","304"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 4","FIG. 3"],"b":["304","302","304","402","102","112","118","404","304","402","404","304","102","112","118","110"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 5","FIG. 1"],"b":["100","502","504","212","108","502","504"]},"The back-up scheduler unit  tailors the multiplexed data back-up process to the performance capabilities of an individual set of client\/server computer resources. Preferably at least the following four parameters are configurable. The first parameter is a maximum number of client computer's , ,  having data which can be backed-up and multiplexed onto any single tape drive ,  within the storage unit . This parameter is set based on the server computer's  ability to handle concurrent jobs. Each client computer , ,  requiring that its data be backed-up by the server computer  is defined by the server computer  as a \u201cjob.\u201d","The second parameter is a maximum number of jobs from a given schedule that can be multiplexed onto any one drive. This value is set individually for each schedule within a class. A \u201cclass\u201d is a collection of client computers with similar back-up needs. A \u201cschedule\u201d defines how the client computer is to be backed-up (i.e. a full-back-up or an incremental-back-up) and how many jobs it may be associated with. Each class has a set of back-up \u201cschedules\u201d associated with it. Thus, a client computer back-up job corresponds to a \u201cclient computer\u201d and \u201cschedule\u201d within a given \u201cclass.\u201d A single drive may accept jobs from different schedules so long as the maximum number of client computers , ,  backed-up per tape drive ,  is not exceeded.","The third parameter is a maximum number of jobs that may be run concurrently for any given class. The fourth parameter is a maximum number of client computer , ,  back-up jobs that may be concurrently run from any single client computer , , . While a preferred set of configuration parameters have been discussed, those skilled in the art will be aware of other parameters that need to be configured.","The back-up tape manager (BPTM)  is comprised of multiple reading processes , a writing process , and a de-multiplexing process . In the preferred embodiment, the server computer  creates one reading process for receiving back-up data from each of the client computers , , . Thus if there are three client computers, the server will create three reading processes. These reading processes  preferably operate concurrently. Each reading process monitors the network  for back-up data packets from the reading process's assigned client computer , ,  and inserts the data into a next available circular buffer within the client computer's assigned memory block , , . For example, if a reading process identifies a data packet from the client \u201c\u201d computer , then the reading process looks within the client \u201c\u201d memory block  for a buffer availability flag within the buffer availability flags  set to \u201cempty.\u201d When an \u201cempty\u201d buffer is found, the reading process creates a client ID tag  for the data packet, asks the network to place the data packet into the memory buffer, and sets the buffer availability flag to \u201cfull.\u201d","The writing process  is in communication with the reading processes  and copies each client computer's , ,  back-up data from its dedicated memory block , ,  buffer to be multiplexed with data from the other client computers onto a tape within one of the tape drives , . First, the writing process  requests that the back-up scheduler unit  assign a tape drive ,  for receiving a new set of back-up data. Next, the writing process  writes a \u201ctape header\u201d and a \u201cclient back-up header\u201d corresponding to the client computer , ,  from which the back-up data in the memory block , ,  is to be received. The \u201ctape header\u201d initializes a blank tape with a set of conventional tape drive information. The \u201cclient back-up header\u201d indicates that back-up data for a particular client computer exists on this particular tape. Next, the writing process  scans through all of the buffers within each of the memory blocks , ,  looking for buffer availability flags which are set to \u201cfull.\u201d Upon finding a \u201cfull\u201d buffer, the writing process  copies the client ID tag  and the back-up data  from the memory block's , ,  buffer onto the tape in one of the tape drives , . After the data has been copied to tape, the writing process  sets the buffer availability flag to \u201cempty\u201d and resumes scanning for other buffers with their buffer availability flags set to \u201cfull.\u201d Since the writing process  just copies to tape data from whichever buffers happen to be \u201cfull,\u201d the back-up data from any one client computer may be randomly distributed throughout the tape and intermixed with back-up data from all of the other client computers that the server computer  services. If a buffer is in the process of being filled by the reading process , the server computer  preferably does not wait for the buffer to be filled, rather the server computer  keeps skipping onto a next buffer which may already be full of data to be backed-up.","During the course of the multiplexing process, new client computers may have their data scheduled to be backed-up to tape. In such a case, the back-up scheduler unit  determines if any configuration parameters might be violated by adding the new client computer to the back-up schema. If none of the configuration parameters would be violated, the back-up scheduler unit  initiates a new client computer to transmit its back-up data to the server computer . The BPTM  also sets aside a new memory block and creates a new reading process  for the new client computer. The writing process  writes a new \u201cclient back-up header\u201d to the tape and writes new client computer's back-up data to tape in the same manner as discussed above.","The de-multiplexing process  processes requests to retrieve back-up data that has been multiplexed on a source tape. To begin, a user selects a backed-up file to either be restored to a client computer , ,  via the network  or to be duplicated onto a destination tape. The client computer's , ,  client identification tag is then identified and passed to the de-multiplexing process . Next, the de-multiplexing process  reads the tape looking at the client ID tag within each set of multiplexed data on the source tape. If the client ID tag within the set of multiplexed data matches the chosen client ID tag, the de-multiplexing process  discards the client ID tag from the set of multiplexed data and either transmits the remaining data block to the requesting client computer , ,  or writes the data block to a destination tape. The resulting image produced is a completely restored copy of the file. Preferably the restored image is in a TAR format.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 6","FIG. 6"],"b":["600","600","602","603","604","606","624","608","614","616","618","620","622","626","628","630","632","608","610","612","1","102","2","112","1","102","608","614","618","622","2","112","616","620","118","603","604","606","624","118","626","630","632","1","102","628"],"sub":["0 ","n-7 ","n-7 "]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 7","b":["108","702","502","128","130","704","502","128","130","128","102","102","128"]},"In step , a user commands the back-up scheduler unit  to limit the number of jobs that may be run concurrently for any given class. In step , a user commands the back-up scheduler unit  to limit the number of back-up jobs that may be received from a single client computer. After step  the preferred method of configuration ends.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 8","b":["802","506","804","804","506","110","102","112","118","806","506","102","112","118","302","308","310","402","806"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 9","b":["902","508","504","302","308","310","904","906","902","906","508","602","128","130","908","508","604","606","624","910","508","402","404","910"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 10","b":["102","112","118","1002","502","108","1004","502","502","1006","1006","504","128","130","1006"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 10","b":["1102","504","510","102","112","118","102","112","118","1104","510","610","608","1106","510","610","1108","1104","1108","510","610","608","1109","510","612","608","102","112","118","110","1110","510","612","608","1112","510","1104"]},"While the present invention has been described with reference to certain preferred embodiments, those skilled in the art will recognize that various modifications may be provided. Variations upon and modifications to the preferred embodiments are provided for by the present invention, which is limited only by the following claims."],"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 5","FIG. 1"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
