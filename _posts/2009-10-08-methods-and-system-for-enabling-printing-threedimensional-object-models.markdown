---
title: Methods and system for enabling printing three-dimensional object models
abstract: The present invention relates to a system and method of transforming an inconsistent 3D (three-dimensional) model of one or more 3D objects into a valid printable 3D model, said method comprising: (a) receiving an input model file and/or receiving modeler data, giving rise to an input 3D model having one or more parts; (b) analyzing said input 3D model and removing its one or more inconsistencies; (c) thickening the one or more parts of said 3D model, while preserving their functionality; and (d) unifying the union of interior volumes of said one or more parts, thereby removing self intersections and/or intersections between the two or more parts, giving rise to a valid printable 3D model.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08175734&OS=08175734&RS=08175734
owner: 3D M. T. P. Ltd.
number: 08175734
owner_city: Tel Aviv
owner_country: IL
publication_date: 20091008
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","DEFINITIONS, ACRONYMS AND ABBREVIATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","This Invention Relates to a Method and System for Transforming 3D (Three-dimensional) Digital Models into Valid Printable Models for 3D-printers Mainly, but not Only, for Architectural Use","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This invention generally relates to a method and system for transforming 3D (three-dimensional) digital models into valid printable models for 3D-printers mainly, but not only, for architectural use.","Throughout this specification, the following definitions are employed:","Convex. Hull: The convex hull of a set of geometric object in three dimensional space SR, denoted as conv(S), is the smallest (inclusion-wise) convex set containing S.","Convex Polyhedron: A convex polyhedron is a convex set QRgiven as an intersection of finite number of closed halfspaces H={h\u03b5R|A\u00b7h\u2266B}, where A\u00b7h\u2266B is a linear equation system. If it is assumed that n is the number of defining halfspaces, then A is a {3\u00d7n} matrix, B is vector of length n, and h is a variable that represents a point contained in the convex polyhedron.","Polytope: A bounded convex polyhedron P\u2282Ris a polytope.","Hyperplane: In three-dimensional space, a hyperplane is an ordinary plane; it divides the space into two half-spaces.","Supporting hyperplane: A hyperplane supports a set S in Euclidean space R, if S is entirely contained in one of the two closed half-spaces determined by the hyperplane, and S has at least one point on the hyperplane. A closed half-space is the half-space that includes the hyperplane.","Width: The width of a set SR, denoted as width(S), is the minimum distance between parallel hyperplanes supporting conv(S).","Directional width: Given a normalized vector v, the directional width, denoted as width(S), is the distance between parallel hyperplanes supporting conv(S) and orthogonal to v.","Polygon Mesh: A polygon mesh, also called an unstructured grid, is a collection of vertices, edges, and faces, defining the shape of a polyhedral object in 3D (three-dimensional) computer graphics and solid modeling, for example. The faces usually consist of triangles, quadrilaterals, or other convex polygons, since this simplifies rendering, but may also be composed of more general concave polygons, polygons with holes, and the like. Generally, the input should consist of the geometric information and sufficient topologic information, so that the incident relation between the geometric objects can be retrieved.","STL: STL is a file format native to the stereolithography CAD (Computer-Aided Design) software created by the \u201c3D Systems\u00ae\u201d company located in the United States. This file format is supported by many other software packages; it is widely used for rapid prototyping and computer-aided manufacturing. STL files describe the surface geometry of a three dimensional object without representation of color, texture, or other common CAD model attributes. The STL format specifies both ASCII (American Standard Code for Information Interchange) and binary representations. Generally, binary files are more common, since they are usually more compact. Also, generally, each STL file describes a raw unstructured triangulated surface by the unit normal and vertices (ordered by the right-hand rule) of the triangles using a three-dimensional Cartesian coordinate system.","3D (Three-Dimensional) Printing: is a unique form of printing being related to traditional rapid prototyping technology. A 3D object is created by layering and connecting successive cross-sections of material. 3D printers are usually faster, more affordable and easier to use than other additive fabrication technologies. The resolution of the printer is given in layer thickness and XY resolution in DPI (Dots Per Inch). Usually, the layer thickness is approximately one hundred micrometers (0.1 [mm] (millimeters)), while XY resolution is comparable to that of laser printers. The particles (3D dots) are approximately 50 to 100 micrometers (0.05 mm-0.1 mm) in diameter.","Rapid: It should be noted that the term \u201crapid\u201d is relative since construction of a model with contemporary methods can take, for example, from several hours to several days, depending on the method used and the size and complexity of the model. Additional systems for rapid prototyping can usually produce models in a few hours, although it can vary widely depending on the type of machine being used and the size and number of models being produced simultaneously.","Printable Model: A model is printable if it consists of a set of closed 2D (two-dimensional) manifolds, which bind volumes that do not intersect in their interior pair-wise, and also there exists a convex decomposition, such that the Z-directional (vertical) width of every convex piece is larger than a given threshold, and the XY-directional (horizontal) width of every convex piece is larger than a given threshold (X, Y, and Z are axes).","During the last decade, 3D printers have become common tools for producing 3D physical objects from digital data, such as computer-aided design (CAD) models and animation models. As a consequence, the use of rapid prototyping is now commonplace in many domains. In particular, architects can greatly benefit from 3D printing. They can produce accurate 3D architectural objects within a few hours instead of days or even months. These prototypes enable a natural mechanism for repeated reevaluation of architectural projects during their progress, and in particular the detection of difficulties at early stages. Nowadays, e 3D printing can be optimized for speed, low cost, and ease-of-use, making it suitable for inspection during the conceptual stages of engineering design when accuracy and mechanical strength of prototypes are less important.","Many well-known firms, such as the international \u201cZ Corporation\u00ae\u201d, \u201cObject Technologies\u00ae\u201d, and \u201c3D Systems\u00ae\u201d companies, and the \u201cStratasys\u00ae\u201d company, located in the United States, manufacture devices that produce 3D physical objects. These various devices are based on several different competing technologies. Evidently, 3D printers produced by different manufacturers, and also different models produced by the same manufacturer, pose different characteristics; they operate differently, and usually, are constrained to different restrictions. However, most if not all 3D printers, are based on additive manufacturing technology, which transforms the model to be fabricated into relatively thin horizontal cross-sections , and then creates successive layers , , etc. until the fabrication is complete, as schematically illustrated in . One of the differences between various 3D printers is the way layers are built to create portions of a 3D model to be printed. It should be noted that resolution is usually given in layer thickness, and the XY-resolution is given in dots per inch (DPI). It should be noted that the layer thickness is usually approximately a hundredth of a micrometer (0.1 mm), while XY-resolution is comparable to that of laser printers. The particles (3D dots) are approximately from a fiftieth to a hundredth of a micrometer (0.05 mm-0.1 mm) in diameter.","Conventional 3D printers can produce correct 3D physical objects only when fed with valid printable models. Such models are represented as polygonal meshes, for example, in the STL (Stereolithography) file-format. A valid model represented as a polygonal mesh comprises a polygon-soup (an arbitrary set of polygons) that represents a closed 2D-manifold, i.e., a watertight object with substantially no artifacts, such as self-intersections, or a collection of closed 2D-manifolds that substantially do not intersect each other. A valid printable model satisfies additional requirements imposed by various printing devices (different printing devices impose different requirements, as they are based on different technologies).","It should be noted that correct and consistent representations of 3D objects are required by conventional applications, such as modeling, simulation, visualization, CAD (Computer-Aided Design), CAM (Computer-Aided Manufacturing), finite element analysis, and the like. However, the acquired 3D models, whether created by hand or by automatic tools, usually contain errors and inconsistencies. For example, they can contain wrongly-oriented, intersecting, or overlapping polygons, cracks, and T-junctions; in addition, polygons might be missing, and topological information can be inconsistent. Problems are caused by designer errors or software errors in the modeling tool. These errors can be compounded by data exchange problems, such as: (i) automated transfer between CAD formats (e.g., IGES (Initial Graphics Exchange Specification), STEP (Standard for Exchange of Product model data), DXF (Drawing Interchange Format), binary files from CATIA (Computer Aided Three-dimensional Interactive Application) or AutoCAD), between B-Spline or NURBS-based (Non-uniform Rational B-Spline) formats; (ii) geometric transformation into an engineering analysis system (e.g., a triangular surface mesh). The techniques to reconstruct manifold models from acquired 3D models vary according to efficiency, robustness, level of automation, preconditions, etc. Level of automation is measured in terms of required user input. Preconditions include requirements, such as: (i) polygons in the input set are consistently oriented; (ii) most polygons are orthogonal; or (iii) the input parts are closed 2D-manifolds. According to one prior art approach, scene-relative tolerances are used to \u201cfill over\u201d cracks in the model or merge features within some tolerance. Other approaches, such as boundary-based approaches, try to infer solid structures from how input polygons mesh together, and they are likely to perform incorrectly in the presence of non-manifold geometry. According to the prior art, all approaches do not work well when the size of errors are larger than the smallest feature in the model. As degenerate input is commonplace in practical applications and numerical errors are inevitable, an algorithm implemented without considering this issue may yield incorrect results, get into an infinite loop, or just crash, while running on a degenerate, or nearly degenerate, input (for example, as presented by Lutz Kettner et. al. in the article, titled \u201cClassroom examples of robustness problems in geometric computations\u201d, published in \u201cComputational Geometry: Theory and Applications\u201d, volume 40, pages 61-78, 2008; or as presented by Stefan Schirra, \u201cRobustness and precision issues in geometric computation\u201d, \u201cHandbook of Computational Geometry\u201d (Jorg-Rudiger Sack and Jorge Urrutia, editors), chapter 14, pages 597-632, Elsevier Science Publishers, 2000.","According to the prior art, architects use CAD software, (e.g., AutoCad\u00ae and Revit\u00ae, developed by the AutoDesk\u00b0 company, located in the United States) to produce various 3D digital models. These models may comprise architectural parts, such as walls, stairs, roofs, and the like. The data that represent each part might be corrupted or contain inconsistencies. Even if the data is flawless, each individual part might be non-suitable for 3D printing, as it might be insufficiently thick, or it might be floating in midair defeating gravity. Finally, all parts being combined together may not be suitable for 3D printing, as they might intersect each other and contain singularities.","It should be noted that CAD software has been in continuous evolution since its inception approximately thirty years ago. Commercial 3D CAD technology emerged with engineering software design products, such as SolidWorks\u00ae, Inventor\u00ae, PTC\u00ae, SolidEdge\u00ae, and many others that provided improvements to analysis and design capabilities in 3D space. The first techniques for rapid prototyping became available in the late 1980s, and commercial 3D printers followed immediately after with the purpose to bring real tangible models produced by 3D CAD software designs. Today, they are ubiquitous in many domains; they are used for a wide range of applications and are even used to manufacture production quality parts in relatively small numbers. Some sculptors use the technology to produce complex shapes for fine arts exhibitions. Yet the quality of the software input is relatively unsatisfactory. The fact that the input data for the 3D printers could contain a number of errors has led to the development of post CAD diagnostic and repair software, such as Materialise\u00ae, Marcam\u00ae, and Deskartes\u00ae, and the like.","The problems of 3D printing have been recognized in the prior art, and various solutions have been proposed. For example, US 2005\/038549 discloses a system and method for performing adaptive modification of rapid prototyping build files. The method includes the step of reading a rapid prototyping build file that stores a digital description of a three dimensional object. The invention also includes the operation of selecting a build file correction algorithm from a plurality of build file correction algorithms. For another example, U.S. Pat. No. 5,705,117 presents a stereolithography process for developing a prototype part, in which inserts of a non-photopolymer material are included within the resulting part so as to develop a functioning prototype part. In order to allow the inserts to be placed within the developing prototype part, a series of STL files are defined for forming the prototype part in individual sections. A non-photopolymer insert is manually positioned on one section of the developing part each time a section is formed. In addition, U.S. Pat. No. 7,343,216 presents a method for assembling an architectural site model facilitating repeated placement and removal of foliage to the model. The site model is constructed as an upper shell portion and a lower base portion, while the model foliage is attached to the shell portion. The upper shell portion of the site model is configured for removable attachment to the lower base portion. Thus, removal of the shell from the site model also allows the foliage to be removed from the site model in one motion. Further, JP 11339070 presents a method for generating surface models by surfacing solid sub-models in a sub-file, taken in a main file, and united with a main solid model. For this, an altering operation, such as partial cutting, projection addition of the main solid model, is performed.","Based on the above observation, there is a continuous need in the art to provide a method and system enabling the transform of possibly corrupted and inconsistent models represented as polygonal meshes (e.g., non-manifold meshes, intersecting triangles, meshes with T-junctions, and the like) into valid printable models to be used for a relatively large set of printing devices.","Also, there is a continuous need in the art to provide a method and system enabling the transform of possibly corrupted or inconsistent digital models of 3D objects into models of physical objects that can be automatically constructed by using Solid Freeform Fabrication (SFF), a process also referred to as Rapid Prototyping (RP).","In addition, there is a need in the art to provide a method and system enabling handling models found in the architectural field, such as buildings and landscapes, as well as models found in many other fields, such as scientific visualization and physical simulation. Further, there is a need in the art to provide a method and system configured to fix corrupted models and to remove inconsistencies for various processes, such as 3D printing, assembly planning, and the like. Still further, there is a need in the art to provide a method and system enabling thickening operation of thin parts, while preserving their functionality, removing possible intersections and singularities and unifying all parts into a single printable model that consists of one or more closed 2D-manifolds with substantially no artifacts.","A method of transforming an inconsistent 3D (three-dimensional) model of one or more 3D objects into a valid printable 3D model, said method comprises:\n\n","According to an embodiment of the present invention, the method further comprises importing the input model file and\/or the modeler data.","According to another embodiment of the present invention, wherein the importing further comprises one or more of the following:\n\n","According to still another embodiment of the present invention, the method further comprises scaling or clipping the 3D model according to one or more predefined criterions.","According to still another embodiment of the present invention, the scaling is performed automatically to fix the bounding box defined by a 3D printer.","According to still another embodiment of the present invention, the scaling is performed manually based on a user-provided predefined scale factor.","According to still another embodiment of the present invention, the method further comprises controlling each step of said method by means of a viewer with a GUI (Graphical User Interface).","According to still another embodiment of the present invention, the method further comprises modifying the 3D model based on a physical analysis for connecting two or more disconnected model parts and forming a singly-connected 3D model.","According to a further embodiment of the present invention, the method further comprises dividing the 3D model into one or more separated sub-models.","According to still a further embodiment of the present invention, the method further comprises selecting at least one separated sub-model to be printed substantially independently.","According to still a further embodiment of the present invention, the method further comprises removing one or more singularities from the 3D model.","According to an embodiment of the present invention, the thickening further comprises one or more of the following:\n\n","According to another embodiment of the present invention, the thickening further comprises:\n\n","According to still another embodiment of the present invention, the method further comprises exporting the 3D model to be 3D printed.","According to still another embodiment of the present invention, the exporting further comprises one or more of the following:\n\n","According to still another embodiment of the present invention, the output model file is an STL (stereolithography) file to be used for 3D printing.","A system is configured to transform an inconsistent 3D (three-dimensional) model of one or more 3D objects into a valid printable 3D model, said system comprising:\n\n","A program storage device readable by machine, tangibly embodying a program of instructions executable by the machine to perform a method of transforming an inconsistent 3D (three-dimensional) model of one or more 3D objects into a valid printable 3D model, said method comprises:\n\n","It will be appreciated that for simplicity and clarity of illustration, elements shown in the figures are not necessarily drawn to scale. For example, the dimensions of some of the elements might be exaggerated relative to other elements for clarity. Further, where considered appropriate, reference numerals might be repeated among the figures to indicate corresponding or analogous elements.","Unless specifically stated otherwise, as apparent from the following discussions, it is appreciated that throughout the specification discussions utilizing terms such as \u201cprocessing\u201d, \u201ccomputing\u201d, \u201ccalculating\u201d, \u201cdetermining\u201d, or the like, refer to the action and\/or processes of a computer that manipulate and\/or transform data into other data, said data represented as physical, e.g. such as electronic, quantities. The term \u201ccomputer\u201d should be expansively construed to cover any kind of electronic device with data processing capabilities, including, by way of non-limiting example, personal computers, servers, computing systems, communication devices, processors (e.g. digital signal processor (DSP), microcontrollers, field programmable gate array (FPGA), application specific integrated circuit (ASIC), etc.) and other electronic computing devices. Also, operations in accordance with the teachings herein may be performed by a computer specially constructed for the desired purposes or by a general purpose computer specially configured for the desired purpose by a computer program stored in a computer readable storage medium.","It should be noted that models produced by system  (), according to an embodiment of the present invention, are referred to as valid printable models or printable models for short. Generally, printable models satisfy a predefined set of requirements imposed by various printing devices. Different printing devices impose different sets of requirements, as they are based on different technologies. According to the present invention, system  satisfies a relatively large set of printing devices, and handles various architectural models, such as buildings and landscapes, as well as models found in many other fields, such as scientific visualization and physical simulation.","For simplicity, the detailed description of the present invention below mainly relates to models used for 3D printing. However, it should not be considered as limited to 3D printing only, and can be related also to fixing corrupted models and removing inconsistencies for assembly planning, and the like.",{"@attributes":{"id":"p-0065","num":"0088"},"figref":"FIG. 2","b":["200","215","200","215","211","220","211"]},"According to an embodiment of the present invention, the 3D digital model is (automatically) examined by means of sub-system  for determining corruptions or inconsistencies. If one or more corruptions or inconsistencies are found, then said sub-system  fixes them. Then, the model for printing is (automatically) prepared by applying corresponding operations, such as thickening thin parts that are not sufficiently thick for the printer resolution. Also, functional parts (e.g., staircases and the like) are identified, and then dedicated thickening operations are applied on them, thereby preserving their functionality. After all individual parts are ready for printing (e.g., sufficiently thick and do not \u201cfloat in mid air\u201d), they are unified, eliminating intersections and possibly removing singularities. As a result, the final coherent model is obtained, which can be printed (fabricated) by a 3D printer .","According to an embodiment of the present invention, system  is able to parse models in the STL (Stereolithography), VRML (Virtual Reality Modeling Language), and X3D (XML-based (Extensible Markup Language) file format for representing 3D computer graphics) file formats. It also accepts models produced by modelers (modeling software), such as AutoCad\u00ae and Revit\u00ae, through their corresponding application-program interface (API). Further, system  can produce a valid printable model in various file formats, such as the STL file format that can be parsed by various 3D-printers, and thus it serves as a common format for representing 3D models for printing.","According to an embodiment of the present invention, model files  received at an input of system  may be corrupted or contain inconsistencies. Also, the physical sizes of individual parts may be relatively small for 3D printing; on the other hand, the size of the entire model with all parts included might be relatively large for 3D printing. In addition, the individual parts may intersect each other in their interiors, or they may intersect each other in their boundaries at vertices or edges, resulting in singularities. Thus, a sequence of operations is applied by means of sub-system , transforming (converting) the input model (file)  into a model that can be used for rapid prototyping and for other applications with similar requirements. The sequence of applied operations is implemented as a pipeline that consists of a predefined number of phases, such as nine phases, some of which may be optional and can be bypassed.","According to an embodiment of the present invention, system  enables transforming possibly corrupted or inconsistent digital models of 3D objects into models of physical objects that can be automatically constructed using Solid Freeform Fabrication (SFF), a process also referred to as Rapid Prototyping (RP).","It should be noted that the printable model must fit within a bounding box, for example, specified by the 3D printer  predefined requirements. According to another embodiment of the present invention, if the model is relatively large with respect to the bounding box, it must be either scaled down or clipped by the bounding box.",{"@attributes":{"id":"p-0071","num":"0094"},"figref":["FIG. 3","FIG. 2","FIG. 2","FIG. 2","FIG. 2","FIG. 2"],"b":["300","305","315","320","325","340","345","350","360","365","340","360","305","206","306","307","315","320","220","220","220","330","220","200","220","325","340","345","350","340","360","365","220","370"]},"According to an embodiment of the present invention, the user observes the output of each one of the above steps using a viewer, which is an interactive software component that can render the model in three dimensions from various views, being controlled by said user. As the analysis operation during step  can require relatively much computation time, the user can control its complexity. Thus, by default, a low-complexity analysis can be performed. Also, the user can view, for example, the results of the healing process applied in step . If corruptions or inconsistencies remain and are observed by the user, then a high complexity analysis can be applied, According to an embodiment of the present invention, the result of step  is a valid model that consists of one or more closed 2D-manifolds with substantially no artifacts. The 2D manifolds, however, may possibly intersect each other.","According to an embodiment of the present invention, the healing (that is applied in step ) enables reconstructing consistent models of 3D solids, and enables obtaining boundary representation from an arbitrary set of polygons (polygon soup), which define proper solid parts. Non-orientable 2D-manifolds, (e.g., a Klein bottle), and non-closed 2D-manifolds (e.g., a Mobius strip) comprise illegal input, as they do not define proper solids.","According to an embodiment of the present invention, a set of different methods (techniques), that automatically heals input models (presented, for example, by means of STL files), is provided. These methods may make a tradeoff between efficiency and quality, and the most efficient strategies may be used by default, for example. The user can be able to view the results and request to reprocess the models until the results are satisfying. As such, the result of the importing step  can be a valid model that consists of one or more closed 2D-manifolds with substantially no artifacts intersecting each other. It should be noted that the method of obtaining a relatively high quality model may generate models that are substantially free of inconsistencies; for this a technique introduced by T. M. Murali et. al (in the article titled \u201cConsistent Solid and Boundary Representations from Arbitrary Polygonal Data Computer Graphics\u201d, Proceedings of the 1997 Symposium on Interactive 3D Graphics, Providence, pages 155-162, 1997) can be implemented. It should be noted that according to this technique, the space is partitioned into convex polyhedral regions separated by planes supporting the input polygons. Solid regions are identified by solving a linear system of equations derived from rules based on the opacities of boundaries between regions: 1) two adjacent cells sharing a mostly transparent boundary are likely to have the same solidities (i.e., if one is solid, then the other is too); 2) two adjacent cells sharing a mostly opaque boundary are likely to have opposite solidities (i.e., if one is solid, then the other is not); and 3) the unbounded cells (i.e., the ones on the outside that contain a point at infinity) are not solid. Once solid regions have been identified, the consistent solid model and boundary representations can be outputted without intersecting, coplanar, or unconnected polygons.","According to an embodiment of the present invention, a simple analysis, which exploits the commonly-known Euler formula for planar graphs (the Euler formula is presented, for example, on the following Web page: http:\/\/en.wikipedia.org\/wiki\/Planar_graph#Euler.27s_formula), is applied for each model part independently. Let u, e, and f denote the number of vertices, edges, and facets of each part, respectively. Then, the equation v+f=e\u22122 must hold. The simple, but relatively less time consuming, healing strategy proceeds as follows. First, identical and degenerate features, such as identical triangles, degenerate triangles\/edges are removed. Then, epsilon-close features are merged, and T-junctions are eliminated by splitting edges. Such a split introduces two polygons that replace an original polygon.","It should be noted that terrain is a vertical dimension of the land surface. It is typically expressed in terms of elevation of the terrain features, and is represented by non-manifold 2D surfaces bounded by edges incident to single faces. A non-manifold 2D surface in 3D space that are bounded by edges incident to single faces either represents a terrain, or simply comprises an incomplete representation of a zero-volume part. The healing phase identifies such surfaces. Terrain surfaces are classified as such, and incomplete representations of objects, such as walls, are repaired. The remaining surfaces are removed. The repair operation of such a surface amounts to the introduction of a 2D surface with the opposite orientation; and a 1D (one-dimensional) surface along the boundary. This results in a zero-volume part that can be handled by thickening step .","According to an embodiment of the present invention, if the model is relatively large to meet the requirement (configuration) of the 3D printer, it must be either scaled down (at step ) or clipped (at step ) by a bounding box specified by the printer predefined requirements, for example. The scaling operation maps the coordinates of the features of the model to the real-world coordinates. Further, the clipping operation selects only those parts that are entirely contained in the bounding box, among the parts that comprise the model. According to an embodiment of the present invention, the scaling operation is applied before the thickening step , since the resulting model may contain parts that are insufficiently thick. According to another embodiment of the present invention, the clipping operation is applied before the unifying step , and the manual selection of individual parts may be also supported. The viewer (in step ) is used to carry out the selections of the user. For example, the viewer can display the entire model with the selected parts rendered differently than the non-selected parts, distinguishing between the two complementing subsets. Also, the rendering of the two subsets may be separately controlled by the user.","A.","According to an embodiment of the present invention, during the thickening and inflating step , each part of a model is analyzed to determine whether this part is sufficiently thick for the 3D-printing. If it is not sufficiently thick, then the part is altered in such a way that the resulting part becomes sufficiently thick. It should be noted that indiscriminate thickening may result in a distorted model that does not match the original model from a functional point of view. Thus, dedicated procedures are applied to the predetermined family of identified parts preserving their functionality. CAD models include different types of parts, such as walls, windows, staircases, mullions, roofs, floors, terrains, etc. The different types of parts are classified while they are created. If the classification is preserved, then a novel thickening method (algorithm) is applied in step , according to an embodiment of the present invention. According to another embodiment of the present invention, the thickening step may be applied twice to meet the two different corresponding thickening criteria, which are imposed by conventional 3D printers  (). According to the first criteria, all parts have to be sufficiently thick in the vertical direction. This can be referred to as vertical thickening. According to the second criteria, referred to as horizontal thickening, all parts have to be sufficiently thick in all directions contained in the XY-plane (X and Y are axes in a coordinate system). Generally, the vertical and horizontal thickening operations differ in two ways. First, the vertical thickening is relatively less involved, as it handles a single direction. Secondly, inflating is applied along the vertical dimension on specific families of parts. It is assumed that tand tare vertical (layer) and horizontal minimal thicknesses (having predefined values), respectively. The thickening operation consists of a few sub-steps. First, all parts are decomposed into convex sub-parts (polytopes); in many cases, the input model (file) already consists of convex sub-parts. Secondly, the width of each sub-part is computed. Then, the sub-parts, the vertical widths of which are smaller than t, are thickened along the vertical direction, and sub-parts, the horizontal widths of which are smaller than t, are thickened along the appropriate horizontal direction. When a sub-part is identified as insufficiently thick, then one or more facets of its boundary are translated, preserving the incident relations of the features of the boundary. Thickening along a given direction d amounts to translating of features in the d direction. There are three types of thickening operations, namely, scaling, inflating, and offsetting.","It is assumed that P is a part, and wand ware the vertical and horizontal widths of P, respectively. It should be noted that the normalized vector, directed at the direction of the vertical width, is d=(0,0,1). It is assumed that the normalized vector, directed at the direction of the horizontal width, is d=(d,d,0). If P is thickened using scaling, the following one or more predefined criterions (scaling factors) are used. If vertical thickening is applied, the part is scaled in the z-dimension only. The scale factor applied is the ratio between the desired width and the width, namely, t\/w. If horizontal thickening is applied, the part is scaled in the x- and y-dimensions. The x- and y-scaling factors are d\u00b7t\/wand d\u00b7t\/w, respectively. This results with minimally scaled up parts, yet sufficiently thick.","It is assumed that f is the feature supported by the plane perpendicular to the width direction, and F is the set of features containing f, its incident features, and the vertices incident to those features. If f is a facet, F contains the facet and all the vertices and edges on the boundary of f. If f is an edge, F contains the edge, its two incident facets, and all vertices and edges on the boundary of these two incident facets. If f is a vertex, F contains the vertex, all facets incident to the vertex, and all vertices and edges on the boundary of these incident facets. If P is thickened using inflating, the features in F are translated to meet the width requirements. They are translated by a vector directed at the width direction of length (t\u2212w) and or (t\u2212w) for vertical and horizontal thickening, respectively. Subsequently, the entire model is adjusted as schematically presented in  (parts  and ). If P is thickened using offsetting, the supporting planes of all features in F are translated by a vector directed at the width direction of length (t\u2212w) and or (t\u2212w) for vertical and horizontal thickening, respectively.","It should be noted that the width of a polytope is the penetration depth between the polytope and an identical copy of the polytope, which in turn is the minimum distance between the origin and the Minkowski sum of the polytope and its reflection through the origin (for example, as presented by E. Berberich et. al in the article, titled \u201cArrangements on Parametric Surfaces II: Concretizations and Applications\u201d, submitted to Mathematics in Computer Science, Springer, 2009.","The Gaussian map of the Minkowski sum of two polytopes P and Q is the spherical overlay of the Gaussian map of P and the Gaussian map of Q. For each polytope P, the Gaussian map of P and the Gaussian map of its reflection are computed. Then, the overlay of the two Gaussian maps is computed, and the Gaussian map of the Minkowski sum of P and its reflection are obtained. After that, the facets of the Minkowski sum are obtained. Finally, the vertical and horizontal distances between the origin and those facets are computed. If the vertical and horizontal distances are smaller than tand t, respectively, then according to an embodiment of the present invention, one of the thickening operation (e.g., scaling, inflating, and offsetting) is applied until the distance criteria are met. It is relatively sufficient to apply it once in the vertical direction. However, to meet the distance criteria in the horizontal direction, applying the thickening more than one time (i.e., in a loop of several times) might be required.","According to an embodiment of the present invention, the input model (file) may contain terrain parts represented as 2D surfaces in 3D space. A terrain surface has to be converted into a solid part with non-zero volume. For this, first, all terrain surfaces are identified in the input model. The identification of terrain surfaces may be relatively simple, if their classification is retained in the input model. Also, according to this embodiment of the present invention, the terrain surfaces, which were not classified as such to start with during healing step , are identified. Once a terrain surface is identified, the surface vertices are projected onto a plane parallel to the XY-plane, and the necessary boundary polygons are introduced, forming a 2D manifold valid for the 3D printing. It is supposed that p (p=(p,p,p)) is a point of the terrain surface with the smallest vertical coordinate p(X, Y and Z are axes of a coordinate system). Then, the plane that contains the projection at z=v\u2212tcan be placed, satisfying the minimum vertical width criteria.","According to another embodiment of the present invention, if the translation operation to the boundary of a thin part relates to a roof or a floor, then the entire model has to be adjusted. The combined operation of translating and adjusting is referred to as inflating. Generally, the inflation operation can be considered as a variant of the thickening operation that affects features of parts that lie above the translated feature with the lowest vertical coordinate.","Thus, the inflation operation substantially does not introduce intersections between the interior of model parts.","According to still another embodiment of the present invention, an auxiliary data-structure of all points of all parts, sorted lexicographically, is maintained first according to their z-coordinate, then according to their y-coordinate, and finally, according to their X-coordinate. It is supposed that P is a part that is insufficiently thick, and p=(p,p,p) is a point on its boundary with the smallest z-coordinate pamong all points of P being translated during the thickening operation. Also, it is supposed that vis the translation vector. Then, substantially all points of the parts that have z-coordinates equal to, or larger than p, are translated by means of v. These points may be relatively easily found in the auxiliary data-structure, and then the edges and facets incidents are updated to the translated points.","As is known, generic thickening may result in distorted objects when applied indiscriminately. The generic thickening operation may deform an operand object to the point where the resulting object does not serve the purpose it was originally designed to serve by the modeler (e.g., the architect). It should be noted that staircases and mullions are relatively sensitive to such distortions. Thus, according to an embodiment of the present invention, if the input model contains staircases or mullions, and they can be identified as such, either automatically or by a user, then a (user-controlled) dedicated thickening operation is applied that replaces the original model part, referred to as the source, with a new model part, referred to as the target, that (i) serves the same functionality as the source, and (ii) meets the width criteria. For this, a relatively large database of ready-made 3D printable parts is created and categorized according to the functionality of said 3D printable parts. The candidate pairs of parts (a source part to be removed and a target part to be inserted instead) can be automatically suggested by means of system  (), according to an embodiment of the present invention. System  enables a user to add or remove candidates, and it also enables the user to override target parts, using the viewer for convenient interactive choice-making. Once a pair is certified (the substitution between a specific source and target parts is authorized, the bounding box of the source part is computed, the target part is clipped to fit within the bounding box, and finally, the scaled target part is inserted instead of the source part.","According to an embodiment of the present invention, the input model may contain parts that are not supported relatively well, or \u201cfloat in mid air\u201d. According to this embodiment of the present invention, the fabrication (printing) of such an input model may be enabled by accomplishing the following two steps. During the first step, layers of each part are successively added while certain pieces of each layer are solidified. During the second step, the pieces that were not solidified are washed off and removed (it is supposed that these both steps are denoted as supporting step  in ). Parts that are not supported relatively well, referred to as floating parts, are disconnected and lose their position relative to the origin and to the remaining parts. Thus, such floating parts are identified. For each floating part, the introduction of a new part that supports the floating part is provided. The supporting part is connected to the center of gravity of the floating part on one hand, and to the first part encountered by a ray shot in some direction on the other. It should be noted that the negative vertical direction may be used by default for the shooting direction.","According to an embodiment of the present invention, the model further may not fit within the building volume, typically a box aligned with the major axes, defined by 3D printer . According to an embodiment of the present invention, the building volume has to contain all parts to be printed. All parts that completely or partially escape the building volume may be automatically dismissed. It should be noted that, by default, all parts that are completely inside the building volume are selected for printing. In addition, a user can apply manual selections utilizing the viewer in viewing step , under the condition, for example, that parts that escape the building volume cannot be selected for 3D printing. Also, system  supports a subdivision operation applied during selecting step , in which the parts to be 3D printed are selected. The user can request the system to subdivide the set of parts that comprise the model into several (separated) subsets. This may become useful when the model is not entirely contained in the building volume. Further, an automatic tool can divide the model into sub-models that can be fabricated (printed) independently. The user can move parts from one subset to another utilizing the viewer. The different subsets are may be then processed independently.","According to an embodiment of the present invention, the model outputted from the healing step  contains parts, which are watertight with substantially no artifacts. However, the parts may intersect, and their union may not represent a closed 2D-manifold. In addition, the thickening step  may even increase the number of intersections (it may also replace intersections between boundaries of model parts with intersections between their interiors). Thus, the intersections between interiors of parts are removed in unifying step , which may employ two methods with different characteristics, according to an embodiment of the present invention. The first method is an extension of the prior art Dual Marching Cubes (DMC) algorithm (as presented S. Schaefer et. al in the article, titled \u201cDual Marching Cubes: Primal Contouring of Dual Grids\u201d, Computer Graphics Forum, volume 24, number 1, pages 195-201, 2005), and the second method is an implementation of a prior art technique introduced by M. Segal et. al in the article titled \u201cPartitioning Polyhedral Objects into Non-Intersecting Parts\u201d, IEEE Computer Graphics and Applications, volume 8, number 1, pages 53-67, 1988. It should be noted that the main idea behind the Dual Marching Cubes algorithm is to construct an adaptive volume partitioning (octree) around an object (part), and instead of applying the Marching Cubes (MC) algorithm to the octree, a dual graph is constructed, and then Marching Cubes algorithm is applied to it. The DMC algorithm allows generation of an output that is closer to the input surface. In addition, the DMC algorithm requires a volumetric function, whose value represents density information or a distance to a surface. According to this embodiment of the present invention, the conventional Dual Marching Cubes algorithm (method) is extended to handle inconsistent meshes instead of isosurface functions, which results in a single valid mesh that is suitable for 3D printing. In other words, the Dual Marching Cubes algorithm is applied to 2D-manifold meshes in order to create a single closed 2D-manifold surface of their union. Since the Marching Cubes algorithm requires a distance field (isosurface) at the corners of the voxels (volume pixels) (which is not defined for a set of meshes), and since the MC algorithm is applied to the dual graph, there is a need to have a dual point and a value for each voxel in the octree (a tree data structure in which each node has up to eight \u201cchildren\u201d). The dual point is placed on the input surface (for example, if a single plane passes through the voxel, it will be placed on the plane or at the vertex, if it is the only feature in the voxel), and the value is set to a relatively small negative value. Then, according to an embodiment of the present invention, when the maximum depth is reached and the voxel still needs to be subdivided, ray tracing can be used to determine if the center of the voxel is inside or outside of the input volume, and its value is set accordingly. It should be noted that \u201cray tracing\u201d is a well-known conventional method for calculating the path of waves or particles through a system. The reason that relatively small negative values are used is that this allows having the output surface to be relatively close to the input surface.","According to another embodiment of the present invention, the model resulting from unifying step  may contain topological singularities. Thus, at step , such singularities can be removed from non-manifold sets of polygons to create manifold polygonal surfaces. This step of removing model singularities is optional, since a model with singularities is, generally, printable. On the other hand, it should be noted that in many cases it is desired to have a model that does not have disconnected components. The step  of removing singularities can be based, for example, on an algorithm introduced by A. Gueziec et al in the article, titled \u201cCutting and Stitching: Converting Sets of Polygons to Manifold Surfaces\u201d, published in IEEE Transactions on Visualization and Computer Graphics, volume 7(2), pages 136-151, 2001. For removing model singularities, first, singular vertices and edges are identified. Then, the identified singular vertices are multiplied, and cut through singular edges, resulting in several disconnected manifold solid parts. If an optional stitching operation is required (e.g., requested by a user), boundary edges are joined to maintain the surface as a manifold. The variant of the implemented algorithm ensures that the widths of the substituting polytopes are sufficiently large for 3D printing. It should be noted that singularities may be forbidden, according to a user choice.","According to an embodiment of the present invention, during the exporting step , the output 3D model is either stored in a supported file format, such as the STL file format, or is directly sent to 3D printer  () to be fabricated. It should be noted that the output 3D model, stored in a file in one of the supported file formats, can be read and sent to a 3D printer at any time. If the output of system  () consists of several models, each model can be stored in a separate file. Similarly, each such 3D model file can be sent to a 3D printer at any convenient time.","According to an embodiment of the present invention, an independent interactive component, referred to as the viewer, allows a user, at step , to view the output of each one of the steps presented in , apply certain changes, and override default settings. The viewer renders the model onto a window on the screen (display) projecting the three-dimensional digital model, as seen from a certain point of view, onto the 2D plane containing the screen. The user can interactively and relatively smoothly change the point of view. The user can also change other related viewing parameters, such as whether to use orthographic or prospective projections. The viewer can be equipped with a graphical user-interface (GUI) that allows the user to set, reset, or override various system parameters. 3D printer  () defines a building volume, typically a box aligned with the major axes, that contains all parts to be printed. The viewer can render the building volume imposed by 3D printer , highlighting the parts that completely or partially escape the building volume, and therefore must be dismissed. By default, all parts that are completely inside the building volume are selected for printing. The viewer renders the parts selected for printing. It can also render the non-selected parts, and it can render the two complement sets in a way that the user can distinguish between a selected and a non-selected part. The viewer enables the user to override the default selections made by system  (), moving parts from the selected set to the non-selected set and vice-versa (with the exception, for example, of parts that escape the constraining volume and may not be selected for printing).","According to another embodiment of the present invention, the user can request system  to subdivide the set of parts that comprise the model into several subsets. This may become especially useful when the model is not entirely contained in the building volume. An automatic tool divides the model into (separate) sub-models (sub-models) that can be fabricated (printed) independently. Parts in different sets are rendered differently, and the user can move parts from one set to another. The different sets are then processed further substantially independently. The viewer allows the user to examine the \u201chealed\u201d model, that is, the output of healing step . If the user is unsatisfied with the results, then the user can select a different healing strategy and repeat the application of the healing operation. Further, the viewer can use different strategies of validation schemes, and it can display potential artifacts in the model that may affect 3D printing. It also may allow the user to mark those potential artifacts and provide them as hints to the healing operation. According to still another embodiment of the present invention, the viewer also allows the user to change the scaling factor dynamically. In addition, it allows the user to change many parameters of system , such as setting the vertical and horizontal thickening criteria. The viewer enables the controlled substitution of selected parts, that otherwise would be deformed by the generic thickening operation, and lose their intended functionality. Further, according to still another embodiment of the present invention, the viewer allows the user to examine the model before it is sent to 3D printer  in step , or saved in an output model file in step  (the user may choose the desired format of the output file from a predetermined set of formats).",{"@attributes":{"id":"p-0095","num":"0118"},"figref":"FIG. 4A","b":["400","405","410"]},{"@attributes":{"id":"p-0096","num":"0119"},"figref":"FIG. 4B","b":["416","417"]},{"@attributes":{"id":"p-0097","num":"0120"},"figref":"FIG. 4C","b":["425","426","425"]},{"@attributes":{"id":"p-0098","num":"0121"},"figref":"FIG. 4D","b":["430","431","432"]},{"@attributes":{"id":"p-0099","num":"0122"},"figref":["FIG. 5A","FIG. 3","FIG. 5A"],"b":["505","315","511","512","511","512","315","505","510","325"]},{"@attributes":{"id":"p-0100","num":"0123"},"figref":["FIG. 5B","FIG. 3"],"b":["325","520","526","527","520","526","527","527","526","527","527"]},{"@attributes":{"id":"p-0101","num":"0124"},"figref":["FIG. 5C","FIG. 2"],"b":["530","530","530","530","530","530","530","200"]},{"@attributes":{"id":"p-0102","num":"0125"},"figref":"FIG. 5D","b":["540","540","540","540","540","540","540"]},{"@attributes":{"id":"p-0103","num":"0126"},"figref":"FIG. 6A","b":["605","610","615","611","612","611","612"]},{"@attributes":{"id":"p-0104","num":"0127"},"figref":["FIG. 6B","FIG. 6A","FIG. 2"],"b":["605","610","615","611","612","611","612","611","612","215"]},{"@attributes":{"id":"p-0105","num":"0128"},"figref":"FIG. 7","b":["705","710","715","730"]},{"@attributes":{"id":"p-0106","num":"0129"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0107","num":"0130"},"figref":["FIG. 9A","FIG. 2","FIG. 2","FIG. 9B","FIG. 9B"],"b":["910","200","200","220","920","910"]},"While some embodiments of the invention have been described by way of illustration, it will be apparent that the invention can be put into practice with many modifications, variations and adaptations, and with the use of numerous equivalents or alternative solutions that are within the scope of persons skilled in the art, without departing from the spirit of the invention or exceeding the scope of the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In order to understand the invention and to see how it may be carried out in practice, preferred embodiments are described, by way of non-limiting examples only, with reference to the accompanying drawings, in which:",{"@attributes":{"id":"p-0045","num":"0068"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0046","num":"0069"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0047","num":"0070"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0048","num":"0071"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0049","num":"0072"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0050","num":"0073"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0051","num":"0074"},"figref":"FIG. 4D"},{"@attributes":{"id":"p-0052","num":"0075"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0053","num":"0076"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0054","num":"0077"},"figref":"FIG. 5C"},{"@attributes":{"id":"p-0055","num":"0078"},"figref":"FIG. 5D"},{"@attributes":{"id":"p-0056","num":"0079"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0057","num":"0080"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0058","num":"0081"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0059","num":"0082"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0060","num":"0083"},"figref":["FIG. 9A","FIG. 9B"]}]},"DETDESC":[{},{}]}
