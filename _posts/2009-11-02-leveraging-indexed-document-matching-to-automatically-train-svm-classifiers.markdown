---
title: Leveraging indexed document matching to automatically train SVM classifiers
abstract: A method and apparatus for automatically training a data loss prevention (DLP) agent deployed on an endpoint device is described. In one embodiment, the method includes monitoring information content on a client computer system for violations of a policy. The method further includes determining, with the client computer system, whether a violation of the policy has occurred for the information content based on a classifier. The method may also include transmitting monitored data indicative of a policy decision and the information content to a remote system and receiving a response from the remote system including an updated classifier, wherein the updated classifier was automatically generated by the remote system utilizing fingerprint matching.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09183384&OS=09183384&RS=09183384
owner: Symantec Corporation
number: 09183384
owner_city: Mountain View
owner_country: US
publication_date: 20091102
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PRESENT INVENTION"],"p":["Embodiments of the invention relate to the field of processing data, and more particularly, to automatically training a data loss prevention (DLP) agent deployed on an endpoint device.","Data Loss Prevention (DLP) involves computer and information security, where DLP systems identify, monitor, and protect data in use (e.g., endpoint actions), data in motion (e.g., network actions), and data at rest (e.g., data storage). DLP systems may be deployed at user endpoint devices, network servers, etc. to inspect information content. DLP systems are designed to detect and prevent the unauthorized use and transmission of confidential information.","Client computer systems and devices, such as personal computers, laptop computers, personal digital assistants, smart phones, etc. are prolific in modern organizations. Often these systems include applications that allow users to create and edit documents, spreadsheets, presentations, databases, etc, which are referred to collectively as \u201cdocuments.\u201d These systems also increasingly include the capability to transfer the documents, as well as other sensitive data, to other systems.","DLP systems that are employed at endpoint devices, to prevent the unwanted or unintended transmission of sensitive information, are usually lightweight applications due to the limited resources of the endpoint device (e.g., limitations resulting from a CPU, memory, disk size, processing speed, etc.). To achieve high accuracy in detecting sensitive documents in this resource-limited environment, training of the application typically required. However, if this training is only performed in advance of deployment on an endpoint system, false positive and false negative DLP decisions for new information content may result. To rectify an overabundance of false DLP decisions, some endpoint DLP applications may be retrained. However, retraining an endpoint DLP system involves human interaction which is costly, time-consuming, and highly inefficient.","A method and apparatus for automatically training a data loss prevention (DLP) agent deployed on an endpoint device is described. According to an exemplary method, a computer system monitors information content for violations of a policy, determines whether a violation of the policy has occurred for the information content based on a classifier, transmits monitored data indicative of a policy decision and the information content to a remote system, and receives a response from the remote system including an updated classifier. In one embodiment, the updated classifier was automatically generated by the remote system utilizing fingerprint matching. In some embodiments, the computer system may be one of a personal digital assistant, cellular telephone, netbook, laptop computer, or personal computer.","In some embodiments, the exemplary method includes automatically replacing the classifier with the updated classifier, and determining whether policy violations occur for monitored information content based on the updated classifier. In some embodiments, the updated classifier was generated by the remote system utilizing fingerprint matching based on the data indicative of the policy decision and the information content. In some embodiments, the classifier and the updated classifier are support vector machine classifiers.","In some embodiments, the exemplary method includes making a plurality of policy decisions for a plurality of corresponding information content items, transmitting data indicative of the plurality of policy decisions and the plurality of corresponding information content items to the remote system, and receiving a response from the remote system including the updated classifier. In some embodiments the updated classifier was generated by the remote system utilizing the fingerprint matching based on the data indicative of the plurality of policy determinations and the plurality of corresponding information content items.","Another method and apparatus for automatically training a data loss prevention (DLP) agent deployed on an endpoint device is described. According to a second exemplary method, a computer system receives a first policy decision and information content that formed a basis of the first policy decision from a client computer system, makes a second policy decision, with a server computer system, based on the information content and a fingerprint-based DLP policy decision, automatically retrains the classifier to be consistent with the second policy decision when the first policy decision and second policy decision are inconsistent, and transmits the retrained first classifier to the client computer system.","In some embodiments, the second exemplary method includes receiving a training set of information content, automatically training the classifier based on fingerprint-based policy decisions made from the training set of information content, and transmitting the classifier to the client computer system. In some embodiments, the second exemplary method includes retraining the classifier to be consistent with a plurality of fingerprint-based policy decisions. In some embodiments, the classifier is a support vector machine classifier.","In addition, a computer readable storage medium for automatically training a data loss prevention (DLP) agent deployed on an endpoint device is described. An exemplary computer readable storage medium provides instructions, which when executed on a processing system causes the processing system to perform a method such as the exemplary methods discussed above.","Further, a system for automatically training a data loss prevention (DLP) agent deployed on an endpoint device is described. An exemplary system may include a memory and a server computer system coupled with the memory. In some embodiments of the exemplary system, the server computer system is to receive a first policy decision and information content that formed a basis of the first policy decision from a client computer system, the first policy violation decision based on a classifier for data loss prevention (DLP), make a second policy decision based on the information content and a fingerprint-based DLP policy decision, automatically retrain the classifier to be consistent with the second policy decision when the first policy decision and second policy decision are inconsistent, and transmit the retrained first classifier to the client computer system.","In some embodiments, the exemplary system further includes the client computer system communicably coupled with the data monitoring server over a network. In some embodiments, the client computer system is to monitor information content on the client computer system for violations of a policy, determine whether a violation of the policy has occurred for the information content based on a classifier, transmit monitored data indicative of a policy decision and the information content to the server computer system, and receive a response from the server computer system including an updated classifier. In some embodiments, the updated classifier was automatically generated by the server computer system utilizing fingerprint matching.","In some embodiments, the exemplary systems further includes the client computer system to automatically replace the classifier with the updated classifier and determine whether policy violations occur for monitored information content based on the updated classifier. In some embodiments, the updated classifier was generated by the server computer system utilizing fingerprint matching based on the data indicative of the policy decision and the information content. In some embodiments, the classifier and the updated classifier are support vector machine classifiers.","A method and apparatus for automatically training a data loss prevention (DLP) agent deployed on an endpoint device is described. In one embodiment, information content is monitored on a client computer system for violations of a policy. In one embodiment, the information content may include information content within application files, email messages, text messages, instant messages, etc. In one embodiment, a determination is made whether a violation of the policy has occurred for the information content based on a classifier. In one embodiment, a policy may include a set of rules pertaining to data loss prevention (DLP) that specify which actions should be taken when a message contains confidential information (e.g., source data being protected). If a message contains confidential information, the policy may require that the message be blocked, reported, re-routed, etc.","In one embodiment, the monitored data indicative of a policy decision and the information content are transferred to a remote system. A response may then be received from the remote system including an updated classifier. In one embodiment, the updated classifier is automatically generated by the remote system utilizing fingerprint matching. In one embodiment, policy decisions, source data for those decisions, and updated classifiers continue to be communicated without the intervention of a user. As a result, the updated classifiers are automatically retrained and refined over time policy decisions continue to be made.","In the following description, numerous details are set forth. It will be apparent, however, to one of ordinary skill in the art having the benefit of this disclosure, that the present invention may be practiced without these specific details. In some instances, well-known structures and devices are shown in block diagram form, rather than in detail, in order to avoid obscuring the present invention.","Some portions of the detailed description that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self-consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like.","It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as \u201cprocessing\u201d, \u201ccomputing\u201d, \u201ccalculating\u201d, \u201cdetermining\u201d, \u201cdisplaying\u201d or the like, refer to the actions and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (e.g., electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.","The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium, such as, but not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, and magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, or any type of media suitable for storing electronic instructions.","The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein, or it may prove convenient to construct a more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition, the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1","b":["100","100","104","106","108","108","104","106","104","106","108"]},"Alternatively, the DMS , PMS , and user endpoint devices (e.g., user endpoint device - to -N) may reside on different LANs that may be coupled together via the Internet but separated by firewalls, routers, and\/or other network devices. In yet another configuration, the PMS  may reside on a server, or different servers, coupled to other devices via a public network (e.g., the Internet) or a private network (e.g., LAN). It should be noted that various other network configurations can be used including, for example, hosted configurations, distributed configurations, centralized configurations, etc.","The PMS  is responsible for receiving parameters pertaining to data loss prevention (DLP) policies, such as pre-configured template policies or customized policies, and creating policies based on these parameters. In one embodiment, the PMS  receives the policy parameters via a policy definition graphical user interface (not shown). In another embodiment, the PMS  receives the policy parameters from an Application Programming Interface (API) or via a configuration file formatted in text or a defined data format (e.g., extensible markup language (XML) or binary format). In one embodiment, a policy specifies source data that should be protected from unauthorized transmission, access or any other use. The source data may include structured data stored in databases or other tabular formats. Such structured source data may consist of, for example, customer, employee, patient or pricing information. Alternatively, the source data may include unstructured data stored in documents from file systems or other document repositories. Such unstructured source data may include design plans, source code, CAD drawings, financial reports, and any other sensitive or proprietary information stored in documents.","A policy may include a set of rules that specify which actions should be taken when a message contains confidential information (e.g., the source data being protected). For example, a message may represent a transmitted document (e.g., an email message, a web mail message, etc.), a document generated by an application, or data stored in databases, caches, etc. If a message contains confidential information, the policy may require that the message be blocked, reported, re-routed, etc.","In one embodiment, the DMS  detects messages (e.g., sent email messages, instant messages, text messages, and\/or other documents according to a configuration of the DMS ) containing confidential information using fingerprints of the confidential information such as fingerprints of confidential documents from file systems or other document repositories (e.g., design plans, source code, CAD drawings, financial reports, and any other sensitive or proprietary information stored in documents), or fingerprints of confidential information stored in a database (e.g., customer, employee, patient or pricing information). The use of fingerprints allows the DMS  to accurately detect confidential information in messages transmitted over network . However, such fingerprints cannot be effectively used for detection of confidential information locally on the user endpoint devices  (e.g., laptops or PDAs) where resources (e.g., CPU, memory, disk size and speed, etc.) are limited. In order to address the above limitations of endpoint devices , embodiments of the present invention detect confidential information on user endpoint devices  using support vector machine (SVM) classifiers, which requires significantly less resources than the fingerprint-based detection approach. In order to improve the accuracy of SVM classifiers, embodiment of the present invention automatically train the SVM classifiers as will be discussed in more detail below.","In one embodiment, DMS  creates and trains a support vector machine (SVM) classifier. SVM classification is based on the concept of creating a decision plane that separates a set of objects into two categories of membership. For example, informational content in a document either does or does not contain confidential information. When information content is categorized as such, DLP policies can be applied against the informational content based on results of an SVM classification decision to determine what action needs to be taken with respect to the information content. In one embodiment, SVM classification utilizes features, such as words, sentences, etc. obtained from informational content. This set of features defines a vector representing the information content. A predictor function is then applied to the vector to determine how the document should be classified.","In one embodiment, a DLP policy specifies what information needs to be present in a message to trigger a violation, and this information is used to create a set of features for SVM classification. Alternatively, the set of features is created prior to the creation of a DLP policy (e.g., based on user input), and a DLP policy refers to a specific SVM classifier that should be used for detecting policy violations.","In one embodiment, DMS  trains an SVM classifier by first creating a predictor function from a set of training documents. In one embodiment, each of the training documents is known to belong to one of two sets (i.e., does or does not contain confidential information). Each of the documents is then searched for features, such as particular words, phrases, sentences, etc. The document features may be a fixed set of document attributes, an evolving set of document attributes, a fixed or evolving set of words, words or other information content specified by a user, or other data that implies a potential DLP issue. Furthermore, the document features may include words that necessitate a DLP decision such as the words confidential, social security number, private, etc. The document features may also include words that do not implicate a DLP decision, such as public, words of common usage, famous names, company names, etc. Because the documents are known to belong to one of two classifications, the universe of decisions is then created based on the feature vectors for the training documents, where each vector falls in the universe of decisions. In one embodiment, DMS  creates a predictor function, such as a binary, multi-category, regression, etc. function, which maximizes the distance between the feature vectors of the information content from the two categories when the predictor function is applied to the feature vectors. As a result, a new document which was not part of the training set can thereafter be classified by the SVM classifier by searching the new document for the features, creating a corresponding feature vector, and applying the predictor function to the feature vector to obtain classification results.","In one embodiment, the SVM classification results are utilized to make DLP policy decisions. In one embodiment, DMS  creates a single SVM classifier for multiple DLP policies and\/or multiple DLP Agents . In another embodiment, DMS  creates multiple SVM classifiers each for different DLP policies. In yet another embodiment, DMS  creates multiple SVM classifiers, each corresponding to a single DLP agent . In one embodiment, DMS  transmits an initial SVM classifier to DLP agents  to enable the agents to perform policy enforcement for information content based on the initial SVM classifier. In each of the embodiments, DMS  stores the SVM classifier(s) in database . In one embodiment, database  stores SVM classifiers in a cache memory, local persistent memory, hard disk, or other storage. Furthermore, in one embodiment, database  may be integrated within DMS  or be communicably coupled over a network with DMS .","In one embodiment, the user endpoint devices (e.g., user endpoint devices - to -N) assist the DMS  in detecting policy violations by monitoring information content locally (e.g., files and\/or other documents) on the user endpoint devices . In one embodiment, the information content is monitored in real-time by a data loss prevention (DLP) agent  of the user endpoint devices , utilizing the SVM classifier supplied by the DMS . In one embodiment, user endpoint devices - to -N are client devices, such as, for example, personal computers, laptop computers, cellular telephones, personal digital assistants (PDAs), netbooks, etc. In one embodiment, user endpoint devices  store SVM classifier(s) in a database  within a cache memory, local persistent memory, hard disk, or other storage of user endpoint device .","In one embodiment, DLP agents  extract features from information content stored on, processed by, or transmitted from a user endpoint device . After features are extracted from a particular piece of information content, the corresponding feature vector is utilized as an input to the predictor function. Based on the results of the predictor function, the information content is classified as belonging to one of two groups. In one embodiment, the two groups correspond to information content that violates a DLP policy and information content that does not violate a DLP policy. As noted above, a DLP agent  may utilize several SVM classifiers where each classifier is associated with specific policies. As a result DLP agent  may further determine specific violations of specific policies.","In one embodiment, once a DLP Agent  has detected a policy violation utilizing an SVM classifier, the DLP Agent  notifies the DMS , which then reports the policy violation to an appropriate entity (e.g., a manager, database administrator, a reporting system, etc.) or performs some other action. In one embodiment, the DLP agent  further performs one or more remedial actions in response to detecting a policy violation. Such remedial actions may include one or more of blocking the transmission of information that violates a policy, displaying a warning message to a user, transmitting a message regarding the violation to an appropriate third party, etc.","In one embodiment, once a DLP Agent  has made a policy violation decision utilizing the SVM classifier, the DLP Agent  notifies the DMS  of the results of the policy decision regardless of whether the decision resulting in a policy violation or a non-violation. In one embodiment, DLP Agent  further transmits the data the DLP Agent  utilized in reaching the policy decision (i.e., text from a document, attachment from an email, etc.). In one embodiment, as discussed in greater detail below, DMS  utilizes the policy decisions made by a DLP Agent  and the data that formed the basis for decision to automatically retrain the SVM classifier deployed on the DLP Agent .","In one embodiment, the DMS  utilizes fingerprint-based matching to retrain the SVM classifier used by DLP Agents . In one embodiment, DMS  performs fingerprint-based matching on the informational content received from a DLP agent . Fingerprint-based matching may include, for example, creating a fingerprint of the information content, which is then compared to a library of fingerprints corresponding to DLP policies. Based on the comparison results, DMS  determines whether the informational content fingerprint matches a fingerprint from the library, which violates a policy. In one embodiment, when the DMS's  fingerprint-based decision is inconsistent with the decision made by the DLP agent , DMS  retrains the SVM classifier.","In one embodiment, DMS  retrains an SVM classifier by adding the fingerprint-based decision to the decisions of the training set of documents. DMS  tunes the SVM predictor function based on this expanded data set. In one embodiment, the retrained predictor function maximizes the distance between categories of information content (i.e., those known to violate a DLP policy and those known not to violate a DLP policy) based on the set of training document decisions and the fingerprint-based decisions of the DMS .","In one embodiment, the DLP Agents  and the DMS  continue to communicate policy decisions, source data for those decisions, and updated SVM classifiers without the intervention of a user. As a result, the SVM classifiers deployed by the DLP Agents  are automatically retrained and refined over time as the DLP Agents  continue to make policy decisions. Although initial SVM classifiers may not be as accurate as fingerprint-based evaluations, because the DMS  utilizes a more powerful and accurate classifier to retrain the SVM classifiers, the SVM classifiers continue to approach the accuracy of the fingerprint-based evaluations while still maintaining the efficiency and suitability desired for deployment by DLP Agents .","In one embodiment, DMS  retrains SVM classifiers utilizing each of the SVM-based policy decisions made by each DLP Agent . Thus, in one embodiment, all of the DLP agents  are utilized to retrain all SVM classifiers. In another embodiment, only SVM-based policy decisions by DLP agents  belonging to individual users, or specific groups of users, are utilized to retrain SVM classifiers for those particular individuals or groups. In either embodiment, the classifiers utilized by DLP agents  will become more accurate over time, particularly if there is overlap between the confidential data on the same DLP agent  or a group of DLP agents .","In one embodiment, the automatic retraining of classifiers for individual DLP agents, specific groups of DLP agents, or all DLP agents is combined with human-in-the-loop based retraining. In this embodiment, human-based retraining of SVM classifiers may correct situations where fingerprint-based policy decisions are less than completely accurate.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 2","b":["200","200","250","252"]},"In one embodiment, Policy Management Server  is responsible for receiving policy violation training documents and associated user preferences. In one embodiment, PMS  transmits the training documents and\/or user preferences to data monitoring server (DMS) .","In one embodiment, DMS  is responsible for creating, training, and automatically retraining SVM classifiers to be deployed on user endpoint device . In one embodiment, SVM training engine  receives a set of training documents from PMS  and provides the training document to the SVM Generator . SVM Generator  utilizes the training documents, as discussed above, to generate an initial SVM classifier including an initial predictor function. DMS  then transmits the initial SVM classifier to DLP agent  of the user endpoint device .","In one embodiment, DLP agent  is responsible for the real-time monitoring and policy enforcement for information content sent by the user endpoint device , or created, stored or received at the user endpoint device . In one embodiment, DLP agent  applies the received SVM classifier  for use by a policy violation detector . In one embodiment, policy violation detector  is responsible for real-time monitoring of information content utilizing SVM classifier . In one embodiment, SVM classifier  generates a feature vector for information content processed by user endpoint device . For example, if user endpoint device  attempts to send an email, SVM classifier  will extract features from the text and\/or attachment(s) of the email, create feature vector(s), and apply the predictor function to the feature vectors. SVM classifier  provides the results of the predictor function, which categorize the information content as either violating or not violating a DLP policy, to policy violation detector .","In one embodiment, policy violation detector  utilizes results of SVM classifier  to decide what action needs to be performed with respect to the information content. For example, if the information content violates a DLP policy, policy violation detector  may generate a policy violation report, and send the report to DMS  for transmission to an appropriate source, such as a network administrator, database, etc. Policy violation detector  is also responsible for transmitting policy decisions and the data which was the basis for the decisions to SVM training engine . In one embodiment, policy violation detector  transmits the decisions and source data as the decisions are made. In another embodiment, policy violation detector  transmits the decisions and source data in batches, when user endpoint device  and\/or DLP agent  are idle, in response to a request of the DMS , etc.","In one embodiment, when SVM training engine  receives policy decisions and source data from DLP agent , fingerprint evaluator  makes its own policy decision based on the source data. In one embodiment, when the policy decision of the fingerprint evaluator  and the SVM classifier  differ, SVM Generator  captures the inconsistency, as well as the source data, in order to retrain the SVM classifier. In one embodiment, SVM Generator  determines whether to retrain an SVM classifier based on the decision matrix illustrated in .","In one embodiment, SVM Generator  utilizes the policy decision made by the fingerprint evaluator  to retrain the SVM classifier . As discussed above, the predictor function associated with the SVM classifier is tuned to account for the new policy decision which has been added to the universe of policy decisions known to SVM generator . After retraining the SVM classifier, SVM generator  transmits the updated SVM classifier to DLP agent . As a result, if the policy violation detector  were to encounter similar source data, a decision based on the retrained SVM classifier  would match that made by the fingerprint evaluator  performed by the DMS . Thus, over time and as the SVM classifier is retrained, the SVM classifier is made more accurate.","Furthermore, in one embodiment, the transmission of classifiers, policy decisions, and source data, are each performed without any intervention of a user. Thus, the SVM classifier utilized by DLP agent  is automatically retrained and refined. Furthermore, the DLP agent  benefits from the use of a computationally lightweight SVM classifier that has the decision making accuracy of a more computationally involved fingerprint-based evaluation.","The components of  may represent module that can be combined together or separated into further modules, according to some embodiments.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 3","b":["300","300","300","252"]},"Referring to , processing logic begins by monitoring information content on a client for a data loss prevention (DLP) policy violation (processing block ). As discussed above, the information content may include information content within application files, email messages, text messages, instant messages, etc. In one embodiment, processing logic monitors the information content in real-time.","Processing logic then determines whether a policy violation has occurred for monitored information content based on a DLP classifier (processing block ). In one embodiment, the classifier is an SVM classifier. In one embodiment, as discussed above, processing logic extracts features from information content, applies a predictor function to a resulting feature vector, and categorizes the document as either violating or not violating a DLP policy based on results of the predictor function. In one embodiment, processing logic of a DLP agent utilizes the SVM classifier because it is a relatively lightweight DLP classifier (i.e., a lower memory footprint, less management, and higher performance). As a result, in one embodiment, the SVM classifier is well suited for deployment by processing logic of limited capability or mobile devices.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 4","b":["400","400","400","252"]},"Referring to , processing logic begins by receiving a support vector machine (SVM) classifier (processing block ). In one embodiment, the SVM classifier includes an SVM predictor function. Processing logic then applies the SVM classifier to a DLP agent (processing block ). In one embodiment, processing logic receives the SVM classifier from a data monitoring server. In one embodiment, the DLP agent is deployed on a user endpoint device, such as a cellular telephone, laptop computer, PDA, netbook, etc.","Processing logic monitors and determines when a policy violation for information content occurs based on the SVM classifier (processing block ). As discussed above, processing logic extracts features from information content, applies a predictor function to a resulting feature vector, and categorizes the document as either violating or not violating a DLP policy. In one embodiment, the SVM classifier is a DLP classifier that was generated from a set of training documents. In one embodiment, the SVM classifier enables processing logic to categorize text in information content according to the DLP policies that embody the classifier. Then based on the content of the information content and the policy rules, processing logic decides whether the information content violates or does not violate any of the data loss prevention policies of the SVM classifier. In one embodiment, processing logic utilizes the policy decisions to enforce one or more DLP processes, such as blocking a data transmission, triggering a warning to a user of an endpoint device, generating and transmitting a message regarding the violation to a network administrator, etc. Other remedial actions for policy violation detections may be made. In one embodiment, processing logic continuously monitors information content to determine, in real time, whether a policy violation has occurred.","Processing logic transmits one or more policy decisions and corresponding information content that was the basis for the policy decisions, to a DMS (processing block ). In one embodiment, processing logic transmits the policy decisions and source information content for those decisions to a data monitoring server, such as DMS  of . In one embodiment, processing logic transmits the policy decisions and source data in batches of a predefined size. In one embodiment, processing logic further transmits the batches of policy decisions and source data at predetermined times, such as preset time intervals, a specific time of day, a time when a user endpoint device is idle, etc.","Processing logic then receive an updated SVM classifier from the remote system (processing block ). In one embodiment, the remote system is a data loss prevention server computer system. In one embodiment, as discussed in greater detail below, the updated SVM classifier is a retrained version of the initial SVM classifier. In one embodiment, the updated SVM classifier includes an SVM predictor function that has been updated through the retraining of the SVM classifier with decision made by a more powerful document matching technique, such as fingerprint matching or other forms of document matching. Furthermore, as discussed below, the retraining utilizes the actual decisions and data used by the SVM classifier in making policy decisions. Thus, as the SVM classifier is refined over time, the data loss prevention decisions and policy enforcements made by the user endpoint device will approach that of the much more computationally intensive and precise data monitoring server classifications and policy enforcements. Despite the increased accuracy of the retrained SVM classifier, the computational benefits of utilizing an SVM classifier (e.g., lower computational expense, smaller memory footprint, less management, etc.) are retained for a limited capability user endpoint device, as well as other user endpoint devices.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 5A","b":["500","500","500","210"]},"Referring to , processing logic begins by creating an initial SVM classifier (processing block ). In one embodiment, the SVM classifier is created from an initial set of documents, where each document is known to either violate a DLP policy or not violate a DLP policy. Furthermore, in one embodiment, a feature set is included with the training set of document. As discussed above, the feature set may include words that could potentially trigger a DLP policy violation (e.g., confidential, secret, private, SSN, etc.), as well as include benign words. Because the documents are known to belong to one of two classifications, the universe of decisions is then created based on the feature vectors for the training document, where each vector falls in the universe of decisions. In one embodiment, processing logic creates a predictor function, such as a binary, multi-category, regression, etc. function, which maximizes the margin between the two categories when it is applied to the feature vectors.","Processing logic then transmits the SVM classifier to a DLP agent of a user endpoint device (processing block ). As discussed above, the DLP agent applies the SVM classifier to categorize information content for DLP policy violation monitoring, policy violation detection, and to take remedial actions when violation are detected.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 5B","b":["550","550","500","210"]},"Referring to , processing logic begins by receiving one or more policy decisions, and corresponding information content that formed the basis for the decisions, from a DLP agent of a client system (processing block ). In one embodiment, the policy decisions and the information content are received in a batch. In one embodiment, the policy violation decisions were based on decisions utilizing either an initial SVM classifier or an updated\/retrained SVM classifier, as discussed above.","Processing logic determines policy decisions for the information content based on fingerprint evaluation (processing block ). When a batch of policy decisions are received by processing logic, each SVM classifier decision is compared with each fingerprint-based policy decision.","Processing logic then determines whether at least one of the SVM classifier's decisions does not match a decision made by the fingerprint-based evaluation (processing block ). When there are no inconsistent decisions, the method ends because processing logic need not perform any retraining of the SVM classifier (i.e., all of the SVM classifier's decisions were consistent with those made with fingerprint-based evaluation). However, when there are inconsistent decisions between the SVM classifier and fingerprint-based evaluation, processing logic has determined that the SVM classifier should be retrained and advances to processing block . In one embodiment, processing logic utilizes the decision matrix illustrated in  to determine when to retrain an SVM classifier.","When there are inconsistencies between SVM classifier and fingerprint-based evaluation decisions, processing logic retrains an SVM classifier based on the fingerprint evaluation policy determinations (processing block ). In one embodiment, processing logic retrains the SVM classifier on a per-event basis for each of the inconsistent policy decisions. In another embodiment, processing logic retrains the SVM classifier utilizing a batch of policy decisions. In one embodiment, processing logic retrains the SVM classifier when the batch of policy decisions reaches a threshold size (e.g., when there are at least n policy decisions available for retraining the SVM classifier), with the batch of policy decisions available at recurring time intervals (e.g., retain an SVM classifier every 12 hours, 24 hours, etc.), with the batch of policy decisions available at a specified time (e.g., retraining set to occur at predicted system idle times), etc.","Processing logic then transmits the updated SVM classifier to the DLP agent of the user endpoint device (processing block ). In one embodiment, processing logic utilizes the information content from the inconsistent policy decisions to refine a predictor function of an SVM classifier. In one embodiment, the retrained SVM classifier is a more accurate version of a SVM classifier that preceded it. That is, the retrained SVM classifier is refined from the policy decisions of a more powerful, but also more computationally and resource demanding classification technique.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 7","b":"700"},"The exemplary computer system  includes a processing device (processor) , a main memory  (e.g., read-only memory (ROM), flash memory, dynamic random access memory (DRAM) such as synchronous DRAM (SDRAM) or Rambus DRAM (RDRAM), etc.), a static memory  (e.g., flash memory, static random access memory (SRAM), etc.), and a data storage device , which communicate with each other via a bus .","Processor  represents one or more general-purpose processing devices such as a microprocessor, central processing unit, or the like. More particularly, the processor  may be a complex instruction set computing (CISC) microprocessor, reduced instruction set computing (RISC) microprocessor, very long instruction word (VLIW) microprocessor, or a processor implementing other instruction sets or processors implementing a combination of instruction sets. The processor  may also be one or more special-purpose processing devices such as an application specific integrated circuit (ASIC), a field programmable gate array (FPGA), a digital signal processor (DSP), network processor, or the like. The processor  is configured to execute the processing logic  for performing the operations and steps discussed herein.","The computer system  may further include a network interface device . The computer system  also may include a video display unit  (e.g., a liquid crystal display (LCD) or a cathode ray tube (CRT)), an alphanumeric input device  (e.g., a keyboard), a cursor control device  (e.g., a mouse), and a signal generation device  (e.g., a speaker).","The data storage device  may include a machine-accessible storage medium  on which is stored one or more sets of instructions (e.g., software ) embodying any one or more of the methodologies or functions described herein. The software  may also reside, completely or at least partially, within the main memory  and\/or within the processor  during execution thereof by the computer system , the main memory  and the processor  also constituting machine-accessible storage media. The software  may further be transmitted or received over a network  via the network interface device .","While the machine-accessible storage medium  is shown in an exemplary embodiment to be a single medium, the term \u201cmachine-accessible storage medium\u201d should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, and\/or associated caches and servers) that store the one or more sets of instructions. The term \u201cmachine-accessible storage medium\u201d shall also be taken to include any medium that is capable of storing, encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present invention. The term \u201cmachine-accessible storage medium\u201d shall accordingly be taken to include, but not be limited to, solid-state memories, optical media, and magnetic media.","It is to be understood that the above description is intended to be illustrative, and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reading and understanding the above description. The scope of the invention should, therefore, be determined with reference to the appended claims, along with the full scope of equivalents to which such claims are entitled.","The foregoing description, for purpose of explanation, has been described with reference to specific embodiments. However, the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications, to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as may be suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention will be understood more fully from the detailed description given below and from the accompanying drawings of various embodiments of the invention, which, however, should not be taken to limit the invention to the specific embodiments, but are for explanation and understanding only.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
