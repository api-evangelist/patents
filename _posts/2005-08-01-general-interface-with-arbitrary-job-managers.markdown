---
title: General interface with arbitrary job managers
abstract: A method, system and computer program product is disclosed for providing a distributed computing environment in which an arbitrary job manager or scheduler is able to be plugged. In the distributed computing environment, a job is created in a storage location to include one or more technical computing tasks and submitted to the arbitrary scheduler by transferring a reference to the storage location of the job. Since a reference to the storage location of the job is transferred to the scheduler, the interface with the scheduler can be implemented regardless of the scheduler. The scheduler then transfers the reference to the storage location of the job to one or more remote workers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08230424&OS=08230424&RS=08230424
owner: The MathWorks, Inc.
number: 08230424
owner_city: Natick
owner_country: US
publication_date: 20050801
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATION","COPYRIGHT","TECHNICAL FIELD","BACKGROUND INFORMATION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This application is related to U.S. patent application Ser. No. 10\/940,151 filed on Sep. 13, 2004 now issued as U.S. Pat. No. 7,502,745, and U.S. patent application Ser. No. 11\/195,927 filed on Aug. 2, 2005, which is incorporated herewith by reference.","A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","The present invention generally relates to a distributed computing environment and more particularly to systems, methods and mediums for providing a general interface with arbitrary job managers in the distributed computing environment.","MATLAB\u00ae is a product of The MathWorks, Inc. of Natick, Mass., which provides engineers, scientists, mathematicians, and educators across a diverse range of industries with an environment for technical computing applications. MATLAB\u00ae is an intuitive high performance language and technical computing environment that provides mathematical and graphical tools for mathematical computation, data analysis, visualization and algorithm development. MATLAB\u00ae integrates numerical analysis, matrix computation, signal processing, and graphics in an easy-to-use environment where problems and solutions are expressed in familiar mathematical notation, without traditional programming. MATLAB\u00ae is used to solve complex engineering and scientific problems by developing mathematical models that simulate the problem. A model is prototyped, tested and analyzed by running the model under multiple boundary conditions, data parameters, or just a number of initial guesses. In MATLAB\u00ae, one can easily modify the model, plot a new variable or reformulate the problem in a rapid interactive fashion that is typically not feasible in a non-interpreted programming language such as Fortran or C.","As a desktop application, MATLAB\u00ae allows scientists and engineers to interactively perform complex analysis and modeling in their familiar worker environment. However, a single worker can be limiting to the size of the problem that can be solved, because of the relationship of the computing power of the worker to the computing power necessary to execute computing intensive iterative processing of complex problems in a reasonable time. For example, a simulation of a large complex aircraft model may take a reasonable time to run with a single computer with a specified set of parameters. However, the analysis of the problem may also require the model be computed multiple times with a different set of parameters, e.g., at one-hundred different altitude levels and fifty different aircraft weights, to understand the behavior of the model under varied conditions. This would require five-thousand computations to analyze the problem as desired and the single computer would take an unreasonable or undesirable amount of time to perform these simulations. In this case, the single computer would be allocated full-time to performing the computation while many computer resources on the network may be idle. Additionally, the benefit of the interactive features of the software is reduced as the computation time increases.","With many engineering and scientific problems requiring larger and more complex modeling, computations accordingly become more resource intensive and time-consuming. When a computation becomes so large and complex that it cannot be completed in a reasonable amount of time on a single computer, a solution to decrease the computation time is needed. As a solution, distributed computing systems have been provided to deal with a large and complex engineering and scientific computation. In the distributed computing systems, a job manager or scheduler may be employed to distribute a given computation to remote computing entities so that the remote computing entities are able to perform the distributed computation. The job manager or scheduler may be provided by various vendors, and may be unique in many respects. Therefore, it is needed for the distributed computing environment to interface with arbitrary job managers provided by arbitrary vendors (i.e., any one of a number of different job managers).","Co-pending U.S. patent application Ser. No. 10\/940,151 filed on Sep. 13, 2004, which is a continuation-in-part of pending U.S. Applications Nos. 10\/729,752 filed Dec. 4, 2003, Ser. No. 10\/896,671 filed Jul. 21, 2004 and Ser. No. 10\/896,784 filed Jul. 21, 2004, discloses an interface with an arbitrary job manager or scheduler, which is specific to the job manager or scheduler. Since the interface is specific to the job manager or scheduler, an interface must be built whenever a new job manager or scheduler is plugged in. Therefore, there is a need for a general interface that can be used independently of the job managers or schedulers.","The present invention provides a distributed computing environment in which an arbitrary job manager or scheduler may be successfully used without the need for building a custom interface for each variety of job managers. In the distributed computing system of the present invention, a job may be created by a host or client to include one or more tasks and submitted to the arbitrary job manager for distributing the job to one or more remote workers. The job or tasks may be created in a storage location that can also be accessed by the remote workers.","The present invention provides a generalized interface with the arbitrary job manager to establish communication channels with the arbitrary job manager. This generalized interface may be used with a variety of job managers. The interfaces with the arbitrary job manager may establish communication channels between the host or client and the arbitrary job manager so that the host or client is able to submit the job to the arbitrary job manager through the communication channels. The job may be submitted to the arbitrary scheduler by transferring a reference to the storage location of the job to the scheduler.","The interfaces with the arbitrary job manager may also establish communication channels between the arbitrary job manager and the remote workers so that the arbitrary job manager is able to distribute the tasks in the job to the remote workers through the communication channels. The scheduler may transfer the reference to the storage location of the job or tasks to the remote workers. Since the scheduler handles the reference to the storage location of the job or tasks, the interfaces with the scheduler can be independent of the scheduler.","The remote workers may access the storage location using the reference to the storage location of the job or tasks. The remote workers retrieve and execute the designated one or more tasks, and save the result of executing the one or more tasks in the storage location. The remote workers return the information that the designated one or more tasks have been executed to the arbitrary scheduler, which, in turn, forwards the information to the host or client. The host or client can retrieve the result of executing the job from the storage location.","In one aspect of the present invention, a method is provided for creating and submitting a job to a scheduler. The method includes the step of creating the job in a storage location to include one or more technical computing tasks. The method also includes the steps of establishing a communication channel with the scheduler, and submitting the job to the scheduler by transferring a reference to the storage location of the job to the scheduler through the communication channel with the scheduler.","In another aspect of the present invention, a method is provided for receiving and executing a job. The method includes the steps of establishing a communication channel with a scheduler, and receiving from the scheduler a reference to the storage location of the job through the communication channel. The method includes the step of retrieving the job from the storage location using the reference to the storage location of the job.","In another aspect of the present invention, a system is provided to include a storage location for storing a job including one or more technical computing tasks. The system also includes a client for creating the job in the storage location, and an interface for establishing a communication channel between the client and a scheduler so that the client submits the job to the scheduler by transferring a reference to the storage location of the job to the scheduler through the communication channel with the scheduler.","In another aspect of the present invention, a medium is provided holding instructions executable in an electronic device for a method. The method includes the step of creating a job in a storage location to include one or more technical computing tasks. The method also includes the steps of establishing a communication channel with the scheduler, and submitting the job to the scheduler by transferring a reference to the storage location of the job to the scheduler through the communication channel with the scheduler.","In another aspect of the present invention, a medium is provided holding instructions executable in an electronic device for a method. The method includes the steps of establishing a communication channel with a scheduler, and receiving from the scheduler a reference to a storage location of a job through the communication channel. The method includes the step of retrieving the job from the storage location using the reference to the storage location of the job.","Certain embodiments of the present invention are described below. It is, however, expressly noted that the present invention is not limited to these embodiments, but rather the intention is that additions and modifications to what is expressly described herein also are included within the scope of the invention. Moreover, it is to be understood that the features of the various embodiments described herein are not mutually exclusive and can exist in various combinations and permutations, even if such combinations or permutations are not made express herein, without departing from the spirit and scope of the invention.","The illustrative embodiment of the present invention provides a distributed computing environment in which an arbitrary scheduler may be used (i.e. \u201cplugged in\u201d). In the distributed computing environment of the illustrative embodiment, tasks can be created by a technical computing client and additionally organized into jobs. A job is a logical unit of activities, or tasks that are processed and\/or managed collectively. A task defines a technical computing command, such as a MATLAB\u00ae command, to be executed, and the number of arguments and any input data to the arguments. A job is a group of one or more tasks.","The illustrative embodiment will be described solely for illustrative purposes relative to a MATLAB\u00ae-based distributed computing environment. The MATLAB\u00ae-based distributed computing environment provides the Distributed Computing Toolbox and the MATLAB\u00ae Distributed Computing Engine to enable users to execute coarse-grained MATLAB\u00ae algorithms and Simulink\u00ae models in a cluster of computers. Users can prototype and develop applications in the MATLAB\u00ae environment and then use the Distributed Computing Toolbox to divide them into independent tasks. The MATLAB\u00ae Distributed Computing Engine evaluates these tasks on remote MATLAB sessions. The Distributed Computing Toolbox, together with the MATLAB\u00ae Distributed Computing Engine, substantially reduces overall execution time for many types of applications, including those in which algorithms or models are executed repeatedly on varying data sets.","Although the illustrative embodiment will be described relative to a distributed MATLAB\u00ae-based application, one of ordinary skill in the art will appreciate that the present invention may be applied to distributing the processing of technical computing tasks with other technical computing environments, such as technical computing environments using software products of LabVIEW\u00ae or MATRIXx from National Instruments, Inc., or Mathematica\u00ae from Wolfram Research, Inc., or Mathcad of Mathsoft Engineering & Education Inc., or Maple\u2122 from Maplesoft, a division of Waterloo Maple Inc.","In the illustrative embodiment of the present invention, a job is created to include technical computing tasks, and submitted to an arbitrary scheduler for distributing the job to remote technical computing workers for execution of the tasks on multiple computers systems. The job and tasks may be created in a storage location that can be accessed by the remote workers. The job and tasks may be created in different formats in different embodiments. The illustrative embodiment utilizes the MAT-file format to create the job and tasks in the storage location. Those of ordinary skill in the art will appreciate that the MAT-file format is an illustrative format and the job and tasks can be created in any other format, such as a binary format or a serial format.","The job may be submitted to the arbitrary scheduler by transferring to a reference to the storage location of the job. The reference to the storage location of the job can be transferred to the arbitrary scheduler through the interface that establishes a communication channel between the technical computing client and the arbitrary job manager. Subsequently, the scheduler may transfer the reference to the storage location of the job or tasks to remote workers through the interfaces that establish communication channels between the arbitrary job manager and the remote workers. Since the scheduler handles the reference to the storage location of the job or tasks, the interfaces with the scheduler can be independent of the scheduler. The remote workers may access the storage location using the reference to the storage location of the job or tasks. The remote workers retrieve and execute the designated one or more tasks, and save the result of executing the one or more tasks in the storage location. The remote workers return information that the task or tasks have been executed to the arbitrary scheduler, which, in turn, forwards the information to the host or client. The host or client can retrieve the result of executing the job from the storage location.","In the illustrative embodiment, the scheduler refers to a process or program that tracks the progress of and allocates resources for a series of tasks. Although the scheduler generally refers to a job manager or task manager with additional functions, the terms including scheduler, job manager and task manager are used interchangeably in the description of the illustrative embodiment of the present invention.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 1","FIG. 2","FIG. 3"],"b":["100","100","130","170","120","110","130","170","140","150","160","110","120","130","170","140","150","160","120","130","170","140","150","160","120","130","170","140","150","160","120","130","170","140","150","160","110","110","120","130","170","140","150","160"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 2","b":["200","200","200"]},"The computing device  may be electronic and include a Central Processing Unit (CPU) , memory , storage , an input control , a modem , a network interface , a display , etc. The CPU  controls each component of the computing device  to provide the distributed computing environment. The memory  temporarily stores instructions and data and provides them to the CPU  so that the CPU  operates the computing device  and runs the distributed computing environment. The memory  may include a computer system memory or random access memory such as DRAM, SRAM, EDO RAM, etc. The memory  may also include other types of memory as well, or combinations thereof. The storage , such as a hard-drive or CD-ROM, usually contains software tools for applications. The storage  includes, in particular, code for the operating system (OS)  of the device , code for applications  running on the operation system including applications for providing the distributed computing environment, such as MATLAB\u00ae distributed computing environments, and data  for jobs and tasks created in the distributed computing environment and the results of executing the jobs and tasks. The input control  may interface with a keyboard , a pointing device , and other input devices. The computing device  may receive through the input control  input data necessary for creating jobs and tasks. The computing device  may display in the display  user interfaces for the users to create the job and tasks. The computing device  may also display other user interfaces for the users to interact with the computing device  through the display , such as a computer monitor, which may include a graphical user interface (GUI). The modem  and network interface  enable the clients , servers  and , and workers ,  and  to communicate with other clients , servers  and , and workers ,  and  through the communication network .",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 3","b":["300","300","121","120","130","170","110","130","131","131","110","141","151","162","140","150","160","300","121","141","151","161","140","150","160","121","120","141","151","161","121","121","140","150","160","141","151","161","141","151","161","300","130","120"]},"The technical computing client  can be a technical computing software application that provides a technical computing and graphical modeling environment and to define mathematical algorithms for simulating models. The technical computing client  can be a MATLAB\u00ae distributed computing client, which may include all or a portion of the functionality provided by the standalone desktop application of MATLAB\u00ae. Additionally, the technical computing client  can be any of the software programs available in the MATLAB\u00ae product family. Furthermore, the technical computing client  can be a custom software program or other software that accesses MATLAB\u00ae functionality via an interface, such as an application programming interface, or by other means. One ordinarily skilled in the art will appreciate the various combinations of client types that may access the functionality of the system.","With the programming language of the technical computing client , functions can be defined representing a technical computing task to be executed by either a technical computing environment local to the client , or remote on a worker. The local technical computing environment may be part of the technical computing client , or a technical computing worker running on the client . The programming language includes mechanisms to define a job to be distributed to a technical computing environment and to communicate the job to the technical computing worker on the worker, or alternatively, on the client . For example, the technical computing client  may declare a function to generate a random set of ten numbers and further delegate that the technical computing worker running on the worker execute the function. Also, the programming language of the MATLAB\u00ae distributed computing client includes mechanisms to receive information regarding a result from the execution of technical computing of the job from another technical computing environment.","In the illustrative embodiment, the server  includes storage  and the job is created in the storage . The storage  can be provided in any of the servers coupled to the network  so that technical computing client  on a client  can access the storage  to create the jobs in the storage  and the technical computing workers ,  and  on the workers ,  and  can access the storage  to retrieve the tasks from the storage . The storage  may store the job in different format in different embodiments. The illustrative embodiment utilizes the MAT-file format to create the job in the storage . The MAT-file format stores data in binary form and support MATLAB\u00ae array types including multidimensional numeric arrays, character arrays, sparse arrays, cell arrays, structures and objects. The MAT-file format includes a header and one or more data elements. Each data element includes a tag and data. The tag specifies the number of bytes in the data element and the type of data in the data element. By using the tags, the MAT-file format provides quick access to individual data elements in the MAT-file. Those of ordinary skill in the art will appreciate that the MAT-file format is an illustrative format and other formats can be used in other embodiments.","The technical computing client  includes an interface  that enables the arbitrary scheduler  on the server  to interface with the technical computing client  on the client . The interface  establishes the communication channel between the technical computing client  and the arbitrary scheduler  so that the technical computing client  is able to submit the job to the arbitrary scheduler through the communication channel. In addition, the technical computing client  also receives information regarding a result from the execution of the job through the communication channel established by the interface  between the technical computing client  and the arbitrary scheduler . One of ordinary skill in the art will appreciate that the interface  may be provided in the technical computing client  or in the network interface .","The scheduler  is an arbitrary scheduler provided by any of a number of vendors. The arbitrary scheduler  may include or be associated with an automatic task distribution mechanism for the automatic distribution of tasks from the technical computing client  to the technical computing workers ,  and . The automatic task distribution mechanism may allow the technical computing client  to delegate the task distribution to the automatic task distribution mechanism. For example, a task can be created and submitted to the arbitrary scheduler  without specifying which technical computing worker is to perform the technical computing of the task. The technical computing client  does not need to know the specifics of the technical computing worker. The technical computing client can define a function to submit the task to the arbitrary scheduler , and get information regarding a result of the task from the arbitrary scheduler . As such, the arbitrary scheduler  provides a level of indirection between the technical computing client  and the technical computing worker.","This eases the distributed programming and integration burden on the technical computing client . The technical computing client  does not need to have prior knowledge of the availability of the technical computing workers ,  and . For multiple task submissions from the technical computing client , the arbitrary scheduler  can manage and handle the delegations of the tasks to the same technical computing worker , or to other technical computing workers, and hold information regarding the results of the tasks on behalf of the technical computing client  for retrieval after the completion of technical computing of all the distributed tasks.","The technical computing workers ,  and  can be a technical computing software application that provides a technical computing environment for performing technical computing of tasks, such as those tasks defined or created by the technical computing client . The technical computing workers ,  and  can be a MATLAB\u00ae distributed computing application, module, service, software component, or a session, which includes support for technical computing of functions defined in the programming language of MATLAB\u00ae. The technical computing workers ,  and  can include all the functionality and software components of the technical computing client , or it can just include those software components it may need to perform technical computing of tasks it receives for execution. The technical computing workers ,  and  may be configured to and capable of running any of the modules, libraries or software components of the MATLAB\u00ae product family. As such, the technical computing workers ,  and  may have all or a portion of the software components of MATLAB\u00ae installed on the workers ,  and , or alternatively, accessible on another system in the network . The technical computing workers ,  and  are capable of performing technical computing of the task as if the technical computing client  was performing the technical computing in its own technical computing environment.","The workers ,  and  include interfaces ,  and  that enable the arbitrary scheduler  on the server  to interface with the technical computing workers ,  and  on the workers ,  and , respectively. The interfaces ,  and  establish the communication channels between the arbitrary scheduler  and the technical computing workers ,  and  so that the arbitrary scheduler  is able to distribute the job or tasks to the technical computing workers ,  and  through the communication channels. In addition, the arbitrary scheduler may also receive information regarding the result from the execution of the tasks through the communication channels. One of ordinary skill in the art will appreciate that the interfaces ,  and  may be provided in the technical computing workers  and  and  or in the network interface .","The interfaces , ,  and  are able to establish communication channels with an arbitrary scheduler supplied from various venders and independent of an \u201cinterface protocol\u201d or \u201cinterface format\u201d of the arbitrary scheduler. The \u201cinterface protocol\u201d or \u201cinterface format\u201d refers to a set of rules for transmitting data and receiving data from the arbitrary scheduler. The set of rules is capable of defining a data format for transferring data to or receiving data from an arbitrary scheduler and is further capable of defining at least a type of error checking, if any, to be used for data transmissions; a data compression method, if any; how the sending mechanism will indicate that it has finished sending data; how the arbitrary scheduler will indicate that it has received data. The interfaces , ,  and  will be described below in more detail with reference to .",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 4","FIG. 4"],"b":["122","122","121","120","142","152","162","141","151","161","140","150","160","122","410","420","430","410","420","430"]},"The scheduler object  represents the scheduler  in the technical computing client  running on the client .  is a flow chart showing an exemplary operation to create the scheduler object  in the interface . The client  finds a scheduler or schedulers on the network  and registers the scheduler in its interface  (step ). In the MATLAB\u00ae distributed computing environment, users can use the \u201cfindresource\u201d command to identify available schedulers and to create the scheduler object  representing the scheduler  in the technical computing client . When the users have identified a scheduler, users can isolate it and create a single object  on the client  (step ). An exemplary code for finding a scheduler and creating a scheduler object is provided as follows.",{"@attributes":{"id":"p-0048","num":"0047"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},">> lsf = findresource(\u2018scheduler\u2019, \u2018name\u2019, \u2018lsf\u2019);"]},{"entry":[{},">> lsf"]},{"entry":[{},"lsf ="]},{"entry":[{},"\u2003distcomp.lsfscheduler"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The exemplary code shows that a scheduler object, lsf, is generated using the \u201cfindresource\u201d command. The scheduler object may include inputs such as a name given to a unique scheduler identifier, and other like inputs. The scheduler object  is associated with the arbitrary scheduler  uniquely identified by the inputs of the scheduler object . Users can examine the properties of the scheduler object  to identify which one the users want to use. An exemplary code for displaying the properties of the scheduler object  is provided as follows.",{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},">> get(lsf)"]},{"entry":[{},"\u2003\u2003DataLocation: \u2018\/home\/jlmartin\/project1\u2019"]},{"entry":[{},"HasSharedFilesystem: 1"]},{"entry":[{},"\u2003\u2003\u2003Jobs: [0x1 double]"]},{"entry":[{},"\u2003\u2003ClusterName: \u2018UK_LSF_DEVEL_CLUSTER\u2019"]},{"entry":[{},"\u2003\u2003MasterName: \u2018ukdev00glnxa64.mathworks.co.uk\u2019"]},{"entry":[{},"\u2009\u2009\u2009\u2009SubmitArguments: \u2018-R \u201ctype==any\u201d\u2019"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"One of skill in the art will appreciate that the properties of the scheduler object  in the exemplary code described above are illustrative and the scheduler object  may include other properties. One list of these properties and functions is described below.",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Scheduler Object Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Property Name","Property Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["DataLocation","Indicate the storage location of the job"]},{"entry":["MasterName","Indicate name of the master machine"]},{"entry":["Jobs","Indicate the jobs in the storage location"]},{"entry":["ClusterName","Indicate the name of the LSF cluster which the"]},{"entry":[{},"user is using"]},{"entry":["HasSharedFileSystem","Indicate whether there is a shared file system"]},{"entry":[{},"between the client and workers"]},{"entry":["SubmitArgument","Indicate arguments specific to the scheduler"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Scheduler Object Functions"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Method Name","Method Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"findJob","Find job objects in a job queue"]},{"entry":[{},"Pause","Pause the scheduler queue"]},{"entry":[{},"Resume","Resume processing of the scheduler queue"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"The scheduler object  includes properties generic to the arbitrary schedulers. For example, the DataLocation property indicates the storage location of the job in the storage . The storage location can be specified using a disk location (\/home\/jlmartin\/project1), as described above. One of ordinary skill in the art will appreciate that the storage location may be specified in other ways, such as a machine name and a TCP port number, or an IP address and a TCP port number. For example, the storage location may be specified by \u2018jdbc:mysql:port@machine:\/database\/name\u2019 which uses a database connection to TCP port number \u2018port\u2019 at machine called \u2018machine\u2019 and the database called \u2018database\/name\u2019. The DataLocation property may refer to an absolute path to the storage location, where each job or tasks can then be stored at a relative path within the absolute path.","Users may change the DataLocation property to a different storage location when the users want to use a different storage location. For example, users may have two projects to perform and the data locations for these projects can be \/home\/jlmartin\/project1 and \/home\/jlmartin\/project2, respectively. When creating jobs for the first project (project1), users can set DataLocation to \/home\/jlmartin\/project1, and when creating jobs for the second project (project2), users can change the DataLocation to \/home\/jlmartin\/project2. When DataLocation changes, the Jobs property of the scheduler object  may also change because a different job is stored at a different storage location. The following code shows an exemplary change of the DataLocation property of the scheduler object .",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},">> lsf.DataLocation = \u2018\/home\/jlmartin\/project2\u2019"]},{"entry":[{},"lsf ="]},{"entry":[{},"\u2003\u2003distcomp.lsfscheduler"]},{"entry":[{},">> lsf.get"]},{"entry":[{},"\u2003\u2003\u2003DataLocation: \u2018\/home\/jlmartin\/project2\u2019"]},{"entry":[{},"HasSharedFilesystem: 1"]},{"entry":[{},"\u2003\u2003\u2003Jobs: [2x1 distcomp.simplejob]"]},{"entry":[{},"\u2003\u2003ClusterName: \u2018UK_LSF_DEVEL_CLUSTER\u2019"]},{"entry":[{},"\u2003\u2003MasterName: \u2018ukdev00glnxa64.mathworks.co.uk\u2019"]},{"entry":[{},"\u2003SubmitArguments: \u2018-R \u201ctype==any\u201d\u2019"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The exemplary code shows that the DataLocation property of the scheduler object  changes to \/home\/jlmartin\/project2, and the Jobs property of the scheduler object  also changes to indicate a job stored at \/home\/jlmartin\/project2.","The scheduler object  may include properties that are specific to the arbitrary schedulers. The properties specific to the arbitrary schedulers can be obtained using the application program interface (API)  of the scheduler  provided on the server . For example, the SubmitArguments property is specific to the scheduler . The SubmitArguments property can be used to allow users to specify arguments with the submission of the job. For example, users can specify that the job only runs on linux64 machines by setting the SubmitArguments property to \u2018-R \u201ctype==LINUX64\u201d\u2019. The scheduler  interprets the arguments at the point it distributes the job to the remote workers.","Referring back to , the scheduler interface  is responsible for communicating between the technical computing client  and the arbitrary scheduler . When the technical computing client  calls the scheduler interface , the scheduler interface  communicates with the arbitrary scheduler , and establishes a connection or communication channel between the technical computing client  and the arbitrary scheduler . The scheduler interface  may use information contained in the scheduler object  to establish the communication channel between the technical computing client  and the arbitrary scheduler . The scheduler interface  is capable of interfacing with arbitrary schedulers of different vendors. The scheduler interface  may support interfaces with the arbitrary schedulers regardless of the vendors of the schedulers. Those skilled in the art will recognize that depending on the arbitrary scheduler  and the capabilities of the arbitrary scheduler , the interface  can offer multiple threads or multiple communication channels between the technical computing client  and the arbitrary scheduler  or between the technical computing client  and multiple arbitrary schedulers.","The storage interface  allows the technical computing client  to communicate with the storage . In the illustrative embodiment, the job is stored in a MAT-file format using the \u201csave\u201d function provided in MATLAB\u00ae. The \u201csave\u201d function encodes the job to a continuous byte stream. When the workers retrieve the job, the job can be restored using the \u201cload\u201d command provided in MATLAB\u00ae.","The interface  using the scheduler interface  and the storage interface  establishes and provides communication channels between the technical computing client  and the arbitrary scheduler  and between the technical computing client  and the storage . The communication channels operate in a manner independent of the vendor of the arbitrary scheduler thus allowing the technical computing client  to interface with the arbitrary scheduler  and the storage  regardless of the vendor of the scheduler. Although the scheduler interface  and the storage interface  are described as distinct entities in the illustrative embodiment, those skilled in the art will appreciate that the scheduler interface  and the storage interface  may be implemented as a single entity.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 6","b":["271","610","121","141","151","161","410"]},{"@attributes":{"id":"p-0063","num":"0062"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},">> j = createJob(lsf)"]},{"entry":[{},"j ="]},{"entry":[{},"\u2003distcomp.simplejob"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Users can see the properties of the job object with the following statement in MATLAB\u00ae.",{"@attributes":{"id":"p-0065","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},">> get(j)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003Type: \u2018job\u2019"]},{"entry":[{},"\u2003\u2003\u2003\u2003Name: \u2018Job3\u2019"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003ID: 3"]},{"entry":[{},"\u2003\u2003\u2003UserName: \u2018jlmartin\u2019"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003Tag: \u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003State: \u2018pending\u2019"]},{"entry":[{},"\u2003\u2003CreateTime: \u2018Thu Jun 02 13:56:44 BST 2005\u2019"]},{"entry":[{},"\u2003\u2003SubmitTime: \u201d"]},{"entry":[{},"\u2003\u2003\u2003StartTime: \u201d"]},{"entry":[{},"\u2003\u2003FinishTime: \u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003Tasks: [0x1 double]"]},{"entry":[{},"FileDependencies: {0x1 cell}"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003JobData: [ ]"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003Parent: [1x1 distcomp.lsfscheduler]"]},{"entry":[{},"\u2003\u2003\u2003\u2003UserData: [ ]"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Users can change the properties of the job. For example, users can change the Tag property of the job as follows.",{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},">> set(j, \u2018Tag\u2019, \u2018Hello\u2019)"]},{"entry":[{},">> get(j)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003Type: \u2018job\u2019"]},{"entry":[{},"\u2003\u2003\u2003\u2003Name: \u2018Job3\u2019"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003ID: 3"]},{"entry":[{},"\u2003\u2003\u2003UserName: \u2018jlmartin\u2019"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003Tag: \u2018Hello\u2019"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003State: \u2018pending\u2019"]},{"entry":[{},"\u2003\u2003CreateTime: \u2018Thu Jun 02 13:56:44 BST 2005\u2019"]},{"entry":[{},"\u2003\u2003SubmitTime: \u201d"]},{"entry":[{},"\u2003\u2003\u2003StartTime: \u201d"]},{"entry":[{},"\u2003\u2003FinishTime: \u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003Tasks: [0x1 double]"]},{"entry":[{},"FileDependencies: {0x1 cell}"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003JobData: [ ]"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003Parent: [1x1 distcomp.lsfscheduler]"]},{"entry":[{},"\u2003\u2003\u2003\u2003UserData: [ ]"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The created job has no callbacks or links to a scheduler, which means that the job is created independently of the scheduler  on the network . The State property of the job is \u201cpending,\u201d which means that the job has not been submitted for running on the scheduler , so users can add tasks to the job. After users have created the job, and while it is still in the pending state, users can create tasks for the job (step ). Tasks define the functions to be evaluated by the workers during the running of the job. In the illustrative embodiment, a task defines a technical computing command, such as a MATLAB\u00ae command, to be executed, and the number of arguments and any input data to the arguments. An exemplary creation of a task is provided as follows.",{"@attributes":{"id":"p-0069","num":"0068"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},">> t = createTask(j, @rand, 1, {1})"]},{"entry":[{},"t ="]},{"entry":[{},"\u2003distcomp.simpletask"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Users can see the properties of the task object with the following statement in MATLAB\u00ae.",{"@attributes":{"id":"p-0071","num":"0070"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},">> get(t)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003Type: \u2018task\u2019"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003Name: \u2018Task1\u2019"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003ID: 1"]},{"entry":[{},"\u2003\u2003\u2003\u2003Function: @rand"]},{"entry":[{},"\u2003\u2003\u2003NumberOfOutputArguments: 1"]},{"entry":[{},"\u2003\u2003\u2003\u2002InputArguments: {[1]}"]},{"entry":[{},"\u2003\u2003\u2003\u2002OutputArguments: {1x0 cell}"]},{"entry":[{},"CaptureCommandWindowOutput: 0"]},{"entry":[{},"\u2003\u2003CommandWindowOutput: \u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003State: \u2018pending\u2019"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002ErrorMessage: \u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002ErrorIdentifier: \u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003CreateTime: \u2018Thu Jun 02 13:57:23 BST 2005\u2019"]},{"entry":[{},"\u2003\u2003\u2003\u2003StartTime: \u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003FinishTime: \u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003Parent: [1x1 distcomp.simplejob]"]},{"entry":[{},"\u2003\u2003\u2003\u2003UserData: [ ]"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The users can check the jobs and tasks created in the specified storage location. In the illustrative embodiment, users can view the list of jobs and tasks as follows.",{"@attributes":{"id":"p-0073","num":"0072"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":">> ls lsf"},{"entry":"Job1 \u2003\u2003Job1.in.mat \u2003\u2003Job2 \u2003\u2003Job2.in.mat \u2003\u2003Job3 \u2003\u2003Job3.in.mat"},{"entry":"Job1.common.mat Job1.out.mat Job2.common.mat Job2.out.mat Job3.common.mat Job3.out.mat"},{"entry":">> ls lsf\/Job1"},{"entry":"Task1.common.mat Task1.in.mat Task1.log Task1.out.mat"},{"entry":">> ls lsf\/Job2"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Task1.common.mat","Task2.common.mat","Task3.common.mat","Task4.common.mat"]},{"entry":["Task1.in.mat","Task2.in.mat","Task3.in.mat","Task4.in.mat"]},{"entry":["Task1.out.mat","Task2.out.mat","Task3.out.mat","Task4.out.mat"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"Referring back to , after creating the job and tasks in the storage , the users then submit the job to the scheduler  to run the job and have its tasks evaluated in the remote workers ,  and  (step ). The job created in a specified storage location may be submitted to the scheduler  by transferring a reference to the storage location of the job. For example, in the illustrative embodiment, the reference to the storage location is a string of the form, \\\\mathworks\\sandbox\\jlmartin\\lsf\\data in a window-based system, and \/sandbox\/jlmartin\/lsf\/data in a UNIX system. Since the specific storage location resides on disk, it is sufficient to pass the reference to the file locations to the remote workers so that the workers can then retrieve the files. For a database storage location, the reference may be of the form, jdbc:mysql:365@martinjlinux.mathworks.com:\/Project1, which indicates that the database to use is on the machine named \u2018martinjlinux.mathworks.com\u2019 at port , and that the database is a MySQL database and called Project1.","The scheduler may then distribute the job to remote workers for the evaluation of the tasks in the job. The scheduler may distribute the job to the workers  by transferring the reference to the storage location of the job or tasks to the workers. The job or tasks may include license information of the client . The workers may execute the job or tasks using the license information for the software components or products of the client . The execution of the job or tasks by the technical computing workers will be described below in more detail with reference to .",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 7","FIGS. 3 and 4","FIG. 5","FIG. 5"],"b":["140","140","131","710","131","140","131","720","140","730","140","740","750","760","131","770","131","120","640","120","650","140","150","160"]},"Many alterations and modifications may be made by those having ordinary skill in the art without departing from the spirit and scope of the invention. Therefore, it must be expressly understood that the illustrated embodiments have been shown only for the purposes of example and should not be taken as limiting the invention, which is defined by the following claims. These claims are to be read as including what they set forth literally and also those equivalent elements which are insubstantially different, even though not identical in other respects to what is shown and described in the above illustrations."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing and other objects, aspects, features, and advantages of the invention will become more apparent and may be better understood by referring to the following description taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
