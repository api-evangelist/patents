---
title: Sampling and control circuit board for an inertial measurement unit
abstract: A circuit board that serves as a control and sampling interface to an inertial measurement unit (“IMU”) is provided. The circuit board is also configured to interface with a local oscillator and an external trigger pulse. The circuit board is further configured to receive the external trigger pulse from an external source that time aligns the local oscillator and initiates sampling of the inertial measurement device for data at precise time intervals based on pulses from the local oscillator. The sampled data may be synchronized by the circuit board with other sensors of a navigation system via the trigger pulse.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09423426&OS=09423426&RS=09423426
owner: The United States of America as Represented by the Administrator of National Aeronautics and Space Administration
number: 09423426
owner_city: Washington
owner_country: US
publication_date: 20120803
---

{"@attributes":{"id":"description"},"GOVINT":[{},{}],"heading":["ORIGIN OF THE INVENTION","FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF THE EMBODIMENTS"],"p":["The invention described herein was made by employees of the United States Government and may be manufactured and used by or for the Government for Government purposes without the payment of any royalties thereon or therefore.","The invention described herein was also made in the performance of work under a NASA contract and is subject to the provisions of Section 305 of the National Aeronautics and Space Action of 1958, Public Law 85-568 (72 Stat. 435; 42 U.S.C. 2457).","The present invention generally pertains to circuits, and more specifically, to a circuit board that serves as a control and sampling interface to an Inertial Measurement Unit (\u201cIMU\u201d) and is closely synchronized with other sensors.","Certain electronic devices may track position for various terrestrial and space applications. Such devices include Global Positioning Systems (\u201cGPS\u201d) and IMUs. IMU measurements are qualitatively different from radiometric measurements used by systems such as GPS. GPS uses time of flight, whereas IMUs measure acceleration and changes in angle (i.e., inertial measurements) via mechanisms such as accelerometers measuring load cells, spring displacements, etc. The inertial measurements are intrinsic to the physics of the body they are on, whereas radiometric measurements are used to calculate position mathematically as legs of a triangle.","IMUs may be particularly beneficial in navigation systems where it is not possible to use an external navigation source, such as GPS, for a period of time. For example, for spacesuit navigation on the lunar surface, GPS is generally not usable because the moon currently lacks a network of satellites required to effectively facilitate GPS. Four satellites are required to determine horizontal position and height (i.e., location in three dimensions), as well as receiver clock offset.","However, to be most effective and simple to integrate into an overall navigation system consisting of many sensors, IMU data generally should be closely synchronized in time to other sensors in the system, such as GPS or other radiometric measurements when available. This generally requires a precise time-stamp technique as well as external synchronization pulse triggering. Conventional systems are stand-alone IMU applications that often rely on GPS as a time stamping device rather than on a triggering mechanism to synchronize collection of IMU data. The high drift rates of Micro-Electromechanical System (\u201cMEMS\u201d) IMUs, or the inclusion of gravity sensors to correct the drift, make these stand-alone solutions particularly impractical for various applications, such as studying lunar surface navigation. Accordingly, an IMU system that can effectively synchronize with other system sensors without relying solely on time stamping may be beneficial.","Certain embodiments of the present invention may be implemented and provide solutions to the problems and needs in the art that have not yet been fully solved by conventional position measurement systems. For example, certain embodiments of the present invention include a circuit board that serves as a control and sampling interface to an IMU. The circuit board may provide sampling and communication abilities that allow the IMU to be sampled at precise time intervals based on an external trigger pulse, which enables various navigation sensors to be synchronized closely in time. The data may be minimally processed onboard and returned to a separate processor for inclusion in an overall system (e.g., for lunar surface navigation). The circuit board may allow the normal overhead associated with IMU data collection and timing to be performed outside of the system processor, freeing up time to run more intensive algorithms in parallel. Such embodiments may include the circuit schematic, board layout, and microcontroller firmware for the IMU sampling and control circuit board.","In one embodiment of the present invention, an apparatus includes a circuit board configured to interface with an inertial measurement device, a local oscillator, and an external trigger pulse. The circuit board is configured to receive the external trigger pulse that time aligns the local oscillator and initiates sampling of the inertial measurement device for data at precise time intervals based on pulses from the local oscillator. The sampled data is synchronized by the circuit board with other sensors of a navigation system via the external trigger pulse.","In another embodiment of the present invention, an apparatus includes a circuit board configured to interface with an inertial measurement device, a local oscillator, and an external trigger pulse. The circuit board is configured to receive the external trigger pulse that time aligns the local oscillator. The circuit board is also configured to sample the inertial measurement device for data at time intervals based on pulses from the oscillator.","In yet another embodiment of the present invention, a system includes an inertial measurement unit, a local oscillator, and a main processor. The system also includes a circuit board configured to interface with the inertial measurement unit, the oscillator, an external trigger pulse, and the main processor. The circuit board is configured to receive the external trigger pulse that time aligns the local oscillator. The circuit board is also configured to sample the inertial measurement device for data at time intervals based on pulses from the oscillator. The sampled data is synchronized by the circuit board with other sensors of a navigation system via the trigger pulse. The main processor is configured to perform intensive processing for the navigation system.","Some embodiments of the present invention facilitate more effective time synchronization of an inertial device with other navigation system devices. One or more IMUs, such as microelectromechanical systems (\u201cMEMS\u201d) IMUs, may be used to supplement a radiometric infrastructure, such as GPS. When synchronizing with a radiometric system, a time stamp is periodically received. The radiometric system can often provide a synchronization pulse or time stamp that represents a given instant in time when the radiometric navigation information was transmitted or processed by the system or local radiometric receiver. For instance, for GPS, the time stamp may be received at a rate of 1 pulse per second (\u201cPPS\u201d).","However, the frequency with which the time stamp is received, as well as whether or not it is received periodically or irregularly, are matters of design choice depending on the radiometric device. In between receiving these time stamps, and when such a time stamp is unavailable, clock drift may occur between the inertial device and other devices in the navigation system, such as a radiometric device. For instance, in some embodiments, 1024 inertial measurements or more may be received from the inertial device between each GPS PPS signal. This may create many time synchronization issues when computing an overall navigation solution using an algorithm that includes sensor data from the inertial device, the radiometric device, or any other type of navigational device.","Some embodiments assume that the frequency and time drift of the local oscillator between PPS signals is relatively small as compared to the frequency and time drift over longer periods of time. For example, if the system was synchronized at t=0 and then no synchronization was performed over 1 hour, the clock drift could be quite large, depending on the stability of the local oscillator. In some embodiments, the system is resynchronized every second (1 PPS), coordinated with the synchronization pulse or signal from the radiometric navigation system, which prevents significant drift from accumulating. The synchronization pulse or signal can represent the point in time when a radiometric signal was transmitted, the point in time when a radiometric navigation solution was computed, or any other point in time that is synchronous to the operation of the radiometric navigation system. While the period of 1 PPS is discussed here for resynchronization, any desired resynchronization period, or variable times between resynchronizations, depending on the design of the radiometric system, may be used in certain embodiments.","In order to compensate for these time synchronization issues, some embodiments compensate for clock differences between the radiometric system and the IMU circuit board. This is measurement time bias. Measurement time bias can be reduced by periodically time aligning the IMU circuit board oscillator. When an external trigger pulse is received from the radiometric navigation system, the external trigger pulse causes the local oscillator to reset the IMU sampling operation. The local oscillator controls sampling of the IMU at a fixed rate between external trigger pulses, and the local oscillator is periodically time aligned to the radiometric navigation system whenever the external trigger pulse is received. By effectively compensating for measurement time bias, time synchronization issues between the IMU and other navigation system sensors may be resolved for at least a certain period of time between external trigger pulses.","GPS, as a radiometric navigation system, typically has 1 PPS, but an advantage of IMUs is that more rapid updates are received since the data can be sampled many times per second. This gives better understanding of a body in motion, particularly if the body is moving and\/or changing direction rapidly. Using many embodiments, it is possible to know within a small degree of error that the IMU is synchronized in time with the radiometric navigation system, for instance, between time stamps. Although GPS is not available for space applications outside of the near vicinity of the Earth, the same triggering concept can be applied to other radiometric navigation systems.","Time stamping is a different way of achieving a similar effect. Time stamping is the process of marking the point in time that a measurement is received, from the reference frame of some local oscillator or time keeping device. When a system is distributed across several devices with different local oscillators, such as in the case of an IMU circuit board and a separate radiometric receiver board, time stamping may be infeasible if the drift between the oscillators is not known. Time stamping requires significant processing resources to perform later time alignment of measurements. Many low power microcontrollers lack processing resources to spare for such calculations. For example, performing floating point operations using software is relatively time consuming. However, these resources are not needed for triggered data collections, as provided by many embodiments of the present invention, since the trigger allows the system to collect data at the same time across many sensors, within a small degree of error.","The local oscillator stability can be characterized between PPS pulses to provide evidence of this degree of time and frequency drift error. Furthermore, if there is a loss of the radiometric signal, operational redundancy is provided since the local oscillator can freewheel for a period of time with a known degree of accuracy using some embodiments. This allows different embodiments to be applied to extraterrestrial surface navigation where a radiometric signal may only be available on a limited basis, situations where a radiometric external trigger signal is blocked, such as inside certain buildings or urban canyons, etc.","An oscillator is used to keep time stable between GPS trigger pulses in many embodiments. In other words, the trigger pulse may be driven at a slower rate by a satellite oscillator and the local oscillator may provide higher rate sampling operations than the satellite signal. Alternatively, the local oscillator may operate at a slower rate or at the same rate as the radiometric trigger, as may be needed by some embodiments.","For example, a system that is triggered by a 1 PPS external trigger may provide alignment of the local oscillator such that the local oscillator begins counting at the instant the external trigger is received. The local oscillator generally runs at a high rate (e.g., 20 MHz) and can drive a phase-locked loop circuit to provide a medium sampling rate suitable for the IMU (e.g., 500 Hz). The mechanism of operation may allow the 1 PPS signal to align the local oscillator and allow the local oscillator to freewheel in the interim between 1 PPS signals. As such, the accuracy of the data acquisition time alignment is a function of the drift of the local oscillator between PPS signals. This is, in general, still better than allowing the local oscillator to freewheel without input from the radiometric trigger since the systems are still aligned within some degree of accuracy. The IMU circuit board can also be wirelessly placed at a distance from the acquisition system in some embodiments. In this case, the radio transmission delay between the radiometric trigger signal and the circuit board radio receiver location should be taken into account.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1","b":["100","100","110","120","130","120"]},"An enhanced command interface may allow navigation processor  to request data from IMU interface circuit board  as single samples, blocks, or a stream. In addition, IMU interface circuit board  may accept an input as an external trigger pulse that may be used to coordinate sampling with the rest of the system. For example, the input may be sent at a rate of 1 PPS. The 1 PPS signal, combined with a more stable oscillator, may yield a useful data set that can be synchronized with other sensors for post-processing.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 2","FIG. 1"],"b":["200","200","100","200","210","210","220","280"]},"In this embodiment, IMU interface circuit board  is configured to interface with, for example, a MEMS Analog Devices ADIS16364\u2122 IMU . It should be appreciated that IMU interface circuit board  may be configured to interface with other similar devices. IMU  is configured to provide six degrees of freedom using a tri-axis gyroscope and tri-axis accelerometer. The gyroscope sensitivity may be selectable at 75, 150, or 300 degrees-per-second, and the accelerometer may support a range of +\/\u22125 g of acceleration. IMU  provides data communication over a Serial Peripheral Interface (\u201cSPI\u201d), making IMU interface circuit board  generally compatible with similar models of Analog Devices IMUs by simply changing scale factors in this embodiment.","Microcontroller","In this embodiment, microcontroller  is a Freescale MC9S08SH32\u2122 microcontroller. This is an 8-bit microcontroller with 32 kB of flash memory and 1 kilobyte of Random Access Memory (\u201cRAM\u201d). Microcontroller  provides two Timer Peripheral Modules (\u201cTPMs\u201d), a SPI module, and a Serial Communications Interface (\u201cSCI\u201d) module. IMU interface circuit board  uses the 20-TSSOP package type in this embodiment.","Off-Board Communications","In this embodiment, off-board communications support is handled by a FTD FT232R\u2122 USB-UART interface  or a Parani ESD200\u2122 Bluetooth adapter . Both devices interface with the SCI module of microcontroller  and provide communication at 115200 baud. IMU interface circuit board  provides a Dual In-line Package (\u201cDIP\u201d) switch that allows selection of the desired output device. Serial Transistor-Transistor Logic (\u201cTTL\u201d) communication is also available through test ports, such as Joint Test Action Group (\u201cJTAG\u201d) interface .","Oscillator","A CB3-3I-18M4320\u2122 oscillator  operates at 18.432 MHz and provides 50 parts-per-million (ppm) stability to the clock of microcontroller . This particular frequency was chosen in this embodiment since the frequency is less than the maximum bus frequency (20 MHz) of microcontroller  and an integer multiple of 115200 baud (when multiplied by 160). The oscillator ppm accuracy translates to a frequency variation of +\/\u2212461 Hz on the processor bus (9.216 MHz), 6 Hz at the SCI module (115.2 kHz), and 77 Hz at the SPI clock (1.536 MHz).",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 3","b":"300"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 4","b":["400","410","420"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 5","b":["500","510"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 6","b":"600"},{"@attributes":{"id":"p-0048","num":"0047"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SW2 FUNCTIONS"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Switch Position",{}]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","2 ","3","4","5","6","7","8","Function"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}},{"entry":["on","off ","on","off","off","\u2014","\u2014","\u2014","Enables output from the "]},{"entry":[{},{},{},{},{},{},{},{},"USB interface module"]},{"entry":["off ","on","off","on","on","\u2014","\u2014","\u2014","Enables output from the "]},{"entry":[{},{},{},{},{},{},{},{},"Bluetooth interface module"]},{"entry":["\u2014","\u2014","\u2014","\u2014","\u2014","on ","off","\u2014","Enables RESET line, used "]},{"entry":[{},{},{},{},{},{},{},{},"for programming"]},{"entry":["\u2014","\u2014","\u2014","\u2014","\u2014","off ","on","off","Provides 1 PPS synchro-"]},{"entry":[{},{},{},{},{},{},{},{},"nization pulse directly to IMU"]},{"entry":["\u2014","\u2014","\u2014","\u2014","\u2014","off","off","on","Provides firmware synchro-"]},{"entry":[{},{},{},{},{},{},{},{},"nization pulse to IMU"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]}}]}}},"A dash (-) indicates that the switch position does not affect the respective function.","Firmware","In some embodiments, the microcontroller firmware may be coded in C or assembly due to the relatively small code size as compared to many object-oriented programming languages; however, any desired programming language could be used. In an embodiment coded in C, the source code is 600 lines, including a 170-line IMU calibration and configuration sequence. The code in this embodiment utilizes 825 bytes in memory, plus a 7-byte data section. The primary subroutines and configuration settings are reviewed in this section for this embodiment, but it is understood that other suitable subroutines and\/or configurations may be used.","The source code in this embodiment contains SPI commands, which are sent from the microcontroller to the IMU, consisting of 16-bit addresses in reverse-byte order. For example, the X gyroscope value may be read by sending \u201c0x04, 0x00\u201d to query the 16-bit register at 0x04. However, SPI is a full-duplex communication protocol, so the response to this request is not seen until the next request is sent. Therefore, a total of 8 commands (2 bytes each) are sent to read 7 registers and obtain X, Y, and Z acceleration and rotation, as well as the X accelerometer temperature.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 7","b":"700"},"Subroutines (Modules)","Example subroutines, or modules, with respect to the C-coded embodiment above are discussed below. These subroutines may have different functionality or not be present at all in other embodiments. Additional subroutines may also be present.","Main: The main subroutine calls all of the initialization routines and periodically polls the push-button switch on PTC1. When the push button switch is activated, the calibrate subroutine is called to calibrate and configure the IMU. All other IMU routines are handled through interrupts.","Calibrate: The calibrate subroutine performs a number of internal tests and configures parameters on the IMU. First, the mechanical self-test routine checks the IMU internal sensors. If mechanical self-test fails, the IMU has been damaged and a \u201ccalibrate\u201d LED remains illuminated. The default IMU internal sampling rate may be set to 546 samples per second, for example. Analog filtering and accelerometer compensation flags are set and the data ready (DIO1) output is enabled. The data ready output signal is set logic high when the digital registers of the IMU are updated, triggering a microcontroller read. Finally, the IMU precision automatic bias null calibration procedure samples for around 35 seconds to reduce gyroscope bias. This procedure should be performed with the IMU on a stationary surface.","read_IMU: The read_IMU subroutine transfers rotation, acceleration, and temperature data from the IMU to the navigation processor. The subroutine starts by transmitting a free-running 16-bit internal counter value to the navigation processor as a timestamp, where 1 bit is 0.434 microseconds (\u03bcsec). A request is sent for gyroscope X rotation data, but no useful data is generally returned on the first full duplex transaction. The next set of requests for gyroscope-Y and -Z, accelerometer-X, -Y, and -Z, and temperature (twice) data all return valid data points, which are then relayed to the navigation processor. The microcontroller SCI module buffers and transmits the data via a USB or Bluetooth interface, as selected in hardware.","init_GPIO: The init_GPIO subroutine sets up the general-purpose input\/output (GPIO) pins on the microcontroller. In particular, PTA0 (1 PPS LED), PTA1 (calibrate LED), and PTA2 (transmit LED) all have high drive strength. PTA0 is toggled every time a GPS 1 PPS signal is received, to indicate that the board is being synchronized to 1 PPS. PTA1 is used exclusively to that the board is in calibration mode and unavailable. PTA2 indicates that the board is transmitting data to the navigation processor. PTA3 receives the IMU DIO1 \u201cdata ready\u201d trigger and interrupts into the read_IMU subroutine.","init_chip: The init_chip subroutine causes the RESET pin is set to function as an external IRQ input. The external reference oscillator is selected and the bus is set to use the full frequency (divide-by-1). However, the bus is actually half of the oscillator frequency because it triggers on one edge only.","init_SPI: The init_SPI subroutine configures communication with the IMU. The maximum rate that the IMU will support is 2 MHz, and the SPI clock rate is set to 1.5360 MHz (bus rate, divide-by-6). The slave select (SS#) pin is released for GPIO operation. This is generally required for 16-bit SPI communication.","init_SCI: The init_SCI subroutine sets the USB\/Bluetooth data rate as the bus rate divide-by-5 and divide-by-16 for a resulting 115200 baud. The microcontroller uses SCI to transmit data to the navigation processor and receive control characters. An interrupt is generated whenever a byte is received.","init_MOD: The init_MOD subroutine establishes a 40 \u03bcsec delay for use between subsequent commands to the IMU in read_IMU.","init_TPM: The init_TPM subroutine sets up two 16-bit counters: TPM1 and TPM2. The first counter, TPM1, generates a sync pulse for the IMU at approximately 500 Hz (+\/\u22120.025 Hz). Every time the IMU receives this pulse, its digital circuit collects a new sample from the analog sensors. The second counter, TPM2, is a free-running counter with a 0.434 \u03bcsec period. The counter overflows every 0.028 seconds, which is enough to timestamp 14 IMU datasets before resetting. This counter is sent to the navigation processor to show the timing between IMU samples in a relative sense.","SWI_ISR: The SWI_ISR interrupt service routine (\u201cISR\u201d) is used to halt the microcontroller when an IMU mechanical failure is detected by the calibrate subroutine.","IRQ_SWR: The IRQ_ISR routine is triggered when a 1 PPS signal (1 Hz) is received from the GPS. When this signal is received, a sync pulse is sent to the IMU to begin data collection. TPM1 is reset and begins to collect data at 500 Hz from the IMU automatically. The microcontroller performs data collection in a mode based on the last received command from the navigation processor.","PTA_ISR: The PTA_ISR routine handles interrupts generated by the IMU DIO3 port that indicate new data is available. The routine determines how many datasets (consisting of gyro-X,-Y,-Z, acceleration-X,-Y,-Z, and temperature) still need to be collected before the next 1 PPS interrupt. The data sent to the navigation processor has a hexadecimal word pre-pended: the first block after the 1 PPS uses \u201c0xBEDE\u201d and subsequent blocks use \u201c0xBEEF\u201d. Finally, when no more blocks are remaining before the next 1 PPS, the routine disables the TPM1 sync pulse, which stops the IMU DIO1 that triggers the PTA_ISR subroutine.","SCI_ISR: The SCI_ISR routine receives command bytes from the navigation processor. These command bytes are used by the IRQ_ISR subroutine to decide how to collect data. When \u2018g\u2019 is received (\u201cgo\u201d), data is collected and transmitted continuously at 500 Hz. When \u2018d\u2019 is received (\u201cdata\u201d), data is collected and transmitted over the next 1 second only. When \u2018o\u2019 is received (\u201cone\u201d), only a single block of data is collected and transmitted. Any other character will disable data collection and transmission as soon as possible.","TPM1_ISR: The TPM1_ISR subroutine sends a sync pulse to the IMU to trigger data collection. Normally this is handled in the timer module. However, this subroutine allows better pulse timing in IRQ_ISR. The automatic method does not synchronize the output pulse to the 1 PPS signal deterministically.","Timing Considerations","The IMU interface board makes tradeoffs to balance IMU design requirements with science objectives. Ideally, a fast sample rate will deliver the best science data. However, practical considerations, including maximum communication speeds (SCI and SPI), IMU sampling rates, and commanding delay restrict the achievable data rates. A sample rate of 500 Hz was selected for testing in some embodiments. The primary IMU rate restrictions for an Analog Devices ADIS16364\u2122 IMU are summarized in Table 2 below.",{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PRIMARY DATA RATE RESTRICTIONS OF THE IMU"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Parameter i","Restriction","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"f","Maximum 2.0","Restricts the serial clock rate"]},{"entry":[{},{},"MHz rate","between the IMU and"]},{"entry":[{},{},{},"microcontroller to 2.0 MHz"]},{"entry":[{},{},{},"(0.5 \u03bcsec) maximum."]},{"entry":[{},"t","Minimum 40","Restricts the rate of data reads"]},{"entry":[{},{},"\u03bcsec delay","so that there is a minimum of"]},{"entry":[{},{},{},"40 \u03bcsec from the start of one"]},{"entry":[{},{},{},"register read to the start of the"]},{"entry":[{},{},{},"next register read."]},{"entry":[{},"t","Typical 600 ","Inserts a 600 \u03bcsec delay"]},{"entry":[{},{},"\u03bcsec delay","between the capture of analog"]},{"entry":[{},{},{},"data due to a sync pulse and"]},{"entry":[{},{},{},"the read of the corresponding"]},{"entry":[{},{},{},"digital registers by the"]},{"entry":[{},{},{},"microcontroller."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"The navigation processor and microcontroller have data rate restrictions due to the 115200-baud communication interface. In order to maintain 500-Hz sampling, a new dataset should be read from the IMU every 2 milliseconds. There is a minimum 40 \u03bcsec delay between subsequent register reads, although in practice this is mitigated by transmitting data to the navigation processor (navproc) while waiting. A simplified, theoretical timing breakdown is provided in Table 3 below.",{"@attributes":{"id":"p-0074","num":"0073"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"TIMING BREAKDOWN PER IMU DATASET"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Time",{}]},{"entry":["Data Flow","Bytes","Data Rate","(\u03bcsec)","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"right"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["To navproc","\u20022","115200 ","bps","139","Dataset header (0xBEEF "]},{"entry":[{},{},{},{},{},"or 0xBEDE)."]},{"entry":["To navproc","\u20022","115200 ","bps","139","Dataset timestamp from"]},{"entry":[{},{},{},{},{},"TPM2."]},{"entry":["To IMU","16","2 ","Mbps","640","IMU register reads for"]},{"entry":[{},{},{},{},{},"(7 + 1) 16-bit registers,"]},{"entry":[{},{},{},{},{},"limited by a minimum"]},{"entry":[{},{},{},{},{},"delay of 40 \u03bcsec for each"]},{"entry":[{},{},{},{},{},"read."]},{"entry":["To navproc","14","115200 ","bps","972","Dataset values for (7) 16-"]},{"entry":[{},{},{},{},{},"bit registers from the IMU."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u2014","\u2014","\u2014","110","Predicted time margin for"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},{},{},"each dataset."]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}]}}},"Since the IMU is sampled at 500 Hz, the timing in Table 3 is repeated 500 times per second. The 1 PPS signal provides synchronization to the microcontroller TPM1 timer, and then the TPM1 timer provides sub-second timing to control the IMU sampling rate.","Hardware Traces","The overall hardware timing for the embodiment discussed above is shown in the oscilloscope traces in . 1 PPS signal  triggers the start of TPM1 pulse in TPM signal , which causes the IMU to sample its analog registers. The TPM1 pulse drops when the IMU issues a \u2018data ready\u2019 interrupt, and the dataset header and timestamp are transmitted via USB. SPI signal  is used to poll the IMU registers several times, and each returned value is transmitted immediately over USB, as shown in USB signal . This allows the system to efficiently meet the 40 \u03bcsec minimum delay between register reads.","The traces in  show both the beginning of the current sample set and the end of the previous sample set. The registers are sampled 500 times per second, with a delay between the time when the samples are collected by the IMU registers and when the samples are available to the microcontroller. Therefore, either the individual sample periods should have sufficient margin to account for this delay, or the overall sample rate should be accelerated slightly to ensure that the previous sample set does not overflow into the next. The sampling rate in  provides a margin of about 4 milliseconds to account for any delays.","The 4-millisecond margin provides a buffer against oscillator drift. As the timing constraints of the individual datasets get tighter (i.e., faster sampling), there is greater risk that drift will create a communication backlog or periodic errors. Providing a significant margin at the end of the sampling cycle reduces the chances that drift will disrupt the 1 PPS synchronization.","The traces  in  examine a single dataset. As with , a 1 PPS signal , a USB signal , and a TPM signal  are shown. Each IMU SPI block of SPI signal  contains the 7 values of interest: gyroscope (Gx, Gy, Gz), accelerometer (Ax, Ay, Az), and temperature (T). There is minimal (40 \u03bcsec) delay after Gx because the returned data is not valid. The Gx data is returned on the Gy request. Similarly, T should be requested twice (T1, T2) since the correct value is returned at T2.","In order to make IMU datasets useful for post-processing, the timing should be synchronized with other sensors and system components. An average hardware timing  of a 1 PPS to TPM1 trigger across 50 samples is shown in , which demonstrates that the response time does vary slightly between subsequent sample sets. TPM signal  and 1 PPM signal  are shown. The worst case response was 5.26 \u03bcsec, the best case was 4.72 \u03bcsec, and on average, the interface responded in 4.99 \u03bcsec.","According to the datasheet for the Analog Devices ADIS16364\u2122 IMU, the tdelay between the TPM1 trigger and the data ready interrupt is typically 600 \u03bcsec. In practice, this was found to be around 520 \u03bcsec for the particular IMU in use. The timestamp sent to the navigation processor is delayed the same duration. In theory, the IMU samples all of its analog sensors simultaneously on the rising edge of TPM1 pulse . Therefore, the sensor values are collected approximately 5 \u03bcsec after the 1 PPS pulse and assigned a timestamp 518 \u03bcsec later. The timestamp can be adjusted by negative 523 \u03bcsec to determine the 1 PPS epoch.","The 500 Hz timing is verified in hardware timing  of . The time step between three datasets is 4.0 msec (250 Hz), yielding a 500 Hz average sample rate between each dataset. Timing variations between subsequent datasets are tracked by the TPM2 timestamp. Also, there is a sufficient margin prior to the next 1 PPS pulse to allow for small amounts of drift (approximately 0.2% to 0.4%).","The actual inter-dataset timing margin, 435 \u03bcsec, is shown in . In Table 3 the simplified margin was predicted to be 110 \u03bcsec. However, hardware parallelism significantly increases the margin. The microcontroller provides buffering and parallel operation for the USB transmission, which eliminates the time cost of SPI reads. This saves 40 \u03bcsec per each of 8 reads, or about 320 \u03bcsec.","The majority of hardware timing constraints are due to communications delays. There are other unaccounted factors, such as instruction execution time, which will provide only minimally affect the dataset timing and are not considered here. The individual dataset timing margin, 435 \u03bcsec, would allow transmission of an extra 6 bytes of data to the navigation processor without significant impact. Or, system sampling could be increased to 638 Hz without reducing the dataset.","Some embodiments of the present invention pertain to a microcontroller interface board for an Analog Devices ADIS16364\u2122 IMU. However, other embodiments may be adapted for other boards, as would be understood by one of ordinary skill in the art. The board discussed above supports sampling at 500 Hz with synchronization to a 1 PPS pulse with 5 \u03bcsec delay on average. The microcontroller firmware is adaptable to similar Analog Devices IMUS and can be modified to accommodate different timing schemes. The circuit provides selectable communication between either the USB or Bluetooth modules at 115200 baud.","The interface board of some embodiments of the present invention addresses two important issues: synchronization and data corruption. Synchronization is resolved through the external 1 PPS trigger, which allows all elements of the system to be synchronized to the same pulse. Data corruption primarily is solved through use of an external oscillator that allows the sampling rate and communications rates to be held relatively constant despite temperature change. These enhancements make it easier to include the board in an overall navigation system with other sensors.","It should be noted that some of the subroutines described in this specification have been presented as modules, in order to more particularly emphasize their implementation independence. For example, a module may be implemented as a hardware circuit comprising custom very large scale integration (\u201cVLSI\u201d) circuits or gate arrays, off-the-shelf semiconductors such as logic chips, transistors, or other discrete components. A module may also be implemented in programmable hardware devices such as field programmable gate arrays, programmable array logic, programmable logic devices, graphics processing units, or the like.","A module may also be at least partially implemented in software for execution by various types of processors. An identified unit of executable code may, for instance, comprise one or more physical or logical blocks of computer instructions that may, for instance, be organized as an object, procedure, or function. Nevertheless, the executables of an identified module need not be physically located together, but may comprise disparate instructions stored in different locations which, when joined logically together, comprise the module and achieve the stated purpose for the module. Further, modules may be stored on a computer-readable medium, which may be, for instance, a hard disk drive, flash device, random access memory (\u201cRAM\u201d), tape, or any other such medium used to store data.","Indeed, a module of executable code could be a single instruction, or many instructions, and may even be distributed over several different code segments, among different programs, and across several memory devices. Similarly, operational data may be identified and illustrated herein within modules, and may be embodied in any suitable form and organized within any suitable type of data structure. The operational data may be collected as a single data set, or may be distributed over different locations including over different storage devices, and may exist, at least partially, merely as electronic signals on a system or network.","It will be readily understood that the components of various embodiments of the present invention, as generally described and illustrated in the figures herein, may be arranged and designed in a wide variety of different configurations. Thus, the detailed description of the embodiments of the systems, apparatuses, methods, and computer programs of the present invention, as represented in the attached figures, is not intended to limit the scope of the invention as claimed, but is merely representative of selected embodiments of the invention.","The features, structures, or characteristics of the invention described throughout this specification may be combined in any suitable manner in one or more embodiments. For example, reference throughout this specification to \u201ccertain embodiments,\u201d \u201csome embodiments,\u201d or similar language means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, appearances of the phrases \u201cin certain embodiments,\u201d \u201cin some embodiment,\u201d \u201cin other embodiments,\u201d or similar language throughout this specification do not necessarily all refer to the same group of embodiments and the described features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.","It should be noted that reference throughout this specification to features, advantages, or similar language does not imply that all of the features and advantages that may be realized with the present invention should be or are in any single embodiment of the invention. Rather, language referring to the features and advantages is understood to mean that a specific feature, advantage, or characteristic described in connection with an embodiment is included in at least one embodiment of the present invention. Thus, discussion of the features and advantages, and similar language, throughout this specification may, but do not necessarily, refer to the same embodiment.","Furthermore, the described features, advantages, and characteristics of the invention may be combined in any suitable manner in one or more embodiments. One skilled in the relevant art will recognize that the invention can be practiced without one or more of the specific features or advantages of a particular embodiment. In other instances, additional features and advantages may be recognized in certain embodiments that may not be present in all embodiments of the invention.","One having ordinary skill in the art will readily understand that the invention as discussed above may be practiced with steps in a different order, and\/or with hardware elements in configurations which are different than those which are disclosed. Therefore, although the invention has been described based upon these preferred embodiments, it would be apparent to those of skill in the art that certain modifications, variations, and alternative constructions would be apparent, while remaining within the spirit and scope of the invention. In order to determine the metes and bounds of the invention, therefore, reference should be made to the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In order that the advantages of certain embodiments of the invention will be readily understood, a more particular description of the invention briefly described above will be rendered by reference to specific embodiments that are illustrated in the appended drawings. While it should be understood that these drawings depict only typical embodiments of the invention and are not therefore to be considered to be limiting of its scope, the invention will be described and explained with additional specificity and detail through the use of the accompanying drawings, in which:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
