---
title: Integrated user interface
abstract: A system and method for a content player to determine and retrieve a graphical asset associated with a player feature supported by the content. The content player downloads the graphical assets, integrates the graphical assets in the player's graphical user interface, and displays the graphical assets as part of the player's user interface. The user can now select one of the graphical assets to enable the player feature associated with the graphical asset.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08892988&OS=08892988&RS=08892988
owner: Google Inc.
number: 08892988
owner_city: Mountain View
owner_country: US
publication_date: 20091216
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field of Art","The present invention relates generally to web-based multimedia players, and more particularly to a graphical user interface for the web-based multimedia players.","2. Description of the Related Art","Content providers serve their multimedia content to end users through content hosting sites like YOUTUBE. Currently, the content providers have minimal control over the multimedia player displaying the content and the features available on the multimedia player for the content. For example, the content providers cannot choose if closed captioning should be available with their content. Additionally, the content provider cannot specify the graphical interface available for the features supported by the content. On the other hand, the content hosting sites face the challenges of keeping the multimedia player user friendly and avoiding cluttering the player with excessive graphical user interface elements that distract the user from enjoying the content.","The present invention enables a content provider to choose a graphical asset for a player feature that should be displayed as part of the player's graphical user interface when the content provider's content is played. The content provider populates a module descriptor with information about the features supported by the content and the graphical asset that should be displayed on the player for the user to access each feature. The content provider also provides a download location for the graphical assets in the module descriptor.","When a user requests the content provider's content through a content player, the content player retrieves a module descriptor for the content from the content hosting server, determines the graphical assets for the content and the player features associated with the graphical assets, downloads the graphical assets, integrates the graphical assets in the player's graphical user interface, and displays the graphical assets as part of the player's user interface. The user can then select one of the integrated graphical assets to enable the player feature associated with the graphical asset.","The features and advantages described in the specification are not all inclusive and, in particular, many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings, specification, and claims. Moreover, the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the disclosed subject matter.","The figures depict various embodiments of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the instructions and methods illustrated herein may be employed without departing from the principles of the invention described here.","The figures and the following description relate to preferred embodiments by way of illustration only. It should be noted that from the following discussion, alternative embodiments of the structures and methods disclosed herein will be readily recognized as viable alternatives that may be employed without departing from the principles of what is claimed.","Reference will now be made in detail to several embodiments, examples of which are illustrated in the accompanying figures. It is noted that wherever practicable similar or like reference numbers may be used in the figures and may indicate similar or like functionality. The figures depict embodiments of the disclosed system (or method) for purposes of illustration only. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein.","System Overview","A user requests a webpage with an embedded multimedia file from a browser and the browser receives a container file as part of the webpage. The container file is internally linked to the multimedia server and causes the browser to download the multimedia file to the browser. The multimedia content being downloaded is displayed on the multimedia player within the webpage as the content becomes available.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 1","FIG. 1","FIG. 1"],"b":["100","130","108","105"]},"Each of the various servers described in  is implemented as a server program executing on server-class computer comprising a CPU, memory, network interface, peripheral interfaces, and other well-known components. The computers themselves in various embodiments run an operating system such as LINUX, Microsoft Windows, or Apple OS X, have generally high performance CPUs, 1 GB or more of memory, and 100 GB or more of disk storage. Of course, other types of computers can be used, and as more powerful computers are developed in the future, they can be configured in accordance with the teachings here. The functionality implemented by any of the elements can be provided from computer program products that are stored in tangible computer accessible storage mediums (e.g., RAM, hard disk, or optical\/magnetic media) and accessed by the computer(s). Generally, functions described in one embodiment as being performed on the server side can also be performed on the client side in other embodiments if appropriate. Additionally, the functionality attributed to a particular component can be performed by different or multiple components operating together.","Referring to  again, the content hosting server  includes a network interface , a front end server , a content server , a content database , a module description database , and a GUI asset database . Examples of a suitable content hosting server  for implementation of the system include the YOUTUBE\u2122 and GOOGLE VIDEO\u2122 servers; other content hosting sites are known as well, and can be adapted to operate according the teaching disclosed herein.","The front end server  receives the users' requests for a multimedia file, determines and retrieves the module descriptor for the multimedia file from module description database , and transmits the retrieved module descriptor to client . In one embodiment, as described below, module descriptor identifiers rather than the descriptors themselves are retrieved from database . The front end server  also forwards the request for multimedia file to content server  and content server  transmits the file to client .","Content server  receives uploaded multimedia content from content providers and transmits requested content to client . Content may be uploaded to content server  via the Internet from a personal computer, through a cellular network from a telephone or PDA, or by other means for transferring data over network  known to those of ordinary skill in the art. Content may be transmitted or downloaded from content server  in a similar manner. In one embodiment media content is transmitted as a file download to a client , and in an alternative embodiment, media content is streamed to client . The means by which media content is received by content server  need not match the means by which it is delivered to client . For example, a content provider may upload a multimedia file via a browser on a personal computer, whereas client  may receive that content as a data stream.","The content database  stores multimedia content received by content server . In one embodiment, the content database  also stores corresponding metadata associated with the content like content ID, content creator, content title, label, genre, and content duration.","The module description database  stores module descriptors associated with the multimedia content. The module descriptors are used by client  to determine the features supported by the requested content, the graphical user interface associated with the feature, and a download location for the associated graphical user interface. The client  can use this information to download the graphical user interface or the required parts of the graphical user interface, integrate the graphical user interface into the embedded player  on client , and display the graphical user interface on embedded player  while displaying the requested multimedia file. The module description database is described below in .","The GUI asset database  stores graphical assets, i.e. various parts of the graphical user interface, displayed to the user on client . In one embodiment, the GUI asset database  also stores secondary menu modules associated with a graphical asset. The secondary menu modules include information for secondary menus that are displayed when the associated graphical asset is displayed and selected on embedded player . The information includes the options available in the secondary menu, player features associated with those options, and the placement of the secondary menu in relation to the graphical asset.","In one embodiment, module descriptors in module description database  include the location of this GUI asset database  as the download location for a requested graphical asset.","The network  represents communication pathways between the client , websites  and content hosting server . The network  is typically the Internet, but can also utilize dedicated or private communications links that are not necessarily part of the Internet. In one embodiment, the network  uses standard communications technologies, protocols, and\/or interprocess communications techniques. Thus, the network  can include links using technologies such as Ethernet, 802.11, integrated services digital network (ISDN), digital subscriber line (DSL), asynchronous transfer mode (ATM), etc. Similarly, the networking protocols used on the network  can include the transmission control protocol\/Internet protocol (TCP\/IP), the hypertext transport protocol (HTTP), the simple mail transfer protocol (SMTP), the file transfer protocol (FTP), the short message service (SMS) protocol, etc. The data exchanged over the network  can be represented using technologies and\/or formats including the hypertext markup language (HTML), the extensible markup language (XML), etc. In addition, all or some of the links can be encrypted using conventional encryption technologies such as the secure sockets layer (SSL), HTTP over SSL (HTTPS), and\/or virtual private networks (VPNs). In another embodiment, the nodes can use custom and\/or dedicated data communications technologies instead of, or in addition to, the ones described above.","A client  executes a browser  such as GOOGLE CHROME\u2122, MICROSOFT INTERNET EXPLORER\u2122 or MOZILLA FIREFOX\u2122, and connects to front end server  via a network . While only a single client  and browser  are shown, it is understood that multiple clients are supported and can be in communication with the content hosting server  at any time. The browser  can include an embedded player  described below in  for playing the content in file formats used in the content hosting server . A user can access content from the content hosting server  by browsing a catalog of videos, conducting searches on keywords, reviewing playlists from other users or the system administrator (e.g., collections of videos forming channels), or viewing videos associated with particular user group (e.g., communities). A user can also access content indirectly, via embedded content  that is accessed via an embedded hyperlink in a third party website .",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 2","b":["140","140","140","242","244","242","246","242"],"i":["a","n","a","n ","a","n ","a","n ","a","n. "]},"Each module descriptor -includes information about the GUI assets associated with various features supported by corresponding multimedia files -. Accordingly, the module descriptor  comprises GUI asset identifier -, identifier -for the supported feature associated with the GUI asset, the list of available states -supported by the identified GUI asset, and a download location -for the identified GUI asset.","In one embodiment, the module description database  includes, instead of the module descriptor , a module descriptor identifier (not shown) corresponding to the module descriptor . In this embodiment, the module descriptors  corresponding to the module descriptor identifiers reside in the embedded player .","GUI asset identifier -can be any reference used to identify the asset. For example, GUI asset identifier -can be an alphanumeric string used to reference the graphical asset. Similarly, the associated feature identifier -can be any reference used to identify a feature of the embedded player  supported by requested content. For example, an associated feature identifier -can reference the closed captioning feature of embedded player  that is supported by various multimedia files.","The available states is a list of states supported by the graphical asset. For example, a graphical asset can support four states: not available, available and on, available and off, and module error. The \u201cnot available\u201d state informs a user that a particular feature is not available for requested content. For example, graphical asset in  is in not available state and informs the user that the annotation feature associated with the graphical asset is not available for the requested content. Assets that are in not available state can be displayed in a lighter shade or in a visually distinguishing manner to inform the users that the feature represented by the lighter shaded asset is not available for the content being currently displayed. Alternatively, non-available assets are not displayed at all.","The \u201cavailable and off\u201d state informs the user that a particular feature is available for the requested content but the feature has not currently been selected by the user. Graphical asset is an example of a graphical asset in available and off state. As shown in , graphical asset is not disabled and the user can select the warp function by selecting the graphical asset . The graphical asset , however, is not selected and therefore is in available and off state.","The \u201cavailable and on\u201d state informs the user that a particular feature is available for the requested content and the user has selected the feature. For example, graphical asset is in available and on state because the user has selected the closed captioning feature for the content.","The \u201cmodule error\u201d state informs the user or the embedded player  that there was an error associated with the graphical asset. The error can further inform the user or the player  that the error occurred in retrieving the graphical asset, integrating the graphical asset, or initializing the feature associated with the graphical asset. In one embodiment, the embedded player  determines that the graphical asset is in module error state before displaying the graphical asset and does not display the graphical asset. The user therefore does not see the graphical asset at all. In another embodiment, the embedded player  displays the graphical asset with an exclamation mark or other visible indications indicating to the user that the graphical asset is in module error state. In yet another embodiment, the embedded player  displays visible indications on the graphical assets that convey to the user whether the error occurred in retrieving the graphical asset, integrating the graphical asset or in initializing the feature associated with the graphical asset.","The module descriptor  for a multimedia file can be populated by the content provider or the content host. In one embodiment, the content providers and the content hosting administrator share a pre-determined list of associated feature identifiers -and available states -. The predetermined lists enable the content providers to populate the module descriptor  in a manner that is understood by the embedded player  usually provided by the content host. The predetermined lists can be shared between the content host and content provider in a number ways. For example, the content host can publish a list of associated feature identifiers -and available states -","The content provider can now choose a graphical asset identifier for one of the graphical assets and the associated feature identifier from the pre-determined list and populate the module descriptor  with this information. The content provider can populate the module descriptor  by editing the module descriptor  through a client interface provided by content host.","In one embodiment, the content host determines the features associated with the content and the graphical asset associated with each feature. The content host then populates the graphical asset identifier  and the associated feature identifier  in module descriptor . The associated features can be determined by analyzing the header or metadata of the content file or the content provider can provide the associated feature to the content provider in a text file or by filling an electronic form.","When the embedded player later receives the module descriptor for the content, the embedded player  determines the feature associated with the graphical asset from the module descriptor, associates that player feature with the graphical asset, and displays the graphical asset for the user while playing the content. After the user selects the displayed graphical asset, the embedded player  calls the associated feature routine to implement the associated feature.","Similarly, the content provider or the content host can provide one or more of the predetermined states -supported by a graphical asset. The embedded player  can later determine the supported states for the graphical asset and set those states when a corresponding event occurs. For example, the embedded player  can set the state of the displayed graphical asset to \u201cavailable and on\u201d when a user selects the displayed graphical asset. In one embodiment, the content provider can also provide instructions to embedded player  on how to handle various states. For example, the content provided can instruct the embedded player  to display the graphical asset in a different color when the graphical asset is available and on instead of unavailable. The content provider can provide these instructions through APIs (application programming interface) that change the color of the graphical asset and then call APIs of embedded player  to implement the feature associated with the graphical asset.","In one embodiment, various module descriptors  are pre-configured with one or more of associated feature identifiers , available states  and download locations . These pre-configured module descriptors  are associated with pre-configured module descriptor identifiers. The pre-configured module descriptors  and their corresponding identifiers reside in embedded player . In this embodiment, the content provider or the content host do not populate a module descriptor  corresponding to content. Instead, the content provider or content host determines one of the pre-configured module descriptor  that corresponds to the content. The content provider or the content host then selects the identifier corresponding to determined module descriptor . When the embedded player  later receives the identifier corresponding to the determined module descriptor , the embedded player  retrieves the corresponding module descriptor  residing in the embedded player . The embedded player  then uses the retrieved module descriptor  to retrieve and associate a graphical asset with a player feature.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 3","b":["134","108","130","134","302","304","306","308","134","246","134"]},"Controller  implements the state machine of embedded player  and directs video decoder , audio decoder  and player GUI module  to execute their respective tasks at appropriate times. Controller  also communicates with content hosting server  to request and receive multimedia content and graphical assets to be displayed on embedded player .","Video decoder  decodes encoded video files received from content hosting server . The video decoder  can support a variety of video compression standards like MPEG 1, MPEG 2, MPEG 4 etc.","Audio decoder  decodes encoded audio files received from content hosting server . The audio decoder  can support a variety of audio compression standards like GSM-AMR, AC3, mp1, mp2, mp3 etc.","Player GUI module  determines and displays the graphical user interface for the embedded player . In one embodiment, the player GUI module  receives the module descriptor  for the requested content, dynamically determines from the module descriptor  the graphical assets supported by the requested content, associates the determined graphical assets with corresponding player features, integrates the graphical assets into the graphical user interface of the embedded player  and displays the integrated graphical user interface on client  when the requested content is played.","Additionally, the player GUI module  conveys the user selections to appropriate modules. For example, when a user selects the pause graphical asset to pause the multimedia file being played, the GUI module  relays the user's selection to appropriate modules like video decoder  and audio decoder .","Method Overview",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 4","b":["134","134","402","124","108","124","404","140","246","124","406","246","134"]},"The controller  at embedded player  receives the module descriptor  and forwards the module descriptor  to player GUI module . In one embodiment, the controller  receives a module descriptor identifier and retrieves the corresponding module descriptor  residing in the embedded player . The player GUI module  reads the module descriptor  and determines  the graphical asset identifier , identifier  for the feature associated with identified graphical asset, the available states  for the identified asset, and a download location  where the graphical asset can be downloaded.","In one embodiment, the download location for identified graphical asset is the GUI asset database  and the player GUI module  requests  the identified graphical asset from GUI asset database . The GUI asset database  retrieves the requested graphical asset and transmits  the retrieved graphical asset to player GUI module . In one embodiment, the graphical asset is associated with a secondary menu module and the GUI asset database  also transmits the associated secondary menu module to player GUI module .","The player GUI module  initializes the state of the graphical asset and integrates  the graphical asset into the graphical user interface of the player . The player GUI module  also associates the graphical asset with a feature supported by the player. If the graphical asset is associated with a secondary menu module, the player GUI module  associates the player feature to display a secondary menu. In one embodiment, the player GUI module  associates an API routine in the player with the graphical asset's available and on state. The association informs the controller  to call the associated routine whenever the user selects the graphical asset and the graphical asset's state becomes available and on. The GUI module  then displays  the graphical asset on embedded player . When a graphical asset associated with displaying a secondary menu is selected, the player GUI module dynamically builds the secondary menu including entries from the secondary menu module and displays the secondary menu on the embedded player . In , secondary menu  is one example of secondary menu described above. Player  displays secondary menu  after graphical asset is displayed and then selected. The secondary menu  is described further below in .",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 5","b":["308","504","506","134"]},"As described in , the player GUI module  determines the graphical assets associated with features in requested content from a module descriptor. One of ordinary skill in the art will understand that module descriptors are one of many ways to determine the associated graphical assets. For example, the request received by the embedded player  can include parameters indicating the associated features and graphical assets supported by the requested content. In another example, the received content is accompanied by metadata describing the supported features and graphical assets. In yet another example, the initial part of the received content like a header of a media file includes data indicating the supported features and graphical assets.","Additionally, in some embodiments, the embedded player  does not receive graphical assets from a graphical asset database for every content request. For example, the embedded player  can store the received graphical asset and its association with a player feature in a player database. In this embodiment, after receiving a request from the user, the embedded player  first queries the player database for a graphical asset before requesting the graphical asset from the download location.","In another embodiment, the embedded player  does not receive graphical assets from the GUI asset database and instead includes a set of graphical assets and their association with player features. In this embodiment, the received content request or the received content indicates the player features supported by the content and the player GUI module  determines the associated graphical assets from the player database.","In embodiments where the graphical asset is present in the player database, the controller  skips the step of requesting the graphical asset from GUI asset database , the player GUI module  retrieves the graphical asset from the player database, associates  a player feature with the graphical asset, and integrates  the graphical asset with graphical user interface of player .","The player GUI module  then initializes the state of the graphical asset and displays  the graphical asset on player . In one embodiment, if the player GUI module  determines an error occurred with retrieving or integrating the graphical asset, or initializing the feature associated with the graphical asset, the player GUI module  does not display the graphical asset.","Next, controller  displays the requested content with the integrated graphical user interface for the user and implements  the feature associated with the graphical asset whenever the graphical asset is selected.","The disclosed methods of  and  allow a content provider to control the displayed graphical assets when the embedded player  displays the provider's content. The content provider can provide or choose not to provide a graphical asset for a particular feature supported by the content.","On the other hand, the content hosting administrator can control where the graphical asset would be displayed on the player. For example, the content hosting administrator in  has chosen to display the graphical assets on the bottom right. The disclosed methods therefore provide the content providers with the control on graphical assets that are displayed with their content and content hosting administrators with control on where the graphical assets are displayed on the embedded player .","Examples of User Interface with Integrated Graphical Assets",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 6","FIG. 4","FIG. 6","FIG. 7"],"b":["134","134","414","416","604","602","602","602","602"],"i":["c ","a","d","a ","d "]},"The graphical asset is in a not available state (as indicated in the example by the \u201cno\u201d sign in graphical asset) informing the user that the annotation feature is unavailable for the multimedia file currently being played. The annotation feature allows a user to add interactive commentary to the multimedia files.","Graphical asset is in available and on state informing the user that closed captioning feature has been selected. In this embodiment, player feature associated with available and on state of graphical asset is displaying the secondary menu . The user can choose a language from the displayed secondary menu  and the embedded player will then provide closed captioning in the selected language for the displayed multimedia file.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 7","b":["700","134","134","700","602","700","702","702","702"],"i":["a ","a ","b ","c "]},{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 8","FIG. 8"],"b":["134","802","802","802","802","802","802","812","802","134"],"i":["a ","b","a","b ","a ","b","b ","a","c ","b"]},"As used herein any reference to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular element, feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment.","Some embodiments may be described using the expression \u201ccoupled\u201d and \u201cconnected\u201d along with their derivatives. It should be understood that these terms are not intended as synonyms for each other. For example, some embodiments may be described using the term \u201cconnected\u201d to indicate that two or more elements are in direct physical or electrical contact with each other. In another example, some embodiments may be described using the term \u201ccoupled\u201d to indicate that two or more elements are in direct physical or electrical contact. The term \u201ccoupled,\u201d however, may also mean that two or more elements are not in direct contact with each other, but yet still co-operate or interact with each other. The embodiments are not limited in this context.","As used herein, the terms \u201ccomprises,\u201d \u201ccomprising,\u201d \u201cincludes,\u201d \u201cincluding,\u201d \u201chas,\u201d \u201chaving\u201d or any other variation thereof, are intended to cover a non-exclusive inclusion. For example, a process, method, article, or apparatus that comprises a list of elements is not necessarily limited to only those elements but may include other elements not expressly listed or inherent to such process, method, article, or apparatus. Further, unless expressly stated to the contrary, \u201cor\u201d refers to an inclusive or and not to an exclusive or. For example, a condition A or B is satisfied by any one of the following: A is true (or present) and B is false (or not present), A is false (or not present) and B is true (or present), and both A and B are true (or present).","In addition, use of the \u201ca\u201d or \u201can\u201d are employed to describe elements and components of the embodiments herein. This is done merely for convenience and to give a general sense of the invention. This description should be read to include one or at least one and the singular also includes the plural unless it is obvious that it is meant otherwise.","Upon reading this disclosure, those of skill in the art will appreciate still additional alternative structural and functional designs for a system and a process for integrating graphical assets with a player's graphical user interface and displaying the integrated graphical user interface with the requested content through the disclosed principles herein. Thus, while particular embodiments and applications have been illustrated and described, it is to be understood that the disclosed embodiments are not limited to the precise construction and components disclosed herein. Various modifications, changes and variations, which will be apparent to those skilled in the art, may be made in the arrangement, operation and details of the method and apparatus disclosed herein without departing from the spirit and scope defined in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
