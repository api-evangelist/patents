---
title: Method and system for displaying information and initiating executions from within a security trading environment
abstract: A computerized system () and method for displaying a security trading environment () is disclose. The system () includes a client system () that is in communication with a server system () and a display system (). The server system () provides information relating to securities to the client system () and routes trade executions. The display system () displays security information and accepting input from a user to initiate trade executions in a trading window (), displays security information in a chart format in a chart window (), displays security information relating to a group of securities in a watchlist window (), displays security information relating to securities in which the user has positions in an account detail window (), displays news relating to securities in a news window () and displays information relating to trade executions in a messages window ().
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08244621&OS=08244621&RS=08244621
owner: Charles Schwab & Co.
number: 08244621
owner_city: San Francisco
owner_country: US
publication_date: 20020418
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["PRIORITY UNDER 35 U.S.C. \u00a7119(3) AND 37 C.F.R. \u00a71.78","TECHNICAL FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present nonprovisional patent application claims priority based upon pending U.S. Provisional patent application Ser. No. 60\/286,855 which was filed Apr. 27, 2001.","This invention relates in general to a computer method and system for providing security information to a user and allowing the user to execute security trades and, in particular, to a computer method and system for displaying security information and initiating trade executions from within a security trading environment.","Without limiting the scope of the present invention, its background will be described with regard to trading common stock, as an example.","In trading common stock, there are three fundamental factors an investor must consider. These factors are what stock to trade, when to open a position in the stock and when to close that position in the stock. There are enumerable models that attempt to help the investor identify these factors each of which are based upon particular criteria. Some of the models are best suited for the long term investor using a buy and hold approach. Other models are better suited for the short term investor including, for example, an active investor who opens and closes positions in the same day or week.","In determining what stock to trade, a typical long term investor may perform substantial research into a particular company in an effort to evaluate the future success of that company. For example, a long term investor may evaluate whether the company has products or services that are likely to have an increase in sales, the effectiveness of a company's research and development, the profit margin of the company, the size and effectiveness of the company's sales organization, labor relations within the company, the quality of management personnel at the company, the competitiveness of the company in relation to other companies in the industry, the long range outlook for profits and the like.","In addition to these business related factors, the long term investor may look at factors such as whether the company typically pays dividends on common stock, the price to earnings ratio of the stock and the market capitalization of the company as well as earnings, revenue and net income of the company. On the other hand, an investor that is interested in short term investments may not perform such detailed research but instead may focus on factors such as volume of trades, proximity to a milestone such as a fifty two week high, difference between current volume and a historical volume, number of daily highs, money flow and the like in identifying a stock of interest.","Once an investor has identified a stock of interest, the investor must then determine when and how to open a position in that stock. A long term investor might, for example, call a broker and request the purchase of a certain number of shares of the stock at the market price. The short term investor, however, who may be more interested in such factors as the volatility of the stock or the liquidity of the stock in making such a decision may want to use an online system to place an order to achieve faster execution.","The next step for an investor once they have opened a position in a stock is to determine when to close that position. A long term investor may, for example, make a decision to sell a stock based upon factors such as a fundamental change in a company that does not comport with the investor's original criteria for buying stock in that company, a change in management in the company, under performance of the stock, the stock reaching an unacceptable low, a belief that the stock has peaked or simply a belief that another investment has better long term prospects. Again, the long term investor may call a broker and request that the stock be sold at a particular time or when it reaches a particular price. While some of the above factors may also be important to a short term investor, a short term investor may focus more heavily on such factors as the continued momentum of the stock or simply making certain all open positions are closed by the end of a day and may again use an online system to achieve trade execution.","Regardless of the investment strategies, however, these three factors, what to stock to trade, when and how to open a position in that stock and when and how to close the position in that stock, remain key elements in any successful investment strategy. Therefore, a need has arisen for a system and method that provide the investor with a security trading environment that includes information that is useful in selecting a stock and that allows the investor to execute trades. A need has also arisen for such a method and system that provide the investor with access to multiple trade execution locations including multiple market participant types. Further, a need has arisen for such a method and system wherein the investor may select a particular trade execution location and market participant type for an order or wherein the selection of the trade execution location and market participant type is automated.","The present invention disclosed herein comprises a computer based system and method for displaying security information and initiating trade executions from within a security trading environment. The system and method of the present invention also provide the investor with access to multiple trade execution locations including multiple market participant types. In addition, the system and method of the present invention allow the investor to select a particular trade execution location of a particular market participant type for an order or the selection of the trade execution location and market participant type may be automated.","The computer based system and method of the present invention utilize a computer program embodied on a computer readable medium on a client system and a computer program embodied on a computer readable medium on a server system. The client system and the server system are in communication with one another using known communication means. The server system is also in communication with a plurality of security data sources and a plurality of trade execution locations.","In operation, the client system receives information relating to the securities from the server systems and sends trade execution requests to the server system. A display system linked to the client system displays the security information and accepts input from a user to initiate trade executions in a trading window. The display system also displays security information in a chart format in a chart window, displays security information relating to a group of securities in a watchlist window, displays security information relating to securities in which the user has positions in an account detail window, displays news relating to securities in a news window and displays information relating to trade executions in a messages window.","While the making and using of various embodiments of the present invention are discussed in detail below, it should be appreciated that the present invention provides many applicable inventive concepts which can be embodied in a wide variety of specific contexts. The specific embodiments discussed herein are merely illustrative of specific ways to make and use the invention, and do not delimit the scope of the invention.","Before describing the computerized method and system for integrating trade executions among multiple market participant types and for obtaining the best fill for an order using automated suborders of the present invention in detail, the following definitions are now presented which should be helpful in the understanding of the present invention.","Electronic Communications Network (ECN): A market participant type that provides an electronic system that widely disseminates orders to third parties and permits such orders to be executed against in whole or in part. While the term ECN generally applies only to those private networks that have been recognized as such under the Securities Exchange Act, as used herein, the term ECN will apply generally to all alternative trading systems that utilize electronic systems for automatically matching orders between buyers and sellers. There are numerous ECNs including, but not limited to, Isld, Inca, Arca, Redi, Attn, Btrd, Strk, Ntrd, Brut, Market XT and the like.","Market Maker (MM): A market participant type wherein individuals or securities firms use their own capital to buy and maintain an inventory in a specific company's stock. A market maker quotes both bid prices at which it will buy additional inventory and offer prices at which it will sell its inventory. Typically when a market maker receives an order to buy shares in a particular stock, it sells those shares to the customer from its existing inventory and, if necessary, buys additional shares from other market makers to complete the sale. There are hundreds of market makers including, but not limited to, MONT, GSCO, PRUS, FACT, MLCO, DLJP, BEST, MADF, DBKS and the like.","Exchange: A market participant type that provides a market place of facilities for bringing together purchasers and sellers of securities. The term exchange as used herein will include agency auction markets designed to allow the public to meet the public as much as possible with a single specialist making the market in each security. Examples of such exchanges are the New York Stock Exchange (NYSE), the American Stock Exchange (AMEX) and the like. In addition, the term exchange as used herein will include markets made up of competing market makers that list specific prices for the sale or purchase of securities. An example of such an exchange is the NASDAQ stock market and the like.","Market Participant Type: Any one of a number of types of trade execution locations such as ECNs, market makers, exchanges and the like.","Market Participant: A specific trade execution location such as Isld, (a specific ECM), MLCO, (a specific market maker), NYSE, (a specific exchange) and the like. As used herein, the terms market participant and trade execution location may be used synonymously.","Referring now to , therein is depicted a platform layout of the system for the integrating trade executions among multiple market participant types and obtaining the best fill for an order using automated suborders of the present invention that is generally designated . As illustrated, system  includes a server system  and a pair of client systems . Client systems  may include any number of peripheral input, storage and display devices such as a keyboard , a mouse  and a monitor . Server system  may communicate with each client system  by any suitable means. In one illustrated embodiment, server system  is in communication with a client system  via a direct connection  such as a T1 line, a frame, a dial up modem or the like. In the other illustrated embodiment, server system  is in communication with the other client system  via an Internet connection .","Server system  is also in communication with one or more security data sources  via a T1 line, a high speed modem or other transmission line  using, for example, a direct socket connection such as a TCP\/IP connection. Security data sources  provide data feeds to server system  from a plurality of sources such as PC Quote, S&P Comstock, NQDS and the like that contain all types of information relating to thousands of securities that are traded at the various market participants. The data feeds contain a variety of information relating to each security. For example, the data feeds may contain level I information, which is best ask and best bid information as well as time and sales information and level II information which includes detailed market information. In addition, the data feeds may include fundamental information such as market capitalization, sector information, price to earning ratio, 52 week highs and lows and the like. It should be noted by those skilled in the art that the term security as used herein refers to stocks, bonds, options and the like that are traded at the various market participants.","Server system  includes an application programming interface that takes each data feed from the various security data sources , which are typically in a proprietary format, and processes it for real-time dissemination to client systems . As the amount of information received and processed by server system  from security data sources  is voluminous, each client system  typically receives only the information that the user of that client system  requests. As such, each client system  requests and receives only a small subset of the information processed by server system . For example, one user may be interested in securities that are approaching a 52-week high and that have a five day average volume above a particular threshold. In this case, the user would make the appropriate request from a client system  to the server system  for processing. The server system  then returns only the information relating to the securities that meet this user's criteria to that client system . Likewise, another user may be interested in securities having a high current volume that fall within a particular price range. Again, in this case, the user would make the appropriate request from a client system  to server system  which would return only the information relating to the securities that meet this user's criteria to that client system .","Server system  is also in communication with a plurality of trade execution locations  via a T1 line, a high speed modem or other transmission line  using, for example, a direct socket connection such as a TCP\/IP connection. Trade execution locations  include the various market participants of numerous market participant types, such as, exchanges, market makers, ECNs and the like. Server system  receives orders from client systems . The orders are processed in server system  and routed to the appropriate trade execution location  where the orders may be filled.","More specifically, server system  includes an application programming interface that takes each order from the client systems  and places that order in the required format, which is typically a proprietary format, depending upon which trade execution location  is to receive the order. The specific trade execution location  to which server system  sends a particular order is determined by a number of factors. For example, the user of the client system  originating the order may request a particular execution method such as execution at a specific market participant type or even a specific market participant. Similarly, the particular type of order placed by the user of the client system  may dictate that the order be sent to a market participant type or specific market participant. Alternatively, server system  may automate the selection of the trade execution location  based upon factors such as the liquidity of the security at a particular trade execution location , the speed at which a particular trade execution location  fills orders, the ratio of orders filled at a particular trade execution location  and the like.","Server system  is also in communication with one or more broker systems  via a high speed connection  such as a T1 line or high speed modem using, for example, a direct socket connection such as a TCP\/IP connection. Certain types of trade execution orders from a client system  may be routed to broker system  based upon a request by the user of client system , the order parameters selected by the user of client system  or based upon an automated decision in server system . In the illustrated embodiment, broker system  communicates with various trade execution locations  including multiple market participant types via communications link  which may be a high speed connection such as a T1 line, high speed modem or the like or which may be a manual telephonic communication or the like.","As such, system  not only allows the user of client systems  to perform substantially real-time trade executions via server system  and trade execution locations  selecting among various market participant types, but also, allows the users of client systems  to execute trades using broker system  via server system .","Referring now to , therein is depicted a more detailed diagram of server system  of the system of the present invention. Server system  comprises numerous integrated servers that enable the processing of security data received from security data sources  for dissemination to various client systems  based upon the request made from each client system  and that route orders generated by the user of client systems  to various trade execution locations  which include multiple market participant types.","Specifically, server system  includes a quote server , a chart server  and book servers . Quote server  receives the data feed from one or more of the security data sources  and parses the data based upon the feed parsing API. The parsed information may be sent via direct connection to a client system  upon request by a client system . In the illustrated embodiment, however, the connection between quote server  and client system  includes a mid-level server  and an HTTP tunneling server  as will be explained in more detail below. As such, quote server  may disseminate real-time first level security data, real-time second level security data and the like to client system . For speed of delivery to client systems , some of this data preferably resides in the cache memory of quote server  or may alternatively reside in RAM on mid-level server .","Chart server  receives the data feed from one or more of the security data sources  and parses the data based upon the feed parsing API. The parsed information is further processed by database manager  such that information relating to the securities may be stored in database . Database  is used for historical charting of security data. For example, database  builds one, two, three and five minute charts for intraday activity as well as historical charts for daily volume, daily highs and lows and the like for specified time increments such as the prior week, month or year. Database  is preferably an in-memory database utilizing cache memory and RAM such that information requested by a client system  can be quickly disseminated.","Book server  receives the data feed from one or more of the security data sources  and parses that data based upon the feed parsing API. More specifically, each book server  receives book data from, for example, an ECN or a market maker. The book data feeds contain not only the first and second level security data but also information relating to all the available asks and bids of each security.","Mid-level server  monitors information on a subset of the securities on which data feeds are received. While quote server , chart server  and book server  monitor all securities, perhaps 12,000 to 15,000 or more, mid-level server  only monitors those securities that are frequently requested by a client system , perhaps several hundred to a few thousand. For example, mid-level server  monitors all open positions that users presently have as well as additional securities that are being watched by such users, for example, those that are part of real-time user requests. Use of mid-level server  adds flexibility to server system  by reducing the load on the other servers. In addition, the use of mid-level server  enhances the speed at which information is disseminated to client systems  by, among other things, gathering, combining and placing in cache memory data from quote server , chart server  and book server  such that a request from a client system  does not have to be processed by more than one server.","It should be understood by those skilled in the art that the use of the term server herein may mean a single physical server, multiple physical servers or multiple instances of an execution on a single physical server. For example, it is preferable to have multiple quote servers, at least one for each security data source as well as multiple book servers, at least one for each market participant providing book data. Likewise, it is preferable to have multiple chart servers and multiple mid-level servers depending upon the amount of information being processed. Also, it should be understood by those skilled in the art that the servers described herein that make up server system  may comprise any suitable processor. For example, a Dell dual 500 MHZ processor with 512 MB of memory operating on a Microsoft Windows NT 4.0 platform has been found to be suitable.","In addition to the above described servers, server system  may include a boss server  that manages the operation of the other servers. Boss server  optimizes the processing of server system  by routing connection requests from client systems  to the servers within server system , for example, to a specific mid-level server , that is presently operating with, appropriate capacity to handle the new connection to avoid overloading any of the servers.","Server system  includes smart server  that processes orders received from client systems , such that the best fill for that order is obtained. As explained in greater detail below, smart server  parses the order into a plurality of suborders, each of which are sent to a trade execution location  to be filled. When all of the suborders are filled, at the best price for that suborder, the best price is obtained for the order.","For connection between server system  and client systems  over the internet, server system  may also include HTTP tunneling server . HTTP tunneling server  allows client systems  to work through fire walls, proxy servers and the like.","Server system  includes a decision support server . As with the mid-level server , decision support server  performs specific tasks which enable server system  to be more responsive to client systems . Decision support server  provides a data feed to client systems  that helps a user of a client system  to select a security of interest. In the illustrated embodiment, decision support server  receives data feeds from chart server  and quote server . In addition, decision support server  receives a data feed from data compiled in database .","Server system  also includes a master server  and an execution server . Client systems  may connect directly to master server  or may connect through HTTP tunneling server . In either case, once a user of a client system  connects to server system , client system  receives IP addresses from boss server  then connects to master server . Master server  loads information relating to that user into memory from account server . Account server  retrieves user information via a connection to broker server  located remotely at broker system . Broker server  queries a broker mainframe  for the required information. The information is then passed back to account server  via broker server . Account server  then populates the cache memory of master server  with the client information.","Account server  also sends the client information to a database , to repopulate the client information in database  and to update any discrepancies between client information in database  and broker mainframe . In addition, to assure a high level of availability, if the client information cannot be obtained from broker system , account server  may alternatively obtain the client information previously stored in database .","Once master server  has received the client information, master server  monitors orders from client system  and performs compliance checks on the orders. For example, master server  would reject an order from client system  if the user attempts a trade that exceeds the user's buying power. Likewise, master server  would disallow an order from client system  that would be in violation of securities regulations such as an order that would be in violation of the Soes five minute rule. Once the compliance checks are completed, master server  sends the order to execution server .","Execution server  receives the orders from master server . Execution server  then routes the orders directly to a trade execution location , such as the ECN of Isld or the market maker of BEST, indirectly to a trade execution location  via an order processing location , such as SOES or Select Net for a NASDAQ trade or Super DOT for an NYSE trade, or indirectly to a trade execution location  via broker system . For example, a user may request execution at a specific market participant, such as Isld, in which case execution server  will send the order directly to the requested trade execution location . Alternatively, the user may request execution at a specific market participant type, such as any ECN, but may allow server system  to automate the selection of the specific ECN as explained in greater detail below. In such a case, server system  may select a trade execution location  based upon factors such as the liquidity of the security at a particular trade execution location , the speed at which a particular trade execution location  fills orders, the ratio of orders filled at a particular trade execution location  and the like. In either case, once the trade execution location  is selected, the order is formatted for the proprietary application programming interface of that trade execution location  by execution server . The order is then sent to that trade execution location  to be filled.","If the user of client system  were to request that the order be sent to a specific market participant type, such as an exchange, execution server  would send the order to an order processing location  which would process the order according to its rules and forward the order to the exchange to be filled. As another example, the user of client system  may request that a trade be executed using particular order parameters that require broker intervention. In such a case, execution server  would send the order to broker system  where the order is processed and forwarded to an appropriate trade execution location .","Referring now to , therein is depicted a more detailed diagram of the servers that comprise execution server  of the system for integrating trade executions among multiple market participant types of the present invention. As explained above, client systems  send orders to master server  wherein the orders are processed and compliance checks are performed. Master server  sends the orders, which satisfy the compliance checks, to execution server . Execution server  includes an order router server  and an order execution server .","As an example, if the market participant type for trade execution selected by the user of client system  is an exchange, such as NASDAQ, master server  will send the order to order router server  which will route the order to order execution server  where the order is formatted for the application programming interface of, for example, a NASDAQ trade via SOES. The order is then sent to the order processing location  of SOES where the trade is processed based upon the SOES trading methodology and sent to the trade execution location  of NASDAQ for execution.","In a similar manner, if the desired market participant type is an exchange and the desired security is listed on the NYSE, master server  will send the order to order router server  which will route the order to order execution server  where the order is formatted and forwarded to the order processing location  for NYSE trades, for example Super DOT, then to the trade execution location  of the floor of the NYSE for execution. Additionally, in either of these cases where the market participant type is an exchange, order execution server  will in some cases send the order to broker system  for processing prior to execution of the trade at the desired exchange.","Alternatively, if the market participant type selected by the user of client system  is an ECN, such as the trade execution location  of Isld, master server  will send the order to order router server  which will route the order to order execution server  where the order is formatted for the application programming interface for a trade on Isld. The order is then sent to Isld for execution.","Similarly, if the market participant type selected by the user of client system  is a market maker, such as the trade execution location  of Schwab Capital Markets, master server  will send the order to order router server  which will route the order to order execution server  where the order is formatted for the application programming interface for a trade at Schwab Capital Markets. The order is then sent to Schwab Capital Markets for execution. In addition, routing an order to the market participant type of a market maker may be accomplished by sending an order from order execution server  to broker system  for processing prior to execution of the trade at the desired market maker.","In all of these scenarios, information relating to the trade executions must be stored. Database  receives and stores all of the information relating to the orders routed by order router server . Likewise, database  receives and stores all of the information relating to the orders sent by order execution server  which are processed by order server  prior to storage in database . Information received from trade execution locations  is also stored in database . This execution information from trade execution location  returns to server system  in substantially the reverse flow paths of the orders sent from server system  to trade execution location .","Referring now to  therein is depicted a more detailed diagram of the servers that comprise execution server of the system for integrating trade executions among multiple market participant types of the present invention. Specifically, order router server  includes an exchange router server , a broker router server , a market maker router server  and an ECN router server . Likewise, order execution server  comprises an exchange execution server , a broker execution server , a market maker execution server  and an ECN execution server . In the illustrated embodiment, trade execution locations  include three market participant types. Specifically, exchanges , market makers  and ECNs . As can be seen in , execution server  has several direct connections to particular market participant types and has several indirect connections to particular market participant types.","Specifically, there is a direct connection between ECN execution server  and ECNs . Likewise, there is a direct connection between market maker execution server  and market makers . In addition to the direct connection to market makers , there are also two indirect paths to execute a trade at a market maker . Specifically, broker execution server  is used to send orders to broker server  which provides information to send the order to a market maker . Also, exchange execution server  may be used to route an order to an order processing location  which in turn routes the order to an exchange  which may execute a trade with a market maker .","In a like matter, there are two indirect paths for executing a trade on an exchange . Specifically, broker router server  may route an order to broker execution server  which in turn sends the order to broker server  for appropriate processing and routing to an exchange . Alternatively, exchange router server  may route the order to exchange execution server  that sends the order to an order processing location  where the order is processed and then executed at an exchange . As such, the system of the present invention provides for the integration of trade executions among multiple market participant types. Specifically, the system of the present invention allows a user of client system  to execute trades at market participant types such as exchanges , market makers  and ECNs  from client system  via a single user interface. Selection of the specific market participant type as well as the specific trade execution location  may be determined by the user of client system  or may be determined using an automated process within server system .","Referring now to , therein is depicted a block diagram for order flow to an ECN. Once client system  is properly logged into server system , the user of client system  may request the execution of an order at a preselected market participant type such as ECNs . The order from client system  is initially received by master server  which performs order edits, compliance validation, credit checks and assigns an order number to the order. Master server  then sends the order to ECN router server . ECN router server  routes the order to ECN execution server . In addition, information associated with the order is routed from ECN router server  to database  for storage. ECN execution server  then sends the order via a direct connection to an ECN . ECN execution server  also sends information associated with the order to order server . Order server  forwards this information to database  and to broker server . Broker server  sends the information associated with the order to broker mainframe  for storage. Once the trade is executed at ECN , an execution report is returned to ECN execution server . This information is passed back to client system  so that the user of client system  will know when the requested order has been executed. Also, ECN execution server  forwards the execution report to order server  which again forwards the information to database  and broker mainframe  via broker server  such that the execution report information is redundantly stored in database  and broker mainframe .","Referring now to , therein is depicted a block diagram for the execution of a trade at a market maker. Once the user of client system  is properly logged into server system  the user of client system  may request that an order be executed at a market maker . This order is sent from client system  to master server  where compliance checks are performed. Master server  then sends the order to market maker router server . Market maker router server  routes the order to market maker execution server  and sends information relating to the order to database . Market maker execution server  then sends the order to market maker  via a direct connection. Market maker execution server  also sends information relating to the order to order server . Order server  then sends this information to database  and to broker mainframe  via broker server  for storage. Once the trade is executed by market maker , an execution report is returned to market maker execution server . The execution report is forwarded to client system  and to database  and broker mainframe , as described above, for storage.","Referring now to , therein is depicted a block diagram of order executions at an exchange. Once client system  is properly logged into server system , the user of client system  may send an order that is to be executed at an exchange . This order is initially received by master server  for compliance checks. Thereafter, master server  sends the order to exchange router server . Exchange router server  routes the order to exchange execution server  and sends information associated with the order to database . The order is then sent via an indirect connection to an exchange  from exchange execution server . Specifically, exchange execution server  sends the order to an order processing location  that processes the order then the order is forwarded to an exchange . As an example, if exchange  is NASDAQ, the order processing location  may be SOES or Selectnet. Alternately, if exchange  is NYSE, then the order processing location  may be Super DOT. In addition to sending the order to an order processing location , exchange execution server  sends information relating to the order to order server . Order server  then forwards the information to database  and broker mainframe  for storage. Once the order is executed at exchange , an execution report is generated that is sent to the order processing location  which forwards the execution report to exchange execution server . The order execution information is then forwarded to client system , database  and broker mainframe  as described above.","Referring now to , therein is depicted a block diagram of an order execution using broker system . Once client system  is logged into server system , the user of client system  may generate an order that is to be sent to broker system  for traditional order execution. Specifically, the order from client system  is received by master server  where compliance checks are performed. Master server  then sends the order to broker router server . Broker router server  routes the order to broker execution server  and sends information relating to the order to database . Broker execution server  then sends the order to broker server . Information relating to the order is also sent by broker execution server  to order server  which forwards the information to database . Likewise, broker server  sends information relating to the order to broker mainframe  for storage. Broker server  may then send the order directly to a market maker  or an exchange  for execution. Alternatively, depending upon the order parameters, the order may be held open within broker system  until, for example, the price of a particular stock reaches a particular price, at which time the order may be sent to an exchange  or a market maker  for execution. After the order is executed by an exchange  or marker maker , an execution report is generated which is returned to broker server . Broker server  sends this information to broker mainframe  for storage. In addition, the execution report may be returned to broker execution server  and forwarded to client system  and database .","As should be apparent to those skilled in the art, the system of the present invention provides significant versatility to a user of client system  in executing trades among multiple market participant types. As described with reference to , the user of a client system  may select a particular market participant type for the execution of a trade. In addition, based upon certain parameters input by a user of client system  associated with an order, the selection of a particular market participant type may be automated within server system , broker system  or both.","Referring next to , therein is depicted a graphical user interface which provides a security trading environment for the user of system  of the present invention that is generally designated . Security trading environment  is generated on display system  by the computer program operating in client system . The information displayed within security trading environment  is sent from server system  to client system  as described above.","Security trading environment  displays security information and accepts inputs from a user to initiate trade executions in a trading window . In the illustrated embodiment, trading window  has a level I information section , a level II information section  and a time and sales information section . Trading window  also has plurality of buttons that accept input from the user to initiate trade executions including a buy button, a sell button, a short button and a save button.","Security trading environment  also displays security information in a chart format in a chart window . For example, the displayed charts may include intra-day charts having various time intervals such 1, 2, 3 and 5 minute intervals and the like, intra-day charts with multi-day historical data, multi-day, multi-week, multi-month or multi-year historical charts or other types of charts that are known in the art. Chart window  may display a single chart for a single user selected security, multiple charts for a single user selected security or multiple chart for multiple user selected securities.","In addition, security trading environment  displays security information in a watchlist window . Watchlist window  contains information relating to one or more groups of securities that are definable by the user. For example, one group of securities that is displayable in watchlist window  is the group of securities in which the user currently holds open positions. Another group may include securities from a particular sector that the user is interested in or simply a group of the users favorite securities. For each security in the group of securities in each list, numerous data fields, which are customizable by the user, provide information relating to that security. For example, level I information may be provided for each security. In the illustrated embodiment, eight fields are depicted including, a security ID or symbol data field, a Tick data field, a Bid data field, an Ask data field, a Spread data field, a Change From data field, a Last data field and a Volume data field. These data fields are updated in real-time using the data feed from server system .","Security trading environment  also displays security information relating to securities in which the user has positions, in an account detail window . Account manager window  is used to track all trades, open orders, positions and the profit\/loss of the user. In the illustrated embodiment, account manager window  has multiple pages including an order status page, a saved orders page, a balances page, a positions page and a transactions page. The user may select a desired page for viewing in account manager window . For example, the order status page displays all orders made by the user during a selected period of time such as during a particular trading day. The order page provides the user with information regarding orders such as whether the order is live, completely filled, rejected, failed, canceled or the like. In addition, the order page will allow the user to cancel any live orders. Likewise, the saved order page displays all orders that are prepared and saved by the user but have not been sent. The balances page displays information relating to the user's account such as equity, buying power and the like. In the illustrated embodiment, the positions page is depicted and it displays all the open positions the user currently has including a substantially real-time profit or loss in each position. In addition, account manager window  includes a transactions page which displays all the transactions of the user of client system  over a specified period of time.","Security trading environment  further displays news relating to securities in a news window . News window  receives streaming information relating to one or more user selected securities which is displayed in real-time. In the illustrated embodiment, news window  includes a headlines window  that lists the headlines relating to the user selected securities and a story window  that displays the text of the entire story that corresponds to the various headlines in headline window .","Additionally, security trading environment  displays information relating to the trade executions, initiated in trading window , in a messages window . Specifically, detailed information relating to order status is provided in real-time in messages window . For example, information such as when an order is sent, when a trade execution location acknowledges receiving the order, when a trade execution location partially fills, completely fills or rejects the order, when the user cancels the order and the like. The messages provided in messages window  may also include information such as the size of the order, the price of the order and the like.","Referring now to , therein is a block diagram of a system for obtaining the best fill for an order using automated suborders that is generally designated . In this aspect of the present invention, once a client system  is properly logged into the server system  and the user of a client system  sends an order, server system  processes the order to obtain the best price for all shares within the order by automating the process of created multiple suborders. More specifically, server system  identifies the various market participants having available shares of the particular security specified in the order. In many cases, the desired number of shares specified in the order may be greater than the number of shares available from any one market participant.","For example, and referring to  showing level II data for EBAY in a stock box , if the user of client system  wants to buy 800 shares of EBAY, no single market participant displays 800 shares available. Specifically, on the ask side  of the level II data, MASH has 400 shares available at the inside ask price tier of 237\u00bd, BRUT has 200 shares available at the inside ask price tier and isld has 200 shares available at the inside ask price tier. Thus, for the user of client system  to buy 800 shares of EBAY, the user of client system  would typically have to send three separate orders, one to MASH for 400 shares, one to BRUT for 200 shares and one to isld for 200 shares to obtain the 800 shares. It is likely, however, that before the user of client system  can send these three orders to the three different market participants, the shares from one or more of these market participants may no longer be available. As such, for the user of client system  to obtain the 1,000 shares, the user may have to send additional orders to additional market participants once the user has been informed that certain orders were not filled. In a fast moving market, within the time it takes to prepare these orders and receive the acknowledgments that certain ones of the orders were not filled, the market may have moved several price tiers such that the user of client system  may have to obtain some of the desired 800 shares at the 237\u215d price tier, the 237 11\/16 price tier or even the 237\u00be price tier.","Similarly, if the user of a client system  wants to sell 1,000 shares of EBAY at the market price, the user would have to send at least four orders to obtain the best price for those 1,000 shares. Specifically, as illustrated, the bid side  of the level II data shows 300 shares are available at the inside bid price of 237\u215c with 100 shares being available through FLTT and 200 shares being available through isld. A total of 1,200 shares is available at the next price tier of 237\u00bc. There are 200 shares available through BRUT, 500 shares available through redi and 500 shares available LEHM. In this case, assuming all 300 shares are sold at the inside bid price and the new inside bid price moves to 237\u00bc, the user of client system  needs to sell an additional 700 shares. As such, the user must decide to which of the market participants at the 237\u00bc price tier to send orders. For example, the user of client system  may send an order to sell 200 shares at BRUT and 500 shares at either redi or LEHM. Alternatively, the user of client system  could split the remaining 700 shares between redi and LEHM in some fashion.","As should be apparent to those skilled in the art, during the time it takes for the user of client system  to make such decisions, the shares may no longer be available at the illustrated price tiers. Thus, for the user of client system  to sell 1,000 shares of EBAY, more than four orders may have to be placed. In addition, the shares may have to be sold at lower price tiers such as the 237\u215b price tier or the 237 1\/16 price tier as the market moves.","Referring again to , instead of the user of client system  having to send multiple orders to multiple market participants at multiple price tiers, server system  has incorporated therein an automated system for dividing orders into suborders within smart server . Once master server  receives the order from client system , the order is forwarded to smart server  where the order is automatically parsed into various suborders based upon share availability and pricing at the various market participants. Once the appropriate suborders are created, the suborders are returned to master server . Master server  then sends each of the suborders to the appropriate order router server , as explained above with reference to . Order router server  then routes each of the suborders to the appropriate order execution server  which in turn sends the suborders to the appropriate trade execution location . As each of the suborders is filled at the trade execution location , confirmation of these executions is returned to client system  via order execution server , order router server  and master server .","Using the example described above, if the user of client system  wants to purchase 800 shares of EBAY at the market price, a single order would be sent from client system  to server system . This order would be received by master server  and forwarded to smart server . Smart server  would identify the 800 shares of EBAY available at the inside ask price tier and specifically the 400 shares available through MASH, the 200 shares available through BRUT and the 200 shares available through isld. Smart server  would then prepare three suborders, one for each market participant, and forward these suborders to master server . Master server  then forwards each of the suborders to execution server  where the orders are appropriately routed.","Specifically, execution server  routes one suborder for the purchase of 400 shares to the trade execution location  of MASH. Likewise, execution server  routes suborders for 200 shares to the trade execution location  of BRUT and 200 shares to the trade execution location  of isld. Use of server system  to automate the process of sending suborders to the various market participants having available shares significantly enhances the likelihood that the entire order will be filled at the inside ask price in this illustrated example as the suborders reach the market participants more rapidly then if the user of client system  had to prepare each of the suborders.","Likewise, in the other example described above, if the user of client system  wants to sell 1,000 shares of EBAY at the market price, this order is sent from client system  to master server . Master server  then forwards this order to smart server . Smart server  then identifies the market participants presently wanting to buy shares of EBAY. Specifically, smart server  identifies the two market participants having shares available at the inside bid price of 237\u215c and the three market participants having shares available at the second price tier level of 237\u00bc. As before, smart server  prepares suborders which will be sent to the various market participants. Specifically, smart server  will prepare a suborder for the sale of 100 shares at FLTT, and 200 shares at isld. Smart server  must then determine to which market participants at the second price tier to send suborders for the remaining 700 shares.","As explained in more detail below, smart server  determines which market participant to send the suborders to by sorting the market participants based on a variety of factors such as market participant type, speed at which the available market participants typically execute orders, fill ratio of the available market participants, number of shares available from a market participant and the like. Once smart server  determines which market participants should receive the suborders and how many shares each of the market participants should receive, smart server  prepares the suborders for the remaining 700 shares and forwards the suborders to master server . As described above, master server  then forwards the suborders to execution server  wherein the suborders are routed to the appropriate trade execution location . As should be apparent to those skilled in the art, use of server system  to automate the process of sending multiple suborders to achieve the best fill for an order enhances the likelihood that a user of client system  will receive the best price for all the shares within an order.","Referring now to , therein is depicted a flow chart of the method for obtaining the best fill for an order using automated suborders of the present invention that is generally designated . The process starts at step  when an order is sent from the client system. The order is received by the master server in step  wherein the master server stores the order. The master server also compiles a list of available market participants in step . The master server then routes the order and the list of available market participants to the smart server in step . In step  the smart server ranks the market participants from the list of available market participants.","The ranking process is based upon the price tier at which each market participant has available shares as well as other market factors as described above including market participant type, speed at which orders are executed, fill ratio of the market participant and the like. Once the smart server  ranks the market participants, the smart server parses the order into a plurality of suborders in step . Also, in step , the smart server sends these suborders back to the master server. In step  the master server sends the suborders to the execution server, such that in step , the execution server may send each of the suborders to the appropriate market participant to have each of the suborders filled.","Once the suborders are sent to the various market participants, server system  must determine if and when all the suborders are filled. Specifically, referring to , therein is depicted a flow diagram of the process for determining whether the suborders have been filled that is generally designated . Once the suborders are sent to the various market participants, the master server waits for the execution of the suborders in step . As part of step , the master server sets a timer for each suborder and timer for the entire order. Process  continues for each suborder including decision  wherein it is determined whether each of the suborders has executed. If a particular suborder has executed in decision , it must then be determined whether that execution is a partial fill of the suborder in decision . If the execution is a partial fill in decision , then the master server continues to wait in step  to see if the remainder of the suborder is filled.","If the execution is a complete fill in decision , then the master server kills the timer for that suborder in step . Once the master server kills the timer for that suborder, the master server notifies the smart server and the client system that the suborder has been filled in step . It must then be determined in decision  whether all suborders have been filled or canceled. If all suborders have been filled or canceled, the master server kills the order timer in step  and the master server notifies the client system that the order is complete in step . If all orders have not been filled or canceled in decision , then the master server continues to wait for the execution of the remainder of the suborders in step .","For example, if in decision  a particular suborder has not executed, then it must be determined, in decision , whether the suborder was rejected by the market participant to which the suborder was sent. If the suborder was rejected, the master server kills the timer associated with that suborder in step  and the master server notifies the smart server and the client system that the suborder has been rejected in step . If all suborders have not been filled, canceled or rejected in decision  then master server  continues to wait for the execution of the remaining suborders.","Similarly, if a suborder has not executed in decision  and the order has not been rejected in decision , then it must be determined whether the suborder has timed out in decision . If the timer for the suborder has timed out, the master server sends a cancel for that suborder in step . The master server then notifies the smart server and the client system that the suborder has been canceled in step . If all the suborders have not been filled or canceled in decision , the master server continues to wait for the execution of the remaining suborders in step .","Returning to decision , if the timer for a particular suborder has not timed out, then it must be determined whether the entire order timer has timed out in decision . If the entire order has timed out, then the master server sends a cancel for each the remaining suborders in step . Once the entire order has timed out, the master server notifies the smart server and the client system that the order has timed out in step . Likewise, the master server kills the order timer in step  and notifies the client system that the order is complete in step . If in decision  the order timer has not timed out, the master server continues to wait for the execution of outstanding suborders in step .","Referring now to , therein is depicted a flow chart for another embodiment of the method for determining whether the suborders have been filled that is generally designated . Using this embodiment of the present invention, a user of client system  not only has the ability to have multiple suborders sent to multiple market participants based upon a single order but may also have certain portions of that order sent multiple times to improve the chances of having a complete fill of the entire order. Process  is substantially identical to process  as described with reference to  with the addition of step  wherein the master server routes outstanding suborders to the smart server for rerouting.","Specifically, if a suborder has not been filled at decision  because that suborder has been rejected or that suborder has timed out and been canceled, then the shares associated with that suborder are resubmitted to the smart server such that the smart server may create a new suborder for those shares or multiple new suborders for those shares. These new suborders may then be routed to the appropriate trade execution locations  via the execution server  as described above. Once these new suborders are so routed, the master server again waits for the execution of these suborders in step  as described above. Using this embodiment of the present invention, in the event that all suborders cannot be filled as originally sent by server system , the shares associated with those suborders that are not filled may nonetheless get filled by the new suborders created by the smart server.","Referring now to , therein is depicted a flow diagram of the process for creating a quote list by the smart server that is generally designated . Process  begins when the smart server receives the order from the master server in step . The smart server then obtains a price tier list for available market participants in step . The smart server obtains this list by requesting the price and share availability data associated with the security specified in the order. Next, beginning with step , the smart server sorts the available market participants by price tier to create the suborder quote list. Note that the ranking of suborders within a given price tier will be described below with reference to . First, the smart server selects the first or inside price tier in step . Then, in step , the smart server selects the first market participant within the inside price tier. Next, the smart server determines whether there is an available route to this market participant in the decision . If there is an available route to this market participant then the smart server adds this quote to the suborder quote list in step . Next, the smart server determines whether the suborder quote list contains at least the number of shares of the entire order in decision . If the list contains at least the number of shares in the order then the smart server generates the suborders in step .","If the list in decision  does not contain at least the number of shares in the order, then it must be determined whether there are more market participants within the inside price tier in decision . If there are more market participants within this inside price tier, then the smart server selects the next market participant within the inside price tier in step  with the flow following step  being the same as that described above. If there are not more market participants within this inside price tier, then it must be determined whether there are more price tiers in decision . If there are more price tiers, then it must be determined whether the order was a limit order in decision . If the order is not a limit order, then the smart server may select the next price tier in step . The flow following step  will be the same as described above.","Alternatively, if the order is a limit order as determined in decision , then it must be determined whether the new price tier exceeds the limit price in decision , i.e., the new price tier being higher than the limit price when buying shares and lower than the limit price when selling shares. If the new price tier does not exceed the limit price, then the smart server may select the next price tier in step . If, however, the new price tier does exceed the limit price, then the smart server generates the appropriate suborders in step . Likewise, if there were no more price tiers as determined in decision , then the smart server would also generate the appropriate suborders in step . As should be apparent in those skilled in the art, so long as there are available market participants with available shares, process  will create a suborder quote list and generate suborders such that all the shares of the order are accounted for within the plurality of suborders.","Referring now to , therein is depicted a more detailed flow diagram of the process for creating and ranking market participants within the suborder quote list to determine, for example, the priority of suborders at the same price tier within the suborder quote list. Process  begins at decision  where it is determined whether a particular market participant is already on the list at a particular price tier. If the market participant is already on the list, the market participant is not added to the list again in step . If the market participant is not on the list, it is determined whether all routes to this market participant are negatively preferenced by the user of client system  in decision . If the user of a client system  has negatively preferenced all routes to this market participant, then this market participant is not added to the suborder quote list in step . If there is no negative preference associated with this market participant, then it must be determined how to sort various market participants within a price tier. In the illustrated embodiment, sorting is initially determined based upon the market participant type.","Specifically, in decision , it is determined whether the market participant is an ECN. If the market participant is an ECN, then it determined in decision  whether there is an available direct route to that ECN. If there is an available direct route to that ECN, then the execution method for that quote is set to that ECN in step . Once the quote is inserted into the suborder quote list, the price for this quote may be adjusted based upon statistics developed for that particular market participant. For example, if that particular market participant generally fills orders slower than other market participants, then a price penalty may be added to that quote to adjust that quote's position within the suborder quote list. Specifically, if the order is to buy a particular number of shares of a particular security then the price penalty may be the addition $0.01 to the price of shares of that security for the determination of sorting within the suborder quote list. This price penalty allows server system  to send orders preferentially to market participants that meet predetermined characteristics. Any number of factors may be used to determine whether price penalties for a particular quote are appropriate including, the fill ratio of a particular market participant, the percentage of orders rejected by a particular market participant, the likelihood of a complete fill at a particular market participant and the like.","Once the automated adjustment of insert price occurs in step , it must be determined whether the user of the client system  has preferenced certain market participants in decision . If the user has preferenced certain market participants, then the position of that market participant within the suborder quote list is adjusted in step . If on the other hand, the user has not preferenced a particular market participant, then no additional adjustment is necessary within the suborder quote list and the quote is inserted into the quote list in step .","Returning to decision , if there is no available direct route to that ECN, then it must be determined whether SelectNet is a valid route to that ECN in decision . If SelectNet is not a valid route, then the quote is not inserted into the suborder quote list in step . If, however, SelectNet is a valid route to that ECN, then the execution method for that quote may be set to SelectNet in step . Again, once the execution method is selected, the insert price may be adjusted in step  based upon the statistical model associated with executions at that particular market participant.","Returning to decision , if the market participant is not an ECN, then it must be determined whether the market participant is a market maker and whether there is direct access available to that market maker in decision . If there is direct access to that market maker, then the execution method for that quote may be set to that market maker in step . The insert price of that quote may be adjusted as described above with reference to step . If on the other hand, there is not direct access available to that market maker as determined in decision , then it must be determined whether SOES is a valid route to that market maker in decision . If SOES is a valid route then the execution method is set to SOES in step . Alternatively, if SOES is not a valid route then it must be determined whether Select Net is a valid route as determined in decision  described above.","As each of the market participants are added to the suborder quote list, they are sorted against one another within each price tier. As explained above, certain factors will create a price penalty for certain market participants relative to other market participants which will allow suborders to be sorted ahead of one another within a price tier. In addition, as should be apparent to those skilled in the art, the user of client system  has the ability to preference certain market participants over others and to negatively preference certain market participants or certain market participant types such that the smart server will not send suborders to negatively preferenced market participants or market participant types or will preferentially send suborders to particular market participants or market participant types based upon user preference.","Referring now to , therein is depicted a user interface for initiating a trade using the system for obtaining the best fill for an order using automated suborders that is generally designated . User interface  provides information to the user of client system  about a security of interest and allows the user of client system  to initiate the execution of trade using a single click. User interface  includes a sell button , a buy button , a short button  each of which may have a drop down menu associated therewith having user options. User interface  also includes security symbol field , number of shares field , price field . In addition to these buttons and fields, user interface  includes level I data fields such as, a close field  that displays the price at yesterday's close, an open field  that displays the price at today's open, a current bid price field , a high for the day field , a low for the day field , a current ask price field , a tick direction field , a change on the day field , a ratio field  that displays the ratio of market participants at the inside bid vs. the inside ask and a volume field .","Unlike user interface  as seen in , user interface  does not include level II data or time & sales data. While having level II information assists the user of client system  in making decisions regarding the execution of a trade in the selected security, use of the system for obtaining the best fill for an order using automated suborders alleviates some of the need for level II data as the automated creation of suborders takes advantage of the level II information even if the level II information is not presented to the user of client system . As explained above, the present system identifies market participants with available shares to either buy or sell and sorts these market participants based upon price tier as well as other parameters. As such, regardless of whether the user of client system  has level II data available, the best fill is nonetheless obtained using the system obtaining the best fill for an order using automated suborders.","In fact, user interface  makes the initiation of trades that utilize the present system as simple as one click. In the illustrated embodiment, when the user of client system  wants to execution a trade which will trigger the automated suborders, the user simply clicks on buy button  or sell button . Specifically, if the user of client system  wants to sell 1000 shares of EBAY, the user simply clicks on sell button . In this case, as explained above, the system of the present invention will parse this order as necessary to obtain the best price for all 1000 shares. Likewise, if the user of client system  wants to buy 800 shares of EBAY, the user simply clicks on buy button . In this case, as explained above, the system of the present invention will parse this order as necessary to obtain the best price for all 800 shares.","While this invention has been described with a reference to illustrative embodiments, this description is not intended to be construed in a limiting sense. Various modifications and combinations of the illustrative embodiments as well as other embodiments of the invention, will be apparent to persons skilled in the art upon reference to the description. It is, therefore, intended that the appended claims encompass any such modifications or embodiments."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a more complete understanding of the present invention, including its features and advantages, reference is now made to the detailed description of the invention, taken in conjunction with the accompanying drawings of which:",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 17"}]},"DETDESC":[{},{}]}
