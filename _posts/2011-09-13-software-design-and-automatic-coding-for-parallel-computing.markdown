---
title: Software design and automatic coding for parallel computing
abstract: We discuss a software design and automatic coding system particularly applicable to generating code for massively parallel computing systems. This system operates on a high performance computer and provides a collaborative, interactive, iterative method of defining and designing software for parallel computing systems, and generates software code directly from design elements without the use of code patterns, meta-data, or domain rules, reducing bugs and cost while retaining the time-to-market advantages of iterative ad-hoc methods.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08843879&OS=08843879&RS=08843879
owner: Massively Parallel Technologies, Inc.
number: 08843879
owner_city: Boulder
owner_country: US
publication_date: 20110913
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF THE EMBODIMENTS"],"p":["This application claims priority to U.S. Provisional Patent Application Ser. No. 61\/382,405, filed Sep. 13, 2010, the disclosure of which is incorporated herein by reference.","The present application relates to the field of manual and automatic systems and methods for preparing software for execution on parallel computing platforms.","As the cost and availability of processors decreases, there has been increasing interest in coupling many processors together to provide the huge amounts of computing power required to solve previously intractable problems. Among applications that are thought to be amenable to solution with such massively parallel machines are problems involving weather prediction, climate and ocean current modeling, nuclear fusion reactor modeling, dynamic modeling of galactic collisions, assembling decoded fragments of DNA into chromosome-level DNA databases, and similar tasks involving large numbers of variables and large datasets.","Several architectures have been previously disclosed for parallel processing, including the Howard Cascade. Hardware alone, however, does not solve applications; software must be prepared to direct the hardware into finding a solution.","While software development for single processor machines, and for machines providing limited parallelism, has reached a high state of art; methods have not previously been perfected for subdividing massive problems into subtasks, submitting and executing those subtasks on many processors in a massively parallel processor, and collecting and refining results into useful solutions.","For expediency, modern computer software is usually created in a quasi-ad-hoc fashion. That is, design is simply a sketch that the programmer uses as a guide in some iterative development effort in order to reduce development time, allowing for enhanced time-to-market. Unfortunately, on average, 70 software bugs per 1,000 lines of software generated occur. Thus, for a one million source-line software system with, on average, 7000 bugs, detecting and repairing the bugs both during testing and after product release costs $2,461,200.","Traditionally, the documentation that comprises a design quickly gets out of sync with the software. Maintaining both the software and the design documentation is twice the effort, without twice the net benefit to the organization, because there is usually no direct causal relationship between the code and the documentation. A model that allows most of the code to be generated automatically from the design documentation, without coding constructs being placed in that documentation, and that creates a change in the code whenever a change is made to the documentation makes the double effort unnecessary.","Automatic Code Generation Methods","There are currently three standard models of automatic software generators: design patterns, domain meta-data usage, and domain rules.","Design Pattern","A design pattern occurs when a coding template is used with some user-defined data to create the software. For instance, adherence to a particular Application Programming Interface (API) standard as a template allows code to be generated to that standard.","Domain Meta-Data","In the domain of database designs, databases can be created from entity-relationship diagrams which comprise the meta-data defining the interactions that can be used in a particular database.","Domain Rules","Domain rules are any set of rules used within a particular knowledge area. In the domain of bioinformatics, the rules describing the translation of DNA to proteins comprise that field's domain rules. When the rules are precise enough, they can be used to generate software in that domain.","What is missing from existing automatic code generators is a generally applicable automatic code-generation solution.","The term Howard Cascade as used herein refers to a category of massively parallel computing systems as disclosed in U.S. Pat. Nos. 6,857,004, 7,418,470, and 7,730,121, US Patent Publications 20050038852, 20100185719, 20100049941, 20100094924, 20100183028 and 20090077483, the disclosures of which are incorporated herein by reference. Howard Cascades typically have one or more access or home nodes or machines, one or more processing nodes or machines, and a communications system interconnecting the access nodes and processing nodes. During program execution, processing nodes are typically dynamically organized into a hierarchical cascade.","We discuss a software design and automatic coding system particularly applicable to generating code for massively parallel computing systems. This system operates on a high performance computer and provides a collaborative, interactive, iterative method of defining and designing software for parallel computing systems, and generates software code directly from design elements without the use of code patterns, meta-data, or domain rules, reducing bugs and cost while retaining the time-to-market advantages of iterative ad-hoc methods.","In this document, Massively Parallel Technologies is abbreviated MPT. A few definitions as used herein:\n\n","Prior to software generation, several questions arise regarding design: What is the purpose? What are the steps of good design? When is it finished?","Design Purpose:","to understand a problem and what the solution needs to include so that all necessary functionality is incorporated into the solution and all individual tasks required to implement the solution are trivial tasks.","If all of the tasks required to reach some solution are trivial, then the probability of generating errors while performing those tasks decreases immensely.","Software Design Completion:","when 100% separation between software processing and software control is reached.","Software consists of two primary elements: processing and control. Processing is the transformation, display, movement or storage of data. Control dictates decisions concerning which processing is to occur. By fully separating processing and control, the complexity of each is minimized. Further, software control becomes a series of formal, separable, simple state machines. This simplification can greatly decrease the incidence of software errors.","Fully separating processing from control means that there are software modules that contain transformation\/display\/data-storage or subroutine calls, looping-structures (calling subroutines), and branching statements (calling subroutines). Thus, data movement is encapsulated into fixed structures rather than being hidden by control statements. Since parallelization requires knowledge of either the data movement pattern or variable-level cross-coupling at the code-statement level, determining the parallel processing techniques required becomes very easy when control and processing are separated.","Within the design methodology, there is enough information found in the control element definitions to completely automate the coding of all control elements. Although the process elements cannot be automatically coded, their purpose and relationship to the rest of the system can be coded; that is, detailed stub code can be written automatically.","Design Steps:","There are four functional elements needed to construct a practical computer software system, as illustrated in : requirements , design , code , and test . In an agile design methodology, these four elements overlap and interact in an iterative fashion. That is:\n\n","Where these elements come together is called the requirement traceability matrix . The requirement traceability matrix is a table (discussed below with reference to ) that contains the traceability element number, the text of the requirements , the design element tuples as part of design , the code element names of portions of code , and the test numbers of associated tests of tests ; in an embodiment the traceability matrix  also incorporates links to associated portions of code , requirements , design  and tests  to allow rapid reference to those elements.","The system is complete when all requirements can be traced to design, code, and test elements and when there are no design, code or test elements not included in the trace. Thus, the requirements traceability matrix  serves to monitor system construction progress. This also insures that only required elements are performed by the system.","Design System","In order to provide support for designing, preparing, and testing application and system software for our parallel computer systems, an MPT interface and development system  as illustrated in  is provided. This system  provides a number of workstations , each of which may be provided to a human developer and\/or development manager. These workstations are coupled together over a network  and to one or more development machines , hereinafter often referred to collectively with workstations  as the MPT Cluster System. One or more of development machines  may also double as a workstation . Each of workstations  has one or more displays  and suitable human-interface devices such as a keyboard and a mouse, trackball, touchscreen, or other input device. Development machines  maintain a central design database  in a large, redundant, disk memory system  that includes requirements , design elements , code elements , and test routines , along with privileges  and other information relevant to the software.","In order to provide for testing of the software, the development system  is also connected through network  to access nodes  of at least one massively parallel computing system , such as a Howard Cascade incorporating many individual processors each associated with memory and system interconnect. In at least one embodiment, the development system  couples to a home node of a Howard Cascade massively-parallel computing system.","The development machine  contains computer readable code  in a memory for generation of the following screens on workstations , for updating and operating with design database , and for automatically generating machine-readable and executable code for parallel computing system  from information extracted from design database .","In an embodiment network  is a local area network, in an alternative embodiment network  contains part or all of one or more local area networks and portions of the Internet.","Main Developer Screen","On the Main screen , as displayed on a display  of a workstation  when the MPT Interface system is started and invoked for a particular software project, is the Software Design button . When the Software Design button is selected, the five design element buttons are displayed: Requirements , High Level Design , Detailed Design , Test Plans & Procedures , and Requirements Traceability , as shown in . When detailed design  is present, also displayed is an Auto Coding button . Available to development managers and\/or administrators is a Privileges button .","Product Requirements Document (PRD)","Writing requirements is a critical part of any application development effort. It not only lays out the product but forms the basis of traceability. Without requirements, a distributed team of developers would have a difficult time knowing what to create and when the creation was complete.","A PRD is a document written by an organization that defines the needed features of a product, including a software product. The PRD is stored as part of Requirements  in design database  on development machines , and is editable through workstations . This document is written at a high level and contains the following:","Title & author information","Purpose and scope, from both technical and business perspectives","Stakeholder identification","Market assessment and target demographics","Product overview and use cases","Requirements, including\n\n","Constraints","Workflow plans, timelines and milestones","Evaluation plan and performance metrics","Thus, a PRD contains not only the requirements but any ancillary information concerning the product as well. The system must be able to separate the requirements from the ancillary data.","The system uses the word \u201cshall\u201d as a keyword indicating that the sentence containing that word is, in fact, a requirement and can be located as such by the automated system. Every requirement, along with its page number, is taken from the requirements document and stored in the requirements portion of the traceability matrix  in the development database  on development machine . The MPT software design system provides a PRD template, as shown below, for use by the developers.",{"@attributes":{"id":"p-0074","num":"0089"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Chapter #","Chapter Heading"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2014","Title & Author Page"]},{"entry":[{},"1","Purpose & Scope"]},{"entry":[{},"2","Market Assessment"]},{"entry":[{},"3","Product Overview & Use Case"]},{"entry":[{},"4","Requirements"]},{"entry":[{},"5","Constraints"]},{"entry":[{},"6","Workflow plans, timelines, and milestones"]},{"entry":[{},"7","Evaluation Plan & Performance Metrics"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0075","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Requirement_Document_Data_Request { char message = 105,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"char document_write_privilege [32],"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Requirement_Document_Data_Return{","char message = 106,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"char document_write_privilege [32],"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Each chapter of the PRD can be accessed independently. The Title and Author Page allows the document chapters to be combined into a single document. Selecting the Requirements Document button  from the Main screen shall cause the seven requirements-document chapter-selection buttons , , , , , and , a chapter evaluate button , the View Chapter  and Write Chapter  buttons, as well as the document title  and document author list  fields, to be displayed, as illustrated in . Also displayed are hierarchical return  and selection  buttons.","Each chapter can be read independently by anyone within the organization. However, only a development manager or administrative-level user can allow a non-administrative user \u201cwrite\u201d privileges. Giving document privileges is accomplished by the administrator filling in the document title (new document) or selecting the Show All button followed by double-left clicking on the required document name then selecting the Privileges button. If the Privileges button is not selected then a list of the documents authors is shown. The authors are all of the organization members given write privileges to the document.","If the Privileges button for a PRD chapter is selected (with the appropriate document title) then the list of all organization users is shown, as illustrated in , to permit the development manager or administrative-level user to display all users  and to select users to which to grant \u201cwrite\u201d privileges.","Once the list of an organization's members is displayed, selecting a member  (double-left clicking on the member's name) allows the administrator to specify the chapter or chapters for which the member has write privileges. Specifying the chapter simply requires the administrator to select (double-left clicking) one or more of the displayed chapters; in the illustration of  product  and workflow  chapters are selected.","If an already selected chapter is re-selected, the selected member's write privileges are revoked for that chapter. When a member has no privileges, that member's name is no longer highlighted. Selecting a Req. Doc button followed by the Privileges button, followed by the document name, the member name, and the Select button shall cause the MPT Interface system to generate and send the Requirement write privilege request message to the MPT Cluster System.",{"@attributes":{"id":"p-0081","num":"0096"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Requirement_write_privilege_Request {","char message = 83,"]},{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char member[32],"]},{"entry":[{},"bool chptr_write_privileges [7],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"char member_name[32]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Upon receipt of the requirement_write_privilege_request message, the MPT Cluster System shall first determine if the requester is an administrative level user. If the requester is an administrative level user then the MPT Cluster System shall attempt to modify the requirement documents' write privileges to include the selected member. One minus the chapter number shall be used as the array index into chapter write privileges array. A one placed in an array element shall grant write privileges to the chapter that corresponds to that element and a zero shall remove write privileges from the corresponding chapter. If the MPT Cluster System has successfully changed write privileges for the current document then it shall send the return status message to with a zero status to the MPT Interface system.",{"@attributes":{"id":"p-0083","num":"0098"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Return_status_message { char message = 2,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"int return_status = 0"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"If the MPT Cluster System was unsuccessful in changing the write privileges for the current document then the return status message with a one status is sent to the MPT Interface system.",{"@attributes":{"id":"p-0085","num":"0100"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Return_status_message { char message = 2,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"int return_status = 50"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"When granting privileges is complete, the administrator selects the Return button which returns to before the Privileges button was selected, allowing the chapters to be written.","To write a chapter, a member with write privileges enters the document title, selects the Write CHPT button, then selects the correct chapter as illustrated in FIG. . Once the Write CHPT button is selected the MPT Interface System generates and sends the Write_Chpt_Request message to the MPT Cluster System:",{"@attributes":{"id":"p-0088","num":"0103"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Write_Chpt_Request {","char message = 84,"]},{"entry":[{},{},"char mac_address [12],"]},{"entry":[{},{},"char organization_name[32],"]},{"entry":[{},{},"char user_name[32],"]},{"entry":[{},{},"char password[20],"]},{"entry":[{},{},"char document_name [32]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Upon receipt of the Write_Chpt_Request message, the MPT Cluster System attempts to access the requirements document chapter data. If the requirements document chapter data is correctly accessed then the MPT Cluster System first sends the Return_status message containing a zero status value, followed by the Req_Chptr_Return_Data message to the MPT Interface system:",{"@attributes":{"id":"p-0090","num":"0105"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Write_Chpt_Return {","char message = 85,"]},{"entry":[{},{},"char mac_address [12],"]},{"entry":[{},{},"char organization_name[32],"]},{"entry":[{},{},"char user_name[32],"]},{"entry":[{},{},"char password[20],"]},{"entry":[{},{},"char document_name [32],"]},{"entry":[{},{},"int number_bytes_chpt_1,"]},{"entry":[{},{},"char chpt_1[number_bytes_chpt_1],"]},{"entry":[{},{},"int number_bytes_chpt_2,"]},{"entry":[{},{},"char chpt_1[number_bytes_chpt_2],"]},{"entry":[{},{},"int number_bytes_chpt_3,"]},{"entry":[{},{},"char chpt_1[number_bytes_chpt_3],"]},{"entry":[{},{},"int number_bytes_chpt_4,"]},{"entry":[{},{},"char chpt_1[number_bytes_chpt_4],"]},{"entry":[{},{},"int number_bytes_chpt_5,"]},{"entry":[{},{},"char chpt_1[number_bytes_chpt_5],"]},{"entry":[{},{},"int number_bytes_chpt_6,"]},{"entry":[{},{},"char chpt_1[number_bytes_chpt_6],"]},{"entry":[{},{},"int number_bytes_chpt_7,"]},{"entry":[{},{},"char chpt_1[number_bytes_chpt_7],"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Only those chapters for which the member has write privileges are transmitted back to the requester. If an error occurs when attempting to access the requirement chapter data then the return_status message containing the value  shall be returned to the MPT Interface System. Upon receipt of the Write_Chpt_Return message the MPT Interface system shall allow the selection of chapter that is to be modified.","Selecting a chapter for which the member has write privileges causes that chapter's contents to be shown in a pop-up menu , as shown in .","Once the chapters have been modified and the member selects the Submit button  then the MPT Interface system shall generate and transmit the Modify_Chapt_Request message to the MPT Cluster system.",{"@attributes":{"id":"p-0094","num":"0109"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Modify_Chpt_Request {","char message = 86,"]},{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"int number_bytes_chpt_1,"]},{"entry":[{},"char chpt_1[number_bytes_chpt_1],"]},{"entry":[{},"int number_bytes_chpt_2,"]},{"entry":[{},"char chpt_1[number_bytes_chpt_2],"]},{"entry":[{},"int number_bytes_chpt_3,"]},{"entry":[{},"char chpt_1[number_bytes_chpt_3],"]},{"entry":[{},"int number_bytes_chpt_4,"]},{"entry":[{},"char chpt_1[number_bytes_chpt_4],"]},{"entry":[{},"int number_bytes_chpt_5,"]},{"entry":[{},"char chpt_1[number_bytes_chpt_5],"]},{"entry":[{},"int number_bytes_chpt_6,"]},{"entry":[{},"char chpt_1[number_bytes_chpt_6],"]},{"entry":[{},"int number_bytes_chpt_7,"]},{"entry":[{},"char chpt_1[number_bytes_chpt_7],"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Upon receipt of the Modify_Chpt_Request message the MPT Cluster system shall attempt to store the modified requirement document chapters into a database. Successful entry of the modify_chapt_request message data shall cause the MPT Cluster system to transmit the Return_status message containing a zero in the status field. If the MPT Cluster system is unable to store the modified chapter data in the database then the MPT Cluster system shall transmit the Return_status message containing a  in the status field.","In order to view a chapter, a member selects the View CHPT button instead of the Write CHPT button, followed by the chapter to be viewed. The selection of the View CHPT button shall cause the MPT Interface system to create and send the View_Chpt_request message to the MPT Cluster system.",{"@attributes":{"id":"p-0097","num":"0112"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"View_Chpt_Request {","char message = 84,"]},{"entry":[{},{},"char mac_address [12],"]},{"entry":[{},{},"char organization_name[32],"]},{"entry":[{},{},"char user_name[32],"]},{"entry":[{},{},"char password[20],"]},{"entry":[{},{},"char document_name [32]"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Upon receipt of the View_Chpt_Request message, the MPT Cluster system  shall access the requirements chapters portion of requirements database . If the MPT Cluster is able to access the chapter data then it shall generate and transmit the return_status message with a zero in the status field, followed by the View_Chpt_Return message.",{"@attributes":{"id":"p-0099","num":"0114"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"View_Chpt_Return {","char message = 87,"]},{"entry":[{},{},"char mac_address [12],"]},{"entry":[{},{},"char organization_name[32],"]},{"entry":[{},{},"char user_name[32],"]},{"entry":[{},{},"char password[20],"]},{"entry":[{},{},"char document_name [32],"]},{"entry":[{},{},"int number_bytes_chpt_1,"]},{"entry":[{},{},"char chpt_1[number_bytes_chpt_1],"]},{"entry":[{},{},"int number_bytes_chpt_2,"]},{"entry":[{},{},"char chpt_1[number_bytes_chpt_2],"]},{"entry":[{},{},"int number_bytes_chpt_3,"]},{"entry":[{},{},"char chpt_1[number_bytes_chpt_3],"]},{"entry":[{},{},"int number_bytes_chpt_4,"]},{"entry":[{},{},"char chpt_1[number_bytes_chpt_4],"]},{"entry":[{},{},"int number_bytes_chpt_5,"]},{"entry":[{},{},"char chpt_1[number_bytes_chpt_5],"]},{"entry":[{},{},"int number_bytes_chpt_6,"]},{"entry":[{},{},"char chpt_1[number_bytes_chpt_6],"]},{"entry":[{},{},"int number_bytes_chpt_7,"]},{"entry":[{},{},"char chpt_1[number_bytes_chpt_7],"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"If the chapter data is not accessible, then the MPT Cluster system shall generate and send the return_status message with a  value in the status field.","The selection of the Submit button shall cause the MPT Interface to return to before the View Chapter (View Chpt) button was selected.","Below are the messages that can be displayed on the requirement document screen,","1. Privileges Successfully Submitted","2. Privileges Submission Unsuccessful","3. Chapter Changed Successfully","4. Chapter Not changed Error","5. Different Machine Used","Requirement Traceability Matrix","The requirements traceability matrix (RTM)  links all product design, code, and test elements to what is required for the product. The RTM gathers the requirements from Chapter 4 of the Product Requirement Document. Every sentence in Chapter 4 that contains \u201cshall\u201d, along with the page number, is entered into the matrix. An administrator-level member selecting the Req. Trace button then filling in the Document Title field shall cause the MPT Interface system to generate and send the Req_Trace_Request message to the MPT Cluster system",{"@attributes":{"id":"p-0109","num":"0124"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Req_Trace_Request {","char message = 88,"]},{"entry":[{},{},"char mac_address [12],"]},{"entry":[{},{},"char organization_name[32],"]},{"entry":[{},{},"char user_name[32],"]},{"entry":[{},{},"char password[20],"]},{"entry":[{},{},"char document_name [32]"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Upon receipt of the Req_Trace_request message, the MPT Cluster system shall attempt to obtain the traceability matrix associated with the current document name. If the MPT Cluster system is successful in accessing the data then it shall first generate and send the return_status message with a zero in the status field, followed by the Req_Trace_Return message.",{"@attributes":{"id":"p-0111","num":"0126"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Req_Trace_Return {","char message = 89,"]},{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"char document_write_privilege [32],"]},{"entry":[{},"int number_require_traceability_bytes,"]},{"entry":[{},"char"]},{"entry":["}","RT_Matrix[number_require_traceability_bytes]"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"If the MPT Cluster system is unsuccessful in accessing the traceability data then it shall generate and send the return_status message with a 54 in the status field. Receipt of the Req_Trace_Return message by the MPT Interface system shall cause the RT_Matrix data to be displayed on the Main screen.",{"@attributes":{"id":"p-0113","num":"0128"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Req_Traceability_write_privilege_Request {","char message = 109,"]},{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char member[32],"]},{"entry":[{},"bool chptr_write_privileges [7],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"char member_name[32]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Requirement Traceability Matrix pop-up  shall remain until the Submit button  is selected. The other requirement traceability fields shall be filled in by selecting the required item on one of the other screens followed by double-clicking on the needed row of the Requirement Traceability Matrix, such as row . This is detailed in the High Level Design, Detailed Design, Code Element, and Test Plans & Procedures sections. Once entered, the matrix  maintains links allowing a click on a matrix element, such as High Level Design , to open a window directly containing that portion of the design database .",{"@attributes":{"id":"p-0115","num":"0130"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Req_Traceability_Change_Request {","char message = 108,"]},{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"int number_require_traceability_bytes,"]},{"entry":[{},"char RT_Matrix[number_require_traceability_bytes]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The messages displayed on the Requirement Traceability Screen include:","1. Privileges Successfully Submitted","2. Privilege Submission Unsuccessful","3. Requirement Traceability Successfully Changed","4. Requirement Traceability Not Changed Error","5. Different Machine Used","High Level Design","The MPT model high-level design method is a graphically-based, concept-analysis model consisting of four components: Process\/Control\/Data\/Signal Decomposition Analysis (DA), Control System Analysis (CSS), Data Dictionary (DD), and Signal Dictionary (SD). All of the high-level design components work together to form the design. Each component is performed in its own pop-up screen, where appropriate changes on one screen will cause changes on the other screens as illustrated herein. Each component of the DA and the CSS are identified with both a name, which specifies the task performed, and a tuple, which indicates the hierarchical location of the component. This tuple value is used by the Requirements Traceability Matrix to trace the design to the requirements.","The purpose of high-level design is to completely separate the processing aspects of a task from the control aspects of that same task. The separation is performed in a hierarchical manner until no such separation is possible. What is left at the lowest level of decomposition is a series of diagrams whose components are either pure linear code blocks or simple state machines that represent the control and sequencing of the code blocks. The simple state machines can be view separately or as a whole, showing the entire task control complexity as a single diagram. Control is eventually represented in software as some flow control statement: loops, go-tos, if-then-elses, or subroutine calls. The code blocks are simple linear data transformations\/displays\/movements. Because the code blocks are linear, their functionality is easy to grasp. Taken together, these diagrams represent a great simplification of the task because every aspect of the task can be viewed as a simple local structure.","Any member of the developing organization can view the high-level design; however, only those members who are authorized by an administrator can add or change the high-level design.","Authorizing High Level Design Members","In order to grant write privileges to a member, with reference to , the administrative member selects the Software Design, High Level Design and Privileges buttons. Granting write privileges for High Level Design to a member follows a procedure very similar to that of granting write privileges to Requirements as previously discussed with reference to , except the High Level Design button  is selected, and one of the High level Design item buttons Decomp. Analysis , Control Analysis , Data Dictionary , and Signal Dictionary  are selected.","This selection is followed by the administrator entering the Document Title either by directly entering the title or by selecting the title from a list of valid titles. The document title must be the same as the one used for the requirements document. Next, a member is selected by clicking on a pull-down list  of members, followed by the selection of the high-level design components for which the member has write privileges. Selecting the Software Design button , the HL Design button , the document title , the member name from the list , the design items (Decomposition analysis (Decomp. Analysis) , Control Analysis , Data Dictionary , and\/or Signal Dictionary ) followed by the Privileges button  shall cause the MPT Interface system to generate and send the HLD_Write_Privilege_Request message to the MPT Cluster system.",{"@attributes":{"id":"p-0127","num":"0142"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HLD_Write_Privilege_Request {","char message = 90,"]},{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"bool HLD_write_privileges [4],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"char member_name[32]"]},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Upon receipt of the HLD_Write_Privilege_Request message the MPT Cluster system shall attempt to modify the HLD Write Privilege information with the current document name in the database. If the MPT Cluster is successful in modifying the HLD Write Privilege information then it shall send the return_status message containing a zero in its status field to the MPT Interface system. If the MPT Cluster system is unable to modify the HLD information in the database then it shall send the return_status message containing a 55 in its status field to the MPT Interface system.","Viewing High Level Design","Any member of an organization can view the components of a high-level design, with a screen resembling that of  except the member's list  and privilege button  are suppressed. This is accomplished by the member selecting the Software Design, the HL Design, and entering or selecting the Document Title field, followed by selection of the View Design  button. Selection of the View Design button shall cause the MPT Interface system to generate and send the HLD_Data_Request message to the MPT Cluster system.",{"@attributes":{"id":"p-0130","num":"0145"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HLD_Data_Request {","char message = 91,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"char mac_address [12],"]},{"entry":[{},{},"char organization_name[32],"]},{"entry":[{},{},"char user_name[32],"]},{"entry":[{},{},"char password[20],"]},{"entry":[{},{},"char document_name [32],"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Upon receipt of the HLD_Data_Request message the MPT Cluster system shall attempt to access the HLD data for the current document from the database. If the MPT Cluster system is successful accessing the HLD data then it shall first send the return_status message containing a zero in its status field followed by the HLD_Data_Return message.",{"@attributes":{"id":"p-0132","num":"0147"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HLD_Data_Return {","char message = 92,"]},{"entry":[{},{},"char mac_address [12],"]},{"entry":[{},{},"char organization_name[32],"]},{"entry":[{},{},"char user_name[32],"]},{"entry":[{},{},"char password[20],"]},{"entry":[{},{},"char document_name [32],"]},{"entry":[{},{},"char document_write_privilege [32],"]},{"entry":[{},{},"int number_decomp_bytes,"]},{"entry":[{},{},"char Decomp_analysis[number_decomp_bytes],"]},{"entry":[{},{},"int number_data_dictionary_bytes,"]},{"entry":[{},{},"char"]},{"entry":[{},{},"data_dictionary[number_data_dictionary_bytes],"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"If the MPT Cluster system is un-successful accessing the HLD data then it shall send the return_status message with a 56 in its status field to the MPT Interface system.","Creating High Level Design Components","Any authorized member of an organization can open for writing the components of a high-level design. This is accomplished by the member selecting the Software Design , the HL Design , selecting the correct document in the Document Title field , selecting the component to view, and finally, selecting the Write Design  buttons. Entering the Write Design button shall cause the MPT Interface system to generate and send the HLD_Data_Request message. Upon receipt of the HLD_Data_Request message the MPT Cluster system shall attempt to access the HLD data for the current document from the database. If the MPT Cluster system is successful accessing the HLD data then it shall first send the return_status massage containing a zero in its status field followed by the HLD_Data_Return message.","Decomposition Analysis","Decomposition analysis forms the heart of high-level design. Any member with write privileges can access this component by selecting the Write Design button then the Decomp. Analysis button  shall cause the MPT Interface system to display the decomposition data in the Decomposition pop-up screen  as illustrated in , together with a menu  of selectable symbols for entry of the decomposition data.","The pop-up Decomposition Drawing screen shall have two parts: the objects region and the drawing region. The objects region shall contain all of the possible design objects. These objects are dragged from the objects region then dropped into the drawing region. The cursor placed at the edge of the drawing region shall cause the prospective drawing region to move in the direction corresponding to the cursor's placement, revealing the hidden drawing region area.","The Data Dictionary table can be displayed either from selecting a dataflow or by the member left-clicking the Data button.","Selecting any object on the decomposition drawing table followed by an authorized member left-clicking the Delete button shall cause that object to be deleted.","The topmost level of the decomposition drawing region shows the entire system at a glance; that is, all signals and data from\/to all systems that are external to the current system are described. At the topmost level (level 0), only five types of objects shall be able to be dragged and dropped: Process , External , Bundled External , Data flow , and Control flow objects .  illustrates level 0.","There are several components of the Level-0 Decomposition Drawing region. The first is the process bubble with its associated name, tuple, view number, and description. The associated name is the name of the product and comes from the Document Title Name field entered on the Write High Level Design screen. An authorized member can change the process bubble name by single left-clicking the process bubble then entering the new name. This is the first object placed on the drawing region and is placed there automatically by the system. The tuple value (the red zero on the process bubble) is automatically set to zero on the level-0 region. The view number (the red \u00bd, meaning view 1 of two views showing) allows the member to know which process bubble view is showing. Rotating the process bubble allows more input and output data\/control flows to be connected without it becoming too overloaded with lines. Rotating the bubble view is accomplished by selecting either the left or right arrowhead associated with the view number. Double left-clicking the view number adds another view. Double right-clicking the view number removes an unused view. The authorized member accesses the unused view (only center bubble showing) then double right-clicks the center bubble.","Single right-clicking a bubble by an authorized member shall cause the process bubble description pop-up  to be displayed. There are two parts to the process bubble description the purpose  and the keyword-list . The purpose is a prose description of the design element created as a human readable description. The keyword-list is a list of descriptive words used to allow the design element to be found using a search engine.","Once the purpose and keyword-list have been entered, the member shall select the Submit button to continue adding design elements. Filling in the design purpose allows the system to automatically generate the detailed design from entry pseudocode. Selection of the return button on the process design element pop-up shall return control to the calling screen.","The second component of a level-0 decomposition drawing is the external system box . The authorized member must drag and drop the external system box where required. Once the external system box  is properly placed on the decomposition drawing region, for example placed external system box , its name can be entered on the box as shown. Entering a name on the external system box  is accomplished by the member left-clicking inside of the box then typing the name into the box. To delete an external system box, the member left-clicks the external system box followed by selecting the Delete button.","The third component of a level-0 decomposition drawing is the bundled external system box . A bundled external system box contains multiple external system boxes. Double left-clicking on a placed bundled external system box  shows the constituent external system boxes , ,  of the bundled external system box . Double left-clicking on a bundled external system box a second time hides the constituent external system boxes again. This is shown in .","In order to bundle multiple external systems, the authorized member first drags-and-drops the bundled external system box to the decomposition drawing region. Once properly placed, the member drags-and-drops the appropriate number of unbundled external system boxes. Finally, the member first right-clicks the unbundled external system box then the right-clicks the bundled external system box, associating the unbundled with the bundled external system box. Once associated, the unbundled external system box is not displayed until it is displayed through the bundled external system box. Entering a name on the bundled external system box is accomplished by the member left-clicking inside of the box then typing the name into the box. To delete a bundled external system box, the member left-clicks the bundled external system box followed by selecting the Delete button. Once deleted, all of the external system boxes that comprise the deleted bundled external system box are displayed.","The fourth component of the level-0 decomposition drawing is the dataflow arrow. The dataflow arrow shows the direction of the dataflow. The data can flow either to or from an external system box. A bundled external system box combines all input dataflows from all constituent external system boxes into a single flow. Similarly, all output dataflows from all constituent external system boxes are combined into another single flow. These combined dataflows are called bundled dataflows and require names of their own. Double left-clicking a dataflow allows the authorized member to name the flow simply by typing in the name.","Double right-clicking a dataflow displays the contents of that flow, as illustrated in the dataflow descriptor of . If the dataflow is a bundled dataflow then the revealed contents are the other flows. Double right-clicking the revealed dataflows returns the view to the dataflow bundle view.","If the double right-clicked dataflow is not a bundled dataflow then the Data Dictionary Table is displayed. The Data Dictionary Table shows the flow types, flow names, unit names, and the unit types that make up the dataflow and allows an authorized member to change those data fields. Both a flow name and a unit name must be unique. The valid data unit types are shown in Table 2:",{"@attributes":{"id":"p-0149","num":"0164"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Valid Unit Types"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Number of"]},{"entry":[{},"Variable Type Name","Bytes"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"SIGNAL","n\/a"]},{"entry":[{},"#define","n\/a"]},{"entry":[{},"#include","n\/a"]},{"entry":[{},"#type","n\/a"]},{"entry":[{},"Char","1"]},{"entry":[{},"Auto Char","1"]},{"entry":[{},"Static Char","1"]},{"entry":[{},"Extern Char","1"]},{"entry":[{},"Register Char","1"]},{"entry":[{},"Unsigned Char","1"]},{"entry":[{},"Auto Unsigned Char","1"]},{"entry":[{},"Static Unsigned Char","1"]},{"entry":[{},"Extern Unsigned Char","1"]},{"entry":[{},"Register Unsigned Char","1"]},{"entry":[{},"Int","4"]},{"entry":[{},"Auto Int","4"]},{"entry":[{},"Static Int","4"]},{"entry":[{},"Extern Int","4"]},{"entry":[{},"Register Int","4"]},{"entry":[{},"Unsigned Int","4"]},{"entry":[{},"Auto Unsigned Int","4"]},{"entry":[{},"Static Unsigned Int","4"]},{"entry":[{},"Extern Unsigned Int","4"]},{"entry":[{},"Register Unsigned Int","4"]},{"entry":[{},"Short","2"]},{"entry":[{},"Auto Short","2"]},{"entry":[{},"Static Short","2"]},{"entry":[{},"Extern Short","2"]},{"entry":[{},"Register Short","2"]},{"entry":[{},"Short Int","2"]},{"entry":[{},"Auto Short Int(eger)","2"]},{"entry":[{},"Static Short Int(eger)","2"]},{"entry":[{},"Extern Short Int(eger)","2"]},{"entry":[{},"Register Short Int(eger)","2"]},{"entry":[{},"Unsigned Short Int(eger)","2"]},{"entry":[{},"Auto Unsigned Short Int(eger)","2"]},{"entry":[{},"Static Unsigned Short Int(eger)","2"]},{"entry":[{},"Extern Unsigned Short Int(eger)","2"]},{"entry":[{},"Register Unsigned Short Int(eger)","2"]},{"entry":[{},"Long","8"]},{"entry":[{},"Auto Long","8"]},{"entry":[{},"Static Long","8"]},{"entry":[{},"Extern Long","8"]},{"entry":[{},"Register Long","8"]},{"entry":[{},"Long Int(eger)","8"]},{"entry":[{},"Auto Long Int(eger)","8"]},{"entry":[{},"Static Long Int(eger)","8"]},{"entry":[{},"Extern Long Int(eger)","8"]},{"entry":[{},"Register Long Int(eger)","8"]},{"entry":[{},"Unsigned Long Int(eger)","8"]},{"entry":[{},"Auto Unsigned Long Int(eger)","8"]},{"entry":[{},"Static Unsigned Long Int(eger","8"]},{"entry":[{},"Extern Unsigned Long Int(eger)","8"]},{"entry":[{},"Register Unsigned Long Int(eger)","8"]},{"entry":[{},"Float","4"]},{"entry":[{},"Auto Float","4"]},{"entry":[{},"Static Float","4"]},{"entry":[{},"Extern Float","4"]},{"entry":[{},"Register Float","4"]},{"entry":[{},"Unsigned Float","4"]},{"entry":[{},"Auto Unsigned Float","4"]},{"entry":[{},"Static Unsigned Float","4"]},{"entry":[{},"Extern Unsigned Float","4"]},{"entry":[{},"Register Unsigned Float","4"]},{"entry":[{},"Double","8"]},{"entry":[{},"Auto Double","8"]},{"entry":[{},"Static Double","8"]},{"entry":[{},"Extern Double","8"]},{"entry":[{},"Register Double","8"]},{"entry":[{},"Unsigned Double","8"]},{"entry":[{},"Auto Unsigned Double","8"]},{"entry":[{},"Static Unsigned Double","8"]},{"entry":[{},"Extern Unsigned Double","8"]},{"entry":[{},"Register Unsigned Double","8"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"C-language-style structures can also be added to the system using the type definition. To add a new data field, the authorized member selects an open row in the Data Dictionary table and enters the new unit name. The flow type is automatically set to DATA, and the data flow name is automatically entered from the dataflow name. Next, a valid data type for the data name is selected. When completed, the Data Dictionary table is double right-clicked to return to the dataflow view. On level 0, a dataflow can only be connected from an external system\/bundled external system to the level-0 process bubble or from the level-0 process bubble to an external system\/bundled external system. Because external systems are not part of the current design, connections between external systems have no meaning to the current system.","The fifth and last component shown on the level-0 decomposition drawing is the Controlflow arrow. A controlflow arrow represents some signal and its direction to or from between some external system and the current system. In lower-level drawings, the signals can be emitted from process bubbles or other control bubbles as well as external systems. Control can be an invocation (invoking a display screen, external system, etc.), a message (the existence of some message type acting as a signal), or a hardware signal.","The control can flow either to or from an external system box. A bundled external system box combines all input controlflows from all constituent external system boxes into a single flow. Similarly, all output controlflows from all constituent external system boxes are combined into another single flow. These combined controlflows are called bundled controlflows and require names of their own.","Double left-clicking a controlflow allows the authorized member to name the flow simply by typing in the name. Double right-clicking a controlflow displays the contents of that flow. If the controlflow is a bundled controlflow then the revealed contents are the other controlflows. Double right-clicking the revealed controlflows returns the view to the controlflow bundle view.","If the double right-clicked controlflow is not a bundled controlflow then the Data Dictionary Table is displayed. To add a new unit field, the authorized member selects an open row in the Data Dictionary table and enters the new unit name. The flow type is automatically set to CONTROL, the flow name is automatically entered from the controlflow name and the unit type is automatically set to SIGNAL. When completed, the Data Dictionary table is double right-clicked to return to the controlflow view.",{"@attributes":{"id":"p-0155","num":"0170"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HLD_Data_Dictionary_Change_Request {","char message = 115,"]},{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"int number_decomp_bytes,"]},{"entry":[{},"int number_data_dictionary_bytes,"]},{"entry":[{},"char"]},{"entry":[{},"data_dictionary[number_data_dictionary_bytes],"]},{"entry":[{},"int number_signal_bytes,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Selection of the Submit button on the Decomposition Drawing screen shall cause the MPT Interface system to generate and send the HLD_Data_Change_Request message to the MPT Cluster system.",{"@attributes":{"id":"p-0157","num":"0172"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HLD_Data_Change_Request {","char message = 93,"]},{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"int number_decomp_bytes,"]},{"entry":[{},"char Decomp_analysis[number_decomp_bytes],"]},{"entry":[{},"int number_control_bytes,"]},{"entry":[{},"char Control_analysis[number_control_bytes],"]},{"entry":[{},"int number_data_dictionary_bytes,"]},{"entry":[{},"char"]},{"entry":[{},"data_dictionary[number_data_dictionary_bytes],"]},{"entry":[{},"int number_signal_bytes,"]},{"entry":[{},"char signal_dictionary"]},{"entry":[{},"[number_signal_dictionary_bytes]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Upon receipt of the HLD_Data_Change_Request message the MPT Cluster system shall determine that the requesting user is authorized and if so update the HLD database. The MPT Cluster system being able to update the HLD database shall cause it to send the return_status message containing a zero in the status field to the MPT Interface system. The MPT Cluster system not being able to update the HLD database shall cause it to send the return_status message containing a non-zero in the status field to the MPT Interface system.","In addition decomposition levels lower than level-0 have five additional objects: shared process, control, shared control, data store, and shared data store. Since there can be additional objects plus multiple process bubbles, additional rules are required for the controlflows and dataflows.\n\n","If a process bubble is double left-clicked then any components that make up that process are displayed. If there are no components then a central control bubble is displayed along with all of the external system boxes associated with the level of the process bubble that was double left-clicked. The dataflows and controlflows attached to the external systems and the bundled external systems are not attached to any bubble.","The level below level 0 is level 0.0 which is the first level that can contain all of the design objects. Before adding other design objects to the decomposition drawing region, the member must first enter the name and description of the Level 0.0 control bubble.","An authorized member can add or change the control bubble name by single left-clicking the control bubble then entering the new name. Single right-clicking a control bubble by an authorized member displays the control bubble description pop-up as illustrated in , which gathers the purpose of the control bubble. There are two parts to the control design element description, the purpose  and the keyword-list . The purpose is prose that provides a human readable description of current design element. The keyword-list is a list of descriptive words used to allow the current element to be accessed via a search engine.","Once the purpose has been written, the member selects the Submit button  to continue adding design elements. Writing down, in English, the control bubble's purpose allows the system to automatically generate the detailed design (pseudo code). The MPT pseudo code will be used by the code generator as comments to the code. Once the purpose has been entered and the Submit button  selected, the requirement traceability matrix is updated with the tuple corresponding to the described element being automatically placed in the detailed design column of the matrix. Other design elements can now be added. Each element is highlighted in red until it has a name and description and is connected to some other element (with the exception of the system-generated central bubble, which does not require connection).  shows the addition of process bubbles  to the decomposition drawing.","When adding a new process bubble , the tuple value is computed automatically by the system. This is performed as a function of the level and the order in which the bubble is placed. Once the name and description have been added to the process bubble, the authorized member can connect that bubble to other objects. All process bubbles must be connected to the central bubble, allowing the control bubble to invoke the process bubble, as an invocation is a control feature. The loose dataflows and controlflows from some external system can be connected to the process bubble. To allow a dataflow to only use part of its data in a bubble, the authorized member connects the proper dataflow to the proper bubble then adds the required dataflow information. In the case where the dataflow already exists and multiple bubbles are to be attached via that dataflow, the existing flow is converted, by the authorized member, to a bundled dataflow with the dataflow containing the correct data going to the proper bubble. Within a bundled dataflow, a component flow can be referenced by using dot notation. Dot notation gives the name of the bundled dataflow followed by a \u201cdot\u201d followed by the component dataflow item. Below shows dot notation used to reference example component dataflows:","The example above shows that within the AdminScreenData bundled dataflow, there is another dataflow, called the LoginScreenData dataflow, accessed. Data units can be directly referenced from a dataflow using parenthesis notation. Parenthesis notation encloses the name of the referenced data or control unit in parenthesis. Parenthesis notation can also be used with dot notation to reference items within a bundled dataflow. Multiple units can be referenced by separating the unit names by commas. Finally, variables can be C-language-style structures and arrays.","Controlflows behave differently from dataflows: There are no bundled controlflows, the signal that activates the control is placed on the flow itself, and there is no internal controlflow structure. Below shows the signal-naming conventions of a control flow:\n\n","Double left-clicking a process bubble gives access to lower design levels, as shown below The central control bubble of the lower level is automatically connected to the control bubble of the upper level. The authorized member can add, change, or delete the control flow information between the control bubbles of different levels. Changes made at one level will automatically be made at all other levels. All data stores that are defined at a higher level are shown as shared data stores in the lower level.","The data stores and shared data stores have data that is transmitted to\/from them via one or more process bubbles. Single left-clicking a data store or shared-data store allows an authorized member to provide a name to the store. Double left-clicking a data store allows the data store's data values to be displayed in the data store table:",{"@attributes":{"id":"p-0169","num":"0189"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"DATA STORE FORMAT"},{"entry":"Data Store: Example"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Data Unit Name","Input Dataflow Name","Output Dataflow Name"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"If the data units in a store do not have both a source (Input dataflow name) and a destination (output dataflow name) then an authorized member can add already existing dataflow names to the either the input or output dataflow name fields. If data is received from or sent to multiple data flows then the names of all dataflows are included in the Data store:",{"@attributes":{"id":"p-0171","num":"0191"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 4"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EXAMPLE MULTIPLE INPUT AND OUTPUT DATAFLOWS"},{"entry":"ATTACHED TO VARIABLES"},{"entry":"Data Store: Example"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Output Dataflow"]},{"entry":["Data Unit Name","Input Dataflow Name","Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["ExampleData1","InFlow1, Inflow2","OutFlow1"]},{"entry":["ExampleData2","Inflow1","OutFlow1, OutFlow2"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Any data unit that does not have at least one input dataflow and one output dataflow is considered a deficient data unit and is highlighted in red.","Additional dataflow names and unit names can be added by the authorized member selecting (single left-click) an empty row followed by the new data being placed in the empty fields. Selecting the Submit button causes the control to be returned to the decomposition drawing screen. Any Input dataflow or input data unit without a corresponding output dataflow and data unit is highlighted with red, as is the data store symbol on the decomposition drawing screen. An alternative to a dataflow name is the symbol \u201cN\/A\u201d. An \u201cN\/A\u201d placed in the input dataflow name allows the system to ignore the fact that the data unit was not placed in the store by the current system. An \u201cN\/A\u201d placed in the output dataflow name allows the system to ignore the fact that the data unit is not consumed by the current system.",{"@attributes":{"id":"p-0174","num":"0194"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 5"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EXAMPLE OF SELECTIVE USE OF DATAFLOWS WITH A DATA"},{"entry":"UNIT"},{"entry":"Data Store: Example"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Output Dataflow"]},{"entry":["Data Unit Name","Input Dataflow Name","Name"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["ExampleData1","N\/A","OutFlow1"]},{"entry":["ExampleData2","Inflow1","N\/A"]},{"entry":["ExampleData3","N\/A","N\/A"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Below are the messages displayed on the High Level Design Screen,","1. Privileges Successfully Submitted","2. Privilege Submission Unsuccessful","3. Data Dictionary Successfully Changed","4. Data Dictionary Not Changed Error","5. Data Store Successfully Changed","6. Data Store Not Changed Error","7. Design Element Purpose Successfully Changed","8. Design Element Purpose Not Changed Error","9. Data Decomposition Successfully Changed","10. Data Decomposition Not Changed Error","11. Different Machine Used","Decomposition Element Rules","There are seven types of decomposition elements: Signals, Stores, Process-Bubbles (PB), Control-Bubbles (CB), Terminators (T), Dataflows (DF), and Controlflows (CF).","There are three types of signals: Invoke, Release, and Standard.","Invoke Signal","An invoke signal causes the activation of a store, PB, or CB. Once a store is activated it can receive and send data. The invocation of a PB or CB causes control to shift to those elements.","Release Signal","A release signal causes a store to be deactivated and cannot be used on either a PB or a CB.","Standard Signal","A standard signal is any variable whose value is used to transfer control. For example a CB can use a standard signal to transfer control to either another CB or a PB.","A store holds data from input dataflows and releases data to output dataflows. A Store must be invoked prior to use and must be released after use.","Allowed Data Store Activities","The purpose of a data store is the storage and release of information to and from various process-bubbles. As such control is not associated with data stores with the exception of invocation and release.","1) Receive data from an input dataflow connected to a process-bubble","2) Send data on an output dataflow connected to a process-bubble","3) Receive an invoke signal from a controlflow connected to a control-bubble","4) Receive a release signal from a controlflow connected to a control-bubble","Disallowed Data Store Activities","Any activity that is not associated with the storage and release of information to process-bubbles or the invocation and release of the store itself is disallowed.","1) Receive standard signal","2) Send standard signal","3) Send an invoke signal","4) Send a release signal","5) Receive data from an input dataflow connected to control-bubble","6) Send data to an input dataflow connected to a control-bubble","7) Receive data from an input dataflow connected to a terminator","8) Send data to an output dataflow connected to a terminator","A process-bubble, adds data, changes data, deletes data, or moves data. There are several process-bubble behavior rules:","Allowed Process-Bubble Activities","Since a process-bubble manipulates data, all activities associated with sending and receiving data to various stores is allowed. Further, since a data element can also serve as a signal, activities associated with various signals are also allowed.","1) send data to a data store using output dataflow","2) receive data from a data store using input dataflow","3) Send standard signals to control-bubbles","4) Receive standard signals from control-bubbles","5) Send standard signals to terminators","6) Receive standard signals from terminators","7) Send data to terminators","8) Receive data from terminators","9) Invoke transient terminators","10) Release transient terminators","Disallowed Process-Bubble Activities","Direct process-bubble to process-bubble communication is not as this implies messaging between processes. Message between processes means that separate systems are in communication; thus, rather than process-bubble to process-bubble the proper organization would be process-bubble to terminator. By definition only transient terminators can be invoked and released thus invocation and release of standard terminators is disallowed.","1) Invoke process-bubble","2) Release process-bubble","3) Invoke control-bubble","4) Release control-bubble","5) Invoke data stores","6) Release data stores","7) Receive data from control-bubble","8) Send data to control-bubble","9) Receive data from process-bubble","10) Send data to process-bubble","11) Send control to a data store","12) Receive control from a data store","13) Invoke a standard terminator","14) Release a standard terminator","Process-Bubble Completion Rules","Process-bubbles can be decomposed into lower level design elements. Since the purpose of this design model is the complete separation of control from process, this implies that the lowest level process-bubble will only perform a single activity (multiple activities are composed using control). Any detectable multiple activities found for a process-bubble is an indication that the process-bubble can be further decomposed. The opposite of further decomposition indication is bubble incompleteness indication. Below are the rules that determine both conditions.","1) Is not fully decomposed if attached to multiple terminators","2) MUST receive at least one standard signal","3) Is not fully decomposed if receives more than one standard signal","4) Is not fully decomposed if sends more than one standard signal","5) MUST receive at least one input dataflow and send at least one output dataflow","6) All inputs and outputs of current process-bubble must appear in the parent level bubble, but can be part of a bundle in at the parent level.","A control-bubble controls the processing flow of a system. There are several control-bubble behavior rules:","Allowed Control-Bubble Activities","Control has three components, the transmission and receipt of standard signals, the transmission and receipt of invocation of data stores and transient terminators, and the transmission and receipt of data store and transient terminator releases.","1) Send standard signals to control-bubbles","2) Receive standard signals from control-bubbles","3) Send standard signals to process-bubbles","4) Receive standard signals from process-bubbles","5) Send standard signals to terminators","6) Receive standard signals from terminators","7) Receive invocation signals from terminators","8) Receive release signals from terminators","9) Invoke transient terminators","10) Release transient terminators","11) Invoke data stores","12) Release data stores","Disallowed Control-Bubble Activities","Because control-bubbles only transmit or receive signals, anything not having to do with the transmission or receipt of signals is disallowed.","1) send data to a data store using","2) receive data from a data store","3) Invoke process-bubble","4) Release process-bubble","5) Invoke control-bubble","6) Release control-bubble","7) Receive data from control-bubble","8) Send data to control-bubble","15) Receive data from process-bubble","16) Send data to process-bubble","There are two types of terminators, standard and transient. A standard terminator is equivalent to another, outside system that the current system interfaces with. A transient terminator is a terminator that can be invoked and released. Examples of transient terminators include: display screens or another process.","Allowed Standard Terminator Activities","A standard terminator is fixed in relationship to the current system. That is, these terminators are always available to send or receive data or signals from or to either process-bubbles or control-bubbles. Anything to do with moving data or signals between a standard terminator and process or control-bubbles is allowed","1) Send standard signals to process-bubbles","2) Receive standard signals from process-bubbles","3) Send standard signals to control-bubbles","4) Receive standard signals from control-bubbles","5) Send data to process-bubbles","6) Receive data from process-bubbles","7) Invoke control bubbles","8) Release control-bubbles","Disallowed Standard Terminator Activities","Anything that does not have to do with moving data or signals between a standard terminator and a process or control-bubble is disallowed.","1) Send standard signals to terminators","2) Receive standard signals from terminators","3) Send invoke signals to terminators","4) Receive invoke signals from terminators","5) Send release signal to terminators","6) Receive release signals from terminators","7) Send data to terminators","8) Receive data from terminators","9) Send data to data stores","10) Receive data from data stores","11) Send data to control-bubbles","12) Receive data from control-bubbles","13) Receive invoke signals from control-bubbles","14) Receive release signals from control-bubbles","15) Receive invoke signals from process-bubbles","16) Receive release signals from process-bubbles","17) Receive invoke signals from data stores","18) Send invoke signals to data stores","19) Receive release signals from data stores","20) Send release signals to data stores","Allowed Transient Terminator Activities","The difference between a transient and a standard terminator is the fact that a transient terminator must be invoked and released. Everything that is allowed for a standard terminator is also allowed for a transient terminator, as well as the invocation and release signals from process and control-bubbles.","1) Send standard signals to process-bubbles","2) Receive standard signals from process-bubbles","3) Send standard signals to control-bubbles","4) Receive standard signals from control-bubbles","5) Send data to process-bubbles","6) Receive data from process-bubbles","7) Invoke control bubbles","8) Release control-bubbles","9) Receive invoke signals from process-bubbles","10) Receive release signals from process-bubbles","11) Receive invoke signals from control-bubbles","12) Receive release signals from control-bubbles","Disallowed Transient Terminator Activities","With the exception of receiving invoke and release signals from process- or control-bubbles everything disallowed for standard terminators is also disallowed for transient terminators.","1) Send standard signals to terminators","2) Receive standard signals from terminators","3) Send invoke signals to terminators","4) Receive invoke signals from terminators","5) Send release signal to terminators","6) Receive release signals from terminators","7) Send data to terminators","8) Receive data from terminators","9) Send data to data stores","Detailed Design","Detailed design explores the system at the component level rather than at the system level as in the high-level design. There are two parts to detailed design: the pseudo-code and state machine as illustrated in . The process bubbles decompose into pseudo-code whereas the control bubbles decompose into state machines.","MPT pseudo-code does not give step-by-step instructions on how some function works; instead, it provides information on what some function does. This information is from the descriptions provided by the authorized members in the various bubbles. The MPT state machine is a type of Hierarchical State Machine (HSM) and represents all of the control found in the system. The information found in the state machine comes initially from the control bubbles of the high-level design. Selecting the Software Design button , followed by the Detailed Design button , and entering the Project Title  allows the system find the correct detailed design to display.","Selecting the Display Pseudo Code button activates the pseudo-code option. Selecting the Display State Machine button activates the state-machine option.","In order to allow \u201cwrite\u201d privileges for detailed design, an administrator-level member selects the Software Design button, Detail Design button, the project title (document name), the member name, the Display Pseudo Code and\/or Display State Machine buttons, and finally, the Privileges button. The selection of the Privileges button shall cause the MPT Interface system to generate and send the DD_Write_Privilege_Request message to the MPT Cluster system. This is similar to setting write privileges on other portions of the software design, so no separate figure will be provided.",{"@attributes":{"id":"p-0324","num":"0344"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DD_Write_Privilege_Request {","char message = 94,"]},{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"bool HD_write_privileges [2],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"char member_name[32]"]},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Upon receipt of the DD_Write_Privileges_Request message the MPT Cluster system shall attempt to update the detailed design privileges database table. If the MPT Cluster system is successful in updating the detailed design database privileges table then it shall send the return_status message containing a zero in its status field to the MPT Interface system. If the MPT Cluster system is un-successful in updating the detailed design privileges database table then it shall send the return_status message containing a non-zero in its status field to the MPT Interface system.","Once any member has selected the Display Pseudo Code button followed by the View Design button then the MPT Interface system shall generate and send the DD_Pseudo_Code_Request message to the MPT Cluster system.",{"@attributes":{"id":"p-0327","num":"0347"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DD_Document_Request { char message = 95,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Upon receive of the DD_Pseudo_Code_Request message the MPT Cluster system shall attempt to extract the Pseudo code database table data for the current document name. If the MPT Cluster system is successful accessing the Pseudo code database table then it shall first send the return_status message containing a zero in its status field and then generate and send the DD_Pseudo_Code_Return message to the MPT Interface system.",{"@attributes":{"id":"p-0329","num":"0349"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DD_Document_Return { char message = 96,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"char document_write_privilege [32],"]},{"entry":[{},"int number_pseudo_code_bytes,"]},{"entry":[{},"char pseudo_code[number_pseudo_code_bytes],"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"If the MPT Cluster system is unsuccessful accessing the Pseudo code database table then it shall send the return_status message containing a non-zero in its status field to the MPT Interface system.","Upon receipt of the DD_Pseudo_Code message the MPT Interface system shall display the Pseudo Code Display Pop-up screen, as illustrated in .","Single left-clicking the Select button makes all bubble names and tuples available to the member in a pull-down selection box. Once a bubble name has been selected (single left-clicking the desired item), the pseudo-code for that selection is displayed. An authorized member can change the value of the pseudo-code directly from the pop-up screen. If the pseudo-code for the selected bubble does not exist, then a blank area is displayed. Placing the curser at any of the display area boundaries causes the display to show more in that direction. The boundaries are the up, down, left, or right edges of the screen. Selecting the Next button displays the next bubble's pseudo-code whereas selecting the Previous button displays the previous bubble's pseudo-code. Selecting the Submit button removes the Pseudo Code Display pop-up screen and returns control to the Detailed Design screen.","Once an authorized member has selected the Display Pseudo Code button followed by the Write Design button then the MPT Interface system shall generate and send the DD_Pseudo_Code_Request message to the MPT Cluster system.",{"@attributes":{"id":"p-0334","num":"0354"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DD_Pseudo_Code_Request {","char message = 95,"]},{"entry":[{},{},"char mac_address [12],"]},{"entry":[{},{},"char organization_name[32],"]},{"entry":[{},{},"char user_name[32],"]},{"entry":[{},{},"char password[20],"]},{"entry":[{},{},"char document_name [32],"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Upon receive of the DD_Pseudo_Code_Request message the MPT Cluster system shall attempt to extract the Pseudo code database table data for the current document name. If the MPT Cluster system is successful accessing the Pseudo code database table then it shall first send the return_status message containing a zero in its status field and then generate and send the DD_Pseudo_Code_Return message to the MPT Interface system.",{"@attributes":{"id":"p-0336","num":"0356"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DD_Pseudo_Code_Return {","char message = 96,"]},{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"int number_pseudo_code_bytes,"]},{"entry":[{},"char pseudo_code[number_pseudo_code_bytes],"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"If the MPT Cluster system is unsuccessful accessing the Pseudo code database table then it shall send the return_status message containing a non-zero in its status field to the MPT Interface system.","Upon receipt of the DD_Pseudo_Code message the MPT Interface system shall display the Pseudo Code Display Pop-up screen, resembling that of , and similar to that seen when viewing pseudocode.","Single left-clicking the Select button makes all bubble names and tuples available to the authorized member in a pull-down selection box. Once a bubble name has been selected (single left-clicking the desired item), the pseudo-code for that selection is displayed. An authorized member can change the value of the pseudo-code directly from the pop-up screen. If the pseudo-code for the selected bubble does not exist, then a blank area is displayed. The price and performance goals selection buttons allow the authorized member to note whether or not price, performance or price\/performance is the goal of the current pseudo-code. Placing the curser at any of the display area boundaries causes the display to show more in that direction. The boundaries are the up, down, left, or right edges of the screen. Selecting the Next button displays the next bubble's pseudo-code whereas selecting the Previous button displays the previous bubble's pseudo-code. Selecting the Submit button shall cause the MPT Interface system to generate and send the DD_Pseudo_Code_Change_Request message to the MPT Cluster system.",{"@attributes":{"id":"p-0340","num":"0360"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DD_Pseudo_Code_Change_Request {","char message = 97,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"int performance_selection,"]},{"entry":[{},"int number_pseudo_code_bytes,"]},{"entry":[{},"char pseudo_code[number_pseudo_code_bytes],"]},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Upon receipt of the DD_Pseudo_Code_Change_Request message, the MPT Cluster system shall attempt to modify the pseudo code database table. If the MPT Cluster system is successful in modifying the pseudo code database table then it shall send the return_status message containing a zero in its status field to the MPT Interface system. If the MPT Cluster system un-successful in modifying the pseudo code database table then it shall send the return_status message containing a non-zero in its status field to the MPT Interface system. Selection of the Submit button on the Pseudo Code Display screen shall cause the Pseudo Code Write pop-up screen to be removed and returns control to the Detailed Design screen.","State Machine Display","A state machine display is illustrated in . Since MPT state machines are hierarchical, they are similar to the Harel state machines from which Universal Modeling Language (UML) state machines are derived. In the MPT state machine model, all super- and sub-states are derived from the natural function decomposition of a problem. The sub-most states corresponding to the lowest level control decomposition found in the high-level design. Since a state machine can only communicate from one state, such as state , to another, such as state , and that only through state transitions, such as transition . State: a state is any action taken by the system. An action in this case can be a transformation, display, movement or storage of data, making the definition of a state equivalent to the definition of a process. A state can also be an entire state machine. State transition: a state transition is any condition that forces a new state. Since a state is equivalent to a process, this definition becomes equivalent to the definition of control. With these two definitions along with the observation that a data store represents some either latent or actual transformation, movement or storage of data and, thus, can be considered a state, while the invocation or destruction of that store can be considered a transition, a decomposition drawing is now transformed into a state machine.","The lower-level controller shown above generates the state machine of .","Although a data store acts like a state in the state diagram, its tuple designation begins with an \u201cS\u201d for store, rather than with an \u201cF\u201d for function. If the store is a shared store (occurs between processes) then a Posix shared-memory key is returned as part of the state transition. Whether or not the store is shared, the address to the stored variables is returned as part of the state transition. The address values along with any optional shared key values form part of the state transition vector to various other states. Translating between control bubbles\/data-stores and a state machine is now straight-forward:\n\n","A process bubble can either decompose into a lower level decomposition diagram (containing both process and control bubbles) or pseudo-code. If the process bubble decomposes into a lower level decomposition diagram then the central control bubble is connected to the higher level decomposition diagram via the invocation signal that the higher level central bubble used to invoke its same level process bubble. This means that an application is comprised of multiple, connected state machines. Within this model multiple connect state machines are depicted as a state machine with some states high-lighted. The high-lighted states can be decomposed into an entire state machine.","State Machine View","Selecting the Display State Machines button followed by the View Design button causes the MPT Interface system to generate and send the DD_State_Request message to the MPT Cluster system.",{"@attributes":{"id":"p-0347","num":"0376"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DD_State_Request {","char message = 98,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"char mac_address [12],"]},{"entry":[{},{},"char organization_name[32],"]},{"entry":[{},{},"char user_name[32],"]},{"entry":[{},{},"char password[20],"]},{"entry":[{},{},"char document_name [32],"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"Upon receipt of the DD_State_Request message the MPT Cluster system shall attempt to access the State database table for the data of the selected document name. If the MPT Cluster system is successful in obtaining the State data then it shall first send the return_status message containing a zero in its status field, followed by the DD_State_Return message to the MPT Interface system.",{"@attributes":{"id":"p-0349","num":"0378"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DD_State_Return {","char message = 99,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"char mac_address [12],"]},{"entry":[{},{},"char organization_name[32],"]},{"entry":[{},{},"char user_name[32],"]},{"entry":[{},{},"char password[20],"]},{"entry":[{},{},"char document_name [32],"]},{"entry":[{},{},"int number_state_bytes,"]},{"entry":[{},{},"char state[number_state_bytes],"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"If the MPT Cluster system is un-successful in obtaining the State data then it shall send the return_status message containing a non-zero value in its status field to the MPT Interface system.","Upon receipt of the DD_State_Return message the MPT Interface system shall display the State Machine Display pop-up screen, which is essentially the same as the state machine write-enabled pop-up screen.","Placing the curser at any of the display area boundaries causes the display to show more in that direction. The boundaries are the up, down, left, or right edges of the screen. Selecting the Next button causes the next state machine to be displayed. Selecting the Previous button causes the prior state machine to be displayed. A state that is high-lighted (a different color) can be selected by double left clicking that state. Selecting a high-lighted state shall cause another Write State Machine pop-up (containing the selected state machine) to appear. Selecting the return button on the State Machine pop-up shall cause control to be returned to the calling screen.","State Machine Write","Selecting the Display State Machines button followed by the Write Design button causes the MPT Interface system to generate and send the DD_State_Request message to the MPT Cluster system.","Upon receipt of the DD_State_Request message the MPT Cluster system shall attempt to access the State database table for the data of the selected document name. If the MPT Cluster system is successful in obtaining the State data then it shall first send the return_status message containing a zero in its status field, followed by the DD_State_Return message to the MPT Interface system.","If the MPT Cluster system is un-successful in obtaining the State data then it shall send the return_status message containing a non-zero value in its status field to the MPT Interface system.","Upon receipt of the DD_State_Return message the MPT Interface system shall display the State Machine Write pop-up screen. An authorized member selecting a state with a single left-click can change the name or tuple number of the state. Changing the name or tuple number of a state changes the name and tuple value of the associated bubbles. Selection of the Submit button on the State Machine Write pop-up screen shall cause the MPT Interface system to generate and send the DD_State_Change_Request message to the MPT Cluster system.",{"@attributes":{"id":"p-0357","num":"0386"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DD_State_Change_Request {","char message = 100,"]},{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"int number_state_bytes,"]},{"entry":[{},"char state[number_state_bytes],"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Upon receipt of the DD_State_Change_Request message the MPT Cluster system shall attempt to access and modify the state database table. If the MPT Cluster system is successful modifying the state database table it shall send the return_status massage containing a zero in its status field to the MPT Interface system. If the MPT Cluster system is un-successful modifying the state database table it shall send the return_status message containing a non-zero to the MPT Interface system.","Below are the messages displayed on the Detail Design Screen,","Privileges Successfully Submitted","Privilege Submission Unsuccessful","Pseudo Code Successfully Changed","Pseudo Code Not Changed Error","State Machine Successfully Changed","State Machine Not Changed Error","Different Machine Used","Test Plans and Procedures","The originating data for any system comes from external systems. Allowing an authorized member to enter some set of originating data while also insuring that the expected output at each portion of the system is correctly produced allows the system to generate a full-system test procedure. In addition, using the purpose from the bubble charts and the connection of those bubbles to requirements allows the system to create a test plan. To access the test plans and procedures, the member selects the Software Design button  followed by the Test Plans button  as shown on . The Project Title field is then selected, giving access to either the test plans or the test procedures of the project.","Enabling Access","In order to allow write privileges for test plans and procedures, an administrator-level member selects the Software Design button, the Test Plans button followed by the selection of the Project title, the selection of the member name, and finally, the Privileges button. The selection of the privileges button shall cause the MPT Interface system to generate and send the Test_Write_Privilege_Request message to the MPT Cluster system. If the member has already been selected then that member shall be deselected.",{"@attributes":{"id":"p-0368","num":"0397"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Test_Write_Privilege_Request {","char message = 101,"]},{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"bool test_write_privileges,"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"char member_name[32]"]},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Upon receipt of the Test_Write_Privilege_Request message the MPT Cluster system shall attempt to modify the test privilege database table. If the MPT Cluster system is able to modify the test privilege database table then it shall send the return_status message containing a zero in the status field to the MPT Interface system. If the MPT Cluster system is unable to modify the test privilege database table then it shall send the return_status message containing a non-zero in the status field to the MPT Interface system.","Test Plan Display","Selecting the Display Test Plans button shall cause the MPT Interface system to generate and send the Test_Data_Request message to the MPT Cluster system.",{"@attributes":{"id":"p-0371","num":"0400"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Test_Data_Request {","char message = 102,"]},{"entry":[{},{},"char mac_address [12],"]},{"entry":[{},{},"char organization_name[32],"]},{"entry":[{},{},"char user_name[32],"]},{"entry":[{},{},"char password[20],"]},{"entry":[{},{},"char document_name [32]"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Receipt of the Test_Data_Request message, the MPT Cluster system shall attempt to access the test data database table. If the MPT Cluster system is able to access the test data database table it shall first send the return_status message containing a zero in the status field followed by sending the Test_Data_Response data to the MPT Interface system.",{"@attributes":{"id":"p-0373","num":"0402"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Test_Data_Return {","char message = 103,"]},{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"char document_write_privilege [32],"]},{"entry":[{},"int number_test_data_bytes,"]},{"entry":[{},"char test_data[number_test_data_bytes]"]},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"If the MPT Cluster system is unable to access the test data database table then it shall send the return_status message containing a non-zero in its status field to the MPT Interface system.","Upon receipt of the Test_Data_Response message by the MPT Interface system, the MPT Interface system shall display the Test Plan pop-up screen .","When another page of the test plans is required, it can be displayed either by directly entering the test name and pressing the Previous or Next buttons, or by selecting a test name from the list of test names.","Selecting the Write Test Plans button shall cause the MPT Interface system to generate and send the Test_Data_Request message to the MPT Cluster system.",{"@attributes":{"id":"p-0378","num":"0407"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Test_Data_Request {","char message = 102,"]},{"entry":[{},{},"char mac_address [12],"]},{"entry":[{},{},"char organization_name[32],"]},{"entry":[{},{},"char user_name[32],"]},{"entry":[{},{},"char password[20],"]},{"entry":[{},{},"char document_name [32]"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Receipt of the Test_Data_Request message, the MPT Cluster system shall attempt to access the test data database table. If the MPT Cluster system is able to access the test data database table it shall first send the return_status message containing a zero in the status field followed by sending the Test_Data_Response data to the MPT Interface system.",{"@attributes":{"id":"p-0380","num":"0409"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Test_Data_Return {","char message = 103,"]},{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"int number_test_data_bytes,"]},{"entry":[{},"char test_data[number_test_data_bytes]"]},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"If the MPT Cluster system is unable to access the test data database table then it shall send the return_status message containing a non-zero in its status field to the MPT Interface system.","Upon receipt of the Test_Data_Response message by the MPT Interface system, the MPT Interface system shall display the Test Plan Write pop-up screen. The authorized member can change the written test plan and requirements fields. Selecting the Submit button on the Test Plan Write screen shall cause the MPT Interface screen to generate and send the Test_Change_Request message to the MPT Cluster system.",{"@attributes":{"id":"p-0383","num":"0412"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Test_Plan_Change_Request {","char message = 104,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"int number_test_data_bytes,"]},{"entry":[{},"char test_data[number_test_data_bytes]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Upon receipt of the Test_Change_Request message the MPT Cluster system shall attempt to modify the test data database table. If the MPT Cluster system is able to modify the test data database table then it shall send the return_status message containing a zero to the MPT Interface system. If the MPT Cluster system unable to modify the test data database table then it shall send the return_status message containing a non-zero to the MPT Interface system. The test plans write window is essentially the same as the test plans display window illustrated in .","When another page of the test plans is required, it can be displayed either by directly entering the test name and pressing the Previous or Next buttons, or by selecting a test name from the list of test names. An authorized member can change the value of the test plan or the list of requirements. The list of requirements associates the test plan with the requirement traceability matrix. Changing the list of requirements causes the requirement traceability association to change.","Test Procedures","As has been shown in the MPT Malicious Software Detector document, it is possible to test a kernel by inserting the proper input data and the expected output data at the appropriate locations. This can be accomplished by the authorized member selecting the appropriate input dataflow for a kernel and filling in the data that is associated with the input-data item of that flow. This requires the data dictionary to be modified by adding the unit value column into the following:",{"@attributes":{"id":"p-0387","num":"0416"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"5","align":"center","rowsep":"1"}}]},{"entry":[{},"Flow Type","Flow",{},{},{}]},{"entry":[{},"(Data\/Control)","Name","Unit Name","Unit Type","Unit Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"5","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"5","align":"center","rowsep":"1"}}]}}}}}},"Table 6 Unit Value Column Added to Data Dictionary","Adding the Unit Value column allows the authorized member to add both the appropriate input data values and the appropriate expected output values. When the state machine is accessed, the input value is automatically placed in the appropriate field, and at state transition, the appropriate output values are checked. This is performed in the Collaborative Kernel level debugging section of the MPT Malicious Software Detector. The list of inputs and expected outputs per kernel can be displayed as a test procedure by selecting the Display Test Procedures Button, causing the Test Procedure Display pop-up screen to be displayed, .","Selecting the correct procedure is accomplished by either entering the test name or selecting the test name from the pull-down list and selecting the Previous or Next buttons. Selecting the Submit button causes the Test Procedure pop-up screen to be removed. Both the Test Plan and the Test Procedure pop-up screens can be simultaneously displayed. The test name associates the test procedure with the test plan which is associated with in the requirements traceability matrix.",{"@attributes":{"id":"p-0391","num":"0420"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Test_Procedure_Change_Request {","char message = 107,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"char mac_address [12],"]},{"entry":[{},"char organization_name[32],"]},{"entry":[{},"char user_name[32],"]},{"entry":[{},"char password[20],"]},{"entry":[{},"char document_name [32],"]},{"entry":[{},"int number_test_data_bytes,"]},{"entry":[{},"char test_data[number_test_data_bytes]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Below are the messages displayed on the Test Plan\/Procedure Screen,","1. Privileges Successfully Submitted","2. Privilege Submission Unsuccessful","3. Test Plan Successfully Changed","4. Test Plan Not Changed Error","5. Test Procedure Successfully Changed","6. Test Procedure Not Changed Error","7. Different Machine Used","Requirements Traceability Matrix","When all columns for all requirements are in filled and no further requirements are added, the application is complete.","MPT Algorithm as an Interpreted State Machine","The MPT Interface document presents the idea of graphically linking together multiple MPT kernels to form an MPT algorithm. Prewritten MPT kernels may be provided for many common functions, particularly including common functions relating to matrix operations and transforms such as the Fourier transform.","It should be noted that there can be three types of MPT Kernels, as shown on ","Control, Process, and Mixed. Pure Control Kernels contain the following statement types: branching, looping, and subroutine calls. Pure Process Kernels contain perform the following duties without branches, loops, or subroutine calls: display data, move data, store data, and transform data. Mixed Kernels may perform the duties of a Process Kernel but also have control statements. Code that has not been designed is typically made up of primarily Mixed Kernels. Code that has been completely designed contains only pure control and pure process kernels. Therefore, a metric which defines the percent of the code completed can now be defined.\n\nMPT Design Metric (MDM): 100*(()\/())\n\n","The range of the MDM is 0 to 100 with 100 being completely designed code and 0 being completely ad-hoc code. If code has been designed using the MPT Software Design tool then MDM from this code will be at 100. There are two ways to pass information to a kernel, by reference or by value. If the value of the information is sent directly to the kernel then the standard kernel-to-kernel model is appropriate. If a pointer to some shared-memory location is sent to the kernel then the standard model is changed to reflect that difference.","The top line directly connecting Kernel-5 to Kernel-6 contains an address reference to Shared Mem1. The value of some variable in Shared Mem1 plus the Posix shared-memory key (as a variable) is now shared between Kernel-5 and Kernel-6.","Automatic Control Code Generation","It is now possible to construct a state transition table from the MPT Design model. The state-transition table is a form of interpreted code in which all control is accomplished. This table contains only five columns: state index, call state process\/NOP, condition, next state index condition true, and next state index condition false. Below shows the format of the table:",{"@attributes":{"id":"p-0408","num":"0441"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 7"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"STATE TRANSITION TABLE"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["State","Call Process ","Condition","Next State Index","Next State"]},{"entry":["Index","or NOP",{},"(Condition True)","Index"]},{"entry":[{},{},{},{},"(Condition"]},{"entry":[{},{},{},{},"False)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"The State Index field is the row index value for the state transition table and starts with zero. This index allows a state to be accessed. The Call Process or NOP field contains the name and parameters of a .DLL or .SO code (function calls) that is to be run or the symbol \u201cNOP\u201d. NOP means that no function is called, instead the condition is evaluated and the next state indexes accessed. All .DLL\/.SO function calls contain the same list of parameters: key, starting address, size, and structure-type. The key is the POSIX key value that allows virtual shared memory to be differentiated. The starting address is the first location of virtual shared memory address, allowing input and output variables to be passed between .DLL\/.SOs without passing information by value (eliminating memory-to-memory copies). The size field contains the number of bytes of shared memory accessible by the .DLL\/.SO. Finally, the Struct Type field is the name of the structure used to interpret the shared memory.","When the condition of the current row is met, the state index designated by the next state index (Condition True) is used to access the next state (state transition table row). If the condition of the current row is not met then the state index designed by the next state index (Condition False) is used to access the next state. If the next state is represented by the end-of-application symbol (\u2212) then the application is considered complete and the job is complete.","The Condition field uses the following symbols to create a condition: equal \u201c=\u201d, not equal \u201c\u02dc=\u201d, greater than \u201c>\u201d, less than \u201c<\u201d, less than or equal to \u201c<=\u201d or greater than or equal to \u201c>=\u201d symbols plus the group start \u201c(\u201cand group end\u201d)\u201d symbols. Groups can be linked with the AND (&) or OR (^) symbols. Below are some condition examples:",{"@attributes":{"id":"p-0412","num":"0445"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Example Type","Condition Example"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"=","A = 0, A = B"]},{"entry":[{},"~=","A ~= 0, A ~= B, B ~= A "]},{"entry":[{},">","A > 0, A > B"]},{"entry":[{},"<","A < 0, A < B"]},{"entry":[{},"<=","A <= 0, A <= B "]},{"entry":[{},">=","A >= 0, A >= B"]},{"entry":[{},"( )","(A = 0), (A = B), (A ~= 0), (A ~= B), (B ~= A), "]},{"entry":[{},{},"(A > 0), (A > B), (A < 0), (A < B), (A <= 0), "]},{"entry":[{},{},"(A <= B), (A >= 0), (A >= B)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Below shows an example of a state transition table",{"@attributes":{"id":"p-0414","num":"0447"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":{"entry":"TABLE 9"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EXAMPLE STATE TRANSITION TABLE"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},{},"Next State"]},{"entry":[{},{},{},{},"Index"]},{"entry":[{},"Call Process or",{},"Next State Index","(Condition"]},{"entry":["State Index","NOP","Condition","(Condition True)","False)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["0","Kernel_5(key,","Structure_type.flag = 0","\u20032","\u20031"]},{"entry":[{},"start_address,",{},{},{}]},{"entry":[{},"size,",{},{},{}]},{"entry":[{},"structure_type)",{},{},{}]},{"entry":["1","NOP","Structure_type.flag > 0","\u20033","\u20032"]},{"entry":["2","Kernel_6(key,","(Structure_type.message =","285","285"]},{"entry":[{},"start_address,","93) & (Structure_type.flag =",{},{}]},{"entry":[{},"size,","0)",{},{}]},{"entry":[{},"structure_type)",{},{},{}]},{"entry":["3","Kernel_7 key,","Structure_type.message > 40","\u20032","\u2014"]},{"entry":[{},"start_address,",{},{},{}]},{"entry":[{},"size,",{},{},{}]},{"entry":[{},"structure_type)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"Since the State Transition Table represents all possible states and the conditions under which those states are accessed, this table can be thought of as the code that calls all of the functions used by an algorithm, and thus, represents unique form of automatic programming. The two next state indexes.","Generation of Data Stores","While creating the function decomposition of an application, the various data storage areas are also defined. By taking all of the input and output data definitions for all dataflows to every data storage location, combined with the data store name to automatically define all data stores.","Automatic Functionality Selection","The definition of each of the process bubbles from the design includes: Object price and performance goals (created in pseudo-code write screen), Input\/output dataflow definition (process bubble functional design), keyword list (from process bubble description), test input dataset definition (from test procedures), and expected output dataset definition (from procedures). This provides the information required to select functional components from the current or other organizations. The following steps are needed to automatically select the required functionality.\n\n","The selected kernel or algorithm shall be inserted as the \u201cstate\u201d in the low-level state-machine and as the kernel or algorithm on the Interface Main screen.","Lego-Block Process Code Selection","Since each state represents both an MPT Control Kernel plus one or more MPT Process Kernels, and since the Control Kernels are not written but the Process Kernels must be written, a way to differentiate completed kernels, auto-generated kernels, and incomplete kernels (stubs) is required. As has been discussed in the MPT Interface document, kernels can be dragged and dropped onto the Interface Main screen. Further, it has been shown in this document that a description of an MPT kernel can originate during a design session. Finally, this document has also shown that control kernels are automatically generated. It now becomes possible to have a placeholder kernel automatically inserted into the MPT Interface Main screen where either an already existing kernel can replace it or the code for that kernel can be written. The system-generated kernels and data stores (from the MPT Design Tools) are shown in purple, any completed process kernel is shown in green (from automatic functionality selection or previously drag and dropped functionality), and incomplete kernels are shown in gray. This is shown below:","Selecting the placeholder kernel then the appropriate organization, category, kernel, and the Add Kernel button causes the placeholder kernel to be replaced with the selected kernel as shown below:","Although this is not formally an instance of automatic coding, the effect of automatic state machine generation, automatic shared memory generation, and drag and drop selection of already constructed code and having that code correctly placed in the structure of the application is analogous in that code does not need to be written by the developer. In the above example, approximately three of four of the normally coded objects were automatically generated and not written by the developer.","Once code for the massively parallel computer system is generated, the development system may, under direction of a developer, submit all, or portions with appropriate test shells and test kernels, of the developed code, along with appropriate test data, through an access node  to a massively parallel computer system  for testing, or may submit the code for execution on real problems. The development system may also receive results of such execution from the access node to permit developers to determine if the code executed as intended.","The development system herein described has many features that can be combined in various combinations, as described below.","In a system designated A for development of software for a targeted parallel computing system, the system has at least one workstation, and at least one development machine, the development machine maintaining a program development database in communication with the workstation and a memory containing code for developing software for the parallel computing system; wherein the database further has for at least one program for the parallel computing system: program requirements, program design, program detailed code, test definitions, a traceability matrix, and MPT kernels; wherein the database automatically links and coordinates the program requirements, program design, program detailed code, test definitions, a traceability matrix, and MPT kernels, and herein the detailed code and MPT kernels form portions of the software for the targeted parallel computing system.","In a system designated B including the system designated A also has a parallel computing system in communication with the development machine, the parallel computing system being capable of executing software developed by the system.","A system designated C, including the system designated B wherein the parallel computing system is a howard cascade.","A system designated D including the system designated A, B, or C wherein the code for developing software on the development machine comprises code for coordinating decomposition, state-machines, processing process-bubble keyword list, maintaining process-bubble descriptions, maintaining and revising MPT Kernels in the database, and for maintaining MPT Algorithms associated with the MPT kernels.","A system designated E including the system designated A, B, C, or D wherein the code for developing software compels decomposition of a software problem until there is complete separation between process and control.","A system designated F including the system designated E wherein the code for developing software automatically generates a state-machine from the decomposition, using process bubbles as states and control flows as state-transitions.","The system designated G including the system designated F or E, wherein the code for developing software automatically generates an MPT Algorithm directly from the decomposition whereby there is complete separation between process and control.","A system designated H including the system designated E, F, or G wherein the code for developing software includes code for automatically generates an MPT Algorithm directly from the decomposition whereby there is complete separation between process and control.","A system designated I including the system designated E, F, G or H wherein the code for developing software includes code for automatically creating MPT kernels from the lowest level decomposition process bubbles.","A system designated J including the system designated E, F, G, H, or I wherein the code for developing software includes code for automatically defining parameters from input and output dataflows of dataflows for MPT Algorithms.","A system designated K including the system designated E, F, G, H, I, or J wherein the code for developing software includes code for automatically defining parameters from input and output dataflows attached to process-bubbles for MPT Kernels.","A system designated L including the system designated E, F, G, H, I, J or K wherein the code for developing software includes code for using the process-bubble keyword list, parameters, test values and expected results to automatically locate already existing MPT Algorithms and MPT Kernels for use as the Algorithms and Kernels within at least one newly defined MPT Algorithm.","A system designated M including the system designated E, F, G, H, I, J or K wherein the code for developing software includes code for using the process-bubble description, generated parameters, and generated state transitions to create a stub of a program element selected from the group consisting of an MPT Algorithm and an MPT Kernel.","Changes may be made in the above methods and systems without departing from the scope hereof. It should thus be noted that the matter contained in the above description or shown in the accompanying drawings should be interpreted as illustrative and not in a limiting sense. The following claims are intended to cover all generic and specific features described herein, as well as all statements of the scope of the present method and system, which, as a matter of language, might be said to fall therebetween."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 25"}]},"DETDESC":[{},{}]}
