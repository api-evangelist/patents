---
title: IT discovery of virtualized environments by scanning VM files and images
abstract: Information-technology discovery techniques are performed directly on virtual machine files. A discovery system sends directives to a remote host and receives data extracted from the virtual machine files as a result of the remote host responding to the directive. The discovery system extracts discovery information from the received data and sends the discovery information to a discovery repository. The discovery information may include static and dynamic virtualized hardware as well as executing software applications and services within a virtual machine and across multiple virtual machines.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08849947&OS=08849947&RS=08849947
owner: EMC Corporation
number: 08849947
owner_city: Hopkinton
owner_country: US
publication_date: 20091216
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE DISCLOSURE","BACKGROUND","DETAILED DESCRIPTION"],"p":["The present disclosure is generally related to information-technology discovery of virtualized environments.","Information-technology (IT) discovery techniques include finding, identifying, documenting, and observing IT resources and the relations between them. IT resources may include computer-related hardware and software as well as information associated with the computer-related hardware and software. IT discovery can be used as part of or in conjunction with other techniques such as Resource Management, Content Management, Compliance Management, and Configuration Management.","Conventional information-technology (IT) discovery of a target virtual machine (VM) and its content requires communication with the target VM. Conventional discovery techniques may require communication with a target VM that is a live\/active VM in order to perform discovery techniques such as interacting with the operating system, scanning ports, exploring file systems and memory space, and other discovery techniques, the performance of which allow discovery of configuration items including IT resources such as applications and services running on the target VM. A live VM or an active VM conventionally is one that has been booted up and is running.","Typically, a conventional IT discovery system must provide access credentials to the active target VM in order to perform discovery techniques. The access credentials are typically needed to access the operating system or other services that are used by the conventional IT discovery system. Conventional IT discovery systems can be required to provide different access credentials to each target VM on which discovery is to be performed. This may require assigning access credentials to management entities at the target machine level.","Additionally, performing conventional IT discovery techniques on an active VM may require the active VM to apply resources to perform the discovery techniques. While those resources are being applied to performing discovery techniques, the resources are not being applied to other tasks required of the active VM, making the active VM less efficient in performing the other tasks.","Embodiments disclosed herein deviate from and improve upon conventional IT discovery techniques. Embodiments disclosed herein allow a discovery system to perform IT discovery on VM files instead of being performed on an active VM corresponding to the VM files. VM files as herein referred to include files representing the state of a computing device. Examples of computing devices include virtualized servers, virtualized networking devices, and virtualized storage devices. A virtualized computing device may be referred to herein as a virtual machine. In particular embodiments, VM files as herein referred to include the files comprising a virtual machine image. The virtual machine image may comprise the data required to operate a virtual machine. The virtual machine image may comprise the system files, data files, and file-system information relating to the virtual machine and the operating system within the virtual machine. The virtual machine image may be represented to the host operating system by one or more host files including, for example, virtual hard disk files and configuration files. VM files as herein referred to may include these host files.","The present disclosure provides methods usable for performing IT discovery of virtual machines. In a first particular embodiment, a method is performed by a discovery system. The discovery system establishes a connection to a particular remote host. The particular remote host includes virtual machine files of a particular virtual machine. The discovery system also sends at least one particular directive to the particular remote host via the connection. The discovery system receives data from the particular remote host as a result of a response by the particular remote host to the at least one directive. The received data includes information extracted from at least one of the virtual machine files. The discovery system extracts discovery information from the received data. The discovery information includes configuration information related to the particular virtual machine. The discovery system converts the discovery information into a particular format and sends the converted discovery information to a discovery repository.","The present disclosure provides computer-readable storage media including executable instructions that, when executed by a system, enable the system to perform methods usable for performing IT discovery of virtual machines. In a second particular embodiment, the performed method comprises the method described above with respect to the first particular embodiment.","The present disclosure provides systems usable for performing IT discovery of virtual machines. In a third particular embodiment, a system comprises a processor and a memory component. The memory component is accessible to the processor and the memory component includes executable instructions that, when executed, enable the system to perform the method described above with respect to the first particular embodiment.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["100","102","100","130","140","122","124","150","1","150","2","150","3","150","150","160","162","164"]},"The discovery system  includes a processor , an I\/O interface  accessible to the processor, and a memory component  accessible to the processor . The I\/O interface  is configured to enable the discovery system  to communicate with other systems either via the network  or another communication link. The network  may be a wide-area network (WAN) such as the Internet, for example. In particular embodiments, the discovery system  may communicate with one or more remote hosts  via the network  as shown in . In particular embodiments, the discovery system  may communicate with the directory , the fingerprint repository , and the aggregator  via the network .","The memory component  may comprise computer-readable storage media such as random access memory (RAM), secondary storage such as a hard disk drive, removable computer-readable media, or a combination thereof. The memory component  includes data and executable instructions that, when executed by the processor , enable the discovery system  to perform methods disclosed herein. The data and executable instructions may be included in one or more of a handler , fingerprints , a common model , application-specific modules , and an authentication module .","Each fingerprint  contains information useable for discovering information on a target remote host . For example, a fingerprint  may include a list of elements targeted to be retrieved from a remote host . In particular embodiments, fingerprints  include one or more executable commands that, when sent to and executed on a remote host , outputs information extracted from at least one VM file on the remote host . A fingerprint  may also include executable instructions that, when executed, extract discovery information from the output. In particular embodiments, the discovery information extracted from the output includes configuration information related to a particular virtual machine. In particular embodiments, the fingerprints  are files written in a computer programming language. The computer programming language may be Java, C++, or a scripting language such as Python, Ruby, or Groovy. The discovery system  may store fingerprints  into the fingerprint repository  and retrieve fingerprints  from the fingerprint repository .","In particular embodiments, fingerprints  include information to be provided as input to an application programming interface (API) at a remote host. When the information is input to an API at the remote host, the API may extract information from one or more VM files and return the extracted information to the discovery system .","The common model  provides a particular format into which discovery information may be converted. The conversion may be done for purposes of normalization and drive consistency. In particular embodiments, the common model  includes objects that can be instantiated to represent discovery information retrieved from VM files of a particular VM.","In particular embodiments, each of the application-specific modules  includes computer-executable instructions for performing a set of specific operations. For example, the application-specific modules  may include a window registry module (not shown) that would function to perform operations on a registry portion of a VM file that includes a Windows operating system. In particular embodiments, the window registry module searches for one or more registry names and values. The window registry module may also perform operations including modifying the registry content, adding a new registry, and extracting content.","By way of another example, the application-specific modules  may include an Apache web server module for handling Apache configuration files. In particular embodiments, the Apache web server module includes information related to the location of related files for Apache, can find and read configuration files, can make modifications, can set the start\/stop status of Apache, and can add or modify a user web account. Other example application-specific modules  may function to interaction with specific database management systems such as from Oracle, for example. Such a module may be able to locate and work on database files, configuration files, user account information, storage settings, and patches.","In preferred embodiments, the application-specific modules  are written as plug-and-pay modules that can be added to or removed from the discovery system  without having to modify any other part of the discovery system . In particular embodiments each module of the application-specific modules  provides to the discovery system a list of functions or services that the module can support and the parameters that the functions and services need. The list of functions, services, and parameters can be placed in a registry (not shown) within the discovery system  that is available to users of the discovery system . In this manner, a user of the discovery system  may readily understand the extent of the functionality of the discovery system .","The authentication module  may include access credentials needed to access VM files. In particular embodiments, the authentication module  is accessed by the application-specific modules  in order to access VM files. In particular embodiments, the directory  includes authentication content needed for accessing VM files. The authentication module  may obtain access credentials from the directory . The authentication module  may also obtain access credentials from discovery requests received at the discovery system  and from external sources using lightweight directory access protocol (LDAP), for example. In particular embodiments, the access credentials received using LDAP include credentials to access a remote host , any access credentials needed to access VM files at the remote host , and access credentials to a VM host environment needed to mount files on the remote host .","A remote host  may host VM files for many different virtual machines. In particular embodiments, the authentication module  include access credentials to the remote host  that provides access to all the VM files on the remote host . In this manner, the discovery system  does not need to maintain access credentials for each virtual machine.","In particular embodiments, the handler  includes executable instructions that, when executed, perform as the control logic for the discovery system . For example, the handler  may invoke one or more fingerprints  when needed and may invoke one or more application-specific modules  when needed.","The system  includes remote hosts  accessible to the discovery system . Each remote host  may include VM files defining one or more VMs. For example, VM-1 files - defines VM-1, VM files - defines VM-2, VM files - defines VM-3, and VM files - defines VM-4. A remote host  may provide an execution environment for a virtual machine. That is, a remote host  may have one or more running virtual machines on the remote host . However, it is not necessary for the remote host  to provide an execution environment for any virtual machine. In particular embodiments, the remote host  includes VM files corresponding to many different virtual machines, but does not provide an execution environment for any of the virtual machines. The remote host  may be dedicated to providing the discovery system  with access to the VM files on the remote host .","The system  includes an aggregator . The aggregator  includes an I\/O interface , allowing the aggregator  to communicate with other systems. The aggregator also includes a collector , a consolidator , and a discovery repository . The aggregator  is accessible to a content management system , a resource management system , and a visualization\/reporting system .","During operation, the discovery system  may receive a request  from the aggregator . The request  may include a query. Examples of queries include status queries about the status of one or more virtual machines on one or more remote hosts . Examples of queries also include queries about whether any VMs exist on a particular remote host . The request  may include a discovery request. Examples of discovery requests include requests to collect information, such as configuration information, related to one or more VMs on one or more remote hosts . The request  may include a remediate\/patch request. Examples of remediate\/patch requests include requests to modify certain information or aspects related to one or more VMs on one or more remote hosts .","In particular embodiments, the handler  accesses the fingerprints  in response to the discovery system's  receiving of the request . If necessary, a request  may be sent to the fingerprint repository  and the discovery system  may receive one or more fingerprints  from the fingerprint repository . The handler  may receive from the fingerprints  information needed by the handler to respond to the request . For example, the request  may include a request for discovery information related to software on one or more VMs, where the software is a product of a particular vendor (e.g., Oracle). In particular embodiments, the handler  accesses the fingerprints  and receives information (e.g., specifications) related to software products from the particular vendor. For example, the handler  may receive specifications from the fingerprints  identifying what discovery information to look for and how to find the discovery information. For example, the fingerprints  may identify what configuration files (e.g., sql.ora, init.ora, etc.) to interrogate, what registry (if Windows is the operating system) to check for, and the directory where user data is stored.","In particular embodiments, the handler  establishes a connection to a particular remote host . The particular remote host  includes VM files of one or more virtual machines. The one or more virtual machines may be active (i.e., running) on the remote host  or may be inactive. In particular embodiments, the remote host  is a proxy host that includes VM files, but is not a production host on which the virtual machine corresponding to the VM files would actually run.","In particular embodiments, the handler sends one or more requests  to the directory  for information needed to respond to the request  from the aggregator . The handler may receive information  from the directory  in response to sending the one or more requests . The information requested from the directory  may include, for example, the location (i.e., which remote host ) of one or more virtual machines. The information requested from the directory  may include, for example, access information (e.g., IP address) of one or more remote hosts .","In particular embodiments, the handler invokes an application-specific module. The application-specific module may send at least one directive  to the particular remote host  via the established connection. The directive may be sent in the form of input to an API at the remote host . Alternately, the directive  may be sent in the form of one or more executable commands to be executed at the remote host . For example, the handler  may establish a connection to remote host 1 - via the network . The application-specific module may send at least one directive  to remote host 1 - via the established connection.","In particular embodiments, the directive  includes at least one executable command and the remote host  executes the at least one executable command. The output of each executed command may include information extracted from the VM files of a particular virtual machine on the remote host . The remote host  may send data  including output from one or more executed commands to the discovery system  via the established connection. For example, an application-specific module may send an executable command to remote host 1 - and remote host 1 - may execute the executable command to extract information from VM-2 files -. The extracted information may be sent in data  to the discovery system .","In particular embodiments, the directive  includes input to an API at the remote host . The remote host  may receive the directive  and, in response to the input included in the directive , may perform functions at the remote host  that extracts information from the VM files of a particular virtual machine on the remote host . The remote host , via the API, may send data  including the extracted information to the discovery system  via the established connection.","In particular embodiments, the discovery system  receives data  from a remote host  and the handler  may extract discovery information from the received data . The extracted discovery information may include configuration information related to a particular virtual machine. The configuration information may include information related to a plurality of configuration items related to the particular virtual machine. In particular embodiments, the configuration items include one or more configuration items representing software items on the particular virtual machine. The software items my include software programs, executing processes, communications sessions with a user of the VM or with a process on another VM. For example, a user may be logged into the VM and interact with a program that has establish a connection with a process on a second VM. In particular embodiments, the configuration items include one or more configuration items representing hardware items on the virtual machine, such as a processor or memory, for example. The hardware items may be virtual hardware. The configuration information may also include information about relationships between configuration items on the VM or between a configuration item on the VM and a configuration item on a second VM.","In particular embodiments, the discovery system  converts discovery information extracted from data  received from a remote host  into a common format. For example, the discovery system  may instantiate objects from the common model  that represent discovery information received from a remote host . The discovery system  may then send the converted discovery information to a discovery repository. For example, the discovery system  may send converted discovery information  to the aggregator  to be stored in the discovery repository .","In particular embodiments, the aggregator  receives converted discovery information  from the discovery system . The discovery information  may be the result of a discovery request, a status query, or a request for remediation (e.g., patching), for example. The collector  may accept the discovery information . In particular embodiments, the collector  time-stamps the accepted discovery information and may place the time-stamped discovery information in a queue (not shown) for further processing.","The consolidator  may perform several functions depending on the request  to which the discovery information  is a response and depending on the nature of the data accepted by the collector . For example, the consolidator  may perform a mapping function to map the discovery information  to an object in the discovery repository . If no appropriate object is present in the discovery repository , the consolidator  may create a new object. The consolidator  may perform an aggregation function to combine data from multiple discovery systems  to support an object in the discovery repository . Additionally, storing aggregated detailed discovery information received from a discovery system  in the discovery repository  may be desirable. Specific aggregation computations may be performed to facilitate later trending and analytics. The consolidator  may perform consolidation functions. For example, pieces of data that constitute a single object may be discovered and arrive at the aggregator  at different times. The consolidator  may consolidate the pieces of data. The consolidator  may perform reconciliation functions. For example, two or more discovery systems  may evaluate the same VM file or produce results related to the same VM file. The consolidator  may reconcile discovery information from multiple discovery systems  before consolidating the discovery information. The consolidator  may perform analysis functions. Advanced analysis may need to be performed to extract higher-level information, such as relationships and topology. Such analysis may be useful when an object in one VM file may relate to another object in another VM file. For example, a 3-tier web application may have its web-server, application server, and database located in three different VM images.","The discovery repository  may include different types of objects. For example, the discovery repository  may include configuration items (CIs), relationships, events and actions, and trends and patterns. In particular embodiments, the discovery repository  includes 2 different types of common model for CIs: one common model that is specific within the domain for CIs such as networks, storage, applications, and servers, and another common model for general purpose object types for CIs such as business processes. Relationships between CIs may be captured to provide full topologies. Higher-level relationships between business processes\/operations and CIs may be included when applicable. Examples of events and actions include information on the remediation, patching, query, and their status as performed on VM files. The discovery repository  may include historical discovery information related to a particular virtual machine that can be used to discover trends and patterns. Information related to CIs and events\/actions may be aggregated, summarized, and analyzed to discover trends and patterns.","In particular embodiments, the aggregator  is accessible to a content management system (CMS) , a resource management system (RMS) , and a visualization\/reporting system . The visualization\/reporting system  may provide a user interface, allowing the information in the discovery repository  to be presented to a user. The CMS , RMS , and visualization\/reporting system  may provide inputs to the fingerprint repository  to enhance the ability of fingerprints  to extract and retrieve information related to VMs.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 2","FIG. 1","FIG. 1","FIG. 1"],"b":["200","230","200","210","220","210","230","220","200","150","230","232","232","230","232","230","230","232","230","232","152","220","222","230","200","222","222","230","230","230","230","222","230","152","230","230","200","230","220","220"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 3","b":["300","310","300","340","302","312","314","316","316","320","318","314","318","314","318"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 4","b":["400","402","400","410","440","440","1","402","402","450","402","2","450","3","402","1","450","1","450","2","402","3","450","4","450","440","1","402","440","1","402","410","440"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 5","FIG. 1","FIG. 3","FIG. 4"],"b":["500","500","102","302","402"]},"The method  starts at . At , the discovery system establishes a connection to a particular remote host. The particular remote host may be a remote host  shown in  or a remote host  shown in . The particular remote host includes virtual machine files of a particular virtual machine. The virtual machine files may include files that are included in a mounted file system of the particular virtual machine. The particular virtual machine may or may not be active on the particular remote host. The remote host may or may not include the same hardware that provides the execution environment for the particular virtual machine.","At , the discovery system sends at least one directive to the particular host via the connection. The at least one directive may be the at least one directive  shown in , for example. The at least one particular executable command may be identified, for example, by fingerprints such as the fingerprints  shown in .","At , the discovery system receives data from the particular remote host as a result of a response by the particular remote host to the at least one directive. The data includes information extracted from at least one of the virtual machine files.","At , the discovery system extracts discovery information from the received data. The discovery information includes configuration information related to the particular virtual machine. The configuration information may include applications installed on the virtual machine, processes executing on the virtual machine, live connections on the virtual machine, as well as relationships between such applications, processes, and connections and other applications, processes, and connections on either the same virtual machine or on another machine whether virtual or not. The discovery system converts the discovery information into a particular format, at . At , the discovery system sends the converted discovery information to a discovery repository. The converted discovery information may be the converted discovery information  shown in , for example. The discovery repository may be the discovery repository  shown in , for example. At , the first method ends.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIGS. 6-8","FIG. 1","FIG. 3","FIG. 4"],"b":["600","600","102","302","402"]},"The method  starts at . At , the discovery system accesses a directory including host-related information associated with each of a plurality of remote hosts. Each remote host of the plurality of remote hosts includes at least one virtual machine. By including at least one virtual machine it is meant that the VM files for at least one virtual machine are present on the remote host. The virtual machine may be active or inactive on the remote host. The directory may be the directory  shown in , for example. The plurality of remote hosts may be the remote hosts  shown in  or the remote hosts  shown in , for example. At , the discovery system receives particular host-related information associated with a particular remote host from the directory in response to accessing the directory. The host-related information includes connection information.","At , the discovery system accesses a fingerprint repository including a plurality of fingerprints. Each fingerprint of the plurality of fingerprints identifies at least one executable command associated with a virtual machine. The fingerprint repository may be the fingerprint repository  shown in , for example. At , the discovery system receives an identification of at least one particular executable command associated with a particular virtual machine. The identified at least one particular executable command may be the at least one directive  shown in , for example.","At , the discovery system establishes a connection to a particular remote host. The particular remote host may be a remote host  shown in  or a remote host  shown in , for example. The particular remote host includes virtual machine files of the particular virtual machine. The particular virtual machine may or may not be active on the particular remote host.","At , the discovery system sends at least one particular executable command to the particular host via the connection. The at least one particular executable command may be the at least one directive  shown in , for example.","At , the discovery system receives data from the particular remote host. The data includes output resulting from execution of the at least one executable command at the remote host. The output includes information extracted from at least one of the virtual machine files.","At , the discovery system extracts discovery information from the received data. The discovery information includes configuration information related to the particular virtual machine. The configuration information includes information related to a plurality of configuration items related to the particular virtual machine. The discovery system converts the discovery information into a particular format, at . At , the discovery system sends the converted discovery information to a discovery repository. The converted discovery information may be the converted discovery information  shown in , for example. The discovery repository may be the discovery repository  shown in , for example.","At , the discovery system receives remedial information related to the particular virtual machine. In particular embodiments, the remedial information includes patches for fixing or repairing the particular virtual machine. At , the discovery system initiates modification of at least one of the virtual machine files of the particular virtual machine in response to receiving the remedial information. At , the second method ends.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 9","FIG. 1","FIG. 4","FIG. 1","FIG. 3","FIG. 4"],"b":["900","150","450","900","102","302","402"]},"The method  starts at . At , the discovery system receives a request. The request includes a request to perform IT discovery for all virtual machines on a particular remote host. The request may be a request  received from the aggregator  as shown in , for example.","At , the discovery system establishes a connection to the particular remote host. In particular embodiments, a single connection is established using a single set of access credentials in order to perform discovery on VM files of a plurality of virtual machines. The discovery system determines whether there remain virtual machines on the particular remote host for which IT discovery needs to be performed, at . If no virtual machines remain, the third method  proceeds to  and ends. If virtual machines remain, the third method  proceeds to .","At , the discovery system determines at least one appropriate fingerprint for a remaining virtual machine. The at least one fingerprint may be one or more of the fingerprints  shown in , for example. At , the discovery system sends at least one executable command identified by the at least one appropriate fingerprint to the particular remote host to be executed at the remote host and receives data from the particular remote host resulting from execution of the at least one executable command at the particular remote host. The at least one executable command may be the at least one directive  shown in , for example. The received data may be the received data  shown in , for example.","At , the discovery system extracts discovery information from the received data and sends the discovery information to a discovery repository. The discovery information may be the discovery information  shown in , for example. The discovery repository may be the discovery repository  shown in , for example. From , the method  proceeds to .",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 10","FIG. 1","FIG. 4","FIG. 1","FIG. 3","FIG. 4"],"b":["1000","150","450","1000","102","302","402"]},"The method  starts at . At , the discovery system receives a request. The request includes a request to perform IT discovery for all virtual machines on a plurality of remote hosts. The request may be a request  received from the aggregator  as shown in , for example.","At , the discovery system determines whether remote hosts remain for which IT discovery needs to be performed. If no remote hosts remain, the method  proceeds to  and ends. If remote hosts remain, the method  proceeds to . At , the discovery system establishes a connection to a remote host.","Proceeding to , the discovery system determines whether there remain virtual machines on the remote host for which IT discovery needs to be performed. If no virtual machines remain, the method  proceeds to . If virtual machines remain, the method  proceeds to ","At , the discovery system determines at least one appropriate fingerprint for a remaining virtual machine. The at least one fingerprint may be one or more of the fingerprints  shown in , for example. At , the discovery system sends at least one executable command identified by the at least one appropriate fingerprint to the remote host to be executed at the remote host and receives data from the particular remote host resulting from execution of the at least one executable command at the particular remote host. The at least one executable command may be the at least one directive  shown in , for example. The received data may be the received data  shown in , for example.","At , the discovery system extracts discovery information from the received data and sends the discovery information to a discovery repository. The discovery information may be the discovery information  shown in , for example. The discovery repository may be the discovery repository  shown in , for example. From , the method  proceeds to .",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 11","FIGS. 5-10","FIG. 1","FIG. 3","FIG. 4","FIG. 1","FIG. 3","FIG. 4","FIG. 1","FIG. 3","FIG. 4","FIG. 1"],"b":["1100","1100","1100","1100","1100","102","302","402","1100","102","302","402","1100","140","340","440","1100","130","1100"]},"As illustrated in , the computer system  may include a processor , e.g., a central processing unit (CPU), a graphics processing unit (GPU), or both. Moreover, the computer system  can include a main memory  and a static memory  that can communicate with each other via a bus . As shown, the computer system  may further include a video display unit , such as a liquid crystal display (LCD), a projection television display, a flat panel display, a plasma display, or a solid state display. Additionally, the computer system  may include an input device , such as a remote control device having a wireless keypad, a keyboard, a microphone coupled to a speech recognition engine, a camera such as a video camera or still camera, or a cursor control device , such as a mouse device. The computer system  can also include a disk drive unit , a signal generation device , such as a speaker, and a network interface device . The network interface  enables the computer system  to communicate with other systems via a network . The network interface  may be the I\/O interface  shown in , for example. The network interface  may enable the discovery system to communicate with remote hosts  as shown in , the aggregator  as shown in , or an aggregator  as shown in .","In a particular embodiment, as depicted in , the disk drive unit  may include a computer-readable medium  in which one or more sets of instructions , e.g. software, can be embedded. For example, one or more modules, such as the handler  or the application-specific modules shown in  can be embedded in the computer-readable medium . Further, the instructions  may embody one or more of the methods, such as the methods disclosed with respect to , or logic as described herein. In a particular embodiment, the instructions  may reside completely, or at least partially, within the main memory , the static memory , and\/or within the processor  during execution by the computer system . The main memory  and the processor  also may include computer-readable media.","In an alternative embodiment, dedicated hardware implementations, such as application specific integrated circuits, programmable logic arrays and other hardware devices, can be constructed to implement one or more of the methods described herein. Applications that may include the apparatus and systems of various embodiments can broadly include a variety of electronic and computer systems. One or more embodiments described herein may implement functions using two or more specific interconnected hardware modules or devices with related control and data signals that can be communicated between and through the modules, or as portions of an application-specific integrated circuit. Accordingly, the present system encompasses software, firmware, and hardware implementations, or combinations thereof.","While the computer-readable medium is shown to be a single medium, the term \u201ccomputer-readable medium\u201d includes a single medium or multiple media, such as a centralized or distributed database, and\/or associated caches and servers that store one or more sets of instructions. The term \u201ccomputer-readable medium\u201d shall also include any medium that is capable of storing or encoding a set of instructions for execution by a processor or that cause a computer system to perform any one or more of the methods or operations disclosed herein.","In a particular non-limiting, exemplary embodiment, the computer-readable medium can include a solid-state memory such as a memory card or other package that houses one or more non-volatile read-only memories. Further, the computer-readable medium can be a random access memory or other volatile re-writable memory. Additionally, the computer-readable medium can include a magneto-optical or optical medium, such as a disk or tapes or other storage device to capture carrier wave signals such as a signal communicated over a transmission medium.","The illustrations of the embodiments described herein are intended to provide a general understanding of the structure of the various embodiments. The illustrations are not intended to serve as a complete description of all of the elements and features of apparatus and systems that utilize the structures or methods described herein. Many other embodiments may be apparent to those of skill in the art upon reviewing the disclosure. Other embodiments may be utilized and derived from the disclosure, such that structural and logical substitutions and changes may be made without departing from the scope of the disclosure. Accordingly, the disclosure and the figures are to be regarded as illustrative rather than restrictive.","In the foregoing detailed description, various features may be grouped together or described in a single embodiment for the purpose of streamlining the disclosure. This disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive subject matter may be directed to less than all of the features of any of the disclosed embodiments. Thus, the following claims are incorporated into the detailed description, with each claim standing on its own as defining separately claimed subject matter."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Objects, features, and advantages of embodiments disclosed herein may be better understood by referring to the following description in conjunction with the accompanying drawings. The drawings are not meant to limit the scope of the claims included herewith. For clarity, not every element may be labeled in every figure. The drawings are not necessarily to scale, emphasis instead being placed upon illustrating embodiments, principles, and concepts.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 6-8"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
