---
title: Identifying changes for online documents
abstract: Techniques and systems are disclosed for providing changed content identification for an online document that is accessed by a user or user agent. A reference point for an online document that a user or user agent is interested in accessing is identified, comprising a stored prior version of the document. The prior version of the document is retrieved, when the user or user agent accesses the online document, such as by using the reference point. Elements of the prior version are compared with elements of a current version of the document, to determine whether there are differences between the versions. If changes are identified between the prior version and the current version, the current version is automatically updated with visual or auditory representations that identify those changes of content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09330191&OS=09330191&RS=09330191
owner: Microsoft Technology Licensing, LLC
number: 09330191
owner_city: Redmond
owner_country: US
publication_date: 20090615
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The online environment, including both the Internet and plurality of intranets, can be very dynamic where content is continually uploaded, changed, updated, removed, etc. Documents, such as web-pages, online work-processor type files, PDF files, and other representations of documents can be available online and accessible to users. Often, users search for particular content, and\/or access particular web-sites for particular purposes. Some web-sites provide updated content on a regular basis, such as news sites, blogs, discussion boards, and retailer sale sites to name a few. Further, users may be particularly interested in important content that changes over time, such as times and dates of events, for example.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","Online content can change regularly and users can revisit online content frequently. For example, users often revisit websites to see if content of a web-page has changed, such as news content, blog updates, and more. However, tools used to access online content, such as web-browsers and search engines, do little to explicitly support dynamic content changes. Typically, when a user visits a colleague's website new papers that the colleague may have posted do not readily identify themselves to the user. Web-based tools usually deal with merely a single time slice of content available online. For example, browsers show users a current version of a page, and search engines use a single version that was indexed from a most recent crawl of the web.","Previous and current techniques and systems that attempt to identify changes in online content include Internet archive services and some search engines that provide access to historical version of web pages to users, where the user must explicitly request prior versions and identify changes on their own. Further, some services provide notifications of changes to web content to user who subscribe to the service for specific pages. Additionally, some store multiple versions of pages and attempt to identify changes and provide links to prior content and mapping of change representations for a current page, for specifically identified pages. Others attempt to show changes by providing side-by-side comparisons or integrated views of versions, requiring that users switch from browsing to comparison views.","Techniques and systems are disclosed that provide identification of changes to online documents to users or user agents, supporting awareness of changes when pages are revisited, for example, or compared with prior archived versions. The identification of changes can be provided in a lightweight, unobtrusive way that augments web browsing and may not interfere with a user's online browsing experience. Further, the change identification can be present while the user or user agent browses online, automatically making users aware of changes when they are identified, for example.","In one embodiment for providing changed content identification for an online document that is accessed by a user or user agent, a reference point for an online document that a user or user agent is interested in accessing can be identified, which references a stored prior version of the document, such as one that existed and was cached. When the user or user agent accesses the online document, the prior version of the document can be retrieved, for example, by using the reference point (e.g., retrieving the document from a local cache). Elements of the prior version can be compared with elements of a current version of the document, to determine whether there are differences between the versions. If changes are identified between the prior version and the current version, the current version can automatically be updated with visual or auditory representations, such as highlighting of changed text, which identifies those changes of content.","To the accomplishment of the foregoing and related ends, the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects, advantages, and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.","The claimed subject matter is now described with reference to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident, however, that the claimed subject matter may be practiced without these specific details. In other instances, structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.","A method may be devised that can provide awareness to users that some content has changed in an online document (e.g., web-page), for example, since a last time they accessed the document online or from a prior version. Changes in the content can be indicated to user without interfering with an existing web-browsing experience, for example.  is a flow-chart diagram of an exemplary method  for providing changed content identification for an online document that is accessed by a user.","The exemplary method  begins at  and involves identifying one or more reference points for an online document that a user or user agent (e.g., to allow programmable access using an agent) may be interested in accessing, at , where a stored prior version of the online document is available for the reference point. For example, a reference point may be a point-in-time and a stored prior version of the document may be available from that point-in-time. In this example, the reference point can be used to access the document stored at that point-in-time.","At , the prior version of the document is retrieved when the user or user agent accesses the online document. In one embodiment, accessing the online document can comprise browsing to the document on the Internet, such as by accessing a web-page. Web-pages often contain content that is changed periodically, for example, so when a user or user agent accesses a current version of the web-page it may have different content than when the user or user agent previously accessed that page. In this example, when the user or user agent accesses a current version of the web-page, the prior version can be retrieved from the reference point, such as from a local cache or an online storage location.","At , elements of the prior version of the online document are compared with elements of a current version of the document. An online document can be broken down into elements, for example, in a variety of ways, depending on a type of document. In one embodiment, the document (e.g., a web-page) may comprise a graphical structure representation, such as a document object model (DOM) tree-graph comprising DOM elements for the document. In this embodiment, for example, a DOM-tree for the prior version can be compared with a DOM-tree for the current version to determine whether there are differences between the elements (e.g., structure, location, content, etc.) of the two versions.","In one aspect, comparing the elements of the versions may comprise comparing merely those elements that are of interest to the user or user agent. As an example, a user may only be interested in detecting changes between versions for particular items, and ignoring other items, such as those that change often, or are inconsequential (e.g., ads, graphics, etc.), or those that are of little interest to the user (e.g., discussions on topics that are not relevant to user's tasks). In another embodiment, a user may wish to ignore changes for entire types of documents, for example, where an entire page changes, or where the user may have security concerns about storing prior versions of secure documents.","In one embodiment, identifying merely those elements of interest to the user can comprise identifying elements that have been selected by the user, for example, for which the user has particular interest. In this example, the user may be able to select items to identify if they have changed between versions. Further, in one embodiment, elements of interest to the user can be based on regions of inferred relevance, for example, by distinguishing between areas of a page that comprise content and areas that are non-content (e.g., ads, graphics, etc.). Additionally, in one embodiment, elements of interest to the user can be based on the user's document accessing patterns, such as when a user continually accesses a blog site to check for updates, merely those changes to updated blogs can be identified based the user's prior visitation pattern. Also, in one embodiment, elements of interest to the user can be based on global document accessing patterns, such as by tracking how a user utilizes the Internet (e.g., what pages they visit, how often, what for, content, etc.), to infer which changes the user may be interested in identifying.","At , in the exemplary method , the current version of the document is automatically updated with visual or auditory representations that identify changes to the content, from the prior version to the current version. It will be appreciated, however, that identifying changes as provided herein does not entail changing content, merely identifying changes to such content. In one embodiment, updating the current version can comprise changing a visual or auditory representation of a changed element on the current version, for example, where the element is different between the prior and current versions. Visual or auditory representations can be identifiers for a user or user agent that content has changed between the prior and current versions of the document. For example, a change identifying visual or auditory representation can be something that distinguishes the changed content from how the current version is represented.","As an example, elements that are different between the versions can be highlighted, where a different background color distinguishes the changes from a normal background color for the document. Other examples of static representations can include, changing a color of font, changing a size of font, bolding the change, drawing lines around the change, using some pointers to focus the change to the user, or some combination of these. Examples of dynamic visual representations can include, fading the element between the prior version and the current version, changing the visual representation of the changed element then fading to a typical representation, using dynamic graphics, or some combination. Examples of auditory representations may be distinguishing sounds that identify changes when an element is selected or represented on a display. The methods and systems described herein are not limited to the above embodiments for visually representing changed elements in a document. It is anticipated that those skilled in the art may devise alternatives to these embodiments.","Having updated the current version of the online document with visual representations of changes from the prior version, the exemplary method  ends at .",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 2","FIG. 1"],"b":["200","100","204","202","216","216","218"]},"In this example , a reference point  may comprise an existing version of the document , for example, that was available at a particular time. In one embodiment, the reference point  can be a global reference point, such as a point-in-time or particular version of the document  that is merely available online, and is stored remotely , such as on a remote server. In another embodiment, the reference point  may be a local reference point, such as a particular version of the document  that is stored locally on storage in the computer .","In this example , when the user accesses the document  online, the prior version  is retrieved, as described above, along with the current version . Elements of the content  and  for the two versions can be compared to determine if there are differences. In this example, the convention details in the content  current version  comprise changes to the date, place, and speaker, which have been bolded in the illustrated example to draw the user's attention to the changed elements.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 3","b":["300","302","304","306"]},"In one embodiment, once the document is identified from the global reference point, the document may not need to be stored. Because it has a global reference point already pointing to an existing storage location, the document can later be retrieved from that remote storage location when it is called for, using that reference point. In another embodiment, if the reference point is local, at , such as referring to an existing version of a web-page accessed by the user, the reference point can identify the online document that was accessed by the user at a previous point, at . For example, a local reference point may point to a document that was accessed by the user at some point, whereas the global reference point can point to a document that has not been accessed by the user, but that the user intends to access.","At , the structure of the document can be determined, such as by a type of document or construction of the document. For example, a document may comprise an image file, a text-based file, web-page based code, DOM elements, dynamic elements, or a plurality of other types of files and elements or combination thereof. In this example , the structure of the document can be determined in order to provide for compatible storage. At , the existing version of the document can be stored as a prior version, such as when the user accesses the online document.","For example, when a user access a document online (e.g., a web-based document file) that version of the document (existing version) can be cached locally  as a prior version for future use . Further, the existing document may be stored in a global cache  (e.g., remotely) as a previous version , such as in an online document archive. However if one or more prior versions of the document are stored, the reference point can be used to locate the stored version(s), for example.","In one embodiment, storing an existing version of the document can comprise storing merely differences between a prior stored version and a current stored version. For example, a user may access a web-page on a first day and that first version can be cached. On a second day, the user accesses a second version of that web-page. In this example, instead of storing both versions, merely the differences between the first and second versions can be cached. Additionally, data in a cache (e.g., either remotely or locally) that identifies when the user accessed the document, for example, thereby providing reference points for when the document was accessed.","In one aspect, online documents may have various structures and can be stored and compared in various ways. In one embodiment, the document can be stored in a graphical-structure representation, such as a DOM element tree structure. In another embodiment, the document can be stored as an image-based representation, such as an image file (or multiple image files) of the web-page. In another embodiment, the document can be stored as a text-based representation, such as a word-processor based document. In another embodiment, the document can be stored as a code-based representation, such as an HTML file. In this way, in these embodiments, the stored documents can be compared with current documents based on the structure of the documents.","It will be appreciated that, while an existing version of a document can be stored either locally or remotely as a prior version, for later retrieval using the reference point prior to element comparison, the methods and systems described herein are not limited to these embodiments. For example, a reference point may refer to an existing document online that is a prior version of the document accessed by the user. In this example, the prior version may not need to be stored and the global reference point can be used to retrieve the document.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 4","b":["400","402","404"]},"At , one or more prior versions  of the document are retrieved, using the reference point. A storage location  may comprise a local cache on the user's machine, and\/or a remote storage location, such as a remote server or server farm. While a typical user may merely wish to identify document changes between the current version  and a most recent prior version, a plurality of prior versions  may be cached and retrieved for comparison with the current version .","At , the current version of the document  and the retrieved one or more prior versions  are compared to determine if there are differences (changes) between them, such as by comparing the DOM trees for the current and prior version. Comparing elements can comprise determining whether a new element has been added between the prior and current versions, at . Further, it can be determined whether an element has been changed between the prior and current versions, at . Additionally, it can be determined whether an element has been moved between the prior and current versions, at . It can also be determined whether an element has been deleted between the prior and current versions, at .","If no differences are identified between the prior version and the current version, no changes are made to the current version of the document, at . However, if one or more differences are identified, the current version of the document can be updated to draw attention to the user, at . As described above, a visual representation of the changed elements can be altered for the current version. In this way, for example, the user may more readily be able to identify the differences between the prior and current versions (e.g., as shown in  and  of ).","In one aspect, determining whether an element has changed between versions may be performed in a plurality of ways. For example, detecting a change between DOM element trees may be different than detecting changes between images. In one embodiment, determining whether an element has been changed can comprise applying a function to the prior version and to the current version to yield results. These results can be compared to determine whether there is a difference, within a desired threshold.","For example, where the documents are stored as DOM element trees, the DOM trees can be run through some hash function, and the versions can be compared by looking at how the trees of hash function outputs differ in a depth-first manner. In this example, starting at a root of the trees, a pre-computed subtrees can be compared, and if the subtree hashes are the same the content has not changed. For those subtrees that do not match, the comparison can traverse down branches to detect the changed element.","In another aspect, representations of the documents (e.g., web-pages) that a user accesses (e.g., visits) can be stored locally on a client machine (e.g., user's computer), or may be stored remotely (e.g., on a remote server). While modern browsers comprise caching mechanisms that save previously viewed content, these types of caches are typically used for performance purposes (e.g., to speed loading of a page). In one embodiment, a parallel cache can be created for version comparison, for example, so that an application can control cache expiration and store multiple versions of a same document.","In one embodiment, representation of the document can be tied to a particular identity, such as a web-page tied to a URL, and\/or a timestamp that indicates when the document was accessed. For example, a file naming scheme may be utilized, with respective representations stored in a file named with a hash of its identity (e.g., URL), followed by a time and date. Further, an amount of disk or volatile memory space used for the cache can be configurable, along with an expiration time for files. In this way, in this example, older pages can be deleted to make room for new content. Additionally, a number of desired versions for a document can be set for the cache, thereby deleting older versions as new one are cached.","A system may be devised that can provide awareness to users that some content has changed on an online document (e.g., web-page), for example, since a last time they accessed the document online. Changes in the content can be indicated to user without interfering with an existing web-browsing experience, for example.  is a component block diagram of an exemplary system  for providing changed content identification for an online document that is accessed by a user.","A reference point identification component  identifies a reference point for an online document that a user is interested in accessing, such as from the Internet or an intranet . A document storing component  can provide for storing of an existing version of the document associated with the reference point as a prior version of that document. The document storing component  may have the prior version stored on a remote storage component , and\/or a local storage component , such as a local cache configured for storing prior versions. In one embodiment, the document storing component  can comprise a differentiation component that identifies merely differences between a prior stored version and a current stored version, and provides the differences for storage. In this way, for example, storage space may be saved by storing merely differences instead of entire documents.","When the user accesses a current version of the online document associated with the reference point, a version retrieval component  retrieves the prior version, for example, either from the remote storage  or local storage . A version comparison component  compares elements of the prior version (or versions) with elements of the current version of the document accessed by the user. Changes identified by the version comparison component  are used by a change identification component  to automatically update the current version with visual representations that identify the changes from the prior version to the current version .","Therefore, the document accessed by the user can be displayed in a manner that identifies changes  between the prior and current versions. For example, while the current version of the document is loading in a browser, the prior version can be retrieved and compared with the current version. In this example, the visual representations of the changes can be loaded on the current version when it is fully loaded into the browser.","In one embodiment, the exemplary system may comprise an element comparison selection component that a can be used to determine which elements of the version to compare. In one embodiment, the element comparison selection component can identify elements for comparison that have been selected by the user for comparison, such as those that are of particular interest to the user. In another embodiment, the element comparison selection component can identify elements for comparison based on the user's document accessing patterns, such as how and when the user accesses documents of particular types, and for what purpose. In another embodiment, the element comparison selection component can identify elements for comparison based on global document accessing patterns, for example, where users typically access blogs merely to see if there has been an update.","In one embodiment, the system for providing changed content identification for an online document that is accessed by a user can be comprised in an application plug-in component that is operably coupled with an application that is utilized to access the documents (e.g., a web-browser application).  is an illustration of an exemplary environment  that can be used to implement the application plug-in.","In this example, a web-browser  is used to access a website (www.conventioninfo.com), so that the user can view its content . The application plug-in component can comprise a user interface  (UI) configured to provide system configuration operations to the user. In this example, the UI is a toolbar  that may be located in the browser above the web-page, and can be present as the user uses the browser to view online content  (e.g., surfs the web).","As an example, the toolbar  comprises user configuration settings for the application. A document status area  allows the user to view what is currently happening (e.g., state of page). A toggle changes button  allow the user to turn on or off the visual change indications (e.g., highlighting) on the current page. An ignore site button  allows the user to blacklist the current site from version comparison, for example, for secure sites or pages that change entirely. A compare-to list button , allows the user to select a plurality of prior versions of the current document, such as those stored in the cache, to compare with the current version, or compare with each other. A load version button , allows the user to select a prior version to load into the browser. A setting button  can open a settings dialog that allows selection of various controls for the application, such as visual representation types, turning the comparison system on or off, controlling blacklisted sites, and directing a size of the cache.","Still another embodiment involves a computer-readable medium comprising processor-executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer-readable medium that may be devised in these ways is illustrated in , wherein the implementation  comprises a computer-readable medium  (e.g., a CD-R, DVD-R, or a platter of a hard disk drive), on which is encoded computer-readable data . This computer-readable data  in turn comprises a set of computer instructions  configured to operate according to one or more of the principles set forth herein. In one such embodiment , the processor-executable instructions  may be configured to perform a method, such as the exemplary method  of , for example. In another such embodiment, the processor-executable instructions  may be configured to implement a system, such as the exemplary system  of , for example. Many such computer-readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims.","As used in this application, the terms \u201ccomponent,\u201d \u201cmodule,\u201d \u201csystem\u201d, \u201cinterface\u201d, and the like are generally intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a controller and the controller can be a component. One or more components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","Furthermore, the claimed subject matter may be implemented as a method, apparatus, or article of manufacture using standard programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof to control a computer to implement the disclosed subject matter. The term \u201carticle of manufacture\u201d as used herein is intended to encompass a computer program accessible from any computer-readable device, carrier, or media. Of course, those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 8","FIG. 8"]},"Although not required, embodiments are described in the general context of \u201ccomputer readable instructions\u201d being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media (discussed below). Computer readable instructions may be implemented as program modules, such as functions, objects, Application Programming Interfaces (APIs), data structures, and the like, that perform particular tasks or implement particular abstract data types. Typically, the functionality of the computer readable instructions may be combined or distributed as desired in various environments.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 8","FIG. 8"],"b":["810","812","812","816","818","818","814"]},"In other embodiments, device  may include additional features and\/or functionality. For example, device  may also include additional storage (e.g., removable and\/or non-removable) including, but not limited to, magnetic storage, optical storage, and the like. Such additional storage is illustrated in  by storage . In one embodiment, computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage  may also store other computer readable instructions to implement an operating system, an application program, and the like. Computer readable instructions may be loaded in memory  for execution by processing unit , for example.","The term \u201ccomputer readable media\u201d as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory  and storage  are examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, Digital Versatile Disks (DVDs) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .","Device  may also include communication connection(s)  that allows device  to communicate with other devices. Communication connection(s)  may include, but is not limited to, a modem, a Network Interface Card (NIC), an integrated network interface, a radio frequency transmitter\/receiver, an infrared port, a USB connection, or other interfaces for connecting computing device  to other computing devices. Communication connection(s)  may include a wired connection or a wireless connection. Communication connection(s)  may transmit and\/or receive communication media.","The term \u201ccomputer readable media\u201d may include communication media. Communication media typically embodies computer readable instructions or other data in a \u201cmodulated data signal\u201d such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.","Device  may include input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, infrared cameras, video input devices, and\/or any other input device. Output device(s)  such as one or more displays, speakers, printers, and\/or any other output device may also be included in device . Input device(s)  and output device(s)  may be connected to device  via a wired connection, wireless connection, or any combination thereof. In one embodiment, an input device or an output device from another computing device may be used as input device(s)  or output device(s)  for computing device .","Components of computing device  may be connected by various interconnects, such as a bus. Such interconnects may include a Peripheral Component Interconnect (PCI), such as PCI Express, a Universal Serial Bus (USB), firewire (IEEE 1394), an optical bus structure, and the like. In another embodiment, components of computing device  may be interconnected by a network. For example, memory  may be comprised of multiple physical memory units located in different physical locations interconnected by a network.","Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example, a computing device  accessible via network  may store computer readable instructions to implement one or more embodiments provided herein. Computing device  may access computing device  and download a part or all of the computer readable instructions for execution. Alternatively, computing device  may download pieces of the computer readable instructions, as needed, or some instructions may be executed at computing device  and some at computing device .","Various operations of embodiments are provided herein. In one embodiment, one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media, which if executed by a computing device, will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further, it will be understood that not all operations are necessarily present in each embodiment provided herein.","Moreover, the word \u201cexemplary\u201d is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as \u201cexemplary\u201d is not necessarily to be construed as advantageous over other aspects or designs. Rather, use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application, the term \u201cor\u201d is intended to mean an inclusive \u201cor\u201d rather than an exclusive \u201cor\u201d. That is, unless specified otherwise, or clear from context, \u201cX employs A or B\u201d is intended to mean any of the natural inclusive permutations. That is, if X employs A; X employs B; or X employs both A and B, then \u201cX employs A or B\u201d is satisfied under any of the foregoing instances. In addition, the articles \u201ca\u201d and \u201can\u201d as used in this application and the appended claims may generally be construed to mean \u201cone or more\u201d unless specified otherwise or clear from context to be directed to a singular form.","Also, although the disclosure has been shown and described with respect to one or more implementations, equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components (e.g., elements, resources, etc.), the terms used to describe such components are intended to correspond, unless otherwise indicated, to any component which performs the specified function of the described component (e.g., that is functionally equivalent), even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition, while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations, such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore, to the extent that the terms \u201cincludes\u201d, \u201chaving\u201d, \u201chas\u201d, \u201cwith\u201d, or variants thereof are used in either the detailed description or the claims, such terms are intended to be inclusive in a manner similar to the term \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
