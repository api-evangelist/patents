---
title: Restoration of archived configurations for a network device
abstract: Techniques are described for reliable restoration of archived configuration. For example, a device, such as a router, comprises a first memory to store operational configuration data and a second memory to store candidate configuration data. The candidate configuration data represents a working copy of the operational configuration data. The device further includes a control unit to lock the candidate configuration data, load archived configuration data to replace the locked candidate configuration data and commit the candidate configuration data to restore the archived configuration data as the operational configuration data of the device. In locking the candidate configuration, the device ensures reliable restoration of the candidate configuration by helping prevent the device from becoming both unreachable and inoperable.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07822718&OS=07822718&RS=07822718
owner: Juniper Networks, Inc.
number: 07822718
owner_city: Sunnyvale
owner_country: US
publication_date: 20090421
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is a continuation of U.S. application Ser. No. 10\/756,960, filed Jan. 13, 2004, the entire content of which is incorporated herein by reference.","The invention relates to computer networks, and more particularly, to configuring devices within computer networks.","A computer network is a collection of interconnected computing devices that exchange data and share resources. In a packet-based network, such as the Internet, the computing devices communicate data by dividing the data into small blocks called packets. The packets are individually routed across the network from a source device to a destination device. The destination device extracts the data from the packets and assembles the data into its original form. Dividing the data into packets enables the source device to resend only those individual packets that may be lost during transmission.","Certain devices within the network, referred to as routers, maintain tables of routing information that describe available routes through the network. Each route defines a path between two locations on the network. Upon receiving an incoming data packet, the router examines header information within the packet to identify the destination for the packet. Based on the header information, the router accesses the routing table, selects an appropriate route for the packet and forwards the packet accordingly.","Conventional routers typically include a mechanism, referred to herein as a management interface, for locally or remotely configuring the router. By interacting with the management interface, various clients, such as human users and automated scripts, can perform configuration tasks. For example, the clients may configure interface cards of the router, adjust parameters for the supported network protocols, specify the physical components within the routing device, modify the routing information maintained by the router, access software modules and other resources residing on the router, and perform other configuration tasks.","In some routers, the management interface allows a client to configure the present operational configuration of the router using a commit-based model. In a commit-based model, a client issues one or more configuration commands, and then directs the management interface to apply the commands by issuing a \u201ccommit\u201d command. The client may further direct the management interface to disregard the commands by issuing a \u201crollback\u201d command. Typically, the management interface maintains a copy of the operational configuration, i.e., a candidate configuration, to which the management interface applies the one or more configuration commands. Upon receiving a commit command, the changes made to the candidate configuration transfer to the operational configuration. A rollback command causes the management interface to replace the candidate configuration with a new copy of the operational configuration, thereby removing any changes to the candidate configuration made by the configuration commands.","The management interface, in some routers, also allows a client to archive the operational configuration of the router. Furthermore, the management interface allows a client to restore an archived configuration causing the archived configuration to become the operational configuration. Typically, when restoring an archived configuration, the archived configuration is first restored as the candidate configuration. Subsequently, the management interface issues the commit command to cause the configuration differences between the archived configuration and the operational configuration to transfer to the operational configuration, thereby effectively replacing the operational configuration with the candidate configuration.","As the complexity of computing networks has increased, there has been an increasing need for routers and other network devices to support concurrent configuration by multiple clients. Consequently, some devices allow multiple clients to concurrently issue configuration commands to edit the candidate configuration. In other words, the management interface of such a device does not \u201clock\u201d the candidate configuration of the device to a single client, i.e., reject configuration commands from other clients, but receives configuration commands from the multiple clients concurrently. Allowing multiple clients to configure the candidate configuration may become problematic during a restore of an archived configuration since the multiple clients may corrupt the archived configuration. Multiple clients may inadvertently alter the archived configuration prior to when the archived configuration becomes the operational configuration and in some instances corrupt the archived configuration. Upon becoming the operational configuration, the corrupt archived configuration may cause the router to become unreachable, inoperable, or both.","To further complicate the restoration process, one or more of the clients often establish sessions with the router via the management interface and remotely transmit configuration commands via the session. A loss of a client connection to the router, i.e., session failure, while restoring an archived configuration may also result in partial restoration or corruption of the operational configuration of the router.","In addition, an archived configuration may be corrupt or contain incorrect configuration data such that, upon restoration of the archived configuration, the router may become inoperable and unreachable by the one or more clients. Thus, routers supporting restoration of an archived configuration do not provide a reliable environment for restoration of an archived configuration, and do not ensure router functionality once the restoration is complete.","In general, techniques are described for reliably restoring an archived configuration within a network device. More specifically, the techniques provide a reliable process detailing restoration of an archived configuration while avoiding many of the problems or challenges describe above.","In accordance with the techniques, a network device, such as router, first issues a lock configuration command to lock a candidate configuration prior to restoring an archived configuration. In particular, the router grants exclusive control over the candidate configuration to a system administrator or other client. In this manner, the router allows the client to access and modify the candidate configuration, but \u201clocks\u201d out other clients that may otherwise modify the candidate configuration. The lock configuration command may include a \u201cfailsafe\u201d attribute that allows an automatic rollback command to be initiated in the event the restoration process terminates prior to commitment of the candidate configuration. After locking the candidate configuration, the client directs the router to discard the entire candidate configuration, and replaces the candidate configuration with the archived configuration. For example, the router supports a load configuration command that includes an optional override attribute that directs the router to discard the entire candidate configuration and load the archived configuration in its place. Next, in response to a confirmed commit command, the router temporarily replaces an operational configuration with an archived configuration.","The confirmed commit command requires explicit confirmation by the client within a time period or the operational configuration is not updated. This may allow the router to recover from entering an unknown state in the event the archived configuration is corrupted, contains errors or incorrect configuration information, or otherwise renders the router inoperable and unreachable. In particular, the confirmed commit command causes the router to execute a rollback command in the event the configuration session fails, i.e., a confirmation is not received.","Next, integrity tests are performed to determine whether the router is inoperable, unreachable, and the like. In the event the router passes the integrity tests, a second commit command is issued to commit the changes made to the candidate configuration during restoration to the operational configuration. Finally, restoration is complete and the candidate configuration is unlocked, allowing other clients to edit the candidate configuration of the router.","An archive system may be used that allows the client to restore multiple network devices with corresponding archived configurations. The clients may interact with the archive system via a user interface to select one or more network devices and corresponding archived configurations. Upon selecting the one or more network devices and corresponding archived configurations, the clients may initiate the restoration process. The archived system then executes restoration process to ensure reliable restoration of each of the archived configurations.","In one embodiment, a method comprises locking candidate configuration data, wherein the candidate configuration data represents a working copy of operational configuration data, loading archived configuration data to replace the locked candidate configuration data, and committing the candidate configuration data to restore the archived configuration data as the operational configuration data.","In another embodiment, a device comprises memory to store operational configuration data and candidate configuration data, wherein the candidate configuration data represents a working copy of the operational configuration data. The device further comprises a control unit to lock the candidate configuration data, load archived configuration data to replace the locked candidate configuration data, and commit the candidate configuration data to restore the archived configuration data as the operational configuration data.","In another embodiment, a method comprises issuing a lock command to lock candidate configuration data, wherein the candidate configuration data represents a working copy of operational configuration data. The method further comprises issuing a load command to load archived configuration data to replace the locked candidate configuration data and issuing a commit command to commit the candidate configuration data to restore the archived configuration data as the operational configuration data.","In another embodiment, an archive system comprises a memory to store archived configuration data and a computing device to issue a lock command to lock candidate configuration data. The candidate configuration data represents a working copy of operational configuration data. The archive system issues a load command to load archived configuration data to replace the locked candidate configuration data, and issues a commit command to commit the candidate configuration data to restore the archived configuration data as the operational configuration data.","In another embodiment, a computer-readable medium comprising instructions. The instructions cause a programmable processor to lock candidate configuration data, wherein the candidate configuration data represents a working copy of operational configuration data. The instructions further comprise the programmable processor to load archived configuration data to replace the locked candidate configuration data and commit the candidate configuration data to restore the archived configuration data as the operational configuration data.","In another embodiment, a computer-readable medium comprises instructions that cause a programmable processor to issue a lock command to lock candidate configuration data, wherein the candidate configuration data represents a working copy of operational configuration data. The instructions further cause the processor to issue a load command to load archived configuration data to replace the locked candidate configuration data, and issue a commit command to commit the candidate configuration data to restore the archived configuration data as the operational configuration data.","The techniques may provide one or more advantages. Reliable restoration of an archived configuration may increase network efficiency. For example, an archived configuration may replace the candidate configuration. If the candidate configuration is left unlocked, many clients may edit the archived configuration without realizing the candidate configuration has been replaced. Thus, the archived configuration may become corrupt. A corrupt archived configuration may replace the operational configuration and cause the router to become inoperable and\/or unreachable. An inoperable router may no longer forward network traffic causing significant delays throughout the network and decreasing efficiency. If however, the router locks the configuration, the archived configuration does not become corrupt and the router remains in operation. Moreover, confirming the archived configuration may determine whether the archived configuration is corrupt. Again this prevents the router from becoming inoperable, thus increasing efficiency.","Moreover, network efficiency is increased via the session failsafe. The session failsafe ensures that both the candidate and operational configurations are synchronized. This prevents the router from entering an unknown state, which again may be dangerous to the efficiency of the network. Finally, the archive system provides efficient network device restoration and further provides automation for ensuring the reliability of the restoration process. The archive system maintains control of the restoration process, thereby limiting client interaction and increasing the likeliness of a reliable restoration of an archived configuration.","The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features, objects, and advantages of the invention will be apparent from the description and drawings, and from the claims.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1","b":["10","12","10","14","16","16","16","18","18","18","16","14","14","18"]},"Network device  represents any device operating within computer network , such as a network hub, network switch, network router, or the like. Network device  provides an interface to archive system  that allows archive system  to configure network device . For example, network device  may be a network router, and archive system  may store archived configuration information that may be used to configure interface cards of the router, adjust parameters for the supported network protocols, specify the physical components within the routing device, modify the routing information maintained by the router, access software modules and other resources residing on the router, and the like.","Archive system  may include an interface, such as a web server, that presents a user interface with which clients A-N (collectively, \u201cclients \u201d) interact to restore and archived configurations. Archive system  may further include a database, or other data storage device to store the archived configurations. In addition, or alternatively, clients  may directly interact with network device  to perform these same operations, although this is not explicitly illustrated in .","Clients  interact with archive system  to archive an operational configuration of network device , i.e., a configuration currently in use by the network device. Accordingly, the archived configuration is a copy of the current operational configuration, and may be restored to quickly re-configure network device . Archive system  stores the archived configuration in the database or other data storage system for use at a later time. Clients  may interact with archive system  to specify an archive schedule detailing automated archival as well as encode comments to each archived configuration for ease of identification.","As described in detail, clients  may interact with archive system  to restore an archived configuration. Upon initiating the restoration, archive system  interacts, e.g., via automated scripts, with network device  to perform the restoration. Archive system  initiates the restoration process and submits the selected archived configuration to network device , e.g, by way of an application programming interface (API) presented by the network device. In response, network device  restores the archived configuration by replacing the operational configuration with the archived configuration in accordance with the techniques described herein. Once restoration is complete, network device  begins to operate in accordance with the specifications of the archived configuration.","As described in detail herein, network device  maintains a working copy, i.e., \u201ccandidate configuration,\u201d of a data source, i.e., the operational configuration. In accordance with the principles of the invention, network device  supports a command set that allows archive system  to issue a sequence of commands that reliably restores the archived configuration. To begin the restoration process, archive system  issues a lock-configuration command that directs network device  to grant the archive system exclusive access to the candidate configuration, i.e., lock the candidate configuration so that no other clients, such as other clients , may edit the candidate configuration. By locking the candidate configuration, network device  ensures that no clients edit the archived configuration and corrupt the restoration process. The lock configuration command may include an optional attribute, referred to herein as a \u201cfailsafe\u201d attribute, that allows an automatic rollback command to be initiated in the event the restoration process terminates prior to commitment of the candidate configuration.","Next, archive system  issues a load configuration command that directs network device  to discard the entire candidate configuration and replace it with the archived configuration received from archive system . For example, the router may support a load configuration command that includes an optional override attribute that directs the router to discard the entire candidate configuration and load the achieve configuration in its place.","Archive system  then issues a confirmed commit command, which directs network device  to replace the operational configuration with the candidate configuration. The confirmed commit command requires explicit confirmation by the client within a time period or the operational configuration is not updated. Network device  automatically executes a rollback command in the event the configuration session fails, i.e., a confirmation is not received from archive system . This may allow the router to recover from entering an unknown state in the event the archived configuration is corrupted, contains errors or incorrect configuration information, or otherwise renders the router inoperable and unreachable. Upon completing the restoration, archive system  directs network device  to unlock the candidate configuration allowing clients to edit the candidate configuration.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 2","FIG. 2","FIG. 2"],"b":["24","26","20","32","28","30","22","26","34","34","34","36","36","38","38","36","38","34","36","38"]},"Router  further comprises a control unit  that maintains routing information . Routing information  describes the topology of network  and, in particular, routes through network . Routing information  may include, for example, route data that describes various routes within network , and corresponding next hop data indicating appropriate neighboring devices within network  for each of the routes. Control unit  periodically updates routing information  to accurately reflect the topology of network . In general, when router  receives a packet via inbound network link , control unit  forwards the packet on one or more of outbound network links , which may be based on a information included within the packet.","Control unit  receives configuration input from archive system  via an input\/output (I\/O) interface . I\/O interface  may be a command line interface (CLI) or other suitable interface for processing user or script-driven commands. Control unit  stores the configuration input received from archive system  as configuration data , which may take the form of a text file, such as an ASCII file. Alternatively, control unit  may process the configuration input and store configuration data  in any one of a number of forms, such as one or more databases, tables, or other data structures. Configuration data  may include a candidate configuration and an operational configuration, as described above.","One of clients , e.g., client A, may comprise a user operating a computer executing a web browser. To initiate an archival action, e.g., archival or restoration of configuration data , client A accesses web server  via one or more user interfaces presented by user interface modules . By interacting with the one or more user interfaces, client A may elect to restore to router  an archived configuration from archive database . The one or more user interfaces may provide status information indicating the success or failure of the restoration of the archived configuration.","In the event that client A elects to restore an archived configuration on router , web server  receives a selection of an archived version, and initiates the reliable restoration process. Web server  accesses archive database  and retrieves an archived configuration in accordance with the selection. While gathering the archived configuration, web server  establishes a session with I\/O interface . Upon establishing the session, web server  interacts with router  via I\/O interface  to enable the restoration process.","To enable router  for the restoration process, web server  issues the lock-configuration command to lock the candidate configuration of configuration data  so that no other clients  may edit the candidate configuration. The lock prevents unwanted changes to the archived configuration once the archived configuration replaces the candidate configuration and protects the archived configuration from being corrupted. The lock configuration command may include a \u201cfailsafe\u201d attribute that allows a first automatic rollback command to be initiated in the event the restoration process terminates prior to commitment of the candidate configuration.","After enabling the restoration process, web server  issues the load configuration command and transmits the archived configuration specified by client A to control unit  via I\/O interface . Once control unit  receives the archived configuration, control unit  discards the entire candidate configuration of configuration data , and replaces it with the archived configuration received from web server . The load configuration command may include an \u201coverride\u201d attribute that allows control unit  to discard the entire candidate configuration and replace it with the archived configuration.","Control unit  then confirms the integrity of the candidate configuration, i.e., the archived configuration. To confirm the integrity, web server  issues the confirmed commit command to control unit  via I\/O interface . The confirmed commit command causes control unit  to temporarily replace the operational configuration of configuration data  with the candidate configuration. Moreover, the confirmed commit command requires explicit confirmation by the client within a time period or control unit  does not update the operational configuration of configuration data . Specifically, control unit  automatically executes a rollback command in the event the configuration session fails, i.e., a confirmation is not received from web server . In other words, any changes made to the candidate configuration are reversed so long as the changes are not \u201cfully committed,\u201d meaning the changes are applied to the operational configuration and cannot be reversed.","Web server  then performs tests to determine whether the router is inoperable, unreachable, and the like. In the event the candidate configuration is corrupt, router  may become inoperable and\/or unreachable posing serious problems for network  as network traffic may halt along routes serviced by router . In the event router  passes the integrity tests, web server  issues a second commit command to commit the changes made to the candidate configuration during restoration to the operational configuration. Web server  completes the restoration process by unlocking the candidate configuration allowing other clients  to edit the candidate configuration.","In this manner, router  supports a command set that provides reliable restoration of archived configurations. By first locking the candidate configuration, router  prevents clients  () from corrupting or inadvertently editing the archived configuration during the restoration process. In particular, the lock prevents any of clients  other than archive system  from editing the archived configuration after the archived configuration replaces the candidate configuration. Furthermore, the use of the confirmed commit provides a session failsafe, i.e., the automatic execution of a rollback command that prevents a session failure between web server  and I\/O interface  from leaving the candidate configuration in an unknown state. The rollback command returns the candidate configuration to a known state and ensures the candidate configuration is synchronous with the operational configuration. Finally, integrity testing prior to confirming the candidate configuration, i.e., archived configuration, protects against corrupted archived configurations that may cause router  to become inoperable, unreachable and the like.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 3","FIG. 2","FIG. 3"],"b":["40","40","48","20","50","50","20","22","20","50","48","50","20","48"]},"Control unit  may further include one or more software modules A-N (collectively, \u201csoftware modules \u201d). Software modules  represent threads of execution, and typically execute within an operating environment provided by an operating system. Software modules  may, for example, include a routing protocol module to administer protocols supported by router  (), a chassis module to account for the physical components of router , a device configuration module to control the physical configuration of router , or other software modules.","In addition, control module  includes a committed data source, referred to as committed database (COMMIT DB) , that stores an operational configuration of router . In other words, router  operates in accordance with configuration information stored in committed database . Control unit  further includes a shared data source referred to as shared database (SHARED DB) , that contains a copy of the configuration data of committed database , i.e., the candidate configuration, that is typically used for editing and modification without impacting operation of router . Archive system  accesses shared database  to restore an archived configuration stored on archive database  () without immediately impacting the operation of router .","As described herein, archive system  begins the restoration process by locking the candidate configuration stored within shared database . Archive system  further activates the failsafe as described above to ensure synchronization between the candidate configuration and the operational configuration in the event the session terminates prior to commitment of the candidate configuration. Archive system , after enabling the restoration process, transmits the archived configuration to management module .","Upon receiving the archived configuration, management module  loads the archived configuration into shared database , replacing the candidate configuration with the archived configuration. In this manner, the archived configuration becomes the candidate configuration since the archived configuration becomes stored within shared database  at the memory location associated with the candidate configuration. The changes made to replace the candidate configuration with the archived configuration may be stored within shared database  until the changes are committed to committed database . In the event the failsafe is triggered, control unit  may perform changes to undo the stored changes, thus reverting the candidate configuration back to a state prior to the restoration process.","Upon loading the archived configuration, web server  issues a confirmed commit command to management module . Management module , in response to the confirmed commit command, loads a copy of the operational configuration into a temporary directory and merges the candidate configuration, i.e., the loaded archived configuration, with the operational configuration to generate a list of updated configuration objects. Management module  may arrange the list of updated configuration objects to form a configuration patch. Upon creating the configuration patch, management module  starts timer  and subsequently applies the configuration patch to the operational configuration stored in commit database . Router  operates in accordance to the new operational configuration as updated by the configuration patch.","Web server  begins to perform tests to determine whether router  is operational. In the event that router  becomes unreachable or inoperable due to the new operational configuration, management module  automatically restores the previous operational configuration to commit database  when timer  reaches a pre-set time limit. Management module  may restore the previous operation configuration by reversing the changes made by the configuration patch. However, in the event that router  successfully restores the archived configuration, i.e., the new operational configuration is not corrupt or erroneous, web server  issues a second commit command to management module . In response, management module  stops timer  and makes permanent the changes to the operational configuration. In this manner, the confirmed commit command enables router  and web server  to verify the archived configuration prior to permanently committing the archived configuration. Moreover, the confirmed commit command allows router  to recover in the event the archived configuration is corrupt.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 4","b":["60","30","60","62","64","66","62"]},"Client A () interacts with user interface  to select a device. Via interactions with device selector , client A restores an archived configuration to the selected device. As shown in the illustrated embodiment by the device name \u201cDent,\u201d client A may select a device in accordance with a stored name or label. User interface  may include other selectors that allow one of clients  to select a device. For example, client A may enter an identification number into an input field to select a device. Consequently, the invention is not limited to selection via a pull down menu of a device by name. Furthermore, user interface  may include multiple device selectors similar to device selector  for automatic restoration to multiple devices with corresponding archived configurations.","Client A selects next action input  to finalize the device selected in device selector . Client A may instead exit user interface  without initiating restoration of any device by selecting cancel action input . In the event client A selects next action input , web server  analyzes the input received via user interface  and, more specifically, input received via device selector . Web server  then accesses archived configurations stored within archive database  to determine whether archived configurations exist for the selected devices. Alternatively, web server  may determine which devices have associated archived configurations and only permit client A to select devices having at least one associated archived configuration. In any event, web server  may present, in response to selection of next action input  and cancel action input , further user interfaces of user interfaces  to client A, as illustrated in the following figures.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 5","b":["68","30","28","68","22","60","28","68","64","22","22"]},"User interface  includes a table , and previous, next and cancel action inputs , , and , respectively. Table  may include any number of rows and columns, and lists a set of archived configurations, i.e., different versions of archived configuration for the selected device. Within each row of table , client A may select an archived configuration by selecting a radio button located on the far left column of the table. Exemplary rows A and B illustrate an unselected row and a selected row, respectively. Table  further includes start time, revision and comment columns from left to right in .","Client A may analyze each row to identify an archived configuration, and may select any of the rows included within table . The start time, revision and comment columns may aid client A in selecting an archived configuration. Upon selecting a row the radio button may become active, as shown by row B.","Once client A selects a desired archived configuration, client A may then select one of action inputs ,  and . In the event client A selects previous action input , web server  presents the previous user interface, i.e., user interface  of . Previous action input  allows client A to return to user interface  to reconfigure the device selection. In other words, client A may select previous action input  to change which device undergoes restoration of an archived configuration. Client A, as described below, may select cancel action input  to exit user interface  without initiating the restoration of an archived configuration.","In the event client A selects next action input , web server  receives the selection of row B and parses the selection to determine the selected archived configuration. Web server  accesses archive database  and reads the selected archived configuration from archive database . Web server  then performs the operations discussed above to restore the selected archived configuration to the selected device named \u201cDent.\u201d",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 6","FIG. 5"],"b":["80","30","28","80","22","68","28","80","70","72","76"]},"User interface  includes a table  having a single row  and a done action input . User interface  presents row  of table  in order to display the success or failure of the restoration of the selected archived configuration to the selected device. As shown in , row  displays information describing a device name, a status of restoration to the device name, a start time of the restoration, a last update time to the device, and a message. In particular, row  describes restoration of the previously selected archived configuration to the \u201cdent\u201d device. Further, the status of the restoration is \u201csuccess\u201d indicating that the \u201cdent\u201d device successfully restored the selected archived configuration. The \u201csuccess\u201d status indicates that the \u201cdent\u201d device did not trigger the failsafe, and did not become inoperable or unreachable. Also, the message included within row  indicates a \u201csuccessfully restored configuration.\u201d","Web server  interacts with management module  via CLI  to obtain status information and generate row  of table . Web server , throughout the course of the restoration process, may query management module  to learn the status of the restoration process. Web server  may dynamically update the status shown in user interface  upon learning the status of the restoration process from management module .","Client A may view user interface  to inquire as to the status of the restoration process. Moreover, client A may view user interface  to troubleshoot any unsuccessful restorations. When client A has finished viewing user interface , client A may select done action input .",{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 7","FIG. 2","FIG. 3"],"b":["26","28","40","50","48","88","40","56","90"]},"In some embodiments, web server  () issues a lock command to cause control unit  to lock the candidate configuration. The lock configuration command may include a \u201cfailsafe\u201d attribute that allows an automatic rollback command to be initiated in the event the restoration process terminates prior to commitment of the candidate configuration. Alternatively, control unit  may automatically lock the candidate configuration upon receiving an archived configuration. The following pseudocode illustrates an exemplary lock configuration command issued by web server  in accordance with syntax supported by control unit .","<rpc>\n\n","<\/rpc>","In this example, the <rollback> tag is used to enable the failsafe attribute of the restoration session, which allows an automatic rollback command to be initiated in the event the restoration process terminates prior to commitment of the candidate configuration.","After locking the candidate configuration, control unit  replaces the candidate configuration with the archived configuration (). In particular, web server  transmits an archived configuration selected by one of clients . In some embodiments, web server  issues a load configuration command that includes an optional override attribute that directs the router to discard the entire candidate configuration and load the achieved configuration in its place. The following pseudocode illustrates an exemplary load configuration command issued by web server  in accordance with a syntax supported by control unit .","<rpc>\n\n","<\/rpc>","In this example, the override attribute has been set, and a universal resource locator (URL) has been provided to point to the archived configuration being restored. In response to the command, control unit replaces the candidate configuration in its entirety with the archived configuration, and retains the locked properties, as discussed above, of the candidate configuration.","If, prior to commitment of the candidate configuration, control unit  determines that the session has failed, e.g., due to a network error (), the control unit executes a session failsafe, e.g., automatic execution of a rollback command (). The rollback command causes control unit  to undo the changes made when the archived configuration replaced the candidate configuration. The session failsafe allows control unit  to maintain synchronized candidate and operational configurations, thus preventing either configuration from entering an unknown state. In the event the session remains functional, web server  transmits a confirmed commit command.","Upon receiving the confirmed commit command (), control unit  replaces the operational configuration with the candidate configuration, i.e., the archived configuration (). In particular, management module  may create a temporary directory and copy the operational configuration stored in commit database  to the temporary directory. Next, management module  merges the candidate configuration with the copy of the operational configuration to generate a list of updated configuration objects. Management module  generates a configuration patch from the list of updated configuration objects and applies the patch to the operational configuration stored in commit database . Once the patch is applied, management module  starts timer  ().","After issuing the confirmed commit command, web server  performs tests on router  to determine whether router  is still operational after applying the configuration patch. Meanwhile, control unit  waits to receive a commit command from web server  (). In the event control unit  does not receive a commit command, management module  compares timer  to a pre-set time limit (). Control unit  continues to wait for the commit command as long as timer  is less than the time limit (\u201cNO\u201d branch). However, in the event that timer  exceeds the time limit, management module  reverts the operational configuration back to the previous operational configuration (). In other words, management module  undoes the effects of the configuration patch and further may undo the changes to the candidate configuration during the restoration process.","The results of the tests performed by web server  determine whether web server  issues the commit command. In the event the archived configuration is corrupt and causes router  to become inoperable, web server  is usually unable to issue the commit command to router . However, if router  is operational and the network is not adversely affected, web server  transmits the commit command to router . The commit command stops timer  and permanently replaces the operational configuration with the candidate configuration, i.e., the archived configuration.","In any of the above events, such as executing the session failsafe, reverting to the previous operational configuration and successful restoration of the archived configuration, control unit  unlocks the candidate configuration (). In this manner, router  provides a command set that may be utilized to reliably restore an archived configuration.",{"@attributes":{"id":"p-0085","num":"0088"},"figref":["FIG. 8","FIGS. 5 and 6"],"b":["28","22","28","60","68","28","114","26","116"]},"After determining the selected archived configuration and the selected network device, web server  accesses archive database  to retrieve the selected archived configuration (). Web server  also establishes a session with the selected router  (). Upon establishing a session web server  may issue a lock command (). In some embodiments, web server  may not issue a lock command as router  may automatically lock the candidate configuration upon receiving the archived configuration. In any event, web server  transmits the archived configuration to router  via the established session, e.g., by issuing the load configuration command (). Web server  may receive status confirming that the archived configuration successfully replaces the candidate configuration. Once the candidate configuration has been replaced, web server  issues a confirmed commit command to router  (), and performs tests to verify the status and general operation of router  (). Router , as discussed above, may become unreachable and\/or inoperable when the candidate configuration, i.e., the selected archived configuration, is committed. Web server  performs tests to determine whether router  is still reachable.","In the event router  passes the tests (), web server  issues a second commit command to router . The commit command as discussed above permanently restores the selected archived configuration in place of the operational configuration. In the event that router  does not pass the tests (), web server  may wait until router  undoes the changes made to the operation configuration. In any event, web server  issues an unlock command to unlock the candidate configuration ().","Various embodiments of the invention have been described. While these embodiments are described above in the context of a network device, the principles of the invention as broadly claimed herein may apply to any device, devices or systems undergoing restoration of an archived configuration. For example, in one embodiment, an archive system may restore an archived configuration to a device, such as a computer, in accordance with the principles of the invention. Thus, the embodiments as discussed above should be considered exemplary embodiment and not limit the scope of the invention. These and other embodiments are within the scope of the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
