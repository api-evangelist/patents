---
title: Sealing secret data with a policy that includes a sensor-based constraint
abstract: Technologies pertaining to limiting access to secret data through utilization of sensor-based constraints are described herein. A sensor-based constraint is a constraint that can only be satisfied by predefined readings that may be output by at least one sensor on a mobile computing device. If the sensor on the mobile computing device outputs a reading that satisfies the sensor-based constraint, secret data is provided to a requesting application. Otherwise, the requesting application is prevented from accessing the secret data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09411970&OS=09411970&RS=09411970
owner: Microsoft Technology Licensing, LLC
number: 09411970
owner_city: Redmond
owner_country: US
publication_date: 20110819
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["A factor contributing to the rapid proliferation of smart phones and other mobile computing devices is the incorporation of sensors into these devices. Specifically, mobile computing devices can be equipped with many different types of sensors, including, but not limited to, a geolocation sensor (e.g. a global positioning system (GPS) sensor), a camera, a microphone, a velocity sensor, an accelerometer, a proximity sensor, combinations thereof, and so on. The incorporation of such sensors into mobile computing devices has contributed to a rise in a number of applications that perform a service based at least in part upon readings from such sensors. In an example, a mapping application can receive a current location of a user (from a geolocation sensor in a mobile computing device of the user that outputs location data) and can present the user with a map of a region immediately surrounding such user, as well as driving directions to different locations, based upon the data from the geolocation sensor.","In conventional implementations of mobile computing devices there is little, if any, mechanism in place that authenticates that data output by sensors on mobile computing devices are authentic, and have not been subject to modification by a user or software executing on the mobile computing device. Pursuant to an example, an application executing on the mobile computing device may call an application programming interface (API) that is configured to enable retrieval of a sensor reading from a GPS sensor on the mobile computing device. The application, the user, or other malicious software can modify a value output by the GPS sensor, such that the value consumed by an application or a cloud service is inaccurate.","Conventionally there has been little, if any, concern regarding the lack of trustworthiness of sensor readings in mobile computing devices, as typically a user or software program has no reason to modify values output by a sensor on a mobile computing device. Continuing with the mapping application example set forth above, a user has no reason to attempt to deceive a mapping application about her true location, as doing so only prevents the user from receiving optimal services provided by a mapping cloud service. That is, if the user wishes to receive directions from a current location to an intended destination, the user has no incentive to modify a value output by a GPS sensor to mask her true location.","The following is a brief summary of subject matter that is described in greater detail herein. This summary is not intended to be limiting as to the scope of the claims.","Described herein are various technologies pertaining to sealing secret data with a policy that includes a sensor-based constraint, wherein the sensor-based constraint prevents unsealing of the data unless a sensor on a mobile-computing device outputs a reading that satisfies the constraint. Also described herein are various technologies pertaining to unsealing the secret data from the policy based at least in part upon a reading output from the sensor on the computing device.","A class of computer executable applications that are executed on computing devices that comprise at least one sensor may desirably limit access secret data unless a sensor-based constraint is satisfied. In an example, a laptop computing device may have a drive thereon that is desirably inaccessible (e.g., unable to be mounted) when a user of the laptop is not at a particular location (a location of the employer of the user of the laptop). To access the drive, the user may desirably retrieve a secret key or password that is inaccessible to the user unless the user is within a particular geographic region. When the user requests access to the drive, a geolocation sensor on the laptop can be called to generate a sensor reading. If, and only if, the sensor reading is a value that is within the predefined geographic range will the user be provided with the secret key or password that the drive to be mounted. If the value of the sensor reading from the geolocation sensor is outside the geographic region, then the secret key is not output, and the user is prevented from accessing the drive. Other exemplary applications that restrict access to secret data based upon a sensor-based constraint in a policy are set forth herein.","In an exemplary embodiment, a sensor-based constraint can be enforced through sealing and unsealing operations. A seal operation facilitates protecting secret data (e.g., a password or secret key) by generating ciphertext that is cryptographically secure against attacks, and can be decrypted by satisfying one or more constraints of a policy. An unseal operation facilitates decrypting the ciphertext and outputting the secret data if the one or more constraints of the policy have been satisfied. In the exemplary embodiments described herein, the policy includes a sensor-based constraint, such that the secret data can be unsealed from the policy if and only if a reading from at least one sensor satisfies the sensor-based constraint.","In an exemplary embodiment, the seal and unseal operations can be undertaken in a trusted portion of a mobile computing device, such as in secure hardware or software module, through utilization of hardware-assisted security (e.g., a hardware trusted platform module, ARM TrustZone technology, and virtualization support). For example, such a module can be a secure operating system, running either in the SecureWorld in ARM TrustZone enabled system, or in an emancipated virtual machine separated from the root virtual machine that is executing a less secure operating system of a mobile computing device in a virtualized system, etc. Additionally, readings output by sensors can be signed in the trusted portion of the mobile computing device to indicate that the sensor reading is the actual value output by the sensor and has not been modified by a user, an operating system, or malicious software executing on the mobile computing device.","With respect to the seal operation, a computer-executable application can set forth a policy that includes a sensor-based constraint, wherein the secret data is sealed with the policy (e.g., undecipherable) until the sensor-based constraint is satisfied. This constraint may be, for example, a location constraint, a proximity constraint, a velocity constraint, or the like. The output of the seal operation may be ciphertext that can be decrypted only through use of a sensor reading that satisfies the sensor-based constraint of the policy. In the unseal operation, a computer-executable application, upon initiation from a user, can request access to the secret data by obtaining a reading from a sensor that may satisfy the sensor-based constraint of the policy. If the sensor-based constraint is satisfied, the result of the unseal operation is return of the secret data to the application that requests such data.","Other aspects will be appreciated upon reading and understanding the attached figures and description.","Various technologies pertaining to restricting access to secret data unless and until a sensor-based constraint is satisfied will now be described with reference to the drawings, where like reference numerals represent like elements throughout. In addition, several functional block diagrams of exemplary systems are illustrated and described herein for purposes of explanation; however, it is to be understood that functionality that is described as being carried out by certain system components may be performed by multiple components. Similarly, for instance, a component may be configured to perform functionality that is described as being carried out by multiple components. Additionally, as used herein, the term \u201cexemplary\u201d is intended to mean serving as an illustration or example of something, and is not intended to indicate a preference.","As used herein, the terms \u201ccomponent\u201d and \u201csystem\u201d are intended to encompass computer-readable data storage that is configured with computer-executable instructions that cause certain functionality to be performed when executed by a processor. The computer-executable instructions may include a routine, a function, or the like. It is also to be understood that a component or system may be localized on a single device or distributed across several devices. Furthermore, the terms \u201ccomponent\u201d and \u201csystem\u201d are configured to encompass hardware that is configured to perform specified tasks, such as field programmable gate arrays (FPGAs).","With reference now to , an exemplary computing device  that is configured to seal and unseal secret data to and from a policy, wherein the policy includes a sensor-based constraint that is tied to at least one sensor on the computing device , is illustrated. The computing device  may be, in an exemplary embodiment, a mobile computing device, such as, but not limited to, a laptop computing device, a tablet computing device, netbook, a mobile media player, a mobile telephone, a digital camera, a digital video camera, or other suitable mobile computing device. The computing device  comprises a plurality of sensors -. The sensors - may be any suitable type of sensor that can be included in a mobile computing device, such as, but not limited to, a geolocation sensor (such as a GPS sensor), a proximity sensor that indicates a proximity of the computing device  to an entity such as a person, a thermometer, a humidity sensor, a velocity sensor, a depth sensor, an accelerometer, a gyroscope, or other suitable sensor. The sensors - can be configured to output sensor readings responsive to receiving requests for such readings from an operating system executing on the computing device  and\/or an application executing on the computing device .","The computing device  further comprises a data store , which may be a flash memory drive, a hard drive, a portion of memory, or the like. The data store  may comprise secret data , wherein, for instance, the secret data  may be a password, a cryptographic key, or other suitable data that is desirably kept secret from an application or user unless at least one sensor-based constraint is satisfied. The data store  may additionally comprise a policy , wherein the policy  includes the sensor-based constraint, and generally defines whether a user or application is authorized to access the secret data . For example, the policy  may desirably restrict access to the secret data  only to instances that the computing device  is located within a particular geographic region. The policy, then, can be satisfied by a sensor reading output from a geolocation sensor on the computing device . In another exemplary embodiment, the policy  may include a constraint that restricts access to the secret data  to instances that the velocity of the computing device  is beneath a threshold. In this example, the policy can be satisfied by a sensor reading output by a velocity sensor on the computing device . Various exemplary policies that can be put in place for different types of applications are set forth below for purposes of explanation, but are not intended to be limiting as to the scope of the hereto appended claims. Further, while the examples provided herein pertain to the policy  comprising sensor-based constraints, it is to be understood that the policy  may include other constraints, such as restricting access to secret data solely to an application executing on the computing device .","In an exemplary application, a company may provide its employees with laptop computers. The company, however, may wish to provide access to a certain drive on the laptop computer if, and only if, the laptop computer is located on the premises of the company. Accordingly, the secret data  may be a password or key that allows the user to access contents on the aforementioned drive (or allows the drive to be mounted by an operating system), while the policy  may include a sensor-based constraint that restricts access to the drive to situations where the computing device  is located on the premises of the company (as can be ascertained by a reading from a geolocation sensor).","In another example, the computing device  may be a mobile telephone, and it may be desirable to prevent a user of the mobile telephone from using a text messaging application if the mobile telephone is traveling at velocities above a threshold (thereby indicating that the user of the mobile telephone is in an automobile). In such an exemplary embodiment, the secret data  may be a key that enables the application to be executed on the computing device , thereby allowing the user to send and receive text messages. The policy , then, includes a sensor-based constraint that can be satisfied by a reading from a velocity sensor on the computing device .","In still yet another example, the computing device  may be a mobile computing device and a user thereof, to conserve battery resources and\/or to prevent execution of malicious software (malware), may desirably restrict execution of applications to instances where the user is proximate to the mobile telephone. In this example, the secret data  may be a key that is presented by an application to an operating system on the computing device , wherein the operating system only allows the application to execute if the key is presented. The policy  may desirably restrict access to the key to instances when a user is proximate to the mobile computing device, and accordingly the sensor-based constraint of the policy  may be satisfied by a reading from a proximity sensor on the computing device .","In another example, a web based service, such as a banking service, may desirably restrict access to services to users who are located in a particular geographic region (in a certain country) in an effort to restrict unauthorized access to banking data of a user. Accordingly, the secret data  may be a password that is used to obtain access to the banking service, while the policy  desirably restricts access to situations where the user is in the specified country. Therefore, the sensor-based constraint of the policy  can be satisfied by a reading output by a geolocation sensor on the computing device .","In yet another example, a web-based service may provide a user with an ability to reset passwords (e.g., when a user has forgotten a password the password can be reset). The web-based service provider, however, to facilitate prevention of password theft, may desirably restrict the password reset functionality to users that are located in a specified geographic region. Here, the secret data  is a key that allows the password reset function to operate. The sensor-based constraint of the policy  can be satisfied by a reading from a geolocation on the computing device . From these examples set forth above, it can be readily ascertained that there are many situations where it may be desirable to restrict access to the secret data  based upon at least one sensor reading output by one or more of the sensors - on the computing device .","The computing device  additionally comprises a memory  that includes a plurality of instructions and a processor  that is configured to execute the instructions in the memory . In an example, the processor  may support a reduced instruction set, as is common with the many mobile computing devices. For instance, the processor  may support a 32 bit instruction set. Other lengths of instruction sets are contemplated, and it can be ascertained that the computing device  may optionally be any suitable computing device that can be classified as a reduced instruction set computing device.","The memory  includes an operating system  that is installed thereon. An application  can be executed through utilization of the operating system . For example, the application  may be a browser, a word processing application, a text messaging application, or any other suitable application that can execute on a computing device that is supported by the operating system . While the application  is shown as being separate from the operating system , as used herein, the term \u201capplication\u201d is intended to include functionality that may be supported internally by the operating system , such as access to particular computing resources on the computing device  (e.g. a disk space, memory locations, . . . ).","The application , either autonomously or responsive to receipt of a user action, can indicate that the secret data  is desirably sealed with the policy . In other words, the application  can indicate that it is desirable to protect the confidentiality of the secret data  against the policy . In an example, the application  may be in communication with another computing device (e.g. a network server or collection of servers), and the server can provide the secret data  and\/or the policy  in a cryptographically secure manner to the computing device . The application  may then request that the data  be sealed with the policy . Again, the policy  can define generally whether the application  (or the user of the computing device ) is authorized to access the secret data  and can include at least one sensor-based constraint that can be satisfied by a reading output by at least one of the sensors -.","The memory  can additionally comprise a receiver component  that receives a request to seal the secret data  to the policy . Responsive to receiving the request to seal the secret data  with the policy  from the application , the receiver component  can receive the secret data  and the policy  from the data store . A sealer component , that is in communication with the receiver component , can seal the secret data  with the policy  responsive to the receiver component  receiving the request to seal the secret data  to the policy . In an exemplary embodiment, the output of the sealer component  can be ciphertext  that is retained in the data store . The ciphertext , in an exemplary embodiment, can be an encryption of the secret data , which is encrypted based at least in part upon the policy . Thereafter, the sealer component  can cause the data  (and optionally the policy ) to be deleted from the data store , while the ciphertext  is retained.","Subsequently, the application  and\/or the user of the computing device  may desirably retrieve the secret data  (which has been deleted). The memory  can additionally comprise a retriever component  that receives, from the application  and\/or the user, a request to unseal the secret data  from the policy . Responsive to receiving such a request, the retriever component  retrieves a sensor reading from at least one of the sensors - on the computing device , wherein the at least one of the sensors - can output a reading that can satisfy the sensor-based constraint of the policy . In an example, the application  can specify to the retriever component  which of the sensors - can output a reading that can satisfy the sensor-based constraint.","The memory  also comprises an unsealer component  that unseals the secret data  from the policy  and outputs the secret data  to the application  and\/or the user if, and only if, the sensor reading from the at least one of the sensors - satisfies the sensor-based constraint that is included in the policy . In an example, the policy  can specify a range of values and the sensor reading output by the at least one of the sensors  through  may have a value that matches one of the values in the range of values specified in the policy . It is to be understood that the unsealer component  may consider other factors when choosing whether to provide access to the secret data  to the application . For instance, a reading from a sensor may be required to be generated within a threshold amount of time from the request to unseal the secret data  from the policy . The act of unsealing may include decrypting the ciphertext  through utilization of at least one of the values output by the sensors -.","In an exemplary embodiment, an algorithm that can be executed by the sealer component  can be as follows:",{"@attributes":{"id":"p-0036","num":"0035"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"CipherText Seal(Data, Policy, P) {"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Generate symmetric key S"]},{"entry":[{},"Result = SymmetricEncryption(Data); \/\/ using the symmetric key S"]},{"entry":[{},"Result += SymmetricEncryption(Policy); \/\/ using the symmetric"]},{"entry":[{},"key S"]},{"entry":[{},"Result += PublicKeyEncryption(S); \/\/ using the public key P"]},{"entry":[{},"Destroy S, Data,;"]},{"entry":[{},"Return Result;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"b":["118","108","110","127"]},"Additionally, in another exemplary embodiment the algorithm that can be executed by the unsealer component  when unsealing the secret data  from the policy  can be as follows:",{"@attributes":{"id":"p-0038","num":"0037"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Data Unseal(Ciphertext) {"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CurrentReading= ReadTrustworthySource(now);"]},{"entry":[{},"S = PrivateKeyDecryption(Result); \/\/ decrypt symmetric key using"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"the private key K"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Policy = SymmetricKeyDecryption(Result); \/\/ using the symmetric"]},{"entry":[{},"key S"]},{"entry":[{},"If CurrentReading does not obey Policy"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Return Error(\u201cCurrent Reading violates Policy\u201d};"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Data = SymmetricKeyDecryption(Result); \/\/ using the symmetric"]},{"entry":[{},"key S"]},{"entry":[{},"Return Data;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"b":["118","102","104"]},"The computing device , as shown, includes the operating system , the application , the receiver component , the sealer component , the retriever component , and the unsealer component , together in the memory . In another exemplary embodiment, to improve security with respect to the secret data , the policy  and\/or the ciphertext , at least the receiver component , the sealer component , the retriever component  and the unsealer component  may be separated from the operating system  and\/or the application , logically, physically, or both. For instance, as will be shown and described herein, the aforementioned components , , , and  can reside and execute across hardware that is different than what is used to execute the operating system  and\/or the application . For instance, the components - can reside\/execute in a first core in a system on a chip (SoC) system, while the operations system  and application  can reside and execute in a second core in such system.","In another exemplary embodiment, the memory  can be partitioned logically, such that the operating system  and\/or the application  have no access to the portions of the memory  utilized by the receiver component , the sealer component , the retriever component  and\/or the unsealer component . This can be effectuated, for example, through utilization of one or more virtual machines. Additionally, to reduce or eliminate the possibility of modification of readings output by one or more of the sensors -, various technologies can be employed to sign sensor readings to verify that the values have been output by the sensors - and are unmodified. Exemplary techniques for causing sensors to generate trustworthy readings are described in U.S. patent application Ser. No. 12\/823,150 filed on Jun. 25, 2010, and entitled, \u201cTRUSTED SENSORS\u201d, the entirety of which is incorporated herein by reference.","With reference now to , an exemplary sensor  is illustrated. The sensor  receives a request for a sensor reading (e.g. from the receiver component  and\/or the retriever component ). The sensor  includes a signer component , which comprises dedicated hardware that generates a signature and assigns such signature to a reading output by the sensor  to indicate to a recipient process\/application that the reading is trustworthy. In other words, the signature indicates to the recipient application or process that the value output by the sensor  is accurately reflected in the sensor reading and has not been modified by a user or malicious software. In an exemplary embodiment, the sensor  may be any one of the sensors -.","With reference now to , an exemplary system  that facilitates sealing and unsealing the secret data  with and from the policy , respectively, is illustrated. In an exemplary embodiment, the system  may reside on a system on chip (SOC) configuration but is a low-cost alternative to adding an additional dedicated security core to such system. The system  can comprise a first virtual processor  and a second virtual processor . The first virtual processor  and the second virtual processor  are backed by a hardware-implemented access controller , which allows an application or processor core to switch between two different states, which can be referred to herein as \u201cworlds,\u201d to prevent information from leaking from trusted world to an untrusted world. A switch between worlds is generally orthogonal to all other capabilities of a processor. Accordingly, each world can operate independently of the other while using the same core.","The system  further comprises a memory , which can be a portion of the core that includes the first virtual processor  and the second virtual processor . The memory  and other peripherals can be made aware of the different worlds (an untrusted world and a trusted world) of the core and may use this information to provide access control to the secret data  and other code on the system .","In an exemplary embodiment, an operating system of the computing device  can execute in the first virtual processor  in the less secure world, while the receiver component , the sealer component , the retriever component  and the unsealer component  can be executed by the second virtual processor  in the more secure world. Accordingly, pursuant to an example, I\/O devices, such as the sensors -, can be assigned to the more secure world, thereby creating a secure data source (such as a location source). Similarly, the components - can execute in the more secure world to obtain greater memory protection.","To perform an unseal, code, such as the application  or the operating system  executing in the less secure world, can make a call to seal or unseal the secret data  with or from the policy , respectively, to the more secure world. Inside the more secure world, for instance during an unseal operation, the unsealer component  can receive a reading from a sensor, compare the reading with contents of the policy  specified at the time that the policy was sealed with the data, and continue to decrypt the data if the policy is satisfied. The system  can additionally comprise a trusted platform module (not shown), which can include a storage root key (SRK). In an example, the TPM may be a hardware TPM, a software implementation of a TPM that executes in the secure world (e.g., a firmware TPM). Accordingly, the secret data  can be sealed with the policy  using the SRK of the TPM.","With reference now to , another exemplary system  that facilitates securely sealing and unsealing the secret data  with and from the policy , respectively, is illustrated. The system  comprises a hypervisor manager . The hypervisor manager  refers to a virtualization technology that offers an emancipated virtual machine . The emancipated virtual machine  is a runtime environment, whose memory region is isolated from the remainder of a computing system including the memory region corresponding to a root virtual machine . For instance, the root virtual machine  can be charged with executing the operating system  and applications that conform thereto.","The system  further includes a hypervisor  that offers relatively strong memory protection and assigns a source of data (e.g., at least one of the sensors -) securely to the emancipated virtual machine . The system  can additionally comprise a TPM  which can employ remote attestation to attest that the hypervisor  with the strong memory protection (configured to enforce security properties) is being run. The emancipated virtual machine  can then execute the seal and unseal operations securely as has been described above, and can further obtain trustworthy readings from one or more of the sensors -.","Pursuant to an example, the operating system  and\/or the application  can execute in the root virtual machine  and can receive and\/or generate the secret data  and\/or the policy . The secret data  and the policy  may then be passed to the emancipated virtual machine , and the sealer component  can seal the secret data  with the policy  using the SRK of the TPM . Again, this can result in the generation of ciphertext, which can be provided back to the operating system  and\/or the application  executing in the root virtual machine ","Subsequently, it may be desirable to unseal the secret data  from the policy . The unsealer component  in the emancipated virtual machine  can receive the ciphertext, and the retriever component  can retrieve a trustworthy sensor reading from one or more of the sensors -. The unsealer component  can further use the SRK of the TPM  and can unseal the secret data  based at least in part upon the secure sensor reading and the SRK. For instance, the TPM can use the SRK to unseal the secret data  from the policy  on behalf of the unsealer component . The secret data  may then be passed back to the application  and\/or the operating system  in the root virtual machine .","With reference now to , various exemplary methodologies are illustrated and described. While the methodologies are described as being a series of acts that are performed in a sequence, it is to be understood that the methodologies are not limited by the order of the sequence. For instance, some acts may occur in a different order than what is described herein. In addition, an act may occur concurrently with another act. Furthermore, in some instances, not all acts may be required to implement a methodology described herein.","Moreover, the acts described herein may be computer-executable instructions that can be implemented by one or more processors and\/or stored on a computer-readable medium or media. The computer-executable instructions may include a routine, a sub-routine, programs, a thread of execution, and\/or the like. Still further, results of acts of the methodologies may be stored in a computer-readable medium, displayed on a display device, and\/or the like. The computer-readable medium may be any suitable computer-readable storage device, such as memory, hard drive, CD, DVD, flash drive, or the like. As used herein, the term \u201ccomputer-readable medium\u201d is not intended to encompass a propagated signal.","With reference now to , an exemplary methodology  that facilitates unsealing secret data from a policy based at least in part upon a reading output by a trustworthy sensor is illustrated. The methodology  begins at , and at  a request to access secret data is received from an application executing on a computer.","At , responsive to receipt of the request, a policy is retrieved that defines whether the user and\/or application is authorized to access the secret data. The policy includes a constraint that can only be satisfied by a reading from a sensor on the computer. In an exemplary implementation, the policy can be encrypted through utilization of a secret key and may be securely unencrypted responsive to receipt of the request to access the secret data.","At , a sensor reading is retrieved from the at least one sensor on the mobile computing device of the user. As described above, the sensor reading may be trustworthy, in that such reading can be signed to indicate that the sensor reading is unmodified by a user or malicious software. In an example, the sensor reading may be a location from a geolocation sensor.","At , a determination is made regarding whether the application is authorized to access the secret data. This determination can be made by comparing the sensor-based constraint with the sensor reading output from the at least one sensor. In an example, determination can be made based at least in part upon a comparison between a geographic range specified in the policy and a geographic location output by a geolocation sensor.","If it is determined at  that the application is authorized to access the data, then at  the application is provided with the secret data. If it is determined at  that the application is not authorized to access the secret data, then at  a message can be output to the user indicating that the application is currently not authorized to access the secret data. The methodology  completes at .","Turning now to , an exemplary methodology  that facilitates sealing secret data with a policy is illustrated. The methodology  starts at , and at  secret data is received. For example, the secret data may be user-generated secret data, such as a password. In another exemplary embodiment, the secret data may be a cryptographic key generated through any suitable cryptographic technique.","At , a policy is received that includes a constraint pertaining to at least one sensor reading. At , the data is sealed with the policy, such that the secret data is inaccessible to an application unless the constraint pertaining to the at least one sensor reading is satisfied. The methodology  completes at .","Turning now to , an exemplary methodology  that facilitates unsealing secret data from a policy is illustrated. The methodology  starts at , and at  a request to unseal secret data is received from a computer executable application. At , a reading is obtained from at least one sensor on a mobile computing device. At , the reading is signed to indicate that the reading is accurate (that the reading output by the sensor has not been modified by a user or malicious software).","At , the data is unsealed from the policy based, at least in part upon the signed reading from the sensor. The methodology  completes at .","Now referring to , a high-level illustration of an exemplary computing device  that can be used in accordance with the systems and methodologies disclosed herein is illustrated. For instance, the computing device  may be used in a system that supports sealing secret data with a policy. In another example, at least a portion of the computing device  may be used in a system that supports unsealing secret data from a policy. The computing device  includes at least one processor  that executes instructions that are stored in a memory . The memory  may be or include RAM, ROM, EEPROM, Flash memory, or other suitable memory. The instructions may be, for instance, instructions for implementing functionality described as being carried out by one or more components discussed above or instructions for implementing one or more of the methods described above. The processor  may access the memory  by way of a system bus . In addition to storing executable instructions, the memory  may also store cryptographic keys, policies, readings output by sensors, etc.","The computing device  additionally includes a data store  that is accessible by the processor  by way of the system bus . The data store may be or include any suitable computer-readable storage, including a hard disk, memory, etc. The data store  may include executable instructions, policies, ciphertext, reading from sensors, etc. The computing device  also includes an input interface  that allows external devices to communicate with the computing device . For instance, the input interface  may be used to receive instructions from an external computer device, from a user, etc. The computing device  also includes an output interface  that interfaces the computing device  with one or more external devices. For example, the computing device  may display text, images, etc. by way of the output interface .","Additionally, while illustrated as a single system, it is to be understood that the computing device  may be a distributed system. Thus, for instance, several devices may be in communication by way of a network connection and may collectively perform tasks described as being performed by the computing device .","It is noted that several examples have been provided for purposes of explanation. These examples are not to be construed as limiting the hereto-appended claims. Additionally, it may be recognized that the examples provided herein may be permutated while still falling under the scope of the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
