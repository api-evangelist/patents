---
title: Method and system for employing a hierarchical monitor tree for monitoring system resources in a data processing environment
abstract: A method, apparatus, and system are provided for monitoring of system resources using a monitor tree. According to one embodiment, a resource may be associated with a monitor managed bean at a node of a monitor tree. Monitoring information regarding the associated resources may be requested from a runtime managed bean, and the monitoring information may be received by the monitor managed bean at the node of the monitor tree.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07756968&OS=07756968&RS=07756968
owner: SAP AG
number: 07756968
owner_city: Walldorf
owner_country: DE
publication_date: 20031230
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","Embodiments of this invention generally relate to system resource monitoring and more particularly, to using a hierarchical monitor tree for monitoring of the resources.","2. Description of Related Art","In many modern computing systems and networks (systems), monitoring of system resources and components of significant importance to ensure not only the reliability and security of information flow, but also to promptly detect system deficiencies so that they are corrected in a timely manner. Typically, conventional client-server monitoring systems or architectures are used to perform monitoring of the resources.",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1","b":["100","102","104","110","102","106","108","104","102","106","108","104","110","102","106","108","104","104"]},"Conventional monitoring systems, however, do not provide real-time, continuous, or adequate monitoring of the resources, as they are limited in performance because of, for example, architectural limitations, inflexibility in levels of monitoring, lack of convenience in viewing the monitoring data, low level programming interface, and having the resources shared by all the software running on the system including virtual machines.","A method, apparatus, and system are provided for monitoring of system resources using a monitor tree. According to one embodiment, a resource may be associated with a monitor managed bean at a node of a monitor tree. Monitoring information regarding the associated resources may be requested from a runtime managed bean, and the monitoring information may be received by the monitor managed bean at the node of the monitor tree.","A method, apparatus, and system are provided for monitoring of system resources using a monitor tree. Java objects, such as managed beans may be used for monitoring of the resources. The managed beans may include a combination of monitor managed beans (monitor beans) and runtime managed beans (runtime beans or resource beans). According to one embodiment, a monitor tree may be generated using instructions from a file from a central database. The monitor tree may include a number of nodes, each of the nodes having a monitor bean and a resource associated with the monitor bean. The monitor bean may request monitoring information from a runtime bean which may, in real-time, monitor one or more of the resources including the resource associated with the monitor tree. The runtime bean may provide, also in real-time, the monitoring information to the monitor bean at the node of the tree. The monitored resources may include Java resources associated with a Java 2 Platform, Enterprise Edition (J2EE) engine. Throughout this document, the use of the term \u201cmanaged beans\u201d in any combination may refer to Java Managed Beans (or Java MBeans). It should be noted, however, that the underlying principles of the invention are not limited to any particular application server specification or programming language.","According to one embodiment, runtime beans continuously provide monitoring information to monitor beans. According to another embodiment, the runtime beans provide the monitoring information to the monitor beans in response to a request from the monitor beans. According to yet another embodiment, the runtime beans provide a notification signal (runtime notification) to the monitor beans indicating the availability of the monitoring information. The monitor bean may, in response to the runtime notification, request the monitoring information, which the runtime bean will provide. According to yet another embodiment, a timer may be employed to provide a notification signal (timer notification) to the monitor beans to request the monitoring information from the runtime beans. The timer notification may be based on, for example, predetermined time period or availability of the monitoring information.","According to one embodiment, a monitor service may be employed to connect the monitor tree with a central database and client-level applications. The client-level applications may include, for example, a computing center management system (\u201cCCMS\u201d), a well known management and monitoring architecture designed by SAP AG for use in R\/3 systems. Additional and\/or alternate destinations may include administrative tools\/viewers, standard Web browsers, and third party tools\/viewers. As described in detail below, one embodiment of the administration tools includes a monitor viewer for displaying the monitoring information (e.g., based on the structure of the monitoring tree). Client-level applications may also be used to originate and send request to the monitor tree to request monitoring information regarding various monitored resources.","In the following description, numerous specific details such as logic implementations, opcodes, resource partitioning, resource sharing, and resource duplication implementations, types and interrelationships of system components, and logic partitioning\/integration choices may be set forth in order to provide a more thorough understanding of various embodiments of the present invention. It will be appreciated, however, to one skilled in the art that the embodiments of the present invention may be practiced without such specific details, based on the disclosure provided. In other instances, control structures, gate level circuits and full software instruction sequences have not been shown in detail in order not to obscure the invention. Those of ordinary skill in the art, with the included descriptions, will be able to implement appropriate functionality without undue experimentation.","Various embodiments of the present invention will be described below. The various embodiments may be performed by hardware components or may be embodied in machine-executable instructions, which may be used to cause a general-purpose or special-purpose processor or a machine or logic circuits programmed with the instructions to perform the various embodiments. Alternatively, the various embodiments may be performed by a combination of hardware and software.","Various embodiments of the present invention may be provided as a computer program product, which may include a machine-readable medium having stored thereon instructions, which may be used to program a computer (or other electronic devices) to perform a process according to various embodiments of the present invention. The machine-readable medium may include, but is not limited to, floppy diskette, optical disk, compact disk-read-only memory (\u201cCD-ROM\u201d), magneto-optical disk, read-only memory (\u201cROM\u201d) random access memory (\u201cRAM\u201d), erasable programmable read-only memory (\u201cEPROM\u201d), electrically erasable programmable read-only memory (\u201cEEPROM\u201d), magnetic or optical card, flash memory, or another type of media\/machine-readable medium suitable for storing electronic instructions. Moreover, various embodiments of the present invention may also be downloaded as a computer program product, wherein the program may be transferred from a remote computer to a requesting computer by way of data signals embodied in a carrier wave or other propagation medium via a communication link (e.g., a modem or network connection).",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 2","b":["202","206","216"]},"The processor bus , also known as the host bus or the front side bus, may be used to couple the processors - with the system interface . The processor bus  may include a control bus , an address bus , and a data bus . The control bus , the address bus , and the data bus  may be multidrop bi-directional buses, e.g., connected to three or more bus agents, as opposed to a point-to-point bus, which may be connected only between two bus agents.","The system interface  may be connected to the processor bus  to interface other components of the system  with the processor bus . For example, system interface  may includes a memory controller  for interfacing a main memory  with the processor bus . The main memory  typically includes one or more memory cards and a control circuit (not shown). System interface  may also include an input\/output (I\/O) interface  to interface the I\/O bridge  with the processor bus . The I\/O bridge  may operate as a bus bridge to interface between the system interface  and an I\/O bus . One or more I\/O controllers  and I\/O devices  may be connected with the I\/O bus , as illustrated. I\/O bus  may include a peripheral component interconnect (PCI) bus or other type of I\/O bus.","The system  may include a dynamic storage device, referred to as main memory , or a random access memory (RAM) or other devices coupled to the processor bus  for storing information and instructions to be executed by the processors -. The main memory  also may be used for storing temporary variables or other intermediate information during execution of instructions by the processors -. System  may include a read only memory (ROM) and\/or other static storage device coupled to the processor bus  for storing static information and instructions for the processors -.","The main memory  may include a wide variety of memory devices including read-only memory (ROM), erasable programmable read-only memory (EPROM), electrically erasable programmable read-only memory (EEPROM), random access memory (RAM), non-volatile random access memory (NVRAM), cache memory, flash memory, and other memory devices. The main memory  may also include one or more hard disks, floppy disks, ZIP disks, compact disks (e.g., CD-ROM), digital versatile\/video disks (DVD), magnetic random access memory (MRAM) devices, and other system-readable media that store instructions and\/or data. The main memory  may store program modules such as routines, programs, objects, images, data structures, program data, and other program modules that perform particular tasks or implement particular abstract data types that facilitate system use.","The I\/O device  may include a display device (not shown), such as a cathode ray tube (CRT) or liquid crystal display (LCD), for displaying information to an end user. For example, graphical and\/or textual indications of installation status, time remaining in the trial period, and other information may be presented to the prospective purchaser on the display device. The I\/O device  may also include an input device (not shown), such as an alphanumeric input device, including alphanumeric and other keys for communicating information and\/or command selections to the processors -. Another type of user input device includes cursor control, such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to the processors - and for controlling cursor movement on the display device.","The system  may also include a communication device (not shown), such as a modem, a network interface card, or other well-known interface devices, such as those used for coupling to Ethernet, token ring, or other types of physical attachment for purposes of providing a communication link to support a local or wide area network, for example. Stated differently, the system  may be coupled with a number of clients and\/or servers via a conventional network infrastructure, such as a company's Intranet and\/or the Internet, for example.","It is appreciated that a lesser or more equipped computer system than the example described above may be desirable for certain implementations. Therefore, the configuration of system  will vary from implementation to implementation depending upon numerous factors, such as price constraints, performance requirements, technological improvements, and\/or other circumstances.","It should be noted that, while the embodiments described herein may be performed under the control of a programmed processor, such as processors -, in alternative embodiments, the embodiments may be fully or partially implemented by any programmable or hardcoded logic, such as field programmable gate arrays (\u201cFPGAs\u201d), TTL logic, or application specific integrated circuits (\u201cASICs\u201d). Additionally, the embodiments of the present invention may be performed by any combination of programmed general-purpose computer components and\/or custom hardware components. Therefore, nothing disclosed herein should be construed as limiting the various embodiments of the present invention to a particular embodiment wherein the recited embodiments may be performed by a specific combination of hardware components.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 3","b":["300","310","320","330","310","320","330","310","320","330","300","300"]},"The distributed services level  may serve as an interface between the JMX architecture  and one or more users or clients. As illustrated, the distributed services level  may include one or more user terminals -. One or more of the user terminals - to collect and gather user input and send it to the agent level  over a network connection. Network connection may be a wired or wireless connection to a Local Area Network (LAN), a Wide Area Network (WAN), a Metropolitan Area Network (MAN), an intranet, and\/or the Internet. Distributed services level terminals - may include personal computers, notebook computers, personal digital assistants, telephones, and the like. According to one embodiment in which network connection may connect to the Internet, one or more of the user terminals - may include a Web browser (e.g., Internet Explorer or Netscape Navigator) to interface with the Internet.","According to one embodiment, the distributed services level  may also include management applications , such as a JMX-compliant management application, a JMX manager, and\/or a proprietary management application. The management applications  may also include one or more graphical management applications, such as a visual administrator, operating to, for example, retrieve and display information received from the agent level  and\/or the instrumentation level .","The visual administrator may include a monitor viewer to display such information. Management applications  may also include third party tools including a file system to store the information and may also include a Graphical User Interface (\u201cGUI\u201d)-based monitor viewer to display the information. The distributed services level  may also include the CCMS system described above.","The agent level  may include one or more application servers -. An application server may refer to a computing device that performs data processing. The agent level  may also include a computing device (e.g., a dispatcher) to perform load balancing among application servers -. According to one embodiment in which the agent level  exchanges information with the distributed services level  via the Internet, one or more of the application servers - may include a Web application server. According to one embodiment, the application servers - may be implemented according to the Java 2 Enterprise Edition Specification v1.4, published on Jul. 12, 2002 (\u201cthe J2EE Standard\u201d). In one embodiment of the invention, the management techniques described herein are used to manage resources within a \u201ccluster\u201d of server nodes. An exemplary cluster architecture is described below with respect to . However, the underlying principles of the invention are not limited to any particular application server architecture.","The applications servers - may include one or more dedicated Java Managed Bean (\u201cMBean\u201d) servers having agent services. According to one embodiment, for and at each Java virtual machine (\u201cJVM\u201d) with managed resources, there may be one or more agents operating at the agent level . The one or more agents may include the one or more MBean servers, agent services, a set of MBeans, one or more connectors, and\/or one or more protocol adaptors. An MBean Server may include a registry for MBeans and act as a single entry point for calling MBeans in a uniform fashion from management applications at other JVMs.","The instrumentation level  may provide a data storage medium for the JMX architecture . As illustrated, according to one embodiment, the instrumentation level  may include one or more database management systems (\u201cDBMS\u201d) - and data sources -. According to one embodiment, the data sources - may include databases and\/or other systems capable of providing a data store.","Furthermore, according to one embodiment, the instrumentation level  may include one or more hosts including one or more resources having MBeans, such as instrumentation MBeans. The instrumentation level  may make Java objects available to management applications . The Java objects instrumented according to the JMX-standard may include MBeans. According to one embodiment, the resources represented by MBeans may include managed resources . The managed resources  may include a kernel, a server component, or the like. MBeans may expose a management interface including constructors, attributes, operations, and notifications.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 4","b":["400","406","406","406","412"]},"According to one embodiment, various services of the monitoring service  may include monitoring of the resources, gathering of the monitoring data relating to the monitored resources, and maintaining of the monitoring data . The maintaining of the monitoring data  may include maintaining history and providing alerts when various resources, such as parameters, applications, or components reach a critical state, and such features may be enabled or disabled depending on when and whether the J2EE engine  is connected to the CCMS  via CCMS agent  with shared memory , directly or indirectly, coupled with the CCMS agent  and CCMS connector .","According to one embodiment, the JMA  may include the monitoring service  and one or more JMX-based monitor servers (JMX monitors). The monitoring service  may help establish a connection between a JMX monitor and the various components of the JMA . According to one embodiment, JMX monitors may reside and work on separate or remote Java virtual machines (JVMs) to collect data from cluster elements, and report information and statistics regarding the cluster nodes and their components to, for example, the visual administrator  having a monitor viewer , and\/or to the CCMS  via the CCMS agent , and to various other third party tools. The CCMS , the visual administrator , and other third party tools may reside generally on the client side , while other components, as illustrated, may reside on the server side .",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 5","FIG. 4"],"b":["500","502","510","514","406","502","420","414","416","416","502"]},"The data collected may include information and statistics related to, for example, applications, server parameters, cluster nodes and their components of the J2EE engine. According to one embodiment, the collected data may also be reported to the CCMS  via a CCMS agent , and\/or to the third party tools . In one embodiment, the third party tools  include a file system to, for example, temporarily store the collected data in a specified file format such as, for example, an Extensible Markup Language (\u201cXML\u201d) format or a HyperText Markup Language (\u201cHTML\u201d) format. The collected data may subsequently be reported to the components on the client-side  (e.g., in an XML or HTML format.","According to one embodiment, the expected overhead of the JMA  may vary according to its functionality. For example, the overhead may be light when reporting to the CCMS  or the third party tools , as opposed to when reporting to the visual administrator . Furthermore, the larger the requesting and\/or reporting interval of the monitor server , the smaller the expected overhead may be. The expected overhead may be relatively higher when using the monitor viewer  of the visual administrator  to actively retrieve and view the monitoring data.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 6","b":["600","602","604","608","600","610","610","602"]},"According to one embodiment, managed beans (MBeans or beans) (e.g., runtime managed beans or resources beans) - may be used to provide continuous monitoring of various resources - associated with a Java 2 Platform, Enterprise Edition (J2EE) engine, such as the J2EE  of . The resources - include a kernel, services, interfaces, and libraries for dispatchers and servers, such as the dispatcher  and servers -.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 7","b":["714","700","720","600","708","704"]},"According to one embodiment, JMA  provides monitoring of the Java 2 Platform, Enterprise Edition (J2EE) engine  (see, e.g., ), and its associated resources , including but not limited to various managers, services, components, such as a kernel, interfaces, libraries for each of the dispatchers and servers, network connections, memory consumption, threads, classloaders, database connections, database transactions, HyperText Transport Protocol (\u201cHTTP\u201d) cache, Java Messaging Service (\u201cJMS\u201d) queues and topics, and sessions.","For monitoring of the resources , the JMA  may employ a monitor service  having modules, servers, and\/or interfaces to connect the monitoring side with the rest of the JMA , including the central database  and client-side applications, such as the visual administrator  and CCMS . The monitoring architecture may include a managed bean server (bean server) , a plurality of monitor managed beans (monitor beans)  and\/or runtime managed beans (runtime beans) . In one embodiment, the runtime beans  register with the bean server  to provide monitoring of the underlying resources  at runtime. The bean server  may include a container for the monitor beans  and the runtime beans , to provide them access to various resources  and management applications , .","To provide Java objects (e.g., monitor beans  and runtime beans ) to various applications ,  and to use the bean server  for such purposes, the applications ,  may be made available via the distributed services level (e.g., distributed services level  of ) of the JMX-based architecture (e.g., JMA ). For example, well-known protocols such as HTTP may be used to communicate with the bean server  via an appropriate protocol adapter that may translate operations into representations in a given protocol. In addition, one or more connectors may be used to communicatively couple the applications ,  to the bean server  using a proprietary protocol.","The JMA  may be spread into three levels of the JMX architecture including a distributed services level , an agent level , and an instrumentation level  (see, e.g., ). The instrumentation level may include, for example, the monitor and runtime beans , , the agent level may include, for example, the bean server , and the distributed services level may include, for example, various applications , , adaptors, and connectors.","According to one embodiment, various Java resources  at the agent level may be included as an external library. A JMX service module (jmx_service) may provide some of the functionality from the distributed services level, and may create an instance of the bean server  on each of the nodes in one or more clusters and provide local and cluster connections to all of them. The monitor beans  may be registered clusterwide. As such, a user or client may work with the bean server  transparently (e.g., from the user's perspective there may appear to be only one bean sever  showing all monitor beans  of the cluster). In addition, to receive JMX notifications clusterwide, a notification service module (jmx_notification) may be employed in combination with the JMX service.","The bean server  may include a registry of the monitor and runtime beans -, and the bean server  may serve as a single entry point for calling the monitor and runtime beans - in a uniform fashion from applications ,  to monitor the resources , and collect or gather the monitoring data or information associated with the monitored resources . According to one embodiment, the bean server  may reside at a particular Java virtual machine (JVM) and may call the registered monitor and runtime beans - from the same JVM or other JVMs. According to one embodiment, the bean server  may not be limited to one bean server  and may include multiple managed bean servers. According to one embodiment, various modules of the monitor service  may also reside at the same JVM along with the bean server , or may reside at other one or more JVMs that may be remotely located.","According to one embodiment, the resources  including kernel resources, libraries, interfaces, and services may be monitored using the runtime and monitor beans - registered with the bean server . To monitor the resources , including arbitrary Java resources, and be manageable, a management interface may be provided, and objects (e.g., monitor bean  and runtime bean ) that implement such management interface may be registered with the bean server . The bean server , as previously described, may then serve as a container for the monitor bean  and the runtime bean , and provide them with access to the resources  to be monitored.","According to one embodiment, the runtime bean  (also sometimes referred to herein as a \u201cresource\u201d bean) may provide continuous or periodic monitoring of the resources  and may provide dynamic resource notifications or responses including information regarding the resources  to each of the monitor beans . According to one embodiment, the monitor service  may retrieve an Extensible Markup Language (XML) file , having semantics and installation directives on how a monitor tree  is created, from the database  to create the monitor tree . The monitor tree  may then be generated with various nodes, such as the node . Each of the nodes includes one or more monitor beans  associated with one or more resources .","According to one embodiment, the monitor bean  at the node  may request  information regarding its associated resource  from the runtime bean  associated with the resource. For example, the monitor bean  may invoke a method or request  during runtime to retrieve monitoring data from the runtime bean , and the runtime bean  may respond or provide a notification including the requested information  to the monitor bean  regarding the associated resource . According to another embodiment, the information  regarding the associated resource  may be provided periodically as predetermined and pre-set using a timer . The timer  may include predetermined criteria including a predetermined time period for periodically providing information  from the runtime bean  to the monitor bean .","The monitor service  may include an administrative services interface to provide the monitoring data or information to, for example, administrative tools including the visual administrator . The information received at the visual administrator  may be displayed using a monitor viewer  including a Web-based monitor browser or Graphical User Interface (GUI)-based monitor viewer. The monitor service  may include other interfaces, such as a managed enterprise Java beans (\u201cMEJB\u201d) interface, to connect to remote third party tools, and a CCMS agent to connect to the CCMS .","The MEJB of the MEJB interface may include the following three types of beans: (1) session beans to perform processing; (2) entity beans to represent data, which may be a row, a column, or a table in a database, and (3) message driven beans that are generated to process Java messaging service (JMS) messages. The MEJB may reside in and may be executed in a runtime environment (e.g., MEJB container), which may provide a number of common interfaces and service to the MEJB. The common interfaces and services may include security and transaction support. The MEJB interface may provide future scalability and allow multiple user interfaces to be used, such as a standard Web browser.","The managed beans, such as the monitor and runtime beans -, may include the following two logical types of registered managed beans: (1) standard beans and (2) specific beans. Standard beans may provide standard functionality of start\/stop, get\/set properties, etc. Standard beans may be registered by default for all deployed components (e.g., kernel, libraries, interfaces, and services). Specific beans may provide component-specific functionalities that may vary from one component to another. To have the specific beans, a component may register an object that may implement a specific interface to list the processes available for its management and to extend the management interface (e.g., com.company.engine.frame.state. ManagementInterface).","According to one embodiment, for kernel resources, a standard bean may be registered with each manager having a specific bean. A prerequisite for this may be to return a non-null value in a method (e.g., getManagementInterface( )) from the manager interface. For libraries and interfaces, only standard beans may be registered. For services, except for the already registered standard beans, each of the services may register specific beans. Implementation of the management interface may also cause a specific bean to be registered for that particular service.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 8","b":["730","714","716","726"]},"For example, according to one embodiment, using the monitor tree, the module developer may configure runtime beans  to monitor one or more resources  and provide the monitoring information  to monitor beans  at a particular node  (or group of nodes). The monitoring information  provided to the monitor bean  may be provided continuously and\/or upon request  from the monitor bean  associated with the underlying resource .","The associated resource  is associated with a particular monitor bean  to individualize the monitoring process (i.e., by receiving monitoring information about a particular resource, as opposed to about all of the resources ). Similarly, according to one embodiment, particular resources  may be associated with one or more runtime beans  to further individualize the process. The resources  may include the kernel, services, interfaces, libraries, and the like, for each of the dispatchers and servers associated with an application server engine (e.g., such as the Java 2 Platform, Enterprise Edition (J2EE) engine  described above).","As used herein, a \u201cJ2EE server\u201d may include distributed J2EE servers, including, for example, multiple instances of a group of redundant J2EE servers and a dispatcher. The associated resource  may refer to one of the resources  that is associated with the monitor bean  at the node  to, for example, allow the monitor bean  to request monitoring information from the runtime bean . The end result is a simplified distribution of monitoring information in the form of a monitor tree with individual nodes, as opposed to a system in which monitoring information must be centralized.","According to one embodiment, the monitoring data  may then be provided to various client level applications, such as the visual administrator  and\/or CCMS  via the monitor service . According to one embodiment, the monitor viewer  may be used to view the monitor tree (e.g., monitor tree  of ) and its various tree nodes and the monitoring information associated with the each of the nodes (e.g., node  and the associated resource ). A user may select any of the nodes or resources shown as part of the monitor tree to view the monitoring data. According to one embodiment, a color or symbol combination may be used to determine the status of associated resources at various nodes. For example, a red\/green\/yellow combination may be used wherein, if the associated resource  at the node  is in a \u201cnormal\u201d state, a green mark may be shown next to it. If the associated resource  approaches a critical value, the mark may turn yellow and once the associated resource  reaches the critical value, the mark may turn red. Additionally, the mark may be of a different color, such as white, when there is inactivity associated with the associated resource . However, the underlying principles of the invention are not limited to any particular color scheme.","According to one embodiment, the monitor viewer  may be used to display other information related to the resources  including, for example, the name of the resource, the resource description, the resource type, relevant dates and\/or time, resource properties and values. The information may also include data history regarding the resources . The data history may include, for example, values associated with the resource over different periods of time (e.g., over a minute, hour, day, . . . etc).","As mentioned above, according to one embodiment, an XML file  may be retrieved by the monitor service  from a central database  to generate a monitor tree . The XML file may include semantics and directives to generate the monitor tree using the monitor service . An XML parser may be used to parse the semantics and directives of the XML file. Furthermore, a Java Management Extensions (JMX)-based application programming interface (API) may be used to create and customize the monitor tree. The monitor API may facilitate and handle both (1) the creation of the monitor tree and (2) the customization of the monitor tree as will as the reporting of the monitoring information and values. Typically, an API refers to a language or message format used by an application program to communicate with the operating system, communications protocols, and\/or with other control programs (e.g., database management systems).",{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 9A","b":["716","718","716","726","720","718","902","716","730","714","718","902","716","716"]},{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 9B","b":["718","904","716","726","718","904","718","716","906","718","906","718","902","726","716"]},{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 9C","b":["732","732","712","732","716","718","908","716","906","718","906","718","902","726","716"]},{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 10","b":"1002"},"At decision block , it is determined whether timer notification service is being utilized. If the timer notification service is employed, the timer notification may be received at the monitor bean from the timer at processing block . The request for the monitoring information regarding the associated resource may then be placed by the monitor bean with the runtime bean at processing block . However, if the notification service is not employed, the process may continue with decision block .","At decision block , a determination is made as to whether a runtime bean notification service is used. As described above, if the runtime bean notification service is used, the runtime bean may provide a notification to the monitor bean in response to a specified event associated with the resource (e.g., when the monitored value reaches a threshold). Upon receiving the runtime notification, at processing block , the monitor bean may request the monitoring data associated with the associated resource at processing block .","With neither the timer notification service nor the runtime notification service is employed, the monitor bean may place a request with the runtime bean seeking the monitoring information regarding the associated resource at processing block . The monitor bean may then receive such monitoring information from the runtime bean at processing block . The process may then continue with processing block .",{"@attributes":{"id":"p-0089","num":"0088"},"figref":["FIG. 11","FIG. 2","FIG. 2","FIG. 2","FIG. 7"],"b":["1100","1102","202","206","1104","216","1106","230","1108","1110","700","1112","1102","1104"]},"The JMA  may include a monitor tree (e.g., monitor tree  of ) used for monitoring of resources including Java resources associated with, for example, a Java 2 Platform, Enterprise Edition (J2EE) engine. Components for monitoring of the Java resources using the JMA  may include executable content, control logic (e.g., ASIC, PLD, FPGA, etc.), firmware, or some combination thereof, in one embodiment of the present invention. In embodiments of the invention in which Java monitoring may include executable content, it may be stored in the memory device  and executed by the control processor .","Memory devices  may encompass a wide variety of memory devices including read-only memory (ROM), erasable programmable read-only memory (EPROM), electrically erasable programmable read-only memory (EEPROM), random access memory (RAM), non-volatile random access memory (NVRAM), cache memory, flash memory, and other memory devices. Memory devices  may also include one or more hard disks, floppy disks, ZIP disks, compact disks (e.g., CD-ROM), digital versatile\/video disks (DVD), magnetic random access memory (MRAM) devices, and other system-readable media that store instructions and\/or data. Memory devices  may store program modules, such as routines, programs, objects, images, data structures, program data, and other program modules that perform particular tasks or implement particular abstract data types that facilitate system use.","The I\/O devices  may include hard disk drive interfaces, magnetic disk drive interfaces, optical drive interfaces, parallel ports, serial controllers or super I\/O controllers, serial ports, universal serial bus (USB) ports, display device interfaces (e.g., video adapters), network interface cards (NICs), sound cards, modems, and the like. System interconnect or network  may permit communication between the various elements of node . System interconnects  may include a wide variety of signal lines including one or more of memory buses, peripheral buses, local buses, host buses, and bridge, optical, electrical, acoustical, and other propagated signal lines.",{"@attributes":{"id":"p-0093","num":"0092"},"figref":"FIG. 12A","b":["1202","1204","1204","1206"]},{"@attributes":{"id":"p-0094","num":"0093"},"figref":["FIG. 12B","FIG. 12A"],"b":["1202","1204","1204","1206","1208","1214","1206"]},"For example, the green mark , represented here as a circle, may indicate monitoring of the corresponding resource. The yellow mark , represented here as a triangle, may indicate continuous monitoring of the corresponding resource and\/or may indicate that the resource being monitored is close to a critical value or stage. The red mark , represented here as a square, may indicate that the corresponding resource has reached a critical value. Finally, the white mark , represented here as a diamond, may indicate inactivity or that the corresponding resource is not being monitored.",{"@attributes":{"id":"p-0096","num":"0095"},"figref":["FIG. 13A","FIGS. 12A-12C"],"b":["1302","1334","1304","1304","1334","1336","1306","1308","1310","1312","1314","1316","1318","1304","1320","1322"]},{"@attributes":{"id":"p-0097","num":"0096"},"figref":["FIG. 13B","FIG. 13A"],"b":["1304","1320","1334","1336","1306","1320","1324","1334","1336","1338","1340"]},{"@attributes":{"id":"p-0098","num":"0097"},"figref":["FIG. 13C","FIG. 13A"],"b":["1304","1322","1334","1336","1306","1322","1322","1326","1332","1326","1332","1326","1328","1330","1332","1322"]},"In one embodiment of the invention, the management techniques which are the focus of this application are used to manage resources within a cluster of server nodes. An exemplary application server architecture will now be described, followed by a detailed description of the management architecture and associated processes.","An application server architecture employed in one embodiment of the invention is illustrated in . The architecture includes a central services \u201cinstance\u201d  and a plurality of application server \u201cinstances\u201d , . As used herein, the application server instances,  and , each include a group of server nodes , ,  and , , , respectively, and a dispatcher, , , respectively. The central services instance  includes a locking service  and a messaging service  (described below). The combination of all of the application instances ,  and the central services instance  is referred to herein as a \u201ccluster.\u201d Although the following description will focus solely on instance  for the purpose of explanation, the same principles apply to other instances such as instance .","The server nodes , ,  within instance  provide the business and\/or presentation logic for the network applications supported by the system. Each of the server nodes , ,  within a particular instance  may be configured with a redundant set of application logic and associated data. In one embodiment, the dispatcher  distributes service requests from clients to one or more of the server nodes , ,  based on the load on each of the servers. For example, in one embodiment, a dispatcher implements a round-robin policy of distributing service requests (although various alternate load balancing techniques may be employed).","In one embodiment of the invention, the server nodes , ,  are Java 2 Platform, Enterprise Edition (\u201cJ2EE\u201d) server nodes which support Enterprise Java Bean (\u201cEJB\u201d) components and EJB containers (at the business layer) and Servlets and Java Server Pages (\u201cJSP\u201d) (at the presentation layer). Of course, certain aspects of the invention described herein may be implemented in the context of other software platforms including, by way of example, Microsoft .NET platforms and\/or the Advanced Business Application Programming (\u201cABAP\u201d) platforms developed by SAP AG, the assignee of the present application.","In one embodiment, communication and synchronization between each of the instances ,  is enabled via the central services instance . As illustrated in , the central services instance  includes a messaging service  and a locking service . The message service  allows each of the servers within each of the instances to communicate with one another via a message passing protocol. For example, messages from one server may be broadcast to all other servers within the cluster via the messaging service . In addition, messages may be addressed directly to specific servers within the cluster (i.e., rather than being broadcast to all servers).","In one embodiment, the locking service  disables access to (i.e., locks) certain specified portions of configuration data and\/or program code stored within a central database . A locking manager ,  employed within the server nodes locks data on behalf of various system components which need to synchronize access to specific types of data and program code (e.g., such as the configuration managers ,  illustrated in ). As described in detail below, in one embodiment, the locking service  enables a distributed caching architecture for caching copies of server\/dispatcher configuration data.","In one embodiment, the messaging service  and the locking service  are each implemented on dedicated servers. However, the messaging service  and the locking service  may be implemented on a single server or across multiple servers while still complying with the underlying principles of the invention.","As illustrated in , each server node (e.g., , ) includes a lock manager ,  for communicating with the locking service ; a cluster manager ,  for communicating with the messaging service ; and a configuration manager ,  for communicating with a central database  (e.g., to store\/retrieve configuration data). Although the lock manager , , cluster manager ,  and configuration manager ,  are illustrated with respect to particular server nodes,  and , in , each of the server nodes , ,  and  and\/or on the dispatchers ,  may be equipped with equivalent lock managers, cluster managers and configuration managers.","Referring now to , in one embodiment, configuration data  defining the configuration of the central services instance  and\/or the server nodes and dispatchers within instances  and , is stored within the central database . By way of example, the configuration data may include an indication of the kernel, applications and libraries required by each dispatcher and server; network information related to each dispatcher and server (e.g., address\/port number); an indication of the binaries required during the boot process for each dispatcher and server, parameters defining the software and\/or hardware configuration of each dispatcher and server (e.g., defining cache size, memory allocation, . . . etc); information related to the network management configuration for each server\/dispatcher (e.g., as described below); and various other types of information related to the cluster.","In one embodiment of the invention, to improve the speed at which the servers and dispatchers access the configuration data, the configuration managers ,  cache configuration data locally within configuration caches , . As such, to ensure that the configuration data within the configuration caches ,  remains up-to-date, the configuration managers ,  may implement cache synchronization policies.","It should be appreciated that reference throughout this specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Therefore, it is emphasized and should be appreciated that two or more references to \u201can embodiment\u201d or \u201cone embodiment\u201d or \u201can alternative embodiment\u201d in various portions of this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures or characteristics may be combined as suitable in one or more embodiments of the invention.","Similarly, it should be appreciated that in the foregoing description of exemplary embodiments of the invention, various features of the invention are sometimes grouped together in a single embodiment, figure, or description thereof for the purpose of streamlining the disclosure aiding in the understanding of one or more of the various inventive aspects. This method of disclosure, however, is not to be interpreted as reflecting an intention that the claimed invention requires more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive aspects lie in less than all features of a single foregoing disclosed embodiment. Thus, the claims following the detailed description are hereby expressly incorporated into this detailed description, with each claim standing on its own as a separate embodiment of this invention.","While certain exemplary embodiments have been described and shown in the accompanying drawings, it is to be understood that such embodiments are merely illustrative of and not restrictive, and that the embodiments of the present invention are not to be limited to specific constructions and arrangements shown and described, since various other modifications may occur to those ordinarily skilled in the art upon studying this disclosure."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The appended claims set forth the features of the present invention with particularity. The embodiments of the present invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings of which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9B"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9C"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 12A"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12B"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 13A"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 13B"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 13C"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 15"}]},"DETDESC":[{},{}]}
