---
title: Method and system for hard disk emulation and cryptographic acceleration on a blade server
abstract: An inventive apparatus that integrates the operation of a hard disk emulator and a cryptographic accelerator on a single blade server card. An application with cryptographic operations can off load computationally intensive calculations to the cryptographic accelerator so that the speed at which the application performs actions can be increased significantly. Typically, the hard disk emulator is a flash memory component and the accelerator can perform at least modular exponentiation calculations. One bus is employed for communication between the hard disk emulator and the accelerator. Another bus is employed to communicate with other resources off the card. Often, the card is configured to operate as one of a several blade servers in a chassis.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08850223&OS=08850223&RS=08850223
owner: F5 Networks, Inc.
number: 08850223
owner_city: Seattle
owner_country: US
publication_date: 20021220
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATION","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This utility application is related to a previously filed U.S. Provisional Application Ser. No. 60\/387,466, filed Jul. 19, 2002, the benefit of the earlier filing date of which is hereby claimed under 35 U.S.C. \u00a7119 (e).","The present invention relates to provisioning computing resources on a card, and more particularly to integrating hard disk emulation and acceleration of cryptographic functions in a card.","A Blade Server is a type of computing system that allows a user to provision server or other computing resources on an individual card, or \u201cblade\u201d. These blades are housed together with shared resources such as power supplies and cooling fans in a chassis, creating a high-density system with a modular architecture that provides improved flexibility and scalability. Blade Servers can enable the operation of multiple servers in a relatively small footprint, reduce rack complexity, simplify cabling and reduce energy consumption. Blade Servers are often employed in space-constrained and energy conscious environments such as data centers and Internet Service Providers (ISPs).","Physically, a typical Blade Server is a relatively thin, modular electronic circuit board or card, containing one, two, or more processors and memory, which can be inserted into a space-saving chassis with many similar Blade Servers. Typically, each Blade Server will be configured to process a single, dedicated application (such as serving Web pages). In the chassis, each Blade Server will typically share a common high-speed bus such as a Peripheral Component Interconnect (PCI) bus or an Integrated Device Electronics (IDE) bus.","Many applications that serve up Web pages use the Secure Sockets Layer and Transport Layer Security (SSL\/TLS) protocols to achieve end-to-end secure communications, particularly in the areas of electronic commerce and financial services. The SSL protocol is described in Netscape Communications Corp, Secure Sockets Layer (SSL) version 3, http:\/\/home.netscape.com\/eng\/ssl3\/(November 1996). The TLS protocol is described in Dierks, T., and Allen, C., \u201cThe TLS Protocol Version 1.0,\u201d RFC 2246 (January 1999). The most widely used SSL\/TLS-enabled protocol today is the Hypertext Transport Protocol (HTTP) encapsulated in an SSL\/TLS connection, commonly known as HTTPS. The HTTP protocol is described in \u201cHypertext Transport Protocol (HTTP) version 1.0, RFC 1945 (May 1996)\u201d and \u201cHypertext Transport Protocol (HTTP) version 1.1, RFC 2616 (June 1999)\u201d. The SSL\/TLS protocol's authentication mechanism typically requires an application serving Web pages to perform computationally expensive mathematical operations, the effects of which are fewer requests serviced per unit of time and higher latency in processing individual requests for Web pages.","The SSL\/TLS protocol provides several methods to authenticate both parties to an SSL\/TLS connection, the most common of which is the use of Rivest-Shamir-Adleman (RSA) authentication as part of a public key infrastructure (PKI). This is described in RSA Cryptography Standard, PKCS #1 Version 2.0, http:\/\/www.rsasecurity.com\/rsalabs\/pkcs\/pkcs-1\/index.html (Nov. 1, 1993). In common usage, applications serving Web pages will authenticate themselves to clients, but not vice-versa. As part of this procedure, the authenticating party performs a computationally expensive RSA \u201csigning\u201d operation in a full SSL\/TLS handshake. This calculation can be time consuming and often comprises one of the largest bottlenecks for applications serving Web pages in relatively short-lived SSL\/TLS connections.","In the following detailed description of exemplary embodiments of the invention, reference is made to the accompanied drawings, which form a part hereof, and which is shown by way of illustration, specific exemplary embodiments of which the invention may be practiced. Each embodiment is described in sufficient detail to enable those skilled in the art to practice the invention, and it is to be understood that other embodiments may be utilized, and other changes may be made, without departing from the spirit or scope of the present invention. The following detailed description is, therefore, not to be taken in a limiting sense, and the scope of the present invention is defined only by the appended claims.","Throughout the specification and claims, the following terms take the meanings explicitly associated herein, unless the context clearly dictates otherwise.","The term \u201caccelerator\u201d refers to a hardware device that is optimized for quickly performing specific cryptographic computations, e.g., modular exponentiation. The accelerator may be implemented in different types of hardware devices, including, but not limited to, PLD, FPGA, and the like.","The term \u201chard drive emulator\u201d refers to a solid state media that appears to an application as a hard drive and provides substantially the same capacity and read\/write speed as a hard drive. The hard drive emulator can be implemented with a variety of solid state media, including, but not limited to, Flash Memory, and the like.","The term \u201cpacket\u201d refers to an IP packet. The term \u201cflow\u201d means a flow of packets. The term \u201cconnection\u201d refers to a flow or flows of packets that share a common path.","The term \u201cnode\u201d refers to a network element that interconnects one or more networks or devices.","The term \u201cuser\u201d refers to any person or customer such as a business or organization that employs a device to communicate or access resources over a network.","The term \u201cBlade Server\u201d refers to a server that is provisioned on a single card that is typically clustered with other Blade Servers (multiple cards) in a single chassis or rack. Blade Servers are also sometimes referred to as high density, ultra-dense or hyper-dense solutions, where they are often employed for processing-light and transaction-heavy applications. Each Blade Server is typically dedicated to a single task or process, including, but not limited to, file sharing, Web page serving, caching, transcoding, streaming audio, streaming video, load balancing and failover management. A Blade Server usually includes its own operating system and an application to which it is dedicated.","To tightly package a Blade Server in a relatively small footprint (single card), the Blade Server will typically use a highly miniaturized and energy efficient Central Processing Unit (CPU) such as those employed in portable computing devices. Typically, rows of individual Blade Servers (which closely resemble the functionality of a motherboard) are in communication with each other over a commonly shared and relatively high-speed bus. In a chassis that is rack mountable, an exemplary Blade Server based solution can enable the operation of hundreds of CPUs within the confines of a relatively standard six-foot rack.","The term \u201cnetwork\u201d refers to any packet switched digital network. For example, Frame Relay, Asynchronous Transfer Mode (ATM) and Switched Megabit Data Service, and the like.","Referring to the drawings, like numbers indicate like parts throughout the views. Additionally, a reference to the singular includes a reference to the plural unless otherwise stated or is inconsistent with the disclosure herein.","The present invention is a system and method in which a process or thread of execution for an application operates in a hard drive emulator in cooperation with a modified cryptographic toolkit, which off-loads portions of a cryptographic protocol to a hardware-based cryptographic accelerator. The hard drive emulator and cryptographic accelerator are integrated onto a single card. In one embodiment, the single card is a Blade Server that is configured to operate in a chassis.","The invention is described herein with reference to an SSL\/TLS toolkit and the performance of cryptographic operations such as an RSA signing operation. It is to be understood that these references are exemplary in order to simplify the discussion, and that the invention can be practiced with other cryptographic operations and toolkits other than SSL\/TLS toolkits.","The invention improves performance of RSA signing operations by implementing cryptographic acceleration in hardware. Typically, a hardware-based processor\/accelerator for performing at least a portion of cryptographic operations can significantly improve performance as compared with performing all cryptographic operations in software. Overall latency in an application can be significantly reduced by at least an order of magnitude for modular exponentiation calculations when this type of calculation is performed in hardware. In this approach, software in an SSL\/TLS-enabled application, such as an SSL\/TLS proxy, Web Server, Traffic Manager, or Load Balancer, can make calls to the accelerator using an Application Programming Interface (API).",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 1","FIG. 1"],"b":["100","102","106","104","112","108","110"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2","b":["200","206","204","208","210","212","212","202","212","212"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3","b":["300","312","304","308","306","308","312","304","306","312","308","304"]},"Controller  is coupled to and enables communication over direct bus . Controller  is also coupled to blade server bus , which enables communication of data and addresses (as shown in ). In one embodiment, blade server bus  receives power for blade server card  and operates as an IDE bus. Additionally, oscillator  is coupled to controller , hard drive emulator  and accelerator  to enable the synchronization of data and addresses communicated over direct bus .","Also, controller  may be provided in any one of several types of devices, including, but not limited to, CPU, microcontroller, Field Programmable Gate Array (FPGA) Programmable Logic Device (PLD), and the like.","Although not shown, controller  includes a driver, e.g., an IDE Master driver, to enable a solid state media, such as Compact Flash, to communicate with the application as hard drive emulator . Controller  can include another driver, e.g., an IDE Slave driver, that can enable either a blocking or non-blocking SSL driver to communicate with accelerator . Any of the IDE drivers can be implemented as a wrapper for a PCI driver. Also, the Slave IDE driver can operate as a wrapper for a PCI driver operating with accelerator . Additionally, the Master and Slave IDE drivers can enable the operation of the hard drive emulator  and accelerator  even if the blade server has just one (or none) IDE slot. Moreover, although space on a blade server is relatively constrained and only limited power is typically available, the highly integrated aspect of the invention enables the controller, accelerator and hard drive emulator to be located on the same blade server and consume relatively low power.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 4","b":["402","404","408"]},"Alternatively, if the determination at decision block  is affirmative (cryptographic operation to be performed on information included with the packet), the process moves to block  where a hardware-based accelerator is employed to perform at least one cryptographic calculation on information included with the packet. Depending on the type of cryptographic operation to be performed, the packet's information may be encrypted or decrypted. The process advances to block  and performs substantially the same actions discussed above. Lastly, the process moves to an end block where the process returns to processing other actions.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 5","b":["500","502","502","504","522","506","504","522","522","508","510","510","512","516","514","516","518","520"]},"SSL\/TLS Cryptographic Toolkit  can perform different types of cryptographic operations concurrently. For example, controlling application  can request an RSA signing operation, an RSA verification operation, an RSA encryption operation, and an RSA decryption operation such that they all perform concurrently. The first operation requested is not necessarily the first operation completed. This is particularly advantageous when requesting a relatively fast operation such as RC4 decryption after a relatively slow operation such as RSA signing. Additionally, cryptographic requests involving different key sizes can be made concurrently. For example, controlling application  may request an RSA signing with a key size of 1024 bits followed by a request for an RSA signing with a key size of 512 bits. Since the latter operation takes longer than the former, the 512 bit signing may complete prior to the completion of the 1024 bit signing.","Also, while the invention is described herein in the context of an SSL\/TLS proxy server, hardware based accelerator, and an SSL\/TLS cryptographic toolkit, it may also be practiced with other cryptographic applications, and is not limited to those involving SSL\/TLS. The invention enables various portions (or all) of an SSL\/TLS protocol to be off-loaded to a hardware-based accelerator. Of course, the present invention could be applied to any SSL\/TLS-enabled application using a cryptographic toolset capable of off-loading portions of the SSL\/TLS protocol to a hardware-based accelerator.","Additionally, the invention described herein may be provided with the accelerator, application and controller on the same card, and with the hard disk emulator or some other storage device remotely located. In that case, the controller would provide an interface such as IDE to access and store information on a device remotely located from the card, e.g., a hard disk or Flash Memory disposed on another card in the chassis.","The above specification, examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention, the invention resides in the claims hereinafter appended."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
