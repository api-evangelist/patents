---
title: Information lifecycle cross-system reconciliation
abstract: In the described systems and methods for information lifecycle cross-system reconciliation, a number of reconciliation indicators for a certain type of data are defined. A first set of values of the reconciliation indicators are calculated at a first computer system based on data stored in a memory of the first computer system. A second set of values of the reconciliation indicators are calculated at a second computer system based on data transferred from the first computer system. The two sets of values are received at reconciliation cockpit and stored in a reconciliation data structure. Further, the reconciliation data structure is examined to identify inconsistency between the data stored in the memory of the first computer system and the data transferred to the second computer system. If such an inconsistency is identified, the data transfer is cancelled. If inconsistency is not identified, the data transfer is confirmed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08224791&OS=08224791&RS=08224791
owner: SAP AG
number: 08224791
owner_city: Walldorf
owner_country: DE
publication_date: 20090911
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The field of the invention relates generally to data processing and digital processing systems. More specifically, the invention is related to cross-system data transferring and reconciliation within a multi computer systems environment.","One of the tasks in enterprise management is to ensure consistent information lifecycle. The information lifecycle includes various stages of data or metadata processing, starting with creation of data and ending with data disposal. Usually, large enterprises employ a network of computer systems that are integrated in complex system architectures to automate business processes and data management. In such enterprises, a single piece of information is often transferred from one persistency to another between several different applications and systems. Consistent information and data reports are required from the diverse environment of the information during its lifecycle.","For example, financial data is typically created in an enterprise resource planning (ERP) system of a company unit. At an end of a financial period (e.g., end of month) part of the created financial data is transferred into a separate consolidation system where it might be combined with financial data coming from other company units. The data could be used for end-of-period processing for the whole enterprise, and for group reports, for instance. At some later point, the financial data is usually removed from the ERP system and from the consolidation system to be archived into a storage system, according to selected archiving rules.","During its lifecycle, the information has to be consistent and available to users to ensure efficient enterprise management, as well as to satisfy various statutory requirements. For example, there are different financial reports that are generated using data from an ERP system of a company unit. Same data is used in reports generated in a consolidation system. Archive storage systems also provide various reports based on the archived data. There are many factors that could cause inconsistency of the information, e.g., user error, incomplete processing, transaction failure. Therefore, the information is typically audited throughout its lifecycle and in every environment or system where it is persisted. With respect to the financial data lifecycle, enterprises (especially the financial institutions) may be statutorily obligated to provide such verification. Data verification procedures applied in a company are typically subject to external audits.","Data transfers across different systems during the information lifecycle maybe one of the causes of inconsistency. Therefore, data transferred between two computer system environments within enterprise information architecture should be examined before, during and after the transfer. However, verification of a cross systems data transfer can be a burdensome task with little or no automation. One that could consume a lot of resources, and one that could require specialists from several enterprise departments.","Systems and methods for information lifecycle cross-system reconciliation are described. A number of reconciliation indicators for a certain type of data are defined. A first set of values of the reconciliation indicators are calculated at a first computer system based on data stored in a memory of the first computer system. A second set of values of the reconciliation indicators are calculated at a second computer system based on data transferred from the first computer system. The two sets of values are received at reconciliation cockpit and stored in a reconciliation data structure. Further, the reconciliation data structure is audited to identify inconsistency between the data stored in the memory of the first computer system and the data transferred to the second computer system. If such an inconsistency is identified, the data transfer is reported as inconsistent, and the transferred data in the second computer system is disposed or appropriate measures are triggered to correct the inconsistency. If no inconsistency is identified, the data transfer is confirmed.","These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings.","Embodiments of techniques for \u2018Information Lifecycle Cross-System Reconciliation\u2019 are described herein. In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.","Information lifecycle or data lifecycle generally refers to a cycle encompassing creation of specific information, processing of this information in various computer systems, and, at the end, disposal of the information when it is no longer needed. For example, financial data is typically created in an ERP system. This data is then entered in an invoice, posted in a general ledger, or kept in some other form within the ERP system, according to the integrated business processes. At certain time, e.g., end-of-period, this data is consolidated in another system with similar data from other ERP systems or from other sources. The data could be consolidated in specific forms or statements, e.g., profit and loss (P&L) statement, balance sheet (BS) and the like. These consolidated statements are used for purposes of reporting to management, for internal or external audits, etc.","Most of the examples in this document involve financial data, but one of ordinary skill in the art will recognize that other kinds of information go through similar transformations. For example, the information lifecycle reconciliation is relevant to other enterprise data generated by logistic systems, supply chain management systems, human capital management systems, etc. Therefore, data lifecycle or information lifecycle is a term that addresses many types of information.","Generally, data transfer is initiated by a user or a system process and involves transporting of specific information from a source application or system to a destination system. There are situations when the transferred data is altered during the transportation. For example, an erroneous extract of the data at the source system may occur, information transportation might suffer from data loss or duplicated data, and other systems could also interfere with the transfer. Typically, the data received at the destination system is compared with the source data in the source system. Such a comparison is often performed manually or with little automation, and requires a lot of resources in order to confirm the accuracy of the data transfer. It is even harder to check the accuracy of a data transfer at the destination system when the transferred data is consolidated with data received from other sources.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["100","105"]},"At block , a set of values of the reconciliation indicators calculated for the data stored in the source system is received at a reconciliation module, according to one embodiment of the invention. In this document, the reconciliation module is also called reconciliation cockpit. The values could be calculated in the source system. Alternatively, the data necessary for calculating the values could be extracted by a third system, or directly by the reconciliation cockpit. Depending on where the values are calculated, the definitions created at  are implemented in the source system, in a third system, or in the reconciliation cockpit, e.g., by a special program, software or hardware agent, or a plug-in. Other combinations to provide the necessary logic for calculating the values of the reconciliation indicators using data stored in the source system are also possible.","At block , a set of values of the reconciliation indicators calculated for the data transferred to the destination system is received at the reconciliation cockpit. As with the set of values for the source data, the values of the reconciliation indicators for the received data could be calculated in the destination system, e.g., by a special program, agent or a plug-in. Alternatively, the data necessary for calculating the values could be extracted by a third system, or directly by the reconciliation cockpit. Depending on where the values are calculated, the definitions created at  are implemented in the destination system, in a third system, or in the reconciliation cockpit, respectively. Other combinations are possible to provide the necessary logic for calculating the values of the reconciliation indicators using the data received at the destination system.","As a result, after execution of the actions illustrated with blocks  and  of process , two sets of values corresponding to the reconciliation indicators are received at a reconciliation cockpit. One of the sets is calculated using the data stored in the source system, and the other set is calculated using the data received at the destination system. Each of the values of the first and the second sets corresponds to exactly one of the defined reconciliation indicators, according to one embodiment of the invention. At block , the two sets of values of the reconciliation indicators are stored in a reconciliation data structure. Depending on the implementation, reconciliation data structure could be a flat file, a tree structure, a table, a number of related tables within a database, etc.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2"},"In table , row  contains themes, e.g., a name or a short description for each transfer. For example, table  includes data for two transfers, where the theme of the first transfer is \u201cConsolidating Financial Data\u201d, and the theme of the second transfer is \u201cArchiving Financial Data\u201d. Next, row  shows the source system where the transferred data is stored and from where the data is extracted and transferred to the destination system. For both transfers included in table , the source system is ERP. Row  contains the destination system for each transfer. The destination system for the first illustrated transfer is \u201cConsolidation\u201d system, and the destination system for the second illustrated transfer is \u201cArchiving\u201d system. The dates of the registered transfers are provided in row . In one embodiment of the invention, row  could contain the time of the transfers as well.","The data that is transferred belongs to a particular company or a company unit, according to one embodiment of the invention. A global enterprise could include a number of different companies that operate in a number of different business areas and different countries. Further, a company or an enterprise could be organized in several units. The different companies and company units of an enterprise may run autonomous computer systems and communicate with the rest of the enterprise through dedicated channels. Each company or company unit generates and operates with specific information. A data transfer could be accomplished within a single company or company unit, or could involve more than one company or company unit of an enterprise, or even between enterprises. Row  shows to which company, or to which company unit, the transferred data belongs. Each field of this row could include more than one company or unit identifier when the data belongs to more than one company or unit, or when the data is transferred between computer systems that are used by more than one companies or company units. The information stored in row  could provide codes of companies of an enterprise, unit codes or codes of cost centers of a company, etc.","The fields of row  contain sets of reconciliation indicators defined for each registered transfer. Every single consolidation indicator could be enlisted and described by definition or logic in table , according to one embodiment of the invention. For example, two consolidation indicators named \u201cTotal BS\u201d, i.e., the total of the respective balance sheet; and \u201cTotal AR\u201d, i.e., the total of the respective accounts receivable are defined for verifying the first transfer. Further, in row , the set of values corresponding to the reconciliation indicators  that are calculated using data stored in the memory of the source computer system are stored for each transfer. Likewise in row , the set of values corresponding to the reconciliation indicators that are calculated using the data received at the destination computer system are stored for each transfer.","The last row  of table  shows the status of the verification of the each data transfer. In one embodiment of the invention, status of a transfer could show a result of a comparison between a source value and a destination value for every reconciliation indicator. In other scenarios, e.g., when hash functions are applied, the received values could be compared by using an integrated procedure to apply predefined comparison algorithms. When the source value and the destination value of a reconciliation indicator are the same, the status for this indicator is \u201cOK\u201d. Otherwise, the status is \u201cError\u201d. As illustrated in table , row , for the first data transfer the statuses for all reconciliation indicators are \u201cOK\u201d, respectively, the transfer is verified and correct. However, for the second transfer there is a discrepancy between the values calculated for \u201cTotal AP\u201d reconciliation indicator. An inconsistency is identified between the data stored in the source system and the data received at the destination system. Accordingly, the second data transfer is not correct.","Returning to , the statuses on row  of table  for a particular data transfer could be generated at  automatically by the reconciliation cockpit, or could be evaluated during an auditing process. During this audit, the first set of values of the reconciliation indicators calculated using the data stored at the source computer system, and the second set of values of the reconciliation indicators calculated using the data received at the destination computer system are compared.","The data transfer could be checked or examined for consistency at  by scanning the statuses of the reconciliation data structure. When a status shows a discrepancy between the values of a reconciliation indicator at the source and destination systems, it indicates that the transferred data is altered during the transfer, i.e., there is inconsistency in the transferred data. If inconsistency in the transferred data is detected at , a report is generated at  to inform the interested parties. This report could include all the available information for the transfer that is stored in the reconciliation data structure. The report could be displayed to one or more users. This report could be electronically sent to one or more recipients from the interested parties, printed out for further analysis, etc. In one embodiment of the invention, if an inconsistency in the transferred data is detected at , the reconciliation cockpit, or another module, could trigger a full or partial repeat of the data transfer at . When there are no discrepancies between the corresponding values of the reconciliation indicators, no inconsistency in the data transfer is detected at , and the correctness of the data transfer is confirmed.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 3","b":["300","305","300","310","315","305","310"]},"The consistency of the data transfer is checked at . This check could be performed by the reconciliation cockpit, as illustrated with block  in . Alternatively, another application could audit the values of the reconciliation indicators stored in a reconciliation data structure. In a further embodiment of the invention, an agent or a plug-in to the source computer system could check the consistency of the data transfer. The source system could access reconciliation data structure, and compare the stored values of the reconciliation indicators. Alternatively, the source system could access the reconciliation data structure and read the status information for the data transfer transaction.","If the data transfer is inconsistent, e.g., discrepancies are found between the corresponding values of the reconciliation indicators, the data transfer could be repeated or cancelled. At block , it is decided whether the data transfer will be repeated or cancelled. If repeated, transferred data could be disposed at , and process  is started anew. Otherwise, data transfer is cancelled at . If the data transfer is consistent, e.g., the data received at the destination computer system is identical with the data sent from the source computer system, the data transfer is confirmed as correct at . After the consistency of the data transfer is confirmed, the data stored in the source system could be disposed or deleted. Thus, the persistency of the transferred data will be moved to the destination computer system.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 4","b":["400","405","410","415"]},"At block , the values of the reconciliation indicators calculated using the data received at the destination system are compared with the corresponding values of the reconciliation indicators calculated using the data stored in the source system. This comparison could be accomplished within the reconciliation cockpit application or in other computer application or system. If discrepancies between the corresponding values are found, there is inconsistency in the transferred data. Inconsistency in the transferred data means that the data that is transferred (received at the destination) is inconsistent with the original data. In such a case, the data transfer is cancelled at block . It is possible with the help of reconciliation indicators or other tools, the part of the transferred data that is inconsistent to be identified, and respectively, only this part of the data transfer to be cancelled. When all or part of the data received at the destination system is not identical with the data stored in the source system, it could be wholly or partially removed, and re-transferred, according to one embodiment of the invention. If the consistency of the data transfer is confirmed at block , e.g., no discrepancy between the corresponding values of the reconciliation indicators are found, the data received at the destination system is identical with the data stored in the source system. In such a case, the data transfer transaction is confirmed at , e.g., the transfer of data is successfully accomplished.","The actions described in reference to processes ,  and  could take place in at least three different computer systems, e.g., a source computer system, a destination computer system and a reconciliation cockpit, according to further embodiments of the invention. In another embodiment of the invention, some of the described actions could be accomplished by different computer systems, whether specified or not. For example, reconciliation cockpit could be implemented in either the source computer system or the destination computer system. In general, data transfer is independent from the reconciliation procedure and already accomplished data transfers could be verified using the described approach.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 5","FIG. 5"],"b":["500","500","510","520","530","550","500","540","510","510","500","510","510","520","520","510","510","530"]},"ERP system , consolidation system  and storage system  contain memory ,  and , respectively. According to a further embodiment of the invention, the data that is generated in ERP system  is stored in memory . The data stored in memory  is transferred to consolidation system  and stored in memory . Similarly, the data stored in memory  is transferred to storage system, where it is stored in memory . In order to confirm consistency between the original data stored in memory  of ERP system  and the data received at consolidation system  or at storage system , agents ,  and , respectively, calculate values of one or more predefined reconciliation indicators. Agent  calculates the respective values by using the data that is stored in memory . Agents  and  calculate the respective values by using the data received at consolidation system  and at storage system , accordingly. The calculated values are sent to reconciliation cockpit , and stored in reconciliation data structure  in memory .","The reconciliation data structure is examined in order to identify discrepancies between the corresponding values of the reconciliation indicators received from agent ; and agent  or agent , depending on whether the destination system of the data transfer transaction is the consolidation system  or the storage system , respectively. If such discrepancies are found, there is inconsistency between the data stored in memory  of ERP system  and the same data transferred from ERP system , and received at consolidation system  or at storage system . If no discrepancies are identified in reconciliation data structure , consistency of the transfer of data between ERP system , and consolidation system  or archive system  is confirmed.","In another embodiment of the invention, agents ,  and  do not calculate values of the defined reconciliation indicators. Instead, agent , extract data from memory  in ERP system ; agent  extracts data received from ERP system  at consolidation system ; and agent  extracts data received from ERP system  at storage system , respectively. The extracted data is sent to reconciliation cockpit . The reconciliation indicators for source and destination systems are calculated in reconciliation cockpit  based on the extracted data, and stored in reconciliation data structure  for further analysis.","Reconciliation cockpit  further includes processor , dynamic memory (random access memory\u2014RAM) , and logic  stored in RAM . Logic  provides instructions to processor , according to one embodiment of the invention. Processor  executes the instructions of logic  in order to provide the functionality necessary to reconcile a data transfer between a source system, e.g., ERP system , and a destination system, e.g., consolidation system  or storage system .","Systems and methods consistent with the present invention also include computer readable media that include program instruction or code for performing various computer-implemented operations based on the methods and processes of the invention. The media and program instructions may be those specially designed and constructed for the purposes of the invention, or they may be of the kind well known and available to those having skill in the computer software arts. Examples of program instructions include, for example, machine code, such as produced by a compiler, and files containing a high level code that can be executed by the computer using an interpreter. In this document, the meaning of the term \u201ccomputer readable media\u201d is limited to an article of manufacture for tangibly storing computer-readable instructions.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 6","b":["600","600","605","655","600","640","655","610","615","610","615","605","615","600","625","630","600","625","630","600","635","600","650","650","600","645","600","620","660","660","660","650","660"]},"A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transactional, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transactional data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system (e.g., ERP system), and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","Some embodiments of the invention may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components maybe implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable medium as instructions. The term \u201ccomputer readable medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer-readable media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include machine code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment of the invention may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment of the invention may be implemented in hard-wired circuitry in place of, or in combination with machine readable software instructions.","The above descriptions and illustrations of embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather, the scope of the invention is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The claims set forth the embodiments of the invention with particularity. The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments of the invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
