---
title: Retrieving data from a server
abstract: A system includes a server and a controller embedded in a device. Both the server and the embedded controller are capable of communicating over a computer network. The embedded controller sends a command to the server over the computer network that identifies an instance of the device. In response, the server identifies the instance of the device based on the command, retrieves data that is specific to the instance of the device, and sends the data to the embedded controller over the computer network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08108543&OS=08108543&RS=08108543
owner: Axeda Corporation
number: 08108543
owner_city: Foxboro
owner_country: US
publication_date: 20020417
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND","SUMMARY","DESCRIPTION","ALTERNATIVE EMBODIMENT","Xml Scripting of Soap Commands","APPENDIX A","Get Command","APPENDIX B","Post Command"],"p":["This application is a continuation-in-part of U.S. patent application Ser. No. 09\/667,737, filed on Sep. 22, 2000 now U.S. Pat. No. 7,185,014 in the name of James R. Hansen.","This invention relates to a controller embedded in a device (an \u201cembedded controller\u201d) that retrieves data from a remote server for a specific instance of the device.","A device may contain an embedded controller, such as a microprocessor, to monitor and control its operation. Any type of device may have an embedded controller, including, but not limited to, home appliances, such as washing machines, dishwashers, and televisions, and manufacturing equipment, such as robotics, conveyors and motors.","Embedded controllers, also referred to as \u201cembedded devices\u201d, are often connected to an internal network, such as a local area network (LAN), with an interface to the Internet. Other devices on the internal network may communicate with the embedded controllers over the internal network. However, the embedded controllers are not generally addressable from the Internet. To address this problem, the embedded device may initiate communications with an addressable external device. That is, the embedded device may access the external device (e.g., a server) periodically to obtain necessary data.","SOAP is a standard for encoding function calls, such as remote procedure calls (RPCs), in XML. SOAP defines rules, i.e., a syntax, for encoding the function calls in XML. The body of a SOAP command is defined, at its start, by <SOAP-ENV:BODY> and, at its end, by <\/SOAP-ENV:BODY>. Code in between these two commands includes the function to be performed by the SOAP command. A SOAP command may include other data as well, such as header information.","In general, in one aspect, the invention is directed to a controller embedded in a device for retrieving data from a server. The controller sends a command to the server that identifies an instance of the device and receives, from the server and in response to the command, data that is specific to the instance of the device. The data identifies additional data to retrieve for the device.","This aspect of the invention may include one or more of the following. The command may include an operational parameter for the device and the data may include an updated value for the operational parameter. The command may include plural operational parameters for the device and the data may include updated values that differ from current values of the operational parameters.","The data may include a list of operational parameters. In this case, the embedded controller sends a second command to the server, which includes operational parameters from the list, and receives, from the server and in response to the second command, updated values of one or more of the operational parameters included in the second command. The data may include a list of operations to be performed by the controller. In this case, the embedded controller parses the operations from the list and performs the operations from the list.","The data may include a configuration file for the device. The command identifies the instance of the device by a device type and\/or one or more of a serial number and a universal unique identifier. The embedded controller sends the command to the server periodically. The server runs the Hypertext Transfer Protocol and the command contains Extensible Markup Language code. The device receives the data via the Hypertext Transfer Protocol.","The command may include a first operational parameter for the device and the data may include a second operational parameter that is unrelated to the first operational parameter. The data may include a uniform resource locator. The uniform resource locator is used to obtain additional data that relates to the device. The data may include an indication that additional data for the device is present at the server. A second command is sent to the server to retrieve the additional data. The server retrieves the additional data in response to the second command. Parameters in the command determine a content of the data. The data may be encrypted when the data is received and then decrypted. The data may contain a digital signature when the data is received, which is then authenticated. The data may include a list of operations to be performed by the controller. The list of operations includes Simple Object Access Protocol calls that are scripted using Extensible Markup Language.","In general, in another aspect, the invention is directed to a server for sending data over a network to a controller embedded in a device. The server receives a command from the embedded controller, identifies an instance of the device from information in the command, retrieves data that is specific to the instance of the device, and sends the data to the embedded controller. The data identifies additional data for the embedded controller to retrieve.","This aspect of the invention may include one or more of the following features. The command may include a device type and\/or one or more of a serial number and a universal unique identifier. The instance of the device may be identified based on the device type and\/or one or more of the serial number and the universal unique identifier. The server may parse the device type and one or more of the serial number and universal unique identifier from the command prior to identifying the instance of the device.","The command may include an operational parameter for the device. The data may include an updated value of the operational parameter. The data may include a list of operational parameters for the device. The server receives a second command from the embedded controller, which includes an operational parameter from the list of operational parameters, obtains an updated value of the operational parameter, and sends the updated value of the operational parameter to the embedded controller.","The data may include a list of operations to be performed by the embedded controller. The data may include a configuration file for the device. The server may receive the data specific to the instance of the device and store the data in memory, from which it is retrieved. The data specific to the instance of the device may be received via a Web page generated by the server. The server may run the Hypertext Transfer Protocol and the command may contain Extensible Markup Language code. The data may be stored in a queue and retrieved from the queue.","In general, in another aspect, the invention is directed to a system that includes a controller embedded in a device that is capable of communicating over a computer network, and a server that is capable of communicating over the computer network. The embedded controller sends a command to the server over the computer network that identifies an instance of the device and, in response, the server (i) identifies the instance of the device based on the command, (ii) retrieves data that is specific to the instance of the device, and (iii) sends the data to the embedded controller over the computer network. The data identifies additional data for the embedded controller to retrieve.","This aspect of the invention may include one or more of the following features. The embedded controller is not remotely-addressable from the computer network. The computer network is the Internet. The server runs the Hypertext Transfer Protocol and the command may contain Extensible Markup Language code.","Heretofore, SOAP commands were only available as individual, discrete commands. This is impractical for device-initiated communication, particularly if the device is unaware of any timing issues relating to execution of the SOAP commands. The invention therefore scripts one or more SOAP commands in XML and provides the XML script to a device, such as an embedded controller, for execution. The XML script is executed by the embedded controller, much like a computer program, to control execution of the SOAP commands. For example, timing and sequence of execution of the SOAP commands may be specified in the XML script.","The invention also defines variables in the XML script, which may be passed to and from the SOAP commands. This facilitates the combination of SOAP commands in XML script and provides an advantage over the use of traditional SOAP commands, which are limited to passing \u201chard-coded\u201d numerical values (i.e., non-variables).","In general, in one aspect, the invention is directed to a computer-implemented system for processing a simple object access protocol (SOAP) command. The system includes interpreting an XML script to perform a function contained in the XML script, the XML script containing the SOAP command, parsing the SOAP command from the XML script, and passing the SOAP command to a SOAP interpreter for execution. This aspect of the invention may include one or more of the following features.","Plural SOAP commands may be contained in the XML script. The plural SOAP commands may be passed to the SOAP interpreter. The plural SOAP commands may be executed in a sequence specified by the XML script. At least one of an argument and a return value may be received from the SOAP command following execution of the SOAP command. The argument may be stored as a variable in the XML script.","The XML script may declare a variable. A value of the variable may be passed as an argument to the SOAP command prior to executing the SOAP command. The function may be a conditional statement. The conditional statement may be an If-Then statement or an If-Then-Else statement. The function may be a control statement that affects a sequence of execution of the XML script and\/or the SOAP command. The control statement may be a loop. The function may be an exception handler that affects a sequence of execution of the XML script and\/or the SOAP command when an error condition exists. The function may be a statement that controls relative or absolute time to execute the SOAP command. Parsing may be performed by an XML interpreter and executing may be performed by the SOAP interpreter. The XML interpreter may pass the SOAP command to the SOAP interpreter and the SOAP interpreter may pass an output of the SOAP command to the XML interpreter.","In general, in another aspect, the invention is directed to a computer-implemented system for generating extensible markup language (XML) script that contains a simple object access protocol (SOAP) command. The system includes receiving code that defines a function and the SOAP command and translating the code to XML script that performs the function and contains the SOAP command. This aspect of the invention may include one or more of the following features.","The XML script may be provided to a device. The device may include a controller that executes the XML script. The code may contain plural SOAP commands and functions. The XML script may contain the plural SOAP commands and functions. The XML script may declare a variable. A value of the variable value may be passed as an argument to the SOAP command in the XML script.","The function may be a conditional statement. The conditional statement may be an If-Then statement or an If-Then-Else statement. The function may be a control statement that affects a sequence of execution of the XML script and\/or the SOAP command. The control statement may be a loop. The function may be an exception handler that that affects a sequence of execution of the XML script and\/or the SOAP command when an error condition exists. The function may be a statement that controls a relative or absolute time to execute the SOAP command.","Other features and advantages of the invention will become apparent from the following description, including the claims and drawings.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1","b":["10","10","11","17","11","17"]},"Device  is connected to an internal network , such as a LAN. A router or modem  couples internal network  to an external network , such as the Internet\/World Wide Web (Web). External network  runs TCP\/IP (Transmission Control Protocol\/Internet Protocol) or some other suitable protocol. Network connections are via Ethernet, telephone line, wireless, or other transmission media.","External network  contains a server , which is a computer or any other processing device. Server  communicates with embedded controller  over external network  and internal network . Embedded controller  has a local IP (Internet Protocol) address that can be resolved within internal network . However, this local IP address may not be recognizable by devices on external network , such as server . As such, server  may not be able to directly address device .","Embedded Controller","Embedded controller  runs software , which includes web client application  and operating software . Web client application  includes a TCP\/IP protocol stack that allows embedded controller  to communicate over external network . Device operating software  provides an interface between Web client application  and a database . Through device operating software , embedded controller  retrieves data stored in database  and stores data in database .","Database  is stored in a memory  on device  or internal to embedded controller . Database  stores data, including operational parameters, configuration files, and identification information for device .","The operational parameters constitute settings and\/or control instructions for the device , which are implemented by embedded controller . The types of operational parameters that are stored in database  depend on the nature of device . For example, if device  is a heating\/cooling system, the operational parameters may include temperature levels, humidity levels, airflow controls, vent\/duct open\/close controls, and fan motor speed settings. A configuration file is a file that contains a set of one or more operational parameters for an instance of device .","What is meant by \u201cinstance\u201d is the specific identity of device  as distinguished from other identical devices. The identification information stored in database  identifies the instance of device . This identification information includes, but is not limited to, data identifying the type of the device, a common (or \u201cfriendly\u201d) name for the device, the manufacturer of the device, the model name of the device, the model number of the device, the serial number of the device, and a universal unique identifier (UUID) for the device.","The device type specifies a uniform resource locator (URL) for the device, which includes the name of the device. This information identifies a Web site that is associated with, and generated by, server  for the device. For example, a device type might be:\n\n","Server  is a computer that runs HTTP (Hypertext Transfer Protocol). Server  includes a controller , such as a microprocessor, for executing software to perform the functions described below. To avoid confusion in terminology, the following reads as though those functions are performed by server , even though software in controller  of server  performs the functions.","Server  executes Web server software  to communicate over external network . Web server software  also hosts a Web page associated with device . The Web page (not shown) is displayed on computer  of a user, such as the owner of device , who may input updated operational parameters for the device. These input updated operational parameters are transmitted to Web server software  over external network . Web server software  stores the updated parameters in database .","Web server software  stores and retrieves data in database  using application logic . Application logic  is software for accessing database  using the CGI (Common Gateway Interface) protocol. CGI is a well-known protocol for accessing a database. The operational parameters can be stored in database  individually or as part of a configuration file for an instance of device .","Database  is stored in a memory , which is inside of, or external to, server . Database  stores data associated with device , including the operational parameters noted above. Other data that may be stored for device  is described below.","The Data Transfer Process","Embedded controller  executes software  to retrieve data, such as operational parameters, from remote server . Server  executes software  to send the data to embedded controller .  shows these processes in detail. The left half of , titled \u201cEmbedded Controller\u201d shows process  performed by embedded controller , and the right half of , titled, \u201cServer\u201d, shows process  performed by server .","Process  generates and sends () a command to server . The command, or a modified version thereof, is sent by embedded controller  to server  periodically. It is through this command that embedded controller  polls server  to determine if there are any new\/updated operational parameters for device .","The command includes data identifying device . The data identifies the specific instance of device  and includes a device type field and one or both of a device serial number field and a device UUID. The command may also include the common name field, the manufacturer name field, the model name field, and the model number field, as set forth above.","The command may be either an HTTP GET command or an HTTP post command. The data included in those commands is similar, with the difference being that the HTTP GET command retrieves a document, such as a configuration file, that contains operational parameters and the HTTP POST command retrieves individual operational parameters. An example of an HTTP GET command is shown in Appendix A and an example of an HTTP POST command is shown in Appendix B.","The HTTP POST and GET commands shown in Appendices A and B contain XML (eXtensible Markup Language) commands. XML is a self-describing computer language in the sense that fields in the XML code identify variables and their values in the XML code. For example, as shown in the Appendices, the \u201cmanufacturer\u201d field identifies a manufacturer, e.g., Sony\u00ae, and is delineated by \u201c<manufacturer>\u201d to indicate the start of the field and \u201c<\/manufacturer>\u201d to indicate the end of the field. XML is used because it can be generated, parsed and read relatively easily by server  and embedded controller .","As noted, the GET command is used to retrieve a document from server . The document to be retrieved corresponds to the fields in the GET command, in particular to the device type, serial number and\/or UUID fields. By contrast, the POST command is used to retrieve individual operational parameters. The operational parameters that are to be retrieved are listed in the POST command itself. Changing these parameters changes the information the server provides to the embedded controller. By way of example, as shown in Appendix B, the operational parameters include airflow, humidity, motor and vent values for the fictitious \u201cwidget\u201d device. The current values of these parameters are specified in the POST command shown in Appendix B as follows:\n\n","As shown, both the POST and GET commands include the URL of the device in the device type field. As described below, this directs server  to a Web site associated with device  and, thereafter, in the case of a GET Command, to retrieve a specific Web page that is generated for the device by server  or any other device in communication with network . It is noted that, since the POST command retrieves parameters, not a document like the GET command, the POST command need not include a URL of the device.","Referring back to , process  (in server ) receives () the command from embedded controller . Process  identifies the command as either a POST or GET command based on a header, such as \u201cPOST\/CONTROL HTTP\/1.1\u201d (see the headers in Appendices A and B), in the command. Process  uses an XML parser to parse () the various identifying fields, such as device type, serial number, and UUID, from the command.","Process  identifies () the instance of device  based on the information parsed from the command. That is, process  uses the device type, serial number, and UUID field information to identify the instance.","If the Command is a POST Command","The remaining identification information from the command is used to narrow the search through database  down to data for the specific instance of device . The device serial number and\/or UUID are used to retrieve operational parameters specific to device .","Once the appropriate data has been identified (), process  retrieves () that data using application logic . Process  compares the values of the operational parameters to those included in the POST command. If the values are the same, process  returns an indication that there are no new\/updated values for device . If the values of the operational parameters are different, process  adds the appropriate updated value fields to the POST command and sends () the POST command, with the updated operational parameters, back to embedded controller . Thus, only those operational parameters that differ from their original values are returned to embedded controller  in the POST command.","If the Command is a GET Command","As was the case above with the POST command, the remaining identification information from the command is used to narrow the search through database  down to data for the specific instance of device . In particular, the device serial number and\/or UUID are used to retrieve () a configuration file that is specific to device . Process  sends () the configuration file to embedded controller . The configuration file may be a Web page identified by the URL in the device type field. This Web page is generated by server  using parameters stored in database  and then sent to device . It is noted that the complete Web page itself need not be stored. Alternatively, the GET command may retrieve separate configuration files and Web pages.","Process  in embedded controller  receives () the data (operational parameters or configuration file) from server  in response to sending () the command. Process  uses the data to update\/reset device . For example, if device  is a heating system, a new operational parameter may be a new temperature setting for its thermostat. In this example, embedded controller  sets the new temperature accordingly. If the device is a television, a new operational parameter may indicate that certain pay television stations are now available. In this case, embedded controller  performs any appropriate decoding\/descrambling functions on the television signal.","For both the POST and GET commands, the reply from server  to embedded controller  may contain a URL. The URL directs embedded controller  to a Web site that contains additional information, e.g., operational parameters and the like, for device . Embedded controller  may then retrieve any necessary information from that Web site. Additionally, the reply may contain an indication that server  contains additional data for embedded controller  to retrieve. In this case, embedded controller issues a new POST or GET command, whichever is appropriate based on the additional data identified in the reply, and processes , described herein are repeated to retrieve the additional data from server . The initial command and\/or reply may be encrypted by server  and decrypted by embedded controller . Any of a number of commercially-available encryption technologies may be used. Server  may also incorporate a digital signature into the reply. Embedded controller  authenticates the digital signature when it receives the reply, thereby authenticating the reply.","Process  may also add value fields to the POST or GET command that are unrelated to the fields originally included in the POST or GET commands output by controller . For example, if the data retrieved () by process  includes additional parameters that require updating and that were not included in an original POST command, process  adds the necessary fields and parameters to the POST command that it returns to embedded controller . In this regard, server  may store data to be delivered to controller  in a queue. When controller  next contacts server , the data from the queue may be transferred to controller , regardless of whether the data corresponds to data in the original command.",{"@attributes":{"id":"p-0063","num":"0073"},"figref":"FIG. 3","b":["40","41","40","41","40"]},"Referring to , process  in embedded controller  begins by sending () a command to server . The command, in this case, is an HTTP GET command, since it is requesting a document, not individual operational parameters. The document is an XML document that contains a list of operational parameters to be updated. Using this document, embedded controller  can change the operational parameters that it periodically updates.","Process  in server  receives () the command from embedded controller , parses () the command using an XML parser to obtain the information specific to the instance of device , and identifies () the appropriate document based on this information. As before, the information that identifies the instance of device  includes, among other things, the device type, its serial number, and its UUID. Process  retrieves () the document containing the list of operational parameters to be updated, and sends () the document back to embedded controller .","Process  in embedded controller  receives () the document from server , parses () the operational parameters to be updated from the document, and formulates () a POST command to send to server . The command is formulated using a command template (not shown), into which process  inserts the operational parameters parsed from the document. Process  sends this second command to the server. At this point, processes  and  operate () in the same manner as processes  and , respectively, when used with a POST command. Accordingly, the details of processes , are not repeated here.","This alternative embodiment may be generalized further. For example, rather than simply retrieving a list of operational parameters, embedded controller  may retrieve, from server , a list of operations that it is to perform. For example, that list may contain operational parameters to be updated, times at which the updates are to occur, a schedule of diagnostic tests, and the like. Any operation that may be performed by embedded controller  may be included on the list.","The operations in the list may be Simple Object Access Protocol (SOAP) calls that are scripted using XML. Briefly, SOAP is a recognized standard for performing remote procedure calls. Scripting of SOAP calls using XML is described in U.S. patent application Ser. No. 10\/123,960, now U.S. Pat. No. 7,178,149, filed concurrently herewith and entitled \u201cXML Scripting of SOAP Commands\u201d, the contents of which are hereby incorporated by reference into this application as if set forth herein in full.","The process for retrieving the list of operations is identical to processes  and , save for the contents of the list itself. The actions that embedded controller takes once it has the list (i.e., ) depend on the contents of the list. For example, the list might specify that parameters are to be updated every hour and may also contain a list of the parameters to be updated. The list may contain XML commands, which can be parsed by embedded controller . Thus, embedded controller  reads the commands in the list and performs the appropriate operations with respect to device .","Architecture","Processes , and , are not limited to use with the hardware\/software configuration of ; they may find applicability in any computing or processing environment. Processes , and , may be implemented in hardware (e.g., an ASIC {Application-Specific Integrated Circuit} and\/or an FPGA {Field Programmable Gate Array}), software, or a combination of hardware and software.","Processes , and , may be implemented using one or more computer programs executing on programmable computers that each includes a processor, a storage medium readable by the processor (including volatile and non-volatile memory and\/or storage elements), at least one input device, and one or more output devices.","Each such program may be implemented in a high level procedural or object-oriented programming language to communicate with a computer system. Also, the programs can be implemented in assembly or machine language. The language may be a compiled or an interpreted language.","Each computer program may be stored on a storage medium or device (e.g., CD-ROM, hard disk, or magnetic diskette) that is readable by a general or special purpose programmable computer for configuring and operating the computer when the storage medium or device is read by the computer to perform processes , and ,.","Processes , and , may also be implemented as a computer-readable storage medium, configured with a computer program, where, upon execution, instructions in the computer program cause the computer to operate in accordance with processes , and ,.","The invention is not limited to use with the protocols and standards described above. For example, Web server  may use Java Servlets, ASP (Active Server Pages), and\/or ISAPI (Internet Server Application Programming Interface) to communicate with application logic , instead of, or in addition to, CGI. The commands sent by embedded controller  and\/or server  (e.g., in , , ) are not limited to HTTP GET and POST commands. Any commands and\/or requests for requesting and receiving data may be used.","The data transferred to embedded controller  by server  is not limited to operational parameters or configuration files. The data may include, for example, a schedule of actions to be performed by device  that is based on information pertaining the owner of the device. For example, owner preferences may be stored in database . The instance-specific data may be used by server  to correlate the owner of the device to the appropriate preferences. These preferences then may be transmitted back to device  to control the operation thereof.","The original parameters sent by embedded controller  to server  may be used by server  to calculate new, updated parameters based on data stored in database . Thus, the invention is not limited to simply retrieving updated data, but may also include calculating new data based on currently-available data.","The documents and commands described above are not limited to XML format. Any computer language may be used for the commands. The documents may be in any format, for example, HTML (Hypertext Markup Language) documents may be used. In addition, the invention is not limited to use with the Web, Web servers, and the like. The servers and embedded controllers described herein may be the same type of general-purpose computer appropriately programmed, or different devices.","This invention relates generally to scripting simple object access protocol (SOAP) commands using extensible markup language (XML) and to providing the resulting XML script to a device for execution.",{"@attributes":{"id":"p-0080","num":"0090"},"figref":"FIG. 4","b":["410","410","411","417","411","417"]},"Device  is connected to an internal network , such as a LAN. A router or modem  couples internal network  to an external network , such as the Internet\/World Wide Web (Web). External network  runs TCP\/IP (Transmission Control Protocol\/Internet Protocol) or some other suitable protocol. Network connections are via Ethernet, telephone line, wireless, or other transmission media.","External network  contains a server , which is a computer or any other processing device. Server  communicates with embedded controller  over external network  and internal network . Embedded controller  has a local IP (Internet Protocol) address that can be resolved within internal network . However, this local IP address may not be recognizable by devices on external network , such as server . As such, server  may not be able to directly address device .","Embedded Controller","Embedded controller  runs software , which includes Web client application  and operating software . Web client application  includes a TCP\/IP protocol stack that allows embedded controller  to communicate over external network . Device operating software  provides an interface between Web client application  and a database  in memory . Through device operating software , embedded controller  retrieves data stored in database  and stores data in database .","Software  also includes an XML interpreter  and a SOAP interpreter . XML interpreter  is a module that receives XML script, parses the script, and performs the functions identified by the script. As background, XML is a self-describing computer language, meaning that fields in XML code identify variables and their values in the XML code. For example, a \u201cdata\u201d field is delineated by \u201c<data>\u201d to indicate the start of the field and \u201c<\/data>\u201d to indicate the end of the field. XML is used because it can be generated, parsed and understood relatively easily.","Among the functions in the XML script may be an instruction to identify a SOAP command and to pass the SOAP command to SOAP interpreter  for processing. An example of another function includes a statement that controls relative or absolute time to execute the SOAP command. SOAP interpreter  receives SOAP commands from XML interpreter  and executes those commands. Examples of SOAP commands that can be executed by the embedded controller or agent include setting the value of a variable, uploading or downloading a file, restarting the software, or any action specific to the apparatus.","Database  stores data, such as operational parameters, XML script, and identification information for the instance of device . What is meant by \u201cinstance\u201d is the specific identity of device  as distinguished from other identical devices. The identification information stored in database  identifies the instance of device . This identification information may include data identifying the type of the device, a common (or \u201cfriendly\u201d) name for the device, the manufacturer of the device, the model name of the device, the model number of the device, the serial number of the device, or a universal unique identifier (UUID) for the device.","The device type is the name of the device. The common name of the device is how the device is known in the vernacular, e.g., \u201ctelevision\u201d. The manufacturer identifies the manufacturer of the device, e.g., Sony\u00ae. The model name identifies the particular model of the device, e.g., Wega\u00ae. The model number identifies the model number of the device, e.g., XBR400\u00ae. The serial number identifies the serial number of a particular instance of the device, e.g., 53266D. The UUID is a universal identifier for the instance of the device, e.g., 4A89EA70-73B4-11d4-80DF-0050DAB7BAC5. Of the data shown above, generally only the serial number and the UUID are unique to the instance of device .","The identification data stored in database  is used by embedded controller  to retrieve XML script specific to the instance of device  (or for a particular type of device ) from server . A device-initiated process for retrieving the XML script is described below.","Server","Server  is a computer that runs an HTTP (Hypertext Transfer Protocol) Web server computer program. Server  includes a controller , such as a microprocessor, for executing software to perform the functions described below. To avoid confusion in terminology, the following reads as though those functions are performed by server , even though software in controller  of server  performs the functions.","Server  executes Web server software  to communicate over external network . Web server software  also hosts a Web page associated with device . The Web page (not shown) is displayed on computer  of a user, such as the owner of device , who may select some actions to be sent to the device. For example, a remote operator may want to update three operational variables, which requires three SOAP commands. These three SOAP commands are wrapped in an XML script that executes the commands as a single operation. The XML script, along with any input updated operational parameters (if desired) are transmitted to Web server software  over external network . Web server software  stores the XML script in database  of memory . An example of a process for updating operational parameters is described in U.S. patent application Ser. No. 09\/667,737, filed Sep. 22, 2000, the contents of which are incorporated into this application by reference as if set forth herein in full.","Web server software  stores and retrieves XML script from database  using application logic . Application logic  is software for accessing database  using Java servlets and a JDBC (Java Data Base Connectivity) database driver. The XML script can be stored in database  individually or as part of a configuration file for an instance of device .","Computer","Computer  is personal computer (PC) or other machine that includes a processor , a memory , and a storage medium  (see view ). Storage medium  stores computer programs , which are executed by processor  out of memory . Computer programs  include a Web client application  containing a TCP\/IP protocol stack for communicating over the Internet, a Web browser  such as Microsoft\u00ae Internet Explorer\u00ae for accessing Web pages, an operating system (OS)  such as Microsoft\u00ae Windows98\u00ae, and executable instructions  for implementing process , which is shown in .","Process  generates XML script containing one or more SOAP commands from user-generated code provided to computer . The code may be input by the user via a graphical user interface (GUI) (not shown), for example, or it may be retrieved from a storage medium or over network .","The code has a syntax that can be understood and interpreted by instructions . For example, the code may be a commonly-understood computer language, such as BASIC or \u201cC\u201d, or a form of pseudo-code specific to the invention. The code defines functions, such as conditional statements (e.g., If-Then or If-Then-Else statements), control statements (e.g., do While or do Until loops), or exception handlers, meaning fail-safe mechanisms that are triggered in the code in the event that an instruction in the code fails. The functions affect the sequence of execution of the resulting XML code and\/or SOAP commands.","An example of user-generated C\/C++ code is set forth below:","int local = 8;","int total = 0;","while ( total < 10 )","{\n\n","}","This code initializes integer variables \u201clocal\u201d and \u201ctotal\u201d to values of \u201c8\u201d and \u201c0\u201d respectively. The code includes a \u201cWhile\u201d loop, meaning that the loop between the brackets \u201c{ }\u201d is continually executed while the value of total is less than \u201c10\u201d, whereafter processing within the loop is discontinued. Within the loop, the value of \u201ctotal\u201d is set equal to the result of a SOAP command called \u201cSomeFunction\u201d processing the previous value of \u201ctotal\u201d and another SOAP command called \u201cAnotherFunction\u201d processing \u201clocal\u201d.","Process  receives () code, such as that shown above, that defines one or more functions (e.g., a \u201cWhile\u201d loop) and one or more SOAP commands (e.g., \u201cSomeFunction\u201d and \u201cAnotherFunction\u201d). Process  translates () the code to XML script that, when interpreted, performs the functions and contains the SOAP commands. To perform the translation, process  may compile the code, interpret the functions in the compiled code, and generate appropriate XML script from the compiled code. An appropriate compiler may be included within instructions  for this purpose. The format of the SOAP commands may be static and known to the compiler, or the format may be determined dynamically from a WSDL (Web Services Description Language) document. WSDL is a standard for describing SOAP commands. WSDL is itself an XML document that can be interpreted automatically. WSDL defines the set of functions available and the format of each of the SOAP commands.","WSDL usually describes the functionality for a particular device or Web service. By reading WSDL, a program can display functions to a user, then create SOAP command(s) for the function(s) selected by the user. By way of example, there may be one thousand devices, all with individual settings, and it is desired to set all of the devices to 6% lower power usage. Using traditional SOAP commands, the server must be able to address each device, obtain each device's current setting, calculate 94% of its value, then write that new value back to each device, all through issuing individual SOAP commands. Using a SOAP script, the same script can be sent to all of the devices because the variable is evaluated locally at each device. As the population of monitored devices grows, this kind of distributed processing becomes more useful.","Continuing with the example set forth above, process  translates () the code into the following XML script:","<Root>\n\n","<\/Root>","The XML script contains the same functions and SOAP commands as the original C\/C++ code input by the user. For example, the \u201cWhile\u201d loop is expressed as",{"@attributes":{"id":"p-0107","num":"0000"},"ul":{"@attributes":{"id":"ul0016","list-style":"none"},"li":{"@attributes":{"id":"ul0016-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0017","list-style":"none"},"li":["<While condition=\u201ctotal < 10\u201d>and <\/While>\n\nand the SOAP commands are expressed as\n","<SOAP-ENV:Body>\n        \n        ","<\/SOAP-ENV:Body>\n\nand\n","<SOAP-ENV:Body>\n        \n        ","<\/SOAP-ENV:Body>\n\nThe expression \u201c<Return variable=\u201ctotal\u201d\/>\u201d returns the value of the variable \u201ctotal\u201d to the XML script. Thus, the output of the SOAP command may be passed back to the XML script as an argument in the SOAP command and used as a variable in the XML script. Also, the XML script may be written so that a variable, such as \u201ctotal\u201d, is passed as an argument to a SOAP command.\n"]}}}},"An example of XML script containing a conditional \u201cIF\u201d statement is set forth in Appendix A attached hereto. An example of XML script containing an exception handler is set forth in Appendix B attached hereto.","After the code has been translated () to XML script, process  provides () the XML script to server  over network . Process  may send the XML script to server  through a Web interface, along with identification information that specifies the instance of device  for which the XML script is intended. Web server software  on server  receives the XML script over network  and application logic  stores the XML script in database , along with its associated identification information.","Device-Initiated Retrieval of the XML Script","Embedded controller  executes software  to retrieve the XML script intended for device  from remote server . In response, server  executes software  to send the XML script to embedded controller .  shows these processes in detail. The left half of , titled \u201cEmbedded Controller\u201d shows process  performed by embedded controller , and the right half of , titled, \u201cServer\u201d, shows process  performed by server .","Process  generates and sends () a command to server . The command, or a modified version thereof, is sent by embedded controller  to server  periodically. It is through this command that embedded controller  polls server  to determine if there is any new\/updated XML script for device  on server .","The command includes XML data identifying device . The data identifies the specific instance of device  and may include a device type field and one or both of a device serial number field and a device UUID. The command may also include a common name field, a manufacturer name field, a model name field, and a model number field, which specify the information set forth above for the device.","The command may be either an HTTP GET command or an HTTP post command. The data included in those commands is similar, with the difference being that the HTTP GET command retrieves a document, such as a file containing the XML script, and the HTTP POST command retrieves information, such as the XML script itself.","Process  (in server ) receives () the HTTP command from embedded controller . Process  identifies the command as either a POST or GET command based on a header, such as \u201cPOST\/CONTROL HTTP\/1.1\u201d (for a POST command), in the command. Process  uses an XML parser to parse () the various identifying fields, such as device type, serial number, and UUID, from the command.","Process  identifies () the instance of device  based on the information parsed from the command. That is, process  uses the device type, serial number, and UUID field information to identify the instance of device .","If the Command is a POST Command","The identification information from the command, in particular the device serial number and\/or UUID, is used to search through database  for XML script specific to device . Once the appropriate XML script has been identified (), process  retrieves () that XML script from database  using application logic . Process  determines if the XML script has been updated since it was last retrieved. This may be done by examining a revision number or date included in a header associated with the XML script. If the XML script has been updated, process  adds the updated XML script to the reply portion of POST command and sends () the POST command, with the updated XML script, back to embedded controller .","If the Command is a GET Command","As was the case above with the POST command, the identification information from the command is used to search through database  for XML script for the specific instance of device . In particular, the device serial number and\/or UUID are used to retrieve () a configuration file that is specific to device . The configuration file contains the XML script for device . Process  sends () the configuration file to embedded controller .","Process  receives () the XML script containing one or more SOAP commands from server  in response to the HTTP command. Process  (in particular Web client application  in device ) provides the XML script to XML interpreter , where the XML script is executed.","Referring to , a process  is shown for executing the XML script in embedded controller . Process  is implemented by executable instructions in XML interpreter  and SOAP interpreter .","XML interpreter  interprets () the XML script to perform the functions contained therein. For example, if there are any conditional statements, control statements, or exception handlers defined by the XML script, XML interpreter performs those functions on the appropriate commands and variables contained in the XML script.","During processing, XML interpreter  parses () the XML script to identify any SOAP commands contained in the XML script. Identified SOAP commands are passed to SOAP interpreter , which executes () the SOAP commands. Results of the SOAP commands may be passed back to the XML interpreter  for further processing. Likewise, variables may be passed from the XML script to the SOAP commands.","Using XML script in this manner, embedded controller  is able to execute multiple SOAP commands in response to a single device-initiated query. Thus, device  can perform reconfiguration operations or the like using multiple SOAP commands without maintaining communication with an external device, such as server , during the reconfiguration process. The XML script can specify (future) times at which the SOAP commands are to be executed, thus providing the device with further control over its own operation. SOAP interpreter  implements the SOAP standard to interpret and execute function calls. As more devices and software systems have support for SOAP, device  will be able to execute a script that controls multiple devices by calling their SOAP services.","Architecture","Processes , ,  and  are not limited to use with the hardware\/software configuration of ; they may find applicability in any computing or processing environment. Processes , ,  and  may be implemented in hardware (e.g., an ASIC {Application-Specific Integrated Circuit} and\/or an FPGA {Field Programmable Gate Array}), software, or a combination of hardware and software.","Processes , ,  and  may be implemented using one or more computer programs executing on programmable computers that each includes a processor, a storage medium readable by the processor (including volatile and non-volatile memory and\/or storage elements), at least one input device, and one or more output devices.","Each such program may be implemented in a high level procedural or object-oriented programming language to communicate with a computer system. Also, the programs can be implemented in assembly or machine language. The language may be a compiled or an interpreted language.","Each computer program may be stored on a storage medium or device (e.g., CD-ROM, hard disk, or magnetic diskette) that is readable by a general or special purpose programmable computer for configuring and operating the computer when the storage medium or device is read by the computer to perform processes , ,  and .","Processes , ,  and  may also be implemented as an article of manufacture, such as one or more machine-readable storage media (e.g., compact or floppy disc), each configured with a computer program, where, upon execution, instructions in the computer program cause a machine (e.g., a computer) to operate in accordance with one or more of processes , ,  and .","The invention is not limited to use with the protocols and standards described above. For example, Web server may use Java Servlets, ASP (Active Server Pages), ISAPI (Internet Server Application Programming Interface), or .NET interfaces to communicate with application logic . The HTTP commands sent by embedded controller  and\/or server  are not limited to HTTP GET and POST commands. Any commands and\/or requests for requesting and receiving data may be used.","The invention is not limited to the protocols and architecture described with respect to . Similarly, the invention is not limited to device-initiated transfers of the XML script. For example, computer  may transmit the XML script directly to embedded controller  (rather than by way of server ) via e-mail, file transfer protocol (FTP), message queues, or any other type of data transfer mechanism. These other transfer protocols may also be used with device-initiated transfers. Server  may generate the XML script and transmit it directly to controller . The XML script may be used on any machine, and is not limited to use with embedded controllers. RPCs other than SOAP calls may be scripted using XML and the resulting XML script may be processed in the manner described herein. SOAP commands other than those described herein may be used. The processes described herein may be implemented using circuitry such as programmable logic, logic gates, a processor, and\/or a memory.","Other embodiments not described herein are also within the scope of the following claims.","GET \/Widget\/config.xml HTTP\/1.1","HOST: www.acme.com","Content-Type: text\/xml","Content-length: nnn","<?xml version=\u201c1.0\u201d?>","<root xmlns=\u201curn:schemas-upnp-org:device-1-0\u201d>","<specVersion>\n\n","<\/specVersion>","<device>\n\n","<\/device>","<\/root>","POST \/CONTROL HTTP\/1.1","Host: www.acme.com","Content-Type: text\/xml","Content-length: nnn","<?xml version=\u201c1.0\u201d?>","<root xmlns=\u201curn:schemas-upnp-org:device-1-0\u201d>","<specVersion>\n\n","<\/specVersion>","<device>\n\n","<\/device>","<\/root>","<parameters>","<Airflow xsd:type=\u201cinteger\u201d>378<\/Airflow>","<Humidity xsd:type=\u201cdouble\u201d>46.7<\/Humidity>","<Motor xsd:type=\u201cinteger\u201d>1500<\/Motor>","<Vent xsd:type=\u201cinteger\u201d>4<\/Vent>","<\/parameters>","And the response containing parameters that have been modified:","HTTP\/1.1 200 OK","Connection: close","Content-Type: text\/xml","Content-length: nnn","Date: Fri, 13 Jun. 2000 13:43:05 GMT","<?xml version=\u201c1.0\u201d?>","<parameters>","<Motor xsd:type=\u201cinteger\u201d>1250<\/ Motor >","<Vent xsd:type=\u201cinteger\u201d>2<\/Vent>","<\/parameters>"],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
