---
title: Sensitive data protection
abstract: A computer-implemented method for protecting sensitive data is described. In one embodiment, the method includes identifying data stored at a first storage system. The identified data is classified as sensitive data. The method includes copying at least a portion of the identified sensitive data from the first storage system, transferring the copied portion of the identified sensitive data from the first storage system to a file stored at a second storage system, and storing a virtual symbolic link at the first storage system. The virtual symbolic link includes information regarding the file stored at the second storage system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09614826&OS=09614826&RS=09614826
owner: Symantec Corporation
number: 09614826
owner_city: Mountain View
owner_country: US
publication_date: 20140520
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["Advancements in media delivery systems and media-related technologies continue to increase at a rapid pace. Increasing demand for media has influenced the advances made to media-related technologies. Computer systems have increasingly become an integral part of the media-related technologies. Computer systems may be used to carry out several media-related functions. The widespread access to media has been accelerated by the increased use of computer networks, including the Internet and cloud networking.","Many homes and businesses use one or more computer networks to generate, deliver, and receive data and information between the various computers connected to computer networks. Users of computer technologies continue to demand increased access to information and an increase in the efficiency of these technologies. Improving the efficiency of computer technologies is desirable to those who use and rely on computers.","With the widespread use of computers and mobile devices has come an increased presence of and continued advancements in data storage. For example, advancements in computing device processing, computer network availability, and data storage reliability have generated multiple cloud storage systems. However, data stored in a typical cloud storage system may fail to provide sufficient data protection.","According to at least one embodiment, a computer-implemented method for protecting sensitive data is described. In one embodiment, the method may include identifying data stored at a first storage system. The data may be classified as sensitive data. The method may include copying at least a portion of the identified sensitive data from the first storage system and transferring the copied portion of data to a file stored at a second storage system and storing a virtual symbolic link at the first storage system. The virtual symbolic link may include information regarding the file stored at the second storage system. In some cases, the virtual symbolic link may include information regarding a type of file associated with the identified sensitive data. In some cases, the virtual symbolic link may be associated with a file with a custom file type. Accordingly, an application may be registered as a handler of the custom file type.","In some embodiments, credentials to one or more cloud storage systems may be acquired. The first storage system may be among the one or more cloud storage systems. The acquired credentials may be used in conjunction with a public application programming interface (API) from the one or more cloud storage systems to access content on the one or more cloud storage systems. The content on the one or more cloud storage systems may be scanned to identify files containing sensitive data. In one embodiment, upon accessing the content from each of the one or more cloud storage systems, an aggregated view of the accessed content may be displayed.","In one example, the content on the one or more cloud storage systems may be periodically scanned to identify new sensitive data. Creation of a new file at one of the one or more cloud storage systems may be detected by various methods. Likewise, modification of an existing file at one of the one or more cloud storage systems may be detected. In some cases, new and\/or modified existing files may be detected via a notification callback API provided by a cloud storage system. Accordingly, sensitive data in a new file and\/or sensitive data in a modified existing file may be detected in real-time. In some cases, at least a portion of the identified data that is transferred from the first storage system to the second storage system may be deleted from the first storage system. Thus, an entire file and\/or a portion of a file may be deleted from the first storage system.","A computing device configured for protecting sensitive data is also described. The device may include a processor and memory in electronic communication with the processor. The memory may store instructions that are executable by the processor to identify data stored at a first storage system. The data may be classified as sensitive data. The memory may store instructions that are executable by the processor to copy at least a portion of the identified data from the first storage system, transfer the copied portion of the identified data from the first storage system to a file stored at a second storage system, and store a virtual symbolic link at the first storage system. The virtual symbolic link may include information regarding the file stored at the second storage system.","A computer-program product for protecting sensitive data is also described. The computer-program product may include a non-transitory computer-readable medium that stores instructions. The instructions may be executable by a processor to identify data stored at a first storage system. The data may be classified as sensitive data. The memory may store instructions that are executable by the processor to copy at least a portion of the identified data from the first storage system, transfer the copied portion of the identified data from the first storage system to a file stored at a second storage system, and store a virtual symbolic link at the first storage system. The virtual symbolic link may include information regarding the file stored at the second storage system.","Features from any of the above-mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments, features, and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.","While the embodiments described herein are susceptible to various modifications and alternative forms, specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However, the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather, the instant disclosure covers all modifications, equivalents, and alternatives falling within the scope of the appended claims.","The systems and methods described herein relate to protecting sensitive data. More specifically, the systems and methods described herein relate to protecting sensitive data stored on a cloud storage system. Examples of cloud storage systems include Google Drive, DropBox, Amazon Cloud Storage, iCloud, SkyDrive, OneDrive, Box.net, SugarSync, etc. Cloud services such as these are popular because they make it convenient to share documents between different users or for the same user across any machine with Internet access. However, company policies often prohibit employees from placing work related documents in such services because the data protection is not controlled by the company and because handling documents on these cloud storage platforms may compromise confidential data. Accordingly, the present systems and methods provide both convenient personal usage as well as convenient, secure, and employer-controlled usage. Additionally, because multiple corporate documents are presently stored on the conventional, insecure cloud storage platforms, the present systems and methods provide ways to find and move sensitive data from the insecure cloud storage platforms onto a customizable secure cloud storage platform.","The present systems and methods include registering an application as a handler (i.e., an open-in target) for a custom file type. Files of this custom type may contain a reference to a secure cloud storage location. Thus, files of this custom type may represent a virtual symbolic link from an insecure cloud storage system to a location on a secure cloud storage system.","Each of the conventional cloud storage providers (e.g., DropBox, Box.Net, SkyDrive, Google Drive, etc.) may make one or more application programming interfaces (APIs) publically available for third-party use. Thus, upon acquiring a user's credentials for a particular conventional cloud storage provider, the present systems and methods may use a publically available API from the particular cloud storage provider to browse, scan, read, write, modify, and generally perform any available file system operation in relation to the accessible content. Accordingly, the present systems and methods may use the public APIs and the acquired credentials to search the contents of insecure cloud storage providers, identify documents containing sensitive data, move the identified documents into the secure storage location, and replace the original content with a linking file, a file that dynamically links to the sensitive data moved to the secure storage location. In some cases, the process of identifying documents containing sensitive data may be based on a user policy, an administrator policy, a user configuration, an administrator configuration, keyword search, machine learning, etc. The contents of the linking file may indicate the new location for the data within the secure storage location, thus creating a virtual symbolic link from the insecure storage system to the secure cloud storage location.","In some cases, the present systems and methods may present an aggregated view of multiple conventional cloud storage services. In some cases, a virtual drive may be mounted on a file system of a particular operating system (e.g., Explorer in WINDOWS\u00ae, Finder in MAC OS\u00ae, etc.). The files from multiple conventional cloud storage services may be arranged and displayed as folders and files of the mounted virtual drive. In one example, a virtual file system at a virtual root may be presented, having sub-trees as roots for each of the different cloud storage services. The present systems and methods may enable a user to simultaneously browse the aggregated view of multiple insecure cloud storage services and manually identify files containing sensitive information. The user may be enabled to initiate an action to move and\/or copy selected files from the insecure locations to the secure storage location. The system may automatically replace the transferred and\/or copied files with a virtual symbolic link that points to the new location within the secure storage location.","In one embodiment, the present systems and methods may perform automatic scans of the insecure cloud storage services to identify files containing sensitive information, automatically move those files from the insecure storage service to a secure storage location, and replace the transferred files with virtual symbolic link files. In some cases, the present systems and methods may periodically scan the insecure cloud storage services for new documents, analyze the new documents, identify files containing sensitive information among the new files, automatically move the identified files from the insecure storage service to a secure storage location, and replace the transferred files with virtual symbolic link files.","The conventional cloud storage providers may make callback APIs available to third-party programmers. Thus, in one embodiment, the present systems and methods may register callback APIs to receive real-time notifications regarding new and\/or modified content and move the identified content to a secure storage location. Accordingly, the present systems and methods may discover and move sensitive data to secure storage with a minimum window of exposure time on the insecure storage system.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1","b":["100","105","100","105","110","115","120","1","120","2","125"]},"Examples of the device  include mobile devices, smart phones, personal computing devices, computers, laptops, desktops, servers, a set top box providing access to media content, gaming consoles, home automation systems, data storage systems, and generally any computing device able to connect to a data communication network. Examples of server  may include a cloud server, a data server, a corporate server, a home automation server, etc.","In some configurations, device  may include a data protection module  and an application . Examples of application  may include any combination of a program installed on a server, a program installed on a personal computer, a mobile application installed on a mobile computing device, a web browser, a web-based application (e.g., any combination of JavaScript, hypertext markup language (HTML), and cascading style sheets (CSS)), etc. In some embodiments, application  may be installed on device  to enable a user of device  to interface with a function of server , storage systems , database , and\/or data protection module . For example, application  may allow device  to interface with the data protection module  on another device such as on server . In some cases, server  may include an application similar to application .","In some embodiments, device  may communicate with server  via network . Examples of network  may include cloud networks, local area networks (LAN), wide area networks (WAN), virtual private networks (VPN), wireless networks (using 802.11, for example), cellular networks (using 3G and\/or LTE, for example), etc. In some configurations, the network  may include the Internet.","In some embodiments, storage systems  may each include unprotected files  and virtual symbolic links . In one example, storage systems  represent cloud storage systems and\/or file hosting services such as Dropbox, SkyDrive, OneDrive, Google Drive, iCloud, Amazon Cloud Drive, MediaFire, Zoolz, OpenDrive, JustCloud, Box, SugarSync, and the like. In some cases, each unprotected file  may represent a file stored on a particular cloud storage system that has not been protected via one or more operations of data protection module . Each virtual symbolic link  may be associated with a linking file. The linking file may include information regarding an unprotected file  that has been protected via one or more operations of data protection module . In some cases, each virtual symbolic link  may be associated with a list of protected files.","As illustrated, server  may be coupled to database . In some cases, database  may include protected files . In one embodiment, protected files  may include copies of certain files stored on storage systems . In one example, at least one virtual symbolic link  stored on storage system - and\/or - may link to at least one protected file  stored in database . Accordingly, protected files  may include copies of selected files from storage systems .","In some embodiments, device  and\/or server  may each include a data protection module where at least a portion of the functions of data protection module  are performed separately and\/or concurrently on device  and\/or server . Data protection module  may be configured to protect data stored on storage systems . In one example, data protection module  may acquire access to data stored on storage systems . Thus, data protection module  may scan the unprotected files  on storage systems , and based on the scan, data protection module  may identify a file among the unprotected files  that includes sensitive data. Accordingly, data protection module  may copy at least a portion of the sensitive data from the identified file to a protected file  on database . Additionally, data protection module  may generate a virtual symbolic link . In some cases, the virtual symbolic link  may include a file that contains information regarding the protected file  stored on database  and\/or information regarding a file stored on storage systems . Data protection module  may store the generated virtual symbolic link  on at least one of the storage systems . In some cases, data protection module  may replace an original file at storage systems  with a virtual symbolic link . Further details regarding the data protection module  are discussed below.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 2","FIG. 1"],"b":["130","130","130","130","205","210","215","220","225","130","130"],"i":["a","a ","a ","a ","a "]},"In one embodiment, identification module  may identify data stored at a first storage system (e.g., storage systems - and\/or -). In some cases, the identified data may be classified as sensitive data. For example, identification module  may identify files on the first storage system that contain business secrets, trade secrets, confidential information, etc. In some embodiments, data module  may copy at least a portion of the identified sensitive data from the first storage system and transfer the copied portion of the identified sensitive data from the first storage system to a file at a second storage system. For example, data module  may copy a portion of a first file at a first storage system and transfer the copied portion of the first file to a second file at a second storage system. Additionally, or alternatively, data module  may copy an entire file, bit by bit, and transfer the copied data to a second storage system. In some cases, data module  may transfer the original file at the first storage system and move the original file to the second storage system. In one example, data module  may delete at least a portion of the identified sensitive data from the first storage system. Accordingly, data module  may delete only a portion of a file and\/or data module  may delete an entire file from the first storage system.","In some embodiments, the second storage system may include a secure cloud storage system such as NORTON ZONE\u00ae. The second storage system may provide data protection and security features that other conventional storage systems, including the first storage system, do not provide, protecting data in-use (endpoint actions), in-motion (network traffic), and at-rest (data storage). For example, data protection module -may perform a virus scan upon upload of data to the second storage system, a virus scan on share, a virus scan on download, etc. Additionally, in conjunction with the second storage system, the data protection module -may implement a key encryption system based on SYMANTEC\u00ae Multiblind Key Encryption and\/or SYMANTEC\u00ae Encryption Management Server (SEMS). Such a key encryption system may enable corporations to manage their own encryption keys, retain control over their sensitive data, and provide data protection and data security that surpasses that of conventional cloud storage systems.","In some embodiments, linking module  may store a virtual symbolic link at the first storage system. For example, \u201cfile.doc\u201d may be stored at a first storage system. In one instance, data module  may perform a bit-by-bit copy of \u201cfile.doc\u201d and transfer the copied data to a second storage system. In another instance, data module  may move \u201cfile.doc\u201d from the first storage system to the second storage system. In some embodiments, data module  may delete \u201cfile.doc\u201d from the first storage system. For example, once \u201cfile.doc\u201d is copied to the second storage system, data module  may delete \u201cfile.doc\u201d at the first storage location. In place of the deleted file, linking module  may store a virtual symbolic link at the first storage system.","In some cases, the virtual symbolic link may include information regarding the file at the second storage system and\/or a file associated with the identified sensitive data. In some embodiments, the virtual symbolic link may include a linking file. The linking file may include a custom file type in some cases. Accordingly, linking module  may be configured to register an application (e.g., application ) as a handler of the custom file type, creating a mapping between the custom file type and the application. Thus, the application may be registered to handle file system events associated with a file of this custom file type, including file system commands such as open, read, write, modify, etc. For instance, linking module  may create at least one registry key containing an association for the custom file type and the application as the handler for each linking file that is of this custom file type. In some embodiments, the linking file may include information regarding the target location, the target file, the original location, the original file, etc.","In one embodiment, the linking file may include information regarding a type of file associated with the identified sensitive data. Upon determining the file Text.doc contains sensitive data, at least a portion of Text.doc may be transferred to a secure location. In one example, Text.doc may be stored on Google Drive. Having gained access to the Google Drive account containing Text.doc, data module  may perform a bit-by-bit copy of Text.doc and store this copy at a secure storage system, such as NORTON ZONE\u00ae cloud storage. In some cases, the file may be transferred based on a public application programming interface (API) provided by the source storage system, which in this example is Google Drive. Accordingly, with access to this same Google Drive account, linking module  may store a virtual symbolic link in place of the original Text.doc via the public API.","In some cases, data module  may delete Text.doc from the Google Drive account. Thus, in the place of this deleted file, linking module  may store a linking file, which, in some cases, may use a custom file type. For instance, the linking file may be associated with a proprietary \u201c.secure\u201d file type as one example. In some embodiments, the custom file type may be associated with an internet media type such as a multipurpose internet mail extensions (MIME) type. In one example, the custom file type may be associated with a uniform type identifier, and may be associated with a reverse domain name notation such as com.norton.zones. Accordingly, linking module  may replace the original content with a file of a new MIME type, whose contents indicate a new location for the data within a secure storage location, thus creating a \u201cvirtual symbolic link\u201d from the insecure storage location to the secure storage location. Thus, via data protection module -, an application such as application  may be given access to the first storage system via proper credentials and in conjunction with one or more publically-available APIs. Accordingly, when a user selects the virtual symbolic link to open it, the application, registered to handle such files and given the proper access, may handle the request. Thus, the application  may interpret the data embedded in the virtual symbolic link such that the copy of \u201cfile.doc\u201d stored at the second storage location is seamlessly accessed as if \u201cfile.doc\u201d were still at the first storage system. Accordingly, the application may open \u201cfile.doc\u201d stored on the second storage system based on the virtual symbolic link and present the contents of this file to the user. In some cases, the user may access \u201cfile.doc\u201d directly at the second storage system.","In some embodiments, linking module  may preserve in association with the linking file, information regarding the source file. For example, linking module  may preserve the name of an original source file, \u201cText.doc,\u201d by naming the linking file \u201cText.doc.secure.\u201d Additionally, or alternatively, linking module  may store information regarding the original source file within the linking file. In some cases, the linking file may include information regarding the target location and target file. Thus, the linking file may contain a reference to the copied file in the form of an absolute or relative path. Accordingly, after copying Text.doc from the Google Drive account, storing this copy at a secure storage location and replacing the original file with a linking file, a user of this Google Drive account may select the linking file Text.doc.secure, through which the information within the linking file provides a computing system the information needed to resolve the pathname to the copy of Text.doc stored at the secure storage location. Thus, when a user selected Text.doc.secure, the linking file would instruct the computing system to seamlessly open Text.doc at the secure storage location as if the user is opening the original file at the original cloud storage system. In some cases, the linking file may include information that enables the computing system to access the secure storage location. For example, the linking file may include identifying information or credential information associated with the secure storage location.","In one embodiment, access module  may acquire credentials to one or more cloud storage systems. The first storage system may be among the one or more cloud storage systems. Access module  may use the acquired credentials, in conjunction with a public API from the one or more cloud storage systems, to access content on the one or more cloud storage systems. For example, access module  may acquire credentials to a Google Drive account. Upon acquiring these credentials, access module  may use one or more APIs provided by Google Drive to access the data of the associated account. Likewise, the access module  may acquire credentials to an additional cloud storage account. For example, access module  may acquire credentials to a DropBox account, in which case both the Google Drive account and the DropBox account are associated with a common user. Upon acquiring credentials to the DropBox account, access module  may use one or more APIs provided by DropBox to access the data of the DropBox account. In one embodiment, upon accessing the content from each of one or more cloud storage systems, access module  may display an aggregated view of the accessed content. Accordingly, access module  may display content from both the Google Drive account and the DropBox account in a single, common viewing area. In some cases, data module  may indicate which files from the one or more accounts have been securely transferred to the secure storage location, and which files remain unprotected. Thus, access module  may provide a secure user interface that enables a user to view which files have been protected, which files have not been protected, and which of the unprotected files ought to be protected. The secure user interface may enable a user to manually transfer file data to the secure cloud storage, and to configure settings that enable the system to identify files containing sensitive data dynamically and automatically (i.e., without human intervention).","In one embodiment, identification module  may scan the content on one or more cloud storage systems to identify files containing sensitive data. Identification module  may use publically-available APIs from one of the one or more cloud storage systems to scan data associated with a user's account and identify particular documents, thus enabling data protection module -to transfer contents of identified documents to a secure cloud storage and replace the original content with a virtual symbolic link. In some cases, identification module  may inspect the content of a file on the one or more storage systems. Identification module  may perform analysis on the content such as character analysis, word string analysis, and so forth, to detect sensitive data within the file. Additionally, or alternatively, identification module  may perform analysis on filenames, file creation dates, file owner information, information indicating an association between a file and a company, meta-data associated with each file, etc., to determine whether the file contains sensitive data. Identification module  may implement hash algorithms, fuzzy hash algorithms, and machine-learning algorithms to analyze file content to detect sensitive data. In one example, identification module  may implement data leakage prevention (DLP) scanning and\/or content monitoring and filtering (CMF) to identify files containing sensitive data. In one embodiment, identification module  may periodically scan the content on the one or more cloud storage systems to identify new sensitive data.","In one embodiment, detection module  may detect creation of a new file at one of the one or more cloud storage systems. Additionally, or alternatively, detection module  may detect modification of an existing file at one of the one or more cloud storage systems. Detection module  may detect creation of a new file and\/or modification of an existing file via a notification callback API provided by one of the one or more cloud storage systems. Accordingly, detection module  may enable identification module  to identify sensitive data in a timely manner via the notification callback API. Thus, in conjunction with the detection module , identification module  may identify sensitive data in association with the timely detection of the creation of a new file. Similarly, identification module  may identify sensitive data in association with the timely detection of the modification of an existing file.","In some embodiments, data module  may copy a portion of \u201cfile.doc\u201d and save the copied portion in a file (e.g., \u201cfile-portion.doc\u201d) at the second storage system. Data module  may delete the copied portion from \u201cfile.doc\u201d at the first storage system. As one example, \u201cfile.doc\u201d may contain three segments of text. Identification module  may identify the second segment as containing sensitive information, while the first and third segments are identified as not containing sensitive information. Accordingly, data module  may copy the second segment and save the copied second segment in a new file, \u201cfile-portion.doc,\u201d at the second storage system. Data module  may delete the second segment from \u201cfile.doc\u201d at the first storage system and linking module  may replace the deleted second segment with a virtual symbolic link. Thus, linking module  may store within \u201cfile.doc\u201d at the first storage system a virtual symbolic link. This virtual symbolic link may point to the copied second segment portion of \u201cfile.doc\u201d that is saved to the file \u201cfile-portion.doc\u201d at the second storage system. Thus, in some embodiments, the virtual symbolic link may be stored within the file \u201cfile.doc\u201d at the first storage system. In one embodiment, the virtual symbolic link may include a uniform resource identifier (URI). This URI may include a uniform resource name (URN) and\/or a uniform resource locator (URL). The URI may be stored as characters within \u201cfile.doc\u201d at the first storage system. The stored characters may form an active link to the transferred portion of data at the second storage system (e.g., hyperlink, HTML link, etc.). In one embodiment, the URI stored in the original file \u201cfile.doc\u201d may include one or more URL parameters that specify file information, content information, and\/or location information regarding the transferred portion of data, the new file that stores the transferred portion of data, and the second storage system where the new file is stored. Thus, a user may click on the link within \u201cfile.doc\u201d in order to access the copied second segment portion of \u201cfile.doc\u201d saved in file \u201cfile-portion.doc.\u201d In some cases, data module  may transfer all of the data within \u201cfile.doc\u201d at the first storage system to a new file \u201cnew-file.doc\u201d at the second storage system and delete the content within \u201cfile.doc,\u201d leaving an empty file. Linking module  may replace the copied and deleted content of \u201cfile.doc\u201d with a URI that points to \u201cnew-file.doc\u201d at the second storage system. In some cases, upon identifying a file containing only a URI and no other data, the data protection module -may query a user whether to replace the file with the URI with a virtual symbolic link. If the user agrees, the data protection module -may access the directory containing the file with the URI, place a virtual symbolic link in that folder, and delete the file with the URI, thus enabling a user to access the secure data by clicking on the virtual symbolic link directly instead of having to open the file and then click on the URI within the file. Alternatively, the user may retain the file with the URI in order to add data to that file.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 3","FIGS. 1 and\/or 2","FIG. 1","FIG. 1"],"b":["300","300","130","300","105","115","300","135"]},"In certain embodiments, application  may include any combination of a web browser (as illustrated), a web-based application, a program installed on a server (e.g., server ), a program installed on a personal computer (e.g., device ), and\/or a mobile application installed on a mobile computing device (e.g., device ). Application  may display an aggregated view  of data from multiple cloud storage systems such as data from DropBox, Google Drive, SkyDrive, etc. As illustrated, the aggregated view  may display information regarding unprotected and protected files on the multiple cloud storage systems. In one embodiment, the aggregated view  may include a protection symbol to indicate whether a file is protected. As illustrated, data protection module  may display a locked padlock to indicate files that are currently protected on a secure storage system, and an unlocked padlock to indicate files that currently remain unprotected. The aggregated view  may indicate the source of the files (e.g., Google Drive, DropBox, SkyDrive, etc.), and other file information such as filename and file size. Application  may also display a view  of the content of the secure storage location. As illustrated, the view of the secure data files  may include information of files that are currently protected. The view  may include information regarding the protected files such as filename, source, file size, etc.","In some embodiments, application  may allow a user to select a file from the aggregated view  and\/or the secure data files view . As illustrated, a user may select a file in the aggregated view , where a selected file  in the example illustration may include a .XLS spreadsheet file named \u201cSheets.xls.secure.\u201d The selected file  may depict a virtual symbolic link or linking file associated with a file originally located at the indicated source location, which in this case is DropBox. In one configuration, application  may include a content viewer . The content viewer  may display information regarding a selected file. Accordingly, as depicted, content viewer  may display information regarding selected file . As illustrated, content viewer  may indicate that selected file  includes information regarding a protected file stored on the secure storage system.  depicts the selected file  representing a virtual symbolic link to the file \u201cSheets.xls\u201d stored on the secure storage location as indicated in the secure data files view . The selected file  may include information regarding the target file, \u201cSheets.xls,\u201d stored on the secure storage location and a file ID associated with \u201cSheets.xls.\u201d As illustrated, the file ID may include a globally unique identifier (GUID). The selected file  may include additional information not illustrated in , including information regarding file source information (e.g., where the file was created, file owner, etc.), file type, file content, file metadata, file creation data, target file information, target volume, etc. Accordingly, a user may be enabled to protect all of their data across multiple cloud storage systems in a secure and protected environment.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 4","FIGS. 1 and\/or 2","FIG. 1"],"b":["400","400","130","400","135","105"]},"At block , data stored at a first storage system may be identified. The data may be classified as sensitive data. At block , at least a portion of the identified data may be copied from the first storage system. At block , at least a portion of the identified data may be transferred from the first storage system to a file at a second storage system. At block , a virtual symbolic link may be stored at the first storage system. The virtual symbolic link may include information regarding the file at the second storage system. In some cases, the portion transferred from the first storage system to the file at the second storage system may be deleted from the first storage system. Thus, the virtual symbolic link may replace the content transferred from the first storage system to the second storage system, and dynamically link to the content moved to the second storage system.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 5","FIGS. 1 and\/or 2","FIG. 1"],"b":["500","500","130","500","135","105"]},"At block , credentials may be acquired to access content on one or more cloud storage systems. At block , the acquired credentials may be used in conjunction with a public API from each of the one or more cloud storage systems to scan content on the one or more cloud storage systems and identify files containing sensitive data. At block , an aggregated view of the accessed content may be displayed. The aggregated view may enable a user to simultaneously view content from each of the one or more cloud storage systems, to visually determine which files are protected and which files are not protected, and to manually protect unprotected files. At block , new sensitive data may be dynamically detected via a notification callback API. Accordingly, creation of a new file at one of the one or more cloud storage systems may be detected as well as modification of an existing file at one of the one or more cloud storage systems. At block , the content on the one or more cloud storage systems may be periodically scanned to identify new sensitive data.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 6","FIG. 1"],"b":["600","600","105","120","115","600","605","600","610","615","620","625","630","635","640","645","650","665","670","680","655","605","660","685","605"]},"Bus  allows data communication between central processor  and system memory , which may include read-only memory (ROM) or flash memory (neither shown), and random access memory (RAM) (not shown), as previously noted. The RAM is generally the main memory into which the operating system and application programs are loaded. The ROM or flash memory can contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components or devices. For example, the data protection module -to implement the present systems and methods may be stored within the system memory . Applications resident with controller  are generally stored on and accessed via a non-transitory computer readable medium, such as a hard disk drive (e.g., fixed disk ) or other storage medium. Additionally, applications can be in the form of electronic signals modulated in accordance with the application and data communication technology when accessed via interface .","Storage interface , as with the other storage interfaces of controller , can connect to a standard computer readable medium for storage and\/or retrieval of information, such as a fixed disk drive . Fixed disk drive  may be a part of controller  or may be separate and accessed through other interface systems. Network interface  may provide a direct connection to a remote server via a direct network link to the Internet via a POP (point of presence). Network interface  may provide such connection using wireless techniques, including digital cellular telephone connection, Cellular Digital Packet Data (CDPD) connection, digital satellite data connection, or the like. In some embodiments, one or more sensors (e.g., motion sensor, smoke sensor, glass break sensor, door sensor, window sensor, carbon monoxide sensor, and the like) connect to controller  wirelessly via network interface .","Many other devices or subsystems (not shown) may be connected in a similar manner (e.g., entertainment system, computing device, remote cameras, wireless key fob, wall mounted user interface device, cell radio module, battery, alarm siren, door lock, lighting system, thermostat, home appliance monitor, utility equipment monitor, and so on). Conversely, all of the devices shown in  need not be present to practice the present systems and methods. The devices and subsystems can be interconnected in different ways from that shown in . The aspect of some operations of a system such as that shown in  are readily known in the art and are not discussed in detail in this application. Code to implement the present disclosure can be stored in a non-transitory computer-readable medium such as one or more of system memory  or fixed disk . The operating system provided on controller  may be iOS\u00ae, ANDROID\u00ae, MS-DOS\u00ae, MS-WINDOWS\u00ae, OS\/2\u00ae, UNIX\u00ae, LINUX\u00ae, or another known operating system.","Moreover, regarding the signals described herein, those skilled in the art will recognize that a signal can be directly transmitted from a first block to a second block, or a signal can be modified (e.g., amplified, attenuated, delayed, latched, buffered, inverted, filtered, or otherwise modified) between the blocks. Although the signals of the above-described embodiment are characterized as transmitted from one block to the next, other embodiments of the present systems and methods may include modified signals in place of such directly transmitted signals as long as the informational and\/or functional aspect of the signal is transmitted between blocks. To some extent, a signal input at a second block can be conceptualized as a second signal derived from a first signal output from a first block due to physical limitations of the circuitry involved (e.g., there will inevitably be some attenuation and delay). Therefore, as used herein, a second signal derived from a first signal includes the first signal or any modifications to the first signal, whether due to circuit limitations or due to passage through other circuit elements which do not change the informational and\/or final functional aspect of the first signal.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 7","FIGS. 1, 2"],"b":["700","705","710","715","720","720","600","730","130","720","720","130","130","6","720","725","1","725","720","725","1","725","740","735","1","735","720","720","705","710","715","730","745","740"],"i":["a ","b ","c ","a","b ","c ","a ","a","a","j ","b ","b","b","k ","m ","a ","b"]},"With reference to computer system , network interface  or some other method can be used to provide connectivity from each of client computer systems ,  and  to network . Client systems ,  and  are able to access information on storage server -or -using, for example, a web browser or other client software (not shown). Such a client allows client systems ,  and  to access data hosted by storage server -or -or one of storage devices -- ---, -----, ---or intelligent storage array .  depicts the use of a network such as the Internet for exchanging data, but the present systems and methods are not limited to the Internet or any particular network-based environment.","While the foregoing disclosure sets forth various embodiments using specific block diagrams, flowcharts, and examples, each block diagram component, flowchart step, operation, and\/or component described and\/or illustrated herein may be implemented, individually and\/or collectively, using a wide range of hardware, software, or firmware (or any combination thereof) configurations. In addition, any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.","The process parameters and sequence of steps described and\/or illustrated herein are given by way of example only and can be varied as desired. For example, while the steps illustrated and\/or described herein may be shown or discussed in a particular order, these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and\/or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.","Furthermore, while various embodiments have been described and\/or illustrated herein in the context of fully functional computing systems, one or more of these exemplary embodiments may be distributed as a program product in a variety of forms, regardless of the particular type of computer-readable media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script, batch, or other executable files that may be stored on a computer-readable storage medium or in a computing system. In some embodiments, these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.","The foregoing description, for purpose of explanation, has been described with reference to specific embodiments. However, the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to explain the principles of the present systems and methods and their practical applications, to enable others skilled in the art to best utilize the present systems and methods and various embodiments with various modifications as may be suited to the particular use contemplated.","Unless otherwise noted, the terms \u201ca\u201d or \u201can,\u201d as used in the specification and claims, are to be construed as meaning \u201cat least one of.\u201d In addition, for ease of use, the words \u201cincluding\u201d and \u201chaving,\u201d as used in the specification and claims, are interchangeable with and have the same meaning as the word \u201ccomprising.\u201d In addition, the term \u201cbased on\u201d as used in the specification and the claims is to be construed as meaning \u201cbased at least upon.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate a number of exemplary embodiments and are a part of the specification. Together with the following description, these drawings demonstrate and explain various principles of the instant disclosure.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
