---
title: Autonomous semantic software agents and design method therefor, and online simulation apparatus using an inference engine
abstract: A semantic software agent and methods for designing and implementing the software agent and multi-agent systems, where the semantic software agent includes an interface adapter configured to receive instances of data collected and queries from an external source; a semantic repository configured to receive the instances and queries from the interface adapter; and an inference engine configured to receive the instance data from the semantic repository and to generate semantic inferences on the instances based on an ontology and semantic rules. An online simulation apparatus is also provided to generate actions and events for a simulation environment in real-time.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08793198&OS=08793198&RS=08793198
owner: The United States of America as represented by the Secretary of the Navy
number: 08793198
owner_city: Washington
owner_country: US
publication_date: 20111116
---

{"@attributes":{"id":"description"},"GOVINT":[{},{}],"heading":["STATEMENT OF GOVERNMENT INTEREST","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["The invention described herein was made in the performance of official duties by one or more employees of the Department of the Navy, and the invention herein may be manufactured, practiced, used, and\/or licensed by or for the Government of United States of America without the payment of any royalties thereon or therefor.","The present invention relates to autonomous semantic software agents (ASSA), and more specifically, to the design, implementation, testing and simulation of autonomous software agents via Semantic Web technologies and standards.","The Semantic Web (e.g., \u201cWeb .\u201d) is an evolutionary stage of the World Wide Web (i.e., \u201cWeb\u201d or \u201cW3\u201d) in which automated software can store, exchange and use machine-readable information distributed through the Web and in turn enable users to deal with the information efficiently. Unlike the first generation of the Internet, the World Wide Web Consortium (\u201cW3C\u201d) has developed key Semantic Web standards prior to development of related technologies. The development of these standards has led to an increasing use in knowledge management applications unrelated to Semantic Web activity. Semantic metadata are data intended to describe other data by capturing the meaning of the thereof. The metadata are formally structured and specified by description in formal logic so that software agents can automatically understand and process the metadata. Software agents are intelligent software components which typically work autonomously to aid human users in decision making and performing actions in different domains.","It is desirable to have software agents which are based on the Semantic Web technologies and standards, and enable these agents to make use of ontologies and semantic rules to thereby provide more efficient machine reasoning and autonomy.","According to one embodiment of the present invention, a semantic software agent is provided. The semantic software agent includes an interface adapter configured to receive instances of data collected and queries from an external source; a repository configured to receive the instances and queries from the interface adapter; and an inference engine configured to receive the instance data from the repository and to generate semantic inferences on the instances based on an ontology and semantic rules.","According to another embodiment of the present invention, a multi-agent system is provided. The multi-agent system includes a plurality of semantic software agents. Each software agent includes an interface adapter configured to receive instances of data collected and queries from an external source; a repository configured to receive the instances and queries from the interface adapter; and an inference engine configured to receive the instance data from the repository and to generate semantic inferences on the instances based on an ontology and semantic rules.","According to yet another embodiment of the present invention, a computer-implemented method for designing and implementing a semantic software agent is provided. The method includes defining or selecting an ontology; defining or selecting a plurality of semantic rules; defining at least one software agent; generating the at least one software agent; performing testing or simulations on the at least one software agent generated; and finalizing a design of the at least one software agent generated, based on the testing or simulations performed.","According to yet another embodiment of the present invention, an online simulation apparatus is provided. The online simulation apparatus includes an interface adapter configured to receive simulated data and outcomes from a simulation environment; a repository configured to receive the simulated data in the form of instances and the outcomes from the interface adapter; and an inference engine configured to receive the instances and outcomes from the repository and to generate semantic inferences on the instances based on an ontology and semantic rules and generates actions and events to be input into the simulation environment in real-time.","Additional features and advantages are realized through the techniques of the present invention. Other embodiments and aspects of the invention are described in detail herein and are considered a part of the claimed invention. For a better understanding of the invention with the advantages and the features, refer to the description and to the drawings.","With reference now to , an example of key Semantic Web Technologies is provided. As shown, the Semantic Web technologies structure  include formal ontologies  which are formal logic specification of important concepts for a domain application. As shown in , the ontologies  include a triple which is an expression that makes a statement in the form of \u201csubject-predicate-object\u201d where the subject denotes a resource and the predicate denotes traits or aspects of the resource and expresses a relationship between the subject and the object. In , the triple indicates that an Unmanned Combat Aerial Vehicle (UCAV) has a weapon, where the UCAV is the subject, the weapon is the object and the predicate is \u201chas\u201d. There are also rules  which operate on the ontologies  and inference engines  (i.e., semantic reasoners) which include software that reason (i.e., draw logical inferences) based on knowledge represented in ontology of the domain application. In the example shown in , the rules  include that \u201cIf the detected target has anti-aircraft weapons, attack it once within range.\u201d The Semantic Web technologies  further includes software agents . These software agents  may automate some tasks, or discover, collect, organize and analyze information to support human decision-making in a number of different domains. According to embodiments of the present invention, the software agents  are autonomous semantic software agents (ASSA) that are based on the Semantic Web Technologies and standards. These software agents  receive and respond to queries  and make use of ontologies  and semantic rules . These technologies  are built upon distributed networks  that form the Internet\/World Wide Web and a foundation of new and existing W3C standards. Embodiments of the present invention may be applied to various applications, e.g., system interoperability and decision-making.","Additional details regarding the ASSAs will be discussed below with reference to .",{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 2","FIG. 3"]},"As shown in , an ASSA  according to an embodiment of the present invention is provided. The ASSA  is a generic programmable software-based system that enables high levels of computer-based automation. The ASSA architecture supports many different applications in many different domains. The ASSA  can be programmed for different applications and domains via an ontology  and a set of semantic rules . As further shown in , the ASSA  is a domain application software which gathers instances associated with real world observations from the outside world  (as depicted in ), receives queries and provides responses to queries and creates effects on the outside world  by performing actions in the outside world . Details regarding the components of the ASSA will now be discussed below with reference to .","As shown in , according to an embodiment of the present invention, the ASSA  includes an ASSA interface adapter (\u201cAIA\u201d) , a semantic repository , an inference engine  (referred to as \u201ca semantic reasoner\u201d), and algorithm adapters . According to an embodiment of the present invention, the interface adapter  translates between varying message formats (e.g., adapted formats) used by the outside world  and standard formats used internally to ASSA .","According to an embodiment of the present invention, data are observed in the outside world  using external sensors, systems or other agents (not shown). According to an embodiment of the present invention, the other agents may include other ASSAs when working cooperatively. Details will be discussed below with reference to . Instances of the data observed are received via the interface adapter . Upon receipt of the instances, the interface adapter  inputs these instances to the semantic repository  from an external source at the outside world . According to an embodiment of the present invention, the external source is one of a sensor, a user, a system or other software agent. According to an embodiment of the present invention, the instances are in a standard format. The interface adapter  also receives actions from the semantic reasoner  which result from inferences made at the semantic reasoner . These actions are translated by the interface adapter  to message formats unique to specified by the external source (i.e., external sensors, systems, and agents).","In addition to the instances and actions, the interface adapter  also receives queries from users, systems, and other software agents external to the ASSA . According to an embodiment of the present invention, the queries are in a non-standard format when received at the interface adapter  and translated into a standard format within the interface adapter and input to query the semantic repository . Further, the interface adapter  translates responses to the queries input, from the semantic repository  and provides the responses in adaptable formats to the external users, systems and agents.","According to an embodiment of the present invention, the semantic repository  is configured to store triples, and to receive instances and queries from the interface adapter . The semantic repository  is further configured to provide the instances to the semantic reasoner , process inferences on triples made by the semantic reasoner  and send responses to queries back to the interface adapter .","According to an embodiment of the present invention, the semantic repository  utilizes the ontology  via the semantic reasoner  for generating the semantic inferences. According to an embodiment of the present invention, the ontology  is user-defined and is in a standard format.","According to an embodiment of the present invention, the semantic reasoner  is an inference engine that creates semantic inferences on instances represented as triples, based on the ontology  and on the semantic rules  that operates on instances to develop a higher level of knowledge. According to an embodiment of the present invention, the semantic rules  are also user-defined. The ontology  may be specified e.g., in resource description framework (\u201cRDF\u201d) or web ontology language (\u201cOWL\u201d)). Further, the semantic rules may be specified, e.g., in semantic web rule language (\u201cSWRL\u201d), which is a W3C specification that combines OWL and Rule Markup language (\u201cRuleML\u201d).","According to an embodiment of the present invention, the algorithm adapters  are software components in communication with the semantic reasoner  that enable results of algorithms  (e.g., Algorithm 1 through Algorithm N to be input into the semantic reasoner . These adapters  are configurable and translate the results of various algorithms  into the form of instances to be input into the semantic reasoner  to thereby add more power to its reasoning capability while off-loading computationally-intensive calculations which are user-defined and application-specific. According to an embodiment of the present invention, the algorithms  are defined by a user and plugged into the ASSA  via the algorithm adapters . For example, a semantic rule  may reference an entity attribute (e.g., entity position or speed) that is the result of an algorithm . Thus, according to an embodiment of the present invention, the semantic reasoner's  reasoning capabilities are supplemented by the array of algorithms . According to another embodiment of the present invention, a plurality of ASSAs  may be used together in a multi-agent system.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 4","FIG. 4"],"b":["200","250","200","250","200","200"]},"According to an embodiment of the present invention, in a multi-agent system having a plurality of ASSAs , the ASSAs  may operate in different configurations. For example, according to one embodiment of the present invention, the ASSAs  may operate in an authority-based hierarchy configuration where a single ASSA  controls the other ASSAs  by delegating tasks to the inferior ASSAs . This type of configuration may include multiple levels. The ASSAs  may also control the actions of other software agents (i.e., non-ASSAs).","The present invention is not limited to any particular type of configuration and may vary accordingly. Details regarding other types of configurations will be discussed below.","According to another embodiment, the multi-agent system may be configured as a collaborating team with specialized roles, where for example, the ASSAs  and\/or other software agents  each have different roles and they collaborate in a manner that utilizes the specialties and roles of the other agents ,  on the team. The roles may include a data collector, a supervisor, a domain supervisor, a scout (e.g., for use in indications and warnings), an advisor (e.g., a decision aid), and a simulator.","According to yet another embodiment of the present invention, the multi-agent system may be in collaborating peers configuration where all the ASSAs  have equivalent levels of capabilities. In this type of configuration, each ASSA  may be configured by assigning respective resources and areas of responsibility and tasks, for example. The ASSAs  collaborate together to share knowledge in order to optimize the objectives of the team.","According to yet another embodiment of the present inventions, the multi-agent system may be in a mixed configuration where there are multiple teams of ASSAs  and each member of each team of ASSAs  may be the apex of lower level hierarchies.","Additional details regarding designing and implementing the ASSAs and multi-agent systems will be discussed below with reference to .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIGS. 5 and 6"},"As shown in , the method  begins at operation , where an ontology  is defined or selected. From operation , the process continues to operation  where semantic rules are defined or selected. The semantic rules include behavior rules for later use in defining agent behavior (as depicted in  discussed below). As mentioned, both the ontologies  and semantic rules  (as depicted in , for example), may be user-defined or pre-defined, in accordance with an embodiment of the present invention. That is, the user may select a pre-defined ontology  or set of semantic rules  or define a new ontology  or new semantic rules  or combine new and pre-defined semantic rules  for use in an ASSA . Therefore, according to an embodiment of the present invention, a library of ontologies  and a library of semantic rules  may be maintained for use.","From operation , the process continues to operation , where the ASSA agents  are defined. According to an embodiment of the present invention, a user may define the agents  until the user's requirements have been satisfied. Additional details regarding operation  will be described below with reference to .",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 7","FIG. 5","FIG. 7","FIG. 4","FIG. 5"],"b":["530","531","531","532","200","250","532","533","533","534","520","210","212","534","535","536"]},"Now referring back to , upon defining agents at operation , the process continues to operation  where it is determined whether additional agents need to be defined. If so, the process returns to operation  where another agent is defined. If not, the process continues to operation  where a multi-agent system may be defined.","According to an embodiment of the present invention, operations  through  are not limited to being performed in a particular order and therefore may be performed in any order as desired by the user. Upon designing of the agents and multi-agent systems as desired, the design process continues to , where a user may program the agents by generating them based on the resulting design, and the agent architecture as shown in , for example.","As shown in , at operation , an agent may be generated based upon the design. From operation , the process continues to operation  where agent data simulations are generated. From operation , the process continues to operation  where stand-alone testing may be performed on the generated agent using the data simulations. From operation , the process continues to operation  where an integrated simulation is generated to provide a simple simulation of the environment in which the agent will operate. From operation , a test agent or agent system designs are formed. From operation , the process continues to operation  where the final agent (e.g., an ASSA ) is deployed, e.g., on multiple, distributed computers on a network.","According to an embodiment of the present invention, the library of ASSA designs and design templates may be maintained for use. Thus, instantiations of ASSAs  and multi-agent systems may then be created from the resulting design. Further, as mentioned, simulations may be configured and generated for integration with an Agent-based modeling and simulation (ABMS) system, which may be used for simulation, analysis and evaluation may also be provided as discussed above with reference to operations  through . Additional details regarding these embodiments will be discussed below with reference to .","According to one embodiment, an ontology-based data simulation (OBADS) apparatus may be formed which enables the creation of integration simulations that can be used to test ASSAs , multi-agent systems, and any application or system based on formal semantics such as for military applications, commercial semantic web applications, test bed for new semantic web technologies, simulation of complex agent behaviors to support analysis of complex systems, user training support through simulation, and other applications. According to an embodiment of the present invention, the OBADS apparatus simulates entity attributes. For example, a simulated entity may be an aircraft whereby the aircraft attributes may be include identity (e.g., friendly, hostile, or unknown), position and speed. Additional details are discussed below with reference to .",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 8","FIG. 8"],"b":["800","800","801","802","803","804","805","806","801","200","801","804","805","803"]},"The interface adapter  also sends interface data to the data logging component . The interface data includes data sent and received by the interface adapter . The data logging component  logs the interface data and transfers the logged data to the system assessment component . The system assessment component  evaluates the test results and provides the test results to the VPC component  for display.","According to an embodiment, the VPC component  receives data input from one or more algorithms via one or more algorithm adapters . The input data includes simulated attributes for an entity, for example. The VPC component controls the operation of the semantic reasoner  and provides the semantic reasoner  with simulated attributed data. The semantic reasoner  uses the attribute data along with an ontology  and semantic rules  to provide simulated instances to the single ASSA  under test via the interface adapter  which converts the simulated instances to the interface of the ASSA . As mentioned above, the ontology  includes triples that represent entities, their attributes, and relationships among entities. The OBADS apparatus  simulates instances of entities.","The attributes simulations provided by the VPC component  may represent attributes associated with an entity, a complex algorithm for movement, etc. The attribute simulations may be time-based by specifying changes over time, rule-based by defining rules for how the attributes change over time, or a combination thereof. According to an embodiment of the present invention, the time-based reporting may be specified on multiple bases, e.g., reported once, periodically at a time interval or based on random selection from a probability distribution. The simulation and reporting of groups of entities may be designed and controlled as a group. The simulation output of the OBADS apparatus  includes at least one set of timestamps associated with entity instances including attribute values. Programmable criteria for reporting entities are specified by use thereof and may include reporting at a time interval, a one-time event or based on a probability distribution.","According to an embodiment of the present invention, the OBADS apparatus  provides various views for design of a simulation. These views include an entity view, event sequence view, composite view, and a simulation resources view, for example. The output formats from the OBADS apparatus  may be programmable and extensible via plug-in software modules. The formats may include, for example, OWL, RDF, XML and structured query language (SQL). Further, the VPC component  may be a software component, for example.","According to an embodiment of the present invention, OBADS apparatus  is a distributed simulation that allows a user to establish rules about where entity attribute simulations run, based on such factors as entity type, processor loading, number of entities, etc. The OBADS apparatus  also provides performances logging for simulations. Further as mentioned above, the OBADS apparatus  performs visualization and control, test coverage planner, data logging, data simulation, and system assessment.","As shown in  and described above, the OBADS apparatus  is used for the verification, validation, or testing and evaluation of a single, standalone ASSA , for example. The present invention is not limited to use of the OBADS apparatus  with a single standalone ASSA and may vary accordingly. The OBADS apparatus  simulates instances of real-world data to the ASSA  and it collects the actions of the ASSA  in response to the data. According to an embodiment of the present invention, the OBADS apparatus  is not limited to being used for simulation and testing of ASSAs , and may be used for testing any semantic-based reasoning system or other system for simulating data in the environment as shown in .",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 9","FIG. 10"]},"Referring to , the OBADS apparatus  may be used for verification, validation, testing and evaluation of the semantic-based reasoning system . According to an embodiment of the present invention, the OBADS apparatus  simulates instances of external (e.g., real world) data to a semantic-based reasoning system . The OBADS apparatus  also collects actions\/results of the semantic-based reasoning system .","As shown in , according to another embodiment of the present invention, the OBADS apparatus  may be used to simulate data in an environment of any system  for training simulation purposes, for example. As shown, the OBADS apparatus  simulates instances of external data to the system .","According to yet another embodiment of the present invention, an online adaptive reasoning for simulation (\u201cOARS\u201d) apparatus may be used for simulation, decision-aiding and online interpretation of simulation results. A detailed description of the OARS apparatus will be described below with reference to .",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 11","FIG. 11"],"b":["1100","1101","1102","1104","1110","1112","1114","1116","1114","1116","1100"]},"The interface adapter  translates between the system  and a simulation environment  external to the system  in which the system  is participating. The system  receives simulated observed data and simulation outcomes from the simulation environment  and the interface adapters  translate between standard formats used internally by the OARS apparatus  and various formats used in the external simulation environment . The OARS apparatus  further includes a semantic repository  similar to the semantic repository  shown in . The simulated instances and outcomes are stored in the semantic repository . The semantic repository  transmits the instances and outcomes to the semantic reasoner  and to the VPC component  for further processing.","The semantic reasoner  receives the simulated instances and outcomes from the semantic repository  and determines actions and events for inputting into the simulation environment .","The VPC component  acts as a user interface, and receives status information from the other components of the system  (i.e., the semantic repository , the semantic reasoner  and the simulation scheduler component ) and initializes and controls these components, and displays the status of each component. It further provides a means for display, editing and activation of the ontology  and the semantic rules . The VPC component  also uses all the information received for display and use in planning and controlling of the OARS  via the simulation scheduler component .","According to an embodiment of the present invention, the semantic reasoner  makes inferences on the simulated instances and outcomes based on the ontology  and semantic rules . According to an embodiment of the present invention, the ontology  and semantic rules  are user-defined. Each may be selected by or newly defined by the user (as depicted in operations  and  of ). The semantic reasoner  generates actions and events for the simulation environment  as a result of the inferences made and forwards these actions and events to the simulation scheduler component . According to an embodiment of the present invention, the semantic reasoner  may be supplied with semantic rules  including high-level semantic rules for advanced adaptive behaviors or explanatory rules, for example. Further, the semantic reasoner  may interpret simulation results in real-time.","According to an embodiment of the present invention, the simulation scheduler component  schedules the simulation of the actions and events for input to the simulation environment . The actions and events are transmitted to the simulation environment  via the interface adapter . The interface adapter  changes the actions and events to system-specific formats compatible with the simulation environment . Examples of applications of the OARS apparatus  will now be described below with reference to .",{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 12","FIG. 12"],"b":["1100","1200","1100","1200","1200"]},{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 13","FIG. 13"],"b":["1100","1302","1304","1314","1100","1302","1304","1314","1100","1200","1100","1200"]},{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 14","FIG. 14"],"b":["1100","1400","1400","1100"]},{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 15","FIG. 15"],"b":["1100","1500","1502","1100","1500","1502","1500","1100"]},{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 16","FIG. 16"],"b":["1100","1600","1602","1604","1100","1600","1602","1604","1100"]},"According to alternative embodiments of the present invention, the computer-implemented methods of designing agents, and multi-agent systems and the functions of the simulation systems may be implemented in software, firmware, hardware, ontology languages, rules languages or some combination thereof. As one example one or more embodiments of the present invention can be included in an article of manufacture (e.g., one or more computer program products) having, for instance, computer usable media. The media has embodied therein, for instance, computer readable program code means for providing and facilitating the capabilities of the present invention. The article of manufacture may be included as a part of a computer system or sold separately.","Additionally, at least one program storage device readable by machine, tangibly embodying at least one program of instructions executable by the machine to perform the capabilities of the present invention can be provided. The foregoing exemplary embodiments may be provided in the form of computer-implemented processes and apparatuses for practicing those processes. For example, they may be provided in the form of computer program code containing instructions embodied in tangible medium, such as floppy diskettes, CD ROMs, hard drives, or any other computer-readable storage medium wherein when the computer program code is loaded into and executed by a computer, the computer becomes an apparatus for practicing the exemplary embodiments.","The flow diagrams depicted herein are just examples. There are many variations to these diagrams or the operations described therein without departing from the spirit of the invention. For instance, the operations may be performed in a differing order, or some operations may be added, deleted, or modified. All of these variations are considered a part of the claimed invention.","Embodiments of the present invention enables high levels of automation and for decision aiding via an ASSA which is highly programmable for any specialized task and can be applied to numerous domains. The embodiments of the present invention further enable distributed systems of these ASSAs to accomplish complex tasks and to support varying levels of cooperation and many different multiple-agent organizational structures along with rapid design, implementation of ASSAs and multi-ASSA systems, and creation of integrated simulations to test the ASSAs and multi-ASSA systems and any application or system based on formal semantics. The embodiments of the present invention further enable advanced reasoning capabilities that can be used in integrated simulations and intelligent online (i.e., real-time) interpretation of the simulation results during the simulation process.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, element components, and\/or groups thereof.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated","While the preferred embodiment to the invention had been described, it will be understood that those skilled in the art, both now and in the future, may make various improvements and enhancements which fall within the scope of the claims which follow. These claims should be construed to maintain the proper protection for the invention first described."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["The subject matter which is regarded as the invention is particularly pointed out and distinctly claimed in the claims at the conclusion of the specification. The forgoing and other features, and advantages of the invention are apparent from the following detailed description taken in conjunction with the accompanying drawings in which:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 5 and 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 7","FIG. 5"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 16"}]},"DETDESC":[{},{}]}
