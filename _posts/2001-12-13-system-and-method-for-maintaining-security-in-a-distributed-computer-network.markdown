---
title: System and method for maintaining security in a distributed computer network
abstract: A system and method for maintaining security in a distributed computing environment comprises a policy manager located on a server for managing and distributing a security policy, and an application guard located on a client for managing access to securable components as specified by the security policy. In the preferred embodiment, a global policy specifies access privileges of the user to securable components. The policy manager may then preferably distribute a local client policy based on the global policy to the client. An application guard located on the client then manages access to the securable components as specified by the local policy.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07673323&OS=07673323&RS=07673323
owner: BEA Systems, Inc.
number: 07673323
owner_city: San Jose
owner_country: US
publication_date: 20011213
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This application claims benefit of U.S. Provisional Patent Application No. 60\/255,623, filed Dec. 13, 2000, and this application is a continuation-in-part of copending U.S. patent application Ser. No. 09\/721,557, filed Nov. 22, 2000, which is a continuation of U.S. patent application Ser. No. 09\/248,788, filed Feb. 12, 1999, now U.S. Pat. No. 6,158,010, which claims benefit of U.S. Provisional Patent Application No. 60\/105,963, filed on Oct. 28, 1998, and this application is a continuation-in-part of copending U.S. patent application Ser. No. 09\/767,610, filed Jan. 22, 2001, which is a continuation of U.S. patent application Ser. No. 09\/721,557. The above-identified applications are all incorporated by reference into the present application.","1. Field of the Invention","This invention relates generally to computer security systems, and relates more particularly to a system and method for managing and enforcing complex security requirements in a distributed computer network.","2. Discussion of the Background Art","Computer security issues have become more complex with the continual evolution of contemporary computer systems. As corporations utilize increasingly distributed and open computing environments, the security requirements of an enterprise typically grow accordingly. The complexity of employee, customer and partner access to critical information assets, while assuring proper security, has proven to be a major hurdle. For example, many organizations deploy applications that allow their external business partners, as well as their own internal employees, to access sensitive information resources within the enterprise. In the absence of adequate security measures, an enterprise may thus be subject to the risk of decreased security and confidentiality.","While most organizations focus their security concerns on protecting the internal network from the outside world, it is estimated that 80-90% of all corporate security breaches come from within an organization (source: Aberdeen Group, September 1997). This further underscores the need to specify and enforce an access control security policy within the enterprise network.","In today's complex business environment, specifying, stating, implementing and managing an enterprise access control policy may be both difficult and inefficient. When corporate data and applications revolved around a mainframe model, the problem of defining and managing access to corporate applications was relatively straightforward. Today, the complexity of business methods, as well as the complexity of distributed application architectures, may force companies to resort to ineffective, manual or highly custom approaches to access control in their attempts to implement the business process.","To secure a complex and distributed computer system, the system may typically employ a combination of encryption, authentication, and authorization technologies. Encryption is a means of sending information between participants in a manner that prevents other parties from reading the information. Authentication is a process of verifying a party's identity. Authorization is a technique for determining what actions a participant is allowed to perform.","Encryption and authentication are well understood and have led to effective network security products, whereas authorization technology is not as well developed, and is often inadequate for many enterprises. The security approach of most companies today is to focus on the authentication of users to ensure that those users are part of the organization or members of select groups. Authentication can be accomplished with a number of different approaches, from simple password or challenge response mechanisms to smart cards and biometric devices such as fingerprint readers. Once users are authenticated, however, there is still a significant problem in managing and enforcing their sets of privileges, which may be unique and vary widely between users. The same authentication mechanism can be used for every user, but different authorization mechanisms must be developed for most applications. Therefore, reliable and efficient access control is a much more difficult problem facing enterprises today.","Authentication mechanisms often work together with some sort of access control facility that can protect information resources from unauthorized users. Examples of network security products include firewalls, digital certificates, virtual private networks, and single sign-on systems. Some of these products provide limited support for resource-level authorization. For example, a firewall can screen access requests to an application or a database, but does not provide object-level authorization within an application or database. Single Sign-On (SSO) products, for example, maintain a list of resources an authenticated user can access by managing the login process to many different applications. However, firewalls, SSO and other related products are very limited in their ability to implement a sophisticated security policy characteristic of many of today's enterprises. They are limited to attempting to manage access at a login, or \u201claunch level,\u201d which is an all or nothing approach that cannot directly implement a policy that spans an entire enterprise.","A real-world security policy that spans a large enterprise, otherwise known as an enterprise or global security policy, uses a detailed and dynamic knowledge base specific to that enterprise. The authorization privileges are specific to the constantly evolving sets of users, applications, partners, and global policies that the enterprise puts in place to protect its key information resources. A security policy that spans a large enterprise can consist of tens or hundreds of thousands of individual rules that cover which users are authorized to access particular applications, perform various operations, or manage the delegation and transfer of tasks. Many of these policy rules that implement the business practice of an organization have to be hard-coded within custom-built applications or stored in a database.","The key problem is that the policy rules that make up an enterprise or global security policy are localized, scattered throughout the organization, and embedded in applications and databases. Such embedding is expensive and error-prone, militating against efficient policy updates. An organization cannot effectively implement and manage the resulting policy. Inconsistencies arise and updates can quickly become unmanageable. Policy queries and analysis from a global perspective are nearly impossible. The resulting policy begins to diverge from the intended business practices of the organization. Compromises are made in the policy implementation at the department level, and auditors can quickly become frustrated.","The increasing security risks associated with the proliferation of distributed computing, including Intranet and Extranet applications, are prompting many organizations to explore a broad range of security solutions for controlling access to their important information assets. Although organizations have a number of solutions to choose from for authenticating users (determining and verifying who is attempting to gain access to the network or individual applications), there is little choice when it comes to controlling what users can do and when they can do it to the extent necessary to implement the kinds of complex security policies required by modern organizations. Organizations have been forced to choose between custom authorization solutions that are costly, error-prone, and difficult to manage, and third-party solutions that are very limited in their abilities to control access to information across applications and databases.","A real-world security policy determines which users are authorized to access particular applications, perform various operations or manage the delegation and transfer of tasks, as well as when and under what circumstances they are permitted to do so. Authorization privileges depend upon a constantly evolving set of users, applications, partners, and business polices that comprise the enterprise or global security policy. A typical enterprise environment consists of several thousand users, hundreds of applications, and a myriad of network resources, resulting in a security policy that can consist of tens or hundreds of thousands of interrelated policy rules.","Typically, organizations attempt to control access to the internals of in-house applications through policy rules that are hard-coded in the application or through stored procedure statements in the database. But as the number of applications and databases grows, this patchwork approach to authorization quickly gets out of hand. First, organizations must incur the costly and time-consuming overhead of developing customized security code for each application. But more importantly, once the code is developed and embedded in an application, the embedded policy rules become hard to track, difficult to update, and nearly impossible to manage because they are scattered throughout the organization.","With an estimated 80 percent of all security breaches coming from authorized users (source: Forrester Research), advanced policy features and enforcement mechanisms are needed to control access to sensitive information assets. To implement an enterprise or global security policy, organizations need a centralized policy and a powerful way to specify policy rules to give them adequate access control security. At the same time, organizations need a distributed infrastructure that can provide authorization services to all applications and has performance and scalability characteristics mandated by modern distributed network environments.","A security policy that spans an entire organization, in practice, involves constant changes, such as environmental, organizational, operational, and IT structural changes. As a result, the policy in such a system needs to be frequently updated. However, such a policy may contain thousands of rules, applications and users. In a distributed system, these applications and users may be scattered through many geographically separated locations, which are connected to each other through a network. Consequently, distributing an updated policy can congest the network and delay implementation of the newly updated policy. Further, a currently enforced version of a policy may be generated based on a sequence of changes to a sequence of previously enforced versions of the policy. Each version change may involve many rule changes, such as adding new rules and deleting or amending some of the existing rules. During theses changes, errors can be made and rule change decisions can be altered. Therefore, it may be necessary to reconstruct one of the previously enforced versions of a policy. However, after many rule changes, it is difficult and time consuming to accurately reconstruct a previously enforced version of such a policy, especially over a distributed network.","In addition, a policy may contain thousands of inter-related rules which are enforced for many functional branches in an organization and hundreds of applications used by thousands of users. Conventional security policy systems do not provide sophisticated policy analysis functions, which prevents managers and policy administrators from comprehensively understanding how policies will be enforced. This may result in various policies having inconsistent or contradictory rules. To enable management and policy administrators to efficiently and comprehensively manage or maintain sound policies, it is desirable to provide a system capable of performing comprehensive policy analysis, including policy inquiry, policy verification, and policy cross-referencing.","Therefore, there is a need for an improved system to protect distributed networks against unauthorized access, by managing and enforcing complex security policy requirements for the enterprise.","There is also a need for an improved centralized policy management system which separates or externalizes security policy rules from applications.","There is also a need for an improved system for efficiently distributing updated or changed policies that protect access to applications.","There is another need for an improved system for efficiently reconstructing, based on the currently enforced version of a policy, a previously enforced version of that policy.","There is still another need for an improved system for providing comprehensive policy analysis, including policy inquiry, policy verification and policy cross-referencing.","In the preferred embodiment the system comprises a policy manager located on a server for managing and distributing a local client security policy based on a global security policy, and an application guard located on a client or server associated with one or more clients (otherwise known as a \u201cclient server\u201d) for managing access to securable components as specified by the local client security policy. The global security policy specifies access privileges of the user to securable components. The policy manager may then distribute a local client security policy based on the global security policy to the client or client server. An application guard located on the client or client server then manages authorization requests to the securable components as specified by the local client security policy. Each authorization request may be recorded in an audit log to keep track of the authorization requests, whether the requests were granted or denied, and other similarly useful information.","The system and method of the invention supports centralized management and distributed authorization. A central policy manager server stores and manages the policy rules and other access related information that make up the global security policy in a centrally administered database. A powerful graphical user interface is used to create, manage, and customize the elements of this policy. An application programming interface (API) can also be used in place of the user interface. Policy rules can be specified by both novice and expert users. A local client security policy is associated with one or more applications. The policy manager server automatically distributes (over the network) to various application guards only the portions of the global security policy that are relevant to the local client security policies residing in those application guards. This distributed architecture ensures that authorization requests are not bottlenecked at a central service point and provides unlimited scalability and maximum performance, regardless of the number of applications or policy rules involved.","The present invention relates to an improvement in security techniques to protect computer systems against unauthorized access. The invention preferably includes a system and method for managing and enforcing complex security requirements in a distributed computer network, and comprises a policy manager located on a server for managing and distributing changes to a local client security policy based on a global security policy, and an application guard located on either a client or a client server, the application guard acting to grant or deny access to securable components, as specified by the local client security policy.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 1","b":["100","100","112","116","1","116","2","116","118","1","118","2","118","120","112","118","1","118","2","118","118","1","118","2","118","120","114","112","116","112","118","120","100"],"i":["n","m","n","m"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 1A","FIG. 1","FIG. 1A"],"b":["110","100","110","112","114","116","112","146","120","122","124","126","128","130"],"i":"i "},"Similarly, client server .preferably includes a CPU , ROM , RAM , a non-volatile memory , an input device , and a display  all connected via a bus .","Policy manager server  preferably contains a program stored in non-volatile memory  for managing a global security policy or a set of rules related to whom, what and when access and the type of access to components of the system is granted. Then portions of the global security policy (i.e., the local client security policy) are distributed to client server .via network . Client server .preferably contains a program stored in non-volatile memory  for granting or denying access to various components or resources of client server ., as specified by the local client security policy distributed from policy manager server . For example, various components or resources of client  can include applications, functions or procedures within an application, data structures within an application, and database or file system objects referenced by an application.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 2","FIG. 1A","FIG. 2A","FIG. 1A","FIGS. 2 and 2A"],"b":["124","112","124","112","124","210"]},"The system may have policy inquiry and verification features that enable administrators to review and report on a global or local client security policy, identifying inconsistencies and entitlements that violate corporate policy and regulations. The policy inquiry and verification facilitate reconciling the user's experience and workflow.","The policy inquiry and verification may allow users to ask questions about how a policy will respond to specific access requests. Users can ask about contradictions in a given security policy for a user or group of users. Users' access to policy information is authenticated by a policy manager (or BLM) or an application guard (or BLE) against the global or local client security policy, as the case may be, enforced by policy manager  or application guard . The policy inquiry and verification features allow users to find out what a user's authorization policy is, which applications a user can access, the authorization policy for a specified user in a specified application, which rules indirectly reference a specified user, which rules give a specified entitlement, and which users have rights to specified privilege\/object sets.","An authorization policy preferably comprises four components, including objects, subjects, privileges, and conditions. Objects may be applications, or the operations within an application. Examples of objects include applications or methods, web pages, database tables or files, and menu items in a graphical user interface. The granularity of objects has a direct impact on the level of security achieved. The less information an object contains, the less likely it is that a user has access to information not needed to perform his job function. On the other hand, the granularity of objects should be balanced against the ease of security management. The more information an object contains, the fewer the objects that have to be protected, and the smaller the security policy.","Objects are preferably organized into an object hierarchy. If an object represents an application, then its children objects might represent the methods used with the application. Similarly, if an object represents a database, then its children objects might represent the tables and views within the database.","If a user is granted a certain privilege on a parent object, then he is automatically granted the privilege on all the children objects. Similarly, if a user is denied a certain privilege on a parent object, then he is automatically denied the privilege on all the children objects. In other words, privileges are inherited from parent to children objects. Privilege inheritance through the object hierarchy eases security management because rather than granting the same privilege to every child object, the privilege is granted once to the parent object, and if the privileges of an object change, the policy on all the children objects automatically reflects the changes made to the object.","Subjects may be users, or roles containing users, who access protected objects. Subjects correspond to users that have access to information in a system. Users can either be internal or external to a system. Users are authorized to access information in order to perform their job functions. Such access may be controlled so that a user gets access only to the information needed to perform his job function.","Alias users may also be supported. An alias of a user is another user who, under certain conditions, inherits all the privileges of the user. Aliases facilitate authorization management by providing fine granularity of control on the propagation of privileges. For example, an alias of a user can be created to perform his job function while he is absent. The inheritance of privileges takes effect only when the user is absent. An alias implements the business requirements of delegation, where the privileges of a user can be delegated to another user under certain conditions. Conditional inheritance of privileges through an alias reduces the burden of security management, because it restricts privilege propagation to situations when certain conditions are satisfied.","A securable component or object is selected from a group including at least one application, a function within an application, a procedure within an application, a data structure within an application, a database object referenced by an application, or a file system object referenced by an application.","Users of an object may be defined as being local to that object. In a typical system, the same user is often represented by different login identifications in different objects. This system may support the notion of a \u201cglobal\u201d user to capture this situation. Every global user is mapped to a set of local users, one per object. Global users facilitate the centralized management of users throughout the system, even if they are identified by different names in different objects.","A privilege defines the kinds of access that may be allowed to objects. In the preferred embodiment, a privilege is the right to perform a particular action on a specific object. The kinds of privileges that apply to an object depend on the type of the object. Examples of privileges'include the right to execute an application, the right to download a web page, the right to query a database table, and the right to view a menu item.","Privileges are granted to users so they can accomplish tasks required for their jobs. A privilege should be granted to a user only when it is absolutely required for the user to accomplish a task. Excessive granting of unnecessary privileges may lead to compromised security. A user may receive a privilege in two different ways. Privileges can be granted to users explicitly (for example, user SMITH can be granted the privilege to execute the payroll application), or privileges can be granted to a role (a named group of privileges), which is then granted to one or more users (for example, a role named \u201cclerk\u201d can be granted the privilege to execute the payroll application, and user SMITH can be granted the clerk role).","Roles are named groups of privileges that are granted to users or other roles. Users granted a role are the members of that role. A role is often used to represent the set of privileges needed to perform a job function.","The members of a role automatically inherit all the privileges granted or denied to the role. In addition, roles may be organized into a role hierarchy where parent roles are granted to children roles. If a parent role is granted a privilege, then the children roles are automatically granted the privilege. Similarly, if a parent role is denied a privilege, then the children roles are automatically denied the privilege.","Roles of an object may be defined as being local to that object. In a typical system, the same role is often represented by different names in different objects. This system may support the notion of a \u201cglobal\u201d role to capture this situation. Every global role is mapped to a set of local roles, one per object. Global roles facilitate the centralized management of roles throughout the system, even if they are identified by different names in different objects.","Role membership may be further constrained by the notion of mutual exclusion. Two roles are mutually exclusive if no single user can be granted both roles simultaneously. Role mutual exclusion implements a business requirement of separation of duty. For example, a submit_budget role and an approve_budget role should be mutually exclusive, because no user should be simultaneously authorized to perform both actions.","In a typical security policy, there are preferably two types of access rules, a grant rule and a deny rule. A grant rule stated that a privilege on an object is granted to a subject under an optional constraint. A deny rule states that a privilege on an object is denied to a subject under an optional constraint. Additionally, a wild card \u201cany\u201d may be used as a privilege, object, or subject, meaning that any legitimate value could be substituted in its place.","An access request preferably contains a privilege, an object, and\/or a subject, representing the fact that the subject requests authorization of the privilege on the object. An access request matches a grant rule if the privilege, object, and subject match those in the rule, and the constraint in the rule evaluates to \u201ctrue.\u201d An access request matches a deny rule if the privilege, object, and subject match those in the rule, and the constraint in the rule does not evaluate to \u201cfalse.\u201d","An access request is denied if there is a deny rule matching the request, or there are no access rules matching the request. An access request is granted if there are no deny rules matching the request, and there is an access rule matching the request.","Conditions define the constraints on when objects and subjects can be accessed. The constraints in an access rule specify further requirements on when the access rule is applicable. These requirements could be conditioned on properties of the object or the subject.","Constraints are preferably expressions formed from conditions and operators. These may include, but are not limited to, the Boolean operators NOT, AND, and OR, and the relational operators =, < >, <, <=, >, >=, LIKE, and NOTLIKE, and the set operators IN and NOTIN.","In addition to built-in conditions, users of system  may declare custom evaluation functions, which are customer-defined conditions. System  may provide an API for invoking customer-supplied code to evaluate custom evaluation functions. For example, an evaluation function could access a remote database to validate certain properties of the object. Another evaluation function could invoke an external server to authenticate the subject.","Referring to the  embodiment, policy manager (or business logic manager (BLM))  preferably includes a management station (or business logic console (BLC)) program  to operate policy manager , a distributor program  to distribute local client security policies to clients or client servers , a logger program  to track authorization requests, and a database management system (DBMS)  to maintain policy data files. Policy manager  also includes an audit log data file (database)  to record authorization requests, an optimized policy data file (database) , an enterprise policy data file (database) , an administrative policy data file (database) , and a local administrative policy data file (database) . The contents and operation of policy manager  are further discussed below in conjunction with , , , , , and .","Referring to the  embodiment, non-volatile memory  of  includes a management station or business logic console (BLC) program , a policy manager (BLM)  coupled to BLC , and a policy distributor  coupled to BLM . Policy manager  preferably includes a logger program  to track authorization requests, and a database management system  to maintain policy data files, an audit log data file (database)  to record authorization requests, an optimized policy data file (database) , an enterprise policy data file (database) , an administrative policy data file (database) , and a local administrative policy data file (database) . Policy manager  further includes policy change tracking , policy change reversing , policy change tracking table , and policy analysis (engine) .",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 3","FIG. 1A","FIG. 3","FIG. 3"],"b":["138","116","138","310","116","116","310","312","314","316","318"]},{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIG. 3A","FIG. 1A","FIG. 3A","FIG. 3A","FIG. 5"],"b":["138","116","138","310","312","310","314","316","318","319","330","331","332","330","331","310","330","331","520","332","512","316","116","318","116"]},{"@attributes":{"id":"p-0078","num":"0077"},"figref":["FIG. 4","FIG. 2","FIG. 4"],"b":["210","124","210","224","210","212","218","216","214"]},"In the  embodiment, management station  preferably includes a graphical user interface (GUI)  for users to create or customize policy rules. Management station  supports concurrent policy rule development by multiple users. Each policy rule preferably includes four basic components: 1) an object that is to be protected; 2) an access right or privilege; 3) a global or local user to which the privilege applies; and 4) conditions under which the privilege is granted or denied, including built-in access criteria, such as time of day or location, as well as custom-defined access criteria.","Graphical user interface  provides a user-friendly set of menu options or management services  to fully operate policy manager . Programs controlled by the menu options may include navigation , search , distribution , edit , query , log viewer , policy change tracking , policy change reversing , and policy analysis . As an alternative to the GUI , the management services can be operated from an application , through an API, that allows programs to perform the same functions as a human operator. In the preferred embodiment, management station  also includes an application guard  to allow only authorized administrators to operate management station . Local administrative policy  provides a set of policy rules specifying which users are authorized to access management station .","After the policy rules that form a local client policy are created or modified using management station , they may then be distributed to appropriate client servers  (). Management station  includes a communication interface  in order to pass information between various other components in system .","Prior to the policy rules being distributed, a parser\/type checker  preferably reviews and reconstructs the policy rules to make sure that they are syntactically and semantically correct according to a predefined policy language. The policy rules pass through a database layer (DB layer)  and a database connectivity layer such as ODBC  before being stored as part of the global security policy . DB layer  formats the policy rules into standard database storage tables, and a database connectivity layer such as ODBC  provides a common interface to various vendor-specific databases.","Global security policy  is passed to distributor  once the policy has been updated to incorporate the created or modified policy rules. An optimizer program  within distributor  then determines which application guard  needs to receive which policy rules (based on the local client security policy stored in each application guard). A differ program  determines what types of changes were made to optimized policy , and then distributes only changes to the relevant policy rules (or local client security policy ) through a database connectivity layer such as ODBC  and a communication interface  to the appropriate application guard  (), which enforces access control to local applications  and data.","Since the application guards  can be distributed among various clients or client servers , and each application guard  has its own specific local client security policy , the system provides scalability.","Distributor  () may also be used to optimize administrative policy  into an optimized administrative policy or local administrative policy  for use with application guard  in management station .",{"@attributes":{"id":"p-0086","num":"0085"},"figref":["FIG. 5","FIG. 3"],"b":["310","138","310","116","312","310"]},"Users have the option of implementing application guard  locally to application , as a service running on the same system as application , or as a remote authorization service through a remote procedure call to another server. The advantage of the latter design would be to offload the application server from handling authorization services or allowing a single client server  to handle a multiple number of applications . A local implementation would provide maximum performance and minimize any network traffic overhead.","As seen in , application guard  includes an application guard interface  (referred to as interface  in ), coupled to an application , for requesting access to securable components. Application guard  also includes at least one authorization engine  for evaluating requests from application guard interface  as specified by local client security policy . The application guard  can further include an evaluator , an audit , a parser\/type checker , and various plug-ins . Multiple authorization engines  can be used for added performance and reliability. Furthermore, application guard interface  can be located on a client computer, while authorization engine  and local client policy  can be located on client server .","The design and architecture of application guard  separate the local client security policy from a given protected application and impose virtually no performance overhead on an existing application . Further, this structure enables requests to access the protected application to be evaluated by reviewing only the relatively few policy rules that make up the local client security policy rather than by reviewing the much larger set of policy rules forming the global security policy. In addition, the policy rules developed at policy manager  are compiled into an optimized form before changes to the sets of policy rules forming the various local client security policies are distributed to the target application guards . The optimized form enables the distribution of only the modified portions of the various local client security policies to the target application guards . This distribution methodology, among other things, facilitates updating the versions of the local client security policies enforced by the application guards . Each application being protected is associated with its own copy of the access authorization service. The policy relevant to the local application then resides at the application so there is no bandwidth constraint on the network trying to connect back to the central policy server for each access request. Because the application-specific policy resides locally and the applications do not share authorization services, there is no network delay or bottleneck.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 6","b":["316","602","604","606","602","604","316","606","310","316","604"]},"Application guard  supports transactional access control by allowing an application  to interface with a local client security policy and to make authorization requests at each and every user interaction, data request, or business-level transaction. The application guard is capable of evaluating the complete local client security policy and making an authorization decision outside of the application. No policy rules need to be embedded in the application or its associated databases. In addition, the design and integration of application guard  is fundamental to providing access control to business-level objects within an application  since the local client security policy accounts for those named policy objects within the application .","In the  embodiment, application guard  is preferably integrated with application  through a high-level application programming interface (API) or authorization library  that allows application  to make authorization requests as needed through an application guard interface . Typically, this can be done quickly by including the authorization requests at key points in application  for control of user interaction or database access so that each interaction is protected with a minimum amount of development.","The  example for a user using a standard application guard  begins with the user at a user terminal  () requesting access to a securable component protected by an application guard . In step , application guard  constructs and issues an authorization request. At step , the authorization request is evaluated by application guard  according to its local client security policy  to determine whether to allow or deny the authorization request. At step , audit  records the authorization request in audit log . Next, at step , if there is an error in the authorization request, or if the request is not valid, then at step  the user is denied access. However, if the authorization request is valid, then at step  it is determined whether access should be granted. If the evaluated authorization request does not deny access for the user, then at step  access is allowed. If the evaluated authorization request denies access for the user, then at step  access is denied.","API's necessary for externalizing rule management preferably include a set of interfaces for rule repository update, a set of interfaces for locating an authorization engine , and a set of interfaces for submitting authorization queries.  is an exemplary class diagram containing a subset of major components in the exemplary BLE API's  and  in , where Domain Service Factory class  is a root interface for locating authorization engines , submitting authorization queries, and a factory for creating Domain Service objects . In response to a given application name, Domain Service objects  discover Credentials Manager object , which provides Credentials object  that enables authorization queries to the authorization engine. Operations on the Credentials interface allow efficient querying of authorization engine. Each Credential object  has several methods , including Credentials.accessAllowed method, Credentials.bulkAccessAllowed, Credentials.queryPrivilege method, and Credentials.queryObjects. The Credentials.accessAllowed method is a basic authorization query method and the Credentials.bulkAccessAllowed method is an optimized authorization query method that allows multiple queries in one call. Other Credentials object methods allow more complex queries to the authorization engine. The Credentials.queryPrivilege method allows for querying of privileges for the specific user and object combination. The Credentials.queryObjects method allows for querying of objects for which a specific user has been granted certain privileges. Application guard interface  includes methods to apply each specific policy delta and methods to either apply or reject a policy update. Exemplary interfaces and their methods can be found in Appendix A.","A global security policy, in practice, involves constant changes, such as environmental, organizational, operational, and IT structural changes. As a result, the global security policy, which spans an entire enterprise, needs to be frequently updated, which involves complications as discussed in the Background Section. Changes in the security policy can be large or small, but any effective system for implementing a global security policy must quickly distribute those changes, through the network, to the relevant application guards . Therefore, the invention includes a schema for quickly distributing accumulated incremental policy changes throughout a network.",{"@attributes":{"id":"p-0096","num":"0095"},"figref":"FIG. 9","b":["224","224","310","910","214","224","912","464","222","914","222","218","916","222","310","918","310","920","310","318","922","318","310"]},{"@attributes":{"id":"p-0097","num":"0096"},"figref":["FIG. 10","FIG. 1","FIG. 2A","FIG. 3A"],"sup":["th ","th "],"b":["116","224","318"]},"At the nincremental change Cn, if local client security policy version V(i, n+1) is satisfactory to a user, a policy distributor  () will transmit D(i, n) or D(i) to client server  (), which will update the currently enforced version of the local client security policy, DV(i), based on D(i). By pre-computing and distributing only finally accumulated changes, (i.e., the accumulated delta) D(i), the invention reduces network congestion and distribution time to update a currently enforced local client security policy. After distributing D(i), the currently enforced policy is changed from version DV(i) to version DV(i+1) at the client server, that is, DV(i+1)=DV(i)+D(i).","In the process of generating the new version of the enforced local client security policy, DV(i+1), policy change tracking  () keeps track of the incremental changes C1, C2, . . . , Cn\u22121, Cn, computes respective deltas D(i, 1), D(i, 2), . . . , D(i, n\u22121), D(i, n), and stores Ck, D(i, k), where k=1, 2, . . . , n\u22121, n, in policy change tracking table  (). Policy change tracking  also stores the new version of the enforced local client security policy, DV(i+1), to enterprise policy (database)  ().","To illustrate an application of the principle shown in , a process is provided to show that in a currently enforced policy version DV(i)=V(i, 1), a user ID name \u201cuser_a\u201d is renamed to \u201cuser_f\u201d in a sequence of n incremental changes, where:\n\n(1)+1(renaming userto user)=(2)(user),(1)=(renaming userto user)\n\n(2)+2(renaming userto user)=(3)(user),(2)=(renaming userto user)\n\n(3)+3(renaming userto user)=(4)(user),(4)=zero because the user is renamed back,(4)=(1)\n\n(4)+4(renaming userto user)=(5)(user),(5)=(renaming userto user)\n\n. . .\n\n()+(renaming userto user)=(1)(user),()=(renaming userto user)\n","Consequently, when distributing policy version DV(i+1) after the sequence of incremental changes, the accumulated delta D(i, n) (or D(i)) from V(i, 1) to V(i, n+1) is \u201cuser_a is renamed to user_f.\u201d",{"@attributes":{"id":"p-0102","num":"0101"},"figref":["FIG. 11","FIG. 2A","FIG. 3A","FIG. 11","FIG. 10"],"b":["224","318","233"],"br":[{},{},{},{}],"in-line-formulae":[{},{},{},{},{},{},{},{}],"i":["n+","n","n"]},"According to the above equation set A, the process of reconstructing a previously enforced version of the local client security policy can be represented by the equation set B as follows:\n\nDV()=DV(1)+(\u2212())\n\nDV(1)=DV(1)+(\u2212()\u2212(1))\n\n. . .\n\nDV(2)=DV(1)+(\u2212()\u2212(1)\u2212(2)\u2212 . . . \u2212(3)\u2212(2))\n\nDV(1)=DV(1)+(\u2212()\u2212(1)\u2212(2)\u2212 . . . \u2212(3)\u2212(2)\u2212(1))\n","In the equation set B, \u2212D(i) represents the reversing rule changes of accumulated delta, D(i). In the policy reconstruction process, policy change reversing  () combines the sequence of respective D(i)s in a reversing order to generate an accumulated reversing delta, D(reversing), which will be used to reconstruct a previously enforced version of the local client security policy. For example, to reconstruct DV(1), policy change reversing  combines a reversing sequence of (\u2212D(n)\u2212D(n\u22121)\u2212 . . . \u2212D(3)\u2212D(2)\u2212D(1)) as D(reversing) and transmits it to application guard  (), which in turn reconstructs the previously enforced policy version DV(1) by combining DV(n+1) and D(reversing). By distributing only the accumulated reversing delta, D(reversing), the invention reduces network congestion and distribution time to reconstruct a previously enforced version of a local client security policy. The principle shown in  can also be used to reverse the incremental changes shown in .","In the process of reconstructing previously enforced version of a local client security policy, DV(i), policy change reversing  () keeps track of the reversing changes of D(i), computes a respective D(reversing), and updates D(i) in policy change tracking table  ().","To illustrate an application of the principle shown in , a process is provided to show a policy reconstruction from DV(4) to DV(2), where:\n\nDV(3)=DV(2)+(2)(renaming userto user)\n\nDV(4)=DV(3)+(3)(add user,renaming userto user)\n","To reconstruct DV(2) from DV(4):\n\nDV(3)=DV(4)+(\u2212(3))(delete user,renaming userto user)\n\nDV(2)=DV(3)+(\u2212(2))(renaming userto user)\n","In this example, the accumulated reversing delta, \u2212D(reversing), is \u201cdelete user_t and renaming user_z to user_a.\u201d",{"@attributes":{"id":"p-0109","num":"0108"},"figref":["FIG. 12","FIG. 2A"],"b":["224","318","3","310"]},"In step , a user makes n sequences of incremental changes C1, C2, . . . , Cn to the currently enforced version of the local client security policy, DV(i), as shown in .","In step , policy change tracking  () keeps track of the sequence of incremental changes Cj and generates a respective accumulated delta D(i, j) a=1, 2, . . . , n), while the user is making the changes. The sequence of incremental changes can be done in different days.","In step , at the nincremental change, the user indicates that he\/she has completed all changes, and then policy change tracking  generates an accumulated delta D(i) as shown in , stores the accumulated delta D(i) into policy change tracking table  (), and sends the accumulated delta D(i) to policy distributor  ().","In step , policy distributor  transmits the accumulated delta D(i) via network  to application guard  ().","In step , application guard  updates the currently enforced policy version DV(i) to new policy version DV(i+1), based on the accumulated delta D(i).",{"@attributes":{"id":"p-0115","num":"0114"},"figref":["FIG. 13","FIG. 2A"],"b":["224","318","3","310"]},"In step , a user enters a reconstruction request for reconstructing DV(n+1) to DV(2) as shown in .","In step , policy change reversing  () performs reversing changes to D(n), D(n\u22121), . . . , D(3), D(2)) to generate an accumulated reversing delta, D(reversing).","In step , policy change reversing  sends D(reversing) to policy distributor  ().","In step , policy distributor  transmits the D(reversing) to application guard  () via network .","In step , application guard  reconstructs policy version DV(2) by combining D(reversing) and DV(n+1).","A global security policy may contain thousands of inter-related rules which are enforced for many functional branches of an enterprise and hundreds of applications over thousands of users across the enterprise. To enable managers and policy administrators to efficiently and comprehensively manage or maintain a sound security policy, the invention provides a system capable of performing comprehensive policy analysis, including policy inquiry, policy verification, and policy cross-referencing, with respect to both the global and local client security policies. The preferred analysis is based on the policy data designed according to the policy model, which includes rule inheritance, object hierarchy, role hierarchy, and other interrelationships between policy components.","The invention provides policy inquiry capability at both a front end (i.e., policy manager server ) and a back end (i.e., client server ). Specifically, at the front end, an administrative user can, upon authorization, query against the global policy database for rules granting or denying a specified privilege on a specified object to a specified subject. A typical policy inquiry at a modular description level contains one or more parameters that include grant or deny access type, privilege, object, and subject. At the back end, an application can submit a request to the BLE via BLE API to query for privileges and objects that a specified application user can access, to query for information as to why a specified application user is granted or denied a specified privilege on a specified object. Such a back end policy inquiry is performed against the local policy database  resident in the BLE. Exemplary front end queries are illustrated as follows:","Across enterprise applications,","\u201cWhat can John Doe do?\u201d","\u201cWhat is John Doe forbidden to do?\u201d","In an enterprise application,","\u201cWho can monitor trade in a trading application?\u201d","\u201cWhat can a security auditor do with a trading application?\u201d","\u201cCan John Doe sell or buy ABCD security with a trading application?\u201d","And for a specific query,","\u201cUnder what condition may John Doe deposit or withdraw from account XYZ in a trading application?\u201d",{"@attributes":{"id":"p-0132","num":"0131"},"figref":["FIG. 14","FIG. 14"]},{"@attributes":{"id":"p-0133","num":"0132"},"figref":["FIG. 15","FIG. 15"]},"When processing a policy inquiry, the system considers the rule inheritance, object hierarchy and role hierarchy as shown in . The results present rules that match the given privilege, object, and subject in a query request. The hierarchy concept can be illustrated in reference to , assume that in the policy, (1) John Doe is one of the trade managers in role  () being associated with \u201cTrading\u201d organization node (), and that \u201cJunior Trader\u201d  is granted access rights to execute trades for securities X, Y and Z from 8 AM to 5 PM. Because \u201cTrade Manager\u201d  is a role that inherits access rights from \u201cSenior Traders\u201d , which further inherits access rights from \u201cJunior Trader\u201d , a query \u201cwhat can John Doe do?\u201d presents the answer that John Doe is granted access rights to execute trades for securities X, Y and Z from 8 AM to 5 PM.","In addition to policy inquiry, the system of the invention supports other kinds of policy analysis, including policy verification, and policy cross-referencing. A \u201cpolicy verification\u201d query can find users who are both granted a specified privilege on a specified object and another specified privilege on another specified object. Therefore, a \u201cpolicy verification\u201d query usually poses two access questions. Inconsistency or contradiction occurs if any user has the privilege of these two accesses. Exemplary \u201cpolicy verification\u201d queries are:","\u201cWhich users can view investment banking deals and execute trades?\u201d","\u201cWhich users can deposit funds and execute Accounts Receivable transactions?\u201d","\u201cWhich users can write checks and approve checks?\u201d","To illustrate the concept of policy verification, assume (1) John Doe inherits an accountant role, and an account manager role, in the multiple level role hierarchy, (2) there is a rule granting an accountant the privilege to issue payments including checks, cash, etc, and (3) there is a rule granting an account manager the privilege to approve checks. The query \u201cWhich users can write checks and approve checks?\u201d lists John Doe as the answer. Such policy analysis must perform multiple policy inquiries and generate results that match the query input, taking into account the complex policy model.","A \u201cpolicy cross-reference\u201d query enables users to ask questions about how a policy element relates to other policy elements. Exemplary \u201cpolicy cross-reference\u201d queries are:","\u201cTo what roles is this user assigned?\u201d","\u201cWhat are other user names for this user in the policy?\u201d","\u201cWhat rules have this privilege?\u201d","\u201cWhich rules have this user attribute in common?\u201d","Both policy verification and policy cross-reference queries also take into account rule inheritance, object hierarchy and role hierarchy as is done with respect to a policy inquiry.",{"@attributes":{"id":"p-0146","num":"0145"},"figref":["FIG. 16","FIG. 2A"],"b":["210","212"]},"In step , BLC  receives a query containing one or more parameters from a user and forwards the query, together with the parameters, to policy manager .","In step , upon receiving the query and the parameters, policy analysis  in policy manager  interprets the query and parameters, and executes the query against the global security policy  based on the object and role hierarchy, and rule inheritances shown in .","In step , BLC  receives and displays the query result ().",{"@attributes":{"id":"p-0150","num":"0149"},"figref":"FIG. 17","b":"116"},"In step , the application issues a query containing one or more parameters and sends the query, together with the parameters, to local policy analysis (engine)  via BLE API  (). The query is programmed into the application by a user at a user terminal  () or at a console (not shown) coupled to client server .","In step , upon receiving the query and the parameters, local policy analysis  in a BLE () executes the query against the local client security policy based on the object and role hierarchy, and rule inheritances shown in .","In step , the application receives the query results and further processes the results according to the application's operational flow, which may display the results to the user.","The invention has been explained above with reference to a preferred embodiment. Other embodiments will be apparent to those skilled in the art in light of this disclosure. For example, the invention may readily be implemented using configurations other than those described in the preferred embodiment above.","One alternative embodiment involves locating a management system, zero or more engines, and a policy database on a single server and then replicating one or more copies on servers at various locations on the network. Synchronization of policy updates could occur through database replication.","Another alternative embodiment bundles a management system, zero or more engines, and a policy database on a single server and then synchronizes with local policy stores over the network following local authorization requests to the central server. However, compared with the embodiments discussed above, these two alternative embodiments may have drawbacks in terms of scalability and performance.","Additionally, the invention may effectively be used in conjunction with systems other than the one described above as the preferred embodiment. Therefore, these and other variations upon the preferred embodiments are intended to be covered by the invention, which is limited only by the appended claims.",{"@attributes":{"id":"p-0158","num":"0157"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"APPENDIX A "},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"module BLE"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"interface AgCredentialsManager;"]},{"entry":[{},"interface AgCredentials;"]},{"entry":[{},"interface AgInstance;"]},{"entry":[{},"interface DomainServiceFactory;"]},{"entry":[{},"interface DomainService;"]},{"entry":[{},"\/\/----------------------------------"]},{"entry":[{},"\/\/ DomainServiceFactory"]},{"entry":[{},"\/\/----------------------------------"]},{"entry":[{},"interface DomainServiceFactory"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DomainService createDomainService(in string domain);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ create domain service for the domain"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"interface DomainService"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"AgCredentialsManager createCredentialsMgr (in string"]},{"entry":[{},"application);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ create credentials manager for the application"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"\/\/ This struct is set by the rule(s) evaluated and may contain"]},{"entry":[{},"\/\/ output information, both from the rule and global"]},{"entry":[{},"struct EvaluationResult {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string ruleID;"]},{"entry":[{},"string privilege;"]},{"entry":[{},"string objectName;"]},{"entry":[{},"TRUTH_VALUE_ENUM decision;"]},{"entry":[{},"NVPairList data;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<EvaluationResult> EvaluationResultList;"]},{"entry":[{},"struct AccessElement"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string privilege;"]},{"entry":[{},"string objectName;"]},{"entry":[{},"BLE::NVPairList inAttrList;"]},{"entry":[{},"boolean findAllFacts;"]},{"entry":[{},"BLE::EvaluationResultList results;"]},{"entry":[{},"TRUTH_VALUE_ENUM accessAllowed;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<AccessElement> AccessList;"]},{"entry":[{},"typedef sequence<string> PrivilegeList;"]},{"entry":[{},"typedef sequence<string> ObjectList;"]},{"entry":[{},"typedef sequence<string> RoleList;"]},{"entry":[{},"interface AgCredentials : Common::WBObject"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string getDomainName( );"]},{"entry":[{},"\/\/ get domain name"]},{"entry":[{},"string getLocationName( );"]},{"entry":[{},"\/\/ get location name"]},{"entry":[{},"string getApplicationName( );"]},{"entry":[{},"\/\/ get application name"]},{"entry":[{},"string getUserId( );"]},{"entry":[{},"\/\/ get userid"]},{"entry":[{},"TRUTH_VALUE_ENUM accessAllowed(in BLE::NVPairList"]},{"entry":[{},"inAttrs,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"in string privilege,"]},{"entry":[{},"in string objectName,"]},{"entry":[{},"in boolean findAllFacts,"]},{"entry":[{},"out BLE::Evaluation ResultList"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"results)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (Common::BadParameterException,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BLE::CredvarException,"]},{"entry":[{},"BLE::InternalException,"]},{"entry":[{},"BLE::LogicException,"]},{"entry":[{},"BLE::InvalidUserException);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ Solve policy. \u201cinAttrs\u201d is a list of input dynamic"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"attributes"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ for the request. \u201cresults\u201d is (possibly empty) list of"]},{"entry":[{},"\/\/ EvaluationResult data structures set by the BLE engine."]},{"entry":[{},"\/\/ FindAllFacts, when set to true continues rules evaluation"]},{"entry":[{},"\/\/ after first deny or grant is found, to allow all"]},{"entry":[{},"\/\/ potentially firing rules to report any output attributes"]},{"entry":[{},"\/\/ as set by the administrator of the policy - it"]},{"entry":[{},"\/\/ should not be used if output attributes are not used"]},{"entry":[{},"\/\/ as it slows down evaluation considerably"]},{"entry":[{},"void bulkAccessAllowed(inout BLE::AccessList accessList)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises(Common::BadParameterException,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BLE::CredvarException,"]},{"entry":[{},"BLE::InternalException,"]},{"entry":[{},"BLE::LogicException,"]},{"entry":[{},"BLE::InvalidUserException);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ solve policy in bulk. All evaluation requests in accessList"]},{"entry":[{},"\/\/ will be processed at the same time."]},{"entry":[{},"BLE::PrivilegeList queryPrivileges(in string objectName,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"in boolean includedeny,"]},{"entry":[{},"in BLE::NVPairList inAttrs,"]},{"entry":[{},"in boolean findAllFacts,"]},{"entry":[{},"out"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"BLE::EvaluationResultList results)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (Common::BadParameterException,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BLE::CredvarException,"]},{"entry":[{},"BLE::InternalException,"]},{"entry":[{},"BLE::LogicException,"]},{"entry":[{},"BLE::InvalidUserException);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ query privileges on the object. if includedeny is true"]},{"entry":[{},"\/\/ auth eval will be computed on every priv-obj-subj"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"combination"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ and all grants will be returned in privileges list."]},{"entry":[{},"\/\/ if includedeny is false, no auth eval is done."]},{"entry":[{},"\/\/ note that query result includes privilege propagation"]},{"entry":[{},"\/\/ on the object tree, so you do not know if privilege is"]},{"entry":[{},"\/\/ written directly on the object or is inherited"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"BLE::ObjectList queryObjects(in string privilege,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"in string clippingNode,"]},{"entry":[{},"in boolean includedeny,"]},{"entry":[{},"in BLE::NVPairList inAttrs,"]},{"entry":[{},"in boolean findAllFacts,"]},{"entry":[{},"out BLE::EvaluationResultList"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"outAttrs)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (Common::BadParameterException,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BLE::CredvarException,"]},{"entry":[{},"BLE::InternalException,"]},{"entry":[{},"BLE::LogicException,"]},{"entry":[{},"BLE::InvalidUserException);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ Query objects below clipping node for the specified"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"privilege."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ If includedeny is true AccessAllowed will be computed"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"on every"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ priv-obj-subj combination and all objects below clipping"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"node"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ will be returned in objects list. If includedeny is"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"false"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ no evaluation is done."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"boolean queryPerformance(out double averageQueryLatency,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"out double averageQueryLoad);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"="}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ This call returns average AccessAllowed evaluation time"]},{"entry":[{},"\/\/ in seconds and average load on the engine - it is"]},{"entry":[{},"\/\/ available only if auditing is enabled - will return false"]},{"entry":[{},"\/\/ otherwise."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"interface AgCredentialsManager"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"string getDomainName( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ get domain name"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"string getLocationName( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ get location name"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"string getApplicationName( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ get application name"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"AgCredentials findCredentials(in string userid)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises(Common::BadparameterException,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BLE::InvalidUserException,"]},{"entry":[{},"BLE::InternalException,"]},{"entry":[{},"BLE::LogicException);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Find credentials for the userid. Either new or existing"]},{"entry":[{},"\/\/ credentials object can be returned."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"AgCredentials findCredentialsWithRoles(in string userid,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"in BLE::RoleList roles)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (Common::BadParameterException,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BLE::InvalidUserException,"]},{"entry":[{},"BLE::InternalException,"]},{"entry":[{},"BLE::LogicException);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Find credentials for the userid and roles."]},{"entry":[{},"\/\/ Either new or existing"]},{"entry":[{},"\/\/ credentials object can be returned."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"\/\/----------------------------------"]},{"entry":[{},"\/\/ AgInstance"]},{"entry":[{},"\/\/----------------------------------"]},{"entry":[{},"struct BindingDelta"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string action; \/\/ add"]},{"entry":[{},"string agname;"]},{"entry":[{},"string application;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<BindingDelta> BindingDeltaSeq;"]},{"entry":[{},"struct DirectoryDelta"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string action; \/\/ del, ren"]},{"entry":[{},"string directory;"]},{"entry":[{},"string newDirectory;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<DirectoryDelta> DirectoryDeltaSeq;"]},{"entry":[{},"struct UserDelta"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string action; \/\/ del, ran, add"]},{"entry":[{},"string user;"]},{"entry":[{},"string newUser;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<UserDelta> UserDeltaSeq;"]},{"entry":[{},"struct RoleDelta"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string action; \/\/ del, ren, add"]},{"entry":[{},"string role;"]},{"entry":[{},"string newRole;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<RoleDelta> RoleDeltaSeq;"]},{"entry":[{},"struct RoleMemberDelta"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string action; \/\/ del, add"]},{"entry":[{},"string role;"]},{"entry":[{},"string member;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<RoleMemberDelta> RoleMemberDeltaSeq;"]},{"entry":[{},"struct GlobalUserMappingDelta"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string action; \/\/ del, add"]},{"entry":[{},"string globalUser;"]},{"entry":[{},"string localUser;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<GlobalUserMappingDelta> GlobalUserMapping"]},{"entry":[{},"DeltaSeq;"]},{"entry":[{},"struct GlobalRoleMappingDelta"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string action; \/\/ del, add"]},{"entry":[{},"string globalRole;"]},{"entry":[{},"string localRole;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<GlobalRoleMappingDelta> GlobalRoleMapping"]},{"entry":[{},"DeltaSeq;"]},{"entry":[{},"struct GlobalSubjectDelta"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string action; \/\/ ren, del"]},{"entry":[{},"string globalSubject;"]},{"entry":[{},"string newGlobalSubject;"]},{"entry":[{},"string mappedDirectory;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<GlobalSubjectDelta> GlobalSubjectDeltaSeq;"]},{"entry":[{},"struct SubjectAttributeDelta"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string action; \/\/ add, del"]},{"entry":[{},"string subject;"]},{"entry":[{},"string attr;"]},{"entry":[{},"string value;"]},{"entry":[{},"string type; \/\/ single: S, list: L"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<SubjectAttributeDelta> SubjectAttributeDeltaSeq;"]},{"entry":[{},"struct ObjectAttributeDelta"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string action; \/\/ add, del"]},{"entry":[{},"string objectName;"]},{"entry":[{},"string attr;"]},{"entry":[{},"string value;"]},{"entry":[{},"string type; \/\/ single: S, list: L"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<ObjectAttributeDelta> ObjectAttributeDeltaSeq;"]},{"entry":[{},"struct LogicalNamesDelta"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string action; \/\/ del, mod, add"]},{"entry":[{},"string objectName;"]},{"entry":[{},"string logicalName;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<LogicalNamesDelta> LogicalNamesDeltaSeq;"]},{"entry":[{},"struct ObjectDelta"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string action; \/\/ del, ren, add"]},{"entry":[{},"string objectName;"]},{"entry":[{},"string newObjectName;"]},{"entry":[{},"string type; \/\/ A, 0 (this is for object)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<ObjectDelta> ObjectDeltaSeq;"]},{"entry":[{},"struct DeclDelta"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string action; \/\/ del, mod, add (ren = del -> add)"]},{"entry":[{},"string text;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<DeclDelta> DeclDeltaSeq;"]},{"entry":[{},"struct RuleDelta"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string action; \/\/ del, add"]},{"entry":[{},"string rule; \/\/ posid:rid:text (add); posid (del)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"typedef sequence<RuleDelta> RuleDeltaSeq;"]},{"entry":[{},"interface AgInstance \/\/: SG::ServerGroupMember \/\/:"]},{"entry":[{},"Common::WBObject"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string getAgLocalName( );"]},{"entry":[{},"\/\/ get ag instance name"]},{"entry":[{},"string getDomainName( );"]},{"entry":[{},"\/\/ get domain name"]},{"entry":[{},"string getLocationName( );"]},{"entry":[{},"\/\/ get location name"]},{"entry":[{},"AgCredentialsManager getAgCredentialsManager (in string"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"application)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises(Common::BadParameterException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/returns a CredsMgr for a given application"]},{"entry":[{},"\/\/raises badparm if application is not guarded by this AG"]},{"entry":[{},"void startPolicyUpdate ( )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises(Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ start policy update"]},{"entry":[{},"void saveBindingDelta(in BindingDeltaSeq seq, in boolean"]},{"entry":[{},"more)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises(Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ save binding delta"]},{"entry":[{},"void saveDirectoryDelta(in DirectoryDeltaSeq seq, in boolean"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"more)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises(Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ save directory delta"]},{"entry":[{},"void saveUserDelta(in UserDeltaSeq seq, in boolean more)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ save user delta"]},{"entry":[{},"void saveRoleDelta(in RoleDeltaSeq seq, in boolean more)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ save role delta"]},{"entry":[{},"void saveRoleMemberDelta(in RoleMemberDeltaSeq seq, in"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"boolean more)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises(Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ save role membership delta"]},{"entry":[{},"void saveGlobalUserMappingDelta(in"]},{"entry":[{},"GlobalUserMappingDeltaSeq"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"seq,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"in boolean more)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises(Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ save global user mapping delta"]},{"entry":[{},"void saveGlobalRoleMappingDelta (in"]},{"entry":[{},"GlobalRoleMappingDeltaSeq"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"seq,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"in boolean more)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises(Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ save global role mapping delta"]},{"entry":[{},"void saveGlobalSubjectDelta(in GlobalSubjectDeltaSeq seq,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"in boolean more)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises(Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ save global subject delta"]},{"entry":[{},"void saveSubjectAttributeDelta(in SubjectAttributeDeltaSeq seq,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"in boolean more)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ save user attribute delta"]},{"entry":[{},"void saveLogicalNamesDelta(in LogicalNamesDeltaSeq seq,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"in boolean more)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ save logical names delta"]},{"entry":[{},"void saveObjectDelta(in ObjectDeltaSeq seq, in boolean more)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ save object tree delta"]},{"entry":[{},"void saveObjectAttributeDelta(in ObjectAttributeDeltaSeq seq,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"in boolean more)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"raises (Common::RuntimeException);"]},{"entry":[{},"\/\/ save object attribute delta"]},{"entry":[{},"void saveDeclDelta(in DeclDeltaSeq seq, in boolean more)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises(Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ save decl delta"]},{"entry":[{},"void saveRuleDelta(in RuleDeltaSeq seq, in boolean more)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises(Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ save rule delta"]},{"entry":[{},"string prepareToCommit(in long policyid, in boolean flush)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"raises (InvalidDataException,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Common::RuntimeException);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ prepare to commit policy update, return policy hash"]},{"entry":[{},"\/\/ input is new policy id and a flush flag, that instructs"]},{"entry":[{},"\/\/ app guard to flush it's current policy"]},{"entry":[{},"void commit( );"]},{"entry":[{},"\/\/ commit policy update"]},{"entry":[{},"void rollback( );"]},{"entry":[{},"\/\/ rollback policy update"]},{"entry":[{},"oneway void invitationToRegister( );"]},{"entry":[{},"\/\/ register with policy distributor"]},{"entry":[{},"long getPolicyId( );"]},{"entry":[{},"\/\/ get app guard policy id"]},{"entry":[{},"double getProcessingRate( );"]},{"entry":[{},"\/\/ returns current moving average of the number of requests"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"processed"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ per second"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"};"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 1A","FIG. 1"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 2","FIG. 1A"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 2A","FIG. 1A"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 3","FIG. 1A"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 3A","FIG. 1A"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 4","FIG. 2"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 17"}]},"DETDESC":[{},{}]}
