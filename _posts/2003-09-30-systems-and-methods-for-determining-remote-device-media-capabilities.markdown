---
title: Systems and methods for determining remote device media capabilities
abstract: Systems and methods for providing a media device capabilities determination mechanism in a networked computing environment are provided. Some of today's operating systems and applications deliver a set of remoting features to enable a networked ecosystem of remote media consumption devices. These devices connect to the host and display a remoted media experience via remoting protocols and technologies. In this regard, the device capabilities determination mechanism of the invention enables a remote device to specify a custom set of media capabilities that should be remoted from the host to the remote device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07418472&OS=07418472&RS=07418472
owner: Microsoft Corporation
number: 07418472
owner_city: Redmond
owner_country: US
publication_date: 20030930
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["COPYRIGHT NOTICE AND PERMISSION","FIELD OF THE INVENTION","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["A portion of the disclosure of this patent document may contain material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent files or records, but otherwise reserves all copyright rights whatsoever. The following notice shall apply to this document: Copyright\u00a9 2003, Microsoft Corp.","This invention relates to the remote provision of media and related media services from one computing device to a remote computing device. More particularly, the invention relates to a framework for remote devices to declare their media capabilities for purposes of a remote computing session.","Remote computing gives a computing system the capability to serve operating system-based applications to terminals and terminal emulators running on PC and non-PC desktops. Such an environment can be a thin-client architecture where application processing occurs mainly on a central server, but can be distributed as well. Because clients requesting access to such applications are available for many different desktop platforms (Macintosh, UNIX, and others), the server provides access to applications from virtually any desktop, and thereby provide enterprises and consumers alike with an extension to their computing environment with a lower total cost of ownership.","For instance, one type of remote computing, called multipoint computer application, enables sharing of applications among computers by allowing a view onto a computer application executing at one site to be advertised within a session to other sites. Such communication is achieved by way of a pre-defined protocol. Each site can, under specified conditions, take control of the shared computer application by sending remote input, such as remote keyboard and pointing device information. It thus enables remote viewing and control of a single application instance to provide the illusion that the application is running locally. Also, some types of \u201capplication sharing\u201d remote computing provide for the synchronization, at multiple sites, of multiple instances of the same executing computer application. A session generally includes object(s) executing on one or more client entities which cooperate via a protocol to share one or more applications within the session. Such a protocol defines interactions among client entities and the session. Terminal Server and the Remote Desktop Protocol enable an exemplary remote computing environment.",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1A"},"Over the last decade, the media rendering functionality of host PCs has been evolving rapidly. Moreover, the number of formats of media, whether audio and\/or video, that can be rendered by the host PC has been proliferating. Fortunately, storage has evolved alongside the media desktop to handle the increase in media, whether stored in connection with a streaming experience, or more permanently on disk. Consequently, it is desirable to port the media rendering capabilities of today's host PC desirable to remote devices.","Commonly assigned co-pending U.S. patent application Ser. No. 10\/413,846 (the '846 application), filed Apr. 15, 2003, entitled \u201cApplication Program Interfaces and Structures in a Resource Limited Operating System,\u201d describes various techniques for remoting a media experience. As discussed in the '846 application, exemplary cooperation among computing devices to transmit a media experience rapidly and in high quality to one or more remote endpoints is shown in  and described below.",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1B","b":["200","201","202","204","206","202","210","206","208","211","212","204","206","202","213"]},"Local PC  can be a conventional PC, such as computer , as well as a variety of other computing devices. Other exemplary computing devices include a notebook computer, a tablet PC, or a server. Local PC  can be any consumer-electronics device capable of rendering media component . As will be described in greater detail below, local PC  can be used in connection with components to remotely distribute media presentations. Moreover, a DRM scheme enabled by local PC  can be applied to the distributed media presentations.","Computing experience , in a preferred embodiment, is a media experience that would be observed locally at PC . But computing experience  should not be construed as limited to a single instantiation. Rather, the present invention contemplates multiple computing experiences  that can each be instantiated and received by respective endpoints. Computing experience  includes both a user-interface component  and a media component .","User-interface component  includes graphics and images that typically compose a user interface. User-interface component  includes icons, host audio, background images and applications such as word-processing applications, spreadsheet applications, database applications, and so forth. Virtually any components that are not media components are part of user-interface component . Media Players and associated operating system media components are examples of software utilized in connection with user-interface component .","Media component  includes media-rich or bandwidth-intensive elements that compose a media event. The following is a nonexhaustive list of exemplary media components: a streaming media presentation, including video and\/or audio presentation(s), a television program, including a cable television (CATV), satellite, pay-per-view, or broadcast program, a digitally compressed media experience, a radio program, a recorded media event (sourced by a VCR, DVD player, CD player, Personal Video Recorder and the like), a real-time media event, a camera feed and so on.","Thus, a user with local PC  located in a home office could use that PC to watch a streaming video program from the Internet on a television (a first remote endpoint ) in the family room. Moreover, using the same PC, a child could simultaneously watch on another television set (a second remote endpoint ) a video stored on local PC .","It is noted that these scenarios can be extended to a myriad of circumstances. For instance, a third user could simultaneously observe a camera feed inputted into local PC  that is remoted to a third remote endpoint . A fourth user could use local PC  to remote a fourth instantiation of computing experience  to watch a remoted television program on a monitor that does not have a TV tuner.","User-interface channel  communicates user-interface component  to remote component . Terminal Server and Terminal Client Services, offered by Microsoft Corporation of Redmond, Wash., provide an exemplary user-interface channel . Any remotable protocol can be used to transmit data through user-interface channel . Exemplary protocols include the T-120 series protocol and HTTP (Hyper Text Transfer Protocol).","Media channel  is separate from user-interface channel . Media channel  is used to transmit bandwidth-intensive experiences such as video and others listed above. Media component  provides a communications conduit for data to flow separate from user-interface component . Thus, the media component  is sent out of band with respect to the user-interface component, but synchronized. An exemplary protocol to transmit data through media component  includes, but is not limited to, the Transmission Control Protocol (TCP).","Network  can be any communications network, but is described in the context of a local area network (LAN). Today, LANs are offered in many varieties, including Ethernet, phone-wire networks, power-wire networks, and wireless networks. Wireless networks are not limited to radio and spread-spectrum networks and utilize protocols such as 802.11a, 802.11b, and 802.11g. An ordinary skilled artisan will readily appreciate these and other networks can also be used.","In each of the scenarios mentioned above, user-interface component  is presented on the respective remote endpoint  along with media component . This enables a remote user to remotely operate local PC . Typical actions that a remote user may desire to carry out include commands such as stop, fast forward, and rewind as well as conventional computer commands that enable actions such as resizing replay windows and adjusting volume and picture quality. In theory, it would work to have a standard set of input commands from which the user of a remote media device could choose, if remote media devices were standard, but as illustrated in , both remote media devices and media types are diverse groups.","For exemplary purposes only,  illustrates that there are many kinds of media, such as music (MP3s, WMAs, etc.), streaming audio\/video, photos (JPEGs, GIFs, etc.), movie files (MOVs, MPEGs, etc.), advertisements, broadcast media (radio, TV, cable, etc.), graphics data, etc.  also illustrates that there is a variety of devices that render media in some fashion, for some purpose. These devices include, but are not limited to, televisions, radios, tuners, DVD players, VCRs, MP3 players, Smart Display devices, laptops, gaming machines, remote control devices, cell phones, PDAs, digital picture frames, etc. The exemplary, non-limiting links between the media types and devices illustrate that each of the types of devices may or may not have the ability to render the type of media in question. Thus, the media rendering capabilities of the remote devices are diverse. Moreover, even if a device supports the ability to render a particular format, there is still a difference between the user interface capabilities presented at a host device versus the capabilities of a user interface presented at the remote device. It would be desirable to have a user interface abstraction layer for the translation of the user interface capabilities from the host device to the remote device.","For instance, an MP3 player may or may not be able to store or render video. A laptop may have significantly better storage, processing power and resolution than other devices. A universal remote device may have specialized touch screen capabilities. Thus, a user would benefit from automatic tailoring of the desktop media experience familiar to the user in a custom format that makes sense in view of the media capabilities of a select remote device. Today, no such ability exists, unless a developer hardwires unique server software and unique client software for achieving the objective with respect to a specific device.","It would thus be desirable to have a mechanism or framework for a remote device to declare its media rendering capabilities to a host device. It would be further desirable to have a mechanism or framework for a remote device to declare its user interface capabilities to a host device as they relate to the remote device's media experience. Accordingly, there is a great need in the art for a remote computing mechanism, enabling a remote device to declare capabilities as they relate to media in a computing system including at least one host device, and one or more remote devices.","In consideration of the above-identified shortcomings of the art, the present invention provides systems and methods for providing a media device capabilities determination mechanism in a networked computing environment. Some of today's operating systems and applications deliver a set of remoting features to enable a networked ecosystem of remote media consumption devices. These devices connect to the host and display a remoted media experience via remoting protocols and technologies. In this regard, the device capabilities determination mechanism of the invention enables a remote media consumption device to specify a custom set of media capabilities that should be remoted from the host to the remote media consumption device. The mechanism is dynamic and extensible.","Other advantages and features of the invention are described below.","Overview","Recent improvements in the way consumers interact with their computers include the introduction of a broad ecosystem of networked devices that deliver entertainment experiences (such as TV, music, videos, photographs, DVD's, etc) throughout the home on a variety of devices (such as electronic home remote media devices, Smart Displays, xBoxes, pocket PCs, portable DVD devices, and the like). In order to optimize the media experience enabled by a host PC for the class of session onto which it is remoted, the capabilities of the session, based on the capabilities of the device, must be known. Today, the differences between devices such as typical remote media devices, Smart Displays, generic TS sessions, etc. are well understood. Accordingly, different classes of sessions require different remote media sessions. Over time, media will be remotely accessed by a greater variety of devices (e.g., xBox, Pocket PC, portable DVD players, etc). As described in more detail below, the mechanism for determining device capabilities of the invention satisfies these needs.","As mentioned, some of today's operating systems, such as Windows\u00ae Media Center Edition (MCE), deliver a rich set of remoting features to enable an ecosystem of remote media consumption devices. These devices connect to the host, such as an MCE PC, and display a remoted media experience via Terminal Services or other remoting technologies. To enhance such an ecosystem, the automatic device capabilities declaration and determination mechanism of the invention enables a remote device to specify a custom set of media capabilities and corresponding UI that should be remoted to the device.","Exemplary Networked and Distributed Environments","One of ordinary skill in the art can appreciate that the invention can be implemented in connection with any computer or other client or server device, which can be deployed as part of a computer network, or in a distributed computing environment. In this regard, the present invention pertains to any computer system or environment having any number of memory or storage units, and any number of applications and processes occurring across any number of storage units or volumes, which may be used in connection with a remote media experience in accordance with the present invention. The present invention may apply to an environment with server computers and client computers deployed in a network environment or distributed computing environment, having remote or local storage. The present invention may also be applied to standalone computing devices, having programming language functionality, interpretation and execution capabilities for generating, receiving and transmitting information in connection with remote or local services. With network sources for digital media proliferating more than ever, the invention is particularly relevant to those computing devices operating in a network or distributed computing environment, and thus the media capabilities declaration techniques in accordance with the present invention can be applied with great efficacy in those environments.","Distributed computing provides sharing of computer resources and services by exchange between computing devices and systems. These resources and services include the exchange of information, cache storage and disk storage for files. Distributed computing takes advantage of network connectivity, allowing clients to leverage their collective power and storage to benefit the entire enterprise. In this regard, a variety of devices may have applications, objects or resources that may implicate the media capabilities determination processes of the invention.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 2A","FIG. 2A"],"b":["10","10","110","110","110","14","10","10","110","110","110"],"i":["a","b","a","b","c","a","b","a","b","c"]},"It can also be appreciated that an object, such as , may be hosted on another computing device , , etc. or , , etc. Thus, although the physical environment depicted may show the connected devices as computers, such illustration is merely exemplary and the physical environment may alternatively be depicted or described comprising various digital devices such as PDAs, televisions, MP3 players, etc., software objects such as interfaces, COM objects, or any device that may be utilized in connection with a media experience.","There are a variety of systems, components, and network configurations that support distributed computing environments. For example, computing systems may be connected together by wired or wireless systems, by local networks or widely distributed networks. Currently, many of the networks are coupled to the Internet, which provides an infrastructure for widely distributed computing and encompasses many different networks. Any of the infrastructures may be used for exemplary communications made incident to the provision of remote media experience(s) according to the present invention.","In home networking environments, there are at least four disparate network transport media that may each support a unique protocol, such as Power line, data (both wireless and wired), voice (e.g., telephone) and entertainment media. Most home control devices such as light switches and appliances may use power lines for connectivity. Data Services may enter the home as broadband (e.g., either DSL or Cable modem) and are accessible within the home using either wireless (e.g., HomeRF or 802.11B) or wired (e.g., Home PNA, Cat 5, Ethernet, even power line) connectivity. Voice traffic may enter the home either as wired (e.g., Cat 3) or wireless (e.g., cell phones) and may be distributed within the home using Cat 3 wiring. Entertainment media, or other graphical data, may enter the home either through satellite or cable and is typically distributed in the home using coaxial cable. IEEE 1394 and DVI are also digital interconnects for clusters of media devices. All of these network environments and others that may emerge as protocol standards may be interconnected to form a network, such as an intranet, that may be connected to the outside world by way of the Internet. In short, a variety of disparate sources exist for the storage and transmission of data, and consequently, moving forward, computing devices will require ways of sharing data, such as data accessed or utilized incident to program objects, which request or make use of the media capabilities declaration and determination mechanism(s) in accordance with the present invention.","The Internet commonly refers to the collection of networks and gateways that utilize the TCP\/IP suite of protocols, which are well-known in the art of computer networking. TCP\/IP is an acronym for \u201cTransmission Control Protocol\/Internet Protocol.\u201d The Internet can be described as a system of geographically distributed remote computer networks interconnected by computers executing networking protocols that allow users to interact and share information over the network(s). Because of such wide-spread information sharing, remote networks such as the Internet have thus far generally evolved into an open system for which developers can design software applications for performing specialized operations or services, essentially without restriction.","Thus, the network infrastructure enables a host of network topologies such as client\/server, peer-to-peer, or hybrid architectures. The \u201cclient\u201d is a member of a class or group that uses the services of another class or group to which it is not related. Thus, in computing, a client is a process, i.e., roughly a set of instructions or tasks, that requests a service provided by another program. The client process utilizes the requested service without having to \u201cknow\u201d any working details about the other program or the service itself. In a client\/server architecture, particularly a networked system, a client is usually a computer that accesses shared network resources provided by another computer, e.g., a server. In the example of , computers , , etc. can be thought of as clients and computers , , etc. can be thought of as the server where server , , etc. maintains the data that is then replicated in the client computers , , etc., although any computer can be considered a client, a server, or both, depending on the circumstances. For instance, computer may be an MCE host PC, and computing devices , , etc. may be remote media consumption devices. Any of these computing devices may be processing data or requesting services or tasks that may implicate the media capabilities determination mechanism(s) of the invention.","A server is typically a remote computer system accessible over a remote or local network, such as the Internet. The client process may be active in a first computer system, and the server process may be active in a second computer system, communicating with one another over a communications medium, thus providing distributed functionality and allowing multiple clients to take advantage of the information-gathering capabilities of the server. Any software objects utilized pursuant to the media capabilities determination techniques of the invention may be distributed across multiple computing devices or objects.","Client(s) and server(s) communicate with one another utilizing the functionality provided by protocol layer(s). For example, HyperText Transfer Protocol (HTTP) is a common protocol that is used in conjunction with the World Wide Web (WWW), or \u201cthe Web.\u201d For instance, RDP is a common protocol utilized for remote computing. Typically, a computer network address such as an Internet Protocol (IP) address or other reference such as a Universal Resource Locator (URL) can be used to identify the server or client computers to each other. The network address can be referred to as a URL address. Communication can be provided over a communications medium, e.g., client(s) and server(s) may be coupled to one another via TCP\/IP connection(s) for high-capacity communication.","Thus,  illustrates an exemplary networked or distributed environment, with a server in communication with client computers via a network\/bus, in which the present invention may be employed. In more detail, a number of servers , , etc., are interconnected via a communications network\/bus , which may be a LAN, WAN, intranet, the Internet, etc., with a number of client or remote computing devices , , , , , etc., such as a portable computer, handheld computer, thin client, networked appliance, or other device, such as a VCR, TV, oven, light, heater and the like in accordance with the present invention. It is thus contemplated that the present invention may apply to any computing device with unique media abilities when it comes to storage, user interface, rendering, etc.","In a network environment in which the communications network\/bus  is the Internet, for example, the servers , , etc. can be Web servers with which the clients , , , , , etc. communicate via any of a number of known protocols such as HTTP. Servers , , etc. may also serve as clients , , , , , etc., as may be characteristic of a distributed computing environment.","Communications may be wired or wireless, where appropriate. Client devices , , , , , etc. may or may not communicate via communications network\/bus , and may have independent communications associated therewith. For example, in the case of a TV or VCR, there may or may not be a networked aspect to the control thereof. Each client computer , , , , , etc. and server computer , , etc. may be equipped with various application program modules or objects  and with connections or access to various types of storage elements or objects, across which files or data streams may be stored or to which portion(s) of files or data streams may be downloaded, transmitted or migrated. Any one or more of computers , , , , etc. may be responsible for the maintenance and updating of a database  or other storage element, such as a database or memory  for storing data processed according to the invention. Thus, the present invention can be utilized in a computer network environment having client computers , , etc. that can access and interact with a computer network\/bus  and server computers , , etc. that may interact with client computers , , etc. and other like devices, and databases .","Exemplary Computing Device",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 2B"},"Although not required, the invention can be implemented via an operating system, for use by a developer of services for a device or object, and\/or included within application software that operates in connection with the receipt of a capabilities declaration or delivery of a custom media experience in accordance with the invention. Software may be described in the general context of computer-executable instructions, such as program modules, being executed by one or more computers, such as client workstations, servers or other devices. Generally, program modules include routines, programs, objects, components, data structures and the like that perform particular tasks or implement particular abstract data types. Typically, the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations and protocols. Other well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers (PCs), automated teller machines, server computers, hand-held or laptop devices, multi-processor systems, microprocessor-based systems, programmable consumer electronics, network PCs, appliances, lights, environmental control elements, minicomputers, mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network\/bus or other data transmission medium. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices, and client nodes may in turn behave as server nodes.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 2B","b":["100","100","100","100"]},"With reference to , an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus (also known as Mezzanine bus).","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CDROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk , such as a CD-ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in  provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules  and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules  and program data . Operating system , application programs , other program modules  and program data  are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A graphics interface , such as Northbridge, may also be connected to the system bus . Northbridge is a chipset that communicates with the CPU, or host processing unit , and assumes responsibility for accelerated graphics port (AGP) communications. One or more graphics processing units (GPUs)  may communicate with graphics interface . In this regard, GPUs  generally include on-chip memory storage, such as register storage and GPUs  communicate with a video memory , wherein the application variables of the invention may have impact. GPUs , however, are but one example of a coprocessor and thus a variety of coprocessing devices may be included in computer , and may include a variety of procedural shaders, such as pixel and vertex shaders. A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface , which may in turn communicate with video memory . In addition to monitor , computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may operate in a networked or distributed environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks\/buses. Such networking environments are commonplace in homes, offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Exemplary Remote Device",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 2C"},"Although not required, the invention can partly be implemented via an operating system, for use by a developer of services for a device or object, and\/or included within application software that operates in connection with the component(s) of the invention. Software may be described in the general context of computer-executable instructions, such as program modules, being executed by one or more computers, such as client workstations, servers or other devices. Those skilled in the art will appreciate that the invention may be practiced with other computer system configurations and protocols.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 2C","b":["100","100","100","100"],"i":["a ","a ","a. "]},"With reference to , an exemplary remote device for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include, but are not limited to, a processing unit , a system memory , and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures.","Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer . By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CDROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory may include computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM) and\/or random access memory (RAM). A basic input\/output system (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, may be stored in memory . Memory typically also contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation, memory may also include an operating system, application programs, other program modules, and program data.","The computer may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. For example, computer could include a hard disk drive that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive that reads from or writes to a removable, nonvolatile magnetic disk, and\/or an optical disk drive that reads from or writes to a removable, nonvolatile optical disk, such as a CD-ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM and the like. A hard disk drive is typically connected to the system bus through a non-removable memory interface such as an interface, and a magnetic disk drive or optical disk drive is typically connected to the system bus  by a removable memory interface, such as an interface.","A user may enter commands and information into the computer through input devices such as a keyboard and pointing device, commonly referred to as a mouse, trackball or touch pad. Other input devices may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit through user input and associated interface(s) that are coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A graphics subsystem may also be connected to the system bus . A monitor or other type of display device is also connected to the system bus via an interface, such as output interface , which may in turn communicate with video memory. In addition to a monitor, computers may also include other peripheral output devices such as speakers and a printer, which may be connected through output interface ","The computer may operate in a networked or distributed environment using logical connections to one or more other remote computers, such as remote computer , which may in turn have media capabilities different from device . The remote computer may be a personal computer, a server, a router, a network PC, a peer device or other common network node, or any other remote media consumption or transmission device, and may include any or all of the elements described above relative to the computer . The logical connections depicted in  include a network , such local area network (LAN) or a wide area network (WAN), but may also include other networks\/buses. Such networking environments are commonplace in homes, offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer is connected to the LAN through a network interface or adapter. When used in a WAN networking environment, the computer typically includes a modem or other means for establishing communications over the WAN, such as the Internet. A modem, which may be internal or external, may be connected to the system bus via the user input interface of input , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in a remote memory storage device. It will be appreciated that the network connections shown and described are exemplary and other means of establishing a communications link between the computers may be used.","Exemplary Distributed Computing Frameworks or Architectures","Various distributed computing frameworks have been and are being developed in light of the convergence of personal computing and the Internet. Individuals and business users alike are provided with a seamlessly interoperable and Web-enabled interface for applications and computing devices, making computing activities increasingly Web browser or network-oriented.","For example, MICROSOFT\u00ae's managed code platform, i.e., .NET, includes servers, building-block services, such as Web-based data storage and downloadable device software. Generally speaking, the NET platform provides (1) the ability to make the entire range of computing devices work together and to have user information automatically updated and synchronized on all of them, (2) increased interactive capability for Web pages, enabled by greater use of XML rather than HTML, (3) online services that feature customized access and delivery of products and services to the user from a central starting point for the management of various applications, such as e-mail, for example, or software, such as Office .NET, (4) centralized data storage, which increases efficiency and ease of access to information, as well as synchronization of information among users and devices, (5) the ability to integrate various communications media, such as e-mail, faxes, and telephones, (6) for developers, the ability to create reusable modules, thereby increasing productivity and reducing the number of programming errors and (7) many other cross-platform and language integration features as well.","While some exemplary embodiments herein are described in connection with software residing on a computing device, one or more portions of the invention may also be implemented via an operating system, application programming interface (API) or a \u201cmiddle man\u201d object, a control object, hardware, firmware, intermediate language instructions or objects, etc., such that the methods of the invention may be included in, supported in or accessed via all of the languages and services enabled by managed code, such as .NET code, and in other distributed computing frameworks as well.","Overview of Remote Desktop Protocol and Terminal Server Sessions","The Microsoft Remote Desktop Protocol (RDP) is one example of a protocol that can be used to port a media experience from a host to a remote media consumption device. RDP provides remote display and input capabilities over network connections for Windows-based applications running on a server. RDP is designed to support different types of network topologies and multiple LAN protocols.","On the server, RDP uses its own video driver to render display output by constructing the rendering information into network packets using the protocol and sending them over the network to the client. On the client, RDP receives rendering data and interprets the packets into corresponding graphics device interface API calls. For the input path, client mouse and keyboard events are redirected from the client to the server. On the server, RDP uses its own virtual keyboard and mouse driver to receive the keyboard and mouse events. From a non-limiting feature standpoint, RDP includes encryption, bandwidth reduction features, roaming disconnect, clipboard mapping, print redirection, virtual channels, remote control and network load balancing.","Terminal Server provides an exemplary remote computing environment as an extension of a server, such as Windows NT Server. With merely a thin client, users can experience the server desktop operating system and applications completely off the server. With Terminal Server, users are provided access to Windows-based applications from any of the following types of desktops: (A) low-cost hardware, commonly referred to as Windows-based terminals, which are marketed by third-party hardware vendors, (B) Windows desktop operating systems, such as Windows 95 or Microsoft Windows NT Workstation by running the Terminal Server client as a window within the local desktop environment, and (C) X-based Terminals, UNIX-based desktops as well as Apple Macintosh, MS-DOS and other networked computers (through add-on software).","Terminal Server comprises three main components: the Terminal Server multiuser core, the Remote Desktop Protocol (RDP) and the thin client software.","Terminal Server is the multiuser server core that provides the ability to host multiple, simultaneous client sessions on other devices. Terminal Server is capable of directly hosting compatible multiuser client desktops running on a variety of Windows-based and non-Windows-based hardware. Standard Windows-based applications do not need modification to run on the Terminal Server, and all standard Windows NT-based management infrastructure and technologies can be used to manage the client desktops. In this way, corporations can take advantage of the rich choice of applications and tools offered by the Windows environment.","RDP is the protocol of Terminal Server that allows a thin client to communicate with the Terminal Server over the network. This protocol is based on the International Telecommunications Union (ITU) T.120 protocol, an international, standard multichannel conferencing protocol. RDP is tuned for high-bandwidth enterprise environments and also supports encrypted sessions.","The thin client component is software that presents, or displays, a Windows user interface on a range of desktop hardware including Windows-based terminal devices and personal computers.","An Object Manager of Terminal Server provides that applications and system programs of different sessions do not collide. Every object name created within a session is appended with a unique identifier number associated with the individual session that created it (SessionID). The Terminal Server service is entirely protocol-independent, so it can function using RDP or a third-party add-on protocol such as Citrix's ICA.","RDP is a multichannel capable protocol allowing for separate virtual channels for carrying serial device communication and presentation data from the server, as well as encrypted client mouse and keyboard data. Virtual channels are software extensions that can be used to add functional enhancements to a Terminal Services application. Examples of functional enhancements might include: support for special types of hardware, audio, or other additions to the core functionality provided by the Terminal Services RDP. RDP provides multiplexed management of multiple virtual channels.","A virtual channel application has two parts, a client-side component and a server-side component. The server-side component is an executable program running on the Terminal Server. The client-side component is a DLL that is loaded into memory on the client computer when the Terminal Services client program runs.","Virtual channels can add functional enhancements to a Terminal Services client, independent of the RDP protocol. With virtual channel support, new features can be added without having to update the client or server software, or the RDP protocol.","Several other capabilities are also part of the T.120 standards definition, including, for example, multipoint data delivery, which allows data from an application to be delivered \u201creal-time\u201d to multiple parties. Multicast-enabled delivery allows for reliable delivery services of data transmissions. It increases the performance for the customer while at the same time reducing the load on the network infrastructure. RDP is beneficial for connectivity purposes because it provides an extensible base from which to build more abilities. This is in part because RDP provides up to 64,000 separate channels for data transmission, as well as provisions for multipoint transmission.","RDP is designed to support many different types of Network topologies, such as ISDN, POTS, and many LAN protocols, such as IPX, Netbios, TCP\/IP, and so forth.","The activity involved in sending and receiving data through the RDP stack is essentially the same as the seven-layer OSI (open systems interconnection) model standards for common LAN networking today. Data from an application or service to be transmitted is passed down through the protocol stacks, sectioned, directed to a channel, encrypted, wrapped, framed, packaged onto the network protocol, and finally addressed and sent over the wire to the client.","The return data works the same way in reverse, with the packet being stripped of its address, then unwrapped, decrypted, and so on, until the data is presented to the application for use. Some portions of the protocol stack modifications occur between the 4th and 7th layers, where the data is encrypted, wrapped and framed, directed to a channel, and prioritized.","With RDP, advantageously, the complexities of dealing with the Protocol stack are abstracted away from the application developer. The application developer simply writes the application, and the RDP stack implemented by the Terminal Server and its client connections takes care of the rest.","When starting, Terminal Server boots and loads the core operating system, and the Terminal Server service is started and begins waiting for session connections. Each connection is given a unique session identifier or \u201cSessionID,\u201d to represent an individual session to the Terminal Server and each process created within a session is \u201ctagged\u201d with the associated SessionID to differentiate its namespace from other session namespaces. When a user logs on to a Terminal Services-enabled computer, a session is started for the user, identified by unique session ID. Because each logon to a Terminal Services client receives a separate session ID, the user-experience is similar to being logged on to multiple computers at the same time, e.g., an office computer and a home computer.","The console (Terminal Server keyboard, mouse, and video) session is the first to load and is treated as a special-case client connection and assigned SessionID. The console session starts as a normal system session, with the configured display, mouse, and keyboard drivers loaded.","After creating the console session, the Terminal Server service then calls the Session Manager to create two (by default) idle client sessions awaiting client connections. To create the idle sessions, the Session Manager executes the client server run-time subsystem process, and a new SessionID is assigned to that process.","Unlike the console session, client sessions are configured to load separate drivers for the display, keyboard, and mouse. The new display driver is the Remote Desktop Protocol (RDP) display device driver, and the mouse and keyboard drivers are replaced with the RDP driver. These drivers allow the RDP client session to be both available and interactive, remotely. Finally, Terminal Server also invokes a connection listener thread for the RDP protocol, which listens for RDP client connections on a TCP port. Processes with different SessionIDs are prevented from accessing another session's data.","In an exemplary implementation, the client initiates a connection to the Terminal Server through the TCP port. The Terminal Server RDP listener thread detects the session request and creates a new RDP stack instance to handle the new session request. The listener thread hands over the incoming session to the new RDP stack instance and continues listening on the TCP port for further connection attempts. Each RDP stack is created as the client sessions are connected to handle negotiation of session configuration details.","After user logon, the desktop, or application, if in single application mode, is displayed for the user. When the user selects an application to run, the mouse commands are passed to the Terminal Server, which launches the selected application into a new virtual memory space.","If a user decides to disconnect the session, the processes and all virtual memory space remain and are paged off to the physical disk if physical memory is required for other processes. An additional benefit of RDP is that of being able to change session screen resolutions, depending on what the user requests for the session. For example, if a user had previously connected to a Terminal Server session at 800\u00d7600 resolution and disconnected, and then moved to a different computer that only supported 640\u00d7480 resolution and reconnected to the existing session, the desktop would be redrawn to support the new resolution.","Logoff is typically very simple to implement. Once a user logs off from the session, all processes associated with the SessionID are terminated and any memory allocated to the session is released.","Declaration and Determination of Media Capabilities of a Remote Device","As mentioned, some of today's operating systems, e.g., Windows\u00ae Media Center Edition (MCE), deliver a rich set of remoting features to enable an ecosystem of remote media consumption devices. These devices connect to the host, such as an MCE PC, and display a remoted experience via Terminal Services and RDP or other remoting technologies. The device capabilities determination mechanism of the invention thus enables a remote device to specify the custom set of media capabilities that should be remoted to the device.","As discussed, in order to optimize a host PC media experience for the class of session onto which it is remoted, the capabilities of the session based on the device are declared by the remote device in accordance with the invention. Different classes of sessions are thus provided with different media experiences. The mechanism for declaring and determining device capabilities in accordance with the invention enables configuration of the media experience appropriately for the remote device.",{"@attributes":{"id":"p-0100","num":"0099"},"figref":["FIGS. 3A and 3B","FIG. 3A","FIG. 3B"],"b":["310","300","300","300","310","320","300","310","330","310","340","350","300","310"]},"In exemplary embodiments and illustrated in the flow diagram of , the capabilities determination mechanism works as follows. At , an RDP session is initialized, and at , the host PC opens a virtual channel and monitors the channel at  until a timeout period, e.g., 60 seconds, completes. If the remote client establishes a connection via this virtual channel at  and passes in the capabilities string for the device at , the media center UI is presented to the remote device with the appropriate functionality enabled at . If no valid capabilities string is transferred within the timeout period as determined at , a generic set of device capabilities is assumed at . An exemplary, non-limiting default set is defined in Table I below. In one embodiment, the capabilities string is passed to the host PC via a virtual channel defined by RDP.",{"@attributes":{"id":"p-0102","num":"0101"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"441pt","align":"center"}},"thead":{"row":{"entry":"TABLE I"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary Media Capabilities Properties and Device Settings"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"10"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Not Re-","Generic","Media","Smart","Tablet","Pocket",{}]},{"entry":["Property Name","Token","Description","moted","PC","Device","Display","PC","PC","xBox"]},{"entry":{"@attributes":{"namest":"1","nameend":"10","align":"center","rowsep":"1"}}},{"entry":["AreAdvancedPhotoFeaturesAllowed","PHO","Is photo printing and photo","T","T","F","T","T","?","?"]},{"entry":[{},{},"editing allowed on this client"]},{"entry":["AreMouseMoveEventsNotTrackingMouse","MOU","Are new MouseMove events","F","F","F","F","T","F","F"]},{"entry":[{},{},"generated while the mouse is"]},{"entry":[{},{},"moving? Or is this a \u201cTablet\u201d"]},{"entry":[{},{},"device & a move event is"]},{"entry":[{},{},"generated immediately before a"]},{"entry":[{},{},"select event"]},{"entry":["AreOverscanMarginsNeeded","MAR","Are overscan margins needed","F","F","T","F","F","F","?"]},{"entry":[{},{},"when displaying the UI? (for"]},{"entry":[{},{},"display on TVs)"]},{"entry":["ArePopupsAllowed","POP","Are HTML popups allowed?","T","T","F","T","T","?","F"]},{"entry":["ClientName","NAM","The Name of the current client"]},{"entry":["Is10FootHelpAllowed","H10","Is in-proc help allowed on this","T","T","F","T","T","?","F"]},{"entry":[{},{},"client"]},{"entry":["Is2FootHelpAllowed","H02","Is HTML help allowed on this","T","T","F","T","T","T","F"]},{"entry":[{},{},"client"]},{"entry":["IsAudioAllowed","AUD","Is audio (Music\/FM) allowed on","T","T","T","T","T","T","T"]},{"entry":[{},{},"this client"]},{"entry":["IsAudioNonWMP","AUR","Is audio sent out of band (not","F","F","T","T","F","F","T"]},{"entry":[{},{},"using WMP)"]},{"entry":["IsBlackLetterBoxNeeded","BLB","Is a black letterbox needed for","F","F","T","T","F","F","T"]},{"entry":[{},{},"displaying video?"]},{"entry":["IsCCRenderedByClient","CCC","Is CC data rendered by the","T","F","T","T","F","F","T"]},{"entry":[{},{},"display? Or Media Center?"]},{"entry":["IsCDCopyingAllowed","CPY","Is CD Ripping allowed on this","T","T","F","T","T","?","?"]},{"entry":[{},{},"client"]},{"entry":["IsCDPlaybackAllowed","CDA","Is CD playback allowed on this","T","T","F","T","T","?","?"]},{"entry":[{},{},"client"]},{"entry":["IsDVDPlaybackAllowed","DVD","Is DVD playback allowed on","T","F","F","F","F","F","F"]},{"entry":[{},{},"this client"]},{"entry":["IsFPDAllowed","FPD","Can status events be sent to","T","F","F","F","F","F","F"]},{"entry":[{},{},"the FPD?"]},{"entry":["IsGDIRendererUsed","GDI","Is Media Center rendering using","T","F","F","F","F","F","F"]},{"entry":[{},{},"GDI? Or D3D?"]},{"entry":["IsInputTreatedAsIfFromRemote","REM","Input from the remote control is","F","F","T","F","F","F","?"]},{"entry":[{},{},"being mapped to virtkeys and"]},{"entry":[{},{},"then RDP pipes them to the PC."]},{"entry":[{},{},"If this is true, then the command"]},{"entry":[{},{},"should be treated as if it came"]},{"entry":[{},{},"from the remote and not the"]},{"entry":[{},{},"keyboard."]},{"entry":["IsIntensiveAnimationAllowed","ANI","Is high-bandwidth animation","T","F","F","F","F","F","F"]},{"entry":[{},{},"(i.e., animating page layouts)"]},{"entry":[{},{},"allowed?"]},{"entry":["IsIntensiveRenderingAllowed","REN","Is high-bandwidth rendering (ie.","T","F","F","F","F","F","F"]},{"entry":[{},{},"audio visualizations) allowed on"]},{"entry":[{},{},"this client"]},{"entry":["IsToolbarAllowed","TBA","Can the 2\u2033 toolbar be","T","T","F","T","T","?","?"]},{"entry":[{},{},"displayed?"]},{"entry":["IsToolbarPersisted","TBP","Is the 2\u2033 toolbar always visible?","F","F","F","T","F","F","F"]},{"entry":["IsTrayAppletAllowed","APP","Is the tray applet allowed on","T","T","F","T","T","?","F"]},{"entry":[{},{},"this client"]},{"entry":["IsTVSkinUsed","TVS","Is the TV skin being used on","F","F","T","F","F","F","T"]},{"entry":[{},{},"this client? (for better display on"]},{"entry":[{},{},"TVs)"]},{"entry":["IsVideoAllowed","VID","Is video (TV\/My Videos)","T","F","T","F","F","F","T"]},{"entry":[{},{},"allowed on this client"]},{"entry":["IsWebContentAllowed","WEB","Is loading HTML pages allowed","T","T","T","T","T","?","?"]},{"entry":[{},{},"on this client"]},{"entry":["IsWin32ContentAllowed","W32","Is loading win32 applications","T","T","F","T","T","?","F"]},{"entry":[{},{},"allowed on this client"]},{"entry":["IsWindowModeAllowed","WIN","Can Media Center run","T","T","F","T","T","?","F"]},{"entry":[{},{},"windowed? Or is it restricted to"]},{"entry":[{},{},"full screen?"]},{"entry":{"@attributes":{"namest":"1","nameend":"10","align":"center","rowsep":"1"}}}]}}]}}},"To facilitate creation of a client's capabilities string, in another embodiment, the invention provides a client capabilities token builder (CCTB) tool , as shown with an exemplary UI in . The CCTB tool  is used to create a set of token(s) that communicate device capabilities to the host PC. To create the token(s), one simply selects the relevant device capabilities from a list  and assigns a friendly name to the device, if applicable (\u2018Remote_Media_Device\u2019 is the friendly name in , which is also utilized herein to refer to an exemplary remote media device that may be used in connection with the present invention). The values for the capability token(s) are displayed in a first field . The UTF-8 encoded manifestation of this string is displayed in a second field . In this embodiment, the UTF-8 encoded string is passed to the host PC via a virtual channel to specify device capabilities. It is noted that any format could be used to describe the values of the first field , and so the invention should not be construed to be limited to the use of a UTF-8 encoding scheme.",{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 6","b":["600","605","620","600","600","620","610","600","610","620","600","610","605"]},"Another key aspect of the invention is that it provides an extensible mechanism for declaring media capabilities. While RDP itself has a broadcast mechanism for certain device capabilities, it is not an extensible mechanism, and it is not targeted for the remote media experience. In this regard, while media scenarios between host and remote device have been hardwired in the past, to the extent that a new remote media consumption device necessitates a new class of media property to be set, the invention can be modified to accommodate the new capabilities set. For instance, the tool  can be modified to include additional properties, and the corresponding media capabilities string will be generated and interpreted accordingly. In other words, the string itself is extensible, making for an unlimited number of potential media properties.","Moreover, the invention is dynamic, i.e., if a remote device has an established session with a host PC, and the remote device becomes disconnected from the network for some reason, if in the meantime, a media property has changed, then upon reconnection, the invention dynamically adapts the media capabilities string to the new conditions of the device. Thus, for instance, if after disconnection of a remote device, the remote device is attached to a monitor having greater screen resolution, upon reconnection, the greater screen resolution declared via a media capabilities string according to the invention.","Exemplary Remoting Exceptions for an Exemplary Device","As illustrated by the differences in devices and properties shown in Table I, there are some media features on a host PC that either cannot be remoted to remote media device(s) or are handled in a special way when remoted. The media capabilities determination mechanism(s) of the invention enable such exceptions to exist, and to be automatically and dynamically handled during a remote media experience session.","For a concrete example, a remote device with no keyboard or mouse, called Remote_Media_Device, is considered herein that enables a user to wirelessly remote desktop media experiences to the Remote_Media_Device in a variety of scenarios, e.g., to watch television, listen to music, look at photos, etc. With Remote_Media_Device, there are a number of potential exceptions to a generic, or default, session. Accordingly, to demonstrate the value of the invention, the following description illustrates exemplary, non-limiting exceptions to a generic session for a device called Remote_Media_Device, which are automatically and dynamically handled by the media capabilities declaration mechanism of the invention.","Animated, center-locking start menu design does not work on non-animated Remote_Media_Device sessions. Thus, Remote_Media_Device sessions utilize an unanimated start menu design, where the highlight cursor is moved instead of the menu itself. With respect to window controls and username, the min\/max\/close\/logoff buttons are removed for the Remote_Media_Device remote experience and Remote_Media_Device users cannot utilize fast user switching or control window settings. CD functionality, such as CD copying, is not supported on remoted sessions. Visualizations are not supported on Remote_Media_Device-remoted sessions since visualizations are very bandwidth, processor and memory intensive. The \u2018more info\u2019 button is disabled for photos on Remote_Media_Device-remoted sessions. DVD functionality is not remoted to a Remote_Media_Device either. Thus, the \u201cPlay DVD\u201d menu item should be removed from the start menu for Remote_Media_Device-remoted sessions and DVD-related settings should also be removed.","Alpha-blended assets display incorrectly over video in a Remote_Media_Device display. Thus, custom assets are used for Remote_Media_Device-remoted sessions to avoid the single-pixel alpha problem. Alpha ellipses require a significant amount of custom alpha GDI coding and are not implemented for Remote_Media_Device sessions. Marquee scrolling requires D3D rendering and is disabled on Remote_Media_Device. Remote_Media_Device utilizes the TV skin by default. Also, since certain button names do not fit within the button containers currently, a smaller text size is used to address truncated button labels on Remote_Media_Device-remoted sessions.","The Help and Support Center (HSC) is launched in Remote_Media_Device-remoted sessions, as there is no way to close the HSC without a keyboard\/mouse, and the HSC is not usable on the resolution of most TV screens. Thus, no links to the HSC are displayed on Remote_Media_Device-remoted sessions. Help links are removed during Remote_Media Device-remoted sessions for all first-run\/settings pages. Since no keyboard or mouse is available on a Remote_Media_Device, no pop-ups are displayed.","The Remote_Media_Device client will be set up as a new user on the host machine. The Remote_Media_Device-remoted session will be set to run exclusively in full screen, and by default will run \u201calways on top,\u201d preventing any rogue popups from being displayed over the UI. Furthermore, the Remote_Media_Device account disallows the installation of any ActiveX controls.","The fully animated wait cursor is not shown on Remote_Media_Device-remoted sessions. Instead, a custom version is shown, which is animated at a much lower frame rate and does not rely on a D3D-based animation scheme. Overlays that are displayed on mouse movement should not be shown on Remote_Media_Device-remoted sessions since there is no mouse. For Remote_Media_Device devices, all front panel display (FPD) events are to be sent to a \u201cnull\u201d FPD device to ensure that they are not sent to the host PC's FPD.","Thus, it is clear that there are a myriad of media capabilities properties that could be automatically set by the framework of the invention for declaring media capabilities to the host device. Because the invention provides a framework that is extensible to additional media capabilities, and because the invention engages dynamically upon the start of a remote media experience session, the number of different media device scenarios operating remotely in cooperation with a host PC is limitless. Since the invention operates automatically for a session, the user need only turn a remote device on, and observe the customized media experience delivered to the remote device. For instance, with the above-described Remote_Media_Device, all of the above exceptions will be handled automatically. The Remote_Media_Device will declare its media capabilities string to the host PC, based upon which the host PC will interpret the device's media capabilities, and deliver a remote media experience accordingly.","There are multiple ways of implementing the present invention, e.g., an appropriate API, tool kit, driver code, operating system, control, standalone or downloadable software object, etc. which enables applications and services to use the media capabilities declaration mechanism of the invention. The invention contemplates the use of the invention from the standpoint of an API (or other software object), as well as from a software or hardware object that receives or transmits media capabilities via the mechanism of the invention. Thus, various implementations of the invention described herein may have aspects that are wholly in hardware, partly in hardware and partly in software, as well as in software.","As mentioned above, while exemplary embodiments of the present invention have been described in connection with various computing devices and network architectures, the underlying concepts may be applied to any computing device or system in which it is desirable to remote a media experience. For instance, the algorithm(s) and hardware implementations of the invention may be applied to the operating system of a computing device, provided as a separate object on the device, as part of another object, as a reusable control, as a downloadable object from a server, as a \u201cmiddle man\u201d between a device or object and the network, as a distributed object, as hardware, in memory, a combination of any of the foregoing, etc. While exemplary programming languages, names and examples are chosen herein as representative of various choices, these languages, names and examples are not intended to be limiting. One of ordinary skill in the art will appreciate that there are numerous ways of providing object code and nomenclature that achieves the same, similar or equivalent functionality achieved by the various embodiments of the invention.","As mentioned, the various techniques described herein may be implemented in connection with hardware or software or, where appropriate, with a combination of both. Thus, the methods and apparatus of the present invention, or certain aspects or portions thereof, may take the form of program code (i.e., instructions) embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other machine-readable storage medium, wherein, when the program code is loaded into and executed by a machine, such as a computer, the machine becomes an apparatus for practicing the invention. In the case of program code execution on programmable computers, the computing device generally includes a processor, a storage medium readable by the processor (including volatile and non-volatile memory and\/or storage elements), at least one input device, and at least one output device. One or more programs that may implement or utilize the media capabilities mechanism(s) of the present invention, e.g., through the use of a data processing API, reusable controls, or the like, are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system. However, the program(s) can be implemented in assembly or machine language, if desired. In any case, the language may be a compiled or interpreted language, and combined with hardware implementations.","The methods and apparatus of the present invention may also be practiced via communications embodied in the form of program code that is transmitted over some transmission medium, such as over electrical wiring or cabling, through fiber optics, or via any other form of transmission, wherein, when the program code is received and loaded into and executed by a machine, such as an EPROM, a gate array, a programmable logic device (PLD), a client computer, etc., the machine becomes an apparatus for practicing the invention. When implemented on a general-purpose processor, the program code combines with the processor to provide a unique apparatus that operates to invoke the functionality of the present invention. Additionally, any storage techniques used in connection with the present invention may invariably be a combination of hardware and software.","While the present invention has been described in connection with the preferred embodiments of the various figures, it is to be understood that other similar embodiments may be used or modifications and additions may be made to the described embodiment for performing the same function of the present invention without deviating therefrom. For example, while exemplary network environments of the invention are described in the context of a networked environment, such as a peer to peer or distributed networked environment, one skilled in the art will recognize that the present invention is not limited thereto, and that the methods, as described in the present application may apply to any computing device or environment, such as a gaming console, handheld computer, portable computer, etc., whether wired or wireless, and may be applied to any number of such computing devices connected via a communications network, and interacting across the network. Furthermore, it should be emphasized that a variety of computer platforms, including handheld device operating systems and other application specific operating systems are contemplated, especially as the number of wireless networked devices continues to proliferate.","While exemplary embodiments refer to utilizing the present invention in the context of RDP, the invention is not so limited, but rather any protocol may be implemented to provide a general framework for declaring device media capabilities, prior to delivering a remote media experience to the device, e.g., at the start of a remote computing session. Still further, the present invention may be implemented in or across a plurality of processing chips or devices, and storage may similarly be effected across a plurality of devices. Therefore, the present invention should not be limited to any single embodiment, but rather should be construed in breadth and scope in accordance with the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The systems and methods for declaring media capabilities in accordance with the present invention are further described with reference to the accompanying drawings in which:",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1C"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
