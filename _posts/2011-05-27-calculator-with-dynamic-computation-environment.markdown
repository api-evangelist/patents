---
title: Calculator with dynamic computation environment
abstract: A dynamic computational environment may create, in response to user input, a plurality of mathematical expressions. In the dynamic computational environment, a change made to any one of the plurality of mathematical expressions will be propagated to all of the mathematical expressions, such that each of the plurality of mathematical expressions affected by the change is updated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08892614&OS=08892614&RS=08892614
owner: Texas Instruments Incorporated
number: 08892614
owner_city: Dallas
owner_country: US
publication_date: 20110527
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION OF EMBODIMENTS OF THE INVENTION","OTHER EMBODIMENTS"],"p":["This application claims benefit of U.S. Provisional Patent Application Ser. No. 61\/352,054, filed Jun. 7, 2010, entitled \u201cDynamically Linked Text Environment\u201d which is incorporated herein by reference in its entirety.","This invention generally relates to calculators, and in particular to sophisticated calculators that include two or more applications.","Handheld calculators are well known in the art and have been in use for many years. Although many handheld calculators are limited to simple algebraic computations such as addition, subtraction, multiplication, and division, there are several commercially available sophisticated handheld calculators that are able to perform higher level mathematical computations. For example, some handheld calculators allow a user to input a plurality of quadratic equations into the handheld calculator. The handheld calculator may then graph each of the equations on a coordinate plane and determine the intersection of the lines or curves created by the equations. The handheld calculator may also solve the quadratic equations algebraically. The same handheld calculator can also allow a user to enter a higher order and\/or multi-variable equation into the handheld calculator and provide values for some of the variables. The handheld calculator can then solve for the remaining variables. Handheld calculators that perform these functions are manufactured by numerous companies including Texas Instruments.","Embodiments of the invention provide a dynamic computation environment in a computing system, such as a handheld calculator. A dynamic computational environment may create, in response to user input, a plurality of mathematical expressions. In the dynamic computational environment, a change made to any one of the plurality of mathematical expressions will be propagated to all of the mathematical expressions, such that each of the plurality of mathematical expressions affected by the change is updated","Specific embodiments of the invention will now be described in detail with reference to the accompanying figures. Like elements in the various figures are denoted by like reference numerals for consistency. In the following detailed description of embodiments of the invention, numerous specific details are set forth in order to provide a more thorough understanding of the invention. However, it will be apparent to one of ordinary skills in the art that the invention may be practiced without these specific details. In other instances, well-known features have not been described in detail to avoid unnecessarily complicating the description.","Embodiments of the present invention are discussed below with respect to an embodiment on a handheld calculator. It should be noted, however, that embodiments of the present invention may be useful for other types of electronic devices, e.g., laptop computers, desktop computers, handheld computing devices. Examples of other types of handheld computing devices in which embodiments of the present invention may be useful include scientific calculators, advanced calculators able to upload and run software applications, handheld-sized limited-purpose computer devices, handheld-sized educational computer devices, handheld-sized portable computer devices, portable computer devices, personal digital assistants (PDAs), palmtop computers, cellular or mobile telephones, and any combination thereof.","In one embodiment of the invention, a plurality of mathematical expressions is created in a dynamic computational environment in response to user input. In a dynamic computational environment, a change made to any one of the plurality of mathematical expressions will be propagated to all of the mathematical expressions, such that each of the plurality of mathematical expressions affected by the change is updated. Thus, the dynamic computing environment allows a variable to be changed in a graphing environment and then propagated back to an algebraic environment that defines the expressions being graphed, for example.","Handheld calculators have progressed to be very sophisticated processing systems. A handheld calculator, such as the TI-Nspire\u2122 from Texas Instruments, is capable of operating on one or more documents. In one version of such a calculator, each document may be divided into at least one, and up to thirty, problems. Each problem contains at least one, and up to fifty, pages. Each page can be divided into as many as four work areas. Each work area can contain any of the TI-Nspire\u2122 applications: Calculator, Graph, Geometry, Lists & Spreadsheet, Data & Statistics and Notes.","A teacher may use an interactive instruction system, e.g., a handheld calculator connected to a computer system and a display device such as a digital projector and screen or interactive whiteboard, in a classroom to replicate the display of the handheld calculator in real time in a larger format on the display device for viewing by students, i.e., for presenting digital instruction to the students. More specifically, the teacher can perform operations using the handheld calculator and allow the students to view the results of the operations in real-time in the larger format provided by the display device. A teacher may also record in video from a sequence of operations performed on the handheld calculator, e.g., a lesson, in a file and play the recorded video to present it on the display device. Additional description of the operation of the TI-nspire calculator is provided in the \u201cTI-nspire Teacher Software Guidebook\u201d for software version 2.1, July 2010, which is incorporated by reference herein.","In one embodiment of the invention, an application may be selected from a Home Menu by clicking one of the following application icons: a static application called Calculator and dynamic applications such as Graph; Geometry; Lists & Spreadsheet; Data & Statistics; Notes\u2014this is a text editor with math boxes that provides a dynamic computing environment. A dynamic computing environment may also be inserted into other dynamic applications, for example: Graphs or Geometry. In this embodiment, up to four applications may be open on each page. When a user creates a new document it contains space to add one application. If the user wishes to add more than one application to a page, the user can change the layout to accommodate as many as four applications.","Variable linking can help the user build and explore mathematical models. Values and functions created or defined in one application can interact with other applications within the same problem to share data. When using linked items, values can be linked between applications on one page or between different pages of the same problem. All applications are linked to the same data. If the linked value is changed in the original application, the change is reflected in all linked usages. Each application allows the user to define a value or function as a variable. Defining a variable is the first step in linking values in this dynamic computing environment.","A math box is simply a term that is used to describe an area in the display screen that holds a math expression that has in input expression, an output expression and a separator symbol. The input and output expressions may both include numbers and\/or symbols. The symbol separator may be any of the typical math operations, such as: =, =>, <=, or even \u201cNONE\u201d. For example: a+b=14. If the separator symbol is \u201cNONE\u201d, then three spaces, for example, are displayed between the input expression and the output expression; for example: a+b 14.","A typical math problem may include a few or a large number of math boxes. The symbols may be stored in a symbol table and subscribed to by all of the math boxes in the problem. Each time the symbol is updated by any one of the math boxes in the problem, all occurrences of the symbol in the problem will be updated, as will be described in more detail below.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 1","FIG. 1","FIG. 1"],"b":["100","100","104","102","106","104","100","104","102","100","102","106","104","106","106","104"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2","b":["100","100","201","202","208","208","100","204","206","206","106","102","201","100"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 3","FIG. 1"],"b":["302","304","306","302","302"]},"In the example of , widget  is the data producer that is generating values. Widget  is the data consumer that is receiving the values generated by data producer . However, widget  may also be a data consumer and widget  may also be a data producer. Widgets  and  are representative of any of several applications that may be executed on the calculator of , such as a calculator, a graphing engine, a geometry engine, a spreadsheet, a list tool, a data\/statistic analyzer, a text editor, etc.","Infrastructure code  is code that provides underlying services needed by the system. The infrastructure code controls data flow produced by the various applications (widgets) and collects a data set into one or more lists. The infrastructure responds to publish functions executed by a widget. For example, a widget may call for a variable store (VarStore) or an evaluation of an expression (EvalExpression) which results in produced data values being published to symbol table  in math server function . Other servers , such as a text editor, spreadsheet, etc., may also interact with infrastructure .","When a producer widget changes a data value, infrastructure code  is used to notify all subscribed widgets so they can handle the data change. When a consumer is notified that a subscribed symbol has changed, it has the option to not accept the change. Not accepting a change is called a Veto.","Values that can be linked by reference are first stored in the symbol table. All widgets displaying a value in the symbol table normally display the same current value unless the widget is showing history and not the current value. A widget can be both a data producer and a data consumer.","Referring again to the example in , when a new problem is started by a user of calculator , the infrastructure may execute a call to CreateLinkManagerinstance, which creates an instance  of the link manager. There is a separate link manager for each problem set that is being manipulated by the calculator. A call  to LM_RegisterServer associates a symbol table  with link manager instance . The names and exact operation of the various function calls used in this embodiment should be considered only as examples. Other embodiments may use different types of calls to implement another embodiment of the invention.","Data producer  may execute the following calls: LM_RegisterWidget  to register with link manager  and let it know data producer widget  is participating in linking; VarStore or EvalExpression  to put a value into the symbol table that can be linked; and LM_RefNotify  to notify the link manager that a particular symbol is being used by data producer . If the data producer knows that the particular symbol did not previously exist, then this call is not needed.","Data consumer  may then execute the following calls: LM_RegisterWidget  to register with the link manager  and let it know data consumer widget  is participating in linking; VarRecall  to get an initial value of a symbol and to validate that it can display\/use the symbol; LM_Value_Subscribe  to subscribe  to the symbol; LM_Value_SetupCallback  which sets up a callback link that will be called when subscribed symbols for consumer  change; LM_Value_SetupCallbackForDependencies  which sets up a callback link that will be called when a dependency of a subscribed symbol changes.","At this point, the link is set up. From now on, every time data producer  calls LM_Ref_Notify  to indicate to the link manager that a symbol has been changed, data consumer's  callback link will be called. For example, data producer  may call VarStore or EvalExpression  to change a symbol value in symbol table . Data producer  then calls LM_Ref_Notify  to start notification of all subscribed widgets. Data consumer  is called  using the previously established callback link. In response to the callback notification, data consumer  calls VarRecall  to get the updated symbol value from symbol table . Note that while consumer widget  is illustrated, there may be more than one consumer and\/or producer that is subscribed to a given symbol value.","Infrastructure code  is responsible for the following: instantiate a link manager for each problem; associate a symbol table with the link manager; change active link manager when problem space changes; and perform serialization of the current link manager when a document saved. Data producers are responsible for the following: generate values to be consumed by others; notify others when it is time to consume the values; handle returning to a previous state if it's notify is vetoed. Data consumers are responsible for the following: consuming values generated by a producer; ensuring that values displayed are the same as values in the symbol table; validating values generated by producer; and vetoing values that it cannot accept.","All widgets that participate in linking should register with the link manager  first. A participating widget should always notify the link manager after changing the symbol table via Varstore or EvalExpression function calls. A widget should subscribe to any symbol table symbol for which the widget displays the value in its user interface (UI). The symbol table is global to all widgets and all views should show the same value. A widget may change multiple symbols and then call Notify once. If notification comes back VETOED, the publisher revises its UI to reflect the current value of the symbol, i.e., the symbol will be returned to its original value.","For example: two widgets are showing variable X. Both widgets are subscribed to changes to X. A data collection widget from a probe is generating TIMELIST and TEMPLIST but not displaying the values of the lists. This widget may not have to subscribe to the symbols.","A data consumer widget should get a symbol's initial value and update its user interface (UI) preferably before subscribing. If the initial value is not valid for that consumer widget, the user should be notified and the widget should not subscribe to the symbol. When a consumer widget receives notification (i.e., its notification callback is called), it should perform the following checks for valid values: Range\/Domain\u2014value out of range or domain for consumer; Type\u2014value type not valid for consumer, for example, a user changes List X to variable X; Existence\u2014a user deletes a symbol, but the consumer widget needs it to exist. If the symbol is valid then it updates itself. If the symbol is not valid for this widget, the widget can VETO the notification by returning a VETO function value for the callback. If the consumer modifies the symbol table during its callback, it calls the Notify function to alert the link manger.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIGS. 4A-4G","b":["104","100","100","402","403","403","402"]},"In , a math box  with a mathematical expression has been created in response to user input via keyboard  of the user interface in the Notes widget. In this example, a user typed in the expression x:=a+b in window . The math box has not been evaluated. In , the user has performed math box evaluation action, for example, by hitting the ENTER key. Since \u2018a\u2019 and \u2018b\u2019 are not defined, the results of the evaluation are displayed as \u201ca+b\u201d in window . However, the Notes widget is registered and symbols \u201cx\u201d, \u201ca\u201d and \u201cb\u201d are all subscribed to in a symbol table, as discussed above with respect to .","Each math box in Notes is both a \u201cdata producer\u201d and \u201cdata consumer\u201d. Calculator is just a \u201cdata producer\u201d. At this point the math box has registered with the link manager (LM_RegisterWidget ) and set up its callback functions (LM_Ref_SetupCallback ). These functions will be called by the link manager  when a variable of interest changes. Calculator has also registered with the link manager (LM_RegisterWidget ).","When the user evaluates the math box, the math box will be parsed, looking for variables to which it should subscribe. In this example, the math box will subscribe (LM_Ref_Subscribe ) to variables \u201cx\u201d, \u201ca\u201d and \u201cb\u201d. Next, the math box will call a math server  API to evaluate the contents of the math box. The math server API will store \u201cx\u201d (VarStore ) into the symbol table. The math box will then notify the link manager (LM_Ref_Notify ) that it should send notifications (WidgetsHandler ) to any \u201cconsumers\u201d interested in changes. NOTE: In this case the link manager will not send out any notifications even though the math box is interested in changes to \u201cx\u201d. The link manager knows that the math box was the \u201cproducer\u201d of this change. The math box will then display the results returned from the call to the math server , in this case \u201ca+b.\u201d","In , a value of 2 is assigned to the variable \u201ca\u201d in Calculator window . The Calculator widget publishes this value for symbol \u201ca\u201d as discussed above with respect to . When the user hits ENTER in Calculator, the math box in Notes will get re-evaluated in a dynamic manner since the value of \u201ca\u201d has changed, as illustrated in .","When the user hits ENTER in the Calculator, Calculator will call a math server  API to evaluate what the user has typed in. In this case the math server API will store \u201ca\u201d (VarStore ) into the symbol table. Calculator will then notify the link manager (LM_Ref_Notify ) that it should send notifications (WidgetsHandler ) to any \u201cConsumers\u201d interested in changes. In this case, the link manager  will call the math box notification handler (WidgetsHandler ) indicating that \u201ca\u201d has changed. The math box will then re-evaluate itself and update its output. The re-evaluation of the math box goes through the same sequence as described above.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 4C","FIG. 4D"],"b":["410","411","102","411","411"]},"In , a value of 5 is assigned to the variable \u201cb\u201d in Calculator window . The Calculator widget publishes this value for symbol \u201cb\u201d as discussed above with respect to . When the user hits ENTER in Calculator, the math box  and text box  in Notes will get re-evaluated in a dynamic manner since the value of \u201cb\u201d has changed, as illustrated in .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 4G","b":["403","404","411","402"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 5","b":["500","500","500"]},"The computer system  includes a processing unit  equipped with one or more input devices  (e.g., a mouse, a keyboard, or the like), and one or more output devices, such as a display , a printer , or the like. In some embodiments of the invention, the display  may be touch screen, thus allowing the display  to also function as an input device. The processing unit  may be, for example, a desktop computer, a workstation, a laptop computer, a dedicated unit customized for a particular application, or the like. The display may be any suitable visual display unit such as, for example, a computer monitor, an LED, LCD, or plasma display, a television, a high definition television, an interactive white board, or a combination thereof.","The processing unit  includes a central processing unit (CPU) , memory , a mass storage device , a video adapter , and an I\/O interface  connected to a bus . The bus  may be one or more of any type of several bus architectures including a memory bus or memory controller, a peripheral bus, video bus, or the like. The CPU  may be any type of electronic data processor. For example, the CPU  may be a processor from Intel Corp., a processor from Advanced Micro Devices, Inc., a Reduced Instruction Set Computer (RISC), an Application-Specific Integrated Circuit (ASIC), or the like. The memory  may be any type of system memory such as static random access memory (SRAM), dynamic random access memory (DRAM), synchronous DRAM (SDRAM), read-only memory (ROM), a combination thereof, or the like. Further, the memory  may include ROM for use at boot-up, and DRAM for data storage for use while executing programs.","The mass storage device  (e.g., a computer readable medium) may comprise any type of storage device configured to store data, programs, and other information and to make the data, programs, and other information accessible via the bus . In one or more embodiments of the invention, the mass storage device  stores the dynamic computation environment software to be executed by the CPU . The mass storage device  may be, for example, one or more of a hard disk drive, a magnetic disk drive, an optical disk drive, or the like. The dynamic computation environment software may be initially stored in a computer-readable medium such as a compact disc (CD), a diskette, a tape, a file, memory, or any other computer readable storage device and loaded and executed by the CPU . In some cases, the dynamic computation environment software may also be sold in a computer program product, which includes the computer-readable medium and packaging materials for the computer-readable medium. In some cases, the dynamic computation environment software may be distributed to the computer system  via removable computer readable media (e.g., floppy disk, optical disk, flash memory, USB key), via a transmission path from computer readable media on another computer system (e.g., a server), etc.","The video adapter  and the I\/O interface  provide interfaces to couple external input and output devices to the processing unit . As illustrated in , examples of input and output devices include the display  and projector  coupled to the video adapter  and the mouse\/keyboard  and the printer  coupled to the I\/O interface .","The processing unit  also includes a network interface . The network interface  allows the processing unit  to communicate with remote units via a network (not shown). In one or more embodiments of the invention, the network interface  allows the computer system  to communicate via a network to the handheld calculators. The network interface  may provide an interface for a wired link, such as an Ethernet cable or the like, or a wireless link.","The computer system  may also include other components not specifically shown. For example, the computer system  may include power supplies, cables, a motherboard, removable storage media, cases, and the like.","Presentation software on the computer system  may include functionality to receive a display stream from a handheld calculator and display screen images provided on the display device of the computer system  along with a user interface for controlling the presentation of the screen images. In one or more embodiments of the invention, the presentation software includes functionality to allow a user to select one of the handheld calculators to provide a display stream for presentation. Further, in some embodiments of the invention, two or more of the handheld calculators may be selected to provide display streams for simultaneous presentation. The display stream may be stored in the format received and\/or in any other suitable format, e.g., audio visual interleave (avi) format. In some embodiments of the invention, the entire display stream is stored for the duration of the presentation session. In some embodiments of the invention, the amount of the display stream stored is less than the entire display stream. For example, a buffer may be used to store a portion of the display stream as it is received such that when the buffer becomes full, the oldest portion of the stored display stream is eliminated to make room for newer portions. The size of this buffer may be fixed or may be set by user input.","In some embodiments of the invention, the presentation software also includes functionality to display key presses and\/or touchpad actions corresponding to the screen images according to key press indicators and\/or touchpad indicators received in the display stream. The display of the key presses and\/or touchpad actions may be a key press\/touchpad action history and\/or by highlighting keys and\/or a touchpad on a calculator skin displayed in conjunction with the screen images.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 6","b":["100","500","600"]},"In order to propagate the changes, a set of links is created  between each of the plurality of mathematical expressions to form a dynamic computational environment within the calculator, as was explained in more detail with respect to .","In response to user input to the computing system, a change to one of the plurality of mathematical expressions is received . The user input may be done by the user using a pointing device, such as touchpad  illustrated in  or mouse  illustrated in , for example. As the user selects a mathematical expression in an mbox, control software executed on the device may display a visual cue, such as highlighting or shading, to indicate that a particular variable is being modified. Other embodiments may use other visual cues, such as highlighting a selected mbox, changing font and\/or color of the selected mathematical expressions, etc.","The received change is propagated  via the set of links to update each of the plurality of mathematical expressions affected by the change. This dynamic computing environment may provide dynamic linking between an algebraic environment and a graphic environment on the system, for example. The graphic environment may include graphing capability, geometry presentation, data and statistic manipulation, etc. The dynamic computing environment may provide dynamic linking between a programming environment and the graphic environment, for example. Thus, the dynamic computing environment allows a variable to be changed in a graphing environment and then propagated back to an algebraic environment that defines the expressions being graphed, for example.","The mathematical expressions may be displayed  on a user interface, as described in more detail with regard to .","While the invention has been described with respect to a limited number of embodiments, those skilled in the art, having benefit of this disclosure, will appreciate that other embodiments can be devised which do not depart from the scope of the invention as disclosed herein.","For example, other embodiments may provide only a single application or may provide applications other than those described herein that may be coupled into a dynamic computation environment.","While math boxes holding equations were described herein, other embodiments of a mathematical expression may be a graph, a program, a spread sheet, etc.","A publish and subscribe technique was described herein for providing the dynamic computational environment. Other embodiments may use other techniques for propagation of symbol updates to other mathematical expressions, such as message passing, polling, etc.","The techniques described in this disclosure may be implemented in hardware, software, firmware, or any combination thereof. If implemented in software, the software may be executed in one or more processors, such as a microprocessor, application specific integrated circuit (ASIC), field programmable gate array (FPGA), or digital signal processor (DSP). The software that executes the techniques may be initially stored in a computer-readable medium such as compact disc (CD), a diskette, a tape, a file, memory, or any other computer readable storage device and loaded and executed in the processor. In some cases, the software may also be sold in a computer program product, which includes the computer-readable medium and packaging materials for the computer-readable medium. In some cases, the software instructions may be distributed via removable computer readable media (e.g., floppy disk, optical disk, flash memory, USB key), via a transmission path from computer readable media on another digital system, etc.","Certain terms are used throughout the following description and the claims to refer to particular system components. As one skilled in the art will appreciate, components of computer and handheld calculator systems may be referred to by different names and\/or may be combined in ways not shown herein without departing from the described functionality. This document does not intend to distinguish between components that differ in name but not function. In the following discussion and in the claims, the terms \u201cincluding\u201d and \u201ccomprising\u201d are used in an open-ended fashion, and thus should be interpreted to mean \u201cincluding, but not limited to . . . \u201d Also, the term \u201ccouple\u201d and derivatives thereof are intended to mean an indirect, direct, optical, and\/or wireless connection. Thus, if a first device couples to a second device, that connection may be through a direct connection, through an indirect connection via other devices and connections, through an optical connection, and\/or through a wireless connection.","Although method steps may be presented and described herein in a sequential fashion, one or more of the steps shown and described may be omitted, repeated, performed concurrently, and\/or performed in a different order than the order shown in the figures and\/or described herein. Accordingly, embodiments of the invention should not be considered limited to the specific ordering of steps shown in the figures and\/or described herein."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Particular embodiments in accordance with the invention will now be described, by way of example, and with reference to the accompanying drawings:",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIGS. 4A-4G","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
