---
title: Message-based software system
abstract: The present invention relates to logic systems which use a message-based API, and in particular to telecommunication systems. The present invention aims to overcome drawbacks in the way in which data is sent between, for example, a gatekeeper unit and a service application running on a service platform. By providing a formatter or formatter units on the gatekeeper units, incoming messages may be pre-processed thereby reducing the bandwidth requirements for data transfer. Each formatter unit may be specific to a service application, and ensures that data arrives at the service platform in the appropriate format.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06951023&OS=06951023&RS=06951023
owner: Hewlett-Packard Development Company, L.P.
number: 06951023
owner_city: Houston
owner_country: US
publication_date: 20011029
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["This invention generally relates to systems which use a message-based API, and in particular to telecommunication systems, for example, such as systems used in Internet Protocol networks when transmitting voice (voice IP).","As illustrated in , a typical gatekeeper and service system consists of a gatekeeper unit  and a service platform  connected together via a suitable interface . The main functions of these two elements are:\n\n","The gatekeeper unit  and service platform  communicate together by exchanging messages. These messages are transferred via an interface , which is an intermediate unit which typically includes an Application Programming Interface (API), i.e. a set of libraries containing specific tools. Such an API is typically a message-based API, which is a message-based set of libraries. A message-based API uses a communication framework and is made up of a set of messages conveyed over this framework.","In known telecommunication systems, the gatekeeper unit  receives messages from Internet protocol end-points (for example IP phones or Personal computers) through a series of connections . The received messages each consist of a series of fields arranged according to a specific format. This format is typically defined by, for example, the ASN.1 standard. Incoming ASN.1 messages are generally in an encoded form according to the PER (Pact Encoding Rules) standard. The incoming messages must then be decoded by the gatekeeper unit, which requires powerful decoding resources in the gatekeeper unit.","The gatekeeper unit  decodes each incoming message and determines which of the service units , ,  is the destination unit that requires the data contained in the received message. Typically the data required by different service units differs from one service unit to another. Furthermore, the data is only accepted by a given service unit , , , if the data is in the specific format of the unit. For example, unit  may require a C data structure whereas unit  may require a XML data structure.","In the known art, the gatekeeper unit  sends the whole received message to the service platform , which then carries out filtering and formatting of the message upstream of the service units ,  and .","In order to allow the entire ASN.1 messages to be transferred between gatekeeper  and service platform , it is necessary to re-encode them using the PER standard in the gatekeeper unit  upstream of the API . For such complex messages, such re-encoding reduces the transfer rate of the API . After the transit through the API  the PER-encoded message is once again decoded in the service platform .","One aim of the present invention is to reduce the heavy workload in the known telecommunication system, and, in particular, to reduce the workload due to decoding\/encoding, and to improve performance. This is achieved in a number of ways including minimizing the number of hops, or translation steps, between the stack and the application. Additionally, performance is also increased by minimizing the amount of data exchanged between the stack and the application and hence reducing the associated encoding and decoding overheads. Heterogeneity management is not considered since generally both the stack and the application are provided by a single vendor.","Accordingly, the present invention proposes a system and a method for a system using a message-based set of libraries which substantially reduces the resources required for conveying the messages so as to improve overall performance and efficiency.","A system according to the invention is a system including a software component comprising an input for receiving messages from other systems and an output for sending messages to a telecommunication service application, wherein the output comprises a message-based set of libraries capable of transmitting messages to the application, and further wherein the software component includes a formatter unit for processing received messages prior to transmission to the application via the message-based set of libraries.","A method according to the invention is a method for execution in a gatekeeper and telecommunication system which includes a gatekeeper unit, the method comprising: receiving messages from other systems; sending received messages to a telecommunications service application via a message-based set of libraries; processing the received messages, prior to sending them, to ensure that sent messages are in an appropriate format for the telecommunications service application.","A further method according to the present invention is a method for execution in a gatekeeper and service telecommunication system including a gatekeeper unit which has an input for receiving, from an internet protocol network, requests for establishment of communication links, the telecommunication system further including a service platform comprising at least two service units, each capable of deriving, from a message received from the gatekeeper unit, service information relating to a communication link to which said message is associated, the service units accepting messages in respective different message formats, and the system further including means for transferring messages from the gatekeeper unit to the service platform and from the service platform to the gatekeeper unit, wherein the method further comprises the step of formatting messages into said respective message formats of said at least two service units, this formatting step being carried out by at least two formatter units in the gatekeeper unit.","The present invention is intended to be implemented on a tightly couple stack\/application, where communication overhead has low impact on performance. Preferably the stack and the application are executed on the same computer or processor, or, if on separate computers, preferably on the same local area network (LAN).","The telecommunication system illustrated on  (also called telecommunication stack or protocolar stack) consists, similarly to the known stacks, of a gatekeeper unit  and a service platform  which includes service units ,  and . The service units ,  and  can be called \u201cusers\u201d of the stack.","The telecommunications system also includes an intermediate transfer unit or interface  which has the role of transferring messages between the gatekeeper unit  and the service platform . In one embodiment the interface is a message-based Application Programming Interface, which is a message-based set of libraries. Such an API uses a communication framework and is made of a set of messages conveyed over this framework.","As for the known stacks, gatekeeper unit  receives messages in an encoded form through connections  and decodes the received messages into local messages of the gatekeeper unit, in a local language of the gatekeeper unit. The local language may be, for example, the C language.","The gatekeeper unit  of  further includes a series of formatter units , ,  which are each a adapted to process the local messages before sending them through the intermediate transfer unit . Each of the units ,  and  transform local messages into messages of a particular format which comply with the specific requirements of a particular service unit among units ,  and .","After decoding an incoming message and determining which of the service units ,  or  is concerned by the message, the gatekeeper  transmits the decoded local message to the concerned unit or to the concerned units among units ,  and . Units ,  and  format the local messages into the specific formats of service units ,  and  respectively.","When the unit  receives a local representation of the ASN.1 message, which consists of a series of fields, it performs a selection among the fields of the message, and retrieves only the data which is necessary for the corresponding service unit , as will be described in greater detail hereinafter. The unit  only reads the values of the selected fields of the message and generates a filtered message containing the selected values, in the appropriate format required by the service unit .","Hence, the unit  constitutes a filter which produces a simplified or shortened message, which can be transmitted through the interface  using less bandwidth and in a simple format (no heavy PER encoding).","In the present embodiment, the interface  includes an API. More generally, the interface  can easily be built, based on a known API model, for example the so-called \u201cOpencall telecommunication stack\u201d. Before transmitting the filtered message through the API , the unit  converts the retrieved data into the format of the service unit , so that the service platform  receives a message which is ready to be sent to the service unit .","The service units ,  and  may include, for example, C++ sets of instructions, Java applets, or programs in languages which are specific to given programming environments such as applications running on top of a so-called Service Execution Platform (SEP) developed by the applicant.","Different types of applications understand different data formats. For example, a C application handles C-structures, a Java applet handles XML structures, a SEP platform may use either ASN.1 standard or another known proprietary format known as \u201cData Description Language\u201d (DDL).","The gatekeeper unit  of the present embodiment can be replaced by any software component exporting a message-based application to some applications, for example any telecommunication software component for authorising a communication link to be established.","By having its own formatter units, the gatekeeper unit  makes the service platform  and the interface  independent from the gatekeeper unit. In other words, the service platform  and the interface  can be adopted with any such software component having the formatting units , , . The platform  does not have to perform any message re-formatting work that would be specific to a given software component  because message format is the natural format understood by the concerned service unit.","The software component  is also independent from the service units , ,  and from the message formats that the service units , ,  can understand. The gatekeeper unit does not a-priori know about the service units and is advantageously able to cope with the requirements of any service unit, i.e. to format each message in all the possible formats, each format corresponding to a specific formatter unit. The software component  is independent from any limitation of service units regarding data format.","In a preferred embodiment, it is particularly advantageous that the formatter units ,  and  are libraries, that the software component  links to at run-time.","The formatter units , ,  advantageously use an Application and Programming Interface including means for accessing the desired data of the message in the message representation which is local to gatekeeper unit .","In the above-described embodiment, the formatter units ,  and , perform both a filtering and a conversion of the local messages of gatekeeper unit  into languages which are specific to the concerned service units , , , respectively. In alternative embodiments it is also possible that the formatter units realise only translations, or only filtering.","Hereafter are given two examples of formatter units that each perform both filtering and translation. The formatter unit according to Example 1 formats data which are then forwarded to a billing unit. The formatter unit according to Example 2 formats data which are then forwarded to a call diversion unit.","A billing service is a service which derives billing information associated with a communication link, on the basis of messages transmitted to this service.","A billing service typically deals with connection establishment and hang-up, in order to compute the duration of a call. In a simple model (for example, fixed pricing) a billing service simply needs the identity of the caller to set up customer's bill. For illustrative purposes, consider that the billing service processes admission (ARQ) and disengage (DRQ) messages complying with the H323 standard.","The ASN.1 structure of an ARQ message is the following:",{"@attributes":{"id":"p-0038","num":"0039"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"AmissionRequest ::= "},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"requestSeqNum","RequestSeqNum,"]},{"entry":[{},"callType","CallType,"]},{"entry":[{},"callModel","CallModel ,"]},{"entry":[{},"endpointIdentifier","EndpointIdentifier,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"destinationInfo",{"b":"SEQUENCE"},"OF","AliasAddress",{"b":"OPTIONAL"}]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"destCallSignalAddress","TransportAddress",{"b":"OPTIONAL"}]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"destExtraCallInfo",{"b":["SEQUENCE OF ","OPTIONAL"]}]},{"entry":[{},"srcInfo",{"b":"SEQUENCE OF "}]},{"entry":[{},"srcCallSignalAddress","TransportAddress ,"]},{"entry":[{},"bandWidth","BandWidth,"]},{"entry":[{},"callReferenceValue","CallReferenceValue,"]},{"entry":[{},"nonStandardData","NonStandardParameter ,"]},{"entry":[{},"callServices","QseriesOptions ,"]},{"entry":[{},"conferenceID","ConferenceIdentifier,"]},{"entry":[{},"activeMC","BOOLEAN,"]},{"entry":[{},"answerCall","BOOLEAN,"]},{"entry":[{},"...,"]},{"entry":[{},"canMapAlias","BOOLEAN,"]},{"entry":[{},"callIdentifier","CallIdentifier,"]},{"entry":[{},"srcAlternatives",{"b":["SEQUENCE OF ","OPTIONAL"]}]},{"entry":[{},"destAlternatives",{"b":["SEQUENCE OF ","OPTIONAL"]}]},{"entry":[{},"gatekeeperIdentifier","GatekeeperIdentifier ,"]},{"entry":[{},"tokens",{"b":["SEQUENCE OF ","OPTIONAL"]}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"cryptoTokens",{"b":"SEQUENCE"},{"b":"OF"},"CryptoH323Token"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{"b":"OPTIONAL"}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"integrityCheckValue","ICV ,"]},{"entry":[{},"transportQOS","TransportQOS ,"]},{"entry":[{},"willSupplyUUIEs","BOOLEAN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The identity of the caller can be found in the EndpointIdentifier field (128 character string). Therefore the ARQ message that the H323 gatekeeper unit  forwards to the billing service unit will hold this single field as a result of a filter function realised by the formatter unit.","A billing service running on an SEP platform of the OpenCall type uses DDL (Data Description Language) for formatting messages. This can be considered as a sub-set of C data structures, so that the representation of the ARQ message will be:",{"@attributes":{"id":"p-0041","num":"0042"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{"b":"struct "}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"u":"int"},"\/\/ The actual size of the string"]},{"entry":[{},{"u":"char"},"\/\/ The content of the string"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":{"b":"struct "}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{"b":"struct "}]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The formatter unit which produces such an ARQ message can build messages directly in DDL.","Another type of billing service may be implemented as an applet running in a Java Virtual Machine and using the XML standard for formatting data. The representation of the ARQ message would be in such case:\n\n","The considered formatter unit can build messages handling XML data through any existing XML engine available as a C library.","As far as DRQ messages are concerned, they are only used as triggers, i.e. the service does not need to know the contents of any field thereof. Therefore, DRQ messages are forwarded by the gatekeeper units  as empty messages without representation.","Another service such as a call diversion service may be running at the same time as the billing service.","A call diversion service is a service which, on the basis of a message transmitted thereto, derives information about an endpoint with which a communication link should be established, the endpoint being different from that initially designated in an original link designation. In other words, such a service looks at the called endpoint and forwards the call to another endpoint if the original one is registered for diversion.","Such a service needs the identity of the called endpoint, which can be found from the destinationInfo field in an incoming ARQ message. Therefore, the structure of a DDL message to be directed to a call diversion service unit is quite different from the structure of a message sent to a billing service unit since it only contains the set of alias addresses of the called endpoint.","It is thus understood that the billing and the call diversion services use two distinct formatters that construct two different messages, each including a specific part of the same incoming ARQ message.","When many service units share the same data format (this applies for instance to OpenCall SEP services that all handle DDL messages), the generation of the formatter units can be automated as will now be described.","A formatter unit generator is provided to the user in the form of a graphical tool, allowing the selection of the fields and sub-fields each service unit needs in each message. The user also sets constraints on ASN.1 \u201csequence-of\u201d types (arrays of items). Sequence-of may be unbound, or upper bound may be high, and a suitable upper bound limit is definably.","The service creation environment therefore has the means to automatically generate both the data types required for developing the service and the formatter that converts messages from the gatekeeper into those data types and vice-versa (typically DDL).","Many service units may also share the same formatter unit. For instance, a default formatter exporting a reasonable DDL subset of the H323 message-set, could apply to most of the service units running on top of the OpenCall SEP. Other services with specific requirements should use their own formatter.","A formatter unit typically provides an encode\/decode interface. It performs the encoding operation before forwarding a message to the service. The formatter unit also processes messages received from the service unit through the decoding operation.","As already described, the formatter unit advantageously makes use of an API to access the local representation (LR) of messages within the gatekeeper unit, i.e. to read some fields of a message which is in a representation used in the gatekeeper. This API, hereafter referred to as a local representation API, performs 2 main operations:\n\n","The formatter unit can both format messages directed to the service, and parse messages received from the service. Formatting extracts and presents data from the local representation of a request message so that it can be processed by the service. Parsing extracts data from a reply message and sets this in the local representation of this reply.","In addition the Local Representation API should provide operators for determining information about optional fields, length of arrays, the selected alternative in choices, etc.","It should be understood that, although the herein described embodiments relate to a gatekeeper system, the invention applies to any software component which exchanges messages with telecommunication service applications and which exports a message based API to some a-priori unknown applications.","It should also be understood that the different elements described above (service units , , , service platform , interface , gatekeeper unit , formatter units , , ) can be physically implemented on one or more hardware platforms, it being understood that the hardware implementation of the system may be de-correlated from the logical implementation."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"p":["Further features, goals and advantages of the invention will appear to those skilled in the art through the following description, made with reference to the appended figures, in which:",{"@attributes":{"id":"p-0016","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0018"},"figref":"FIG. 2"}]},"DETDESC":[{},{}],"heading":["EXAMPLE 1","EXAMPLE 2"]}
