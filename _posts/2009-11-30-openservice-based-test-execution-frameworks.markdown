---
title: Open-service based test execution frameworks
abstract: An open-service based test execution framework that is based on disconnected architecture, with agent-initiated “REST” connectivity. Further contemplated herein are systems and methods for “unified resource store access” test management, distribution and execution.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08386207&OS=08386207&RS=08386207
owner: International Business Machines Corporation
number: 08386207
owner_city: Armonk
owner_country: US
publication_date: 20091130
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["Generally, conventional test execution frameworks in a distributed environment include a central controller and repository that manages the tests, agents that can execute this test, and a live connection from the controller to each of the agents. Usually, the controller controls which agent or agents will run the tests, and then deploys the tests to the selected agent. As such, the agents normally require code from the controller to be able to execute tests and report the results back.","Several drawbacks have been noted in conventional arrangements. First, an agent generally needs to open up an appropriate port to permit controller access to the agent. In so doing, the agent opens an unsecured gateway to a test lab, inviting possible breaches by unauthorized parties. Further, a persistent connection is usually needed through such an open port, thus increasing the likelihood of an unauthorized breach as a function of the time involved.","Typically, an agent will also require logging libraries to be provided in order to implement a custom agent, whereupon mismatches (e.g., in the area of code or version) of libraries may well become an issue in implementing the custom agent.","Additionally, in terms of an especially significant drawback, since the controller controls which agent to use, it may at times be the case that a selected agent will be unavailable, thus causing a desired execution to terminate abnormally.","Conventional solutions have involved the use of a Rational\u00ae Test Manager\u00ae agent and an Eclipse\u00ae Edition TPTP (Test and Performance Tools Platform) agent. (\u00ae is available through International Business Machines Corporation of Armonk, N.Y. while Eclipse\u00ae Edition TPTP is provided by the Eclipse Foundation, an open source community [www.eclipse.org]) Custom programs may therefore be provided which assume the role of a server and prompt controllers to connect over a non-standard port. However, in such a setting, the medium which facilitates communication between the controller and the agents will typically use non-standard and\/or technology-specific data dictionaries or schema. Additional problems can thus arise from this, as briefly outlined below.","Firstly, firewalls as normally employed in a restricted or secure test lab environment will place limits on the use of non-standard ports. Communication as just described may be entirely precluded. Secondly, to the extent that many test labs often sit inside a highly restricted (e.g., militarized) network zone, access to external networks or connections may well be highly limited as it is. Thus, it may be difficult if not impossible to gain access to common resources such as file servers, update servers and the like. Further, an agent writer will typically have to learn the specifics of both the execution tool and the controller, so that data can be effectively retrieved, and that execution and other tasks can be initiated from the tool and logged back to the controller. For its part, the controller typically accepts data only in its own specific, non-standardized format.","Broadly contemplated herein, in accordance with at least one embodiment of the present invention, are methods and arrangements for changing and augmenting the conventional processes discussed heretofore to result in a remote test execution process that is centrally manageable while being more open, scalable and secure.","More particularly, there is broadly contemplated herein, in accordance with at least one embodiment of the present invention, an open-service based test execution framework that is based on disconnected architecture, with agent-initiated \u201cREpresentational State Transfer\u201d (REST) connectivity. Further contemplated herein are systems and methods for \u201cunified resource store access\u201d test management, distribution and execution.","For a better understanding of embodiments of the invention, together with other and further features and advantages thereof, reference is made to the following description, taken in conjunction with the accompanying drawings, and the scope of the claimed embodiments of the invention will be pointed out in the appended claims.","In summary, one aspect provides a system comprising: a test execution system having one or more processors and one or more modules executable by the one or more processors, the one or more modules comprising: computer program code configured to register an agent with a server mechanism; computer program code configured to poll a server mechanism with a work request; computer program code configured to maintain communication between an agent and a test tool and prompt test execution via the test tool; and computer program code configured to maintain communication between an agent and a server mechanism via a directed connection.","Another aspect provides a method comprising: registering an agent with a server mechanism; polling a server mechanism with a work request; maintaining communication between an agent and a test tool and prompting execution via the test tool; and maintaining communication between an agent and a server mechanism via a directed connection.","An additional aspect provides a computer program product comprising: a computer readable storage medium having computer readable program code embodied therewith, the computer readable program code comprising: computer program code configured to register an agent with a server mechanism; computer program code configured to poll a server mechanism with a work request; computer program code configured to maintain communication between an agent and a test tool and prompt test execution via the test tool; and computer program code configured to maintain communication between an agent and a server mechanism via a directed connection.","It will be readily understood that the components of the embodiments of the invention, as generally described and illustrated in the figures herein, may be arranged and designed in a wide variety of different configurations in addition to the described embodiments. Thus, the following more detailed description of the embodiments of the invention, as represented in the figures, is not intended to limit the scope of the embodiments of the invention, as claimed, but is merely representative of selected embodiments of the invention.","Reference throughout this specification to \u201cone embodiment\u201d or \u201can embodiment\u201d (or the like) means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the invention. Thus, appearances of the phrases \u201cin one embodiment\u201d or \u201cin an embodiment\u201d or the like in various places throughout this specification are not necessarily all referring to the same embodiment.","Furthermore, the described features, structures, or characteristics may be combined in any suitable manner in one or more embodiments. In the following description, numerous specific details are provided to give a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the various embodiments of the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","The illustrated embodiments of the invention will be best understood by reference to the drawings\/figures. The following description is intended only by way of example and simply illustrates certain selected embodiments of the invention as claimed herein.","Regarding the figures, the flowchart and block diagrams in the figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","The description now turns to the figures and select embodiments of the invention will be described. The following description of various embodiments of the invention is presented to highlight certain aspects of the invention, and the scope of the claimed embodiments of the invention will be pointed out in the appended claims.","Referring now to , there is depicted a block diagram of an illustrative embodiment of a computer system . The illustrative embodiment depicted in  may represent a device such as a game console, a set top box, a mobile device, a laptop, or a desktop or workstation computer. As is apparent from the description, however, embodiments of the invention may be implemented in any appropriately configured device or computing system, as described herein.","As shown in , computer system  includes at least one system processor , which is coupled to a Read-Only Memory (ROM)  and a system memory  by a processor bus . System processor , which may comprise one of the AMD line of processors produced by AMD Corporation or a processor produced by INTEL Corporation is a general-purpose processor that executes boot code  stored within ROM  at power-on and thereafter processes data under the control of an operating system and application software stored in system memory . System processor  is coupled via processor bus  and host bridge  to Peripheral Component Interconnect (PCI) local bus .","PCI local bus  supports the attachment of a number of devices, including adapters and bridges. Among these devices is network adapter , which interfaces computer system  to a LAN, and graphics adapter , which interfaces computer system  to display . Communication on PCI local bus  is governed by local PCI controller , which is in turn coupled to non-volatile random access memory (NVRAM)  via memory bus . Local PCI controller  can be coupled to additional buses and devices via a second host bridge .","Computer system  further includes Industry Standard Architecture (ISA) bus , which is coupled to PCI local bus  by ISA bridge . Coupled to ISA bus  is an input\/output (I\/O) controller , which controls communication between computer system  and attached peripheral devices such as a as a keyboard, mouse, serial and parallel ports, etc. A disk controller  connects a disk drive  with PCI local bus . The USB Bus and USB Controller (not shown) are part of the Local PCI controller ().","The disclosure now turns to a discussion of various embodiments in accordance with the present invention and as illustrated in . It should be understood and appreciated that a \u201csystem under test\u201d or \u201cclient\u201d as discussed herebelow and illustrated or referenced among , may be embodied by essentially any suitable computer system, such as that (by way of an illustrative and non-restrictive example) indicated at  in . Among , reference numerals indicating analogous or similar components are advanced by multiples of 100.","By way of some general aspects according to at least one embodiment of the present invention, there is preferably included an agent-controller polling architecture on a standard HTTP agent-controller connection. This can ease the logistics of opening up a port on the agent.","Further, there may preferably be employed communication that uses a standard HTTP connection with open REST-ful services. This can greatly reduce or eliminate the need to expose and deploy libraries on the agent and controller. (A REST-ful web service is a generally simple web service implemented using HTTP and the principles of REST, or \u201cRepresentational State Transfer\u201d.) In this manner, concerns regarding agent complexity, version mismatch and other matters can be alleviated.","In accordance with at least one embodiment of the present invention , with a standard open resource data format employed in communication, an agent will no longer need to learn the type of data that a specific controller might expect.","Preferably, with a controller acting as a server, there will be exposed everything that an agent will require to run a test via itself As such, test assets can be managed, access can be controlled and security can be checked at the controller itself Further, the test assets can be downloaded without opening up new connections from the agent.","Further, in accordance with at least one embodiment of the present invention, as the agent continues to poll the server, the server will continue to be able to assess the health of the agent. In contrast, in conventional agent mechanisms, if the communication port on the agent somehow gets closed, or the agent becomes unavailable, there is no way to ascertain what went wrong and the time the closing event happened. In such settings, the only way to ascertain the availability of an agent is to actually perform an action against that agent, which of course obviates being able to make an informed decision of selecting an agent in the first place.","Turning now to , which schematically illustrates a simple scheme of interaction in accordance with an embodiment of the present invention, it should first be appreciated that some core constituents may be involved. Controller  is a central execution controller which acts essentially as a server. In essence it is a server, which takes in an execution request from a tester and delegates it to an agent for execution.","Also shown in  are an agent  and test tool . Agent  can preferably be embodied by software that serves as an agent or adapter between controller  and test tool , while test tool  itself preferably is configured to execute tests on the agent . Typically, agent  and test tool  may be installed on a remote machine away from the controller . In the context of functional testing, as in the case of , the machine may be the actual \u201csystem under test\u201d (SUT)  while, in other cases such as performance testing, the SUT may be another remote machine.","Preferably, two sets of interactions will take place. On the one hand, there will preferably be a HTTP REST-ful interaction (or call) between the agent  and controller . This interaction between agent  and controller  preferably enters controller  through a HTTP REST interface . On the other hand, there will also preferably be interaction between agent  and tool  dependent upon the particular implementation of agent  and tool .","The HTTP REST-ful interaction, for its part, is preferably a directed connection from the agent  to the controller . As such, the agent  need not necessarily expose any port for the controller  to delegate work to the latter; the work, in fact, may preferably be created and kept in the controller , via a process of agent registration now to be described.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 3","FIG. 2"],"b":["308","303","308","306","305","306","302","307","303","305","307","302","307","308","305","306","302","307","305","307","302"]},"As such,  schematically illustrates a process flow for remote test execution, relative to the example of . Process actions relating solely to the controller  are shown in (drawing) field , while process interactions controller  and agent  are shown in field  and those between agent  and test tool  are shown in field .","With an order to execute a test (), controller  will then preferably aim to find a registered agent  for the test and request a test for same (). The agent  then preferably polls the controller  for work at regular intervals and marks the work as \u201ctaken\u201d (). (Intervals as mentioned could be in the neighborhood of a few seconds, e.g., about three seconds. In this way the agent will not monopolize CPU resources, while still allowing for a response time that isn't perceived as too slow.) It then () downloads the work details and any resources (e.g., a test and its associated data) to controller  and then () hands over execution to the test tool . Test tool  can intermittently generate some events during execution, which are uploaded to the controller  via the agent  (see \u201clog progress event\u201d at  and \u201clog event\u201d at ). At the end of execution, the agent  preferably collects all the logs from test tool  (\u201ccollect result\u201d at ) and uploads them to the controller  (\u201clog result\u201d at ).","Returning briefly to . as a matter of relevance to all of  and as now can be seen and appreciated, all the communication for an execution between the test tool  and controller  need take place with only one connection, which is the HTTP REST call from agent  to controller . Thus, the server (here in the form of controller ) need not maintain a static connection with the agent , while agent  itself need not open any port for the purpose of establishing or maintaining such a connection.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 5","FIG. 2"],"b":["502","512","502","502","512","506"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 6-9","FIGS. 2-5"]},"As such,  is essentially the same view as , but additionally illustrating an application of scalability. As shown, SUT  includes test tool  and a connector , the latter being in communication with agent  via a similar REST connection as between agent  and controller  of . Here, agent  is actually separate from SUT  and, in combination with controller , acts as a server much as the controller  alone acted as a server in the example of . As such, agent  preferably includes a HTTP REST interface (port) similar to interface  of  and also may preferably be in communication with a database . This database  can preferably provide local persistency for supporting a disconnected mode of agent  with respect to controller , as well as failover support.","As shown, agent  and controller  may preferably be in communication with one another via respective HTTP REST interfaces and disposed at agent  and controller , respectively.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 7","FIG. 6","FIG. 7","FIG. 3"],"b":["714","708","706","708","703","308","714","705","714","706","705","706","702","707"],"i":["a","b "]},"Essentially, upon starting tool integration () and connecting with the agent (), sending a tool registration command from the connector  to the agent  () and (if necessary) logging in (), either the test tool will be registered (or the agent on behalf of the test tool will be registered) and the registration info. integrated\/persisted at controller  (field ) or, if test tool  is already registered, registry information will be obtained (). Then, a log connection heartbeat between agent  and controller  is preferably established (), as well as a \u201cconnection is alive\u201d signal between connector  and agent  () until a disconnect signal is sent from test tool  to agent  () and the tool disconnected ().",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 8","FIG. 6","FIG. 8","FIG. 4"],"b":["814","806","808","802","809","802","806","811","806","814","811","814","808","813"],"i":"b"},"With an order to execute a test (), controller  will then preferably aim to find a registered agent  for the test and request a test for same (). The agent  then preferably transfers the request \u201ctake request\u201d to connector  (). Agent  then preferably () downloads the work details and any resources (e.g., a test and its associated data) to controller , after first getting resources from connector  (at ). Then, execution preferably initiates (is performed) () at test tool . Test tool  can intermittently generate some events during execution, which are uploaded to the controller  via the connector  and agent  (see \u201clog progress event\u201d at  and \u201clog event\u201d at and ). At the end of execution, the agent , in concert with connector , preferably collects all the logs from test tool  (\u201ccollect result\u201d at ) and uploads them to the controller  (\u201clog result\u201d at and ).",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 9","FIG. 6","FIG. 9","FIG. 5","FIG. 6","FIG. 6"],"b":["916","616","914","906","908","908","914","906","912","902","902","912","906"]},"The disclosure now turns to another variant in accordance with at least one embodiment of the present invention, as illustrated in . As shown in  and described herebelow, a centralized Test Management System (TMS) can preferably permit collaboration, such as the sharing of resources. Such resources could include those that belong to practitioner tools that integrate with the TMS. Components in  that are analogous to","A typical conventional solution in this vein is to the require the practitioner test tools to upload the tool specific resources into the Test Management Repository (TMR) so that such resources may be made available to the integrating test tools upon demand. This typically leads to many practical problems.","For one thing, the above conventional solution can be time consuming in that the resources may be used only after they are uploaded into the TM system. Redundancy is also an issue since typically the resources need to be managed in multiple locations and in concert with one another. Further, the TMS often cannot do much with the resources as typically the TMS will not understand the contents and maybe is thus only used as an \u201cintermediary\u201d or \u201cway station\u201d to pass such contents onto a client that actually can handle them. Also, the resource data format may well be closed and proprietary with respect to the TMS, making it difficult to write other clients to that data.","Another conventional solution involves simply maintaining the resource location in the TMS as a shared path that the test tool can access. This will have its own drawbacks. For instance, in a typical TMS lab, there may exist several test machines that need not necessarily be configured to be able to access the shared path. In such a setting, if the shared path location needs to be changed then that might require updating all of the TM\u2033s that host test tools.","Network glitches and changes can also typically hamper the smooth working of the solution just noted. Also, each Test Execution Machine (TEM) might host multiple test tools, wherein each test tool would need to manage its own access to the shared location. There is also a possibility of sharing the resources from a given location across multiple tools, meaning that any change in the access mechanism or resource details would cumbersomely require an update in every single test tool.","Broadly contemplated herein, in accordance with at least one variant embodiment of the present invention, is an arrangement for managing resources at different types of resource storage arrangements and, at the same time, exposing the resources via a uniform HTTP REST interface so that they can be consumed or utilized by essentially any extension.","Particularly contemplated, in accordance with at least one embodiment of the present invention, is a provision for uniform access, to required resources, to consumers of a TMS . Preferably, the TMS  is configured with access to various types of repositories  through an extension mechanism , which is exposed via a resource access component . (as such, resource access component  preferably provides or affords an extension mechanism infrastructure which enables an extension mechanism  to provide access to further repositories, such as those indicated at .) As such, this arrangement need not be repeated for all TEM's (or clients)  individually. Rather, the TMS  can preferably provide access to standard resource repository types (e.g, a file system, source control system, document servers, build repository, web server, file server, etc.) while others maybe added through the extension mechanism (resource access mechanism) . Preferably, the attendant specification will include protocol, URL, port and authentication details. In accordance with such an arrangement, the only needed administration would be to ensure that the TMS  has access to the repositories  instead of the individual TEM's or clients . The system then exposes two sets of service, one for resource location browsing and the other for resource download and upload via HTTP REST interfaces and , respectively, as shown.","It should be understood and appreciated that, in accordance with features broadly contemplated herein in accordance with at least one embodiment of the present invention, a TMS  as described and illustrated herein with respect to  may be considered to be analogous to a \u201ccontroller\u201d (e.g., , ) as described and illustrated herein with respect to . Further, a TEM or client  as described and illustrated herein with respect to  may be considered to be analogous to a \u201cSUT\u201d (e.g., , ) as described and illustrated herein with respect to .","Accordingly, a TMS  which has the capability to access resource storages  via an original specification can now act as an \u201cagent\u201d for its clients and extensions, which all will now have the trust of this \u201cagent\u201d. In this manner, resources can freely transfer from the original source to the final destination in the client and other extensions () via the server through a single standard consumable HTTP REST interface.","Preferably, the resource access component  hosted at TMS  can include a registry which registers and stores various storage access specifications. In addition, the component may host a REST service or can utilize the HTTP server of the TMS  if it has one. Since the resource access component  is a fairly independent service, it need not necessarily be hosted on the TMS  but alternatively could be hosted independently of the TMS . Of course, the services  could be exposed in any of the mechanisms native to the TMS , but having a REST interface does enable a transparent, web-like accessibility to the resource storage.","Preferably, a resource browsing service will expose a set of methods for browsing through the resource store, irrespective of the type of resource store at hand. Preferably, a call to listResources( ) will return a list of proxy resources with some of their meta-information. A proxy resource, in turn, may then expose methods such as:\n\n","Preferably, a resource download\/upload service may expose a mechanism to download and upload resources to and from the TMS and eventually to the appropriate resource repository. Associated methods may be:\n\n","As will be appreciated by one skilled in the art, aspects of the invention may be embodied as a system, method or computer program product. Accordingly, aspects of the invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer (device), partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the invention are described herein with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","This disclosure has been presented for purposes of illustration and description but is not intended to be exhaustive or limiting. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiments were chosen and described in order to explain principles and practical application, and to enable others of ordinary skill in the art to understand the disclosure for various embodiments with various modifications as are suited to the particular use contemplated.","Although illustrative embodiments of the invention have been described herein with reference to the accompanying drawings, it is to be understood that the embodiments of the invention are not limited to those precise embodiments, and that various other changes and modifications may be affected therein by one skilled in the art without departing from the scope or spirit of the disclosure."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 4","FIG. 2"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 5","FIG. 2"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 6","FIG. 2"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 7","FIG. 6"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 8","FIGS. 6 and 7"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 9","FIGS. 2 and 3"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
