---
title: Adaptive graphic objects
abstract: Some embodiments provide a method that defines a group of associated graphic objects for display on a display device. The method defines a set of operations to perform on the associated graphic objects in a particular order. The operations include one or more transforms applied to at least one of the graphic objects. For each particular transform applied to a set of the graphic objects, each graphic object in the set has a set of parameters indicating whether the graphic object is affected by each of a set of primitive transforms of the particular transform. The method stores the set of associated graphic objects and set of operations as a single graphic object.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08963959&OS=08963959&RS=08963959
owner: Apple Inc.
number: 08963959
owner_city: Cupertino
owner_country: US
publication_date: 20110512
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","CLAIM OF BENEFIT TO PRIOR APPLICATIONS","BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["This Application is related to the following application: U.S. patent application Ser. No. 13\/106,805, now published as US 2012\/0182318, filed May 12, 2011.","This application claims the benefit of U.S. Provisional Application 61\/433,951, entitled \u201cReconstruction of Lists, Ordering Page Content, Storing Multiple Representations for a Document, and Adaptive Graphic Objects\u201d, filed Jan. 18, 2011, and U.S. Provisional Application 61\/433,957, entitled \u201cAdaptive Graphic Objects\u201d, filed Jan. 18, 2011. U.S. Provisional Applications 61\/433,951 and 61\/433,957 are incorporated herein by reference.","When rendering a layout of objects on a display device (e.g., a computer screen), various geometric transforms may be applied to the objects in the layout. In general, objects (images, paths, surfaces, etc.) are first defined, then one or more transforms are applied. The transformed objects are grouped with other graphic objects to which other transforms may have been applied, and additional transforms may be applied to the group. Additional layers of grouping and transforming may be applied.","However, in some situations, one will not want to perform certain transformations on certain objects. To solve this issue currently, each object in a user interface is transformed separately. However, this is an inefficient solution, as it requires many of the same transforms to be applied to a large number of objects repeatedly. Furthermore, it prevents graphic objects from being easily grouped into reusable packages with a structure that may be opaque to a later software developer, because the software developer may want transformation to affect the different graphic objects differently.","Some embodiments of the invention provide a novel structure for grouping multiple graphic objects (e.g., shapes, images, paths, surfaces, glyphs, etc.) into a single reusable data structure, or object, in which the different graphic objects may be affected differently by a single transform. Some embodiments also provide a method for applying the transform to such a grouped set of graphic objects that are part of a graphical layout in order to display the graphical layout in a transformed state. The method decomposes the transform into a set of primitive transforms and applies the primitive transforms in a particular order to the graphic objects according to settings of the graphic objects.","In some embodiments, the transform is a matrix operation that belongs to a particular class of transforms. For example, the transform could belong to the class of 2D affine transforms, which are transforms in two dimensions that preserve collinearity and distance ratios along a line. Additional classes of transforms include higher dimension affine transforms as well as various types of non-affine transforms in two or more dimensions.","A set of primitive transforms for a particular transform class is a canonical composition of matrix operations for the matrix representation of a generic transform of the particular transform class. That is, the set of primitive transforms for a particular transform class, when applied to a point in space (e.g., an (x, y) coordinate in two dimensions) in a particular order, can be shown to have the same result as applying the generic transform. Some transform classes may have multiple possible sets of primitive transforms, therefore the method of some embodiments defines a particular set of such primitive transforms for a particular transform class in advance, in order to define graphic object parameters in terms of the particular set of primitive transforms.","As mentioned, the composition of primitive transforms may require the set of primitive transforms to be applied in a particular order. For instance, if the transforms do not commute, then the composition may give different results if the primitive transforms are applied in a different order.","One example of a set of primitive transforms is a set of five transforms for the class of 2D affine transforms. Any transform in this class, as applied to a graphic object, may be decomposed into a composition of (i) reflection about an axis through the graphic object's center at a first particular angle, (ii) rotation about the graphic object's center at a second particular angle, (iii) distortion by stretching by a first factor along an axis through the graphic object's center at a third particular angle and squeezing by a second factor along an axis through the graphic object's center perpendicular to the third particular angle, (iv) scaling about the graphic object's center by a third factor, and (v) translating the object by a particular vector. Some embodiments apply these primitive transforms in the particular order given above (i.e., with reflection first and translation last).","When applying a transform to a graphic object in the graphical layout, the method of some embodiments initially decomposes the transform into its primitive factors as defined for the transform class to which the transform belongs. For instance, in the example of 2D affine transforms, the method of some embodiments identifies the reflection, rotation, distortion, scaling, and translation factors of the given transform.","The method then determines which of the primitive transforms affect the graphic object. In some embodiments, each graphic object has an associated set of participation states that indicate which transforms affect the graphic object. For instance, many user interface items should not scale when a user zooms in on a layout and should not translate when a user moves a layout, while other items participate in one or both of these transforms. Some embodiments define the participation states for a graphic object as an array of binary values (e.g., an array of five values for the 2D affine transform primitives discussed above).","The method applies to the graphic object only the transforms in which the object participates. This may involve generating a new transforms from the primitive factors for the given transform in which the object participates. For instance, if the object only participates in the translation and scaling primitives, then the method will generate a new transform that is a composition of these two primitives and apply this new transform to the graphic object.","The reusable group of graphic objects may be stored as a single adaptive drawing object that defines the relationships between the individual graphic objects through the use of such transforms and sets of participation states. The adaptive drawing object of some embodiments stores the group of graphic objects as well as operations to perform on the graphic objects in order to define these relationships. In some embodiments, these operations may include grouping operations, transforms to a graphic object or a grouped set of graphic objects, and modifications to the participation states of one or more of the graphic objects. The grouping operations allow for efficiencies to be gained by not having to store the same transform or participation state change multiple times for the same adaptive drawing object. The end result of such a set of operations will be a transform for each graphic object as well as a set of output participation states for one or more classes of transform.","These output participation states are used when an external software agent applies a transform to the adaptive drawing object, in the manner described above. In some embodiments, the transform is received as a result of user interaction with a device on which the graphical layout is displayed. A user might interact with one of the graphic objects in the layout (e.g., via a touchscreen, cursor controller, etc.) or with the device generally in order to initiate the application of the transform. After applying the transform to the various graphic objects in the layout according to the participation states of those objects, some embodiments display the transformed layout.","The preceding Summary is intended to serve as a brief introduction to some embodiments of the invention. It is not meant to be an introduction or overview of all inventive subject matter disclosed in this document. The Detailed Description that follows and the Drawings that are referred to in the Detailed Description will further describe the embodiments described in the Summary as well as other embodiments. Accordingly, to understand all the embodiments described by this document, a full review of the Summary, Detailed Description and the Drawings is needed. Moreover, the claimed subject matters are not to be limited by the illustrative details in the Summary, Detailed Description and the Drawing, but rather are to be defined by the appended claims, because the claimed subject matters can be embodied in other specific forms without departing from the spirit of the subject matters.","In the following description, numerous details are set forth for purpose of explanation. However, one of ordinary skill in the art will realize that the invention may be practiced without the use of these specific details. In other instances, well-known structures and devices are shown in block diagram form in order not to obscure the description of the invention with unnecessary detail.","Some embodiments of the invention provide a novel structure for grouping multiple graphic objects (e.g., shapes, images, paths, surfaces, glyphs, etc.) into a single reusable data structure, or object, in which the different graphic objects may be affected differently by a single transform. Some embodiments also provide a method for applying the transform to such a grouped set of graphic objects that are part of a graphical layout in order to display the graphical layout in a transformed state. The method decomposes the transform into a set of primitive transforms and applies the primitive transforms in a particular order to the graphic objects according to settings of the graphic objects.","In some embodiments, the transform is a matrix operation that belongs to a particular class of transforms. For example, the transform could belong to the class of 2D affine transforms, which are transforms in two dimensions that preserve collinearity and distance ratios along a line. Additional classes of transforms include higher dimension affine transforms as well as various types of non-affine transforms in two or more dimensions.","A set of primitive transforms for a particular transform class is a canonical composition of matrix operations for the matrix representation of a generic transform of the particular transform class. That is, the set of primitive transforms for a particular transform class, when applied to a point in space (e.g., an (x, y) coordinate in two dimensions) in a particular order, can be shown to have the same result as applying the generic transform. Some transform classes may have multiple possible sets of primitive transforms, therefore the method of some embodiments defines a particular set of such primitive transforms for a particular transform class in advance, in order to define graphic object parameters in terms of the particular set of primitive transforms.","As mentioned, the composition of primitive transforms may require the set of primitive transforms to be applied in a particular order. For instance, if the transforms do not commute, then the composition may give different results if the primitive transforms are applied in a different order.","One example of a set of primitive transforms is a set of five transforms for the class of 2D affine transforms. Any transform in this class, as applied to a graphic object, may be decomposed into a composition of (i) reflection about an axis through the graphic object's center at a first particular angle, (ii) rotation about the graphic object's center at a second particular angle, (iii) distortion by stretching by a first factor along an axis through the graphic object's center at a third particular angle and squeezing by a second factor along an axis through the graphic object's center perpendicular to the third particular angle, (iv) scaling about the graphic object's center by a third factor, and (v) translating the object by a particular vector. Some embodiments apply these primitive transforms in the particular order given above (i.e., with reflection first and translation last).",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 1","b":["100","100","105","110","115"]},"The method then determines which of the primitive transforms affect the graphic object. In some embodiments, each graphic object is pre-defined with a set of participation states that indicate which transforms affect the graphic object. For instance, many user interface items should not scale when a user zooms in on a layout and should not translate when a user moves a layout, while other items participate in one or both of these transforms. Some embodiments define the participation states for a graphic object as an array of binary values (e.g., an array of five values for the 2D affine transform primitives discussed above).","The method applies to the graphic object only the transforms in which the object participates. As shown in , the only primitive transform applied to the square  is the rotation transform, the primitive transforms applied to the triangle  are the distortion, scaling, and translation transforms, and the primitive transforms applied to the circle  are the rotation, scaling, and translation transforms. The result is that different 2D affine transforms are applied to each of the three objects in layout  according to the defined properties of those objects.","Application of the transform may involve generating a new transform from the primitive factors for the given transform in which the object participates. For instance, if the object only participates in the translation and scaling primitives, then the method will generate a new transform that is a composition of these two primitives and apply this new transform to the graphic object. To generate the transform for the circle , for example, the method of some embodiments decomposes the 2D affine transform and then calculates a new transform using only the rotation, scaling, and translation primitives from the decomposition. This new transform is applied to the circle  (and any other graphic objects in the layout with the same set of participation states).","As mentioned, the reusable group of graphic objects may be stored as a single adaptive drawing object that defines the relationships between the individual graphic objects through the use of such transforms and sets of participation states. The adaptive drawing object of some embodiments stores the group of graphic objects as well as operations to perform on the graphic objects in order to define these relationships. In some embodiments, these operations may include grouping operations, transforms to a graphic object or a grouped set of graphic objects, and modifications to the participation states of one or more of the graphic objects. The grouping operations allow for efficiencies to be gained by not having to store the same transform or participation state change multiple times for the same adaptive drawing object. The end result of such a set of operations will be a transform for each graphic object as well as a set of output participation states for one or more classes of transform.","In some embodiments, the transform is received as a result of user interaction with a device on which the graphical layout is displayed. A user might interact with one of the graphic objects in the layout (e.g., via a touchscreen, cursor controller, etc.) or with the device generally in order to initiate the application of the transform. After applying the transform to the various graphic objects in the layout according to the participation states of those objects, some embodiments display the transformed layout.","Several more detailed embodiments of the invention are described below. Section I describes in further detail how to define primitive transforms for a particular transform class, including an example of a set of primitive transforms for the class of 2D affine transforms. Section II then describes the structure of adaptive drawing objects. Section III describes the process of transforming a set of graphic objects that make up an adaptive drawing object, while Section IV provides examples of specific layouts that include such adaptive objects. Section V describes the software architecture of a module of some embodiments for transforming graphic objects. Finally, Section VI describes an electronic system with which some embodiments of the invention are implemented.","I. Defining Primitive Transforms for a Transform Class","In order for a particular transform to be decomposed into its primitive transforms, primitive transforms must be defined for the transform class to which the particular transform belongs. For some transform classes, numerous different decompositions are possible, and thus it is left to a software designer to choose one. Once a set of primitive transforms are chosen, the primitive transforms are defined in terms of the variables of the generic transform.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 2","b":["200","200"]},{"@attributes":{"id":"p-0056","num":"0055"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"T","mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}},{"mrow":[{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mi":"a"},{"mi":"b"}]},{"mtd":[{"mi":"c"},{"mi":"d"}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}],"mo":"\u2062"},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"e"}},{"mtd":{"mi":"f"}}]}}],"mo":"+"}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"1"}}]}}}}},"A two dimensional affine transform is a transform that (i) preserves collinearity and (ii) preserves distance ratios along a line. That is, if three points are on a line before the transform, those three points will remain on a line after the transform. Furthermore, the ratios of the distances between the three points will remain the same after the transform as before the transform. 2D affine transforms are useful for transforms in a two-dimensional graphical user interface as most transforms of UI or layout objects fall into this class of transforms. For example, zooming, panning, and rotating are all very common user interface interactions that fall into the class of affine transforms.","As shown in , the process  begins by receiving (at ) properties of a transform class. The process  may be performed by a software application designed to generate primitive transforms for a transform class in some embodiments, or may be performed by a mathematician, computer programmer, etc. The properties of a transform class may be received in some embodiments as a generic matrix transformation, such as that shown above in Equation (1). The properties may also be a set of statements about the transform class (e.g., that collinearity and distance ratios along a line are preserved).","Next, the process determines (at ) whether the transform class can be parameterized into a set of primitive transforms. While the details given below illustrate that the transform class of 2D affine transforms represented by Equation (1) can be parameterized into a set of primitive transforms, such a parameterization is also possible for other classes of transforms (e.g., 3D or higher dimension affine transforms, non-affine transforms, etc.). In general, a larger number of variables in the transform (e.g., due to a higher number of dimensions) will result in a larger set of primitive transforms.","The process  then determines (at ) the nature of the primitive transforms for the transform class. That is, the process determines what type of transforms should be included in the set of primitive transforms. In some embodiments, various different sets of primitive transforms may be chosen for a transform class. While applying each different set of primitive transforms for a particular transform will result in the particular transform being performed, not all sets of primitive transforms are equally useful when some of the primitive transforms are turned off for a particular object. In addition, in some embodiments the primitive transforms may be dependent on a property of the object being transformed (e.g., a location of the center of the object). This property may be defined for each object in some cases.","The following five transforms to apply to an object are one example of a set of primitive transforms for transforms in the class of 2D affine transforms, represented by Equation (1) above.\n\n","Decomposing the generic 2D affine transform into these primitive transforms allows for layout objects (e.g., user interface items or other shapes, lines, etc.) to be programmed individually to either participate or not participate in each of the different primitive transforms T-T. The following  illustrate examples of each of these transforms. The application of generic 2D affine transforms to layouts using these primitive transforms will be described further in Section II below.",{"@attributes":{"id":"p-0063","num":"0067"},"figref":"FIG. 3","sub":"1 ","b":["300","305"]},"In , the square  is reflected about an axis  that runs through the center of square  at an angle \u03c8 relative to the coordinate system . As a result, the square is now at a different orientation. Because of the symmetric nature of the square, the result could also be obtained from a rotation of the square. However, for many objects, that do not possess rotational symmetry, a reflection will have effects not obtainable through a rotation.",{"@attributes":{"id":"p-0065","num":"0069"},"figref":["FIG. 4","FIG. 5"],"sub":["2 ","3 "],"b":["300","300","300"]},{"@attributes":{"id":"p-0066","num":"0070"},"figref":["FIG. 6","FIG. 7"],"sub":["4 ","5 "],"b":["300","300"]},"Returning to , the process  next defines (at ) the primitive transforms in terms of the transform variables. That is, based on the variables of the generic transform (e.g., the variables a, b, c, d, e, and f shown in Equation (1) above), the process defines the different primitive transforms. The following illustrates the transforms T-Tdescribed above as the primitive transforms for the generic 2D affine transforms. For any 2D affine transform T:\n\n, where\u2003\u2003(2)\n\n()\u00b7(\u03c8)\u00b7(1,\u03c3)\u00b7(\u2212\u03c8)\u00b7(\u2212);\u2003\u2003(3)\n\n()\u00b7(\u03b8)\u00b7(\u2212);\u2003\u2003(4)\n\n()\u00b7(\u03b8)\u00b7(\u03b1,\u03b2)\u00b7(\u2212\u03c6)\u00b7(\u2212);\u2003\u2003(5)\n\n()\u00b7(\u03bb,\u03bb)\u00b7(\u2212); and\u2003\u2003(6)\n\n(\u03bc,\u03bd).\u2003\u2003(7)\n","The parameterized transforms S, R, and D are matrix operations having the following definitions:",{"@attributes":{"id":"p-0069","num":"0073"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":{"mrow":[{"mrow":[{"mi":"S","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03bc","v"],"mo":","}}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}],"mo":"\u2062"},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"\u03bc"}},{"mtd":{"mi":"v"}}]}}],"mo":"+"}],"mo":"="},"mo":";"}},{"mrow":{"mo":["(",")"],"mn":"8"}}]},{"mtd":[{"mrow":{"mrow":[{"mrow":{"mrow":[{"mrow":[{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03b8"}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}],"mo":"\u2062"},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":["cos","\u03b8"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mrow":{"mrow":{"mo":"-","mi":"sin"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03b8"}}]},{"mtd":[{"mrow":{"mi":["sin","\u03b8"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mrow":{"mi":["cos","\u03b8"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}],"mo":"\u2062"}],"mo":"="},"mo":";","mi":"and"},{"mrow":[{"mrow":[{"mi":"D","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03b1","\u03b2"],"mo":","}}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}],"mo":"\u2062"},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mi":"\u03b1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mi":"\u03b2"}]}]}},{"mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}},"mo":"."}],"mo":"\u2062"}],"mo":"="}],"mo":["\u2062","\u2062"],"mstyle":{"mtext":{}}}},{"mrow":{"mo":["(",")"],"mn":"9"}}]}]}}}},"The parameters of the primitive transforms are derived from T, shown in Equation (1), as follows:",{"@attributes":{"id":"p-0071","num":"0075"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":"\u03c3","mo":"=","mrow":{"mo":["{","\u2062"],"mrow":{"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mrow":{"mrow":{"mrow":{"mi":["if","ad"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"-","mi":"bc"},"mo":"\u2265","mn":"0"}}]},{"mtd":[{"mrow":{"mo":"-","mn":"1"}},{"mrow":{"mrow":{"mrow":{"mi":["if","ad"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"-","mi":"bc"},"mo":"<","mn":"0"}}]}]},"mo":";"},"mstyle":{"mspace":{"@attributes":{"width":"15.8em","height":"15.8ex"}}}}}},{"mrow":{"mo":["(",")"],"mn":"10"}}]},{"mtd":[{"mrow":{"mi":"\u03c8","mo":"=","mrow":{"mo":"{","mrow":{"mrow":{"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mrow":{"mrow":[{"mrow":{"mi":["if","b"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"+","mi":"c"},{"mrow":{"mrow":{"mn":"0","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["and","a"]},"mo":"-","mi":"d"},"mo":"\u2265","mn":"0"}],"mo":"="}}]},{"mtd":[{"mfrac":{"mi":"\u03c0","mn":"2"}},{"mrow":{"mrow":[{"mrow":{"mi":["if","b"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"+","mi":"c"},{"mrow":{"mrow":{"mn":"0","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["and","a"]},"mo":"-","mi":"d"},"mo":"<","mn":"0"}],"mo":"="}}]},{"mtd":[{"mrow":{"mfrac":[{"mn":["1","2"]},{"mrow":[{"mi":["a","d"],"mo":"-"},{"mi":["b","c"],"mo":"+"}]}],"mo":["\u2062","\u2062"],"msup":{"mi":"cot","mrow":{"mo":"-","mn":"1"}}}},{"mrow":{"mrow":{"mrow":{"mi":["if","b"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"+","mi":"c"},"mo":">","mn":"0"}}]},{"mtd":[{"mrow":{"mrow":{"mfrac":[{"mn":["1","2"]},{"mrow":[{"mi":["a","d"],"mo":"-"},{"mi":["b","c"],"mo":"+"}]}],"mo":["\u2062","\u2062"],"msup":{"mi":"cot","mrow":{"mo":"-","mn":"1"}}},"mo":"+","mfrac":{"mi":"\u03c0","mn":"2"}}},{"mrow":{"mrow":{"mrow":{"mi":["if","b"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"+","mi":"c"},"mo":"<","mn":"0"}}]}]},"mo":"=","mrow":{"mi":["half","the","angle","made","by","the","vector"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":["a","d"],"mo":"-"}}},{"mtd":{"mrow":{"mi":["b","c"],"mo":"+"}}}]}}}},"mo":";"}}}},{"mrow":{"mo":["(",")"],"mn":"11"}}]}]}}},"br":{}},{"@attributes":{"id":"p-0072","num":"0076"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":["a","d"],"mo":"+"}}},{"mtd":{"mrow":{"mi":["b","c"],"mo":"-"}}}]}},"mo":","}}},"br":{}},{"@attributes":{"id":"p-0073","num":"0077"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":"\u03d5","mo":"=","mrow":{"mo":"{","mrow":{"mtable":{"mtr":[{"mtd":[{"mi":"\u03c8"},{"mrow":{"mrow":[{"mrow":{"mi":["if","c"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"-","mi":"b"},{"mrow":{"mrow":{"mn":"0","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["and","a"]},"mo":"+","mi":"d"},"mo":"\u2265","mn":"0"}],"mo":"="}}]},{"mtd":[{"mrow":{"mi":"\u03c8","mo":"+","mfrac":{"mi":"\u03c0","mn":"2"}}},{"mrow":{"mrow":[{"mrow":{"mi":["if","c"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"-","mi":"b"},{"mrow":{"mrow":{"mn":"0","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["and","a"]},"mo":"+","mi":"d"},"mo":"<","mn":"0"}],"mo":"="}}]},{"mtd":[{"mrow":{"mi":"\u03c8","mo":"+","mrow":{"mfrac":[{"mn":["1","2"]},{"mrow":[{"mi":["a","d"],"mo":"+"},{"mi":["c","b"],"mo":"-"}]}],"mo":["\u2062","\u2062"],"msup":{"mi":"cot","mrow":{"mo":"-","mn":"1"}}}}},{"mrow":{"mrow":{"mrow":{"mi":["if","c"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"-","mi":"b"},"mo":">","mn":"0"}}]},{"mtd":[{"mrow":{"mi":"\u03c8","mo":["+","+"],"mrow":{"mfrac":[{"mn":["1","2"]},{"mrow":[{"mi":["a","d"],"mo":"+"},{"mi":["c","b"],"mo":"-"}]}],"mo":["\u2062","\u2062"],"msup":{"mi":"cot","mrow":{"mo":"-","mn":"1"}}},"mfrac":{"mi":"\u03c0","mn":"2"}}},{"mrow":{"mrow":{"mrow":{"mi":["if","c"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"-","mi":"b"},"mo":"<","mn":"0"}}]}]},"mo":";"}}}},{"mrow":{"mo":["(",")"],"mn":"12"}}]},{"mtd":[{"mrow":{"mstyle":{"mtext":{}},"mo":"\u2062","mrow":{"mi":"\u03b8","mo":"=","mrow":{"mrow":[{"mrow":[{"mo":["(",")"],"mrow":{"mn":"1","mo":"+","mi":"\u03c3"}},{"mo":["(",")"],"mrow":{"mi":["\u03d5","\u03c8"],"mo":"-"}}],"mo":"\u2062"},{"mo":"{","mrow":{"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mrow":[{"mrow":{"mi":["if","ab"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"-","mi":"bc"},{"mrow":{"mn":"0","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"1.1em","height":"1.1ex"}}}],"mi":["or","ad"]},"mo":"-","mi":"bc"}],"mo":["<","\u2265"],"mn":"0"},"mo":","}}},{"mtd":{"mrow":{"mrow":[{"mi":["c","b"],"mo":"-"},{"mrow":{"mrow":{"mn":"0","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["and","a"]},"mo":"+","mi":"d"},"mo":"\u2265","mn":"0"}],"mo":"="}}}]}}]},{"mtd":[{"mi":"\u03c0"},{"mrow":{"mrow":[{"mrow":{"mrow":{"mi":["if","ad"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"-","mi":"bc"},"mo":"\u2265","mn":"0"},{"mrow":[{"mi":["c","b"],"mo":"-"},{"mrow":{"mrow":{"mn":"0","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"1.1em","height":"1.1ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["and","a"]},"mo":"+","mi":"d"},"mo":"<","mn":"0"}],"mo":"="}],"mo":","}}]},{"mtd":[{"mrow":{"msup":{"mi":"cot","mrow":{"mo":"-","mn":"1"}},"mo":"\u2062","mfrac":{"mrow":[{"mi":["a","d"],"mo":"+"},{"mi":["c","b"],"mo":"-"}]}}},{"mrow":{"mrow":[{"mrow":{"mi":["if","ad"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}},"mo":"-","mi":"bc"},{"mrow":{"mn":"0","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["and","c"]},"mo":"-","mi":"b"}],"mo":["\u2265",">"],"mn":"0"}}]},{"mtd":[{"mrow":{"mrow":{"msup":{"mi":"cot","mrow":{"mo":"-","mn":"1"}},"mo":"\u2062","mfrac":{"mrow":[{"mi":["a","b"],"mo":"+"},{"mi":["c","b"],"mo":"-"}]}},"mo":"+","mi":"\u03c0"}},{"mrow":{"mrow":[{"mrow":{"mi":["if","ab"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"+","mi":"bc"},{"mrow":{"mn":"0","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["and","c"]},"mo":"-","mi":"b"}],"mo":["\u2265","<","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"0"}}]}]},"mo":";"}}],"mo":"="}}}},{"mrow":{"mo":["(",")"],"mn":"13"}}]},{"mtd":[{"mrow":{"mi":"\u03bb","mo":"=","mrow":{"mo":["{","\u2062"],"mrow":{"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mrow":{"mrow":{"mrow":{"mi":["if","ad"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"-","mi":"bc"},"mo":"=","mn":"0"}}]},{"mtd":[{"msqrt":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["ad","bc"],"mo":"-"}}}},{"mrow":{"mrow":{"mrow":{"mi":["if","ad"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"-","mi":"bc"},"mo":"\u2260","mn":"0"}}]}]},"mo":";"},"mstyle":{"mspace":{"@attributes":{"width":"10.6em","height":"10.6ex"}}}}}},{"mrow":{"mo":["(",")"],"mn":"14"}}]},{"mtd":[{"mrow":{"mrow":{"mrow":{"mi":"\u03b1","mo":"=","mfrac":{"mrow":[{"msqrt":[{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}},{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}}],"mo":"+"},{"mn":"2","mo":"\u2062","mi":"\u03bb"}]}},"mo":";"},"mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"1.4em","height":"1.4ex"}}}}},{"mrow":{"mo":["(",")"],"mn":"15"}}]},{"mtd":[{"mrow":{"mi":"\u03b2","mo":"=","mrow":{"mo":["{","\u2062"],"mrow":{"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mrow":{"mrow":{"mrow":{"mi":["if","ad"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"-","mi":"bc"},"mo":"=","mn":"0"}}]},{"mtd":[{"mrow":{"mn":"1","mo":"\/","mi":"\u03b1"}},{"mrow":{"mrow":{"mrow":{"mi":["if","ad"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"-","mi":"bc"},"mo":"\u2260","mn":"0"}}]}]},"mo":";"},"mstyle":{"mspace":{"@attributes":{"width":"14.4em","height":"14.4ex"}}}}}},{"mrow":{"mo":["(",")"],"mn":"16"}}]},{"mtd":[{"mrow":{"mrow":{"mrow":{"mi":"\u03bc","mo":"=","mrow":{"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mi":"a","mo":"-","mn":"1"}},"mo":"\u2062","msub":{"mi":["x","C"]}},"mo":["+","+"],"msub":{"mi":["by","C"]},"mi":"e"}},"mo":";"},"mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"16.4em","height":"16.4ex"}}}}},{"mrow":{"mo":["(",")"],"mn":"17"}}]},{"mtd":[{"mrow":{"mrow":{"mrow":{"mi":"v","mo":"=","mrow":{"msub":{"mi":["cx","C"]},"mo":["+","+"],"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mi":"d","mo":"-","mn":"1"}},"mo":"\u2062","msub":{"mi":["y","C"]}},"mi":"f"}},"mo":";"},"mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"15.8em","height":"15.8ex"}}}}},{"mrow":{"mo":["(",")"],"mn":"18"}}]}]}}}},"As these definitions illustrate, a given 2D affine transform will have either a reflection or a rotation, but not both. This is because a reflection about an axis at a particular angle (measured from the horizontal axis) can itself be decomposed into a reflection about the horizontal axis and a rotation by twice that particular angle. However, the decomposition treats a transform as involving a reflection when the determinant ad\u2212bc is negative and a rotation when the determinant is positive.","The following proof illustrates that the above composition of factors does in fact produce T in all situations; i.e., that Equation (2) is correct. By combining pairs of translations and pairs of rotations (and noting that in both cases the parameters are additive under composition):\n\n()\u00b7(\u03bb,\u03bb)\u00b7(\u03c6)\u00b7(\u03b1,\u03b2)\u00b7(\u03c8+\u03b8\u2212\u03c6)\u00b7(1,\u03c3)\u00b7(\u2212\u03c8)\u00b7(\u2212)\u2003\u2003(19)\n\nThis can also be written as:\n\n()\u00b7(\u2212), where\u2003\u2003(20)\n\n(\u03bb,\u03bb)\u00b7(\u03c6)\u00b7(\u03b1,\u03b2)\u00b7(\u03c8+\u03b8\u2212\u03c6)\u00b7(1,\u03c3)\u00b7(\u2212\u03c8).\u2003\u2003(21)\n\nApplying this transform to any vector (x, y) results in:\n",{"@attributes":{"id":"p-0076","num":"0080"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":[{"mi":"T","mn":"5"},{"mi":"T","mn":"4"},{"mi":"T","mn":"3"},{"mi":"T","mn":"2"}],"mo":["\u2218","\u2218","\u2218","\u2218"],"mrow":{"msub":{"mi":"T","mn":"1"},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}}},{"mrow":[{"mi":"M","mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"x","mo":"-","msub":{"mi":["x","C"]}}}},{"mtd":{"mrow":{"mi":"y","mo":"-","msub":{"mi":["y","C"]}}}}]}}},{"mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"msub":[{"mi":["ax","C"]},{"mi":["by","C"]}],"mo":["+","+"],"mi":"e"}}},{"mtd":{"mrow":{"msub":[{"mi":["cx","C"]},{"mi":["dy","C"]}],"mo":["+","+"],"mi":"f"}}}]}},"mo":"."}],"mo":"+"}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"22"}}]}}}},"br":{}},{"@attributes":{"id":"p-0077","num":"0081"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"T","mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}},{"mrow":[{"mrow":[{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mi":"a"},{"mi":"b"}]},{"mtd":[{"mi":"c"},{"mi":"d"}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}],"mo":"\u2062"},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"e"}},{"mtd":{"mi":"f"}}]}}],"mo":"+"},{"mrow":[{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mi":"a"},{"mi":"b"}]},{"mtd":[{"mi":"c"},{"mi":"d"}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"x","mo":"-","msub":{"mi":["x","C"]}}}},{"mtd":{"mrow":{"mi":"y","mo":"-","msub":{"mi":["y","C"]}}}}]}}],"mo":"\u2062"},{"mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"msub":[{"mi":["ax","C"]},{"mi":["by","C"]}],"mo":["+","+"],"mi":"e"}}},{"mtd":{"mrow":{"msub":[{"mi":["cx","C"]},{"mi":["dy","C"]}],"mo":["+","+"],"mi":"f"}}}]}},"mo":"."}],"mo":"+"}],"mo":"="}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"23"}}]}}}},"br":{}},{"@attributes":{"id":"p-0078","num":"0082"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mi":"a"},{"mi":"b"}]},{"mtd":[{"mi":"c"},{"mi":"d"}]}]}},"mo":"."}}},"br":{}},{"@attributes":{"id":"p-0079","num":"0083"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mtable":{"mtr":[{"mtd":{"mrow":{"mi":["M",{}],"mo":["=","\u2062"],"mrow":{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mi":"\u03bb"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mi":"\u03bb"}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":["cos","\u03d5"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mrow":{"mrow":{"mo":"-","mi":"sin"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03d5"}}]},{"mtd":[{"mrow":{"mi":["sin","\u03d5"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mrow":{"mi":["cos","\u03d5"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mi":"\u03b1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mi":"\u03b2"}]}]}}],"mo":["\u2062","\u2062"]}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":"cos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c8","\u03b8","\u03d5"],"mo":["+","-"]}}}},{"mrow":{"mo":"-","mrow":{"mi":"sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c8","\u03b8","\u03d5"],"mo":["+","-"]}}}}}]},{"mtd":[{"mrow":{"mi":"sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c8","\u03b8","\u03d5"],"mo":["+","-"]}}}},{"mrow":{"mi":"cos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c8","\u03b8","\u03d5"],"mo":["+","-"]}}}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mi":"\u03c3"}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":["cos","\u03c8"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mrow":{"mi":["sin","\u03c8"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}]},{"mtd":[{"mrow":{"mrow":{"mo":"-","mi":"sin"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03c8"}},{"mrow":{"mi":["cos","\u03c8"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}]}]}}],"mo":["\u2062","\u2062"]}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mi":"\u03b1cos\u03d5"},{"mrow":{"mrow":{"mo":"-","mi":"\u03b2sin"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03d5"}}]},{"mtd":[{"mrow":{"mi":["\u03b1sin","\u03d5"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mi":"\u03b2cos\u03d5"}]}]}}}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":[{"mi":["cos","cos","\u03c8"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c8","\u03b8","\u03d5"],"mo":["+","-"]}}},{"mrow":{"mi":"\u03c3sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c8","\u03b8","\u03d5"],"mo":["+","-"]}}},"mo":["\u2062","\u2062","\u2062"],"mi":["sin","\u03c8"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}],"mo":"+"}},{"mrow":{"mrow":[{"mi":["cos","sin","\u03c8"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c8","\u03b8","\u03d5"],"mo":["+","-"]}}},{"mrow":{"mi":"\u03c3sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c8","\u03b8","\u03d5"],"mo":["+","-"]}}},"mo":["\u2062","\u2062","\u2062"],"mi":["cos","\u03c8"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}],"mo":"-"}}]},{"mtd":[{"mrow":{"mrow":[{"mrow":[{"mo":"-","mi":"\u03c3cos"},{"mo":["(",")"],"mrow":{"mi":["\u03c8","\u03b8","\u03d5"],"mo":["+","-"]}}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mi":["sin","\u03c8"]},{"mrow":{"mi":"sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c8","\u03b8","\u03d5"],"mo":["+","-"]}}},"mo":["\u2062","\u2062","\u2062"],"mi":["cos","\u03c8"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}],"mo":"+"}},{"mrow":{"mrow":[{"mi":["\u03c3cos","cos","\u03c8"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c8","\u03b8","\u03d5"],"mo":["+","-"]}}},{"mrow":{"mi":"sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03c8","\u03b8","\u03d5"],"mo":["+","-"]}}},"mo":["\u2062","\u2062","\u2062"],"mi":["sin","\u03c8"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}],"mo":"+"}}]}]}}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mrow":[{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mi":"\u03b1cos\u03d5"},{"mrow":{"mrow":{"mo":"-","mi":"\u03b2sin"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03d5"}}]},{"mtd":[{"mrow":{"mi":["\u03b1sin","\u03d5"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mi":"\u03b2cos\u03d5"}]}]}}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mo":["(",")"],"mrow":{"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mi":"\u03c3"}},"mo":"\u2062","mi":"\u03c8"},"mo":["+","-"],"mi":["\u03b8","\u03d5"]}}}},{"mrow":{"mo":"-","mrow":{"mi":"\u03c3sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mi":"\u03c3"}},"mo":"\u2062","mi":"\u03c8"},"mo":["+","-"],"mi":["\u03b8","\u03d5"]}}}}}]},{"mtd":[{"mrow":{"mi":"sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mi":"\u03c3"}},"mo":"\u2062","mi":"\u03c8"},"mo":["+","-"],"mi":["\u03b8","\u03d5"]}}}},{"mrow":{"mi":"\u03c3cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mo":["(",")"],"mrow":{"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mi":"\u03c3"}},"mo":"\u2062","mi":"\u03c8"},"mo":["+","-"],"mi":["\u03b8","\u03d5"]}}}}]}]}}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["since","\u03c3"]},{"mo":"\u00b1","mn":"1"}],"mo":"="}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mrow":[{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mi":"\u03b1cos\u03d5"},{"mrow":{"mrow":{"mo":"-","mi":"\u03b2sin"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03d5"}}]},{"mtd":[{"mrow":{"mi":["\u03b1sin","\u03d5"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mi":"\u03b2cos\u03d5"}]}]}}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mo":["(",")"],"mrow":{"mi":"\u03c3","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}}}},{"mrow":{"mrow":[{"mo":"-","mi":"\u03c3sin"},{"mo":["(",")"],"mrow":{"mi":"\u03c3","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}}],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}]},{"mtd":[{"mrow":{"mi":"sin","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mo":["(",")"],"mrow":{"mi":"\u03c3","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}}}},{"mrow":{"mi":"\u03c3cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"mrow":{"mi":"\u03c3","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}}}}]}]}}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["since","\u03b8"]},{"mrow":[{"mo":["(",")"],"mrow":{"mn":"1","mo":"+","mi":"\u03c3"}},{"mo":["(",")"],"mrow":{"mi":["\u03d5","\u03c8"],"mo":"-"}}],"mo":"\u2062"}],"mo":"="}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mi":"\u03b1cos\u03d5"},{"mrow":{"mrow":{"mo":"-","mi":"\u03b2sin"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03d5"}}]},{"mtd":[{"mrow":{"mi":["\u03b1sin","\u03d5"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mi":"\u03b2cos\u03d5"}]}]}}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mo":["(",")"],"mrow":{"mi":"\u03c3","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}},{"mrow":{"mrow":[{"mo":"-","mi":"sin"},{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}]},{"mtd":[{"mrow":{"mi":"\u03c3sin","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}},{"mrow":{"mi":"\u03c3cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}}]}]}}],"mo":"\u2062"}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":[{"mi":"\u03b1cos\u03d5cos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}},{"mi":["\u03c3","\u03b2","sin","\u03d5"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mrow":{"mi":"sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}}],"mo":"-"}},{"mrow":{"mrow":[{"mo":"-","mrow":{"mi":"\u03b1cos\u03d5sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}},{"mi":["\u03c3","\u03b2","sin","\u03d5"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mrow":{"mi":"cos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}}],"mo":"-"}}]},{"mtd":[{"mrow":{"mrow":[{"mi":"\u03b1sin\u03d5cos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}},{"mi":["\u03c3","\u03b2","cos","\u03d5"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mrow":{"mi":"sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}}],"mo":"+"}},{"mrow":{"mrow":[{"mo":"-","mrow":{"mi":"\u03b1sin\u03d5sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}},{"mi":["\u03c3","\u03b2","cos","\u03d5"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mrow":{"mi":"cos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}}],"mo":"+"}}]}]}}}}}}]}},{"mrow":{"mo":["(",")"],"mn":"24"}}]}}}},"br":{}},{"@attributes":{"id":"p-0080","num":"0084"},"maths":{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"M","mo":"=","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"msub":{"mi":"m","mn":"11"}},{"msub":{"mi":"m","mn":"12"}}]},{"mtd":[{"msub":{"mi":"m","mn":"21"}},{"msub":{"mi":"m","mn":"22"}}]}]}}}}},"br":{}},{"@attributes":{"id":"p-0081","num":"0085"},"maths":{"@attributes":{"id":"MATH-US-00011","num":"00011"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"msub":[{"mi":"m","mn":"11"},{"mi":"m","mn":"22"}],"mo":"+"},{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03b1","mo":"+","mrow":{"mi":["\u03c3","\u03b2"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}},{"mo":["(",")"],"mrow":{"mrow":[{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"\u03d5cos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}},{"mi":"sin","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"\u03d5sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}}],"mo":"-"}}],"mo":"\u2062"}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03b1","mo":"+","mrow":{"mi":["\u03c3","\u03b2"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}},{"mi":"cos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"2","mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03d5","\u03c8"],"mo":"-"}}}}}],"mo":"\u2062"}},"mo":";"}}}]}},{"mrow":{"mo":["(",")"],"mn":"25"}}]},{"mtd":[{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"msub":[{"mi":"m","mn":"11"},{"mi":"m","mn":"22"}],"mo":"-"},{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03b1","mo":"-","mrow":{"mi":["\u03c3","\u03b2"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}},{"mo":["(",")"],"mrow":{"mrow":[{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"\u03d5cos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}},{"mi":"sin","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"\u03d5sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}}],"mo":"+"}}],"mo":"\u2062"}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03b1","mo":"-","mrow":{"mi":["\u03c3","\u03b2"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}},{"mi":"cos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}],"mo":"\u2062"}},"mo":";"}}}]}},{"mrow":{"mo":["(",")"],"mn":"26"}}]},{"mtd":[{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"msub":[{"mi":"m","mn":"21"},{"mi":"m","mn":"12"}],"mo":"+"},{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03b1","mo":"-","mrow":{"mi":["\u03c3","\u03b2"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}},{"mo":["(",")"],"mrow":{"mrow":[{"mi":"sin","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"\u03d5cos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}},{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"\u03d5sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}}],"mo":"-"}}],"mo":"\u2062"}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03b1","mo":"-","mrow":{"mi":["\u03c3","\u03b2"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}},{"mi":"sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}],"mo":"\u2062"}},"mo":";","mi":"and"}}}]}},{"mrow":{"mo":["(",")"],"mn":"27"}}]},{"mtd":[{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"msub":[{"mi":"m","mn":"21"},{"mi":"m","mn":"12"}],"mo":"-"},{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03b1","mo":"+","mrow":{"mi":["\u03c3","\u03b2"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}},{"mo":["(",")"],"mrow":{"mrow":[{"mi":"sin","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"\u03d5cos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}},{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"\u03d5sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03d5","mo":"-","mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}}}}],"mo":"+"}}],"mo":"\u2062"}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"\u03b1","mo":"+","mrow":{"mi":["\u03c3","\u03b2"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}},{"mrow":{"mi":"sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"2","mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03d5","\u03c8"],"mo":"-"}}}}},"mo":"."}],"mo":"\u2062"}}}}]}},{"mrow":{"mo":["(",")"],"mn":"28"}}]}]}}},"br":[{},{}]},{"@attributes":{"id":"p-0082","num":"0086"},"maths":{"@attributes":{"id":"MATH-US-00012","num":"00012"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03b1","\u03c3\u03b2"],"mo":"+"}}},{"mfrac":{"mrow":{"msqrt":[{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}},{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}}],"mo":"+"},"mn":"2"},"mo":"+"}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mfrac":{"mrow":[{"mn":"2","mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mi":["ad","bc"],"mo":"-"}}},{"msqrt":[{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}},{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}}],"mo":"+"}]}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mfrac":{"mrow":{"msqrt":[{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}},{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}}],"mo":"+"},"mn":"2"},"mo":"+"}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mfrac":{"mrow":{"msqrt":[{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}},{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}}],"mo":"-"},"mn":"2"}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"msqrt":{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}}}}}]}},{"mrow":{"mo":["(",")"],"mn":"29"}}]},{"mtd":[{"mi":"and"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}]},{"mtd":[{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03b1","\u03c3\u03b2"],"mo":"-"}}},{"mfrac":{"mrow":{"msqrt":[{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}},{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}}],"mo":"+"},"mn":"2"},"mo":"-"}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mfrac":{"mrow":[{"mn":"2","mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mi":["ad","bc"],"mo":"-"}}},{"msqrt":[{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}},{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}}],"mo":"+"}]}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mfrac":{"mrow":{"msqrt":[{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}},{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}}],"mo":"+"},"mn":"2"},"mo":"-"}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mfrac":{"mrow":{"msqrt":[{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}},{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}}],"mo":"-"},"mn":"2"}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"msqrt":{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}}}}}]}},{"mrow":{"mo":["(",")"],"mn":"30"}}]}]}}},"br":{},"sup":["2","2","2","2"]},{"@attributes":{"id":"p-0083","num":"0087"},"maths":{"@attributes":{"id":"MATH-US-00013","num":"00013"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":{"mrow":{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03b1","\u03c3\u03b2"],"mo":"+"}}},{"mi":"\u03b1","mo":"=","mrow":{"mrow":{"mfrac":{"mn":["1","2"]},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"msqrt":[{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}},{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}}],"mo":"+"}}},"mo":"=","msqrt":{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}}}}],"mo":"="},"mo":["\u2062","\u2062"],"mstyle":{"mtext":{}},"mi":"and"},"mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"28.9em","height":"28.9ex"}}}}},{"mrow":{"mo":["(",")"],"mn":"31"}}]},{"mtd":[{"mrow":{"mrow":[{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03b1","\u03c3\u03b2"],"mo":"-"}}},{"mi":"\u03b1","mo":"=","mrow":{"mrow":[{"mfrac":{"mn":["1","2"]},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"msqrt":[{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}},{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}}],"mo":"+"}}},{"msqrt":{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}},"mo":"."}],"mo":"="}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"32"}}]}]}}},"br":{}},{"@attributes":{"id":"p-0084","num":"0088"},"maths":{"@attributes":{"id":"MATH-US-00014","num":"00014"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":[{"mi":"cos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"2","mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03d5","\u03c8"],"mo":"-"}}}}},{"mo":"{","mrow":{"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mrow":{"mrow":[{"mrow":{"mi":["if","a"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"+","mi":"d"},{"mrow":{"mrow":{"mn":"0","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["and","b"]},"mo":"-","mi":"c"},"mo":"=","mn":"0"}],"mo":"="}}]},{"mtd":[{"mfrac":{"mrow":{"mi":["a","d"],"mo":"+"},"msqrt":{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}}}},{"mi":"otherwise"}]}]},"mo":";"}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"33"}}]},{"mtd":[{"mrow":{"mrow":[{"mi":"sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"2","mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mi":["\u03d5","\u03c8"],"mo":"-"}}}}},{"mo":"{","mrow":{"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mrow":{"mrow":[{"mrow":{"mi":["if","a"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"+","mi":"d"},{"mrow":{"mrow":{"mn":"0","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["and","b"]},"mo":"-","mi":"c"},"mo":"=","mn":"0"}],"mo":"="}}]},{"mtd":[{"mfrac":{"mrow":{"mi":["c","b"],"mo":"-"},"msqrt":{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"+"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"-"}},"mn":"2"}],"mo":"+"}}}},{"mi":"otherwise"}]}]},"mo":";"}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"34"}}]},{"mtd":[{"mrow":{"mrow":[{"mi":"cos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}},{"mo":"{","mrow":{"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mrow":{"mrow":[{"mrow":{"mi":["if","a"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"-","mi":"d"},{"mrow":{"mrow":{"mn":"0","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["and","b"]},"mo":"+","mi":"c"},"mo":"=","mn":"0"}],"mo":"="}}]},{"mtd":[{"mfrac":{"mrow":{"mi":["a","d"],"mo":"-"},"msqrt":{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}}}},{"mi":"otherwise"}]}]},"mo":";"}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"35"}}]},{"mtd":[{"mrow":{"mrow":[{"mi":"sin","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"2","mo":"\u2062","mi":"\u03c8"}}},{"mo":"{","mrow":{"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":{"mrow":{"mn":"0","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["if","a"]},"mo":"-","mi":"d"},"mo":"=","mn":"0"}},{"mrow":{"mrow":{"mrow":{"mi":["and","b"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},"mo":"+","mi":"c"},"mo":"=","mn":"0"}}]},{"mtd":[{"mfrac":{"mrow":{"mi":["b","c"],"mo":"+"},"msqrt":{"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"mi":["a","d"],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"mi":["b","c"],"mo":"+"}},"mn":"2"}],"mo":"+"}}}},{"mi":"otherwise"}]}]},"mo":"."}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"36"}}]}]}}},"br":[{},{},{},{},{},{}],"in-line-formulae":[{},{},{},{},{},{},{},{}],"i":["m","+m","=a+d;","m","\u2212m","=a\u2212d;","m","+m","=c+b","m","\u2212m","=c\u2212b."],"sub":["11","22","11","22","21","12","21","12","11","22","21","12"]},{"@attributes":{"id":"p-0085","num":"0089"},"maths":{"@attributes":{"id":"MATH-US-00015","num":"00015"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"M","mo":"=","mrow":{"mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mi":"a"},{"mi":"b"}]},{"mtd":[{"mi":"c"},{"mi":"d"}]}]}},"mo":"."}}},{"mrow":{"mo":["(",")"],"mn":"41"}}]}}}}},"Returning to , the process  next defines (at ) an order of applicability for the primitive transforms now that the primitive transforms are defined. As the primitive transforms generally do not commute (i.e., it can be shown that the factorization for a 2D affine transform will not commute), an order must be defined for the primitive transforms. In some cases, this order is dependent on the transform definitions. That is, the primitive transforms will have to be defined differently if applied in a different order, as the primitive transforms must equate to the generic transform when applied in the particular order. In the example case for 2D affine transforms, the primitive transforms are ordered with reflection or rotation (whichever of the two applies, if either) applied first, then distortion, then scaling, and finally translation.","In some embodiments, the process defines the order so that when a particular transform is turned off for an object, the resulting transform on the object gives an expected result. When all primitive transforms are applied to an object, the resulting transform will be the applied transform, as this is a requirement for the decomposition. However, when an object does not rotate, for example, the application of the other transforms should result in the effect expected for the transform without rotation applied.","While the example used in the above section shows decomposing a generic 2D affine transform into primitive transforms, similar decompositions may be chosen for higher-dimensional affine transforms (e.g., a set of transforms with additional rotation angles and distortion parameters to account for the additional dimensions. Similarly, decompositions may be determined for non-affine transforms, both in two dimensions or in higher dimensions. Some examples of such transforms include three-dimensional perspective, orthographic, or other projection transforms.","II. Defining Adaptive Objects","The above section described the definition of a set of primitive transforms for a particular type of transform. With these primitive transforms defined (for one or more classes of transforms), adaptive drawings may then be defined (e.g., by a software developer) as sets of graphic objects to which a stack of transforms are applied.","An adaptive drawing, in some embodiments, is a set of graphic objects (which may themselves be adaptive drawings) and a set of operations to apply to the graphic objects. These operations may include grouping operations to group two or more of the graphic objects together, modifications to the participation state of an object or group of objects, and transform operations that apply a transform to an object or group of objects according to the participation states of the objects.","After application of the operations, each primitive graphic object has a set of participation states for each class of transforms for which a set of primitive transforms have been defined. When a software agent applies further transforms to the adaptive drawing, the transform can be applied separately to each primitive object using the participation states for the primitive object, as determined through the set of operations that define the adaptive drawing.",{"@attributes":{"id":"p-0092","num":"0096"},"figref":"FIG. 8","b":["800","805","810","815","800"]},"In some embodiments, each primitive graphic object  includes a definition of the appearance  of the graphic object. Depending on the type of graphic object, the appearance data  may be formatted in different ways. For instance, if the graphic object is a raster image, then the appearance is defined by a set of pixels having various pixel values. If the graphic object is a vector graphic, then one or more paths, shapes, etc. define the appearance.","The primitive graphic objects  may also include one or more parameters . In some embodiments, the parameters include specific locations in the object having particular meaning This may include the definition of a center for the object, which may be used in the application of certain primitive transforms (e.g., the composition described above in Section I). The definition of glyphs (e.g., collections of vector graphics paths that are used to define an alphanumeric character) will often include an anchor point. When no center is defined for an object, some embodiments use one algorithm or another to identify a center for the application of primitive transforms. For instance, different embodiments may integrate along a path to determine the center of mass of the path, may take an average of the coordinates of points of the object, etc.","The adaptive drawings  which are among the objects of adaptive drawing  include graphic objects  (which may themselves be primitive graphic objects such as objects  or adaptive drawings such as ) and a transform and restriction stack . The structure of the adaptive drawings , as shown, is similar to that of the parent drawing .","The transform and restriction stack  is a set of operations that defines the relationships between the various graphic objects  and . Essentially, each graphic object goes through a set of operations leading up to its display on a display device (e.g., computer monitor, tablet screen, smart phone screen, etc.). As mentioned, these operations may include grouping operations, changes to the participation state of an object or group of objects, and application of transforms to an object or group of objects.",{"@attributes":{"id":"p-0097","num":"0101"},"figref":"FIG. 9","b":["905","920","905","920"]},"The set of operations in  is illustrated as a tree structure . The set of operations to apply to a particular graphic object can be determined by following the tree structure. For instance, the graphic object w  first goes through a change to its participation states at operation . The change to an object's participation states may be coded as a modification to specific participation states (e.g., specifically turning on or off a single participation state without affecting other participation states) or as a new array of participation states. Using the example given above for 2D affine transforms, the change in participation states might specifically cause turn off the rotation primitive (without modifying the participation states for reflection, distortion, scaling, or translation), or be coded as an array of [1 0 1 1 1] that leaves the object with its rotation participation state off and all other participation states turned on.","Next, transform C is applied to the graphic object w  at operation . As one can see, this operation is also applied to graphic object x  (after the application of transform A at operation ). In its application to graphic object w , the transform C is decomposed into its primitive transforms and only those primitive transforms that are turned on for object w  at operation  will affect object w . After the application of transform C at operation , the object w  (and object x ) is grouped with the other two objects and transform F is applied to all of the objects at operation .","A software developer can package up the operations shown in tree structure  as an adaptive drawing object and serialize the object such that the adaptive drawing object can be reused by various software agents (e.g., as shown in ). Some embodiments store the adaptive drawing object as a single file, data stream, or software resource that includes the information that defines each graphic object, as well as the transforms and state changes. In some embodiments, the adaptive drawing transform structure may be opaque to future software agents, in which case the set of transforms and participation state changes may be resolved for each graphic object to result in (i) a net transform to the graphic object (i.e., by multiplying all of the transforms applied to the object in the order that the transforms are applied) and (ii) a set of output participation states for the graphic object (the participation states for the graphic object at the end of the operations). Any future transforms applied to the adaptive drawing object by a software agent will use the output participation states for the graphic objects, unless the software agent also applies an operation to change the participation states (e.g., turning the rotation primitive on for all objects that make up the adaptive drawing object).","When packaging up the operations for an adaptive drawing, some embodiments will resolve all of the transforms for each object so that there is only a single transform to apply to the object and a set of output participation states for the object, rather than storing an entire tree structure such as shown in . In some embodiments, when the graphic object is a vector graphic, the resolved transform is applied to the graphic object beforehand and the stored graphic object reflects this transform. On the other hand, when the graphic object is a raster image, the graphic object is stored in its original state as part of the adaptive drawing object (e.g., as a .jpg, .png, etc.) and the resolved transform is also stored as part of the adaptive drawing object and applied to the image at runtime (as the act of transforming a raster image may be a lossy process).","On the other hand, in order to retain the efficiencies of shared transforms (e.g., the application of transform F to all four graphic objects -) at operation  of the tree structure , some embodiments may store the entire tree structure of operations in the adaptive drawing object. In addition, with the entire set of operations stored as part of the object, some embodiments may provide an application programming interface (API), in which the structure of the object is transparent, thereby allowing the later software developer to traverse the tree structure of the object and modify the operations. For instance, if a developer wanted a first user interaction operation to cause a particular graphic object that is part of an adaptive drawing to rotate along with the rest of the adaptive drawing, but also wanted the particular graphic object not to rotate under a second user interaction, the developer could write one of the processes to traverse the tree structure and modify the rotation participation state of the particular graphic object without affecting the other objects in the adaptive drawing.","However, generally, the tree structure is designed to be unmodified by future developers, such that the adaptive drawing can be easily reused by different software applications. Breaking transforms into primitives and using participation states to restrict the application of the primitives enables more graphic objects to be packaged together as a single reusable object. For instance, a compass rose can be packaged along with a map object as a single object, with the participation states for translation and scaling turned off. When the map is translated and scaled, the compass rose is not affected; when the map is rotated, however, the compass rose rotates along with the map.","In addition to use on its own as a single graphic object, in some embodiments the adaptive graphic object may be re-used as a graphic object node in another graphic object package.  conceptually illustrates a set of operations to apply to four graphic objects that make up an adaptive drawing, one of which is the adaptive drawing  of . As described above for the adaptive drawing , each of the graphic objects - and  has a set of transforms applied according to the participation states of the graphic object. For primitive graphic objects -, the illustrated transforms and participation state changes are applied in the same manner as described for the objects in .","For adaptive graphic object N , the transforms illustrated for each of its graphic objects - are initially applied to generate an output transform and set of participation states for each object. The applicable nodes of object tree  are then applied to each of these objects -. Transform K  is applied, then participation state change . The participation state change  modifies all of the objects -, in addition to the object . Finally, the transform T  is applied to all of the objects in the adaptive drawing, including all of the different objects of adaptive graphic .","Much like the use of the adaptive drawing  in adaptive drawing , the developer of adaptive drawing  can package up this object as a single graphic object (e.g., as a file, a data stream, or a software resource), which can then be re-used either on its own or as part of another adaptive object. This hierarchical nesting of adaptive graphic objects can be continued to any number of levels, in some embodiments. At each level, the author of a particular adaptive drawing package does not need to be aware of the operations (i.e., transforms and changes in participation states) embedded in any adaptive drawings used by the particular drawing package. Similarly, the author need not be aware of the future uses of the particular drawing package, but simply can use transforms and participation state restrictions to define its behavior in any such uses.",{"@attributes":{"id":"p-0107","num":"0111"},"figref":"FIG. 11","b":["1100","1100","1105"]},"Next, the process  defines (at ) a set of operations that are applied to the graphic objects in the adaptive drawing. These may be operations to transform one or more of the objects, change the participation states of the object, or group two or more of the objects together. The tree structure  conceptually illustrates one example of such a set of such operations, for an adaptive drawing with four graphic objects. The various operations serve to define a relationship between the different graphic objects - that defines how the objects appear relative to each other when displayed on an electronic display device.","With the adaptive drawing object defined, the process stores (at ) the drawing object. In some embodiments, the adaptive drawing is stored in a serialized format (i.e., a format that can be stored and later resurrected in the same or another computer environment). For instance, some embodiments store the adaptive drawing object as a file in eXtensible Markup Language (XML) format.","Some embodiments store the adaptive drawing in an in-memory representation (e.g., an API structure). For instance, the adaptive drawing might be stored as an object in a software library or framework (e.g., as part of an OS) with standard methods that may be performed on the object (e.g., standard transforms). The adaptive drawing object could then be passed between various software agents (e.g., applications) that are written independently, but all use the same object. Such software agents could use the object without a need to know the details of the various transforms and other operations applied within the adaptive drawing object. When an application wants to transform the object, the application can send a command through the API, which knows to apply all of the various restrictions encoded in the adaptive drawing object when applying the transform to the object.","Various methods on the adaptive drawing exist in some embodiments. These include public methods that are exposed through the API (i.e., the commands that an application could send through the API), such as a request to group objects and return a new grouped object, transform an object, request the participation states of objects within an adaptive object, and set the participation states of the objects. The methods may also include private methods (which a developer could make public) such as decomposing a transform, recomposing a transform according to participation states, setting the center of an object, etc.",{"@attributes":{"id":"p-0112","num":"0116"},"figref":"FIG. 12","b":["1200","900","1205","1210","900","1205","905","920","905","910","905","925","915","920","1215"]},{"@attributes":{"id":"p-0113","num":"0117"},"figref":"FIG. 13","b":["1300","900","905","920","1305","1310","1210","900","1305","1305","1305"]},"III. Transforming Adaptive Objects","The above section described how an adaptive drawing object is defined and stored for later use. Each graphic object of the adaptive drawing object having its own set of output participation states, transforms applied to the adaptive drawing object may affect the different individual graphic objects differently. When an application that uses the adaptive drawing object (e.g., an application running on a desktop using a menu object, a web mashup using a map object, etc.) modifies the object (e.g., as part of the display process of the application, in response to user input to the application, etc.), the application sends a command to the object (e.g., through an API). The command may include one or more transforms as well as changes to the participation states of the objects in the object. As illustrated in , these transforms are applied to the object after the application of the other transforms that are defined as part of the adaptive drawing object.",{"@attributes":{"id":"p-0115","num":"0119"},"figref":"FIG. 14","b":["1400","1400"]},"As shown, the process  begins by receiving (at ) a command to modify an adaptive drawing object. The adaptive drawing object, as described in detail above, may be a collection of individual graphic objects (e.g., primitive graphic objects, collections of graphic objects such as nested adaptive drawing objects, etc.). The command may be received from the application as part of the process of the application displaying the object in its own user interface or display window. The command may also be in response to user input through the application.","The process  then identifies (at ) operations included in the received command. The command may include multiple operations to transform the adaptive drawing object, modify the participation states of the individual objects, etc. As illustrated in , these operations are applied at the top of a tree of such operations that are part of the adaptive object definition. Thus, a change in the participation state will generally affect all of the individual objects in the adaptive drawing object. However, in some embodiments, the structure of the adaptive drawing object is made open to the application, which can modify the stack of operations applied to an individual object and thereby modify the participation states of the individual object.","Next, the process selects (at ) a primitive graphic object from the adaptive drawing object. As described above, because the participation states for the individual objects may be different, each of the individual objects in the adaptive drawing object may be affected differently by the transform. The order in which the individual objects are selected may be random, or may be part of the definition of the adaptive drawing object. The adaptive drawing object may define a drawing order (also called a z-order) for the different objects that determines which objects are on top of the other objects when displayed, and this may determine the order in which the objects are transformed for display (with the lower objects transformed first).","The process  then identifies (at ) a stack of transforms and participation state changes to apply to the selected primitive object as defined in the adaptive drawing object. This may involve traversing a tree structure of transforms such as that illustrated in  to identify the specific transforms to apply to the object and the participation states of the object at the time each transform is applied. The process then performs (at ) the transforms for the primitive object as defined in the adaptive drawing object. The process of applying a transform to a single object is described in further detail in  below.","Next, the process  determines (at ) whether to modify the participation states of the selected primitive graphic object. As described, in some embodiments the command received to modify the adaptive drawing object may include a modification to the participation states of the individual objects (for instance, the command shown in ).","When the command requires a modification to the states of the graphic object, the process modifies (at ) the set of participation states of the selected graphic object as required. As described in Section II above, this may be the assignment of a new array of participation states to the graphic object, or the modification of the values at specific indices of the array. Otherwise, the process uses (at ) the current set of participation states for the selected graphic object. This may be the output set of participation states from the adaptive drawing object, or a modified set from a previous operation of the received command.","The process then performs (at ) the next transform from the received command. As mentioned above, , described below, illustrates one process for applying a transform to a single object. The application of a transform may involve decomposing the transform into its primitive transforms and then applying only the primitive transforms indicated by the participation states of the graphic object.","Next, the process  determines (at ) whether more transforms from the received command remain to be applied. A single command from a software agent might include multiple transforms. In fact, the software agent might modify a first set of participation states for a first transform class and then apply a specific transform of the first transform class, then subsequently modify a second set of participation states for a second transform class and then apply a specific transform of the second transform class. When more transforms remain, the process returns to  to determine whether any participation states need to be modified.","When all of the transforms have been applied to the selected graphic object, the process determines (at ) whether all of the graphic objects that make up the adaptive drawing object have been transformed. When additional graphic objects remain, the process returns to  to select the next object. Otherwise, the process ends.","One of ordinary skill in the art will recognize that the process  is a conceptual process, and that some embodiments will perform an equivalent process using a different order of operations. For instance, some embodiments do not individually perform all the transforms on a single graphic object, but rather would traverse the tree of operations in a manner that applies each operation only once. For instance, referring to the adaptive drawing object  of , some embodiments would apply the participation state change operation  to graphic w  first, then apply transform operation  to graphic x , then apply transform operation  to each of the graphic objects  and , then apply transform operation  to graphic object y , and so on, until the entire operations tree is traversed. Two example processes for applying a particular transform to multiple graphic objects are described below by reference to .","As shown in process , transforms will regularly be applied to an object according to the participation states of the object.  conceptually illustrates a process  of some embodiments for applying a transform (that falls into a class for which primitive transforms have been defined) to an object for which participation states for the primitive transforms are defined. The process  will be described by reference to , which illustrates the application of a 2D affine transform T to a graphic object  (a five-pointed star) in six stages -. The six stages illustrate the object  after the application of each of the transforms.","In addition,  also illustrates a table  that indicates a set of participation states for the graphic object . For each particular primitive transform T-T, the table  indicates whether an application should apply the particular primitive transform to graphic object . As shown, the graphic object  participates in rotation, scaling, and translation transforms, but does not participate in reflection and distortion transforms.","In some embodiments, the set of participation states for the graphic object is determined as an operation or set of operations encoded in an adaptive drawing object that contains the graphic object. Some embodiments define an array of participation states that is associated with the object; the array indicates either \u201con\u201d or \u201coff\u201d for each primitive transform, in a particular order. As described above, these participation states may be modified through a stack of transforms and other operations that are applied to the object as coded in an adaptive drawing object that includes the particular object.","In some embodiments, the process  is performed by one or more methods on the object, which may or may not be exposed as part of the API (e.g., methods to decompose a transform, methods to re-compose a transform using a given set of participation states, methods to apply the transform to the object, etc.). The process may be performed in response to a command from a software application that modifies a layout for display on an electronic display device (e.g., a computer monitor, a laptop screen, a touchscreen device such as a smartphone or tablet computer, etc.). The layout may be an entire screen (e.g., a desktop layout), a window within a screen (e.g., a browser window), etc. In some embodiments, an application applies a transform to the graphic object through an API. The API provides the adaptive drawing object that includes the graphic object to the application.","As shown in , the process  begins by receiving (at ) a transform to apply to a graphic object. In some embodiments, the transform may be any transform in any class (e.g., 2D affine transforms, 3D non-affine transforms, etc.) for which a decomposition is defined. Some embodiments restrict the type of transforms for which process  can be performed to a specific class of transforms. In some embodiments, the received transform is defined by a matrix operation to be performed on each coordinate in the graphic object (e.g., Equation (1) from the previous section). The transform may be the result of user input in some cases (e.g., user input to zoom in on a portion of a layout). The object to which the process applies the transform may be a user interface item (e.g., a slider, an icon, selection handles, etc.), text content, graphical content (an image, vector graphics, etc.), or any other displayed object.","The process then decomposes (at ) the received transform into a set of primitive transforms. Some embodiments define the decomposition in advance, as described above in Section I (e.g., by equations (2)-(18)). The decomposition defines primitive transform matrix operations based on the values of the matrix operation of the received transform. For example, a transform that performs rotation only will only have one primitive transform (using the example for 2D affine transforms described in Section I) that has an effect on the object, which will be the same as the transform itself. All other primitive transforms will simply be the identity matrix",{"@attributes":{"id":"p-0132","num":"0136"},"maths":{"@attributes":{"id":"MATH-US-00016","num":"00016"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mi":["e","g"],"mo":[".","."]},{"mrow":[{"msub":{"mi":["T","N"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}],"mo":"\u2062"}],"mo":"="}],"mo":","}},"mo":"."}}},"br":{}},"Next, process  selects (at ) a primitive transform. In some embodiments, an order of application is defined for the primitive transforms (e.g., when the transforms do not commute), and the process selects the transforms in this particular order. Even when the primitive transforms commute, an order may be defined for the primitive transforms to correspond to the indices of an array defined for the graphic object that indicates whether each primitive transform applies to the particular graphic object.","The process determines (at ) whether to apply the selected primitive transform to the object. In some embodiments, the process uses a value stored in an array associated with the object to determine whether to apply the selected primitive transform. As described, an array (such as illustrated in table  of ) indicates the participation state of the object for each primitive transform. If the participation state is set to \u201con\u201d, then the primitive transform is applied to the object. If the participation state is set to \u201coff\u201d, then the primitive transform is not applied to the object. Some embodiments represent these states as a value of 1 for \u201con\u201d and a value of 0 for \u201coff\u201d.","When the object's participation state for the transform is set to \u201con\u201d, then the process applies (at ) the primitive transform to the object. The process then determines (at ) whether any more primitive transforms remain for the object. The process cycles through operations - for each of the primitive transforms defined for the transform class to which the received transform belongs. Thus, for the primitive transforms described above for 2D affine transforms, the process  would perform operations - five times each. The process then ends.","As mentioned,  illustrates the graphic object in six stages - as the various primitive transforms are applied. Coordinate axes are illustrated at each stage to indicate the relative location, orientation, and size of the object. The first stage  shows the graphic object before the transform is applied. The second stage  illustrates the graphic object  after T(reflection). Because the participation state for Tin table  is set to \u201coff\u201d, no transform is applied at this stage and the object is in the same position.","The third stage  illustrates the graphic object  after the application of primitive transform T(rotation). In this case, the transform rotates object  by approximately 10\u00b0 to the left. Next, stage  shows the graphic object  after T(distortion). As with T, the participation state for Tis set to \u201coff\u201d, so no distortion transform is applied to the object.","Stage  illustrates the graphic object  scaled by a factor of approximately 1.33. The graphic object has its center at the same location as the previous stages, but is significantly larger at this stage. Finally, stage  illustrates the object  after the application of T(translation). The translation factor of the transform moves the graphic object down and to the right.","As shown by the bold arrow, the sixth stage  illustrates the application of the primitive transforms of the transform T in which graphic object  participates. Some embodiments, rather than applying each transform separately, identify the primitive transforms in which the object participates and then calculate a composition of the identified primitive transforms to apply to the object. The sixth stage  illustrates the application of such a modified transform. , described below, illustrates an example of such a recomposition process in detail.","The process  illustrates the application of a transform to a single graphic object. However, in many situations, a transform will be applied to an entire layout that includes numerous objects. For instance, a user might zoom in on an online map that includes various images as well as user interface items, all of which may have different sets of participation states for a set of primitive transforms (e.g., identification markers that will translate with the map but not rotate or scale, and a compass symbol that will rotate with the map but not scale or translate).",{"@attributes":{"id":"p-0141","num":"0145"},"figref":"FIG. 17","b":["1700","1700","1500","1700"]},"The process  will be described in part by reference to , which illustrates a layout  that includes three graphic objects  (a square),  (a triangle), and  (a circle). Rather than illustrating the transformation of the layout in a series of numerous stages,  shows two stages  and , before and after the application of a 2D affine transformation T. In this case, as shown in the figure, the transformation T is represented by the following equation:",{"@attributes":{"id":"p-0143","num":"0147"},"maths":{"@attributes":{"id":"MATH-US-00017","num":"00017"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"T","mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}},{"mrow":[{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mn":"2"},{"mn":"1"}]},{"mtd":[{"mn":"1"},{"mn":"2"}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}],"mo":"\u2062"},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mn":"1"}},{"mtd":{"mn":"1"}}]}}],"mo":"+"}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"42"}}]}}}}},{"@attributes":{"id":"p-0144","num":"0148"},"figref":"FIG. 18","b":["1830","1805","1815","1830","1805","1810","1815"],"sub":["1","5 ","4 ","2","3","5 ","3 "]},"As mentioned above, each of the graphic objects might have been defined by a software designer to have the illustrated participation states for the five primitive transforms. Thus, any layout that includes one or more of the illustrated graphic objects - may be transformed by any software application and the graphic objects will only be affected by the primitive transforms in which they participate. As described, when the software designer defines the graphic object, they may define the appearance, interaction properties, or other properties of the graphic object, along with the participation states. In some embodiments, the different graphic objects are defined by different software designers (e.g., different companies) and can be transformed by software agents from different software designers.","In some embodiments, the process  is performed by one or more methods on an adaptive drawing object (e.g., methods to decompose a transform, methods to re-compose a transform using a given set of participation states, methods to apply the transform to the object, etc.) in response to a command from such a software agent to modify an adaptive drawing object (e.g., layout ) for display on an electronic display device. The layout may be an entire screen, a window within a screen, etc. As shown in , the process  begins by receiving (at ) a layout of objects and a transform to apply to the layout. In some embodiments, the transform may be any transform in any class (e.g., 2D affine transforms, 3D non-affine transforms, etc.) for which a decomposition is defined. Some embodiments restrict the type of transforms for which process  can be performed to a specific class of transforms. In some embodiments, the received transform is defined by a matrix operation to be performed on each coordinate in the graphic object (e.g., Equation (1) from the previous section). The transform may be the result of user input in some cases (e.g., user input to zoom in on a portion of a layout). The objects to which the process applies the transform may include user interface items (e.g., a slider, an icon, selection handles, etc.), text content, graphical content (an image, vector graphics, etc.), or any other displayed object. In the example illustrated in , the layout  includes three items, the square , triangle , and circle , as mentioned above. The transform T is represented by Equation (42), shown above.","The process  next decomposes (at ) the received transform into a set of primitive transforms. Some embodiments define the decomposition in advance, as described above in Section I (e.g., by equations (2)-(18)). The decomposition defines primitive transform matrix operations based on the values of the matrix operation of the received transform. For example, a transform that performs rotation only will only have one primitive transform (using the example for 2D affine transforms described in Section I) that has an effect on the object, which will be the same as the transform itself. All other primitive transforms will simply be the identity matrix",{"@attributes":{"id":"p-0148","num":"0152"},"maths":{"@attributes":{"id":"MATH-US-00018","num":"00018"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mi":["e","g"],"mo":[".","."]},{"mrow":[{"msub":{"mi":["T","N"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}],"mo":"\u2062"}],"mo":"="}],"mo":","}},"mo":"."}}},"br":{}},"In the example of layout , the 2D affine transform T is decomposed into the five primitive transforms described in Section I. Using the equations given in Section I, the parameters for this transform are \u03c3=1, \u03c8=\u03c0\/4=45\u00b0 (although ad\u2212bc\u22670, so there is no reflection), \u03c6=\u03c0\/4=45\u00b0, \u03b8=0, \u03bb=\u221a3=1.73, \u03b1=\u221a3, \u03b2=1\/\u221a3, \u03bc=x+y+1, and \u03bd=x+y+1. Thus, the applied transform decomposes into no reflection or rotation, a distortion that stretches objects by a factor of \u221a3 along a 45\u00b0 axis and squeezes the objects by a factor of 1\/\u221a3 along the 135\u00b0 axis, a scale that increases the size of objects by a factor of \u221a3, and a translation that translates the objects by x+y+1 along both the x axis and the y axis.","The process  selects (at ) a primitive transform. In some embodiments, an order of application is defined for the primitive transforms (e.g., if the transforms do not commute), and the process selects the transforms in this particular order. Even when the primitive transforms commute, an order may be defined for the primitive transforms to correspond to the indices of arrays defined for the graphic objects that indicate whether each primitive transform applies to the different graphic objects (e.g., the arrays represented by table  of ).","The process then selects (at ) one of the objects in the layout. Some embodiments select the graphic objects based on a drawing order for the layout; that is, a specification as to the order in which the various objects are drawn. In some embodiments, there is only a drawing order when the layout is a single entity itself (e.g., a page of a document, a web page, etc.), as opposed to an amalgam of graphic objects provided by different entities. Some embodiments select the graphic objects in an order from top left of the layout towards bottom right, or in some other visual order. Some embodiments select the graphic objects in a random order, and in some cases the order selected is dependent on the layout (e.g., randomly ordered for certain layouts and based on a drawing order or visual order for other layouts).","With an object selected for the current primitive transform, the process determines (at ) whether the selected transform is turned off for the selected object. As described, the graphic objects of some embodiments have a set of participation states defined (e.g., as an array associated with the graphic object). When the participation state for a particular primitive transform is set to \u201coff\u201d, the particular primitive transform does not affect the object. For instance, as shown in table , the triangle  is not affected by primitive transforms Tand T(reflection and scaling). In some cases, participation states may not be defined for a particular graphic object. In such a case, some embodiments automatically apply all primitive transforms to the particular graphic object.","When the current transform is not turned off for the object, the process applies (at ) the selected transform to the selected object. In some embodiments, this is a matrix operation performed for each point of the object (or a set of points of the object that define the object). The process then determines (at ) whether any more objects remain in the layout to which the currently selected primitive transform has not been applied. In the example of , the process  would apply the transform to each of the three objects, unless of course the transform is one that is turned off for one or more of the objects. For instance, the process would apply the first transform (reflection) to the square  and the circle , although there is no reflection for the given transform because the value ad\u2212bc is positive. When additional graphic objects remain, the process returns to  to select the next object in the layout.","Once the primitive transform is applied (or not applied, in the case of \u201coff\u201d participation states) to each of the objects in the layout, the process  determines (at ) whether additional primitive transforms remain for the process to perform. When additional primitive transforms remain, the process returns to  to select the next primitive transform.","Once all of the primitive transforms are applied according to the participation states of the graphic objects in the layout, a new transformed version of the layout has been generated. The process  then displays (at ) the transformed layout, or a portion of the transformed layout that fits in the display. In some embodiments, this entails sending the layout to a module that prepares the layout for display on a particular display device, or sending the layout to the display device itself. Due to the transforms, some of the graphic objects in the layout may be moved to a position that does not fit in the display. For instance, if the transform is a zoom operation with a fixed display, objects towards the edge of the layout may be moved out of the display.","Stage  of  illustrates the layout  after the application of the transform T represented by Equation (42) to the layout. As described above, this transform stretches objects by a factor of \u221a3 along a 45\u00b0 axis and squeezes the objects by a factor of 1\/\u221a3 along the 135\u00b0 axis, increases the size of objects by a factor of \u221a3, and translates the objects by x+y+1 along both the x axis and the y axis (where xand yare the coordinates of an object's center). Due to the participation state arrays for the objects that are shown in table , only the transforms Tand T(distortion and translation) affect the square  and triangle , while only the transforms Tand T(scaling and translation) affect the circle .","The layout at stage  shows that the square  and triangle  have been distorted (and in fact, the object  is no longer a square as a result of this distortion) and the circle  is now larger. In addition, the objects have all moved up and to the right. In this case, the origin of the coordinate system is in the bottom left corner of the layout, so the square  moves further (as its xand yvalues are larger).","As described above, the processes  and  describe each primitive transform being applied separately to the graphic objects. Some embodiments, however, use the original transform and the participation states of a graphic object to generate a transform particular to the graphic object.  conceptually illustrates such a process  of some embodiments for applying a transform (that falls into a class for which primitive transforms have been defined) to a layout with one or more graphic objects.","Like processes  and , the process  is performed by one or more methods on an adaptive drawing object (e.g., methods to decompose a transform, methods to re-compose a transform using a given set of participation states, methods to apply the transform to the object, etc.) in response to a command from such a software agent to modify an adaptive drawing object (e.g., layout ) for display on an electronic display device. The layout may be an entire screen, a window within a screen, etc. As shown, the process  begins by receiving (at ) a layout of objects and a transform to apply to the layout. In some embodiments, the transform may be any transform in any class (e.g., 2D affine transforms, 3D non-affine transforms, etc.) for which a decomposition is defined. Some embodiments restrict the type of transforms for which process  can be performed to a specific class of transforms. In some embodiments, the received transform is defined by a matrix operation to be performed on each coordinate in the graphic object (e.g., Equation (1) from the previous section). The transform may be the result of user input in some cases (e.g., user input to zoom in on a portion of a layout). The objects to which the process applies the transform may include user interface items (e.g., a slider, an icon, selection handles, etc.), text content, graphical content (an image, vector graphics, etc.), or any other displayed object.","The process  next decomposes (at ) the received transform into a set of primitive transforms. Some embodiments define the decomposition in advance, as described above in Section I (e.g., by equations (2)-(18)). The decomposition defines primitive matrix operations based on the values of the matrix operations of the received transform. For example, a transform that performs rotation only will only have one primitive transform (using the example for 2D affine transforms described in Section I) that has an effect on the object, which will be the same as the transform itself. However, often a rotation transformation will actually involve rotating an entire layout about a point that is not the object center for some objects. In such a case, the transformation will actually decompose into both a rotation about the center of the object and a translation.","In the example of layout , the 2D affine transform is decomposed into the five primitive transforms described in Section I. As described above by reference to process , the parameters for this transform are \u03c3=1, \u03c8=\u03c0\/4=45\u00b0 (although ad\u2212bc\u22670, so there is no reflection), \u03c6=\u03c0\/4=45\u00b0, \u03b8=0, \u03bb=\u221a3\u22481.73, \u03b1=\u221a3, \u03b2=1\/\u221a3, \u03bc=x+y+1, and \u03bd=x+y+1. The five transforms are as follows:",{"@attributes":{"id":"p-0162","num":"0166"},"maths":{"@attributes":{"id":"MATH-US-00019","num":"00019"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mstyle":{"mspace":{"@attributes":{"width":"4.4em","height":"4.4ex"}}},"mo":"\u2062","mrow":{"mrow":[{"mrow":[{"msub":{"mi":"T","mn":"1"},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}],"mo":"\u2062"}],"mo":"="},{"mrow":{"mrow":{"mi":["the","identity","transform","as","there","is","no","reflection","because","ad","bc"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"1.1em","height":"1.1ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mtext":"-"}],"mrow":[{"mstyle":[{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mo":"\u2062"},{"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mo":"\u2062"}]},"mo":"\u2265","mn":"0"},"mo":";"}],"mo":[",","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"21.9em","height":"21.9ex"}}},{"mtext":{}}]}}},{"mrow":{"mo":["(",")"],"mn":"43"}}]},{"mtd":[{"mrow":{"mrow":{"mrow":[{"mrow":[{"msub":{"mi":"T","mn":"2"},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}},{"mrow":[{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":["x","c"]}}},{"mtd":{"msub":{"mi":["y","c"]}}}]}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"0"}},{"mrow":{"mi":"sin","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"0"}}]},{"mtd":[{"mrow":{"mi":"sin","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"0"}},{"mrow":{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"0"}}]}]}},{"mo":["(",")"],"mrow":{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msub":{"mi":["x","c"]}}}},{"mtd":{"mrow":{"mo":"-","msub":{"mi":["y","c"]}}}}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}],"mo":"+"}}],"mo":"\u2218"}],"mo":"+"},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}],"mo":"\u2062"}],"mo":"="}],"mo":"="},{"mrow":{"mi":["also","the","identity","transform"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}]},"mo":";"}],"mo":[",","\u2062","\u2062"],"mstyle":[{"mtext":{}},{"mspace":{"@attributes":{"width":"1.1em","height":"1.1ex"}}}]},"mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"20.em","height":"20.ex"}}}}},{"mrow":{"mo":["(",")"],"mn":"44"}}]},{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":"T","mn":"3"},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}},{"mrow":[{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":["x","c"]}}},{"mtd":{"msub":{"mi":["y","c"]}}}]}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"\u03c0","mo":"\/","mn":"4"}}},{"mrow":{"mrow":[{"mo":"-","mi":"sin"},{"mi":"\u03c0","mo":"\/","mn":"4"}],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}]},{"mtd":[{"mrow":{"mi":"sin","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"\u03c0","mo":"\/","mn":"4"}}},{"mrow":{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"\u03c0","mo":"\/","mn":"4"}}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"msqrt":{"mn":"3"}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mfrac":{"mn":"1","msqrt":{"mn":"3"}}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":"cos","mo":"-","mrow":{"mi":"\u03c0","mo":"\/","mn":"4"}}},{"mrow":{"mrow":[{"mo":"-","mi":"sin"},{"mi":"\u03c0","mo":"\/","mn":"4"}],"mo":["-","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}]},{"mtd":[{"mrow":{"mi":"sin","mo":"-","mrow":{"mi":"\u03c0","mo":"\/","mn":"4"}}},{"mrow":{"mi":"cos","mo":"-","mrow":{"mi":"\u03c0","mo":"\/","mn":"4"}}}]}]}},{"mo":["(",")"],"mrow":{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msub":{"mi":["x","c"]}}}},{"mtd":{"mrow":{"mo":"-","msub":{"mi":["y","c"]}}}}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}],"mo":"+"}}],"mo":["\u2218","\u2218","\u2218"]}],"mo":"+"},{"mrow":[{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":["x","c"]}}},{"mtd":{"msub":{"mi":["y","c"]}}}]}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mfrac":{"mn":"1","msqrt":{"mn":"2"}}},{"mrow":{"mo":"-","mfrac":{"mn":"1","msqrt":{"mn":"2"}}}}]},{"mtd":[{"mfrac":{"mn":"1","msqrt":{"mn":"2"}}},{"mfrac":{"mn":"1","msqrt":{"mn":"2"}}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"msqrt":{"mn":"3"}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mfrac":{"mn":"1","msqrt":{"mn":"3"}}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mfrac":{"mn":"1","msqrt":{"mn":"2"}}},{"mfrac":{"mn":"1","msqrt":{"mn":"2"}}}]},{"mtd":[{"mrow":{"mo":"-","mfrac":{"mn":"1","msqrt":{"mn":"2"}}}},{"mfrac":{"mn":"1","msqrt":{"mn":"2"}}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"x","mo":"-","msub":{"mi":["x","c"]}}}},{"mtd":{"mrow":{"mi":"y","mo":"-","msub":{"mi":["y","c"]}}}}]}}],"mo":["\u2218","\u2218","\u2218"]}],"mo":"+"},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":["x","c"]}}},{"mtd":{"msub":{"mi":["y","c"]}}}]}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mfrac":{"mn":"2","msqrt":{"mn":"3"}}},{"mrow":{"mo":"-","mfrac":{"mn":"1","msqrt":{"mn":"3"}}}}]},{"mtd":[{"mfrac":{"mn":"1","msqrt":{"mn":"3"}}},{"mfrac":{"mn":"2","msqrt":{"mn":"3"}}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"x","mo":"-","msub":{"mi":["x","c"]}}}},{"mtd":{"mrow":{"mi":"y","mo":"-","msub":{"mi":["y","c"]}}}}]}}],"mo":"\u2218"}],"mo":"+"}],"mo":"="}],"mo":"="}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"45"}}]},{"mtd":[{"mrow":{"mstyle":[{"mspace":{"@attributes":{"width":"4.4em","height":"4.4ex"}}},{"mspace":{"@attributes":{"width":"10.3em","height":"10.3ex"}}}],"mo":["\u2062","\u2062"],"mrow":{"mrow":[{"msub":{"mi":"T","mn":"4"},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":["x","c"]}}},{"mtd":{"msub":{"mi":["y","c"]}}}]}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"msqrt":{"mn":"3"}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"msqrt":{"mn":"3"}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"x","mo":"-","msub":{"mi":["x","c"]}}}},{"mtd":{"mrow":{"mi":"y","mo":"-","msub":{"mi":["y","c"]}}}}]}}],"mo":"\u2218"}],"mo":"+"}],"mo":["=","\u2062"],"mi":{}}}},{"mrow":{"mo":["(",")"],"mn":"46"}}]},{"mtd":[{"mrow":{"mstyle":[{"mspace":{"@attributes":{"width":"4.4em","height":"4.4ex"}}},{"mspace":{"@attributes":{"width":"16.1em","height":"16.1ex"}}}],"mo":["\u2062","\u2062"],"mrow":{"mrow":[{"msub":{"mi":"T","mn":"5"},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"msub":[{"mi":["x","c"]},{"mi":["y","c"]}],"mo":["+","+"],"mn":"1"}}},{"mtd":{"mrow":{"msub":[{"mi":["x","c"]},{"mi":["y","c"]}],"mo":["+","+"],"mn":"1"}}}]}}],"mo":"+"}],"mo":["=","\u2062"],"mi":{}}}},{"mrow":{"mo":["(",")"],"mn":"47"}}]}]}}}},"As can be seen, the rotation and reflection transforms are just the identity matrix, so there is no rotation or reflection. The distortion, scaling, and translation matrices, however, will have an effect on the layout objects , , and .","After decomposing the received transform, the process  diverges from the previously described process  of . The process  selects (at ) an object from the layout. Some embodiments select the graphic objects based on a drawing order for the layout; that is, a specification as to the order in which the various objects are drawn. In some embodiments, there is only a drawing order when the layout is a single entity itself (e.g., a page of a document, a web page, etc.), as opposed to an amalgam of graphic objects provided by different entities. Some embodiments select the graphic objects in an order from top left of the layout towards bottom right, or in some other visual order. Some embodiments select the graphic objects in a random order, and in some cases the order selected is dependent on the layout (e.g., randomly ordered for certain layouts and based on a drawing order or visual order for other layouts).","The process then selects (at ) a primitive transform. In some embodiments, an order of application is defined for the primitive transforms (e.g., if the transforms do not commute), and the process selects the transforms in this particular order. Even when the primitive transforms commute, an order may be defined for the primitive transforms to correspond to the indices of arrays defined for the graphic objects that indicate whether each primitive transform applies to the different graphic objects (e.g., the arrays represented by table  of ).","For the current graphic object, the process determines (at ) whether the selected transform is turned off. As described, the graphic objects of some embodiments have a set of participation states defined (e.g., as an array associated with the graphic object). When the participation state for a particular primitive transform is set to \u201coff\u201d, the particular primitive transform does not affect the object. For instance, as shown in table , the triangle  is not affected by primitive transforms Tand T(reflection and scaling). In some cases, participation states may not be defined for a particular graphic object. In such cases, some embodiments automatically apply all primitive transforms to the particular graphic object.","When the selected primitive transform is turned off for the current object, the process removes (at ) the primitive transform from consideration for the graphic object. In some embodiments, the process has a default transform that includes all of the primitive transforms (e.g., T\u00b7T\u00b7T\u00b7T\u00b7T), but from which primitive transforms can be removed for a particular object in accordance with the participation states of the particular object.","Next, the process determines (at ) whether more primitive transforms remain for the currently selected graphic object. The process cycles through each of the primitive transforms, determining the participation state of the graphic object and removing any primitive transforms for which the participation state is set to \u201coff\u201d. In some embodiments, this involves reading the participation states out of an array and modifying the transform as necessary.","Once the process has identified the participation states for the graphic object and removed any necessary transforms, the process generates (at ) a new transform as a composition of the unremoved primitive transforms for the graphic object. The process then applies (at ) the new generated transform to the graphic object. In the example of , the primitive transforms are given by Equations (43)-(47). Using these, and noting that Tand Tare the identity function, the transforms applied to the three graphic objects of layout  are:",{"@attributes":{"id":"p-0170","num":"0174"},"maths":{"@attributes":{"id":"MATH-US-00020","num":"00020"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":{"mrow":[{"msub":{"mi":["T","s"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}},{"mrow":[{"msub":[{"mi":"T","mn":"5"},{"mi":"T","mn":"3"},{"mi":"T","mn":"2"}],"mo":["\u2218","\u2218","\u2218"],"mrow":{"msub":{"mi":"T","mn":"1"},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}}},{"mrow":[{"msub":{"mi":"T","mn":"5"},"mo":"\u2218","mrow":{"msub":{"mi":"T","mn":"3"},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}}},{"mrow":[{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"msub":[{"mi":["x","c"]},{"mi":["y","c"]}],"mo":["+","+"],"mn":"1"}}},{"mtd":{"mrow":{"msub":[{"mi":["x","c"]},{"mi":["y","c"]}],"mo":["+","+"],"mn":"1"}}}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":["x","c"]}}},{"mtd":{"msub":{"mi":["y","c"]}}}]}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mfrac":{"mn":"2","msqrt":{"mn":"3"}}},{"mfrac":{"mn":"1","msqrt":{"mn":"3"}}}]},{"mtd":[{"mfrac":{"mn":"1","msqrt":{"mn":"3"}}},{"mfrac":{"mn":"2","msqrt":{"mn":"3"}}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"x","mo":"-","msub":{"mi":["x","c"]}}}},{"mtd":{"mrow":{"mi":"y","mo":"-","msub":{"mi":["y","c"]}}}}]}}],"mo":"\u2218"}],"mo":["+","+"]},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mn":"2","mo":"\u2062","msub":{"mi":["x","c"]}},"mo":["+","+"],"msub":{"mi":["y","c"]},"mn":"1"}}},{"mtd":{"mrow":{"msub":{"mi":["x","c"]},"mo":["+","+"],"mrow":{"mn":"2","mo":"\u2062","msub":{"mi":["y","c"]}},"mn":"1"}}}]}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mfrac":{"mn":"2","msqrt":{"mn":"3"}}},{"mfrac":{"mn":"1","msqrt":{"mn":"3"}}}]},{"mtd":[{"mfrac":{"mn":"1","msqrt":{"mn":"3"}}},{"mfrac":{"mn":"2","msqrt":{"mn":"3"}}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"x","mo":"-","msub":{"mi":["x","c"]}}}},{"mtd":{"mrow":{"mi":"y","mo":"-","msub":{"mi":["y","c"]}}}}]}}],"mo":"\u2218"}],"mo":"+"}],"mo":"="}],"mo":["=","\u2062"],"mi":{}}],"mo":"="}],"mo":"="},"mo":";"}},{"mrow":{"mo":["(",")"],"mn":"48"}}]},{"mtd":[{"mrow":{"mrow":{"mrow":[{"msub":{"mi":["T","t"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}},{"mrow":[{"msub":[{"mi":"T","mn":"5"},{"mi":"T","mn":"3"}],"mo":["\u2218","\u2218"],"mrow":{"msub":{"mi":"T","mn":"2"},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}}},{"mrow":[{"msub":{"mi":"T","mn":"5"},"mo":"\u2218","mrow":{"msub":{"mi":"T","mn":"3"},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}}},{"mrow":[{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"msub":[{"mi":["x","c"]},{"mi":["y","c"]}],"mo":["+","+"],"mn":"1"}}},{"mtd":{"mrow":{"msub":[{"mi":["x","c"]},{"mi":["y","c"]}],"mo":["+","+"],"mn":"1"}}}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":["x","c"]}}},{"mtd":{"msub":{"mi":["y","c"]}}}]}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mfrac":{"mn":"2","msqrt":{"mn":"3"}}},{"mfrac":{"mn":"1","msqrt":{"mn":"3"}}}]},{"mtd":[{"mfrac":{"mn":"1","msqrt":{"mn":"3"}}},{"mfrac":{"mn":"2","msqrt":{"mn":"3"}}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"x","mo":"-","msub":{"mi":["x","c"]}}}},{"mtd":{"mrow":{"mi":"y","mo":"-","msub":{"mi":["y","c"]}}}}]}}],"mo":"\u2218"}],"mo":["+","+"]},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mn":"2","mo":"\u2062","msub":{"mi":["x","c"]}},"mo":["+","+"],"msub":{"mi":["y","c"]},"mn":"1"}}},{"mtd":{"mrow":{"msub":{"mi":["x","c"]},"mo":["+","+"],"mrow":{"mn":"2","mo":"\u2062","msub":{"mi":["y","c"]}},"mn":"1"}}}]}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"mfrac":{"mn":"2","msqrt":{"mn":"3"}}},{"mfrac":{"mn":"1","msqrt":{"mn":"3"}}}]},{"mtd":[{"mfrac":{"mn":"1","msqrt":{"mn":"3"}}},{"mfrac":{"mn":"2","msqrt":{"mn":"3"}}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"x","mo":"-","msub":{"mi":["x","c"]}}}},{"mtd":{"mrow":{"mi":"y","mo":"-","msub":{"mi":["y","c"]}}}}]}}],"mo":"\u2218"}],"mo":"+"}],"mo":"="}],"mo":"="}],"mo":"="}],"mo":"="},"mo":";","mi":"and"}},{"mrow":{"mo":["(",")"],"mn":"49"}}]},{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["T","c"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}},{"mrow":[{"msub":[{"mi":"T","mn":"5"},{"mi":"T","mn":"4"},{"mi":"T","mn":"2"}],"mo":["\u2218","\u2218","\u2218"],"mrow":{"msub":{"mi":"T","mn":"1"},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}}},{"mrow":[{"msub":{"mi":"T","mn":"5"},"mo":"\u2218","mrow":{"msub":{"mi":"T","mn":"4"},"mo":"\u2061","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"mi":"y"}}]}}}},{"mrow":[{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"msub":[{"mi":["x","c"]},{"mi":["y","c"]}],"mo":["+","+"],"mn":"1"}}},{"mtd":{"mrow":{"msub":[{"mi":["x","c"]},{"mi":["y","c"]}],"mo":["+","+"],"mn":"1"}}}]}},{"mrow":[{"mo":["(",")"],"mtable":{"mtr":[{"mtd":[{"msqrt":{"mn":"3"}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"msqrt":{"mn":"3"}}]}]}},{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"x","mo":"-","msub":{"mi":["x","c"]}}}},{"mtd":{"mrow":{"mi":"y","mo":"-","msub":{"mi":["y","c"]}}}}]}}],"mo":"\u2218"}],"mo":"+"},{"mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mi":"x","mo":"\u2062","msqrt":{"mn":"3"}},{"msub":{"mi":["x","c"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","msqrt":{"mn":"3"}}}}],"mo":["+","+","+"],"msub":{"mi":["y","c"]},"mn":"1"}}},{"mtd":{"mrow":{"mrow":[{"mi":"x","mo":"\u2062","msqrt":{"mn":"3"}},{"msub":{"mi":["y","c"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","msqrt":{"mn":"3"}}}}],"mo":["+","+","+"],"msub":{"mi":["x","c"]},"mn":"1"}}}]}},"mo":"."}],"mo":"="}],"mo":"="}],"mo":"="}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"50"}}]}]}}}},"In the above equations (48)-(50), the transforms T, T, and Tare the new composed transforms that apply to the square , triangle , and circle  respectively. Despite the square  and triangle  having different sets of participation states, the applied transforms are the same because there is no reflection transform. On the other hand, the circle has a different transform due to not participating in the distortion transform but participating in the scaling transform. One of ordinary skill in the art will note that the transforms of equations (48)-(50) simplify significantly when the object is centered at the origin of the transform T's coordinate system.","In , once the new generated transform is applied to the currently selected graphic object of the layout, the process  next determines (at ) whether more objects in the layout remain to be transformed. As discussed above, some embodiments select the objects in a particular order (e.g., based on drawing order). Once all of the objects have been transformed, the process displays (at ) the transformed layout, or a portion of the transformed layout that fits in the display. In some embodiments, this entails sending the layout to a module that prepares the layout for display on a particular display device, or sending the layout to the display device itself. Due to the transforms, some of the graphic objects in the layout may be moved to a position that does not fit in the display. For instance, if the transform is a zoom operation with a fixed display, objects towards the edge of the layout may be moved out of the display.","IV. Examples of Adaptive Layouts","The above section described a number of different processes by which a software application or software agent applies a transform to a graphic object by factoring the transform into a set of primitive transforms and only applying a particular subset of the primitive transforms to the graphic object according to predefined properties of the graphic object. For instance, a software developer may design a user interface item or set of user interface items that should not participate in certain transforms that are applied to a layout including the user interface item (e.g., a zoom transform should not expand a UI item such that it takes up the entirety of a layout), regardless of the software agent acting on the user interface item.",{"@attributes":{"id":"p-0174","num":"0178"},"figref":["FIGS. 20 and 21","FIG. 20"],"b":["2000","2005","2010","2005","2015","2020","2015","2010","2000","2005","2020","2010"]},{"@attributes":{"id":"p-0175","num":"0179"},"figref":"FIG. 21","b":["2010","2105","2110","2105","2000"]},"Using this set of primitives, the zoom operation decomposes into a scaling operation and a translation operation, as there is no rotation, reflection, or distortion. The magnifying glass item, however, does not participate in either of these two operations, as the magnifying glass is a user interface item with a fixed size, the position of which should not change unless directly modified by a user. Some embodiments enable a user to turn on the scale or translation operations of the magnifying glass item via input operations applied directly to the item. For instance, in some embodiments the user can move the magnifying glass along the layout (e.g., by moving a finger over the touchscreen), a translation operation applied only to the item. Similarly, some embodiments allow the user to change the size of the magnifying glass UI item.","In addition, the magnifying glass UI item  will participate in rotations in certain situations. When the touchscreen device rotates 90\u00b0, some embodiments also rotate the entire displayed layout, including the UI item (which would not participate in the translation portion of such a transform. However, when the user rotates a layout without moving the touchscreen device itself, the magnifying glass does not participate in the rotation primitive transform.","As a result, stage  of  shows that the device  has zoomed in on the layout  about the location between the user's two fingers as shown in stage . The magnifying glass item  has not changed its position or its size, as its participation state is set to \u201coff\u201d for the two primitive transforms affecting the layout.",{"@attributes":{"id":"p-0179","num":"0183"},"figref":"FIGS. 22-24","b":["2200","2205"]},{"@attributes":{"id":"p-0180","num":"0184"},"figref":["FIG. 22","FIG. 22"],"b":["2200","2210","2220","2215","2215","2220","2205"]},{"@attributes":{"id":"p-0181","num":"0185"},"figref":"FIG. 23","b":["2200","2310","2320","2215","2200","2320","2310","2215","2205"]},"Finally,  illustrates the application of a rotation operation to map  in two stages  and . The rotation operation is centered at the location of the cursor , towards the center of the display. Through one of various possible forms of user input, the user causes a 45\u00b0 rotation of the map . As shown at stage , the map objects have rotated clockwise 45\u00b0 around the cursor . In addition, in this case, the compass rose  has also rotated 45\u00b0, but without moving from the bottom left corner of the display. This is because the rotation operation factors into both rotation and translation primitive transforms, and the compass rose  only participates in the rotation primitive transform.","The above examples (the magnifying glass UI item and the compass rose) are only two examples of objects that only participate in a subset of primitive transforms. Another such set of graphic objects are selection handles that do not scale or distort, but rotate, reflect, and translate with selected objects in a layout. Also, an orientation tool in a 3D universe (e.g., a compass plus plumb line) would participate in rotations in all dimensions, but not translations, scaling, or distortions, similar to the compass rose .","V. Software Architecture","In some embodiments, the processes described above are implemented as software running on a particular machine, such as a computer or a handheld device, or stored in a computer readable medium.  conceptually illustrates the software architecture of a layout transformation module  of some embodiments. In some embodiments, the various component modules are methods on an adaptive drawing object.","In some embodiments, the layout transformation module  is a stand-alone application or is integrated into an application, while in other embodiments the application might be implemented within an operating system. Furthermore, in some embodiments, the module is provided as part of a server-based solution. In some such embodiments, the module is provided via a thin client. That is, the module runs on a server (e.g., as part of an application operating on the server) while a user interacts with the application via a separate machine remote from the server. In other such embodiments, the module is provided via a thick client. That is, the module is distributed from the server (e.g., as part of an application distributed from the server) to the client machine and runs on the client machine.","The layout transformation module  includes a transform identification module , a transform decomposition module , an adaptive drawing reader , a recomposition module , and a transform application module . In addition, the layout transformation module  uses primitive transform definitions  and object definitions . The primitive transform definitions  store definitions of one or more sets of primitive transforms that specify how to derive the primitive transforms from a generic transform for a particular class of transforms. The set of primitive transforms described above in Section I for 2D affine transforms, and the definitions of the associated parameters for the generic 2D affine transform, is one example of the information stored in the primitive transformation definitions . In some embodiments, these primitive transform definitions are actually part of the transform decomposition module  and are not stored separately.","The object definitions  of some embodiments store definitions of adaptive drawing objects. These may include the definitions of the various graphic objects in a particular adaptive drawing object. The graphic object definitions may include definitions of the appearance of various objects, how a user interacts with the objects, and one or more sets of participation states for the objects that indicate whether the object participates in the different primitive transforms. In some embodiments, the primitive transform definitions  and the object definitions  are stored in one physical storage. In other embodiments, the definitions are stored in separate physical storages; the definitions of different graphic objects may even be stored in separate physical storages. The adaptive drawing objects may be stored in either a serialized format or an in-memory representation in different embodiments.",{"@attributes":{"id":"p-0188","num":"0192"},"figref":"FIG. 25","b":["2555","2560","2565","2540","2500","2555","2560","2540"]},"The present patent application describes a number of different graphical user interfaces that provide users with numerous ways to perform different sets of operations and functionalities. In some embodiments, these operations and functionalities are performed based on different commands that are received from users through different input devices (e.g., keyboard, trackpad, touchpad, mouse, etc.). For example, some examples in the present application describe the use of a cursor in the graphical user interface to control (e.g., select, move) objects in the graphical user interface. However, in some embodiments, objects in the graphical user interface can also be controlled or manipulated through other controls, such as touch control (as illustrated in other examples in the present application). In some embodiments, touch control is implemented through an input device that can detect the presence and location of touch on a display of the device. An example of such a device is a touch screen device. In some embodiments, with touch control, a user can directly manipulate objects by interacting with the graphical user interface that is displayed on the display of the touch screen device. For instance, a user can select a particular object in the graphical user interface by simply touching that particular object on the display of the touch screen device. As such, when touch control is utilized, a cursor may not even be provided for enabling selection of an object of a graphical user interface in some embodiments. However, when a cursor is provided in a graphical user interface, touch control can be used to control the cursor in some embodiments.","The display module  translates the output of a user interface for a display device. That is, the display module  receives signals (e.g., from the external application ) describing what should be displayed and translates these signals into pixel information that is sent to the display device. The display device may be an LCD, plasma screen, CRT monitor, touchscreen, etc.","The external application  may be any software agent that can use an adaptive drawing object. The external application receives input from the input device drivers () or acts on its own to send a command through an API to act on an adaptive drawing object. The command may include one or more transforms to perform on the adaptive drawing object before displaying the object.","The transform identification module  receives the command from the external application  and identifies the transform being applied to the adaptive drawing object. In some embodiments, this entails identifying a matrix representation for the transform as well as a transform class to which the transform belongs. For instance, for a 2D affine transform, the transform identification module  would identify variables a-f from Equation (1) and also would identify that the transform belongs to the class of 2D affine transforms. In some embodiments, the transform identification module  is unnecessary because the command is passed as a function call to a particular method that performs a particular class of transform, with the function call having the variables of the transform as arguments.","The transform decomposition module  receives the identified transform from the transform identification module  and decomposes the module into its primitive transforms using a particular set of primitive transforms for the identified transform class. The decomposition module  retrieves the primitive transform definitions from the storage  in order to perform the decomposition. Using the example of a 2D affine transform, the decomposition module  would retrieve the definitions of Equations (2)-(18) from storage  and use these to identify matrix representations for the five transforms T-T. In some embodiments, multiple such modules are defined, each for a different set of primitive transforms for different transform classes (e.g., one module for 2D affine transforms, another module for orthographic transforms, another module for 3D perspective transforms, etc.).","The recomposition module  generates a new transformation for each individual graphic object in the adaptive drawing object being modified. The recomposition module receives a list of graphic objects to which a particular transform is to be applied from the external application  as well as the primitive transformations from the decomposition module . The recomposition module generates the new transformation for a particular object based on the participation states of the object for the primitive transforms (e.g., as described above by reference to process  of ).","To identify the participation states for a particular graphic object as well as the transforms that have been applied leading up to the current transform, the recomposition module  uses the adaptive drawing reader . The adaptive drawing reader  retrieves participation states and other operations applied to an object from the object definition . As mentioned, these participation states may be stored in an array associated with the object in some embodiments, or are stored as a set of operations modifying a default state in which the object participates in all transforms. The adaptive drawing reader  reads this information and passes data to the recomposition module  indicating the primitive transforms in which the particular object participates and the current state of the particular object.","The transform application module  applies the recomposed transforms to the graphic objects. That is, the transform application module receives a generated transform for a particular object from the recomposition module  and applies the transform to the particular object. In some embodiments, this entails applying a matrix transformation to each point of the graphic object, or a particular set of points used to define the graphic object. The new display information for the graphic object is then passed to the UI interaction module  for incorporation into a final layout.","While many of the features have been described as being performed by one module (e.g., the recomposition module , the transformation module , etc.), one of ordinary skill in the art will recognize that the functions described herein might be split up into multiple modules. Similarly, functions described as being performed by multiple different modules might be performed by a single module in some embodiments (e.g., the adaptive drawing reader  and the recomposition module  might be one module). Furthermore, one of ordinary skill will recognize that the modules shown might all be packaged together a various methods that are part of a single module.","VI. Electronic System","Many of the above-described features and applications are implemented as software processes that are specified as a set of instructions recorded on a computer readable storage medium (also referred to as computer readable medium). When these instructions are executed by one or more computational or processing unit(s) (e.g., one or more processors, cores of processors, or other processing units), they cause the processing unit(s) to perform the actions indicated in the instructions. Examples of computer readable media include, but are not limited to, CD-ROMs, flash drives, random access memory (RAM) chips, hard drives, erasable programmable read only memories (EPROMs), electrically erasable programmable read-only memories (EEPROMs), etc. The computer readable media does not include carrier waves and electronic signals passing wirelessly or over wired connections.","In this specification, the term \u201csoftware\u201d is meant to include firmware residing in read-only memory or applications stored in magnetic storage which can be read into memory for processing by a processor. Also, in some embodiments, multiple software inventions can be implemented as sub-parts of a larger program while remaining distinct software inventions. In some embodiments, multiple software inventions can also be implemented as separate programs. Finally, any combination of separate programs that together implement a software invention described here is within the scope of the invention. In some embodiments, the software programs, when installed to operate on one or more electronic systems, define one or more specific machine implementations that execute and perform the operations of the software programs.",{"@attributes":{"id":"p-0200","num":"0204"},"figref":"FIG. 26","b":["2600","2600","2600","2605","2610","2615","2620","2625","2630","2635","2640","2645"]},"The bus  collectively represents all system, peripheral, and chipset buses that communicatively connect the numerous internal devices of the electronic system . For instance, the bus  communicatively connects the processing unit(s)  with the read-only memory , the GPU , the system memory , and the permanent storage device .","From these various memory units, the processing unit(s)  retrieves instructions to execute and data to process in order to execute the processes of the invention. The processing unit(s) may be a single processor or a multi-core processor in different embodiments. Some instructions are passed to and executed by the GPU . The GPU  can offload various computations or complement the image processing provided by the processing unit(s) . In some embodiments, such functionality can be provided using CoreImage's kernel shading language.","The read-only-memory (ROM)  stores static data and instructions that are needed by the processing unit(s)  and other modules of the electronic system. The permanent storage device , on the other hand, is a read-and-write memory device. This device is a non-volatile memory unit that stores instructions and data even when the electronic system  is off. Some embodiments of the invention use a mass-storage device (such as a magnetic or optical disk and its corresponding disk drive) as the permanent storage device .","Other embodiments use a removable storage device (such as a floppy disk, flash memory device, etc., and its corresponding disk drive) as the permanent storage device. Like the permanent storage device , the system memory  is a read-and-write memory device. However, unlike storage device , the system memory  is a volatile read-and-write memory, such a random access memory. The system memory  stores some of the instructions and data that the processor needs at runtime. In some embodiments, the invention's processes are stored in the system memory , the permanent storage device , and\/or the read-only memory . For example, the various memory units include instructions for processing multimedia clips in accordance with some embodiments. From these various memory units, the processing unit(s)  retrieves instructions to execute and data to process in order to execute the processes of some embodiments.","The bus  also connects to the input and output devices  and . The input devices  enable the user to communicate information and select commands to the electronic system. The input devices  include alphanumeric keyboards and pointing devices (also called \u201ccursor control devices\u201d), cameras (e.g., webcams), microphones or similar devices for receiving voice commands, etc. The output devices  display images generated by the electronic system or otherwise output data. The output devices  include printers and display devices, such as cathode ray tubes (CRT) or liquid crystal displays (LCD), as well as speakers or similar audio output devices. Some embodiments include devices such as a touchscreen that function as both input and output devices.","Finally, as shown in , bus  also couples electronic system  to a network  through a network adapter (not shown). In this manner, the computer can be a part of a network of computers (such as a local area network (\u201cLAN\u201d), a wide area network (\u201cWAN\u201d), or an Intranet, or a network of networks, such as the Internet. Any or all components of electronic system  may be used in conjunction with the invention.","Some embodiments include electronic components, such as microprocessors, storage and memory that store computer program instructions in a machine-readable or computer-readable medium (alternatively referred to as computer-readable storage media, machine-readable media, or machine-readable storage media). Some examples of such computer-readable media include RAM, ROM, read-only compact discs (CD-ROM), recordable compact discs (CD-R), rewritable compact discs (CD-RW), read-only digital versatile discs (e.g., DVD-ROM, dual-layer DVD-ROM), a variety of recordable\/rewritable DVDs (e.g., DVD-RAM, DVD-RW, DVD+RW, etc.), flash memory (e.g., SD cards, mini-SD cards, micro-SD cards, etc.), magnetic and\/or solid state hard drives, read-only and recordable Blu-Ray\u00ae discs, ultra density optical discs, any other optical or magnetic media, and floppy disks. The computer-readable media may store a computer program that is executable by at least one processing unit and includes sets of instructions for performing various operations. Examples of computer programs or computer code include machine code, such as is produced by a compiler, and files including higher-level code that are executed by a computer, an electronic component, or a microprocessor using an interpreter.","While the above discussion primarily refers to microprocessor or multi-core processors that execute software, some embodiments are performed by one or more integrated circuits, such as application specific integrated circuits (ASICs) or field programmable gate arrays (FPGAs). In some embodiments, such integrated circuits execute instructions that are stored on the circuit itself. In addition, some embodiments execute software stored in programmable logic devices (PLDs), ROM, or RAM devices.","As used in this specification and any claims of this application, the terms \u201ccomputer\u201d, \u201cserver\u201d, \u201cprocessor\u201d, and \u201cmemory\u201d all refer to electronic or other technological devices. These terms exclude people or groups of people. For the purposes of the specification, the terms display or displaying means displaying on an electronic device. As used in this specification and any claims of this application, the terms \u201ccomputer readable medium,\u201d \u201ccomputer readable media,\u201d and \u201cmachine readable medium\u201d are entirely restricted to tangible, physical objects that store information in a form that is readable by a computer. These terms exclude any wireless signals, wired download signals, and any other ephemeral signals.","While the invention has been described with reference to numerous specific details, one of ordinary skill in the art will recognize that the invention can be embodied in other specific forms without departing from the spirit of the invention. In addition, a number of the figures (including , , , , , and ) conceptually illustrate processes. The specific operations of these processes may not be performed in the exact order shown and described. The specific operations may not be performed in one continuous series of operations, and different specific operations may be performed in different embodiments. Furthermore, the process could be implemented using several sub-processes, or as part of a larger macro process. Thus, one of ordinary skill in the art would understand that the invention is not to be limited by the foregoing illustrative details, but rather is to be defined by the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The novel features of the invention are set forth in the appended claims. However, for purpose of explanation, several embodiments of the invention are set forth in the following figures.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3","sub":"1 "},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4","sub":"2 "},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5","sub":"3 "},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6","sub":"4 ","b":"300"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7","sub":"5 "},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 10","FIG. 9"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 12","FIG. 9"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 13","FIG. 9"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIGS. 20 and 21"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIGS. 22-24"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 26"}]},"DETDESC":[{},{}]}
