---
title: Method and related management architecture for managing bundles in an open services gateway initiative service platform
abstract: A method for managing a plurality of bundles in an open services gateway initiative service platform includes adding the plurality of bundles into a service list and generating configuration files corresponding to the plurality of bundles, storing the configuration files, updating a status corresponding to a first bundle of the plurality of bundles in the service list when the first bundle is initiated, and loading a configuration file corresponding to the first bundle.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08667484&OS=08667484&RS=08667484
owner: Wistron Corporation
number: 08667484
owner_city: Hsichih, New Taipei
owner_country: TW
publication_date: 20090618
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","The present invention is related to a method and related management architecture for managing bundles in an open services gateway initiative service platform, and more particularly, to a method and related management architecture for improving a modular level, communicative ability and transplantation ability in the open services gateway initiative service platform.","2. Description of the Prior Art","With the rapid development of Internet, Internet services are blooming, and no longer limited in job scope, but associated with home life instead, so that lifestyle of digital home is started. In digital home services, a home gateway, communicating with internal and external networks, plays a crucial role. All kinds of devices in a house can communicate with each other through the home gateway.","Open Services Gateway Initiative (OSGi) is an integrated platform of information services, integrated into a gateway, so that application programs and value-added services, provided by a remote service provider, can be dynamically downloaded to the home gateway via Internet, and automatically installed. OSGi realizes a complete and dynamical device module, such that applications (named Bundles) can be remotely installed, initiated, updated and removed without re-guiding. Furthermore, the corresponding Application Programming Interface (API) defines life cycle management for performing remote downloading, and service registry allows bundles to exam new and canceled services.","In the beginning, OSGi focuses on the home gateway. However, applications of OSGi are broadened, and can be applied to telecommunication service products, embedded in Personal Digital Assistants (PDA) and mobile phones, or co-worked with personal computers and other consumer electronic products. For example, a Session Initiation Protocol (SIP) communicator, an all aspect communication software or instant message (IM) software based on OSGi, has many advantages such as cross-platform transplantation, and supports many kinds of IM communication systems, such as ICQ, MSN, AOL Yahoo message, Jabber and so on, as well as transmission and receipt of video signals of network phones.","In the prior art, the SIP communicator can mainly be divided into three parts: Protocol Service Bundle, User Interface Service Bundle and Libraries Bundle. The relationship of each bundle conforms to the OSGi rule, such that removing any of the bundles does not affect other bundles. In the SIP communicator, User Interface Service Bundle is an entry point of the main program; that is, configuration of the SIP communicator is controlled by User Interface Service Bundle. In such a case, since User Interface Service Bundle is represented by a user interface, a user cannot set the SIP communicator if the SIP communicator is installed in an architecture without any peripheral output, which may affect operations of the SIP communicator.","It is therefore a primary objective of the claimed invention to provide a method and related management architecture for managing a plurality of bundles in an open services gateway initiative service platform.","The present invention discloses a method for managing a plurality of bundles in an open services gateway initiative service platform, which comprises adding the plurality of bundles into a service list, and generating configuration files corresponding to the plurality of bundles, storing the configuration files corresponding to the plurality of bundles, updating a status corresponding to a first bundle of the plurality of bundles in the service list when the first bundle is initiated, and loading a configuration file corresponding to the first bundle.","The present invention further discloses a management architecture for managing a plurality of bundles in an open services gateway initiative service platform, which comprises a setting unit, for adding the plurality of bundles into a service list, and generating configuration files corresponding to the plurality of bundles, a storing unit, for storing the configuration files corresponding to the plurality of bundles, an updating unit, for updating a status corresponding to a first bundle of the plurality of bundles in the service list when the first bundle is initiated, and a loading unit, for loading a configuration file corresponding to the first bundle.","These and other objectives of the present invention will no doubt become obvious to those of ordinary skill in the art after reading the following detailed description of the preferred embodiment that is illustrated in the various figures and drawings.","Please refer to , which is a schematic diagram of a management architecture for an OSGi platform  in accordance with an embodiment of the present invention. The management architecture  is utilized for managing bundles B_\u02dcB_n, and comprises a management device , a storing unit  and a loading unit . The management device  comprises a setting unit  and an updating unit . The setting unit  is used for adding the bundles B_\u02dcB_n to a service list and generating configuration files corresponding to the bundles, and the generated configuration files are stored in the storing unit . The updating unit  is used for updating a status corresponding to a bundle B_x in the service list when the bundle B_x is initiated, such that the loading unit  can load a configuration file corresponding to the bundle B_x.","Operations of the management architecture  are illustrated by  to .","First, please refer to , which is a schematic diagram of a process  for the management architecture . The process  comprises the following steps:","Step : Start.","Step : Add the bundles B_\u02dcB_n to a service list, and generate configuration files corresponding to the bundles B_\u02dcB_n.","Step : Store the configuration files corresponding to the bundles B_\u02dcB_n.","Step : Update the status corresponding to the bundle B_x of the bundles B_\u02dcB_n when the bundle B_x is initiated.","Step : Load the configuration file corresponding to the bundle B_x.","Step : End.","Via the process , the bundles B_\u02dcB_n are registered at the management device , so as to add the bundles B_\u02dcB_n to the service list. Meanwhile, the setting unit  generates a default configuration file, and stores the default configuration file in the storing unit . Then, according to initiation statuses of the bundles B_\u02dcB_n, the updating unit  updates the service list, such that the loading unit  can load the corresponding configuration files accordingly.","Therefore, in the process , the bundles B_\u02dcB_n are registered at the management device , so as to generate the corresponding configuration files for further uses. However, in some cases, a new bundle may be added, which can be processed according to .",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3","b":["30","10","30"]},"Step : Start.","Step : A bundle B_y is initiated.","Step : Determine whether the bundle B_y is registered. If yes, go to step ; else, go to step .","Step : Execute the registry process of the bundle B_y.","Step : Load the configuration file corresponding to the bundle B_y.","According to the initiation process , when the bundle B_y is initiated, the present invention first determines whether the bundle B_y is registered. If the bundle B_y has been registered, meaning that the corresponding configuration file has been stored in the storing unit , then the present invention loads the configuration file. On the contrary, if the bundle B_y has not been registered, the present invention executes the registry process of the bundle B_y, namely to add the bundle B_y to the service list, generate the configuration file corresponding to the bundle B_y, and store all the generated files in the storing unit . Therefore, via the initiation process , the management architecture  can determine to load the configuration file or to execute the registry process based on whether the bundle B_y is registered.","Moreover, in some cases, the user may need to modify configuration of a bundle which has been registered, which can be processed according to .",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 4","b":["40","10","40"]},"Step : Start.","Step : Modify a bundle B_z of the bundles B_\u02dcB_n.","Step : Determine whether the bundle B_z is initiated. If yes, go to step ; else, go to step .","Step : Notify the service corresponding to the bundle B_z, so as to load the modified configuration, and update the configuration file corresponding to the bundle B_z according to the modified configuration.","Step : Update the configuration file corresponding to the bundle B_z.","According to the modification process , when the bundle B_z which has been registered is modified, the present invention determines whether the bundle B_z is initiated. If the bundle B_z has been initiated, the present invention notifies the service corresponding to the bundle B_z, so as to load the modified configuration, and update the configuration file corresponding to the bundle B_z according to the modified configuration. On the contrary, if the bundle B_z has not been initiated, then the present invention updates the configuration file corresponding to the bundle B_z directly. Therefore, according to whether the bundle B_z is initiated, the present invention performs different processes, to meet requirements of different cases.","Therefore, as can be seen from . , the bundles B_\u02dcB_n are registered at the management device , such that the setting unit  can add the bundles B_\u02dcB_n to the service list and generate the corresponding configuration files. Then, the updating unit  can update the service list, such that the loading unit  can load the corresponding configuration files accordingly. Meanwhile, when initiating a bundle, the management device  can check whether the bundle is registered, to determine to load a corresponding configuration file or to execute a registry process. In addition, when the user need to modify a configuration of a bundle which has been registered, the management device  can perform different execution processes according to whether the bundle is initiated, to meet requirements of different cases.","In addition, after the loading unit  loads the configuration file corresponding to the bundle B_x, if the bundle B_x is deactivated, the loading unit  can remove (or disable) the configuration file corresponding to the bundle B_x. Simply speaking, the loading unit  only loads configuration files corresponding to bundles which have been initiated, and the loading unit  removes configuration files corresponding to bundles which have been initiated but deactivated on the midway.","As mentioned above, in the prior art, since User Interface Service Bundle is represented by a user interface, the user cannot set the SIP communicator if the SIP communicator is installed in an architecture without any peripheral output, which may affect operations of the SIP communicator. In comparison, in the present invention, even if an SIP communicator is installed in an architecture without any peripheral output, normal operations of the SIP communicator can be maintained because the management device  can generate and load corresponding configuration files. Notice that, the SIP communicator is used for illustrating the present invention, and other OSGi services can be applied to the present invention. Therefore, the present invention can make bundles of OSGi service platform no longer work individually, to integrate all bundles in the same management program, so as to greatly improve a modular level, communicative ability and transplantation ability. And, there is no need to develop different setting programs independently.","To sum up, the present invention provides methods and related management architecture for managing bundles in an OSGi service platform, to make the bundles of OSGi service platform no longer work individually, to integrate all bundles in the same management program, and to greatly improve a modular level, communicative ability and transplantation ability. And, there is no need to develop different setting programs independently.","Those skilled in the art will readily observe that numerous modifications and alterations of the device and method may be made while retaining the teachings of the invention. Accordingly, the above disclosure should be construed as limited only by the metes and bounds of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 4","FIG. 1"]}]},"DETDESC":[{},{}]}
