---
title: Layered host based satellite positioning solutions
abstract: Methods and systems consistent with the present invention provide a host based positioning system. The host based positioning system includes a tracker hardware interface that connects to a dedicated hardware space vehicle tracker. The tracker hardware interface receives positioning information from the space vehicle tracker. The host based positioning system includes a layered approach to enable user applications on a host computer to access data from tracker hardware.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07813875&OS=07813875&RS=07813875
owner: Sirf Technology, Inc.
number: 07813875
owner_city: San Jose
owner_country: US
publication_date: 20021010
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is related to Ser. No. 10\/269,914, titled \u201cHOST BASED SATELLITE POSITIONING SYSTEMS\u201d, filed Oct. 10, 2002, and Ser. No. 10\/269,104 titled \u201cNAVIGATION PROCESSING IN HOST BASED SATELLITE POSITIONING SOLUTIONS\u201d, filed Oct. 10, 2002, both of which are incorporated herein by reference in their entirety.","1. Field of the Invention","This invention relates to satellite positioning systems. In particular, this invention relates to satellite positioning systems implemented using the processing power of a host in layered communication with tracker hardware.","2. Related Art","Worldwide use of satellite positioning systems (SPS), such as the Global Positioning System (GPS) is growing at a rapid pace. Current trends are calling for the incorporation of GPS services into a broad range of electronic devices and systems, including Personal Digital Assistants (PDAs), cellular telephones, portable computers, automobiles, and the like. At the same time, manufacturers constantly strive to reduce costs, simply designs and produce the most cost-attractive product possible for consumers.","In the past, providing a GPS solution, such as handheld GPS devices, often required expensive dedicated GPS signal reception and processing hardware, as well as dedicated post processing hardware for resolving location measurements, displaying location coordinates, updating map displays, and the like. However, given the rapid growth in speed, sophistication, and processing power of the host microprocessors present in the host computer devices (e.g., in a cell phone, personal digital assistant or automobile), the possibility exists for allowing the host computer to bear the burden not only of running its regular applications, but also to operate as part of the GPS solution. Such an approach is presented in U.S. Pat. No. 6,430,503, titled \u201cDistributed GPS Navigation System\u201d, the entirety of which is incorporated herein by reference in its entirety.","Currently, however, there is a strong push toward incorporating GPS solutions in many electronic devices designed by numerous manufacturers. Of course, each device varies considerably in architecture, operating system, hardware interfaces, and the like. Prior GPS solutions did not provide the flexibility that allowed the solutions to be adapted to a wide range of electronic devices. Instead, expensive customized solutions were needed for each device, thereby undesirably increasing costs and delaying the introduction of GPS services into a wide range of devices. The prior GPS host solutions also rely on interrupts to the host computer in order to service a GPS function. The use of interrupts adversely impacts the performance of the host computer.","Known GPS solutions are often developed or customized for specific devices and applications. Such customization increases the complexity of implementing GPS systems on numerous platforms and operating systems. Further, known GPS systems are often not able to take advantage of changes in software and hardware without changing a large portion of the software in a GPS device. The customized or specific device design approach also limits the ability to create application program interfaces that can be marketed and delivered separate from the GPS hardware.","Therefore, a need exists for implementations of GPS solutions that overcome the problems noted above and others previously experienced.","Methods and systems consistent with the present invention provide a layered host based SPS solution. The SPS is a GPS solution implemented in a layered form that is flexible and extensible, and that can be adapted to meet the needs of many different platforms. As a result, a wide variety of electronic devices may incorporate GPS functionality with less expense using less development time.","In one implementation, a host based positioning system includes host computer system that connects through a tracker hardware interface to a dedicated hardware space vehicle tracker. The host processing system also uses a layered approach having a user application layer, communication processing layer, client-server interface processing layer, user interface manager and protocol layer, navigation processing layer, and tracker interface layer. A processor in the host processing system runs the positioning engine and the functions provided by the different layers.","The tracker hardware interface receives positioning information from the space vehicle tracker (tracker hardware). Through functions in the tracker interface, the location data is communicated to the host computer.","Other apparatus, methods, features and advantages of the present invention will be or will become apparent to one with skill in the art upon examination of the following figures and detailed description. It is intended that all such additional systems, methods, features and advantages be included within this description, be within the scope of the present invention, and be protected by the accompanying claims.","The invention may be better understood with reference to the following figures. The components in the figures are not necessarily to scale, emphasis instead being placed upon illustrating the principals of the invention. Moreover, in the figures, like reference numerals designate corresponding parts throughout the different views.","In , a diagram of an exemplary positioning system  implemented as a layered host based satellite positioning system with a GPS solution having tracker hardware  in communication with a host computer  is shown. The tracker hardware  is connected to a GPS antenna  capable of receiving multiple GPS signals  from a plurality of satellites. The tracker hardware  is also depicted as being connected to a DC power supply . The tracker hardware  communicates with the host computer  over a hardware tracker interface link . Examples of the hardware tracker interface link  include, but are not limited to, a serial connection (including a universal serial bus (USB), a small computer serial interface (SCSI)), a parallel connection, and a wireless connection (including RF connections and infrared connections).","The tracker hardware  may be receive power from the DC power supply  that is separate from the power supply of the host computer , or in an alternate embodiment may receive power from the host computer  via the hardware tracker interface link . Further, the GPS antenna  may be separate from the tracker hardware  or integrated within the same housing as the tracker hardware .","Turning to , a block diagram of the exemplary positioning system of  is shown. The computer host  includes a central processing unit (CPU) , a hardware tracker interface link , and a memory . The CPU  is a controller and may be implemented as a microprocessor, embedded controller, application specific integrated circuit (ASIC), discrete logic circuits acting as a controller, analog circuits acting as a controller, and a combination of discrete logic and analog circuits. The host computer  also includes a secondary storage device , and a display , and an input interface  (e.g., a mouse, keyboard, and the like).","An operating system  (e.g., Windows CE, Palm OS, UNIX, QNX, or the like) is a plurality of instructions that reside in and are executed from memory . A plurality of user applications  communicates with a positioning library  and the operating system . One of the user applications  may receive position information from the positioning library , and may also communicate commands to the positioning library . The user application  may be virtually any program that uses positioning information, including, as examples, a mapping program, course charter, location aid, and the like.","The host computer  connects through the hardware tracker interface  and the interface connection  to the tracker hardware . The hardware tracker interface  may be virtually any type of data transfer interface (as examples, a serial, parallel, PCMCIA card, USB, PC Card, or network interface). In one implementation, the hardware tracker interface  is an RS232 port running at 38,400 bps, N-8-1 that communicates up to 2 KB of data per second between the tracker hardware  and the computer host .","In other implementations, the tracker hardware (as illustrated by the reference numeral ) is more closely incorporated into the host computer . Thus, rather than connecting to the computer host  through the interface connection link , for example, the tracker hardware  may be directly coupled to the host computer  via address, data, and control buses . As will be explained in more detail below, the host computer  receives and processes navigation information from the hardware tracker , or in an alternate embodiment  in order to provide the plurality of user applications  with position information.","Although aspects of the present invention are depicted as being stored in memory , one skilled in the art will appreciate that all or part of systems and methods consistent with the present invention may be stored on or read from other machine-readable media, for example, secondary storage devices such as hard disks, floppy disks, and CD-ROMs; a signal received from a network; or other forms of ROM or RAM either currently known or later developed. Further, although specific components of positioning system  are described, one skilled in the art will appreciate that a positioning system suitable for use with methods, systems, and articles of manufacture consistent with the present invention may contain additional or different components.","In , the tracker hardware  of  is illustrated. The tracker hardware  acquires and tracks GPS satellites and sends raw measurement data to the host computer  for position calculation. To that end, the tracker hardware  includes an antenna  for receiving GPS satellite signals  that are filtered by a radio frequency (RF) filter  for passing the signals to the RF interface circuit . The RF interface circuit  processes the signals, produces 2-bit Inphase and Quadrature (I\/Q) signals and recovers GPS clocks. The RF interface circuit  provides the I\/Q signals and GPS clocks to the location processing circuit  for digital processing. A reference frequency source  (e.g., a crystal oscillator) provides a reference clock for the RF interface circuit , while the real time clock (RTC) source  provides a reference clock for the location processing circuit .","The tracker hardware  may be implemented with components available from SiRF Technology, Inc. of San Jose, Calif. For example, the RF interface circuit  may be implemented as a GRF2i\/LP integrated circuit. The location processing circuit  may be implemented, as examples, as a GSP2t integrated circuit or GSP2e integrated circuit. The tracker hardware  minimizes the overhead on the host computer  and operating system  by keeping low the maximum transmission rate of raw measurements to the host computer  (e.g., one measurement per second).","In , a host-based navigation module  located in the host computer  of  in communication with a plurality of user applications  is shown. The host based navigation module  may be located in memory . The host-based navigation module  is generally composed of two sub-modules. The first is the tracker interface module  and second is the host navigation processing sub-module .","The tracker interface sub-modules  communicate with the tracker hardware  via the hardware tracker interface (, ) and the host navigation processing sub-module . The tracker interface sub-module  sends and receives messages over the serial interface with the tracker module . Examples of the messages, include a predefined initialization message, status message and location data message. The location data received from the tracker hardware  by the tracker interface module  is made available to the host navigation processing module  in predefined data structures. Such data structures may contain fields for latitude, longitudes, and time and take the form of a predefined array of data.","Each of the plurality of user applications may expect data in one of a plurality of location data standards. Such location or position standards include, but are not limited to; different versions of NMEA183 location data and binary location data. Each of the user applications  may require a different format for location data. The host navigation processor sub module  receives location data via a data structure from the tracker interface module  and formats the data for the user applications . The host navigation process sub module  also manages communication with the user applications  with assistance from the operating system. An example of such communication is pipes in an UNIX operating system.","Turning to , a graphical representation  is illustrated of an application program interface (API) layer  between user applications  located on the host computer  and the tracker hardware  of . The API layer  is a plurality of predefined functions calls that are available for use by user applications  to access software functions in the host navigation processing sub module . The API allows a common interface for user application developers while keeping the implementation details of the host-based navigation module  separate from the user applications  and common across operating systems. An example of API functions calls include, but are not limited to, status, location update and initialization. As described, in , the host navigation sub-module  communicates with the tracker interface sub module  in order to receive location data from the tracker hardware .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 6","FIG. 5"],"b":["600","218","104","102","218","102","602","604","606","608","610","612"]},"User applications  in the user application layer  communicate with a communication interface  via an API. In response to initiation of each of the user applications , the communication interface  notifies the host navigation sub module  in the navigation processing layer  and the user interface manager  in the user manager and protocol processing layer . The host navigation processing sub-module  then provides the appropriate location data for the user application  to the user interface manager . The user interface manager  communicates with the communication interface  in order to forward the appropriate location data to a required data forwarder . The data forwarder  formats the location data for one of the respective user applications . The formatted location data is then sent to the user application  that requires the location data.","Thus, the ability to have numerous user applications  accessing tracker hardware  is accomplished through a layered approach. Further, the communication manager  in conjunction with the host navigation processor sub module  and the user interface manager  enable multiple user applications  to have diverse location data formats while still sharing common resources and software code.","Turning to , a block diagram of a data forwarder  in the client server interface-processing layer  of  is shown. In general, the data forwarder  receives data from the user interface manager  (or when the manager  is not present, from the navigation module ) and prepares the data for delivery to a given user application . To that end, the data forwarder  may accept data in a predefined format used by the navigation module  and prepare the data for delivery to a user application  in the protocol expected by the user application . As an example, the data forwarder  may prepare the data for delivery to the user application  in NEMA format or binary format. The data forwarder  may be implemented as a data forwarder object  in a high level computer software language, such as \u201cC++\u201d or Smalltalk. The data forwarder object  is able to communicate with the user interface manager . The location data from the user interface manager  results in the polymorphism of the data forwarder object  for the different types of location data output, such as for binary control  and binary data  or for NMEA control  and NMEA data . In an alternate embodiment, different instances of data forwarders  may be dedicated to specific types of location data formatting.","In , a flowchart  of the process for the user application  to communicate with the tracker hardware  of  is illustrated. The process starts  with the initialization of the host computer  in step . In step , a determination is made as to whether a request from the user application  is received at the communication interface . If a request is received in step , then in step  the communication interface  notifies the host navigation processor  and the user interface . Otherwise, step  is repeated until a request from a user application  is received.","The user interface manager , in step , receives the location data from the tracker hardware  via the tracker interface sub module  and the host navigation processor sub module . In step , the data forwarder  is configured in response to data from the user interface manager . The data may be in the form of location data, or in an alternate embodiment in the form of an instruction. In yet another embodiment the data may be a combination of location data and an instruction.","The data forwarder  formats the location data for transmission to the user application  in step . Thus, the procedure of sending data between the tracker hardware  and user application  via the multiple layers of processing is complete in step  when the data arrives at the user application .","It is appreciated by those skilled in the art that the process shown in  may selectively be implemented in hardware, software, or a combination of hardware and software. An embodiment of the process steps employs at least one machine-readable signal bearing medium. Examples of machine-readable signal bearing mediums include computer-readable mediums such as a magnetic storage medium (i.e. floppy disks, or optical storage such as compact disk (CD) or digital video disk (DVD)), a biological storage medium, or an atomic storage medium, a discrete logic circuit(s) having logic gates for implementing logic functions upon data signals, an application specific integrated circuit having appropriate logic gates, a programmable gate array(s) (PGA), a field programmable gate array (FPGA), a random access memory device (RAM), read only memory device (ROM), electronic programmable random access memory (EPROM), or equivalent. Note that the computer-readable medium could even be paper or another suitable medium, upon which the computer instruction is printed, as the program can be electronically captured, via for instance optical scanning of the paper or other medium, then compiled, interpreted or otherwise processed in a suitable manner if necessary, and then stored in a computer memory.","Additionally, machine-readable signal bearing medium includes computer-readable signal bearing mediums. Computer-readable signal bearing mediums have a modulated carrier signal transmitted over one or more wire based, wireless or fiber optic networks or within a system. For example, one or more wire based, wireless or fiber optic network, such as the telephone network, a local area network, the Internet, or a wireless network having a component of a computer-readable signal residing or passing through the network. The computer readable signal is a representation of one or more machine instructions written in or implemented with any number of programming languages.","Furthermore, the multiple process steps implemented with a programming language, which comprises an ordered listing of executable instructions for implementing logical functions, can be embodied in any machine-readable signal bearing medium for use by or in connection with an instruction execution system, apparatus, or device, such as a computer-based system, controller-containing system having a processor, microprocessor, digital signal processor, discrete logic circuit functioning as a controller, or other system that can fetch the instructions from the instruction execution system, apparatus, or device and execute the instructions.","Turning next to , a software module organization and interaction diagram  for the host based navigation module is shown. The diagram  shows the tracker  in communication with an optional tracker interface driver . The driver  communicates with the interface module  that, in turn, sends and receives data from the navigation processor module . The navigation processor module  provides navigation solutions (e.g., position, velocity, and time) to the optional user interface manager . The user interface manager  directs the navigation solutions to the data forwarders , and to the COM interface .","The tracker interface driver  and interface module  may be tailored to any particular host system. For example, the tracker interface driver  may be Windows CE serial interface functionality, while the interface module  may be tailored to accepting and processing data in any particular format provided by the tracker  and the interface driver . The navigation processor module  communicates with the tracker  and produces SPS data and status information from the data received from the tracker . In turn, the user interface module  forwards the data and status information to a user application  that has requested the data.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 10","FIG. 9"],"b":["904","1002","1004","1008"]},"In the navigation processing module, the receive manager module  generally receives the messages sent from the message router module  and forwards them to the navigation processor module  for processing. In certain instances, however, the message router module  may instead send messages directly to the main module  (generally for messages that do not need to be processed by the navigation processor module ). The error processor module  checks messages for errors and generates responsive messages that inform the navigation module that an error is present.","In the user manager module, the message packet builder  is provided to create any preselected packet structure for messages to be delivered to the data forwarders  through the illustrated queues. In addition, the message processor module  is available to accept messages from the main module , determine if the messages should be routed through the COM module , and if so, send the messages.","With regard next to , the Figure shows a layered pipelined architecture  of a hardware tracker communication interface module. In the send pipe, a transmit queue buffers messages from the message router . Messages are removed from the transmit queue by the message\/data layer  that extracts the data from the message and passes the data to the message protocol layer . The message protocol layer  wraps the data in packets according to any pre-selected protocol, and forwards the packets to the hardware interface layer  (e.g., a serial device driver) for transmission. A similar process occurs in the receive direction, with the hardware interface layer  receiving messages from the tracker  and sending the messages to the protocol layer . The protocol layer  then removes the packet structure from the data, and passes the data to the message\/data layer . The message\/data layer  then determines (e.g., based on a data header) what data structures to place the data into, and places the data structures on the receive queue.","The hardware interface layer  may be replaced or configured to support any desired hardware interface. For example,  shows a second example of a layered pipelined architecture  of a hardware tracker communication interface module. In the architecture , the hardware interface layer  is specifically a Streams interface layer  for operating systems that support the Streams paradigm. As shown, the Streams interface layer  communicates with the interface driver .",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 13","b":["904","902","1302","1314","1302","1304","1306","1306","1308","1308","1310","1312","1310","1312","1316","904"]},{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 14","FIG. 14"],"b":["1400","1002","1006","1402","912","908","906"]},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 15","b":["1500","406","1502","1502","916","1502","916","406","916","406"]},"The foregoing description of an implementation of the invention has been presented for purposes of illustration and description. It is not exhaustive and does not limit the invention to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practicing of the invention. For example, the described implementation includes software but the present invention may be implemented as a combination of hardware and software or in hardware alone. Note also that the implementation may vary between systems. The invention may be implemented with both object-oriented and non-object-oriented programming systems. The claims and their equivalents define the scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["The components in the figures are not necessarily to scale, emphasis instead being placed upon illustrating the principles of the invention. In the figures, like reference numerals designate corresponding parts throughout the different views.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 4","FIG. 2"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 5","FIG. 2"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 7","FIG. 6"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 8","FIG. 6"],"b":["218","102"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 15"}]},"DETDESC":[{},{}]}
