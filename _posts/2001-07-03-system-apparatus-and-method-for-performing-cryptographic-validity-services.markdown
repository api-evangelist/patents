---
title: System, apparatus, and method for performing cryptographic validity services
abstract: Embodiments of the present invention described and shown in the specification and drawings facilitate electronic authentication services for banking and other industries. Authentication services, often using Public Key Infrastructure (PKI) technology, are used to confirm the identity of the sender of data and to ensure that the data that was received is identical to the data that was sent. Embodiments of the present invention provide authentication services that may be used by a variety of configurations of entities requesting data authentication and entities responding to those requests. Embodiments of the present invention also support compatibility with commercial data authentication standards, integration with third-party data authentication software such as Secude (for Identrus access), and systems to control data authentication risks.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06973571&OS=06973571&RS=06973571
owner: Bank of America Corporation
number: 06973571
owner_city: Charlotte
owner_country: US
publication_date: 20010703
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","DESCRIPTION OF THE RELEVANT ART","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","DETAILED DESCRIPTION"],"p":["This invention relates to electronic transaction applications, and more particularly to systems, methods, and apparatuses that use Public Key Infrastructure (PKI) techniques to authenticate electronic signatures.","The business of electronic authentication services has generally been structured by a Trust Model. The Trust Model typically involves participants with four Trust Roles. These roles are Subscribing Customer, Relying Customer, Relying Participant, and Issuing Participant.","The Subscribing Customer is an entity that uses digital certificates to create electronic signatures. As is known in the art, a digital certificate is used with data to be signed to produce a PKI standard encrypted hash referred to as the message digest. The message digest together with the digital certificate forms the electronic signature of the data.","The Relying Customer is an entity that desires to determine whether a digital certificate in question was used to sign a specific item of data and if the digital certificate itself is valid. The activity of determining whether a digital certificate was used to sign a specific item of data and if the digital certificate itself is valid is referred to herein as \u201ccryptographic validity services\u201d or \u201cauthentication.\u201d","The Relying Participant is an entity that responds to certificate status inquiries from Relying Customers.","The Issuing Participant is an entity that creates digital certificates and provides them to Subscribing Customers.","Several Trust Models exist. Typically, in the Two-Corner Trust Model, as depicted in , Issuing Participant , Relying Customer , and Relying Participant  are all the same entity. Subscribing Customer  presents an electronic signature to Relying Customer \/Relying Participant \/Issuing Participant . Relying Customer \/Relying Participant \/Issuing Participant  checks the certificate status and informs Subscribing Customer  as to whether the signature is acceptable.","Typically, in the Three-Corner Trust Model, as depicted in , Relying Participant  and Issuing Participant  are the same entity. Subscribing Customer  presents an electronic signature to Relying Customer . Relying Customer  then submits a certificate status query to Relying Participant \/Issuing Participant . Relying Participant \/Issuing Participant  checks the certificate status and informs Relying Customer  as to whether the certificate is valid. Relying Customer  then informs Subscribing Customer  as to whether the electronic signature is acceptable.","Typically, in the Four-Corner Trust Model, as depicted in , Subscribing Customer  presents an electronic signature to Relying Customer . Relying Customer  then submits a certificate status query to Relying Participant . In this case a separate fourth party, Issuing Participant , has issued the digital certificate used to create the electronic signature. Relying Participant  locates Issuing Participant  for the digital certificate and asks Issuing Participant  to check the certificate status. Issuing Participant  provides the certificate status information to Relying Participant . Relying Participant  then informs Relying Customer  as to whether the certificate is valid. Finally, Relying Customer  informs Subscribing Customer  as to whether the electronic signature is acceptable.","Note that references in this specification to a particular Trust Model entity may refer, as appropriate, to that particular Trust Model entity in combination with another Trust Model entity, or to that particular Trust Model entity not in combination with another Trust Model entity. For example, references to the Issuing Participant that issued a particular digital certificate will refer to a Relying Participant\/Issuing Participant combination entity when that combination entity issued the particular digital certificate, even if it also serves additional functions (as in the Three-Cornered Trust Model), or will refer to an Issuing Participant entity when that uncombined entity issued the particular digital certificate (as in the Four-Cornered Trust Model).","Embodiments of the present invention described and shown in the specification, claims, and drawing facilitate the provision of cryptographic validity services for banking and other industries. Some embodiments of the present invention provide authentication services through an application programming interface to a Relying Customer Service Engine that is coupled to a Relying Participant Service Engine. Embodiments of the present invention also provide configurable risk-control, compatibility with commercial Identrus standards (Identrus is controlled by Identrus LLC, 140 East 45th Street, 16th Floor, New York, N.Y. 10017), and integration with third-party software such as Secude (manufactured by SECUDE Sicherhreitstechnologie, Informationssysteme Gmbh, DovivostraBell, 0-64293, Darnstade, Germany) for Identrus access.","An object of the present invention is to facilitate the provision of electronic authentication services.","In some embodiments of the present invention, a Validation Services Platform performs authentication on an Electronic Signature contained in a Validation Request by receiving the Validation Request from a Relying Customer Interface, formulating a Query responsive to the Validation Request, transmitting the Query to a Relying Participant Interface, receiving a Query Response from the Relying Participant Interface, formulating a Validation Response responsive to the Query Response, and transmitting the Validation Response to the Relying Customer Interface. The Relying Customer Interface may be in communication with a Relying Customer, and the Relying, Participant Interface may be in communication with a Relying Participant.","Additional objects and advantages of the invention are set forth in part in the description which follows, and in part are obvious from the description, or may be learned by practice of the invention. The objects and advantages of the invention may also be realized and attained by means of the methods, instrumentalities and combinations particularly set out in the appended claims.","Interpretation of Terms","Unless otherwise noted in this specification or in the claims, all of the terms used in the specification and the claims will have the meanings normally ascribed to these terms by workers in the art. Certain terms specifically comprise the meanings associated with them as follows:","1. Storage Device: A physical or virtual element for storing programs or data for manipulation by computer systems. Physical Storage Devices comprise memory modules, random access memory chips (RAM), various programmable memory chips, fixed and removable disk drives, and other computer storage devices as are known in the art. Virtual Storage Devices comprise virtual memory pages, virtual disks and other physical Storage Devices that are simulated by software, and other virtual storage elements as are know in the art.","2. Processor: A physical or virtual element whose operation is controlled by one or more computer programs. Processors comprise general purpose computer systems, special purpose computer systems, distributed computer systems, processor chips, discrete electronic circuits, processors that are simulated by software, and other computer processing devices as are known in the art.","3. Distributed Storage Array: One or more Storage Devices that are logically or physically coupled, or both. For example, a single Storage Device is a Distributed Storage Array. Another example of a Distributed Storage Array is a plurality of Storage Devices that are in physically different locations but are logically or physically coupled, or both.","4. Distributed Processor Array: One or more Processors that are logically or physically coupled, or both. For example, a single Processor is a Distributed Processor Array. Another example of a Distributed Processor Array is a plurality of Processors that are in physically different locations but are logically or physically coupled, or both.","5. Program: Instructions or data, or both, stored in a Distributed Storage Array, for controlling a Distributed Processor Array. For example, a Program may reside on a Distributed Storage Array consisting of a single Storage Device and may control a Distributed Processor Array consisting of a single Processor, where both the Storage Device and the Processor are components of a personal computer. In another example, a Program may reside on a Distributed Storage Array consisting of a plurality of geographically separated Storage Elements and may control a Distributed Processor Array consisting of a plurality of geographically separated Processors. In this example, the Storage Elements and Processors may be grouped to form a plurality of computer systems that are coupled through computer communications networks such as the Internet.","6. Configuration Data. In embodiments of the present invention, Configuration Data comprises information for configuring the operation of the invention. Configuration Data may be provided to an entity of the present invention through an external source, for example using the System API described below or as an external data file, or Configuration Data may be built into the entity, for example as a configuration module as is know in the art. As used in this specification, the term \u201centity\u201d refers to any object that may be placed in communication with any other object, and comprises, for example, persons, organizations, logical structures, physical structures, computer systems, and program modules. In some embodiments where the present invention comprises one or more entities in communication with other entities (within or outside the systems of the present invention), via computer communications networks such as the Internet, the Configuration Data may comprise, for example and as is known in the art:","a. HOST names for each entity that will be placed in communication with an entity of the present invention.","b. PORT numbers corresponding to each HOST.","c. Security protocol information, as is known in the art, as required to make a secure encrypted connection to each HOST.","d. Identification information necessary to identify each entity of the present invention to those entities with which it will be placed in communication. For example and as is known in the art, such identification information may comprise appropriate SSL Digital Certificates.","e. Identification information necessary to authenticate, to entities of the present invention, those entities with which entities of the present invention will be in communication. For example and as is known in the art, such identification information may comprise appropriate identifying SSL Digital Certificates.","To continue this example, and for some embodiments of the present invention, as depicted in , the present invention comprises Validation Services Platform . Validation Services Platform  comprises two entities, Relying Customer Service Engine  and Relying Participant Service Engine . These two entities are in communication via a computer communications network, e.g., the Internet, as denoted by Internet , and Configuration Data as just described are used to establish a communications channel between the two entities. As depicted, Relying Participant Service Engine  internally contains Configuration Data, denoted as Configuration Data . In some embodiments, Relying Customer Service Engine  obtains Configuration Data from Relying Customer Software Application  via a communications path denoted as Control and Configure Service .","7. Validation Request. In embodiments of the present invention, a Validation Request comprises an Electronic Signature and may further comprise, as described below, a copy of the data alleged to have been signed by the Electronic Signature. As is known in the art, each Electronic Signature comprises a Digital Certificate and a Message Digest. As is also known in the art, the Digital Certificate comprises a hierarchical Certificate Chain that further comprises the actual certificate allegedly used to sign the data (the Signing Certificate), and the Message Digest comprises a PKI standard encrypted hash of the data signed by the Electronic Signature. For example, as depicted in , Validation Request  comprises Electronic Signature  and Signed Data  (representing a copy of the data alleged to have been signed by Electronic Signature ).","8. Validation Response. In embodiments of the present invention, a Validation Response comprises a determination if the data alleged to have been signed by a particular Electronic Signature had, in fact, been validly signed by that Electronic Signature. For example, as depicted in , Validation Response  comprises a determination if Signed Data  had, in fact, been validly signed by Electronic Signature . In another example, in an embodiment of the present invention, the Validation Response comprises:","a. The SERVICE STATUS of the Validation Request, comprising:\n\n","b. The SERVICE NAME of the Relying Participant (for example, BANKOFAMERICA AUTHENTICATION SERVICES) providing the validation.","c. The SERVICE VERSION of the Relying Participant Service Engine, comprising an identification of the version of software implementing the Relying Participant Service Engine.","d. The SIGNATURE VALIDITY determination, having the values VALID and INVALID, as provided by the present invention and indicating whether the Electronic Signature is valid for the Signed Data in the associated Verification Request.","e. SIGNATURE DATA MATCH indicating whether the Electronic Signature actually matched the Signed Data.","f. The SIGNING CERTIFICATE STATUS of the Digital Certificate used to create the Electronic Signature, for example, VALID, EXPIRED, REVOKED, etc.","g. The ISSUING AUTHORITY CERTIFICATE STATUS of the Digital Certificate of the Authority which issued the Signing Digital Certificate.","h. The SIGNING CERTIFICATE CONTENTS, providing the information contained in the signing Certificate allegedly used to sign the Signed Data which, in some embodiments, comprises:\n\n","9. Query. One or more requests (which may be referred to as Certificate Status Requests) to a Digital Certificate verification facility to verify each of the certificates that was contained in the Certificate Chain of a Validation Request (see the Validation Request definition, above). In an embodiment of the present invention, third-party Secude Software in combination with Identrus Issuing Participant services (Identrus Services are controlled by Identrus LLC, 140 East 45th Street, 16th Floor, New York, N.Y. 10017) form the Digital Certificate verification facility. Other Digital Certificate verification facilities, for example, VeriSign, Inc., 1600 Bridge Parkway, Redwood Shores, Calif. 94065, may be used as is known in the art.","10. Query Response. The response or responses to one or more Certificate Status Requests from a Digital Certificate verification facility.","11. Relying Customer Interface. In some embodiments of the present invention, a Relying Customer Interface is the portion of the present invention that communicates with a Relying Customer. For example, in some embodiments as depicted in , the present invention comprises Validation Services Platform . Communications between the Relying Customer, partially depicted in  by Relying Customer Software Application , and Validation Services Platform , comprise Control and Configure Service , Validation Request , and Validation Response . These communications enter and exit Validation Services Platform  through a Relying Customer Interface, which, in some embodiments, comprises System API  and Information API . As is known in the art, the Relying Customer Interface may be implemented in hardware, in software, or as a combination of hardware and software.","12. Relying Participant Interface. In some embodiments of the present invention, a Relying Participant Interface is the portion of the present invention that communicates with a Relying Participant or with a Relying Participant\/Issuing Participant combination. For example, in some embodiments depicted in , the present invention comprises Validation Services Platform . Communications between Validation Services Platform  and the Relying Participant\/Issuing Participant combination, partially depicted in  by Secude Software , Identrus Server , Issuing Participant Indentrus Servers , and Identrus Root Server , are represented by the arrow between Relying Participant Service Engine  and Secude Software . These communications enter and exit Validation Services Platform  through a Relying Participant Interface. As is known in the art, the Relying Participant Interface may be implemented in hardware, in software, or as a combination of hardware and software.","13. System API. In some embodiments of the present invention, a System Application Programming Interface (API) provides a predefined set of functions for initializing and terminating the operation of the Relying Customer Service Engine of the present invention, and for recording status information for financial audits, billing, and maintenance. As is known in the art, an API is said to be \u201cexposed\u201d when entities external to the entity containing the API are able to make use of the API. For example, in some embodiments depicted in , System API  is contained in the Relying Customer Service Engine  portion of Validation Services Platform . Validation Services Platform  exposes System API  to Relying Customer Software Application . Relying Customer Software Application  uses, as is known in the art, System API  to control and configure Relying Customer Service Engine  via the Control and Configure Service  path.","14. Information API. In some embodiments of the present invention, the Information API provides a predefined set of functions for sending a Validation Request to systems or apparatus of the invention and for obtaining a Validation Response from systems or apparatus of the invention. For example, in some embodiments depicted in , Information API  is contained in the Relying Customer Service Engine  portion of Validation Services Platform . Valdation Services Platform  exposes Information API  to Relying Customer Software Application . Relying Customer Software Application  uses, as is known in the art, Information API  to transmit Validation Request  to Validation Services Platform , and to receive Validation Response  from Validation Services Platform .","15. Policy Engine. In some embodiments of the present invention, the Policy Engine determines if the Electronic Signature contained in a Validation Request is valid or invalid, based, for example, on examination of the Electronic Signature, a Query Response related to the Electronic Signature, and business policies provided by the Relying Participant. For example, in some embodiments depicted in , Policy Engine  is contained in Relying Participant Service Engine . Business policies related to the acceptance of Electronic Signatures are provided to Policy Engine  as dataset Policy Data . Policy Engine  converts, as is known in the art, Policy Data  to Policy tables  which are internal to Policy Engine . In some embodiments, this conversion occurs when Policy Engine  is initialized as part of the initialization of systems, apparatuses or methods of the present invention. In other embodiments, business policies of the Relying Participant are separately converted into Policy Tables , for example by a computer programmer, and are built into Policy Engine . In some embodiments, Relying Participant Service Engine  provides Policy Engine  with the results of an examination of the Electronic Signature and with the Query Response related to the Electronic Signature for use, in conjunction with the business policies, in authenticating the Electronic Signature.","16. Validation Services Platform. In some embodiments of the present invention, the Validation Services Platform performs authentication on the Electronic Signature contained in a Validation Request by receiving the Validation Request from a Relying Customer Interface, formulating a Query responsive to the Validation Request, transmitting the Query to a Relying Participant Interface, receiving a Query Response from the Relying Participant Interface, formulating a Validation Response responsive to the Query Response, and transmitting the Validation Response to the Relying Customer Interface. The Relying Customer Interface may be in communication with a Relying Customer and the Relying Participant Interface may be in communication with a Relying Participant.","For example, in embodiments of the present invention depicted in , Validation Services Platform  comprises a Relying Customer Interface that is in communication with Relying Customer , and comprises a Relying Participant Interface that is in communication with Relying Participant .","The Validation Services Platform may be implemented, as is known in the art, as software running on general purpose computers or special purpose computers, as hardware, or as combinations of software and hardware.","17. Relying Participant Service Engine. In some embodiments of the present invention, the Relying Participant Service Engine performs authentication on the Electronic Signature contained in a Validation Request by receiving the Validation Request, formulating a Query responsive to the Validation Request, transmitting the Query to a Relying Participant Interface, receiving a Query Response from the Relying Participant Interface, formulating a Validation Response responsive to the Query Response, and transmitting the Validation Response. In some embodiments, the Relying Participant Service Engine performs as a server, as is known in the art, with one or more clients (for example, Relying Customer Service Engines) sending Validation Requests to the Relying Participant Service Engine. In some further embodiments of the present invention, the Validation Response is responsive to a Policy Engine. For example, in some embodiments depicted in , Relying Participant Service Engine  receives Validation Request  from Relying Customer Service Engine  via an Internet-based communication channel, Internet . Relying Participant Service Engine  formulates a Query, and transmits the Query to the Relying Participant Interface that is in communication with Secude Software . Secude Software  sends a Query Response to the Relying Participant Interface. Relying Participant Service Engine  receives the Query Response from the Relying Participant Interface, formulates Validation Response  based on the Query Response and the operation of Policy Engine , and transmits Validation Response  to Relying Customer Service Engine  via Internet .","The Relying Participant Service Engine may be implemented, as is known in the art, as software running on general purpose computers or special purpose computers, as hardware, or as combinations of software and hardware.","18. Relying Customer Service Engine. In some embodiments of the present invention, the Relying Customer Service Engine coordinates communications between the Relying Customer and the Relying Participant Service Engine. In these embodiments, the Relying Customer Service Engine has a Relying Customer Interface which is in communication with a Relying Customer, and receives a Validation Request from the Relying Customer Interface and transmits the Validation Response to the Relying Customer Interface. The Relying Customer Interface may include a System API and may include an Information API. In further embodiments, a communication channel is established between the Relying Customer Service Engine and the Relying Participant Service Engine to transport the Validation Request and the Validation Response. In some embodiments, one or more Relying Customer Service Engines are clients, as is known in the art, of a single Relying Participant Service Engine that is a server.","In some embodiments, the Relying Customer Service Engine performs consistency checking on the Validation Request. Consistency checking determines, for a particular Validation Request, if the Electronic Signature actually signed the Signed Data. In some embodiments, if the Electronic Signature was found not to have signed the Signed Data, then the Relying Customer Service Engine would send, to the Relying Customer Interface, a Validation Response noting that the Electronic Signature was not valid and would not invoke the Relying Participant Service Engine. If the Electronic Signature was found to have signed the Signed Data, then the Validation Request would be sent to the Relying Participant Service Engine for validation of the Validation Request's Digital Certificates.","For example, in some embodiments depicted in , the Relying Customer Interface of Relying Customer Service Engine  comprises System API  and Information API . The Relying Customer Interface is in communication with Relying Customer Software Application . A Validation Request  is sent to Information API  by Relying Customer Software Application . Validation Request  is received by Relying Customer Service Engine  from Information API . Relying Customer Service Engine  and Relying Participant Service Engine  previously established an Internet based communication channel, Internet , between Relying Customer Service Engine  and Relying Participant Service Engine . Relying Customer Service Engine  transmits Validation Request  to Relying Participant Service Engine  via Internet , and receives Validation Response  from Relying Participant Service Engine  via Internet . Relying Customer Service Engine transmits Validation Response  to Relying Customer Software Application  via Information API .","The Relying Customer Service Engine may be implemented, as is known in the art, as software running on general purpose computers or special purpose computers, as hardware, or as combinations of software and hardware.","Acts performed by systems, methods, apparatus elements, and apparatus functions of the present invention may be implemented, as is known in the art, as software running on general purpose computers or special purpose computers, as hardware, or as combinations of software and hardware.","As depicted in , Validation Services Platform  is an embodiment of the present invention. In this figure, Validation Services Platform  is in communication with Relying Customer  and Relying Participant . Relying Participant  may be in communication with Issuing Participant  or may be a Relying Participant\/Issuing Participant combination. As depicted in , Relying Customer  and Relying Participant  may be located in close physical proximity to portions of Validation Services Platform , while Validation Services Platform  may comprise components that are distributed over a wide geographical area and communicate via communication networks such as the Internet. In some embodiments, a portion of Relying Customer  is a computer program running on a computer system that also runs a portion of Validation Services Platform .","Typically, Subscribing Customer  creates an Electronic-Signature by signing certain data. Subscribing Customer  submits the Electronic Signature and the data to Relying Customer  as part of a commercial transaction. Relying Customer  generates a Validation Request from the Electronic Signature and data, as is known in the art, and transmits the Validation Request to Validation Services Platform .","In some embodiments depicted in , Validation Services Platform  has a Relying Customer Interface in communication with Relying Customer  and has a Relying Participant Interface in communication with Relying Participant . Relying Customer  transmits the Validation Request to the Relying Customer Interface and Validation Services Platform  receives the Validation Request from the Relying Customer Interface. Validation Services Platform  formulates a Query responsive to the Validation Request and transmits the Query to the Relying Participant Interface. Relying Participant  receives and processes the Query, as is known in the art, and transmits a Query Response to the Relying Participant Interface. Validation Services Platform  receives the Query Response from the Relying Participant Interface, formulates a Validation Response responsive to the Query Response, and transmits the Validation Response to the Relying Customer Interface. Relying Customer  receives the Validation Response from the Relying Customer Interface. Responsive to the Validation Response, as is known in the art, Relying Customer  informs Subscribing Customer  as to the acceptance or rejection, for example, of the commercial transaction depending upon whether the Electronic Signature contained in the Validation Response was valid.","In some embodiments depicted in , Validation Services Platform  comprises Relying Customer Service Engine  in communication with Relying Participant Service Engine . In some embodiments, Relying Customer Service Engine  is in close physical proximity to Relying Participant Service Engine . For example, Relying Customer Service Engine  and Relying Participant Service Engine  may be software modules running on the same computer system and communicating with each other as is known in the art. In other embodiments, Relying Customer Service Engine  and Relying Participant Service Engine  are physically distant. For example, Relying Customer Service Engine  and Relying Participant Service Engine  may be software modules running on different computer systems that are located in different cities, and communicating via computer communications networks such as the Internet as is known in the art. In some embodiments, Relying Customer Service Engine  contains the Relying Customer Interface and Relying Participant Service Engine  contains the Relying Participant Interface. In some embodiments, multiple Relying Customer Service Engines  communicate with a single Relying Participant Service Engine .",{"@attributes":{"id":"p-0075","num":"0083"},"figref":["FIG. 5","FIG. 4","FIG. 5"],"b":["401","501","401","401","501","520","502","503","504"]},"In some embodiments depicted in , a Relying Participant\/Issuing Participant combination comprises Secude Software , Identrus Server , Issuing Participant-Identrus Server , and Identrus Root Server . As depicted in , Identrus Server , Issuing Participant-Identrus Server , and Identrus Root Server  communicate via Internet . Secude Software  and the Identrus servers operate together, as is known in the art, to form a Digital Certificate verification facility. As is also known in the art, other Digital Certificate verification facilities could be substituted for the Secude Software\/Identrus combination depicted in . In other embodiments, Validation Services Platform  could communicate with a plurality of Digital Certificate verification facilities of the same or of different types.","In some embodiments depicted in , Validation Services Platform  communicates with Secude Software  via the Relying Participant Interface portion of Validation Services Platform . Secude Software  receives a Query from the Relying Participant Interface, processes the Query in conjunction with the Identrus servers as is known in the art, formulates a Query Response, and transmits the Query Response to the Relying Participant Interface.",{"@attributes":{"id":"p-0078","num":"0086"},"figref":["FIG. 6","FIGS. 4 and 5","FIG. 6","FIG. 4","FIG. 6"],"b":["401","401","402","403","402","401","603","604","401","603","501","501","603","401","601","401","604","501","501","604","520","401","504","401"]},"In some embodiments depicted in , Relying Participant Service Engine  comprises the Relying Participant Interface of Validation Services Platform . In some embodiments depicted in , Relying Participant Service Engine  includes Policy Engine . As depicted in , some embodiments of Relying Participant Service Engine  include datasets such as Configuration Data , for storing data relating to the configuration of Relying Participant Service Engine ; Log Files , for storing data relating to the operation of Relying Participant Service Engine ; and Policy Data , for storing data relating to the configuration of Policy Engine .",{"@attributes":{"id":"p-0080","num":"0088"},"figref":["FIG. 7","FIG. 7","FIG. 7","FIG. 7"],"b":["501","705","603","402","402","705","715","710","501","715","710","402"]},{"@attributes":{"id":"p-0081","num":"0089"},"figref":["FIG. 8","FIG. 8","FIG. 8"],"b":["501","520","502","503","604","402","402","504","501","604"]},{"@attributes":{"id":"p-0082","num":"0090"},"figref":["FIG. 9","FIG. 9"],"b":["402","501","705","910","402","603","910","402","705","915","710","925","403","925","920","403"]},"Following initialization, data which is to be logged, denoted by Logging Data , is collected by Logging Function  and transferred to Logging Routines  for storage. When Validation Request  is received by Information API , it is sent to Signature Validation Procedure . In some embodiments, Signature Validation Procedure  performs consistency checking on Validation Request  and, if the consistency check determines that Electronic Signature  was not properly used to sign Signed Data , then Signature Validation Procedure  will send Validation Response  via Information API  to Relying Customer Software Application  without further processing. If the consistency check determines that Electronic Signature  was properly used to sign Signed Data , or in those embodiments where no consistency checking is done by Relying Customer Service Engine , then Signature Validation Procedure  provides Validation Request  to Secure Communication Function  for transmission to Relying Participant Service Engine  via Internet . In some embodiments where consistency checking is performed by Relying Customer Service Engine , Signed Data  is not included in Validation Request  when Validation Request  is transmitted to Relying Participant Service Engine . In some embodiments, Secure Communication Function  transmits Authorization Key  with Validation Request  to Relying Participant Service Engine  to demonstrate that Validation Request  was provided by an authorized source without, for example, requiring a new exchange of Digital Certificates between Relying Customer Service Engine  and Relying Participant Service Engine  as is known in the art.","After Relying Participant Service Engine  processes Validation Request  and produces Validation Response , Validation Response  is transmitted by Relying Participant Service Engine  to Secure Communication Function  via Internet . Secure Communication Function  receives Validation Response  and provides it to Signature Validation Procedure . Signature Validation Procedure  then transmits Validation Response  to Relying Customer Software Application  via Information API .","A detailed example of some embodiments of Relying Customer Service Engine  as depicted in  is provided as follows:","System API ","System API  performs the following activities, as are known to workers in the art:\n\n","Information API  performs the following activities, as are known to workers in the art:\n\n","Initialization Function  performs the following activities, as are known to workers in the art:\n\n","Secure Communication Function  performs the following activities, as are known to workers in the art (In some embodiments, Relying Customer Service Engine  will be able to communicate with Relying Participant Service Engine  using an existing secure communication channel, and alternative communication protocols may be used, as is known in the art. For example, if Relying Customer Service Engine  and Relying Participant Service Engine  are software modules running on the same computer system, then secure facilities provided by the computer system may be employed for communication between the software modules and some of the following activities would be simplified as is known in the art):\n\n","Logging Function  performs the following activities, as are known to workers in the art:\n\n","Signature Validation Procedure  performs the following activities, as are known to workers in the art:\n\n",{"@attributes":{"id":"p-0092","num":"0161"},"figref":["FIG. 10","FIG. 10","FIG. 10"],"b":["403","610"]},"In some embodiments, as depicted in , policy information is provided to Policy Engine  by the Relying Participant in the form of a policy data file, depicted as Policy Data . Policy Engine  converts Policy Data  to an internal format depicted as Policy Tables . Policy Engine  then uses Policy Tables  in processing Validation Responses. In some embodiments not depicted in , policy decision rules are built into the Policy Engine, and Policy Data and the corresponding Policy Tables are not used.","For example, in some embodiments of Policy Engine  depicted in , Policy Engine  performs the following activities, as are known to workers in the art:\n\n",{"@attributes":{"id":"p-0095","num":"0180"},"figref":["FIG. 11","FIG. 11"],"b":["403","1125","1125","403","613","1105","1110","1115","613","403","613","403","613"]},"In some embodiments, as part of the initialization activity, Signature Validation Procedure  establishes a secure communication channel with a Digital Certificate verification facility. In some embodiments, and for example, as depicted in , the Digital Certificate verification facility comprises Secude Software , Identrus Server , Issuing Participant-Identrus Server , and Identrus Root Server . As depicted in , Identrus Server , Issuing Participant-Identrus Server , and Identrus Root Server  communicate via a computer communication network such as the Internet, which is depicted as Internet .","In some embodiments, data relating to the activities performed by Relying Participant Service Engine , denoted by Logging Data , including for example activities that occurred during initialization, are collected by Logging Function  and transferred to Log Files  for storage.","Following initialization, in some embodiments, a Relying Customer Service Engine, depicted in  as Relying Customer Service Engine , establishes a secure communication channel with Secure Communication Function . In some embodiments, the secure communication channel comprises a computer communication network such as the Internet, and is depicted as Internet  in . In some embodiments, Secure Communication Function  generates an Authorization Key and sends the Authorization Key to Relying Customer Service Engine .","When a Validation Request is received by Secure Communication Function  from Relying Customer Service Engine , the Validation Request is sent to Signature Validation Procedure . In some embodiments, Signature Validation Procedure  performs consistency checking on the Validation Request, and the Validation Request will include both an Electronic Signature and Signed Data that was allegedly signed by the Electronic Signature. If the consistency check determines that the Electronic Signature was used to properly sign the Signed Data, or if no consistency checking is performed, then Signature Validation Procedure  formulates a Query based on the Digital Certificates contained in the Validation Request. If the consistency check determines that the Electronic Signature was not used to properly sign the Signed Data, then, in some embodiments, Signature Validation Procedure  will send a Validation Response to Relying Customer Service Engine  via Secure Communication Function  without further processing of the Validation Request, while, in other embodiments, Signature Validation Procedure  will proceed to formulate a Query based on the Digital Certificates contained in the Validation Request.","After Signature Validation Procedure  formulates a Query, Signature Validation Procedure  transmits the Query to a Digital Certificate verification facility for processing. The Digital Certificate verification facility responds by transmitting a Query Response to Signature Validation Procedure . In some embodiments, information in the Query Response related to the status of individual Digital Certificates is cached in Relying Participant Service Engine  for use when a Digital Certificate verification facility is temporarily unavailable.","When Signature Validation Procedure  receives the Query Response, or, in some embodiments, when Signature Validation Procedure  determines that the Digital Certificate verification facility is unavailable, Signature Validation Procedure  formulates a Validation Response based on the Query Response and the Validation Request. In some embodiments, if a Digital Certificate verification facility was unavailable, the Validation Response is also formulated based on any cached information concern the status of the individual Digital Certificates that were contained in the Validation Request. In some embodiments, the Validation Response is also formulated based on determinations made by a Policy Engine, depicted in  by Policy Engine .","After Signature Validation Procedure  formulates a Validation Response, Signature Validation Procedure  transmits the Validation Response to Relying Customer Service Engine  via Secure Communication Function   and Internet .","A detailed example of some embodiments of Relying Participant Service Engine  as depicted in  is provided as follows:","Initialization Function ","Initialization Function  performs the following actions, as are known to workers in the art:\n\n","Logging Function  performs the following activities, as are known in the art:\n\n","Secure Communication Function  performs the following activities, as are known in the art (In some embodiments, as is known in the art, Relying Participant Service Engine  may establish secure communications with a plurality of Relying Customer Service Engines, with Relying Participant Service Engine  performing as a server and each Relying Customer Service Engine performing as a client. This configuration is commonly referred to in the art as a client\/server architecture. In some embodiments, Relying Customer Service Engine  will be able to communicate with Relying Participant Service Engine  using an existing secure communications channel, and alternative communications protocols may be used, as is known in the art. For example, if Relying Customer Service Engine  and Relying Participant Service Engine  are software modules running on the same computer system, then secure facilities provided by the computer system may be employed for communication between the software modules and some of the following activities would be simplified as is known in the art):\n\n","Signature Validation Procedure  performs the following activities, as are known in the art:\n\n",{"@attributes":{"id":"p-0108","num":"0251"},"figref":"FIG. 12"},"As depicted in , the activity of receiving a Validation Request from a Relying Customer Interface is accomplished by Receive Validation Request from Relying Customer Interface . In some embodiments depicted in  and discussed in reference to Relying Customer Service Engine , Receive Validation Request from Relying Customer Interface  is performed by Information API , Signature Validation Procedure , and Secure Communication Function . In other embodiments, Receive Validation Request from Relying Customer Interface  is performed as is known in the art.","As depicted in , the activity of formulating a Query responsive to the Validation Request is accomplished by Formulate Query responsive to Validation Request . In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , Formulate Query responsive to Validation Request  is performed by Signature Validation Procedure . In other embodiments, Formulate Query responsive to Validation Request  is performed as is known in the art.","As depicted in , the activity of transmitting the Query to a Relying Participant Interface is accomplished by Transmit Query to Relying Participant Interface . In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , Transmit Query to Relying Participant Interface  is performed by Signature Validation Procedure . In other embodiments, Transmit Query to Relying Participant Interface  is performed as is known in the art.","As depicted in , the activity of receiving a Query Response from the Relying Participant Interface is accomplished by Receive Query Response from Relying Participant Interface . In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , Receive Query Response from Relying Participant Interface  is performed by Signature Validation Procedure . In other embodiments, Receive Query Response from Relying Participant Interface  is performed as is known in the art.","As depicted in , the activity of formulating a Validation Response responsive to the Query Response is accomplished by Formulate Validation Response responsive to Query Response . In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , Formulate Validation Response responsive to Query Response  is performed by Signature Validation Procedure  in conjunction with, in some embodiments, Policy Engine . In other embodiments, Formulate Validation Response responsive to Query Response  is performed as is known in the art.","As depicted in , the activity of transmitting the Validation Response to the Relying Customer Interface is accomplished by Transmit Validation Response to Relying Customer Interface . In some embodiments depicted in  and discussed in reference to Relying Customer Service Engine , Transmit Validation Response to Relying Customer Interface  is performed by Information API , Signature Validation Procedure , and Secure Communication Function . In other embodiments, Transmit Validation Response to Relying Customer Interface  is performed as is known in the art.",{"@attributes":{"id":"p-0115","num":"0258"},"figref":"FIG. 13"},"As depicted in , the activity of receiving a Validation Request from a Communication Channel is accomplished by Receive Validation Request from Communication Channel . In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , Receive Validation Request from Communication Channel  is performed by Secure Communication Function . In other embodiments, Receive Validation Request from Communication Channel  is performed as is known in the art.","As depicted in , the activity of formulating a Query responsive to the Validation Request is accomplished by Formulate Query responsive to Validation Request . In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , Formulate Query responsive to Validation Request  is performed by Signature Validation Procedure . In other embodiments, Formulate Query responsive to Validation Request  is performed as is known in the art.","As depicted in , the activity of transmitting the Query to a Relying Participant Interface is accomplished by Transmit Query to Relying Participant Interface . In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , Transmit Query to Relying Participant Interface  is performed by Signature Validation Procedure . In other embodiments, Transmit Query to Relying Participant Interface  is performed as is known in the art.","As depicted in , the activity of receiving a Query Response from the Relying Participant Interface is accomplished by Receive Query Response from Relying Participant Interface . In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , Receive Query Response from Relying Participant Interface  is performed by Signature Validation Procedure . In other embodiments, Receive Query Response from Relying Participant Interface  is performed as is known in the art.","As depicted in , the activity of formulating a Validation Response responsive to the Query Response is accomplished by Formulate Validation Response responsive to Query Response . In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , Formulate Validation Response responsive to Query Response  is performed by Signature Validation Procedure  in conjunction with, in some embodiments, Policy Engine . In other embodiments, Formulate Validation Response responsive to Query Response  is performed as is known in the art.","As depicted in , the activity of transmitting the Validation Response to the Communication Channel is accomplished by Transmit Validation Response to Communication Channel . In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , Transmit Validation Response to Communication Channel  is performed by Secure Communication Function . In other embodiments, Transmit Validation Response to Communication Channel  is performed as is known in the art.","In some embodiments, the activity of receiving a Validation Request from a Relying Customer Interface is accomplished by a Validation Request Receiver element. In some embodiments depicted in  and discussed in reference to Relying Customer Service Engine , the Validation Request Receiver element for receiving a Validation Request from a Relying Customer Interface comprises Information API , Signature Validation Procedure , and Secure Communication Function . In other embodiments, the Validation Request Receiver element for receiving a Validation Request from a Relying Customer Interface is implemented as is known in the art.","In some embodiments, the Validation Request Receiver element for receiving a Validation Request from a Relying Customer Interface comprises a Consistency Checker element. In some embodiments depicted in  and discussed in reference to Relying Customer Service Engine , the Consistency Checker element comprises Signature Validation Procedure . In other embodiments, the Consistency Checker element is implemented as is known in the art.","In some embodiments, the activity of receiving a Validation Request from a Communication Channel is accomplished by a Validation Request Receiver element. In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , the Validation Request Receiver element for receiving a Validation Request from a Communication Channel comprises Secure Communication Function . In other embodiments, the Validation Request Receiver element for receiving a Validation Request from a Communication Channel is implemented as is known in the art.","In some embodiments, the activity of formulating a Query responsive to the Validation Request is accomplished by a Query Formulator element. In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , the Query Formulator element comprises Signature Validation Procedure . In other embodiments, the Query Formulator element is implemented as is known in the art.","In some embodiments, the Query Formulator comprises a Consistency Checker element. In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , the Consistency Checker element comprises Signature Validation Procedure . In other embodiments, the Consistency Checker element is implemented as is known in the art.","In some embodiments, the activity of transmitting the Query to a Relying Participant Interface is accomplished by a Query Transmitter element. In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , the Query Transmitter element comprises Signature Validation Procedure . In other embodiments, the Query Transmitter element is implemented as is known in the art.","In some embodiments, the activity of receiving a Query Response from the Relying Participant Interface is accomplished by a Query Response Receiver element. In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , the Query Response Receiver element comprises Signature Validation Procedure . In other embodiments, the Query Response Receiver element is implemented as is known in the art.","In some embodiments, the activity of formulating a Validation Response responsive to the Query Response is accomplished by a Validation Response Formulator. In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , the Validation Response Formulator element comprises Signature Validation Procedure  in conjunction with, in some embodiments, Policy Engine . In other embodiments, the Validation Response Formulator element is implemented as is known in the art.","In some embodiments, the activity of transmitting the Validation Response to the Relying Customer Interface is accomplished by a Validation Response Transmitter element. In some embodiments depicted in  and discussed in reference to Relying Customer Service Engine , the Validation Response Transmitter element for transmitting the Validation Response to the Relying Customer Interface comprises Information API , Signature Validation Procedure , and Secure Communication Function . In other embodiments, the Validation Response Transmitter element for transmitting the Validation Response to the Relying Customer Interface is implemented as is known in the art.","In some embodiments, the activity of transmitting the Validation Response to the Communication Channel is accomplished by a Validation Response Transmitter. In some embodiments depicted in  and discussed in reference to Relying Participant Service Engine , the Validation Response Transmitter element for transmitting the Validation Response to the Communication Channel comprises Secure Communication Function . In other embodiments, the Validation Response Transmitter element for transmitting the Validation Response to the Communication Channel is implemented as is known in the art.","As described previously in this specification, the present invention may be implemented in hardware, in software running on general or special purpose computers, or as a combination of hardware and software. Software implementations may employ a wide variety of programming languages, such as Java, COBOL, C, C++, and other procedural languages as is known in the art. For example, an embodiment of Application Programming Interfaces of the present invention for the Java programming language is provided as follows:","The Java API Specification","1. Information API","In this example and some embodiments of the present invention, the Information API defines the flow of information between a Relying Customer Software Application and systems, apparatuses or methods of the present invention. The Information API supports the PKCS7 signature validation functionality, as is known in the art. The PKCS7 signature validation functionality indicates to the Relying Customer Service Application that Identrus PKCS7 did or did not sign particular data, and that the PKCS7 contains or does not contain a valid Identrus signature, certificate status, and certificate chain status. The Information API also provides the Relying Customer Service Application with information about the contents of the PKCS7, as well as additional optional information.","This service is provided by a single Java Class with the following specification:","public class IdentrusValidation","extends Object","Constructor:","public IdentrusValidation( ) throws IdentrusValidationException","The constructor requires no arguments.","Method to Check PKCS7 Status:","public java.util.Properties checkStatus(String Base64PKCS7, byte[ ] signedData) throws IdentrusValidationException","This method is used to check the status of an Identrus PKCS7 signature and its associated data.","The input arguments are:",{"@attributes":{"id":"p-0136","num":"0000"},"ul":{"@attributes":{"id":"ul0041","list-style":"none"},"li":["Base64PKCS7\u2014The PKCS7 signature in the same BASE64 String format output by the Identrus ISIL or the Identrus Plugin.","SignedData\u2014A byte array containing the data alleged to have been signed by the PKCS7."]}},"The output is a single util.Properties object which contains the following KEY-VALUE pairs:\n\n","In this example and some embodiments of the present invention, the Policy API defines the flow of information between a Policy Engine and the Relying Participant Service Engine portion of the present invention. The general outline is a class:\n\n","The method \u2018policy\u2019 is provided a Java Properties object containing all of the known information about the Digital Signature, Digital Certificates and Signed Data. The value for SIGNATUREISVALID must be returned in the Properties object. Any additional values placed into the Properties object will also be returned to the Relying Customer Software Application that invoked the Information API.","3. System API","In this example and some embodiments of the present invention, the System API defines the flow of configuration and control information between a Relying Customer Software Application and the present invention.","Class IdentrusValidation","Object","+- - - - IdentrusValidation","public class IdentrusValidation","extends Object","Constructor:","public IdentrusValidation(Properties configPropertiesFile) throws IdentrusValidationException","The constructor takes a single argument, the Configuration Properties File that, in some embodiments, is supplied by the Relying Participant. This Java Properties file contains configuration specific values such as the Domain Name Server (\u201cDNS\u201d) location of the Relying Participant's validation service, etc.","public class IdentrusValidation","extends Object","Constructor:","public IdentrusValidation(Properties configPropertiesFile) throws IdentrusValidationException","The constructor takes a single argument, the Configuration Properties File that, in some embodiments, is supplied by the Relying Participant. This Java Properties file contains configuration specific values such as the DNS location of the Relying Participant's validation service, etc.","System Initialization:","public void init(String ConfigurationPropertiesFilename) throws IdentrusValidationException","The init( ) method takes a single argument, the Configuration Properties File that, in some embodiments, is supplied by the Relying Participant. This Java Properties file contains configuration specific values such as the DNS location of the Relying Participant's validation service, etc.","Register Policy Engine:","public String registerPolicyEngine(IdentrusValidationPolicy policyObject)) throws IdentrusValidationException","The registerPolicyEngine( ) method takes a single argument, the IdentrusValidationPolicy class that, in some embodiments, is supplied by the Relying Participant. This object conforms to the IdentrusValidationPolicy Interface defined in the Policy API's. After this invocation, the specified object will be invoked for each invocation of the Application API checkStatus( ).","Register Log Record Handler:","public String registerLogHandler(IdentrusLogRecordHandler LogRecordObject)) throws IdentrusValidationException","The registerLogHandler( ) method takes a single argument, the IdentrusLogRecordHandler class that, in some embodiments, is supplied by either the Relying Participant or the Relying Customer, or both. This object conforms to the IdentrusLogRecordHandler Interface defined in the System API's. After this invocation, the specified object will be invoked each time an IRCF Logging Record is available so it may be recorded or transmitted by the LogRecordObject.","Any number of objects may be IdentrusLogRecordHandler registered. Each registered IdentrusLogRecordHandler will be invoked for each log record.","Interface IdentrusLogRecordHandler {",{"@attributes":{"id":"p-0147","num":"0000"},"ul":{"@attributes":{"id":"ul0046","list-style":"none"},"li":{"@attributes":{"id":"ul0046-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0047","list-style":"none"},"li":"Public void logRecord(String LogRecord);\n\n}\n"}}}},"It should be understood that the preceding is merely a detailed description of some examples and embodiments of this invention and that numerous changes to the disclosed embodiments can be made in accordance with the disclosure herein without departing from the spirit or scope of the invention. The preceding description, therefore, is not meant to limit the scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute part of the specification, illustrate preferred embodiments of the invention, and together with the description, serve to explain the principles of the invention.","In the accompanying drawing:",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 6","FIGS. 4 and 5"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
