---
title: Method and apparatus for dynamic, real-time ad insertion based on meta-data within a hardware based root of trust
abstract: A client computing system inserts selected advertising into digital content. Ads may be inserted into content based on a dynamic advertising matching process that is securely implemented within a hardware-based root of trust. User profiles used in ad matching may be privacy protected and maintained with confidentiality protection in the client computing system and/or a service provider server, respectively. When a client computing system makes a request to the service provider server for content with specified ad slots, the request may be made with the client's EPID signature, which is inherently privacy protected. The hardware-based root of trust protects insertion of selected ads into the linear rendering flow of the content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08560453&OS=08560453&RS=08560453
owner: Intel Corporation
number: 08560453
owner_city: Santa Clara
owner_country: US
publication_date: 20110630
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["The present disclosure generally relates to the field of computing system architectures for securely processing digital content. More particularly, an embodiment of the invention relates to dynamic, real-time ad insertion into digital content by a computing system based on meta-data within a hardware-based root of trust.","On open computing platforms, such as a personal computer (PC) system for example, when playing premium content (such as from a DVD, Blu-Ray, etc.), the digital rights management (DRM) processing and key management are typically performed in software by a media player application program. These schemes are not well protected and there have been instances of hacking, resulting in pirated content and loss of revenue to content owners. When content is played, even though the media decompression (such as H.264, MPEG-2, etc.) is done in hardware, the content is in the clear in system memory and can be stolen with software-based and\/or hardware-based attacks. Due to these noted security weaknesses, only lower fidelity (such as standard definition (SD)) content or less valuable high definition (HD) content is typically distributed to open computing platforms. Improvements to the secure handling of digital content by open computing platforms (such as a PC, for example) are desired.","Embodiments of the present invention comprise a system architecture that provides a hardware-based root of trust (HW ROT) solution for supporting distribution and playback of premium digital content. In an embodiment, HW ROT for digital content and services is a solution where the basis of trust for security purposes is rooted in hardware and firmware mechanisms in a client computing system, rather than in software. From this root of trust, the client computing system constructs an entire media processing pipeline that is protected for content authorization and playback. In embodiments of the present invention, the security of the client computing system for content processing is not dependent on the operating system (OS), basic input\/output system (BIOS), media player application, or other host software. In order to compromise the system, one will need to compromise the hardware and\/or firmware mechanisms, as opposed to attacking the software running on top of the OS.","Embodiments of the present invention provide for dynamic, real-time insertion of advertising into digital content being processed by the client computing system based on meta-data within the hardware-based root of trust.","In the following description, numerous specific details are set forth in order to provide a thorough understanding of various embodiments. However, various embodiments of the invention may be practiced without the specific details. In other instances, well-known methods, procedures, components, and circuits have not been described in detail so as not to obscure the particular embodiments of the invention. Further, various aspects of embodiments of the invention may be performed using various means, such as integrated semiconductor circuits (\u201chardware\u201d), computer-readable instructions organized into one or more programs stored on a computer readable storage medium (\u201csoftware\u201d), or some combination of hardware and software. For the purposes of this disclosure reference to \u201clogic\u201d shall mean hardware, software (including for example micro-code that controls the operations of a processor), firmware, or some combination thereof.","Embodiments of the present invention protect content protection processing, key management processing, and content playback by using firmware and hardware in the CPU, chipset and integrated graphics\/media engine of a client computing system  to perform these functions. Embodiments of the present invention provide end-to-end protection of the content as the content is processed by components within a computing system.  is a diagram of a secure content processing pipeline  according to an embodiment of the present invention. Content  may be accessible by a service provider (SP) server . Content  may be any digital information, such as audio, video, or audio\/video data, images, text, books, magazines, games, or application programs. Service provider server  may include one or more servers for providing the content to a client computing system over any telecommunications channel (such as the Internet, cellular networks, wired or wireless networks, etc.). Content may be protected by any known content protection technology  (e.g., digital rights management (DRM) technology, cryptographic techniques, etc.) while stored in the SP server and during transfer to the client computing system . In one embodiment, the content may be protected by the Enhanced Privacy ID (EPID) signature verification protocol as discussed herein. In one embodiment, video data may be encrypted using the Advanced Encryption Standard (AES) cryptographic processing with CTR mode. The client computing system  may be a PC, laptop, netbook, tablet computer, handheld computer, smart phone, personal digital assistant (PDA), set top box, consumer electronics equipment, or any other computing device capable of receiving, storing and rendering content.","Within the client computing system, content protection processing  may be performed by a Security Processor . In one embodiment, the security processor may be within a chipset of the client computing system. In an embodiment, the chipset comprises a platform control hub (PCH). In another embodiment, the Security Processor may be within the CPU of the client computing system. In another embodiment having a system-on-chip (SOC) configuration, the Security Processor may be integral with other system components on a single chip. In one embodiment, the security processor comprises a Manageability Engine (ME). In other embodiments, other types of security processors may be used. The Security Processor is a subsystem implemented in hardware and firmware that interacts with other components of the client computing system. The Security Processor operates by loading firmware code from a protected flash memory region and executing the firmware code in protected memory. Since the content protection processing is performed in hardware and firmware within the Security Processor, protection of the content may be improved over software-based systems.","Cryptographic key information may be sent from the security processor over a protected chip to chip interconnect  to a component containing a central processing unit (CPU) and an integrated graphics (GFX)\/media engine. In an embodiment, the protected chip to chip interconnect  comprises a secure Direct Media Interface (DMI) communications link to the CPU\/GFX component. DMI comprises a chip-to-chip interconnect with two unidirectional lanes of concurrent data traffic, and isochronous transfer with improved quality of service. Data transferred over the DMI link may be protected by known cryptographic processing techniques. In an embodiment, the chip-to-chip secure link may be used for passing encrypted title keys over the DMI. Security is based on a shared secret between the PCH and the CPU. This shared secret may be established on each power cycle and can vary between families of products, generations and random groupings as needed to ensure protection and integrity of the shared secret. The DMI mechanism is independent of the OS, the BIOS, and software running on the CPU. The DMI mechanism may be used to create a trust relationship between the security processor (in the PCH) and the CPU.","The GFX engine  may include content protection processing to decrypt the content. The GFX engine also includes decoder logic  to process\/decode the decrypted audio\/video content and pass the audio\/video content as media blocks to a graphics processing unit (GPU) within the GFX engine . The GPU includes security techniques, including using encoder logic , to protect the media blocks during processing in memory. GFX engine  also includes composition logic  to compose the image data to be shown on display . As the content is being handled within and between the security processor in the PCH and the GFX engine in the CPU\/GFX component, the content may be protected by a hardware protected data path . In an embodiment, the hardware protected data path comprises a Protected Audio Video Path (PAVP) to maintain the security of the content. PAVP also supports an encrypted connection state between system components. By using the PAVP, the system may further protect the content during transfer between system components and within memory.","The interface between the GFX engine, the PCH, and the display  may be implemented by protected wired\/wireless display links . In one embodiment, display data sent from the GFX engine via a memory through the PCH to the display may be protected by a High-Bandwidth Digital Content Protection (HDCP) content protection scheme. The HDCP specification provides a robust, cost-effective and transparent method for transmitting and receiving digital entertainment content to compliant digital displays. In an embodiment, the wired link may be implemented according to the HDCP Specification, Revision 2.0, available from Digital Content Protection, LLC, or subsequent revisions. HDCP may be employed to deter copying of the display data as the data travels over a DisplayPort, Digital Visual Interface (DVI), High-Definition Multimedia Interface (HDMI), Gigabit Video Interface (GVIF), or a Unified Display Interface (UDI) connection. The HDCP revision 2.0 specification addresses emerging usage models that let end users conveniently connect displays, devices and home theater systems via standard protocols and interfaces like TCP\/IP, USB, Wi-Fi and WirelessHD. The HDCP revision 2.0 specification uses standards-based RSA public key and Advanced Encryption Standard (AES) 128-bit encryption for robust content protection. In an HDCP system, two or more HDCP devices are interconnected through an HDCP-protected interface. The audiovisual content protected by HDCP flows from the Upstream Content Control Function into the HDCP system at the most upstream HDCP Transmitter. From there, the HDCP content, encrypted by the HDCP system, flows through a tree-shaped topology of HDCP receivers over HDCP-protected interfaces.","The HDCP content protection mechanism includes three elements: 1) Authentication of HDCP receivers to their immediate upstream connection (to an HDCP transmitter). The authentication protocol is the mechanism through which the HDCP transmitter verifies that a given HDCP Receiver is licensed to receive HDCP. 2) Revocation of HDCP receivers that are determined by the DCP to be invalid. 3) HDCP encryption of audiovisual content over the HDCP-protected interfaces between HDCP transmitters and their downstream HDCP receivers. HDCP receivers may render the HDCP content in audio and visual form for human consumption. HDCP receivers may be HDCP repeaters that serve as downstream HDCP transmitters emitting the HDCP content further downstream to one or more additional HDCP receivers. In one embodiment, display data sent to the display  may be sent over a protected wireless display (WiDi) link  using 802.11n wireless local area network (WLAN) technology.","As can be seen from , in embodiments of the present invention, from the time the content is received from the service provider server  until the content is displayed on the display , no cryptographic key or content is available in unencrypted form to any software or unauthorized hardware running on the computing system. Further, memory protection for video data is offered over the whole chain across the decrypt, decode\/encode, compose and display pipelines. This capability is offered at the full memory bandwidth without compromising overall system performance.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2","b":["104","202","202","218","220","222","218","220","222"]},"The deployment component includes a certificate issuance component , a key generation (Key Gen) component , and a revocation manager . Certificate (Cert) issuance component  issues a digital certificate for the SP Server and Client components giving them the authorization to interact with such client systems for service deployment. Key generation (Key Gen) component  generates a cryptographic signing key pair, a root key pair, digital certificates, and group public keys, and signs the group public keys for each group. Revocation manager  determines identifiers and signatures of client computing systems to be added to a revocation list (RL), updates the RL, and distributes updated RLs.","The SP server  communicates over network  (such as the Internet) with the client computing system. The service provider server comprises a SP server application  and a SP server agent . The SP server application provides content browsing capabilities. The SP server agent  controls the sending of client specific messages, manages cryptographic keys and authorized user tokens, and maintains content delivery service status (for deployment purposes  and  could be physically different servers firewalled and separated). Content encrypter  accepts content  and encrypts the content for secure delivery to a client computing system. Content server  sends the encrypted content to the client. Key server  is responsible for provisioning the title keys to the client computing systems within an authenticated session. Server certificate  is used by the SP server agent to participate in mutual authentication and establishment of the authenticated session with the client computing systems. Communications links between SP server agent , key server , and content server  are protected by well accepted information security practices. The key server has the highest network and access protection to ensure only authorized parties are able to reach it and the keys managed by the key server are isolated and firewalled from attackers from outside network entities. The SP server agent or the key server has access to the private key associated with the server certificate . In an embodiment, this private key and all operations done with this private key are protected using a hardware security module (HSM) (not shown in ) on the server.","In an embodiment, the cryptographic scheme used to authenticate the client computing system with the SP server comprises a cryptographic authentication protocol protecting a user's privacy based on the use of zero-knowledge proofs. In an embodiment, the cryptographic authentication protocol comprises the Enhanced Privacy ID (EPID) scheme, a Direct Anonymous Attestation (DAA) scheme with enhanced revocation capabilities. EPID mitigates the privacy issues of common Rivest, Shamir, Adleman (RSA)\u2014public key infrastructure (PKI) security implementations where every individual is uniquely identified for each transaction. Instead, EPID provides the capability of remote attestation but only identifies the client computing system as having a component (such as a chipset) from a particular technology generation. EPID is a group signature scheme, where one group's public key corresponds to multiple private keys, and private keys generate a group signature which is verified by the group public key. EPID provides the security property of being anonymous and unlinkable\u2014given two signatures, one cannot determine whether the signatures are generated from one or two private keys. EPID also provides the security property of being unforgeable\u2014without a private key, one cannot create a valid signature.","Generally, setting up a secure communications channel with EPID may be accomplished as follows. A first party (such as the client computing system) sends an EPID certificate to a second party (such as the service provider server). Never knowing the identity of the first party and only knowing the first party is a computing platform with a trusted security processor, the second party authenticates the first party. The first party then authenticates the second party using the second party's public key certificate. Since the second party doesn't require privacy, the second party's public key certificate may not be an EPID certificate (but it could be). The parties may then enter into a Diffie-Hellman (DH) key exchange agreement.","Various suitable embodiments of DAA and EPID are described in the following co-patent applications, incorporated herein by reference: \u201cAn Apparatus and Method of Direct Anonymous Attestation from Bilinear Maps,\u201d by Ernest F. Brickell and Jingtao Li, Ser. No. 11\/778,804, filed Jul. 7, 2007; \u201cAn Apparatus and Method for a Direct Anonymous Attestation Scheme from Short-Group Signatures,\u201d by Ernest F. Brickell and Jingtao Li, Ser. No. 12\/208,989, filed Sep. 11, 2008; and \u201cDirect Anonymous Attestation Scheme with Outsourcing Capability,\u201d by Ernest F. Brickell and Jingtao Li, Ser. No. 12\/286,303, filed Sep. 29, 2008. In other embodiments, other authentication and attestation schemes may also be used.","The client computing system comprises at least three main components\u2014host software, chipset hardware\/firmware, and the CPU\/GFX\/Media engines. It is assumed in embodiments of the present invention that the host software is untrusted. Even if the host software gets attacked, no secrets will be compromised. Host software is responsible for network connection to SP server  and downloading media from content server . Host software acts as a proxy between various SP servers and the chipset hardware\/firmware. Host software sends encrypted content directly to the graphics hardware after the chipset hardware\/firmware has completed title key unwrap and injection into the CPU\/GFX component.","Chipset hardware\/firmware is responsible for all protected processing, taking the role of the protected device for content protection processing. In an embodiment, the chipset hardware\/firmware sends protected title keys to the graphics hardware using the DMI mechanism.","The CPU\/GFX component is responsible for final stream decryption, decode and display. The GFX engine is a passive device, making no policy decisions. When asked, the GFX engine simply decrypts the content, then decodes the submitted video slices. In an embodiment, the GFX engine (with protected media encoders) re-encrypts the display content for HDCP output protection over HDMI and wireless (e.g., WiDi) displays.","A protected client computing system must be remotely identified by a service provider before sending highly sensitive information. The mechanism used to identify the platform must not violate user privacy. Embodiments of the present invention provide a protected mechanism for a service provider to verify over the network that the service provider server is communicating to a suitable client computing system and transfer title keys and other confidential material to that client computing system. In one embodiment, the protocol utilized to establish a protected session between the service provider server and the client computing system is EPID. EPID allows for a single public key to anonymously verify the signature generated by N-private keys in what is called an EPID group. To implement EPID, each chipset contains a unique private key blown into the platform control hub (PCH) fuses during silicon manufacturing. In an embodiment, the chipset manufacturer places 1,000,000 private keys in a single group and produces 400 groups for each chipset produced. In order to act as the EPID verifier, each service provider will be provisioned with these 400 public keys.","Once a protected EPID session has been established, the service provider server is free to exchange protected confidential information with the protected client computing system. For content streaming, protected title keys may be passed from an SP server to the security processor in the chipset. The security processor sends the protected title keys to the graphics and audio hardware. At this point, encrypted video and audio content can be directly sent from a content server  to client computing system graphics and audio hardware which decrypts, decodes, and displays the content. For downloading content, the security processor binds the title keys to the client computing system using a unique platform storage key (again burned into PCH fuses during manufacturing) and returns the bound keys to media player software. When playback is desired, the bound title keys are re-submitted to the security processor, which unbinds and sends them in a protected manner to the graphics and audio hardware.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 3","FIG. 2"],"b":["101","302","104","201","302","304","304","304","306"]},"SP client application  enables the SP player\/media browser  and the service agent  to access content protection features on the client computing system's hardware and firmware and for relaying messages to the service provider server . In an embodiment, the SP client application comprises a host agent software development kit (SDK) including content protection APIs. In an embodiment, the SP client application communicates with the security processor  in the platform control hub (PCH)  of the chipset.","Audio driver  provides an interface between the media player and audio decrypt hardware . Similarly, graphics (GFX) driver  provides an interface between the media player and the GFX engine . In an embodiment, the PCH  comprises security processor , which executes firmware to provide content protection functionality, along with other well known system functions. In an embodiment, the security processor may be implemented by a Manageability Engine (ME). As content is handled by the PCH  and the GFX engine , the content may be protected at least in part by Protected Audio Video Path (PAVP) components ,  in the PCH hardware\/firmware and GFX engine hardware, respectively.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 4","b":["402","302","404","104","101"]},"The client computing system then gets the encrypted content at block  from content server  over network  (for streaming operations) or from local storage on the client computing system (for content previously purchased, downloaded, and stored). The system is prepared to work on video slices (e.g., sub-frame). As a result, the hardware can process the data as soon as the first slice of data is submitted.","At block , the user initiates playback of the selected content using the SP player\/media browser . The key blob is submitted to the security processor  for unpacking and extracting of the title key. When that is done, the title key is loaded by the security processor into the graphics hardware  for decryption. The SP player\/media browser submits the encrypted content to the media processing engine within GFX engine  at block . The GFX engine decrypts the content using the title keys and re-encrypts the content using a local protected key. Re-encrypted data may be stored in protected local or system memory. The re-encrypted content is subsequently obtained, decrypted, and decompressed at block . The decrypt is performed first. Once the data is decrypted, the data is decoded\/decompressed. Once the data is decompressed, the data is re-encrypted and passed to the composition engine via the system memory. Once the composition is finished, the data is again protected and passed using system memory to the display engine. In an embodiment, each component along the way has the ability to decrypt, process and re-encrypt as necessary.","At block , the GFX engine re-encrypts the media content using HDCP technology (in an embodiment) and delivers the content to the display for viewing by the user. At each step of the process, the content is never in the clear where it is accessible by software or unauthorized hardware components running on the client computing system.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 5","FIG. 3"],"b":["104","201","101","500","502","500","504","320","504","506","508","521","519","510","302","304","308","511"]},"GFX engine  comprises a plurality of components. Media encrypt\/decrypt engine  comprises logic to encrypt and decrypt content. Media encode\/decode engine  comprises logic to encode and decode content. GFX Composition (Comp) engine  comprises logic to construct display images. Display engine  comprises logic to pass the composed display images to the display. Display encrypt\/decrypt engine  comprises logic to encrypt and decrypt display data prior to sending the display data to display  over protected link . Memory encrypt\/decrypt engine  comprises logic to encrypt and decrypt data stored in protected intermediate surfaces  in memory . Memory  also includes logic to implement confidentiality and integrity protected memory operations .","Second component  comprises a plurality of components, some of which are not shown in order to simplify . Second component comprises a security processor . Security processor includes firmware and\/or hardware logic to provide attestation, provisioning key management, output control, and ad matching operations  for the client computing system. Security processor also includes fuses , shared secret , and trust anchors  for supporting a PKI such as verification keys and key hierarchy information. Fuses ,  are programmed into the hardware of the first and second components during manufacturing of the chipset with key material for EPID use. The hardware root of trust is built up from the information programmed into the fuses on the manufacturing floor when the client computing system is manufactured. This ensures that each individual client computing system is unique, yet privacy protected. Shared secret  is hard-coded into the hardware of the first and second components during manufacturing of the chipset and CPU\/GFX components. In an embodiment, the shared secret may be used in setting up the secure chip to chip communications channel over the DMI link .","Client computing system also includes a protected real time clock  for providing secure clock services, a display , and a non-volatile memory (NVM) . In an embodiment, the protected real-time clock may be seeded by a third party, and may be virtualized for multiple service providers. The NVM may be used to store the firmware image for the second component, as well as to store temporary data (such as integrity and state information) for security processor processing operations.","In an embodiment, a processing flow may be described as follows. SP player\/media browser  presents a user interface to the user. The user goes to the service provider's web site to browse available content. The SP web site has an auto detection capability to determine if the user's client computing system has integrated within it the capability of authenticating with the SP server . If capable, the user is allowed to choose content. The content may be bought, rented, or subscribed to, or may be streamed. The user pays for the content. SP player\/media browser  invokes security processor  to authenticate the client computing system  with the SP server . In an embodiment, the authentication uses EPID technology. The client computing system  is authenticated at least in part by having the SP server  verify the client computing system's certificate , perform a revocation check, and verify a certification path to a certificate authority (using the EPID protocol in one embodiment). When both the client computing system  and the SP server  are authenticated, a secure communications channel may be set up based on the EPID protocol in one embodiment. In an embodiment, once the secure communication channel is set up, a command set may be used for end to end content protection capabilities.","The SP Server  provisions an encrypted title key to the client computing system, with constraints on usage of the content (e.g., time). The SP server sends the encrypted title key over the secure channel to security processor . Security processor  decrypts the encrypted title key, using its own key hierarchy. Security processor  uses a storage key to re-encrypt the newly decrypted title key to form a key blob. The key blob is bound to the client computing system for a specified time period. Security processor  sends the key blob to SP player\/media browser  running in the CPU core. SP player\/media browser  stores the key blob in HDD\/SSD . SP player\/media browser  then downloads the user-selected encrypted content. In one embodiment, the downloaded encrypted content may be stored in a content cache  in the HDD\/SSD .","When a user wants to play the content, the SP player\/media browser  submits the key blob back to the security processor . The security processor verifies the signature of the key blob, and checks usage constraints such as time, for example. The security processor  sends the encrypted title key over the encrypted channel (e.g., DMI link ) to the media encrypt\/decrypt component  of the GFX engine . The security processor instructs the SP player\/media browser that the GFX\/media engine is ready to process the encrypted content. In an embodiment, the SP player\/media browser  reads the encrypted content from content cache  in HDD\/SDD , or obtains the encrypted content from the SP server  over the network  (for a streaming application), and sends the encrypted content to the GFX engine slice by slice.","The GFX engine  processes the encrypted content in a slice by slice manner. For each slice, the SP player\/media browser reads the slice headers in the clear. The rest of the slice is encrypted so that the SP player\/media browser cannot access the content. The SP player\/media browser keeps track of playback state information using an initialization vector. The media encrypt\/decrypt engine  decrypts the content using the title key, after decrypting the encrypted title key received from the security processor. In one embodiment, the output data of the media encrypt\/decrypt engine is still compressed according to the well-known H.264 encoding scheme. In other embodiments, other encoding schemes may be used. The media encode\/decode engine  decodes each slice and then re-encrypts the slice using memory encrypt\/decrypt . The re-encrypted content slice is stored in protected intermediate surfaces  in memory . GFX composition engine  controls the composition of the image to be displayed on the display, including the foreground and background images, windows, etc. The GFX composition engine obtains the re-encrypted content slices from protected intermediate surfaces  in memory  to generate the composed image. The GFX composition engine  sends the composed image data to the display engine .","The display engine uses display encrypt\/decrypt engine  to decrypt the composed image from the encryption that was used to store the content slices in memory . The display engine  uses the display encrypt\/decrypt engine to re-encrypt the composed image data according to the HDCP technology, in one embodiment. The encrypted composed image data is sent by the GFX engine  over the protected chip to chip data interface (e.g., DMI link)  to the second component , for transfer to the display  over protected display interface link .","In an embodiment, there can be any number of concurrent, independent content streams being processed by the client computing system. Each content stream has its own cryptographic context so as not to interfere with other streams. This also allows for the client computing system to ensure that any kind of attack or compromise on one stream does not affect the other content streams.","In an embodiment, HDD\/SDD  comprises at least one user profile  and an ad cache , both of which are discussed further below. In an embodiment, client computing system comprises one or more sensors  coupled to second component . Sensors sense the environment surrounding the client computing system and report sensor information to security processor  for use by attestation, provisioning key management, output control, and dynamic context based ad matching component . In an embodiment, sensors may include a GPS system, accelerometer, compass, vibration detector, and\/or other sensors.","Embodiments of the present invention provide the capability for dynamically inserting selected advertising into digital content at the client computing system. Embodiments provide a method for inserting ads into content that is prepared for the client computing system and for a dynamic advertising matching process that is securely implemented within the HW ROT. User profiles may be privacy protected and maintained with confidentiality protection in the client computing system and\/or the SP server, respectively. When a client computing system makes a request to the SP server for an advertising stream, the request may be made with the client's EPID signature, which is inherently privacy protected. The HW ROT will protect, based on triggers, insertion of the advertising stream into the linear rendering flow of the content. In an embodiment, triggers may be based on audio watermarks or on an even-track in an MP4 filed used for packaged media.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 6","b":["609","607","102","610","605","610","605","101","104","610","605","104"]},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 7","b":["102","702","704","706","708","710","712","714","716","718","720","607"]},"SP server application may securely send content with ad slots  and\/or ad digest  to the client computing system. In various embodiments, either SP server application  on the SP server  or SP player\/media browser  on the client computing system  detects the ad slots based at least in part on ad digest  and obtains the advertising content (if not already stored within the SP server or ad cache  within the client computing system, as appropriate). In an embodiment, the advertising content may be obtained as needed in real time from an advertising server (not shown) coupled to the network. The SP player\/media browser  then displays the ads at the specified time during content rendering on the client computing system.","In an embodiment, content preparation application  may generate the ad digest describing where the ad slots are to be inserted, but not actually create the ad slots in the content. In this embodiment, content provider  sends content  and the ad digest to the SP server, and the SP server creates the ad slots in the content to form content with ad slots  based at least in part on the received ad digest.","In an embodiment, the SP server application  may securely maintain a user profile  on the SP server  for each user of a client computing system. The user profile comprises at least one of preferences and interests of the user. In one embodiment, the user may enter or select his or her preferences and\/or interests by affirmative action by the user using the SP player\/media browser . In another embodiment, the SP server application may develop and maintain the user profile based at least in part on the content and\/or ads delivered to the user's client computing system (e.g., viewing history) and\/or the user inputs received by the SP server over time. In another embodiment, user inputs may be received via sensors coupled to the client computing system, and other input mechanisms such as via a touch screen, gesture recognition, Bluetooth devices, or remote control devices. In an embodiment, the preferences may include what types of information the user is interested in, and how, when and in what format the user wants to receive the information. In an embodiment, preferences may include purchase parameters, such as financial limits for purchases, purchase notifications and approvals, etc. Other preferences may also be specified. In an embodiment, interests may include things the user selects as interests (e.g., sports, hobbies, television, film, and music genres, etc.) as well as interests determined by analyzing past behavior, such as received user inputs and delivered and\/or consumed ads and\/or content. In an embodiment, the user inputs may be stored as part of the user profile. In an embodiment, the user profile  may also be stored in the client computing system as user profile .","In an embodiment, SP server application uses one or more of the user profile , ad metadata tags , ad digest , to select ads from advertising content  for insertion into content with ad slots . In an embodiment, selecting ads from advertising content  may be performed by the SP server application using an ad matching process. In an embodiment, selected ads may be obtained from advertising content  and stored in ad cache . In an embodiment, the number of selected ads stored in the ad cache may be more than the number of ad slots in content with ad slots .","In an embodiment, ads described by one or more ad metadata tags  may be obtained as needed from another entity over network . In another embodiment, selected ads may be obtained, securely communicated to the client computing system, and stored in ad cache  in HDD\/SSD  of the client computing system. Ads may comprise any audio, video, or image content. In an embodiment, ads selected from advertising content  may be inserted into content with ad slots  at one or more ad slots, either by the SP server or the client computing system. Each ad may be uniquely identified and tagged with metadata.","Existing content metadata tags for audio content include information such as sampling rate, audio compression standard, artist, title, album, and so on. Existing content metadata tags for video content include information such as title, frame rate, video frame size, video frame format, video compression standard, chapters, captions, menus, duration, sub-titles, and so on. Ad metadata tags  may comprise one or more of an ad slot ID, ad duration, ad uniform resource locator (URL), ad type, ad report URL (e.g., a location to report ad usage statistics), and other information. Ad slots may include different sets of information depending on the type of ad slot. For example, an ad slot for a movie may include different information than an ad slot for a TV program.","In embodiments of the present invention, ads may be dynamically selected and\/or personalized on the SP server and\/or on the client. When selected on the SP server, in one embodiment the SP server fetches selected ads from ad cache  and inserts the ads into the appropriate ad slots of content with ad slots  using ad digest , and communicates the resulting modified content to the client computing system for subsequent rendering to the user. In another embodiment, the SP server selects the ads, populates the ad cache , and sends the ad cache along with content with ad slots  and ad digest  to the client computing system for insertion and playback. In an embodiment, the SP server may securely communicate the ad cache  and ad digest  to the client computing system separately from the content with ad slots . In an embodiment, there may be multiple ad digests defined for a single content with ad slots .","When selected by the attestation, provisioning key management, output control and dynamic context based ad matching component in the security processor  on the client computing device, in one embodiment the security processor selects the ads based on an ad matching process, obtains the ads from SP server  or other source via network , and stores them in ad cache  on the client. Content with ad slots  may be stored by the client computing system in content cache  of the HDD\/SSD . Ad digests may also be stored in the HDD\/SSD. At a later point in time, the security processor  instructs the graphics engine  to insert the ads from the ad cache into the content stream obtained from the content cache  during playback processing based at least in part on the ad slots, current context information of the client, and the ad digest. The ad cache, the ad digest, and of course the content with ad slots may be cryptographically protected using methods described above. In an embodiment, the ads may be encrypted using the same title key as was used for encrypting the content. In another embodiment, a different key may be used. This different key may be securely communicated to the client computing system in the same manner as the title key. In a further embodiment, the ads may be left unencrypted.","When dynamically selected on the client, ad selection may be based on one or more local contextual factors known by or discovered by the security processor  of the client computing system. The one or more contextual factors may include sensor information obtained from sensors . In an embodiment, the geographic location of the client computing system may be used to determine in real time which ads are to be inserted into ad slots in the content stream. For example, ads for local businesses may be inserted based on the current location of the client computing system. In an embodiment, the type of device comprising the client computing system may be used to determine which ads are to be inserted. That is, whether the client computing system is a tablet computer, desktop PC, laptop PC, netbook, smartphone, set top box, etc., and\/or the size, format, and\/or resolution of the display of the client computing system, may be taken into account when determining ads. In a further example, the current usage model of the client computing system may also be used, such as whether the display of the content by the client computing system is personal (i.e., solo) or communal (i.e., multiple viewers).","Other ad matching factors may include a current mobility status, such as whether the client computing system is stationary, mobile (e.g., connected to a public hotspot,) or nomadic (in transit on a transportation system such as a subway car, train, automobile, etc.), the type of content (e.g., movie vs. TV program), whether the client computing system is currently connected over a network to the service provider or not, whether the content has been downloaded to the client computing system or is being streamed over a network, whether the content has been purchased or is ad-supported, whether the client computing system's current user interface (UI) is a touch screen or other direct manipulation UI vs. a \u201clean back\u201d passive viewing\/UI mode, and whether a single content stream or multiple content streams are being processed by the client computing system. Other ad matching factors may also be used.","Embodiments of the present invention also provide for ad measurement. That is, when an ad is selected and inserted into the ad slot for playback, the client computing system (via the security processor in one embodiment) may report back to the service provider server  which ads were served and how frequently. Additionally, each time a content stream is played back, embodiments of the present invention provide the ability to trigger tracking events for ad content when played and report such tracking events back to the service provider server .","Thus, playback of the same content title may provide a different viewing experience and different ads for the user(s) depending on factors such as geographic location, type of client computing system used, playback mode, and so on.","In embodiments of the present invention, security may be improved because ad slots and selected ads that are inserted into the content (either by the SP server or the security processor or the graphics engine on the client computing system) may be very difficult to remove or modify by the user or a hacker due to the security provided by the HW ROT. Any attempt to remove or modify the ad slots, the ad digest, and\/or ads may be detected by the cryptographic techniques discussed above.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 8","b":["802","610","102","605","804","604","606","608","605","806"]},"At block , the SP server sends ad cache  to the client computing system. The SP server may also send ad digest  to the client computing system. At block , the client computing system stores the received ad cache  as ad cache  in the HDD\/SSD. In an embodiment, the SP player\/media browser may request and\/or receive the ad cache. The client computing system may also store the ad digest in the HDD\/SSSD. In an embodiment, the ad cache and\/or the ad digest may be encrypted using known means. The client computing system may store content with ad slots  either before or after storing the related ad cache and ad digest. Storage processing is now complete.","When at some later point in time the user desires to view content, playback processing starts at block  with SP player\/media browser  (at the user's direction) selecting content with ad slots  for playback. Prior to sending the content with ad slots through the secure media processing pipeline described above with reference to , the SP player\/media browser obtains the ad digest from the HDD\/SSD and sends the ad digest to the security processor at block . At block , the attestation, provisioning key management, output control, and dynamic context based ad matching component  of security processor  performs a dynamic ad matching process based on the ad digest and the current context of the client computing system (as received by sensors  and current client computing system settings), and sends information describing the ad slots and associated ad IDs to the SP player\/media browser. At block , the SP player\/media browser securely sends the content with ad slots and identified ads (from the ad cache based on the ad IDs) to graphics engine (GFX)  for rendering on the display  for viewing by the user. In various embodiments, the ads may be pulled from ad cache  on the client, ad cache  on the SP server, or from another entity at a location over network . The identified ads are inserted into the ad slots during content rendering. In an embodiment, the ads and ad digest may be maintained in encrypted form except when being processing within the security processor and\/or the graphics engine.","At block , the attestation, provisioning key management, output control, and dynamic context based ad matching component  of security processor  may monitor the rendered content and ads and report usage data describing the rendered content and ads back to the SP server application. The usage data may be encrypted and securely transmitted to the SP server based on methods described above.","Reference in the specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least an implementation. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification may or may not be all referring to the same embodiment.","Also, in the description and claims, the terms \u201ccoupled\u201d and \u201cconnected,\u201d along with their derivatives, may be used. In some embodiments of the invention, \u201cconnected\u201d may be used to indicate that two or more elements are in direct physical or electrical contact with each other. \u201cCoupled\u201d may mean that two or more elements are in direct physical or electrical contact. However, \u201ccoupled\u201d may also mean that two or more elements may not be in direct contact with each other, but may still cooperate or interact with each other.","Thus, although embodiments of the invention have been described in language specific to structural features and\/or methodological acts, it is to be understood that claimed subject matter may not be limited to the specific features or acts described. Rather, the specific features and acts are disclosed as sample forms of implementing the claimed subject matter."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The detailed description is provided with reference to the accompanying figures. The use of the same reference numbers in different figures indicates similar or identical items.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
