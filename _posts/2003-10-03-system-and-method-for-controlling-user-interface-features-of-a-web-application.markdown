---
title: System and method for controlling user interface features of a web application
abstract: A system and method of controlling user interface features of a web application is provided. The system comprises a collection of user interface control elements, a collection of skin templates comprising extensible markup language based markup contained as children of a container element, and a collection of control element instructions for performing actions associated with the control elements. Each control element comprises a namespace, common attributes for defining graphical features of the control element and for associating the control element with the internal state of the core control element, other attributes for defining attributes that affect the intrinsic behavior of the control, and a skin template reference attribute for referencing a skin template. Each instruction is associated with a control element.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08032837&OS=08032837&RS=08032837
owner: Corel Corporation
number: 08032837
owner_city: Ottowa
owner_country: CA
publication_date: 20031003
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT","dsvg:button","elementID@attributeName | elementID@nameSpace:attributeName","docID.elementID@nameSpace:attributeName","%complex_expression %","%simple_expression %","%simple_expression (complex_expression) simple_expression %","string=\u2018some string data\u2019 resolves to some string data","function=functionName( params ): resolves to a function return value","factorial;","doublefactorial;","gcd (greatest common divisor);","ln;","log10;","if( boolean expression , if_true_expression , if_false_expression );","substring( string, index_start, index_end ); and","length( string ).","variable ( form: $variableName )=%expression %","+ : addition","\u2212 : subtraction","* : multiplication","\/ : division",", : list separator (ie. for parameters)","== : boolean equals",">= : boolean greater than or equal to","<= : boolean less than or equal to","!= : boolean not equal to","Syntax Expression Example #1","%(textGroup@elementID)@cdata %","%blueText@cdata %","blue","Syntax Expression Example #2","Evaluate button is selected"],"p":["The invention relates to web application development. In particular, the invention relates to a system and method for controlling user interface features of web applications.","Web designers use markup languages to create and modify websites. Graphical user interfaces (GUIs), also known as user interface (UI) controls, are desirable for building web applications, as they allow the user to interact with the application in a standard, familiar way. UI controls are high-level constructs with data and function methods underlying a visual front-end. They behave in standard, expected manners-changing their states (e.g., selected, unselected, focussed, disabled, etc.), which usually have different appearances, in response to user interaction. For example, clicking on a push-button will cause the button to go into its down-state in response to the \u2018mousedown\u2019 event and back into its up-state in response to the \u2018mouseup\u2019 event. Another intrinsic behavior of UI controls is that they trigger the execution of predetermined actions in response to specified events, such as the user clicking on them with the mouse.","Hypertext markup language (HTML) is a commonly used markup language, or platform, with which to build web applications. HTML is limiting, with poor graphics support (only bitmaps, no vectors), its lack of absolute positioning, its small set of user interface (UI) controls and its inability to describe the appearance of those UI controls (the HTML browser decides on the appearance). Scalable vector graphics (SVG) is a language for describing two-dimensional graphics in extensible markup language (XML), which may soon become the platform of choice with which to build web applications. SVG provides an author with a rich set of vector graphics features (as well as bitmaps) and absolute control over their positioning.","SVG-based web applications create their own UI controls using SVG to describe the visual appearance and script to describe the data and function members, which provide the UI controls with the standard intrinsic behaviors discussed previously. This means, however, that non-developers cannot author the UI portion of the content, a fair amount of script for the UI controls must be transferred to the client (a significant problem for wireless devices) and the UI controls may seem to react sluggishly to user input, due to the nature of script being interpreted at run-time as opposed to native code (e.g. C or C++) being interpreted (and optimized) at compile time.","Using scripts to author the UI portion of Web content has limitations. Script requires programming ability. Many Web designers do not have the programming skills required to build UI controls via scripting. Aside from all the internal logic that a UI control requires, one must also know how to manipulate the DOM via the DOM methods so as to give the UI control a visual appearance and interactivity.","Script requires time to develop. Even for developers, creating a suite of robust, responsive UI controls requires a significant amount of script, which takes a significant amount of time to implement.","Script is difficult to auto-generate. One could attempt to assist Web designers by creating pre-canned scripts for the most commonly required functionality. However, supporting the insertion of pre-canned scripts via an integrated development environment (IDE) is both complicated and limiting. Auto-generated script cannot easily be customized afterwards, unless the IDE absolves itself of all responsibility should the designer make modifications.","Software exists that allows one to map input XML markup to output markup, automatically generating extensible stylesheet language transformation XSLT (the most commonly used XML markup language for transforming XML markup to a different form of markup). However, script is difficult to data-map.","Script relies on full DOM support. Scripts are only as powerful as the DOM methods that the viewer supports. Although it is desirable to have all viewers support the entire spectrum of DOM methods, they currently do not. Thus one must write script that only uses the API's supported by all viewers, in order to ensure that the script works on all viewers (i.e., one must program towards the lowest common denominator).","Script is complex. Creating a simple editable textBox control, for instance, could require thousands of lines of code, since SVG 1.1 does not support editable text. One has to intercept keyboard events, modify the data of existing \u2018text\u2019 elements, create new \u2018text\u2019 or \u2018tspan\u2019 elements for every line, support the Backspace and Delete keys, support auto-wrapping, etc. But inserting a simple \u2018textBox\u2019 element requires no programming and is only one line of markup.","Script is slower than native code. Scripts are interpreted, and thus provide slower performance than what would be possible with a natively-implemented markup language. Just having a script interpreter is a lot of overhead for a small device.","Script must use DOM interfaces. Scripts can only manipulate the DOM via the DOM methods, which are abstractions on top of the real object model used by the viewer. Natively-implemented markup could access the real object model directly, which may improve performance even more.","Script requires more data to transfer. Scripts greatly add to the amount of data needed to be transferred. This is a problem especially for small devices.","XUL is an XML markup language for UI controls created by the Mozilla group, specifically for use in their Mozilla HTML web browser. While XUL does offer an extensive list of UI controls, offers limited skinnability (control of appearance) and is not tied to a forms creation\/processing\/submission model, XUL is intended for use in HTML browsers and thus does not allow for absolute positioning nor absolute control of the appearance, cannot be easily hooked up to actions and cannot be easily used for forms. XUL is not supported in some SVG viewers.","XForms is another XML markup language which includes UI controls. XForms was designed for forms, however. XForms only supports UI controls needed for forms, does not allow for absolute control over their positioning and their appearance, cannot be easily hooked up to actions (except those that affect just its own UI controls and its \u201cinstance\u201d, or forms, data) and is very tightly tied to its forms model. XForms is not supported in some SVG viewers.","It is an object of the invention to provide a novel system and method of controlling user interface features of a web application that obviates or mitigates at least one of the problems described above.","In an aspect of the present invention, there is provided a system for controlling user interface features of a web application. The system comprises a collection of user interface control elements, a collection of skin templates comprising extensible markup language based markup contained as children of a container element, and a collection of control element instructions for performing actions associated with the control elements. Each control element comprises a namespace, common attributes for defining graphical features of the control element and for associating the control element with the internal state of the core control element, other attributes for defining attributes that affect the intrinsic behavior of the control, and a skin template reference attribute for referencing a skin template. Each instruction is associated with a control element.","In another aspect of the present invention, there is provided a system for controlling user interface features of a web application. The system comprises a collection of control element instructions for performing actions associated with the control elements, and an initialization function for directing the processing of one or more control elements in a document object model. Each instruction is associated with a control element.","In another aspect of the present invention, there is provided a method of controlling user interface features of a web application. The method comprises the steps of searching for a designated user interface control element in a document object model, and calling a script associated with the designated control element.","In another aspect of the present invention, there is provided a method of controlling user interface features of a web application. The method comprises the steps of adding a behavior element as a child of a user interface control element, receiving an event which is equal to an event attribute setting in the behavior element, and calling a script associated with the behavior element.","In another aspect of the present invention, there is provided a method of creating a customizable user interface control element having expected behaviours. The method comprises the steps of categorising user interface controls into fundamental core controls, determining variations of a core controls, determining common attributes of the core control, determining fundamental states for the core control, determining how to allow for absolute positioning of objects the core control, determining how to allow for absolute customization of appearance of the core control, assigning a reference link to the core control, determining templates for skins to allow for the absolute customization of appearance of the core control, determining how to associate behaviors to the core control, and creating a core control element.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 1","b":["10","10","11","13","14","15","11","11","11","13","11","11","11","11","13","11"]},"The viewer  comprises software code for parsing the SVG markup, creating a DOM, rendering that DOM to the browser's window, listening for events and dispatching them to their assigned handler script functions, and interpreting\/executing those script functions. The viewer  uses the SVG file received from the browser  to create a DOM . The DOM is a hierarchical tree structure of objects in memory, representing the hierarchical XML markup in the XML text file. The DOM also contains methods (also known as functions or application programming interfaces (API's)) that allow it to be queried or modified. The viewer  may also have access to a script interpreter\/engine , which can execute script code created by a programmer for the purpose of making the document non-static (e.g., animation) and\/or interactive with the user (e.g., the user can create events with the mouse or keyboard, which cause something to happen) via manipulation of the DOM.","The following common data types are used in this specification:\n\n","Unless stated otherwise for a particular attribute or property, the range for a <integer> encompasses (at a minimum)\u22122147483648 to 2147483647.","Within the SVG DOM, an <integer> is represented as an long or an SVGAnimatedlnteger.\n\n","Unless stated otherwise for a particular attribute or property, a <number> has the capacity for at least a single-precision floating point number (ICC32) and has a range (at a minimum) of \u22123.4e+38F to +3.4e+38F.","It is recommended that higher precision floating point storage and computation be performed on operations such as coordinate system transformations to provide the best possible precision and to prevent round-off errors.","Conforming High-Quality SVG Viewers are required to use at least double-precision floating point (ICC32) for intermediate calculations on certain numerical operations.","Within the SVG DOM, a <number> is represented as a float or an SVGAnimatedNumber.\n\n","If the <length> is expressed as a value without a unit identifier (e.g., 48), then the <length> represents a distance in the current user coordinate system.","If one of the unit identifiers is provided (e.g., 12 mm), then the <length> is processed according to the description in Units.","Percentage values (e.g., 10%) depend on the particular property or attribute to which the percentage value has been assigned. Two common cases are: (a) when a percentage value represents a percent of the viewport (refer to the section that discusses Units in general), and (b) when a percentage value represents a percent of the bounding box on a given object (refer to the section that describes Object bounding box units).","Within the SVG DOM, a <length> is represented as an SVGLength or an SVGAnimatedLength.\n\n","Within the SVG DOM, a <coordinate> is represented as an SVGLength or an SVGAnimatedLength since both values have the same syntax.\n\n","Within the SVG DOM, <uri> is represented as a DOMString or an SVGAnimatedString.","UI controls comprise a persistent object in memory, which gets instantiated when the UI control element is processed, as well as the visible SVG elements defined via a skin\/template, which can exist within a \u2018def\u2019 block in the SVG file or in a separate file. The skins follow specific formats. The appearance for every state is described in SVG markup within a group \u2018g\u2019 container with an \u2018id\u2019 attribute equal to \u2018up\u2019, \u2018down\u2019, \u2018hover\u2019, \u2018focus\u2019 or \u2018disabled\u2019. Within each of these containers, the individual components of that UI control are defined via predefined ID's. For instance, a slider control uses components specified with the ID's \u201clabel\u201d, \u201cbody\u201d, \u201cskinSliderBar\u201d, \u201cskinSliderThumb\u201d, \u201ctickMajor\u201d, \u201ctickMinor\u201d, \u201ctickLabelMajor\u201d, \u201ctickLabelMinor\u201d and \u201cmask\u201d. The markup within these containers, however, is completely customizable. The intrinsic behaviors of UI controls make no a priori assumptions regarding the nature of the appearance, except insofar as the obvious, such the element with id=\u201clabel\u201d must be either a \u2018text\u2019 or \u2018tspan\u2019 element. When the UI control is instantiated, the skin is retrieved and used, along with the attributes of the UI control element, to create the visible SVG objects in the DOM that make up the appearance. For instance, the slider skin's \u201ctickMajor\u201d markup will be cloned as many times as required, based on the \u2018slider\u2019 element's \u2018tickMajor\u2019 attribute, and positioned appropriately.","Because there are no assumptions made regarding the SVG markup comprising a UI control's skin, the skins contain \u2018constraint\u2019 elements, to be resized \u201cintelligently\u201d. When a UI control element's \u2018width\u2019 and\/or \u2018height\u2019 attribute is set, the desired dimensions of the UI control are compared to the existing dimensions of its bounding box and, if different, a transform is applied to the visible markup. With no constraints defined in the skin, this could cause unwanted side effects, such as the label also being stretched, or the stroke-widths appearing to be thicker or thinner. Constraints can be defined in the skin to counteract these effects due to scaling.",{"@attributes":{"id":"p-0066","num":"0073"},"figref":"FIG. 2","b":["20","20","22","27","28","22","23","24","25","26","23","22","22","23","24","22","22","22","25","22","26","27","22"]},"The UI control skin templates  are associated with the UI control elements . Preferably, there is a one-to-one relationship between UI control elements  and UI control skin templates . A UI control skin template  is designed to allow for absolute customization of appearance of the UI control. The skin template  is referenced via an \u2018xlink:href\u2019 attribute (or skin template reference attribute)  which is a common attribute of the UI control elements . The skin template  comprises SVG markup (which can reference bitmap images) contained as children of a \u2018g\u2019 element (a group\/container element), where there is one group per state (e.g. \u2018up\u2019, \u2018down\u2019, \u2018disabled\u2019, etc.). The skin templates  may be stored as files referenced by the UI control elements . Designers may modify or replace a skin templates  as desired.","Each UI control's instructions  (associated data and function members), which define the control's intrinsic behaviors, may be supplied via script or as native code in the viewer , which is indirectly associated to the UI control element . For example, instructions (or scripts)  may include toggling a button's state between \u2018up\u2019 and \u2018down\u2019 when clicked upon with the mouse, or translating (panning) the contents of the document within the display window when the thumb of a scrollbar is dragged with the mouse.","A UI control element  may be handled at parse time (i.e., when the DOM is first created), or after parse time. At parse time, an event may trigger a call to the instructions  associated to the UI control element , so as to instantiate it immediately. Alternatively, UI control elements  may be handled via native code during parse time.","After parse time, an initialization function may be run to find each UI control element  and run its associated instructions  (script or another supported programming language) that creates that particular element-both the visual front-end (as SVG elements in a document object model (DOM)) and the back-end (an object in memory, with data and function members). The initialization function may contain instructions for traversing each node in the DOM and for searching and calling functions associated with UI control elements  having names following a predetermined naming convention.","An alternative UI control system comprises an initialization file, the skin templates  and the scripts  of the UI control system . The collection of UI control elements are provided independently from the alternative UI control system as markup syntax for a designer (or developer, or any user) to use when modifying an XML file, such as an SVG document.","The following is an example of a UI control element :","<dsvg:button\n\n","\/>","The \u2018button\u2019 element defines a UI control that can be clicked to trigger an action. The \u2018button\u2019 element may be a push button, a checkbox (i.e., a sticky\/toggle button) or a radiobutton, depending on the attributes of the element.","The \u2018button\u2019 element contains the namespace :","which follows the naming convention of adding \u201cdsvg:\u201d as a prefix (associated to a particular namespace earlier in the file) to the element name, so that the viewer's XML parser will allow these non-standard elements in the DOM. As will be described below, this naming convention can also assist the system  to search for UI control elements , i.e., all UI control elements  having this prefix in their namespace . The \u2018button\u2019 element also contains common attributes  (or standard attributes) such as \u2018id\u2019, \u2018label\u2019, \u2018x\u2019, \u2018y\u2019, \u2018width\u2019, \u2018height, etc. The \u2018button\u2019 element also contains the skin template reference attribute \u2018xlink:href\u2019 which is also common to UI control elements . The attributes common to all UI control elements  will be described below.","The \u2018toggle\u2019 attribute specifies whether the button is a toggle\/sticky button or not, i.e. whether the button toggles between \u2018up\u2019 and \u2018down\u2019 states when clicked on or instead switches to the \u2018down\u2019 state when the mouse button is pressed and then back to the \u2018up\u2019 state when the mouse button is released. A checkbox has toggle=\u201ctrue\u201d. If the \u2018toggle\u2019 attribute is not specified, then preferably, the default is \u2018false\u2019. The \u2018group\u2019 attribute is the name of the group to which the button belongs. If the \u2018group\u2019 attribute is provided, and toggle=\u201ctrue\u201d, then this results in the functionality of a radiobutton, where selecting any of the radiobuttons belonging to that group results in the other radiobuttons in that group becoming unselected. The \u2018checked\u2019 attribute specifies whether the button is down\/checked\/selected (true) or up\/unchecked\/unselected (false). Preferably, the default is set to \u201cfalse\u201d. The \u2018labelX\u2019 attribute specifies the x-coordinate of the label relative to the \u2018y\u2019 attribute. If the \u2018labelX\u2019 attribute is not provided, the label's position is determined by the skin . The \u2018labelY\u2019 attribute specifies the y-coordinate of the bottom edge of the label, relative to the \u2018x\u2019 attribute. If the \u2018labelY\u2019 attribute is not provided, the label's position is determined by the skin .","Other example of UI control elements  will be described below.","The following is the syntax for the \u2018button\u2019 skin template  corresponding with the above example:","<?xml version=\u201c1.0\u201d?>","<svg>\n\n","<\/svg>","As can be seen in the skin template shown above, a separate group is defined for each possible state of the UI control, where the specific state is identified via the \u2018id\u2019 attribute. The \u2018display\u2019 attributes are not actually required, as the button's associated script sets them itself, but by making the \u2018up\u2019 group visible and the other invisible, it allows the \u2018up\u2019 state to be easily viewed separately in a viewer, so that the designer can easily get a feel for what the button looks like.","The following is the syntax of an example of a \u2018button\u2019 skin, in accordance with the above example:","<?xml version=\u201c1.0\u201d?>","<svg>\n\n","<\/svg>","As can be seen in the sample skin file above, the label uses the Tahoma font, with a size of 12, and its middle appears 50 units to the right and 13 units below the top-left corner of the button, as defined by its \u2018x\u2019 and \u2018y\u2019 attributes. Its states are drawn using light-gray rectangles and black and white polylines, and the \u2018hover\u2019 state (which appears when the mouse cursor is overtop of the button) includes an extra light-gray rectangle with a blue outline\/stroke.","Other examples of UI control elements  will be described below.","The following is an example of SVG markup used in association with an embodiment of the UI control system .","<?xml version=\u201c1.0\u201d?>","<!DOCTYPE svg PUBLIC \u201c-\/\/W3C\/\/DTD SVG 20000303 Stylable\/\/EN\u201d \u201chttp:\/\/www.w3.org\/TR\/2000\/03\/WD-SVG-20000303\/DTD\/svg-20000303-st ylable.dtd\u201d>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d onload=\u201cdsvgInit(evt)\u201d width=\u201c256\u201d height=\u201c256\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/BaseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/button.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d","xlink:href=\u201cdsvg\/constraint.js\u201d\/>","<!-- Create a grey background. -->","<rect x=\u201c0\u201d y=\u201c0\u201d width=\u201c512\u201d height=\u201c512\u201d style=\u201cfill:rgb(230,230,230)\u201d\/>","<!-- Create various types of buttons, with no associated behaviours. -->","<dsvg:button id=\u201cmyPushButton\u201d label=\u201cClick me!\u201d x=\u201c50.5\u201d y=\u201c10.5\u201d xlink:href=\u201cdsvg\/skinButton_Windows.svg#skinButton\u201d\/>","<dsvg:button id=\u201cmyCheckbox\u201d label=\u201cCheck me!\u201d x=\u201c50.5\u201d y=\u201c50.5\u201d toggle=\u201ctrue\u201d xlink:href=\u201cdsvg\/skinCheckbox_Default.svg#skinCheckbox\u201d\/>","<dsvg:button id=\u201cmyRadioButton1\u201d selected=\u201ctrue\u201d label=\u201cCheck me!\u201d x=\u201c50.5\u201d y=\u201c100.5\u201d toggle=\u201ctrue\u201d group=\u201cmyGroup\u201d checked=\u201ctrue\u201d xlink:href=\u201cdsvg\/skinRadioButton_Default.svg#skinRadioButton\u201d\/>","<dsvg:button id=\u201cmyRadioButton2\u201d label=\u201cNo, me!\u201d x=\u201c50.5\u201d y=\u201c125.5\u201d toggle=\u201ctrue\u201d group=\u201cmyGroup\u201d xlink:href=\u201cdsvg\/skinRadioButton_Default.svg#skinRadioButton\u201d\/>","<dsvg:button id=\u201cmyBigPushButton\u201d label=\u201cLook how big I am!\u201d x=\u201c50.5\u201d y=\u201c150.5\u201d width=\u201c150\u201d height=\u201c100\u201d xlink:href=\u201cdsvg\/skinButton_Windows.svg#skinButton\u201d\/>","<\/svg>",{"@attributes":{"id":"p-0103","num":"0169"},"figref":"FIG. 3","b":["30","31","32","33","34","34","23"]},{"@attributes":{"id":"p-0104","num":"0170"},"figref":["FIGS. 4A to 4D","FIG. 4A","FIG. 4B","FIG. 4C","FIG. 4D"]},{"@attributes":{"id":"p-0105","num":"0171"},"figref":"FIG. 5","b":["50","20","50","51","52","53"]},{"@attributes":{"id":"p-0106","num":"0172"},"figref":"FIG. 6","b":["60","20","14","60","61","61","62","63","64","62","64","65","65","66","62","66","65","67"]},"The method described in  will be described using the examples of , , and A to D. The viewer's script interpreter will execute the dsvgInit( ) function at load time (i.e., after the DOM has been built and the scripts retrieved and loaded into memory), which will traverse each node in the DOM (), searching for elements whose names  begin with the \u201cdsvg:\u201d prefix (i.e., searching for designated UI control elements ). The <dsvg:button> node is found. Using a priori knowledge of the naming conventions for elements and functions, the string \u201cdsvgButton(element, evt)\u201d is created, turned into a function and called. This function finds all of the attributes of the \u2018dsvg:button\u2019 element, whose corresponding DOM object was passed in as the parameter \u2018element\u2019, and retrieves their values using the getAttribute( ) DOM API. It then creates a new instance of the button class-creating an object in memory, which contains data and function methods that provide the instructions for how to build its visual front-end and how to behave in response to events generated by the user. Using the value of the \u2018xlink:href\u2019 attribute , it retrieves the skin template  (which may be in a separate file) and uses it to create the visual front-end of the button by creating the SVG elements in the DOM, in accordance with the skin template , and modifying them using some of the other attributes , such as \u2018x\u2019, \u2018y\u2019, \u2018width\u2019, \u2018height\u2019, \u2018label\u2019, etc. Other attributes, such as \u2018toggle\u2019 are used to set up how the button will behave and react to user input, which requires that appropriate event listeners be placed (using the addEventListener( ) DOM API) on each group containing the visual appearance of each state, so that the user can interact with the button. Once the dsvgButton( ) function has completed its instructions, the initialization function then looks for more designated UI control elements . It finds four more designated UI control elements  and handles them in the same manner as it handled the first. After that, the initialization function does not find any more designated UI control elements , and so its job is finished.","When the user positions the mouse pointer over any of the buttons (), the viewer creates an \u201conmouseover\u201d event, which the event listener hears and dispatches to the button class's appropriate handler function. If the button was in an \u2018up\u2019 state, this function sets the button's state to be the \u2018hover\u2019 state, causing the visual appearance to change to the appearance associated with the \u2018hover\u2019 state. Since only the \u2018g\u2019 element containing the associated appearance for the \u2018up\u2019 state has an \u2018onmouseover\u2019 event listener, only the \u2018up\u2019 state will respond to that event by putting the button in the \u2018hover\u2019 state. If the button is in the \u2018hover\u2019 state and the user moves the mouse pointer away from the button, the \u201conmouseout\u201d event is generated and passed to its handler function, which changes the button's state back to whatever it was before it was changed to the \u2018hover\u2019 state.","When the user clicks the mouse pointer down over any of the buttons (), the viewer creates an \u201conmousedown\u201d event, which the event listener hears (if the button is not in a \u2018disabledUp\u2019 or \u2018disabledDown\u2019 state, as the appearances associated with these states have no \u201conmousedown\u201d event listeners) and dispatches to the button class's appropriate handler function. If the button is a toggle-button (i.e., if its \u2018toggle\u2019 attribute equals \u2018true\u2019), then the \u201conmousedown\u201d handler function sets the button's state to be\u2018down\u2019 if it was in the \u2018up\u2019 state (previous to the \u2018hover\u2019 state) or sets it to be \u2018up\u2019 if it was in the \u2018down\u2019 state (previous to the \u2018hover\u2019 state), which causes the visual appearance to change appropriately. If the button is a radio-button (it's a toggle-button but also has a \u2018group\u2019 attribute defined), then the \u201conmousedown\u201d handler function will be called, if the button was in the \u2018up\u2019 state, causing the button to switch to the \u2018down\u2019 state, causing its visual appearance to change appropriately and also causing whichever button belonging to the same radiogroup that was previously in the \u2018down\u2019 state to switch to the \u2018up\u2019 state. If the button is a push-button (i.e., its \u2018toggle\u2019 attribute equals \u2018false\u2019), then the \u201conmousedown\u201d handler function sets the button's state to be\u2018down\u2019 if it was in the \u2018up\u2019 state (previous to the \u2018hover\u2019 state). When the user lets go of the mouse button, the viewer generates the \u201conmouseup\u201d event, whose handler function sets the button back to the \u2018up\u2019 state.","If a toggle-button's state changes from \u2018up\u2019 to \u2018down\u2019 or from \u2018down\u2019 to \u2018up\u2019, or a push-button's state changes from \u2018up\u2019 to \u2018down\u2019 and then \u2018up\u2019 again, then the processActions( ) handler function is called, which searches all the children of the \u2018button\u2019 element, looking for any elements that begin with the \u201cdsvg:\u201d prefix. It does not find any, and so its job is done.","In the example described above, the function was dynamically generated, i.e., a string was created, having the same prefix as the designated element (without the colon) and the same name as the designated element (except with the first letter capitalized) and with the designated element's object and the trigger event object passed in as two parameters. The skin template  and the script  or set of instructions for the operations of the generated function is stored in a predetermined format either in the document text file or in a separate text file on a file system or webserver, and is loaded into memory by the viewer at load time. Alternatively, the initialization function may search for elements that begin with the \u201cdsvg:\u201d prefix and, using an \u2018if or \u2018switch\u2019 statement, determine the appropriate predetermined function to call, which again are expected to have been already loaded in memory by the viewer.","It is advantageous, though, for the function names to be generated dynamically, so that the main script file containing the initialization function does not need to be updated whenever a new type of UI control element  has been created and is available for use. As well, while the functions  that handle each type of UI control element  could be stored all in one file, it is advantageous to store them in separate files and reference them in the document only if their corresponding UI control element  is being used, so that only the code that is required is actually transmitted.","In order for UI control elements  to execute desired actions, behavior elements may be inserted as children of the UI control elements  (the observer elements). The behavior element will be executed sequentially for each behavior element whose \u2018event\u2019 attribute's value matches the observer element's event (e.g., onmouseover, onclick, etc.). If the \u2018event\u2019 attribute is not provided, \u2018onclick\u2019 will be assumed. In the example below, clicking on the \u2018Red\u2019 button will colour the circle red, while clicking on the \u2018Blue\u2019 button will colour the circle blue.\n\n","Alternatively, the behavior elements can (optionally) be grouped as children of an <action> element, which can be hooked up to the observer element using a <listener> element. For example:\n\n",{"@attributes":{"id":"p-0115","num":"0199"},"figref":"FIG. 7","b":["70","20","20","70","71","72","73","24","74","24","70","75","76","73","24","74","76","77","77","78","73","78","77","79"]},"An initialization file may also search for attributes in elements that are not UI control elements . Scripts  may be created and associated with the \u2018dsvg\u2019 attribute in the same manner as with UI control elements. Script functions  for \u2018dsvg\u2019 attributes only operate on the object associated with the existing element to which a \u2018dsvg\u2019 attribute is added. A designer may add the \u2018dsvg\u2019 attribute in an SVG file, or any other XML file to be parsed by the viewer .",{"@attributes":{"id":"p-0117","num":"0201"},"figref":"FIG. 8","b":["80","20","13","13","80","81","82","83","84","85","86","83","87","87","88","89"]},"If a designated attribute is not found (), then the initialization file determines if the regular SVG element has any child elements (). If the regular SVG element has a child element () and the child element is a designated element  (), then the initialization file determines the value of the designated element's \u2018event\u2019 attribute (i.e., the event that will trigger the execution of the designated element's associated function) and adds that event listener to the parent SVG element () (via the addEventListener( ) DOM API). If the child element is not a designated element  (), then the initialization file determines if there are any other children of the regular SVG element (). If there are more children (), then the initialization file searches the next child of the regular SVG element (). Steps () to () repeat until there are no more children of the regular SVG element.","If there are no more children of the regular SVG element (), or after a generated function is called (, ), or if the event attribute of a designated element is not equal to \u201conload\u201d (), or there are no more child elements in a regular SVG element to search (), the initialization file determines if there are more elements in the DOM to search (). If there are more elements in the DOM (), the initialization file determines if the next sibling element is a designated element (). Steps () to () are repeated until all elements in the DOM are searched. Once there are no more elements in the DOM to search (), then the initialization function is done and the viewer  waits for an event to occur ().","Once an event occurs on an SVG element (i.e., the observer element), that event object is passed to any handler function with which it has been associated (). The handler function changes the UI control's state () to whatever it should be, according to the logic inherent in the specific UI control, which causes the visual appearance to change (the \u2018g\u2019 element containing the SVG for the previous state gets its \u2018display\u2019 attribute set to \u2018none\u2019, while the \u2018g\u2019 element containing the SVG for the new state gets its \u2018display\u2019 attribute set to \u2018all\u2019). If the UI control's logic dictates that this change in state requires that any associated behavior elements be run (), then the event object is passed to the processActions( ) handler function (). The processActions( ) handler function traverses all children of the UI control element and performs any action required (). If the UI control's logic does not dictate that the change in state requires any associated behavior elements to be run () or after the processActions( ) handler function has performed the required actions (), then the event handler function is done and the viewer waits for another event to occur ().","Referencing Attributes","To create an application, a designer often desires to reference the current value of another element's attributes. An expression syntax is created to allow the attribute values of elements to be dynamic. With expressions, attribute values can be dependent on the real-time values of other attributes in the DOM. This syntax is intended to be simpler to use than XPath and ECMAScript, and to provide a subset of their most commonly used features.","In one embodiment of an expression syntax, expressions are denoted by the %% characters. Whatever is contained with the % characters gets evaluated. The basic unit of reference is elementID@attributeName. For example, %myRectangle@width % would be resolved to the numeric value of the width attribute of the element \/\/.[@id=\u201cmyRectangle\u201d] (as denoted with the)(Path expression). This syntax is therefore intended to be used in documents where elements have unique ID's. Note that the attributeName can have a namespace prefix for any namespace declared in the document.","Preferably, the following unit pattern is used for the expression syntax:","Some behaviors, like \u2018loadXML\u2019, can create document fragments. These are named at the time of creation and can be referred to within %% expressions, as follows:","Special attribute extensions include a bounding box, CDATA (the text between the opening and closing tags, e.g. <text> This is the CDATA<\/text>), and event attributes. The bounding box extensions include the following:\n\n","elementID@cdata : returns the text content of the element","Event Attribute extensions included the following:",{"@attributes":{"id":"p-0127","num":"0000"},"ul":{"@attributes":{"id":"ul0036","list-style":"none"},"li":{"@attributes":{"id":"ul0036-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0037","list-style":"none"},"li":["@event.type: returns the type of event that triggered the behavior (e.g. \u2018mouseover\u2019, \u2018SVGResize\u2019, \u2018keypress\u2019, etc.)","@event.targetNodeName: returns the nodeName of the element that was the target of the event that triggered the behavior","@event.targetID: returns the \u2018id\u2019 attribute of the element that was the target of the event that triggered the behavior","@event.currentTargetNodeName: returns the nodeName of the element that observed the event that triggered the behavior","@event.currentTargetID: returns the \u2018id\u2019 attribute of the element that observed the event that triggered the behavior","@event.shiftKey: returns \u2018true\u2019 if the Shift-key is pressed, \u2018false\u2019 otherwise.","@event.ctrlKey: returns \u2018true\u2019 if the Ctrl-key is pressed, \u2018false\u2019 otherwise.","@event.keyCode: returns the keyCode attribute of the \u2018keydown\u2019 or \u2018keyup\u2019 event that triggered the behavior.","@event.keyID: returns the key identifier\u2014a string representation of the keyCode attribute of the \u2018keydown\u2019 or \u2018keyup\u2019 event that triggered the behavior (e.g. \u2018Space\u2019, \u2018Enter\u2019, \u2018a\u2019).","@event.charCode: returns the charCode attribute of the \u2018keypress\u2019 event that triggered the behavior.","@event.char: returns the string representation of the charCode attribute of the \u2018keypress\u2019 event that triggered the behavior (e.g. \u2018A\u2019 or \u2018a\u2019)."]}}}},"The real event object has \u2018target\u2019 and \u2018currentTarget\u2019 attributes, which are node objects. Since these would only be useful in a scripting environment, the \u201cvirtual\u201d event attributes \u2018targetNodeName\u2019, \u2018targetID\u2019, \u2018currentTargetNodeName\u2019 and \u2018currentTargetID\u2019 are provided.","A keyCode event attribute may be automatically generated in response to the \u2018keydown\u2019 and \u2018keyup\u2019 events. For ease of authoring, dSVG offers a \u201cvirtual\u201d event attribute called \u2018keyID\u2019, which is a string identifier for the various keys. These keyID's resemble, as closely as possible, the key identifiers listed in the W3C Working Draft of the DOM Level 3 Events Specification (http:\/\/www.w3.org\/TR\/2003\/WD-DOM-Level-3-Events-20030331\/keyset.html).","An attribute consists of constant string data concatenated with evaluated expressions delimited by % symbols (a double %% acts as an escape). For example:\n\n","where complex_expression can be of the form:","or:","Parentheses are resolved from innermost to outermost. Note that open parentheses require leading whitespace to distinguish them from functions.","An example of a simple expression is:\n\n","An example of a string is:","An example of a function is:","The following ECMA math functions are available:\n\n","An example of a variable is:","Variables refer to \u2018variable\u2019 elements and are intended as a convenient way of building and (re)using complex expressions, or simply for storage. It is the author's responsibility to not create self referential variables or circular variable references.","Operation codes (OpCodes) include:","Expressions using opcodes resolve any Unit_Patterns, functions, variables and strings and then follow standard ecma expression rules.","<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c..\/SVGdSVG.dtd\u201d>","<svg xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG\u201d height=\u201c410px\u201d width=\u201c744px\u201d onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 410\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/focus.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/setAttribute.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/setStyle.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/setTransform.js\u201d\/>","<!-- template -->","<rect height=\u201c40\u201d width=\u201c744\u201d y=\u201c0\u201d x=\u201c0\u201d fill=\u201c#5f86B1\u201d id=\u201ctitle_rect\u201d\/>","<text y=\u201c25\u201d x=\u201c20\u201d font-weight=\u201cbold\u201d font-size=\u201c18\u201d fill=\u201cwhite\u201d id=\u201ctext1\u201d>dSVG sample behavior: focus\u2014with added attributes focusGroup and focus<\/text>","<text y=\u201c365\u201d x=\u201c20\u201d font-size=\u201c12\u201d id=\u201ccontent\u201d>Content of file: dsvg:focus, dsvg:setTransform, dsvg:setAttribute, dsvg:setStyle, (added attributes dsvg:focus, dsvg:focusGroup)<\/text>","<text y=\u201c380\u201d x=\u201c20\u201d font-size=\u201c12\u201d id=\u201cexpected\u201d>The dsvg:focusGroup attribute adds the ability to store the ID of similar type elements that are assigned to that group.<\/text>","<text y=\u201c395\u201d x=\u201c20\u201d font-size=\u201c12\u201d id=\u201cdepend\u201d>Default focus can be given to an element (red circle above) by adding the dsvg:focus attribute to that element.<\/text>","<line y2=\u201c340\u201d x2=\u201c744\u201d y1=\u201c340\u201d x1=\u201c0\u201d stroke-width=\u201c2\u201d stroke=\u201c#5f86B1\u201d fill=\u201c#5f86B1\u201d id=\u201cbottom_line\u201d\/>","<!-- adding behavior -->","<text y=\u201c250\u201d x=\u201c20\u201d font-size=\u201c12\u201d id=\u201cdesc\u201d>The red, blue, green circles are part of the focusGroup. The orange circle is not.<\/text>","<text y=\u201c150\u201d x=\u201c200\u201d font-size=\u201c12\u201d id=\u201cdesc2\u201d>Click on the red, green and blue circles to set focus.<\/text>","<text y=\u201c170\u201d x=\u201c200\u201d font-size=\u201c12\u201d id=\u201cdesc3\u201d>Hover over the \u2018red\u2019, \u2018green\u2019 and \u2018blue\u2019 text elements to set focus.<\/text>","<dsvg:focus elementID=\u201credCircle\u201d event=\u201conclick\u201d id=\u201ccircleGroup\u201d>\n\n","<\/dsvg:focus>","<dsvg:focus event=\u201conmouseover\u201d id=\u201ctextGroup\u201d>\n\n","<\/dsvg: focus>","<circle dsvg:focus=\u201ctrue\u201d dsvg:focusGroup=\u201ccircleGroup\u201d r=\u201c30\u201d cy=\u201c100\u201d cx=\u201c50\u201d fill=\u201cred\u201d id=\u201credCircle\u201d\/>","<circle dsvg:focusGroup=\u201ccircleGroup\u201d r=\u201c30\u201d cy=\u201c200\u201d cx=\u201c50\u201d fill=\u201cblue\u201d id=\u201cblueCircle\u201d\/>","<circle dsvg:focusGroup=\u201ccircleGroup\u201d r=\u201c30\u201d cy=\u201c100\u201d cx=\u201c150\u201d fill=\u201cgreen\u201d id=\u201cgreenCircle\u201d\/>","<circle r=\u201c30\u201d cy=\u201c200\u201d cx=\u201c150\u201d fill=\u201corange\u201d id=\u201corangeCircle\u201d\/>","<text dsvg:focus=\u201ctrue\u201d dsvg:focusGroup=\u201ctextGroup\u201d y=\u201c80\u201d x=\u201c200\u201d id=\u201credText\u201d>red<\/text>","<text dsvg:focusGroup=\u201ctextGroup\u201d y=\u201c80\u201d x=\u201c250\u201d id=\u201cblueText\u201d>blue<\/text>","<text dsvg:focusGroup=\u201ctextGroup\u201d y=\u201c80\u201d x=\u201c300\u201d id=\u201cgreenText\u201d>green<\/text>","<text y=\u201c80\u201d x=\u201c350\u201d>orange<\/text>","<\/svg>","Hovering the mouse over the \u2018text\u2019 element with id=\u201cblueText causes the behaviors within the second \u2018focus\u2019 element to be run. When the first \u2018setStyle\u2019 behavior is run, its \u2018value\u2019 attribute, which is equal to:","resolves to:","which then further resolves to:","<dsvg:button xlink:href=\u201cdsvg\/skinButton_Windows.svg#skinButton\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d selected=\u201cfalse\u201d toggle=\u201cfalse\u201d height=\u201c18\u201d width=\u201c100\u201d y=\u201c70\u201d x=\u201c80\u201d","label=\u201cEvaluate\u201d id=\u201cbutton1\u201d> <dsvg:alert message=\u201c%button1@label==\u2018false\u2019, \u2018is selected\u2019, \u2018is not selected\u2019) %\u201d\/><\/dsvg:button>","Pushing the button will run the \u2018alert\u2019 behavior. Its \u2018message\u2019 attribute, which is equal to:\n\n","The expression syntax allows a user to refer to real-time values of any attribute of any element in any accessible document or documentFragment easily without a complex syntax like XPath and without script. It also allows a user to manipulate them with mathematical operators and functions, as well as to concatenate them with strings. For instance, if a user had a circle element with id=\u201cmyCircle\u201d and a dSVG textBox element with id=\u201cmyTextBox\u201d, the user could set the circle's fill colour to be the value of the textBox as follows: <dsvg:setAttribute elementID=\u201cmyCircle\u201d attribute=\u201cfill\u201d value=\u201c%myTextBox@value %\u201d\/>.",{"@attributes":{"id":"p-0173","num":"0282"},"figref":"FIG. 9","b":["210","20","210","211","212","25","213","214","22","24","26","25","27","215","216"]},{"@attributes":{"id":"p-0174","num":"0283"},"figref":"FIG. 10","b":["220","20","220","22","221","222","223","224","225","225","226","227","227","27","20","10"]},"Even if instead of applying the scale factors to the UI control via a transformation, the scale factors were instead used to directly modify all of the coordinates for all of the various types of elements used for the UI control's appearance (e.g., rect, circle, path, line, polyline, etc.), that could still result in some of the same problems. For instance, the designer might intend for the label's position and\/or size to scale or not. Thus the constraints must still be defined within the skin template. Once all of the above determinations have been performed, other attributes  that the core UI control element needs are determined (). A core UI control element  is then created. A namespace is assigned to a core UI control element  pursuant to a naming convention (). Next the common attributes , of the UI control grouping are assigned to the core UI control element  (). The other attributes  of the UI control grouping are then assigned to the core UI control element  (). Finally, the skin template reference  is assigned to the core UI control element  (). The skin template  comprises descriptions of the visual appearance of each state for the UI control. The set of instructions (i.e., the script)  that creates the UI control's back-end (i.e., the object in memory with data and function members, which determine how to construct the UI control using the skin template , what intrinsic behaviors to exhibit and how to interact with the user) are not directly associated to the UI control element , but rather are indirectly associated to the UI control element  via the initialization function (i.e., the UI control element  does not actually reference the script function  or the script file  that creates and controls the UI control). The core UI control element's  set of instructions (script)  may be stored in an independent file. Once all core UI control elements  have been created (), the method is done (). Other steps may be added to the method (). Default settings may be initiated for the core UI control elements , if desired.","There are many advantages to the UI control system . The UI control system  encompasses general UI controls desired to build web applications. The UI control system  allows for absolute positioning, absolute control of the appearance, and may easily be hooked up to actions, defined via markup or script functions, that affect any element in a DOM. The UI control system  may be used for forms. However, the control system  is not tied to a model specifically intended for forms (i.e., does not force the author to jump through hoops to create an application which does not use forms).","The UI control system  assists web designers with no programming skills to create dynamic, interactive web applications. It also aids experienced programmers to create dynamic, interactive web applications much more easily and rapidly. Because the UI control system  involves an XML markup language (as opposed to just script functions), the attributes and data and even the elements themselves can be made to be data-driven at run-time, using (at design-time) existing or new software that allows one to visually map input XML markup to output XML markup, resulting in an extensible stylesheet language transformation (XSLT) code (or any other language useful for XML transformations) which will actually modify the UI control elements  based on the input XML data\/markup.","The UI control system  can also be natively-implemented, accessing the exposed DOM API's in the same manner as the script implementation. A native implementation could be much faster because unlike script, which gets interpreted at run-time, native code (e.g. C++ or C) gets interpreted at compile time and gets optimized by the compiler. The natively-implemented UI control system  could also access any unexposed, lower-level object model API's directly, rather than the exposed higher-level DOM API's, which could further improve performance. If natively implemented, the amount of data needed to be transferred may be greatly reduced, since there is no script that needs to be transmitted, which is especially beneficial for wireless devices with low bandwidth and small memory. Using a markup language for the UI control elements  is also beneficial because it allows for the possibility of further reducing the file size by creating a binary version of the markup language that employs opcodes-predetermined arrangements of bits (1's and 0's) that correspond to particular element names and attributes. Unlike textual markup, which must be parsed (compared to predetermine strings\/text to establish the meaning of the text) in order to create the DOM, binary opcodes can be compared to identical binary opcodes, which is much faster than string comparisons, in order to build the DOM much faster.","The UI control system  according to the present invention may be implemented by any hardware, software or a combination of hardware and software having the above described functions. The software code, either in its entirety or a part thereof, may be stored in a computer readable memory. Further, a computer data signal representing the software code which may be embedded in a carrier wave may be transmitted via a communication network. Such a computer readable memory and a computer data signal are also within the scope of the present invention, as well as the hardware, software and the combination thereof.","While particular embodiments of the present invention have been shown and described, changes and modifications may be made to such embodiments without departing from the true scope of the invention.","List of UI Control Elements, Attributes, and Skin Templates","Some examples of UI control elements , common attributes  and , skin templates  and examples of skins, in accordance with the UI control system , are provided below. Other UI control elements, attributes and skins may be created. The provided UI control elements, attributes and skins are examples of one implementation of a DOM manipulation markup language.","Attributes Common to All UI Controls ( and )",{"@attributes":{"id":"p-0182","num":"0291"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<!ENTITY % stdUIAttrs"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u201c",{},{}]},{"entry":["id","ID","#IMPLIED"]},{"entry":["label","%Text","#IMPLIED"]},{"entry":["x","%Coordinate;","\u20180\u2019"]},{"entry":["y","%Coordinate;","\u20180\u2019"]},{"entry":["width","%Length;","#IMPLIED"]},{"entry":["height","%Length;","#IMPLIED"]},{"entry":["preserveAspectRatio","%Boolean;","\u2018false\u2019"]},{"entry":["xmlns:xlink","CDATA","#FIXED"]},{"entry":[{},{},"\u2018http:\/\/www.w3.org\/1999\/xlink\u2019"]},{"entry":["xlink:href","%URI;","#IMPLIED"]},{"entry":["labelX","%Coordinate;","#IMPLIED"]},{"entry":["labelY","%Coordinate;","#IMPLIED"]},{"entry":["disabled","%Boolean;","\u2018false\u2019"]},{"entry":["autoScale","%Boolean;","\u2018false\u2019"]},{"entry":["stateHover","ID;","#IMPLIED"]},{"entry":["stateFocus","ID;","#IMPLIED"]},{"entry":["stateUp","ID;","#IMPLIED"]},{"entry":["stateDown","ID;","#IMPLIED"]},{"entry":["stateDisabled","ID;","#IMPLIED\u201d >"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"ul":{"@attributes":{"id":"ul0050","list-style":"none"},"li":{"@attributes":{"id":"ul0050-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0051","list-style":"none"},"li":["Standard XML attribute for assigning a unique name to an element. Refer to the \u201cExtensible Markup Language (XML) 1.0\u201d Recommendation [XML10].\n\nlabel=\u2018<string>\u2019\n","The text associated with the UI control, the position of which is determined by the skin, unless overridden by the \u2018labelX\u2019 and \u2018labelY\u2019 attributes.\n\nx=\u201c<coordinate>\u201d\n","The x-axis coordinate of the side of the UI control, which has the smaller x-axis coordinate value in the current user coordinate system. Usually, this means the left side.","If the attribute is not specified, the effect is as if a value of \u201c0\u201d were specified.\n\ny=\u201c<coordinate>\u201d\n","The y-axis coordinate of the side of the UI control, which has the smaller y-axis coordinate value in the current user coordinate system. Usually, this means the top.","If the attribute is not specified, the effect is as if a value of \u201c0\u201d were specified.\n\nwidth=\u201c<length>\u201d\n","The width of the UI control.","If the attribute is not specified, the width is determined from the skin.","A negative value is an error. A value of zero disables rendering of the control.\n\nheight=\u201c<length>\u201d\n","The height of the UI control.","If the attribute is not specified, the height is determined from the skin.","A negative value is an error. A value of zero disables rendering of the control.\n\npreserveAspectRatio=\u201c(true | false)\u201d\n","If true, and \u2018width\u2019 or \u2018height\u2019 is supplied, the other dimension is automatically calculated so as to preserve the UI control's aspect ratio.","If both \u2018width\u2019 and \u2018height\u2019 are supplied, this attribute is ignored.","If the attribute is not specified, it is assumed to be false.\n\nxlink:href=\u201c<uri>\u201d\n","A reference to the skin's parent element, stored either internally in the <defs> block, or in an external file.","If the attribute is not specified, the control is not rendered.\n\nlabelX=\u201c<coordinate>\u201d\n","The x-axis coordinate of the side of the label, which has the smaller x-axis coordinate value in the current user coordinate system (usually the left side), relative to the (x,y) coordinates of the UI control.","If the attribute is not specified, the label's x-position is determined by the skin.\n\nlabelY=\u201c<coordinate>\u201d\n","The y-axis coordinate of the side of the label, which has the smaller y-axis coordinate value in the current user coordinate system (usually the top), relative to the (x,y) coordinates of the UI control.","If the attribute is not specified, the label's y-position is determined by the skin.\n\ndisabled=\u201c(true | false)\u201d\n","If true, the UI control is set to its disabled state and cannot be used.\n\nautoScale=\u201c(true | false)\u201d\n","If true, the UI control is scaled to account for the difference between the transforms on the main document and the skin document, due to the \u2018viewBox\u2019 and \u2018preserveAspectRatio\u2019 attributes on each document's root \u2018svg\u2019 element. The resulting UI control will appear exactly the same size in the main document as it appeared in the skin document.\n\nstateHover=\u201cname\u201d\n","The ID of the UI control's child element \u2018state\u2019, which refers to a skin to be used for the \u2018hover\u2019 state's appearance.","If the attribute is not specified, the skin's default \u2018hover\u2019 state appearance is used.\n\nstateFocus=\u201cname\u201d\n","The ID of the UI control's child element \u2018state\u2019, which refers to a skin to be used for the \u2018focus\u2019 state's appearance.","If the attribute is not specified, the skin's default \u2018focus\u2019 state appearance is used.\n\nstate_focus_up=\u201cname\u201d\n","Specifies the ID of the UI control's<state> child element, to override the appearance of the \u201cfocus up\u201d state, as defined in the skin.\n\nstate_focus_down=\u201cname\u201d\n","Specifies the ID of the UI control's<state> child element, to override the appearance of the \u201cfocus_down\u201d state, as defined in the skin.\n\nstateUp=\u201cname\u201d\n","The ID of the UI control's child element \u2018state\u2019, which refers to a skin to be used for the \u2018up\u2019 state's appearance.","If the attribute is not specified, the skin's default \u2018up\u2019 state appearance is used.\n\nstateDown=\u201cname\u201d\n","The ID of the UI control's child element \u2018state\u2019, which refers to a skin to be used for the \u2018down\u2019 state's appearance.","If the attribute is not specified, the skin's default \u2018down\u2019 state appearance is used.\n\nstate_hit=\u201cname\u201d\n","Specifies the ID of the UI control's<state> child element, to override the appearance of the \u201chit\u201d state, as defined in the skin.\n\nstateDisabled=\u201cname\u201d\n","The ID of the UI control's child element \u2018state\u2019, which refers to a skin to be used for the \u2018disabled\u2019 state's appearance.","If the attribute is not specified, the skin's default \u2018up\u2019 state appearance is used.\n\nstate_disabled_up=\u201cname\u201d\n","Specifies the ID of the UI control's <state> child element, to override the appearance of the \u201cdisabled up\u201d state, as defined in the skin.\n\nstate_disabled_down=\u201cname\u201d\n","Specifies the ID of the UI control's <state> child element, to override the appearance of the \u201cdisabled down\u201d state, as defined in the skin.\n\nUI Control Elements 22\n\nThe \u2018aggregate\u2019 element\n"]}}}},"The \u2018aggregate\u2019 element defines a container for other SVG and dSVG elements. It is used to create custom controls, often composed of other UI controls, which can be easily inserted into any document. Any child \u2018variable\u2019 elements are considered to be properties of the aggregate. Any child \u2018action\u2019 elements are considered to be methods of the aggregate. Properties and methods are accessible via the dSVG expression syntax.","<!ENTITY % aggregateExt\u201c \u201d>","<!ELEMENT dsvg:aggregate (dsvg:state|%behaviors;)*>","<!ATTLIST dsvg:aggregate","%stdDSVGAttrs;","%stdUIAttrs;","viewBox %ViewBoxSpec.datatype #IMPLIED>","Attribute definitions:","viewBox=\u2018<string>\u2019",{"@attributes":{"id":"p-0184","num":"0000"},"ul":{"@attributes":{"id":"ul0052","list-style":"none"},"li":{"@attributes":{"id":"ul0052-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0053","list-style":"none"},"li":"The same as the \u2018viewBox\u2019 attribute in the SVG specification. A list of four numbers <min-x>, <min-y>, <width> and <height>, separated by whitespace and\/or a comma, which specify a rectangle in user space that should be mapped to the bounds of the viewport established by the given element, taking into account the \u2018preserveAspectRatio\u2019 attribute. If specified, an additional transformation is applied to all descendants of the given element to achieve the specified effect."}}}},{"@attributes":{"id":"p-0185","num":"0332"},"figref":"FIG. 11"},"<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c..\/SVGdSVG.dtd\u201d>","<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG20\u201d","xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d height=\u201c450\u201d width=\u201c744\u201d","onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/window.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/windowBase.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/button.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/scrollbar.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/slider.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/attributeDrag.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/aggregate.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/contextMenu.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/listbox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/combobox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/textbox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/alert.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/setAttribute.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdSVG20\/run.js\u201d\/>","<!-- Adding Template -->","<g id=\u201ctemplate\u201d>\n\n","<\/g>","<!-- adding controls -->","<dsvg:alert id=\u201cone\u201d message=\u201coutside aggregate\u201d\/>","<rect id=\u201cfoobar\u201d x=\u201c2\u201d y=\u201c70\u201d width=\u201c5\u201d height=\u201c5\u201d fill=\u201cgreen\u201d\/><text y=\u201c75\u201d x=\u201c10\u201d id=\u201ctext1\u201d>id=\u201cfoobar\u201d<\/text>","<dsvg:button xlink:href=\u201cdSVG20\/skinButton_Windows.svg#skinButton\u201d autoScale=\u201ctrue\u201d height=\u201c18\u201d width=\u201c100\u201d y=\u201c70\u201d x=\u201c420\u201d label=\u201cSet Prop Yellow\u201d id=\u201cbutton1\u201d>\n\n","<\/dsvg:button>","<dsvg:button xlink:href=\u201cdSVG20\/skinButton_Windows.svg#skinButton\u201d autoScale=\u201ctrue\u201d height=\u201c18\u201d width=\u201c100\u201d y=\u201c100\u201d x=\u201c420\u201d label=\u201cSet Prop Red\u201d id=\u201cbutton1\u201d>\n\n","<\/dsvg:button>","<dsvg:aggregate autoScale=\u201ctrue\u201d height=\u201c200\u201d width=\u201c400\u201d y=\u201c50\u201d x=\u201c90\u201d id=\u201cMyAggregate\u201d>\n\n","<\/dsvg:variable>","<rect id=\u201cfoobar\u201d x=\u201c35\u201d y=\u201c15\u201d width=\u201c5\u201d height=\u201c5\u201d fill=\u201cblue\u201d\/><text y=\u201c20\u201d x=\u201c45\u201d id=\u201ctext1\u201d>id=\u201cfoobar\u201d<\/text>","<rect id=\u201cfoobar2\u201d x=\u201c35\u201d y=\u201c45\u201d width=\u201c5\u201d height=\u201c5\u201d fill=\u201cred\u201d\/><text y=\u201c50\u201d x=\u201c45\u201d id=\u201ctext1\u201d>id=\u201cfoobar2\u201d<\/text>","<rect x=\u201c5\u201d y=\u201c5\u201d width=\u201c310\u201d height=\u201c275\u201d opacity=\u201c0.3\u201d id=\u201cMyAggregateFill\u201d fill=\u201cgreen\u201d\/>","<text y=\u201c120\u201d x=\u201c120\u201d id=\u201ctext1\u201d>AGGREGATE<\/text>","<text y=\u201c190\u201d x=\u201c18\u201d id=\u201ctext2\u201d dsvg:stateGroup=\u201ca\u201d>State Group A<\/text>","<rect id=\u201cstateABackGround\u201d x=\u201c8\u201d y=\u201c198\u201d width=\u201c104\u201d height=\u201c75\u201d fill=\u201cblue\u201d opacity=\u201c0.5\u201d dsvg:stateGroup=\u201ca\u201d\/>","<dsvg:button dsvg:stateGroup=\u201ca\u201d xlink:href=\u201cdSVG20\/skinButton_Windows.svg#skinButton\u201d autoScale=\u201ctrue\u201d height=\u201c18\u201d width=\u201c100\u201d y=\u201c200\u201d x=\u201c10\u201d label=\u201cButton\u201d id=\u201cbutton1\u201d><dsvg:alert id=\u201cstateOne\u201d message=\u201cState A 1\u201d\/><\/dsvg:button>\n\n","<\/dsvg:aggregate>","<\/svg>","The \u2018button\u2019 element","The \u2018button\u2019 element defines a control that can be clicked to trigger an action. It can be a push button, a checkbox (same as a sticky\/toggle button) or a radiobutton, depending on its attributes.",{"@attributes":{"id":"p-0224","num":"0413"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ENTITY % buttonExt \u201c \u201d >"]},{"entry":[{},"<!ELEMENT dsvg:button (dsvg:state|%behaviors;)* >"]},{"entry":[{},"<!ATTLIST dsvg:button"]},{"entry":[{},"%stdDSVGAttrs;"]},{"entry":[{},"%stdUIAttrs;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"toggle","%Boolean;","#IMPLIED"]},{"entry":[{},"group","%Text;","#IMPLIED"]},{"entry":[{},"selected","%Boolean;","#IMPLIED >"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":[{},{}],"ul":{"@attributes":{"id":"ul0069","list-style":"none"},"li":{"@attributes":{"id":"ul0069-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0070","list-style":"none"},"li":["Specifies whether the button is a \u201ctoggle\u201d (i.e. \u201csticky\u201d) button, meaning that it toggles between \u201cup\u201d and \u201cdown\u201d states when clicked on. A checkbox has toggle=\u201ctrue\u201d.","If the attribute is not specified, the default is \u2018false\u2019.\n\ngroup=\u2018<string>\u2019\n","The name of the radio group that the button belongs to.","If the attribute is specified, the button behaves as a radio button, in which only one of the buttons associated with this radioGroup can be checked at a time.","If the attribute is not specified, the button behaves as either a push button or a toggle button.\n\nselected=\u201c(true | false)\u201d\n","Specifies the initial state of the button as being down\/checked (true) or up\/unchecked (false). This attribute is automatically updated to reflect the current state of the control whenever the user clicks on the button, so that its state can be referenced externally.","If the attribute is not specified, the default is \u2018false\u2019.\n\nSkin template:\n\n<?xml version=\u201c1.0\u201d?>\n\n<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG\u201d\n\nxmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d>\n"]}}}},"<g id=\u201c \u201d>\n\n","<\/g>","<\/svg>",{"@attributes":{"id":"p-0227","num":"0430"},"figref":"FIG. 12"},"<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM\u201c..\/SVGdSVG.dtd\u201d>","<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG11\u201d","xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d height=\u201c450px\u201d width=\u201c744px\u201d","onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg 11\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/button.js\u201d\/>","<!-- Adding Template -->","<g id=\u201ctemplate\u201d>\n\n","<\/g>","<!-- adding controls -->","<dsvg:button xlink:href=\u201cdsvg11\/skinButton_Windows.svg#skinButton\u201d autoScale=\u201ctrue\u201d height=\u201c18\u201d width=\u201c100\u201d y=\u201c70\u201d x=\u201c50\u201d label=\u201cDefault button\u201d id=\u201cdefault\u201d\/>\n\n","The \u2018calendar\u2019 element defines a calendar control, displaying the specified month of the specified year.","Attribute definitions:","year=\u201cinteger\u201d","Specifies the year for the calendar to display.","month=\u201cinteger\u201d","Specifies the month for the calendar to display.","selectable=\u201c(all | weekdays | weekends)\u201d","Specifies what days can be selected by the user.","multiSelect=\u201c( | false)\u201d","Specifies whether the user can select multiple days (true) or not (false).","The \u2018checkBox\u2019 element","The \u2018checkBox\u2019 element defines a sticky\/toggle button that can be clicked to trigger an action.",{"@attributes":{"id":"p-0243","num":"0470"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<!ENTITY % checkBoxExt \u201c \u201d >"},{"entry":"<!ELEMENT dsvg:checkBox (dsvg:state|%behaviors;)* >"},{"entry":"<!ATTLIST dsvg:checkBox"},{"entry":"%stdDSVGAttrs;"},{"entry":"%stdUIAttrs;"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["selected","%Boolean;","#IMPLIED >"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":[{},{}],"ul":{"@attributes":{"id":"ul0078","list-style":"none"},"li":{"@attributes":{"id":"ul0078-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0079","list-style":"none"},"li":["Specifies the initial state of the checkBox as being checked (true) or unchecked (false). This attribute is automatically updated to reflect the current state of the control whenever the user clicks on the checkBox, so that its state can be referenced externally.","If the attribute is not specified, the default is \u2018false\u2019.\n\nSkin template:\n\n<?xml version=\u201c1.0\u201d?>\n\n<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG\u201d\n\nxmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d>\n"]}}}},"<g id=\u201c \u201d>\n\n","<\/g>","<\/svg>",{"@attributes":{"id":"p-0246","num":"0482"},"figref":"FIG. 13"},"<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM\u201c.\/SVGdSVG.dtd\u201d>","<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG11\u201d","xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d height=\u201c450px\u201d width=\u201c744px\u201d","onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/button.js\u201d\/>","<!-- Adding Template -->","<g id=\u201ctemplate\u201d>\n\n","<g>","<!-- adding controls -->","<dsvg:checkBox xlink:href=\u201cdsvg11\/skinCheckbox_Default.svg#skinCheckBox\u201d autoScale=\u201ctrue\u201d height=\u201c12\u201d width=\u201c12\u201d y=\u201c70\u201d x=\u201c50\u201d label=\u201cDefault check box: (h=12, w=12)\u201d id=\u201cdefault\u201d\/>","<rect height=\u201c16\u201d width=\u201c16\u201d y=\u201c68\u201d x=\u201c48\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d\/>","<dsvg:checkBox xlink:href=\u201cdsvg11\/skinCheckbox_Default.svg#skinCheckBox\u201d autoScale=\u201ctrue\u201d height=\u201c10\u201d width=\u201c10\u201d y=\u201c160\u201d x=\u201c50\u201d label=\u201cSmall check box: (h=10, w=10)\u201d id=\u201csmall\u201d\/>","<rect height=\u201c14\u201d width=\u201c14\u201d y=\u201c158\u201d x=\u201c48\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d\/>","<dsvg:checkBox xlink:href=\u201cdsvg11\/skinCheckbox_Default.svg#skinCheckBox\u201d autoScale=\u201ctrue\u201d height=\u201c40\u201d width=\u201c40\u201d y=\u201c250\u201d x=\u201c50\u201d label=\u201cLarge check box: (h=40, w=40)\u201d id=\u201clarge\u201d\/>","<rect height=\u201c44\u201d width=\u201c44\u201d y=\u201c248\u201d x=\u201c48\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d\/><\/svg>","The \u2018comboBox\u2019 element","The \u2018comboBox\u2019 element defines a comboBox control, used to display a list of items, from which only one can be selected. It is a composite control, utilizing \u2018textBox\u2019, \u2018button\u2019, \u2018contextMenu\u2019 and \u2018slider\u2019 controls.",{"@attributes":{"id":"p-0262","num":"0507"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ENTITY % comboBoxExt \u201c \u201d >"]},{"entry":[{},"<!ELEMENT comboBox (dsvg:state|%behaviors;|dsvg:item)*>"]},{"entry":[{},"<!ATTLIST comboBox"]},{"entry":[{},"%stdDSVGAttrs;"]},{"entry":[{},"%stdUIAttrs;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"editable","%Boolean;","#IMPLIED"]},{"entry":[{},"rows","%Integer;","#IMPLIED"]},{"entry":[{},"value","%Text;","#IMPLIED"]},{"entry":[{},"data","%Text;","#IMPLIED"]},{"entry":[{},"sort","%Text;","#IMPLIED >"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":[{},{}],"ul":{"@attributes":{"id":"ul0085","list-style":"none"},"li":{"@attributes":{"id":"ul0085-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0086","list-style":"none"},"li":"Specifies whether the comboBox is editable (true) or not (false). If editable, typing text and pressing Enter results in a new \u2018item\u2019 element being created as a child of the \u2018comboBox\u2019 element. Its \u2018label\u2019 attribute gets set to the text just entered, which results in the new item being displayed at the bottom of the list."}}}},"If the attribute is not specified, the default is \u2018true\u2019.","rows=\u201c<integer>\u201d",{"@attributes":{"id":"p-0264","num":"0000"},"ul":{"@attributes":{"id":"ul0087","list-style":"none"},"li":{"@attributes":{"id":"ul0087-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0088","list-style":"none"},"li":["Specifies the number of rows to be displayed in the dropdown list.","If the attribute is not specified, the dropdown list will show all items, if possible.\n\nvalue=\u2018<string>\u2019\n","The value of the currently selected item's \u2018value\u2019 attribute, which is displayed.","If the attribute is specified, the item whose \u2018value\u2019 attribute matches the \u2018comboBox\u2019 element's \u2018value\u2019 attribute is the initially-selected item.","If the attribute is not specified, the item whose \u2018data\u2019 attribute matches the \u2018comboBox\u2019 element's \u2018name\u2019 attribute is the initially-selected item.","If neither \u2018value\u2019 nor \u2018name\u2019 is specified, and \u2018editable\u2019 is set to \u2018false\u2019, the first item in the list is the initially-selected item.","If neither \u2018value\u2019 nor \u2018name\u2019 is specified, and \u2018editable\u2019 is set to \u2018true\u2019, there is no initially-selected item.\n\ndata=\u2018<string>\u2019\n","The value of the currently selected item's \u2018name\u2019 attribute, which is not displayed.","If the \u2018value\u2019 attribute is specified, this attribute is not used to specify the initially-selected item."]}}}},"If the attribute is specified, and \u2018value\u2019 is not, the item whose \u2018name\u2019 attribute matches the \u2018comboBox\u2019 element's \u2018name\u2019 attribute is the initially-selected item.\n\n","<g>","<\/svg>",{"@attributes":{"id":"p-0267","num":"0526"},"figref":"FIG. 14"},"<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c.\/SVGdSVG.dtd\u201d>","<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG11\u201d","xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d height=\u201c450px\u201d width=\u201c744px\u201d","onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/combobox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/textbox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/button.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/contextMenu.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/slider.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/listBox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/scrollbar.js\u201d\/>","<!-- Adding Template -->","<g id=\u201ctemplate\u201d>\n\n","<g>","<!-- adding controls -->","<dsvg:comboBox selected=\u201cfalse\u201d","xlink:href=\u201cdsvg11\/skinComboBox_Composite.svg#skinComboBox\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d rows=\u201c4\u201d height=\u201c17\u201d width=\u201c217\u201d y=\u201c70\u201d x=\u201c50\u201d label=\u201cDefault combo box: (default attributes)\u201d id=\u201ccomboBox_default\u201d><dsvg:item value=\u201cApple\u201d data=\u201cplu1\u201d id=\u201citem1\u201d\/><dsvg:item value=\u201cBanana\u201d data=\u201cplu2\u201d id=\u201citem2\u201d\/><dsvg:item value=\u201cGrapes\u201d data=\u201cplu3\u201d id=\u201citem3\u201d\/>","<\/dsvg:comboBox>","<rect height=\u201c21\u201d width=\u201c221\u201d y=\u201c68\u201d x=\u201c48\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crect_default\u201d\/>","<dsvg:comboBox selected=\u201cfalse\u201d","xlink:href=\u201cdsvg11\/skinComboBox_Composite.svg#skinComboBox\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d editable=\u201ctrue\u201d rows=\u201c4\u201d height=\u201c17\u201d width=\u201c217\u201d y=\u201c70\u201d x=\u201c350\u201d label=\u201cFixed-size combo box: (rows=4)\u201d id=\u201ccomboBox_fixed\u201d>",{"@attributes":{"id":"p-0287","num":"0000"},"ul":{"@attributes":{"id":"ul0093","list-style":"none"},"li":{"@attributes":{"id":"ul0093-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0094","list-style":"none"},"li":["<dsvg:item value=\u201cApple\u201d data=\u201cplu1\u201d id=\u201citem1\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cBanana\u201d data=\u201cplu2\u201d id=\u201citem2\u201d>\n        \n        ","<\/dsvg: item>","<dsvg:item value=\u201cGrapes\u201d data=\u201cplu3\u201d id=\u201citem3\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cKiwi\u201d data=\u201cplu4\u201d id=\u201citem4\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cOrange\u201d data=\u201cplu5\u201d id=\u201citem5\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cWatermelon\u201d data=\u201cplu6\u201d id=\u201citem6\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cCoconut\u201d data=\u201cplu7\u201d id=\u201citem7\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cPeach\u201d data=\u201cplu8\u201d id=\u201citem8\u201d>\n        \n        ","<\/dsvg:item>"]}}}},"<\/dsvg:comboBox>","<dsvg:comboBox selected=\u201cfalse\u201d","xlink:href=\u201cdsvg 11\/skinComboBox_Composite.svg#skinComboBox\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d height=\u201c16\u201d width=\u201c80\u201d y=\u201c180\u201d x=\u201c50\u201d label=\u201cSmall combo box: (h=16, w=80)\u201d id=\u201ccomboBox_small\u201d><dsvg:item value=\u201cApple\u201d data=\u201cplu1\u201d id=\u201citem1\u201d\/><dsvg:item value=\u201cBanana\u201d data=\u201cplu2\u201d id=\u201citem2\u201d\/><dsvg:item value=\u201cGrapes\u201d data=\u201cplu3\u201d id=\u201citem3\u201d\/>","<\/dsvg:comboBox>","<rect height=\u201c20\u201d width=\u201c84\u201d y=\u201c178\u201d x=\u201c48\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crect_small\u201d\/>","<dsvg:comboBox selected=\u201cfalse\u201d","xlink:href=\u201cdsvg11\/skinComboBox_Composite.svg#skinComboBox\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d height=\u201c50\u201d width=\u201c300\u201d y=\u201c180\u201d x=\u201c350\u201d label=\u201cLarge combo box: (h=50, w=300)\u201d id=\u201ccomboBox_large\u201d><dsvg:item value=\u201cApple\u201d data=\u201cplu1\u201d id=\u201citem1\u201cI><dsvg:item value=\u201cBanana\u201d data=\u201cplu2\u201d\n\n","<\/dsvg:comboBox>","<rect height=\u201c54\u201d width=\u201c304\u201d y=\u201c178\u201d x=\u201c348\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crect_large\u201d\/>","<\/svg>","The \u2018contextMenu\u2019 element","The \u2018contextMenu\u2019 element defines a menu that is associated with a particular element or group of elements via the \u2018contextMenu\u2019 attribute. The contextMenu appears at the position of the mouse pointer when right-clicking on an element.",{"@attributes":{"id":"p-0298","num":"0596"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<!ENTITY % contextMenuExt \u201c \u201d >"},{"entry":"<!ELEMENT contextMenu (dsvg:state|%behaviors;|dsvg:item)*>"},{"entry":"<!ATTLIST contextMenu"},{"entry":"%stdDSVGAttrs;"},{"entry":"%stdUIAttrs;"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["value","%Text;","#IMPLIED"]},{"entry":["data","%Text;","#IMPLIED"]},{"entry":["cols","%Integer;","#IMPLIED"]},{"entry":["colSpace","%Integer;","#IMPLIED"]},{"entry":["eventSource","ID;","#IMPLIED"]},{"entry":["sort","%Text;","#IMPLIED >"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":[{},{}]},"The number of columns to be displayed in the contextMenu.","colSpace=\u201c<integer>\u201d","The number of user units to separate each column.\\","value=\u2018<string>\u2019","The value of the selected item's \u2018value\u2019 attribute, which is displayed.","data=\u2018<string>\u2019","The value of the selected item's \u2018data\u2019 attribute, which is not displayed.","eventSource=name",{"@attributes":{"id":"p-0303","num":"0000"},"ul":{"@attributes":{"id":"ul0105","list-style":"none"},"li":{"@attributes":{"id":"ul0105-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0106","list-style":"none"},"li":"The ID of the element that triggered the contextMenu to appear. This attribute gets automatically populated for reference purposes. It should never be set via markup. If the attribute is not specified, the default is \u2018true\u2019.\n\nsort=\u201c(ascending | descending | none)\u201d\n"}}}},"The type of sorting to be done on the items in the list.","If the \u2018sort\u2019 attribute is not specified, the default is \u2018none\u2019.","Skin template:","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG\u201d><g id=\u201c \u201d><g id=\u201cskinContextMenu_top\u201d display=\u201call\u201d><\/g><g id=\u201cskinContextMenu_middle\u201d display=\u201call\u201d><text id=\u201clabel\u201d x=\u201c \u201d y=\u201c \u201d><\/text><\/g><g id=\u201cskinContextMenu_middle_hover\u201d display=\u201cnone\u201d><text id=\u201clabel\u201d x=\u201c \u201d y=\u201c \u201d><\/text><\/g><g id=\u201cskinContextMenu_middle_selected\u201d display=\u201cnone\u201d><text id=\u201clabel\u201d x=\u201c \u201d y=\u201c \u201d><\/text><\/g><g id=\u201cskinContextMenu_bottom\u201d display=\u201call\u201d>\n\n","<\/g>","<\/svg>",{"@attributes":{"id":"p-0308","num":"0607"},"figref":"FIG. 15"},"<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c.\/SVGdSVG.dtd\u201d>","<svg xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d","xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG11\u201d height=\u201c450px\u201d","width=\u201c744px\u201d onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg 11\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/contextMenu.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg 11\/attributeContextMenu.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg 11\/attributeNativeContextMenu.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg 11\/listbox.js\u201d\/>","<!--Begin Template-->","<g id=\u201ctemplate\u201d>\n\n","<\/g>","<!--adding the controls-->","<dsvg:contextMenu","xlink:href=\u201cdsvg11\/skinContextMenu_Default.svg#skinContextMenu\u201d autoScale=\u201ctrue\u201d label=\u201cRed Circle Menu\u201d id=\u201ccontextMenu1\u201d>",{"@attributes":{"id":"p-0321","num":"0000"},"ul":{"@attributes":{"id":"ul0111","list-style":"none"},"li":{"@attributes":{"id":"ul0111-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0112","list-style":"none"},"li":["<dsvg:item value=\u201cApple\u201d data=\u201cplu1\u201d id=\u201citem1\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cBanana\u201d data=\u201cplu2\u201d id=\u201citem2\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cGrapes\u201d data=\u201cplu3\u201d id=\u201citem3\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cKiwi\u201d data=\u201cplu4\u201d id=\u201citem4\u201d>\n        \n        ","<\/dsvg: item>"]}}}},"<\/dsvg:contextMenu>","<circle dsvg:contextMenu=\u201ccontextMenu1\u201d r=\u201c50\u201d cy=\u201c130\u201d cx=\u201c130\u201d stroke-width=\u201c5\u201d stroke=\u201cdarkblue\u201d fill=\u201c#5f86B1\u201d id=\u201ccircle_blue\u201d\/>","<\/svg>","The \u2018date\u2019 element","The \u2018date\u2019 element defines properties for a particular date for its parent calendar control. It must be a child of a \u2018calendar\u2019 element.","Attribute definitions:","id=\u201cname\u201d","Standard XML attribute for assigning a unique name to an element.","year=\u201cinteger\u201d","Specifies the year for this particular date.","month=\u201cinteger\u201d","Specifies the month for this particular date.","day=\u201cinteger\u201d","Specifies the day for this particular date.","name=\u201cstring\u201d",{"@attributes":{"id":"p-0329","num":"0000"},"ul":{"@attributes":{"id":"ul0117","list-style":"none"},"li":{"@attributes":{"id":"ul0117-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0118","list-style":"none"},"li":"Specifies a hidden string to associate with this particular date (which, unlike \u2018id\u2019, does not need to be unique). e.g. \u201cHOLIDAY\u201d.\n\nselectable=\u201c(true | false)\u201d\n"}}}},"Specifies whether this particular date is selectable (true) or not (false).","label=\u201cstring\u201d","Specifies the text label to be displayed for this particular date.","The \u2018dialog\u2019 element","The \u2018dialog\u2019 element defines a window container, specifically for the purpose of collecting data which can be accepted or cancelled. It has inherent Accept\/OK, Cancel, Help and Info buttons.","Attribute definitions:","showTitle=\u201c(true | false)\u201d",{"@attributes":{"id":"p-0333","num":"0000"},"ul":{"@attributes":{"id":"ul0119","list-style":"none"},"li":{"@attributes":{"id":"ul0119-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0120","list-style":"none"},"li":["Specifies whether to display a titlebar (true) or not (false). If true, the title is obtained from the \u2018label\u2019 attribute.\n\nshowMinimizeButton=\u201c(true | false)\u201d\n","Specifies whether to display the minimize button or not.\n\nshowMaximizeButton=\u201c(true | false)\u201d\n"]}}}},"Specifies whether to display the maximize button or not.","showCloseButton=\u201c(true | false)\u201d","Specifies whether to display the close button or not.","showAcceptButton=\u201c(true | false)\u201d","Specifies whether to display the Accept\/OK button or not.","showCancelButton=\u201c(true | false)\u201d","Specifies whether to display the Cancel button or not.","showHelpButton=\u201c(true | false)\u201d","Specifies whether to display the Help button or not.","showInfoButton=\u201c(true | false)\u201d","Specifies whether to display the Information button or not.","modal=\u201c(true | false)\u201d","Specifies whether the window is modal (true) or modeless (false).","movable=\u201c(true | false)\u201d",{"@attributes":{"id":"p-0341","num":"0000"},"ul":{"@attributes":{"id":"ul0121","list-style":"none"},"li":{"@attributes":{"id":"ul0121-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0122","list-style":"none"},"li":["Specifies whether the window is movable (true) by clicking on the titlebar and dragging, or not (false).\n\nstate=\u201c(minimized | maximized | normal)\u201d\n","Specifies the initial state of the window. If the Minimize or Maximize buttons are pressed, this attribute is automatically updated.\n\nThe \u2018frame\u2019 element\n"]}}}},"The \u2018frame\u2019 element defines a container element.","Attribute definitions:","xlink:href=\u201c<uri>\u201d","Specifies the document to display within the \u2018frame\u2019 container.","The \u2018item\u2019 element","The \u2018item\u2019 element defines a selectable item in a contextMenu, comboBox, listBox or listView control.",{"@attributes":{"id":"p-0345","num":"0669"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ENTITY % itemExt \u201c \u201d >"]},{"entry":[{},"<!ELEMENT item (dsvg:itemData)*>"]},{"entry":[{},"<!ATTLIST item"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"id","ID;","#IMPLIED"]},{"entry":[{},"value","%Text;","#IMPLIED"]},{"entry":[{},"data","%Text;","#IMPLIED >"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":[{},{}]},"Standard XML attribute for assigning a unique name to an element.","value=\u2018<string>\u2019","The value of the selected item's \u2018value\u2019 attribute, which is displayed.","data=\u2018<string>\u2019","The value of the selected item's \u2018data\u2019 attribute, which is not displayed.","The \u2018itemData\u2019 element","The \u2018itemData\u2019 element defines extra information for an item in a contextMenu, comboBox, listBox or listView control.",{"@attributes":{"id":"p-0350","num":"0674"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ENTITY % itemDataExt \u201c \u201d >"]},{"entry":[{},"<!ELEMENT itemData (dsvg:itemData)*>"]},{"entry":[{},"<!ATTLIST itemData"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"id","ID;","#IMPLIED"]},{"entry":[{},"value","%Text;","#IMPLIED"]},{"entry":[{},"name","%Text;","#IMPLIED >"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":[{},{}]},"Standard XML attribute for assigning a unique name to an element.","value=\u2018<string>\u2019","The value of the selected item's \u2018value\u2019 attribute, which is displayed.","data=\u2018<string>\u2019","The value of the selected item's \u2018data\u2019 attribute, which is not displayed.","The \u2018listBox\u2019 element","The \u2018listBox\u2019 element defines a single-column list of selectable items.",{"@attributes":{"id":"p-0355","num":"0679"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ENTITY % listBoxMenuExt \u201c \u201d >"]},{"entry":[{},"<!ELEMENT listBox (dsvg:state|%behaviors;|dsvg:item)*>"]},{"entry":[{},"<!ATTLIST listBox"]},{"entry":[{},"%stdDSVGAttrs;"]},{"entry":[{},"%stdUIAttrs;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"rows","%Integer;","#IMPLIED"]},{"entry":[{},"value","%Text;","#IMPLIED"]},{"entry":[{},"data","%Text;","#IMPLIED"]},{"entry":[{},"sort","%Text;","#IMPLIED >"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":[{},{}]},"The number of rows to be displayed in the listBox.","value=\u2018<string>\u2019",{"@attributes":{"id":"p-0357","num":"0000"},"ul":{"@attributes":{"id":"ul0123","list-style":"none"},"li":{"@attributes":{"id":"ul0123-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0124","list-style":"none"},"li":["If an \u2018item\u2019 child element exists with a matching \u2018value\u2019 attribute, that item is considered to be selected. The \u2018data\u2019 attribute is automatically set to match the \u2018data\u2019 attribute of that \u2018item\u2019 element, overriding the existing \u2018data\u2019 attribute, if provided. When an item is selected, this attribute is automatically updated to match the value of the selected item's \u2018value\u2019 attribute. If this attribute is modified, the item with a matching \u2018value\u2019 attribute is selected.\n\ndata=\u2018<string>\u2019\n","If an \u2018item\u2019 child element exists with a matching \u2018data\u2019 attribute, and the listView element's \u2018value\u2019 attribute is not provided, that item is considered to be selected. The \u2018value\u2019 attribute is automatically set to match the \u2018value\u2019 attribute of that \u2018item\u2019 element. When an item is selected, this attribute is automatically updated to match the value of the selected item's \u2018data\u2019 attribute. If this attribute is modified, the item with a matching \u2018data\u2019 attribute is selected.\n\nsort=\u201c(ascending | descending | none)\u201d\n"]}}}},"The type of sorting to be done on the items in the list.","If the \u2018sort\u2019 attribute is not specified, the default is \u2018none\u2019.","Skin template:","<?xml version=\u201c1.0\u201d?><svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG\u201d><g id=\u201c \u201d><g id=\u201cskinContextMenu_top\u201d display=\u201call\u201d><\/g><g id=\u201cskinContextMenu_middle\u201d display=\u201call\u201d><\/g><g id=\u201cskinContextMenu_middle_hover\u201d display=\u201cnone\u201d><\/g><g id=\u201cskinContextMenu_middle_selected\u201d display=\u201cnone\u201d><\/g><g id=\u201cskinContextMenu_bottom\u201d display=\u201call\u201d>\n\n","<\/g>","<\/svg>",{"@attributes":{"id":"p-0362","num":"0688"},"figref":"FIG. 16"},"<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c.\/SVGdSVG.dtd\u201d>","<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG11\u201d","xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d height=\u201c450px\u201d width=\u201c744px\u201d","onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/listbox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/button.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/contextMenu.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/scrollbar.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/slider.js\u201d\/><!--Adding","Template-->","<g id=\u201ctemplate\u201d>\n\n","<\/g><!--adding controls-->","<dsvg:listBox xlink:href=\u201cdsvg11\/skinListBox_Composite.svg#skinListBox\u201d autoScale=\u201ctrue\u201d height=\u201c60\u201d width=\u201c198\u201d y=\u201c70\u201d x=\u201c50\u201d label=\u201cDefault list box: (default attributes)\u201d id=\u201clistbox_default\u201d>\n\n","<\/dsvg:listBox>","<rect height=\u201c64\u201d width=\u201c202\u201d y=\u201c68\u201d x=\u201c48\u201d opacity=\u201c0.5\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crect_default\u201d\/>","<dsvg:listBox xlink:href=\u201cdsvg11\/skinListBox_Composite.svg#skinListBox\u201d autoScale=\u201ctrue\u201d rows=\u201c4\u201d height=\u201c60\u201d width=\u201c198\u201d y=\u201c70\u201d x=\u201c350\u201d label=\u201cFixed-size list box: (rows=4)\u201d id=\u201clistbox_fixed\u201d>\n\n","<\/dsvg:listBox>","<dsvg:listBox selected=\u201ctrue\u201d xlink:href=\u201cdsvg11\/skinListBox_Composite.svg#skinListBox\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d value=\u201cval1\u201d rows=\u201c4\u201d height=\u201c25\u201d width=\u201c70\u201d y=\u201c170\u201d x=\u201c50\u201d label=\u201cSmall list box: (h=25, w=70)\u201d id=\u201clistbox_small\u201d>\n\n","<\/dsvg:listBox>","<rect height=\u201c29\u201d width=\u201c74\u201d y=\u201c168\u201d x=\u201c48\u201d opacity=\u201c0.5\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crect_small\u201d\/>","<dsvg:listBox selected=\u201ctrue\u201d xlink:href=\u201cdsvg11\/skinListBox_Composite.svg#skinListBox\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d height=\u201c80\u201d width=\u201c300\u201d y=\u201c170\u201d x=\u201c350\u201d label=\u201cLarge list box: (h=80, w=300)\u201d id=\u201clistbox_large\u201d>\n\n","<\/dsvg:listBox>","<rect height=\u201c84\u201d width=\u201c304\u201d y=\u201c168\u201d x=\u201c348\u201d opacity=\u201c0.5\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crect_large\u201d\/>","<\/svg>","The \u2018listView\u2019 element","The \u2018listView\u2019 element defines a multi-column list of selectable items.",{"@attributes":{"id":"p-0385","num":"0757"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ENTITY % listViewMenuExt \u201c \u201d >"]},{"entry":[{},"<!ELEMENT listView (dsvg:state|%behaviors;|dsvg:item)*>"]},{"entry":[{},"<!ATTLIST listView"]},{"entry":[{},"%stdDSVGAttrs;"]},{"entry":[{},"%stdUIAttrs;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"rows","%Integer;","#IMPLIED"]},{"entry":[{},"cols","%Integer;","#IMPLIED"]},{"entry":[{},"colSpace","%Integer;","#IMPLIED"]},{"entry":[{},"value","%Text;","#IMPLIED"]},{"entry":[{},"data","%Text;","#IMPLIED"]},{"entry":[{},"sort","%Text;","#IMPLIED >"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":[{},{}]},"The number of rows to be displayed in the listBox.","cols=\u201c<integer>\u201d","The number of columns to be displayed in the listBox.","colSpace=\u201c<integer>\u201d","The number of user units to separate each column.","value=\u2018<string>\u2019",{"@attributes":{"id":"p-0389","num":"0000"},"ul":{"@attributes":{"id":"ul0137","list-style":"none"},"li":{"@attributes":{"id":"ul0137-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0138","list-style":"none"},"li":["If an \u2018item\u2019 child element exists with a matching \u2018value\u2019 attribute, that item is considered to be selected, in which case the \u2018data\u2019 attribute is automatically set to match the \u2018data\u2019 attribute of that \u2018item\u2019 element, overriding the existing \u2018data\u2019 attribute, if provided. When an item is selected, this attribute is automatically updated to match the value of the selected item's \u2018value\u2019 attribute. If this attribute is modified, the item with a matching \u2018value\u2019 attribute is selected.\n\ndata=\u2018<string>\u2019\n","If an \u2018item\u2019 child element exists with a matching \u2018data\u2019 attribute, and the listView element's \u2018value\u2019 attribute is not provided, that item is considered to be selected, in which case the \u2018value\u2019 attribute is automatically set to match the \u2018value\u2019 attribute of that \u2018item\u2019 element. When an item is selected, this attribute is automatically updated to match the value of the selected item's \u2018data\u2019 attribute. If this attribute is modified, the item with a matching \u2018data\u2019 attribute is selected.\n\nsort=\u2018<string>\u2019\n","If an \u2018item\u2019 child element exists with a matching \u2018data\u2019 attribute, and the listView element's \u2018value\u2019 attribute is not provided, that item is considered to be selected, in which case the \u2018value\u2019 attribute is automatically set to match the \u2018value\u2019 attribute of that \u2018item\u2019 element. When an item is selected, this attribute is automatically updated to match the value of the selected item's \u2018data\u2019 attribute. If this attribute is modified, the item with a matching \u2018data\u2019 attribute is selected.\n\nsort=\u201c(ascending | descending | none)\u201d\n"]}}}},"The type of sorting to be done on the items in the list.","If the \u2018sort\u2019 attribute is not specified, the default is \u2018none\u2019.","Skin template:","<?xml version=\u201c1.0\u201d?><svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG\u201d xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d><g id=\u201c \u201d><use id=\u201cMenuSkin\u201d xlink:href=\u201c \u201d x=\u201c \u201d y=\u201c \u201d\/><use id=\u201cScrollSkin\u201d xlink:href=\u201c \u201d x=\u201c \u201d y=\u201c \u201d\/><g id=\u201clabel\u201d><text id=\u201cskinListBox_label\u201d x=\u201c \u201d y=\u201c \u201d><\/text>\n\n","<\/g>","<\/svg>",{"@attributes":{"id":"p-0394","num":"0769"},"figref":"FIG. 17"},"<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c.\/SVGdSVG.dtd\u201d>","<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG11\u201d","xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d height=\u201c450px\u201d width=\u201c744px\u201d","onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/listview.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/scrollbar.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/listbox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/slider.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/button.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/contextMenu.js\u201d\/>","<!-- Adding Template -->","<g id=\u201ctemplate\u201d>\n\n","<\/g>","<!-- adding controls -->","<dsvg:listView selected=\u201cfalse\u201d","xlink:href=\u201cdsvg11\/skinListView_Composite.svg#skinListView\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d colSpace=\u201c5;50;130\u201d cols=\u201cdata;value;price\u201d height=\u201c60\u201d width=\u201c198\u201d y=\u201c70\u201d x=\u201c50\u201d label=\u201cDefault list view: (default attributes)\u201d id=\u201cdefault\u201d>",{"@attributes":{"id":"p-0409","num":"0000"},"ul":{"@attributes":{"id":"ul0143","list-style":"none"},"li":{"@attributes":{"id":"ul0143-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0144","list-style":"none"},"li":["<dsvg:item value=\u201cApple\u201d data=\u201cplu1\u201d id=\u201citem1\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cBanana\u201d data=\u201cplu2\u201d id=\u201citem2\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cOrange\u201d data=\u201cplu3\u201d id=\u201citem3\u201d>\n        \n        ","<\/dsvg: item>"]}}}},"<\/dsvg:listView>","<rect height=\u201c64\u201d width=\u201c202\u201d y=\u201c68\u201d x=\u201c48\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crect_default\u201d\/>","<dsvg:listView selected=\u201cfalse\u201d","xlink:href=\u201cdsvg11\/skinListView_Composite.svg#skinListView\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d colSpace=\u201c5;50;130\u201d cols=\u201cdata;value;price\u201d rows=\u201c4\u201d height=\u201c60\u201d width=\u201c198\u201d y=\u201c70\u201d x=\u201c270\u201d label=\u201cFixed-size list view: (rows=4)\u201d id=\u201cfixed\u201d>",{"@attributes":{"id":"p-0413","num":"0000"},"ul":{"@attributes":{"id":"ul0148","list-style":"none"},"li":{"@attributes":{"id":"ul0148-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0149","list-style":"none"},"li":["<dsvg:item value=\u201cApple\u201d data=\u201cplu1\u201d id=\u201citem1\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cBanana\u201d data=\u201cplu2\u201d id=\u201citem2\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cGrapes\u201d data=\u201cplu3\u201d id=\u201citem3\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cKiwi\u201d data=\u201cplu4\u201d id=\u201citem4\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cOrange\u201d data=\u201cplu5\u201d id=\u201citem5\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cWatermelon\u201d data=\u201cplu6\u201d id=\u201citem6\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cCoconut\u201d data=\u201cplu7\u201d id=\u201citem7\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cPeach\u201d data=\u201cplu8\u201d id=\u201citem8\u201d>\n        \n        ","<\/dsvg:item>","<dsvg:item value=\u201cMango\u201d data=\u201cplu9\u201d id=\u201citem9\u201d>\n        \n        ","<\/dsvg:item>"]}}}},"<\/dsvg:listView>","<dsvg:listView selected=\u201cfalse\u201d xlink:href=\u201cdsvg11\/skinListView_Composite.svg#skinListView\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d colSpace=\u201c5;50;130\u201d cols=\u201cdata;value;color\u201d height=\u201c25\u201d width=\u201c100\u201d y=\u201c170\u201d x=\u201c50\u201d label=\u201cSmall list view: (h=25, w=100)\u201d id=\u201clistview_small\u201d>\n\n","<\/dsvg:listView>","<rect height=\u201c29\u201d width=\u201c104\u201d y=\u201c168\u201d x=\u201c48\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crect_small\u201d\/>","<dsvg:listView selected=\u201cfalse\u201d xlink:href=\u201cdsvg11\/skinListView_Composite.svg#skinListView\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d colSpace=\u201c5;50;100;140\u201d cols=\u201cdata;value;color;price\u201d height=\u201c100\u201d width=\u201c440\u201d y=\u201c170\u201d x=\u201c270\u201d label=\u201cLarge 4 column list view; (h=100, w=440)\u201d id=\u201clistview_large\u201d>\n\n","<\/dsvg:listView>","<rect height=\u201c104\u201d width=\u201c444\u201d y=\u201c168\u201d x=\u201c268\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crect_large\u201d\/>","<\/svg>","The \u2018menuBar\u2019 element","The \u2018menuBar\u2019 element defines a container for menu items. The expected children are \u2018item\u2019 elements.","Attribute definitions: %standard attributes %","The standard attributes, such as id, label, etc.","value=\u201cstring\u201d",{"@attributes":{"id":"p-0423","num":"0000"},"ul":{"@attributes":{"id":"ul0169","list-style":"none"},"li":{"@attributes":{"id":"ul0169-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0170","list-style":"none"},"li":["The value of the currently selected child \u2018item\u2019 element's \u2018label\u2019 attribute. This represents the initial item selected. When a new item is selected, the \u2018value\u2019 attribute is automatically updated to reflect the \u2018label\u2019 attribute of the selected item.\n\nname=\u201cstring\u201d\n","The value of the currently selected child \u2018item\u2019 element's \u2018name\u2019 attribute, which is not displayed.\n\nhideGrippy=\u201c(true | false)\u201d\n"]}}}},"Specifies whether to hide the grippy (true) or not (false).","The \u2018menuSeparator\u2019 element","The \u2018menuSeparator\u2019 element defines a separator to be displayed between \u2018item\u2019 elements. It can only exist as a child of comboBox, listBox, listView, contextMenu or menuBar.","Attribute definitions:","id=\u201cname\u201d","Standard XML attribute for assigning a unique name to an element. xlink:href=\u201c<uri>\u201d\n\n","The \u2018messageBox\u2019 element defines a simple dialog with a message and a boolean response buttons. It can have action elements as children, but any graphical child elements will be ignored.","Attribute definitions:","showTitle=\u201c(true | false)\u201d",{"@attributes":{"id":"p-0428","num":"0000"},"ul":{"@attributes":{"id":"ul0173","list-style":"none"},"li":{"@attributes":{"id":"ul0173-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0174","list-style":"none"},"li":"Specifies whether to display a titlebar (true) or not (false). If true, the title is obtained from the \u2018label\u2019 attribute.\n\nshowYesButton=\u201c(true | false)\u201d\n"}}}},"Specifies whether to display the Yes button or not.","showNoButton=\u201c(true | false)\u201d","Specifies whether to display the No button or not.","movable=\u201c(true | false)\u201d",{"@attributes":{"id":"p-0431","num":"0000"},"ul":{"@attributes":{"id":"ul0175","list-style":"none"},"li":{"@attributes":{"id":"ul0175-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0176","list-style":"none"},"li":"Specifies whether the window is movable (true) by clicking on the titlebar and dragging, or not (false).\n\nlabel=\u201cstring\u201d\n"}}}},"Specifies the message to display within the message box.","labelYes=\u201cstring\u201d","Specifies the label of the Yes button. The default is \u201cYes\u201d.","labelNo=\u201cstring\u201d","Specifies the label of the No button. The default is \u201cNo\u201d.","The \u2018radioButton\u2019 element","The \u2018radioButton\u2019 element defines a sticky\/toggle button, belonging to a group of other radioButtons, that can be clicked to trigger an action. Only one radioButton per group can be selected. Selecting a radioButton that is already selected does nothing. Selecting a deselected radioButton automatically deselects the currently selected radioButton in the group.","<!ENTITY % radioButtonExt \u201c \u201d>","<!ELEMENT dsvg:radioButton (dsvg:state|%behaviors;)*>","<!ATTLIST dsvg:radioButton","%stdDSVGAttrs;","%stdUIAttrs;","selected % Boolean; #IMPLIED>","Attribute definitions:","selected=\u201c(true | false)\u201d",{"@attributes":{"id":"p-0436","num":"0000"},"ul":{"@attributes":{"id":"ul0177","list-style":"none"},"li":{"@attributes":{"id":"ul0177-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0178","list-style":"none"},"li":["Specifies the initial state of the radioButton as being checked (true) or unchecked (false). This attribute is automatically updated to reflect the current state of the control whenever the user clicks on the radioButton, so that its state can be referenced externally. If this attribute is modified, the control's state is updated to match.","If the attribute is not specified, the default is \u2018false\u2019.\n\nSkin template:\n\n<?xml version=\u201c1.0\u201d?>\n\n<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG\u201d\n\nxmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d>\n"]}}}},"<g id=\u201c>\n\n","<\/g>","<\/svg>",{"@attributes":{"id":"p-0439","num":"0906"},"figref":"FIG. 18"},"<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c.\/SVGdSVG.dtd\u201d>","<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG11\u201d","xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d height=\u201c450px\u201d width=\u201c744px\u201d","onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg 11\/button.js\u201d\/>","<!-- Adding Template -->","id=\u201ctemplate\u201d>\n\n","<\/g>","<!-- adding controls -->","<dsvg:radioButton xlink:href=\u201cdsvg11\/skinRadioButton_Default.svg#skinRadioButton\u201d autoScale=\u201ctrue\u201d group=\u201cdefault\u201d height=\u201c14\u201d width=\u201c14\u201d y=\u201c70\u201d x=\u201c50\u201d label=\u201cDefault radio button 1: (default attributes)\u201d id=\u201cdefault1\u201d\/>","<rect height=\u201c18\u201d width=\u201c18\u201d y=\u201c68\u201d x=\u201c48\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crect_default\u201d\/>","<dsvg:radioButton xlink:href=\u201cdsvg11\/skinRadioButton_Default.svg#skinRadioButton\u201d autoScale=\u201ctrue\u201d group=\u201cdefault\u201d height=\u201c14\u201d width=\u201c14\u201d y=\u201c90\u201d x=\u201c50\u201d label=\u201cDefault radio button 2: (default attributes)\u201d id=\u201cdefault2\u201d\/>","<dsvg:radioButton xlink:href=\u201cdsvg11\/skinRadioButton_Default.svg#skinRadioButton\u201d autoScale=\u201ctrue\u201d group=\u201csmallGroup\u201d height=\u201c10\u201d width=\u201c10\u201d y=\u201c150\u201d x=\u201c50\u201d label=\u201cSmall radio button: (h=10, w=10, group=smallGroup)\u201d id=\u201cdsvgUniqueID2\u201d\/>","<rect height=\u201c14\u201d width=\u201c14\u201d y=\u201c148\u201d x=\u201c48\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crect_small\u201d\/>","<dsvg:radioButton xlink:href=\u201cdsvg11\/skinRadioButton_Default.svg#skinRadioButton\u201d autoScale=\u201ctrue\u201d group=\u201clargeGroup\u201d height=\u201c25\u201d width=\u201c25\u201d y=\u201c230\u201d x=\u201c50\u201d label=\u201cLarge radio button: (h=25, w=25, group=largeGroup)\u201d id=\u201cdsvgUniqueID3\u201d\/>","<rect height=\u201c29\u201d width=\u201c29\u201d y=\u201c228\u201d x=\u201c48\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crect_large\u201d\/>","<\/svg>","The \u2018scrollbar\u2019 element","The \u2018scrollbar\u2019 element defines the vertical and horizontal scrollbars to be associated with its parent, usually a document or other UI container element, such as a <window> or <frame>.","Attribute definitions:","bars=\u201c(both | horizontal | vertical | none)\u201d",{"@attributes":{"id":"p-0456","num":"0000"},"ul":{"@attributes":{"id":"ul0184","list-style":"none"},"li":{"@attributes":{"id":"ul0184-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0185","list-style":"none"},"li":"Specifies whether a horizontal scrollbar (at the bottom), a vertical scrollbar (on the right) or both should appear when required.\n\nThe \u2018slider\u2019 element\n"}}}},"The \u2018slider\u2019 element defines a slider control, used to select a value from a range of allowed values by dragging its \u2018thumb\u2019 along its track.",{"@attributes":{"id":"p-0458","num":"0937"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ENTITY % sliderExt \u201c \u201d >"]},{"entry":[{},"<!ELEMENT dsvg:slider (dsvg:state|%behaviors;)* >"]},{"entry":[{},"<!ATTLIST dsvg:slider"]},{"entry":[{},"%stdDSVGAttrs;"]},{"entry":[{},"%stdUIAttrs;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"min","%Number;","#IMPLIED"]},{"entry":[{},"max","%Number;","#IMPLIED"]},{"entry":[{},"value","%Number;","#IMPLIED"]},{"entry":[{},"increment","%Number;","#IMPLIED"]},{"entry":[{},"pageIncrement","%Number;","#IMPLIED"]},{"entry":[{},"ticksMajor","%Number;","#IMPLIED"]},{"entry":[{},"ticksMinor","%Number;","#IMPLIED"]},{"entry":[{},"continuousCallback","%Boolean;","\u2018false\u2019 >"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":[{},{}]},"The minimum value of the slider.","max=\u201c<number>\u201d","The maximum value of the slider.","value=\u2018<string>\u2019",{"@attributes":{"id":"p-0461","num":"0000"},"ul":{"@attributes":{"id":"ul0186","list-style":"none"},"li":{"@attributes":{"id":"ul0186-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0187","list-style":"none"},"li":["The initial value of the slider. As the thumb is dragged, this attribute is automatically updated to match. If this attribute is modified, the displayed value is updated to match.\n\nincrement=\u201c<number>\u201d\n","The allowed values that the slider can create, i.e. only \u2018min\u2019+multiples of \u2018increment\u2019 are allowed.\n\npageIncrement=\u201c<number>\u201d\n","The amount that the thumb should move, in whatever units the slider represents (i.e. not in pixels), when clicking to the left or right of it. If defined as zero, or not defined at all, the thumb will snap to wherever the user clicks.\n\nticksMajor=\u201c<number>\u201d\n","The interval at which major tick marks (whose appearance is defined in the skin) are displayed, in whatever units the slider represents.\n\nticksMinor=\u201c<number>\u201d\n","The interval at which minor tick marks (whose appearance is defined in the skin) are displayed, in whatever units the slider represents.\n\nrotate=\u201c<number>\u201d\n","The rotation angle of the slider, in degrees clockwise. When provided, the slider will rotate but the label will remain unchanged and the tick mark labels will move appropriately but will remain unrotated. The top-left corner of the bounding box of the rotated slider, not including the label and tick mark labels, will be positioned at the specified (x, y) coordinates.","If the attribute is not specified, the default is 0.\n\ncontinuousCallback=\u201c(true | false)\u201d\n","Specifies whether the slider's associated behaviors should be executed whenever the thumb has been dragged (true) or whenever the thumb has been dragged and released (i.e. the user has let go of the mouse button).\n\nSkin template:\n\n<?xml version=\u201c1.0\u201d?>\n\n<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG\u201d>\n"]}}}},"<g id=\u201c>\n\n","<\/g>","<g id=\u201cdown\u201d display=\u201cnone\u201d>\n\n","<\/g>","<\/svg>",{"@attributes":{"id":"p-0466","num":"0980"},"figref":"FIG. 19"},"<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c.\/SVGdSVG.dtd\u201d>","<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG11\u201d","xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d height=\u201c450px\u201d width=\u201c744px\u201d","onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/slider.js\u201d\/>","<!-- Adding Template -->","<g id=\u201ctemplate\u201d>\n\n","<\/g>","<!-- adding controls -->","<dsvg:slider selected=\u201cfalse\u201d continuousCallback=\u201ctrue\u201d xlink:href=\u201cdsvg11\/skinSlider_Default.svg#skinSlider\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d ticksMinor=\u201c5\u201d ticksMajor=\u201c25\u201d rotate=\u201c0\u201d pageIncrement=\u201c0\u201d increment=\u201c5\u201d value=\u201c50\u201d max=\u201c100\u201d min=\u201c0\u201d height=\u201c19\u201d width=\u201c200.5\u201d y=\u201c70\u201d x=\u201c20\u201d label=\u201cDefault slider: (default attributes)\u201d id=\u201cdefault\u201d\/>","<dsvg:slider selected=\u201cfalse\u201d continuousCallback=\u201ctrue\u201d xlink:href=\u201cdsvg11\/skinSlider_Default.svg#skinSlider\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d ticksMinor=\u201c0.05\u201d ticksMajor=\u201c0.25\u201d rotate=\u201c0\u201d pageIncrement=\u201c0\u201d increment=\u201c0.05\u201d value=\u201c0.5\u201d max=\u201c1\u201d min=\u201c0\u201d height=\u201c30\u201d width=\u201c100\u201d y=\u201c135\u201d x=\u201c20\u201d label=\u201cSmall slider: (h=30, w=100)\u201d id=\u201csmall\u201d\/>","<rect height=\u201c30\u201d width=\u201c100\u201d y=\u201c135\u201d x=\u201c20\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201csmall1\u201d\/>","<dsvg:slider selected=\u201cfalse\u201d continuousCallback=\u201ctrue\u201d xlink:href=\u201cdsvg11\/skinSlider_Default.svg#skinSlider\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d ticksMinor=\u201c0.05\u201d ticksMajor=\u201c0.25\u201d rotate=\u201c0\u201d pageIncrement=\u201c0\u201d increment=\u201c0.05\u201d value=\u201c0.5\u201d max=\u201c1\u201d min=\u201c0\u201d height=\u201c70\u201d width=\u201c300\u201d y=\u201c225\u201d x=\u201c20\u201d label=\u201cLarge slider: (h=30, w=300)\u201d id=\u201clarge\u201d\/>","<rect height=\u201c70\u201d width=\u201c300\u201d y=\u201c225\u201d x=\u201c20\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201clarge1\u201d\/>","<dsvg:slider selected=\u201cfalse\u201d continuousCallback=\u201ctrue\u201d xlink:href=\u201cdsvg11\/skinSlider_Default.svg#skinSlider\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d ticksMinor=\u201c0.05\u201d ticksMajor=\u201c0.25\u201d rotate=\u201c0\u201d pageIncrement=\u201c0\u201d increment=\u201c0.05\u201d value=\u201c0.5\u201d max=\u201c1\u201d min=\u201c0\u201d height=\u201c30\u201d width=\u201c200\u201d y=\u201c70\u201d x=\u201c350\u201d label=\u201crotate=0, h=30, w=200\u201d id=\u201crotated0\u201d\/>","<rect height=\u201c30\u201d width=\u201c200\u201d y=\u201c70\u201d x=\u201c350\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crotated_a\u201d\/>","<dsvg:slider selected=\u201cfalse\u201d continuousCallback=\u201ctrue\u201d xlink:href=\u201cdsvg11\/skinSlider_Default.svg#skinSlider\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d ticksMinor=\u201c0.05\u201d ticksMajor=\u201c0.25\u201d rotate=\u201c15\u201d pageIncrement=\u201c0\u201d increment=\u201c0.05\u201d value=\u201c0.5\u201d max=\u201c1\u201d min=\u201c0\u201d height=\u201c30\u201d width=\u201c200\u201d y=\u201c225\u201d x=\u201c350\u201d label=\u201crotate=15, h=30, w=200\u201d id=\u201crotated15\u201d\/>","<rect height=\u201c30\u201d width=\u201c200\u201d y=\u201c228\u201d x=\u201c354\u201d transform=\u201crotate(15 365 240)\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crotated\u201d\/>","<rect height=\u201c81\u201d width=\u201c201\u201d y=\u201c225\u201d x=\u201c350\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crotated_b\u201d\/>","<dsvg:slider selected=\u201cfalse\u201d continuousCallback=\u201ctrue\u201d xlink:href=\u201cdsvg11\/skinSlider_Default.svg#skinSlider\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d ticksMinor=\u201c0.05\u201d ticksMajor=\u201c0.25\u201d rotate=\u201c180\u201d pageIncrement=\u201c0\u201d increment=\u201c0.05\u201d value=\u201c0.5\u201d max=\u201c1\u201d min=\u201c0\u201d height=\u201c30\u201d width=\u201c200\u201d y=\u201c150\u201d x=\u201c350\u201d id=\u201crotated180\u201d\/>","<rect height=\u201c30\u201d width=\u201c200\u201d y=\u201c150\u201d x=\u201c350\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crotated_c\u201d\/>","<dsvg:slider selected=\u201cfalse\u201d continuousCallback=\u201ctrue\u201d xlink:href=\u201cdsvg11\/skinSlider_Default.svg#skinSlider\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d ticksMinor=\u201c0.05\u201d ticksMajor=\u201c0.25\u201d rotate=\u201c90\u201d pageIncrement=\u201c0\u201d increment=\u201c0.05\u201d value=\u201c0.5\u201d max=\u201c1\u201d min=\u201c0\u201d height=\u201c30\u201d width=\u201c235\u201d y=\u201c70\u201d x=\u201c595\u201d label=\u201crotate=90\u201d id=\u201crotated90\u201d\/>","<rect height=\u201c235\u201d width=\u201c30\u201d y=\u201c70\u201d x=\u201c595\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crotated_d\u201d\/>","<dsvg:slider selected=\u201cfalse\u201d continuousCallback=\u201ctrue\u201d xlink:href=\u201cdsvg11\/skinSlider_Default.svg#skinSlider\u201d autoScale=\u201ctrue\u201d disabled=\u201cfalse\u201d ticksMinor=\u201c0.05\u201d ticksMajor=\u201c0.25\u201d rotate=\u201c270\u201d pageIncrement=\u201c0\u201d increment=\u201c0.05\u201d value=\u201c0.5\u201d max=\u201c1\u201d min=\u201c0\u201d height=\u201c30\u201d width=\u201c235\u201d y=\u201c70\u201d x=\u201c675\u201d label=\u201crotate=270\u201d id=\u201crotated270\u201d\/>","<rect height=\u201c235\u201d width=\u201c30\u201d y=\u201c70\u201d x=\u201c675\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201crotated_e\u201d\/>","<text y=\u201c130\u201d x=\u201c350\u201d id=\u201ctext180\u201d>rotate=180, h=30, w=200","<\/text>","<\/svg>","The \u2018spinBox\u2019 element","The \u2018spinBox\u2019 element defines a spinBox control, used to select a value from a range of allowed values by pressing the \u2018up\u2019 or \u2018down\u2019 buttons, or by entering numbers directly in its textBox component.",{"@attributes":{"id":"p-0494","num":"1020"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<!ENTITY % spinBoxExt \u201c \u201d >"]},{"entry":[{},"<!ELEMENT dsvg:spinBox (dsvg:state|%behaviors;)* >"]},{"entry":[{},"<!ATTLIST dsvg:spinBox"]},{"entry":[{},"%stdDSVGAttrs;"]},{"entry":[{},"%stdUIAttrs;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"min","%Integer;","#IMPLIED"]},{"entry":[{},"max","%Integer;","#IMPLIED"]},{"entry":[{},"value","%Integer;","#IMPLIED"]},{"entry":[{},"increment","%Integer;","#IMPLIED >"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":[{},{}]},"The minimum value of the spinBox.","max=\u201c<integer>\u201d","The maximum value of the spinBox.","value=\u2018<string>\u2019",{"@attributes":{"id":"p-0497","num":"0000"},"ul":{"@attributes":{"id":"ul0204","list-style":"none"},"li":{"@attributes":{"id":"ul0204-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0205","list-style":"none"},"li":["The initial value of the spinBox. As the displayed value is changed via the buttons or textBox, this attribute is automatically updated to match. If this attribute is modified, the displayed value is updated to match.\n\nincrement=\u201c<integer>\u201d\n","The allowed values that the spinBox can create, i.e. only \u2018min\u2019+multiples of \u2018increment\u2019 are allowed.\n\nSkin template:\n\n<?xml version=\u201c1.0\u201d?>\n","<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG\u201d xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d><g id=\u201c \u201d><use id=\u201cTextBoxSkin\u201d xlink:href=\u201c \u201d x=\u201c \u201d y=\u201c \u201d\/><use id=\u201cButtonSkinUp\u201d xlink:href=\u201c \u201d x=\u201c \u201d y=\u201c \u201d\/><use id=\u201cButtonSkinDown\u201d xlink:href=\u201c \u201d x=\u201c \u201d y=\u201c \u201d\/><g id=\u201clabel\u201d><text x=\u201c0\u201d y=\u201c\u22126\u201d><\/text>","<\/g>"]}}}},"<\/g>","<\/svg>",{"@attributes":{"id":"p-0499","num":"1028"},"figref":"FIG. 20"},"<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c.\/SVGdSVG.dtd\u201d>","<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG11\u201d xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d height=\u201c450px\u201d width=\u201c744px\u201d onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/spinBox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg 11\/textbox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/button.js\u201d\/>","<!-- Adding Template -->","<g id=\u201ctemplate\u201d>\n\n","<\/g>","<!-- adding controls -->","<dsvg:spinBox xlink:href=\u201cdsvg11\/skinSpinBox_Composite.svg#skinSpinBox\u201d autoScale=\u201ctrue\u201d increment=\u201c1\u201d value=\u201c1\u201d max=\u201c10\u201d min=\u201c0\u201d height=\u201c18\u201d width=\u201c118\u201d y=\u201c70\u201d x=\u201c50\u201d label=\u201cDefault spin box: (default attributes)\u201d id=\u201cdefault_spin\u201d\/>","<rect height=\u201c22\u201d width=\u201c122\u201d y=\u201c68\u201d x=\u201c48\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201cdefault_rect\u201d\/>","<dsvg: spinBox xlink:href=\u201cdsvg11\/skinSpinBox_Composite.svg#skinSpinBox\u201d autoScale=\u201ctrue\u201d increment=\u201c1\u201d value=\u201c\u22125\u201d max=\u201c0\u201d min=\u201c\u221210\u201d height=\u201c15\u201d width=\u201c40\u201d y=\u201c150\u201d x=\u201c50\u201d label=\u201cSmall spin box: (h=15, w=40, min=\u221210, max=0, value=\u22125, increment=1)\u201d id=\u201csmall_spin\u201d\/>","<rect height=\u201c19\u201d width=\u201c44\u201d y=\u201c148\u201d x=\u201c48\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201csmall_rect\u201d\/>","<dsvg:spinBox xlink:href=\u201cdsvg11\/skinSpinBox_Composite.svg#skinSpinBox\u201d autoScale=\u201ctrue\u201d increment=\u201c10\u201d value=\u201c0\u201d max=\u201c100\u201d min=\u201c\u2212100\u201d height=\u201c36\u201d width=\u201c236\u201d y=\u201c230\u201d x=\u201c50\u201d label=\u201cLarge spin box: (h=36, w=236, min=\u2212100, max=100, value=0, increment=10)\u201d id=\u201clarge_spin\u201d\/>","<rect height=\u201c40\u201d width=\u201c240\u201d y=\u201c228\u201d x=\u201c48\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201clarge_rect\u201d\/>","<\/svg>","The \u2018state\u2019 element","The \u2018state\u2019 element defines an alternate skin to be available for the parent UI control to use to override the appearance of any of its states. It must be a child of a UI control element.",{"@attributes":{"id":"p-0517","num":"1056"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<!ENTITY % stateExt \u201c \u201d >"},{"entry":"<!ELEMENT dsvg:state EMPTY >"},{"entry":"<!ATTLIST dsvg:state"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["id","ID","#IMPLIED"]},{"entry":["xmlns:xlink","CDATA","#FIXED \u2018http:\/\/www.w3.org\/1999\/xlink\u2019"]},{"entry":["xlink:href","%URI;","#IMPLIED"]},{"entry":["type","%State;","#IMPLIED >"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":[{},{}]},"Standard XML attribute for assigning a unique name to an element.","xlink:href=\u201c<uri>\u201d",{"@attributes":{"id":"p-0519","num":"0000"},"ul":{"@attributes":{"id":"ul0208","list-style":"none"},"li":{"@attributes":{"id":"ul0208-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0209","list-style":"none"},"li":["A reference to the skin's parent element, stored either internally in the <defs> block, or in an external file.","If the attribute is not specified, the UI control's skin is not overridden.\n\nstate=\u201c(up | down | hover | focus | disabled)\u201d\n"]}}}},"The state whose appearance the referenced skin will be used to override.",{"@attributes":{"id":"p-0521","num":"1061"},"figref":"FIG. 21"},"<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c.\/SVGdSVG.dtd\u201d>","<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG\u201d xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d height=\u201c450px\u201d width=\u201c780px\u201d onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 780 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/button.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/setAttribute.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg\/alert.js\u201d\/>","<!--adding template-->","<g id=\u201ctemplate\u201d>\n\n","<\/g>","<!-- adding controls -->","<defs>\n\n","The \u2018textBox\u2019 element defines a text input field.",{"@attributes":{"id":"p-0534","num":"1201"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<!ENTITY % textBoxExt \u201c \u201d >"},{"entry":"<!ELEMENT dsvg:textBox (dsvg:state|%behaviors;)* >"},{"entry":"<!ATTLIST dsvg:textBox"},{"entry":"%stdDSVGAttrs;"},{"entry":"%stdUIAttrs;"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["lines","%Integer;","#IMPLIED"]},{"entry":["maxLines","%Integer;","#IMPLIED"]},{"entry":["value","%Integer;","#IMPLIED"]},{"entry":["maxLength","%Integer;","#IMPLIED"]},{"entry":["editable","%Boolean;","\u2018true\u2019"]},{"entry":["wrap","%Boolean;","\u2018false\u2019"]},{"entry":["secret","%Boolean;","\u2018false\u2019 >"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":[{},{}],"ul":{"@attributes":{"id":"ul0248","list-style":"none"},"li":{"@attributes":{"id":"ul0248-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0249","list-style":"none"},"li":["The number of lines that will be visible in the text area. The available space will be divided up into this many lines for display.\n\nmaxLines=\u201c<integer>\u201d\n","The maximum number of lines the textBox will hold. If greater than \u2018lines\u2019, the textBox will scroll vertically automatically while typing or using manually with the up and down arrow keys.\n\nvalue=\u2018<string>\u2019\n","The initial value (i.e. text data) of the textBox. As the displayed content is modified by the user, this attribute is automatically updated to match. If this attribute is modified, the displayed content is updated to match.\n\nmaxLength=\u201c<integer>\u201d\n"]}}}},"The maximum number of characters the textBox will hold. Once this limit is reached, the user will not be able to enter any more characters.","editable=(true | false)","Specifies whether the textBox is editable or not.","If this attribute is not provided, the default value is \u2018true\u2019.","wrap=(true | false)","Specifies whether the contents of the textBox should automatically wrap or not.","If this attribute is not provided, the default value is \u2018false\u2019.","secret=(true | false)",{"@attributes":{"id":"p-0540","num":"0000"},"ul":{"@attributes":{"id":"ul0250","list-style":"none"},"li":{"@attributes":{"id":"ul0250-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0251","list-style":"none"},"li":["Specifies whether each character in the contents of the textBox should be displayed by an asterisk ('*') or not.","If this attribute is not provided, the default value is \u2018false\u2019.\n\nSkin template:\n\n<?xml version=\u201c1.0\u201d?>\n\n<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG\u201d><g id=\u201cskinTextBox\u201d><g id=\u201cup\u201d display=\u201call\u201d\/><g id=\u201chover\u201d display=\u201cnone\u201d\/><g id=\u201cdown\u201d display=\u201cnone\u201d\/><g id=\u201cdisabled\u201d display=\u201cnone\u201d\/>\n","<g id=\u201clabel\u201d><text x=\u201c \u201d y=\u201c \u201d><\/text><\/g><clipPath id=\u201cskinTextBox_textView\u201c>\n        \n        ","<\/g><\/svg>"]}}}},{"@attributes":{"id":"p-0541","num":"1218"},"figref":"FIG. 22"},"<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c.\/SVGdSVG.dtd\u201d><svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG11\u201d xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d height=\u201c450px\u201d width=\u201c744px\u201d onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/textbox.js\u201d\/>","<!-- Adding Template -->","<g id=\u201ctemplate\u201d>\n\n","<\/g>","<!-- adding controls -->","<dsvg:textBox xlink:href=\u201cdsvg11\/skinTextbox_Default.svg#skinTextBox\u201d autoScale=\u201ctrue\u201d height=\u201c36\u201d width=\u201c228\u201d y=\u201c70\u201d x=\u201c50\u201d label=\u201cDefault text box: (default attributes)\u201d id=\u201cdefault_textbox1\u201d\/>","<rect height=\u201c40\u201d width=\u201c232\u201d y=\u201c68\u201d x=\u201c48\u201d opacity=\u201c0.5\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201cdefault1\u201d\/>","<dsvg:textBox xlink:href=\u201cdsvg11\/skinTextbox_Default.svg#skinTextBox\u201d autoScale=\u201ctrue\u201d editable=\u201cfalse\u201d value=\u201cRead Only!\u201d height=\u201c18\u201d width=\u201c80\u201d y=\u201c150\u201d x=\u201c50\u201d label=\u201cSmall text box: (h=18 w=80, editable=false)\u201d id=\u201csmall_textbox\u201d\/>","<rect height=\u201c22\u201d width=\u201c84\u201d y=\u201c148\u201d x=\u201c48\u201d opacity=\u201c0.5\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201csmall1\u201d\/>","<dsvg:textBox xlink:href=\u201cdsvg 11\/skinTextbox_Default.svg#skinTextBox\u201d autoScale=\u201ctrue\u201d lines=\u201c3\u201d height=\u201c63\u201d width=\u201c346\u201d y=\u201c230\u201d x=\u201c50\u201d label=\u201cLarge text box: (h=63, w=346, lines=3)\u201d id=\u201clarge_textbox\u201d\/>","<rect height=\u201c67\u201d width=\u201c350\u201d y=\u201c228\u201d x=\u201c48\u201d opacity=\u201c0.5\u201d stroke=\u201cred\u201d fill=\u201cnone\u201d id=\u201clarge1\u201d\/>","<\/svg>","The \u2018toolBar\u2019 element","The \u2018toolBar\u2019 element defines a container for buttons.","Attribute definitions:","%standard attributes %","The standard attributes, such as id, label, etc.","selectedID=\u201cname\u201d","The value of the currently selected child \u2018button\u2019 element's \u2018id\u2019 attribute.","hideGrippy=\u201c(true | false)\u201d","Specifies whether to hide the grippy (true) or not (false).","The \u2018window\u2019 element","The \u2018window\u2019 element defines a window.","<!ENTITY % windowExt\u201c \u201d>","<!ELEMENT dsvg:window (%UIControls;|%behaviors;|desc|title|metadata|defs|path|text|rect|circle|ellipse|line|polyline|polygon|use|image|svg|g|view|switch|a|altGlyphDef|script|style|symbol|marker|clipPath|mask|linearGradient|radialGradient|pattern|filter|cursor|font|animate|set|animateMotion|animateColor|animateTransform|color-profile|font-face)*>\n\n<!ATTLIST dsvg:window\n\n%stdDSVGAttrs;\n\n%stdUIAttrs; >\n\nSkin template:\n\n<?xml version=\u201c1.0\u201d?>\n\n<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG\u201d>\n","<g id=\u201cskinWindow\u201d>\n\n","<\/g>","<g id=\u201cWindowBase\u201d>\n\n",{"@attributes":{"id":"p-0565","num":"1268"},"figref":"FIG. 23"},"<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c.\/SVGdSVG.dtd\u201d><svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG11\u201d xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d height=\u201c450px\u201d width=\u201c744px\u201d onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/window.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/windowBase.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/button.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/scrollbar.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/slider.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/attributeDrag.js\u201d\/>","<!-- Adding Template -->","<g id=\u201ctemplate\u201d>\n\n","<\/g>","<!-- adding controls -->","<dsvg:window xlink:href=\u201cdsvg11\/skinWindow_Default.svg#skinWindow\u201d autoScale=\u201ctrue\u201d height=\u201c200\u201d width=\u201c200\u201d y=\u201c70\u201d x=\u201c50\u201d label=\u201cSample window\u201d id=\u201cdsvgUniqueID0\u201d>\n\n","<\/dsvg:window>","<\/svg>","UI Control Attributes","The following attributes can be applied to any element, to create a context-sensitive UI control, which may be event-triggered.",{"@attributes":{"id":"p-0582","num":"1296"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<!ENTITY % stdDSVGAttrs\u2033"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"dsvg:contextMenu","ID","#IMPLIED"]},{"entry":[{},"dsvg:share","ID","#IMPLIED"]},{"entry":[{},"dsvg:tipDelay","%Integer","\u201c50\u201d"]},{"entry":[{},"dsvg:tipTrack","%Boolean","\u201cfalse\u201d"]},{"entry":[{},"dsvg:title","%Text","#IMPLIED"]},{"entry":[{},"dsvg:toolTip","ID","#IMPLIED >"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"ul":{"@attributes":{"id":"ul0267","list-style":"none"},"li":{"@attributes":{"id":"ul0267-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0268","list-style":"none"},"li":["Specifies the \u2018id\u2019 attribute of an existing \u2018contextMenu\u2019 element. The contextMenu displays with its top-left corner at the position of the mouse pointer when the user right-clicks on the element.\n\nshare=\u201cname\u201d\n","Specifies the \u2018id\u2019 attribute of an existing \u2018share\u2019 element, causing the share element's children to be treated as children of this element as well. The children are not copied\u2014they are instead used, or shared, by multiple elements.\n\ntipDelay=\u201c<integer>\u201d\n","The time, in milliseconds, between when the mouse cursor begins to hover over an element and when the toolTip actually displays.","If this attribute is not provided, its default is 50.","If the \u2018title\u2019 and \u2018toolTip\u2019 attributes do not exist for this element or one of its ancestors, this attribute is ignored and no toolTip will appear.\n\ntipTrack=\u201c(true | false)\u201d\n","Specifies whether the toolTip should move to follow the mouse cursor position (true) or stay fixed in place at the location it first appears (false)."]}}}},"If this attribute is not provided, its default is \u201cfalse\u201d.\n\n","The \u2018contextMenu\u2019 attribute specifies the \u2018id\u2019 attribute of an existing \u2018contextMenu\u2019 element. The contextMenu displays with its top-left corner at the position of the mouse pointer when the user right-clicks on the element.  shows a contextMenu associated to a circle, with no associated behaviors. In this example, the default context menu is displayed with a right-click within the circle. The lists consists of items which can be added directly as child elements of context menu. The context menu is associated with the circle by adding a contextMenu attribute to the circle which references the context menu. The example is provided below:","<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c.\/SVGdSVG.dtd\u201d>","<svg xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG11\u201d height=\u201c450px\u201d width=\u201c744px\u201d onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/contextMenu.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/attributeContextMenu.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg 11\/listbox.js\u201d\/>","<!--Begin Template-->","<g id=\u201ctemplate\u201d>\n\n","<g>","<!--adding the controls-->","<dsvg:contextMenu xlink:href=\u201cdsvg11\/skinContextMenu_Default.svg#skinContextMenu\u201d autoScale=\u201ctrue\u201d label=\u201cRed Circle Menu\u201d id=\u201ccontextMenu1\u201d>\n\n","<\/dsvg:contextMenu>","<circle dsvg:contextMenu=\u201ccontextMenu1\u201d r=\u201c50\u201d cy=\u201c130\u201d cx=\u201c130\u201d stroke-width=\u201c5\u201d stroke=\u201cdarkblue\u201d fill=\u201c#5f86B1\u201d id=\u201ccircle_blue\u201d\/>","<\/svg>","The \u2018share\u2019 attribute","The \u2018share\u2019 attribute specifies the \u2018id\u2019 attribute of an existing \u2018share\u2019 element, causing the child elements of the \u2018share\u2019 element to be treated as children of this element as well. The children are not copied\u2014they are instead used, or shared, by multiple elements.  shows a listBox and a comboBox, both sharing the same \u2018item\u2019 elements as their children. The share element is used to share a group of items with multiple elements. The document in this example shares the same set of items with the combo box and list box. Associate a share element with other elements by adding a share attribute to the element that references the share element. The example is provided below:","<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c.\/SVGdSVG.dtd\u201d>","<svg xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG11\u201d xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d height=\u201c450px\u201d width=\u201c744px\u201d onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 744 450\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/listbox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/button.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/contextMenu.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/scrollbar.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/slider.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/combobox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/textbox.js\u201d\/>","<!-- Adding Template -->","<g id=\u201ctemplate\u201d>\n\n","<\/g>","<!-- adding controls -->","<dsvg:share id=\u201cshare1\u201d>\n\n","<\/dsvg:share>","<dsvg:listBox dsvg:share=\u201cshare1\u201d xlink:href=\u201cdsvg11\/skinListBox_Composite.svg#skinListBox\u201d autoScale=\u201ctrue\u201d height=\u201c60\u201d width=\u201c198\u201d y=\u201c70\u201d x=\u201c50\u201d label=\u201cList box: (default attributes with the added attribute dsvg:share)\u201d id=\u201clistbox1\u201d\/>","<dsvg:comboBox dsvg:share=\u201cshare1\u201d xlink:href=\u201cdsvg11\/skinComboBox_Composite.svg#skinComboBox\u201d autoScale=\u201ctrue\u201d height=\u201c17\u201d width=\u201c217\u201d y=\u201c220\u201d x=\u201c50\u201d label=\u201cCombo box: (default attributes with the added attribute dsvg:share)\u201d id=\u201ccombobox1\u201d\/>","<\/svg>","The \u2018toolTip\u2019 attribute","The \u2018toolTip\u2019 attribute refers to the toolTip skin's parent element, stored either internally in the <defs> block, or in an external file. With this attribute on an element, that element and any of its descendents will display the value of their \u2018dsvg:title\u2019 attribute within the toolTip defined in the specified skin, whenever the user hovers over the element.  shows three circles with toolTips\u2014one follows the mouse, one has a delay and follows the mouse, and one does neither. The toolTip attribute is applied to elements to enable the ability to display tooltips. Tip tracking and Tip Delay are added as separate attributes if desired. The example is provided below:","<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d?>","<!DOCTYPE svg SYSTEM \u201c.\/SVGdSVG.dtd\u201d>","<svg xmlns:xlink=\u201chttp:\/\/www.w3.org\/1999\/xlink\u201d xmlns:dsvg=\u201chttp:\/\/www.corel.com\/schemas\/2002\/dSVG11\u201d height=\u201c420px\u201d width=\u201c760px\u201d onload=\u201cinit(evt)\u201d viewBox=\u201c0 0 760 420\u201d>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/dSVG.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/baseUI.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/constraint.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/button.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/loadXML.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/attributeTooltip.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/combobox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/textbox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/contextMenu.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/slider.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/listBox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/scrollbar.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg 11\/listview.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/spinBox.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/window.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/windowBase.js\u201d\/>","<script type=\u201ctext\/ecmascript\u201d xlink:href=\u201cdsvg11\/attributeDrag.js\u201d\/>","<!-- template -->","<rect height=\u201c40\u201d width=\u201c744\u201d y=\u201c0\u201d x=\u201c0\u201d fill=\u201c#5f86B1\u201d id=\u201ctitle_rect\u201d\/>","<text y=\u201c25\u201d x=\u201c20\u201d font-weight=\u201cbold\u201d font-size=\u201c18\u201d fill=\u201cwhite\u201d id=\u201ctext1\u201d>dSVG sample: toolTip (added attribute)<","<\/text>","<text y=\u201c365\u201d x=\u201c20\u201d font-size=\u201c12\u201d id=\u201ccontent\u201d>Content of file: dsvg:toolTip","<\/text>","<text y=\u201c380\u201d x=\u201c20\u201d font-size=\u201c12\u201d id=\u201cexpected\u201d>The dsvg:toolTip attribute is applied to elements to enable the ability to display tooltips.","<\/text>","<text y=\u201c395\u201d x=\u201c20\u201d font-size=\u201c12\u201d id=\u201cdepend\u201d>Tip tracking and Tip Delay are added as separate attributes if desired.","<\/text>","<text y=\u201c60\u201d x=\u201c280\u201d font-size=\u201c10\u201d id=\u201ctextControls\u201d>mouseover any of the UI controls to display its tooltip.","<\/text>","<line y2=\u201c340\u201d x2=\u201c744\u201d y1=\u201c340\u201d x1=\u201c0\u201d stroke-width=\u201c2\u201d stroke=\u201c#5f86B1\u201d fill=\u201c#5f86B1\u201d id=\u201cbottom_line\u201d\/>","<line y2=\u201c40\u201d x2=\u201c270\u201d y1=\u201c340\u201d x1=\u201c270\u201d stroke-width=\u201c2\u201d stroke=\u201c#5f86B1\u201d fill=\u201c#5f86B1\u201d id=\u201cvert_line\u201d\/>","<!--adding attributes-->","<g dsvg:toolTip=\u201cdsvg11\/skinTooltip.svg#skinTooltip_traditional\u201d id=\u201ctoolTips\u201d>\n\n","<\/g>","<text y=\u201c120\u201d x=\u201c50\u201d font-size=\u201c10\u201d id=\u201cred_text\u201d>mouse over red circle, Tool Tip should appear.","<\/text>","<text y=\u201c220\u201d x=\u201c50\u201d font-size=\u201c10\u201d id=\u201cred_text2\u201d>Tool Tip w\/ Tip Tracking applied.","<\/text>","<text y=\u201c320\u201d x=\u201c50\u201d font-size=\u201c10\u201d id=\u201cred_text3\u201d>Tool Tip w\/ Tip Tracking and Tip Delay applied.","<\/text>","<g transform=\u201ctranslate(250, 20)\u201d dsvg:toolTip=\u201cdsvg 11\/skinTooltip.svg#skinTooltip_traditional\u201d>\n\n","<\/g>","<\/svg>","The \u2018tipDelay\u2019 attribute","The \u2018tipDelay\u2019 attribute specifies the time, in milliseconds, between when the mouse cursor begins to hover over an element and when the toolTip actually appears. If this attribute is not provided, its default is 50. If the \u2018title\u2019 and \u2018toolTip\u2019 attributes do not exist for this element or one of its ancestors, this attribute is ignored and no toolTip will appear.","The \u2018tipTrack\u2019 attribute","The \u2018tipTrack\u2019 attribute specifies whether the toolTip should move to follow the mouse cursor position (true) or stay fixed in place at the location it first appears (false). If this attribute is not provided, its default is \u201cfalse\u201d. If the \u2018title\u2019 and \u2018toolTip\u2019 attributes do not exist for this element or one of its ancestors, this attribute is ignored and no toolTip will appear.","The \u2018title\u2019 attribute","The \u2018title\u2019 attribute specifies the text to be displayed in the toolTip for this element. If this attribute is not provided, no toolTip will appear for this element. If the \u2018toolTip\u2019 attribute does not exist for this element or one of its ancestors, this attribute is ignored and no toolTip will appear.","Other attributes may be added such as:","nativeContextMenu=\u201cstring\u201d",{"@attributes":{"id":"p-0664","num":"0000"},"ul":{"@attributes":{"id":"ul0290","list-style":"none"},"li":{"@attributes":{"id":"ul0290-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0291","list-style":"none"},"li":"Specifies the \u2018id\u2019 of the <menu> element that should appear when the user right-clicks on the element containing this attribute. <menu> is an Adobe-specific markup for the Adobe SVG Viewer. Thus this attribute is only for use with the Adobe SVGViewer.\n\nOther Skin Templates 27 for UI Controls\n\nThe \u2018scrollBar\u2019 Skin Template\n\n<?xml version=\u201c1.0\u201d?>\n\n<svg>\n"}}}},"<g id=\u201cskinScrollBar\u201d>\n\n","<g>","<g id=\u201cButtonLeftSkin\u201d>\n\n","<\/g>","<g id=\u201cSliderSkin\u201d>\n\n","<\/g>","<g id=\u201cButtonRightSkin\u201d>\n\n","<\/g>","<g id=\u201cskinScrollBarSmall\u201d>\n\n","<\/g>","<g id=\u201cButtonLeftSkinSmall\u201c>\n\n","<\/g>","<g id=\u201cSliderSkinSmall\u201d>\n\n","<\/g>","<g id=\u201cButtonRightSkinSmall\u201d>\n\n","<\/g>","<\/svg>","Example \u2018scrollBar\u2019 Skin","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinScrollBar\u201d>\n\n","<\/g>","<g id=\u201cButtonLeftSkin\u201d>\n\n","<\/g>","<g id=\u201cSliderSkin\u201d>\n\n","<\/g>","<g id=\u201cButtonRightSkin\u201d>\n\n","<\/g>","<g id=\u201cskinScrollBarSmall\u201d>\n\n","<\/g>","<\/svg>","The \u2018toolTip\u2019 Skin Template","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinTooltip_name\u201d>\n\n","<\/g>","<\/svg>","Example \u2018toolTip\u2019 Skin","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinTooltip_annotation\u201d>\n\n","<\/g>","<g id=\u201cskinTooltip_traditional\u201d pointer-events=\u201cnone\u201d>\n\n","<\/g>","<g id=\u201cskinTooltip_special\u201d pointer-events=\u201cnone\u201d>\n\n","<\/g>","<\/svg>","Other Example Skins for UI Controls","skinButton_ComboBox.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinButton\u201d>\n\n","<\/g>","<\/svg>","skinButton_ListBox.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinListBox\u201d>\n\n","<g>","<\/svg>","skinButton_vpDown.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinButton\u201d>\n\n","<path fill=\u201c#CCCCCC\u201d d=\u201cM4 115 11 5-11-10 0z\u201c\/>","<path fill=\u201c#E5FFFF\u201d stroke=\u201c#0083C4\u201d d=\u201cM1 115 11 5-11-10 0z\u201c\/>\n\n","<path fill=\u201c#CCCCCC\u201d d=\u201cM4 115 11 5-11-10 0z\u201d\/>","<path fill=\u201c#EDAF0D\u201d stroke=\u201c#0083C4\u201d stroke-width=\u201c2\u201d d=\u201cM1 115 11 5-11-10 0z\u201d\/>\n\n","<path fill=\u201c#CCCCCC\u201d d=\u201cM4 115 11 5-11-100z\u201d\/>","<path fill=\u201c#E5FFFF\u201d stroke=\u201c#0083C4\u201d stroke-width=\u201c2\u201d d=\u201cM1 115 11 5-11-10 0z\u201d\/>\n\n","<\/g>","<\/svg>","skinButton_vpGeneric.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinButton\u201d>\n\n","<path fill=\u201c#CCCCCC\u201d d=\u201cM56 181-52 0 0-15 52 0 0 15z\u201d\/>","<path fill=\u201c#FFFFFF\u201d stroke=\u201c#0083C4\u201d d=\u201cM54 151-53 0 0-15 53 0 0 15z\u201d\/>\n\n","<path fill=\u201c#CCCCCC\u201d d=\u201cM56 181-52 0 0-15 52 0 0 15z\u201d\/>","<path fill=\u201c#EDAF0D\u201d stroke=\u201c#0083C4\u201d stroke-width=\u201c2\u201d d=\u201cM54 151-53 0 0-15 53 0 0 15z\u201d\/>","<\/g>\n\n","<path fill=\u201c#CCCCCC\u201d d=\u201cM56 181-52 0 0-15 52 0 0 15z\u201d\/>","<path fill=\u201c#FFFFFF\u201d stroke=\u201c#0083C4\u201d stroke-width=\u201c2\u201d d=\u201cM54 151-53 0 0-15 53 0 0 15z\u201d\/>\n\n","<\/g>","<\/svg>","skinButton_vpMonth.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinButton\u201d>\n\n","<rect fill=\u201c#B2E5E5\u201d x=\u201c0\u201d y=\u201c14\u201d width=\u201c40\u201d height=\u201c4\u201d\/>","<rect fill=\u201c#B2E5E5\u201d x=\u201c0\u201d y=\u201c0\u201d width=\u201c40\u201d height=\u201c4\u201d\/>","<rect fill=\u201c#FFFFFF\u201d fill-opacity=\u201c0\u201d x=\u201c0\u201d y=\u201c0\u201d width=\u201c40\u201d height=\u201c18\u201d\/>\n\n","<rect fill=\u201c#98B2E5\u201d x=\u201c0\u201d y=\u201c14\u201d width=\u201c40\u201d height=\u201c4\u201d\/>","<rect fill=\u201c#98B2E5\u201d x=\u201c0\u201d y=\u201c0\u201d width=\u201c40\u201d height=\u201c4\u201d\/>","<rect fill=\u201c#FFFFFF\u201d fill-opacity=\u201c0\u201d x=\u201c0\u201d y=\u201c0\u201d width=\u201c40\u201d height=\u201c18\u201d\/>\n\n","<rect fill=\u201c#98B2E5\u201d x=\u201c0\u201d y=\u201c14\u201d width=\u201c40\u201d height=\u201c4\u201d\/>","<rect fill=\u201c#98B2E5\u201d x=\u201c0\u201d y=\u201c0\u201d width=\u201c40\u201d height=\u201c4\u201d\/>","<rect fill=\u201c#FFFFFF\u201d fill-opacity=\u201c0\u201d x=\u201c0\u201d y=\u201c0\u201d width=\u201c40\u201d height=\u201c18\u201d\/>\n\n","<rect fill=\u201c#CCCCCC\u201d x=\u201c0\u201d y=\u201c14\u201d width=\u201c40\u201d height=\u201c4\u201d\/>","<rect fill=\u201c#CCCCCC\u201d x=\u201c0\u201d y=\u201c0\u201d width=\u201c40\u201d height=\u201c4\u201d\/>","<rect fill=\u201c#FFFFFF\u201d fill-opacity=\u201c0\u201d x=\u201c0\u201d y=\u201c0\u201d width=\u201c40\u201d height=\u201c18\u201d\/>\n\n","<\/g>","<\/svg>","skinButton_vpUp.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinButton\u201d>\n\n","<path fill=\u201c#CCCCCC\u201d d=\u201cM15 141-4-11-5 11 9 0z\u201d\/>","<path fill=\u201c#E5FFFF\u201d stroke=\u201c#0083C4\u201d d=\u201cM12 131-5-12-5 12 10 0z\u201d\/>\n\n","<path fill=\u201c#CCCCCC\u201d d=\u201cM15 141-4-11-5 11 9 0z\u201d\/>","<path fill=\u201c#EDAF0D\u201d stroke=\u201c#0083C4\u201d stroke-width=\u201c2\u201d d=\u201cM12 131-5-12-5 12 0z\u201d\/>\n\n","<path fill=\u201c#CCCCCC\u201d d=\u201cM15 141-4-11-5 11 9 0z\u201d\/>","<path fill=\u201c#E5FFFF\u201d stroke=\u201c#0083C4\u201d stroke-width=\u201c2\u201d d=\u201cM12 131-5-12-5 12 0z\u201d\/>\n\n","<\/g>","<\/svg>","skinButton_Windows.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinButton\u201d>\n\n","<g>","<\/svg>","skinCalendar.svg","<?xml version=\u201c1.0\u201d?>","<svg>\n\n","<\/g>","<g id=\u201cskinCalendarBack\u201d>\n\n","<g id=\u201ccalendarBack\u201d>\n\n","<!--<rect fill=\u201cnone\u201d x=\u201c9\u201d y=\u201c8\u201d width=\u201c287\u201d height=\u201c287\u201d\/>-->","<\/g>",{"@attributes":{"id":"p-0749","num":"0000"},"ul":{"@attributes":{"id":"ul0435","list-style":"none"},"li":{"@attributes":{"id":"ul0435-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0436","list-style":"none"},"li":["<\/g>","<g id=\u201cdown\u201d>"]}}}},"<use id=\u201cbackDown\u201d xlink:href=\u201c#calendarBack\u201d x=\u201c0\u201d y=\u201c0\u201d\/>\n\n","<use id=\u201cbackHover\u201d xlink:href=\u201c#calendarBack\u201d x=\u201c0\u201d y=\u201c0\u201d\/>\n\n","<use id=\u201cbackDisabled\u201d xlink:href=\u201c#calendarBack\u201d x=\u201c0\u201d y=\u201c0\u201d\/>\n\n","<text text-anchor=\u201cend\u201d x=\u201c240\u201d y=\u201c12\u201d fill=\u201c#FFFFFF\u201d font-weight=\u201cnormal\u201d font-size=\u201c11\u201d font-family=\u201cVerdana\u201d><\/text>\n\n","<\/g>","<g id=\u201cskinDaysButtons\u201d>\n\n","<text text-anchor=\u201cmiddle\u201d x=\u201c20\u201d y=\u201c23\u201d fill=\u201c#666666\u201d font-weight=\u201cnormal\u201d font-size=\u201c10\u201d font-family=\u201cVerdana\u201d><\/text>\n\n","<\/g>","<g id=\u201cskinDaysButtonsNonPaid\u201d>\n\n","<\/g>","<g id=\u201cskinDaysButtonsHalfDayNonPaid\u201d>\n\n","<\/g>","<g id=\u201cskinDaysButtonsHalfDayPaid\u201d>\n\n","<\/g>","<\/svg>","skinCheckbox_Default.svg","<?xml version=\u201c1.0\u201d standalone=\u201cno\u201d ?>","<svg>","<g id=\u201cskinCheckbox\u201d>\n\n","<\/g>","<\/svg>","skinComboBox_Composite.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinComboBox\u201d>\n\n","<\/g>","<\/svg>","skinComboBox_Default.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinComboBox\u201d>\n\n","<\/g>","<\/svg>","skinComboBox_Graphic.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinComboBox\u201d>\n\n","<\/g>","<\/svg>","skinComboBox_Graphic2.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinComboBox\u201d>\n\n","<\/g>","<\/svg>","skinContextMenu_Default.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinContextMenu\u201d>\n\n","<\/g>","<\/svg>","skinContextMenu_Default2.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinContextMenu\u201d>\n\n","<text x=\u201c3\u201d y=\u201c32\u201d id=\u201clabel\u201d><\/text>\n\n","<text x=\u201c3\u201d y=\u201c32\u201d id=\u201clabel\u201d><\/text>","<\/g>","<g id=\u201cskinContextMenu_middle_selected\u201d display=\u201cnone\u201d>",{"@attributes":{"id":"p-0779","num":"0000"},"ul":{"@attributes":{"id":"ul0516","list-style":"none"},"li":{"@attributes":{"id":"ul0516-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0517","list-style":"none"},"li":["<line x1=\u201c0\u201d y1=\u201c20\u201d x2=\u201c0\u201d y2=\u201c35\u201d style=\u201cstroke:#000000;stroke-width:1\u201d\/>","<line x1=\u201c150\u201d y1=\u201c20\u201d x2=\u201c150\u201d y2=\u201c35\u201d style=\u201cstroke:#000000;stroke-width:1\u201d\/>","<rect x=\u201c1\u201d y=\u201c20\u201d width=\u201c148\u201d height=\u201c14\u201d style=\u201cfill:#FF0000;stroke:#FFFFFF;stroke-width:1\u201d isback=\u201ctrue\u201d\/>"]}}}},"<text x=\u201c3\u201d y=\u201c32\u201d id=\u201clabel\u201d><\/text>","<\/g>",{"@attributes":{"id":"p-0781","num":"0000"},"ul":{"@attributes":{"id":"ul0518","list-style":"none"},"li":{"@attributes":{"id":"ul0518-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0519","list-style":"none"},"li":["<g id=\u201cskinContextMenu_bottom\u201d display=\u201call\u201d>\n        \n        ","<\/g>"]}}}},"<\/g>","<\/svg>","skinContextMenu_Graphic.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinContextMenu\u201d>\n\n","<text x=\u201c3\u201d y=\u201c21\u201d id=\u201clabel\u201d><\/text>\n\n","<text x=\u201c3\u201d y=\u201c21\u201d id=\u201clabel\u201d><\/text>","<\/g>","<g id=\u201cskinContextMenu_middle_selected\u201d display=\u201cnone\u201d>",{"@attributes":{"id":"p-0786","num":"0000"},"ul":{"@attributes":{"id":"ul0527","list-style":"none"},"li":{"@attributes":{"id":"ul0527-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0528","list-style":"none"},"li":["<line x1=\u201c0\u201d y1=\u201c3\u201d x2=\u201c0\u201d y2=\u201c18\u201d style=\u201cstroke:#000000;stroke-width:1\u201d\/>","<line x1=\u201c150\u201d y1=\u201c3\u201d x2=\u201c150\u201d y2=\u201c18\u201d style=\u201cstroke:#000000;stroke-width:1\u201d\/>","<rect x=\u201c1\u201d y=\u201c3\u201d width=\u201c148\u201d height=\u201c14\u201d style=\u201cfill:#FF0000;stroke:#FFFFFF;stroke-width:1\u201d isback=\u201ctrue\u201d\/>"]}}}},"<text x=\u201c3\u201d y=\u201c21\u201d id=\u201clabel\u201d><text>","<\/g>",{"@attributes":{"id":"p-0788","num":"0000"},"ul":{"@attributes":{"id":"ul0529","list-style":"none"},"li":{"@attributes":{"id":"ul0529-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0530","list-style":"none"},"li":["<g id=\u201cskinContextMenu_bottom\u201d display=\u201call\u201d><line x1=\u201c0\u201d y1=\u201c18\u201d x2=\u201c0\u201d y2=\u201c21\u201d style=\u201cstroke:#000000;stroke-width:1\u201d\/>\n        \n        ","<\/g>"]}}}},"<\/g>","<\/svg>","skinContextMenu_Graphic2.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinContextMenu\u201d>\n\n","<text x=\u201c3\u201d y=\u201c21\u201d id=\u201clabel\u201d><\/text>\n\n","<g id=\u201cskinContextMenu_middle_hover\u201d display=\u201cnone\u201d>\n\n","<text x=\u201c3\u201d y=\u201c21\u201d id=\u201clabel\u201d><\/text>","<g>","<g id=\u201cskinContextMenu_middle_selected\u201d display=\u201cnone\u201d>\n\n","<text x=\u201c3\u201d y=\u201c21\u201d id=\u201clabel\u201d><\/text>","<\/g>\n\n","<\/g>","<\/svg>","skinContextMenu_Graphic3.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinContextMenu\u201d>\n\n","<text x=\u201c3\u201d y=\u201c21\u201d id=\u201clabel\u201d><\/text>\n\n","<text x=\u201c3\u201d y=\u201c21\u201d id=\u201clabel\u201d><\/text>","<\/g>","<g id=\u201cskinContextMenu_middle_selected\u201d display=\u201cnone\u201d>\n\n","<text x=\u201c3\u201d y=\u201c21\u201d id=\u201clabel\u201d><\/text>","<\/g>\n\n","<\/g>","<\/svg>","skinContextMenu_ListBox.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinContextMenu\u201d>\n\n","<\/g>","<\/svg>","skinContextMenu_ListBox2.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinContextMenu\u201d>\n\n","<g id=\u201cskinContextMenu_middle_hover\u201d display=\u201cnone\u201d>\n\n","<\/g>","<g id=\u201cskinContextMenu_middle_selected\u201d display=\u201cnone\u201d>\n\n","<\/g>\n\n","<\/g>","<\/svg>","skinContextMenu_ListBoxG.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinContextMenu\u201d>\n\n","<text x=\u201c3\u201d y=\u201c5\u201d id=\u201clabel\u201d><\/text>\n\n","<g id=\u201cskinContextMenu_middle_hover\u201d display=\u201cnone\u201d>\n\n","<text x=\u201c3\u201d y=\u201c5\u201d id=\u201clabel\u201d><\/text>","<g>","<g id=\u201cskinContextMenu_middle_selected\u201d display=\u201cnone\u201d>\n\n","<text x=\u201c3\u201d y=\u201c5\u201d id=\u201clabel\u201d><\/text>","<\/g>\n\n","<g>","<\/svg>","skinContextMenu_ListView.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinContextMenu\u201d>\n\n","<text x=\u201c3\u201d y=\u201c15\u201d id=\u201clabel\u201d><\/text>\n\n","<g id=\u201cskinContextMenu_middle_hover\u201d display=\u201cnone\u201d>\n\n","<text x=\u201c3\u201d y=\u201c15\u201d id=\u201clabel\u201d><\/text>","<\/g>","<g id=\u201cskinContextMenu_middle_selected\u201d display=\u201cnone\u201d>",{"@attributes":{"id":"p-0829","num":"0000"},"ul":{"@attributes":{"id":"ul0599","list-style":"none"},"li":{"@attributes":{"id":"ul0599-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0600","list-style":"none"},"li":["<line x1=\u201c0\u201d y1=\u201c3\u201d x2=\u201c0\u201d y2=\u201c18\u201d style=\u201cstroke:#000000;stroke-width:1\u201d\/>","<line x1=\u201c200\u201d y1=\u201c3\u201d x2=\u201c200\u201d y2=\u201c18\u201d style=\u201cstroke:#000000;stroke-width:1\u201d\/>","<rect x=\u201c1\u201d y=\u201c3\u201d width=\u201c198\u201d height=\u201c14\u201d style=\u201cfill:#FF0000;stroke:#FFFFFF;stroke-width:1\u201d isback=\u201ctrue\u201d\/>"]}}}},"<text x=\u201c3\u201d y=\u201c15\u201d id=\u201clabel\u201d><\/text>","<\/g>\n\n","<\/g>","<\/svg>","skinContextMenu_ListViewG.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinContextMenu\u201d>\n\n","<text x=\u201c3\u201d y=\u201c5\u201d id=\u201clabel\u201d><\/text>","<g>","<g id=\u201cskinContextMenu_middle_hover\u201d display=\u201cnone\u201d>\n\n","<text x=\u201c3\u201d y=\u201c5\u201d id=\u201clabel\u201d><\/text>","<\/g>","<g id=\u201cskinContextMenu_middle_selected\u201d display=\u201cnone\u201d>\n\n","<text x=\u201c3\u201d y=\u201c5\u201d id=\u201clabel\u201d><\/text>","<\/g>\n\n","<g>","<\/svg>","skinContextMenu_vp.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinContextMenu\u201d>\n\n","<text x=\u201c3\u201d y=\u201c32\u201d id=\u201clabel\u201d><\/text>\n\n","<text x=\u201c3\u201d y=\u201c32\u201d id=\u201clabel\u201d><\/text>","<\/g>","<g id=\u201cskinContextMenu_middle_selected\u201d display=\u201cnone\u201d>\n\n","<text x=\u201c3\u201d y=\u201c32\u201d id=\u201clabel\u201d><\/text>","<\/g>\n\n","<\/g>","<\/svg>","skinListbox_Composite.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinListBox\u201d>\n\n","<\/g>","<\/svg>","skinListbox_CompositeG.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinListBox\u201d>\n\n","<\/g>","<\/svg>","skinListbox_CompositeG2.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinListBox\u201d>\n\n","<\/g>","<\/svg>","skinListbox_CompositeG3.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinListBox\u201d>\n\n","<\/g>","<\/svg>","skinListbox_Default.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinButton\u201d>\n\n","<\/g>","<\/svg>","skinListbox_Short.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinListBox\u201d>\n\n","<g>","<g id=\u201cskinDropDown\u201d>\n\n","<\/g>","<\/svg>","skinListView_Composite.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinListView\u201d>\n\n","<\/g>","<\/svg>","skinListView_CompositeG.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinListView\u201d>\n\n","<\/g>","<\/svg>","skinRadioButton_Default.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinRadioButton\u201d>\n\n","<\/g>","<\/svg>","skinScrollBar_Default.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinScrollBar\u201d>\n\n","<\/g>","<g id=\u201cButtonLeftSkin\u201d>\n\n","<g>","<g id=\u201cSliderSkin\u201d>\n\n","<\/g>","<g id=\u201cButtonRightSkin\u201d>\n\n","<\/g>","<g id=\u201cskinScrollBarSmall\u201d>\n\n","<\/g>","<g id=\u201cButtonLeftSkinSmall\u201d>\n\n","<\/g>","<g id=\u201cSliderSkinSmall\u201d>\n\n","<\/g>","<g id=\u201cButtonRightSkinSmall\u201d>\n\n","<\/g><\/svg>","skinScrollBar_ListBox.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinScrollBarSmall\u201d>\n\n","<\/g>","<g id=\u201cButtonLeftSkinSmall\u201d>\n\n","<g>","<g id=\u201cSliderSkinSmall\u201d>\n\n","<\/g>","<g id=\u201cButtonRightSkinSmall\u201d>\n\n","<\/g><\/svg>","skinScrollBar_ListView.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinScrollBarSmall\u201d>\n\n","<\/g>","<g id=\u201cButtonLeftSkinSmall\u201d>\n\n","<\/g>","<g id=\u201cSliderSkinSmall\u201d>\n\n","<\/g>","<g id=\u201cButtonRightSkinSmall\u201d>\n\n","<\/g><\/svg>","skinSlider_Default.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinSlider\u201d>\n\n","<\/g>","<\/svg>","skinSlider_Windows.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinSlider\u201d>\n\n","<\/g>","<\/svg>","skinSpin_Composite.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinSpin\u201d>\n\n","<\/g>","<g id=\u201cskinSpinButtonUp\u201d>\n\n","<\/g>","<g id=\u201cskinSpinButtonDown\u201d>\n\n","<g>","<\/svg>","skinTextBox_Combobox.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinTextbox\u201d>\n\n","<\/g>","<\/svg>","skinTextBox_Combobox_Short.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinTextbox\u201d>\n\n","<\/g>","<\/svg>","skinTextBox_Default.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinTextbox\u201d>\n\n","<g>","<g id=\u201cskinTextboxMultiLine\u201d>\n\n","<\/g>","<\/svg>","skinTextBox_Listbox.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinTextbox\u201d>\n\n","<\/g>","<\/svg>","skinTextBox_Spin_Short.svg","<?xml version=\u201c1.0\u201d?>","<svg xmlns:dsvg=\u201chttp:\/\/corel.org\/dsvg\u201d>","<g id=\u201cskinTextbox\u201d>\n\n","<g>","<\/svg>","skinTextBox_vp.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinTextbox\u201d>\n\n","<g>","<g id=\u201cskinTextboxMultiLine\u201d>\n\n","<rect stroke=\u201cgray\u201d fill=\u201cwhite\u201d x=\u201c0\u201d y=\u201c\u22125\u201d width=\u201c380\u201d height=\u201c195\u201d\/>\n\n","<\/g>","<\/svg>","skinTextScroll_Default.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinTextboxScroll\u201d>\n\n","<\/g>","<g id=\u201clabel\u201d style=\u201cfont-family:'Tahoma';stroke:none;font-size:12\u201d>\n\n","<\/g>","<svg>","skinTooltip.svg","<?xml version=\u201c1.0\u201d?>","<svg>","<g id=\u201cskinTooltip_annotation\u201d>\n\n","<\/g>","<g id=\u201cskinTooltip_traditional\u201d pointer-events=\u201cnone\u201d>\n\n","<\/g>","<g id=\u201cskinTooltip_special\u201d pointer-events=\u201cnone\u201d>\n\n","<g>","<\/svg>"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTIONS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIGS. 4A to 4D"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 26"}]},"DETDESC":[{},{}]}
