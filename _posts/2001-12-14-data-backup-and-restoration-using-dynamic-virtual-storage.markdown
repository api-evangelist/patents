---
title: Data backup and restoration using dynamic virtual storage
abstract: A system is described including a processor, a storage system having one or more physical storage devices, and a controller coupled to the processor and the storage system. The controller maintains a virtual storage map (VSM) allocating a primary virtual storage and a secondary virtual storage within a storage system. The controller stores data received from the processor prior to a time T0 on the primary virtual storage, stores data received from the processor after time T0 on the secondary virtual storage. The controller updates the VSM in response to a save command to reallocate the primary virtual storage to include data written to the secondary virtual storage. In this manner, the system can backup data in a manner that appears almost instantaneous to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06948039&OS=06948039&RS=06948039
owner: Voom Technologies, Inc.
number: 06948039
owner_city: Lakeland
owner_country: US
publication_date: 20011214
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This invention relates generally to data storage and, more particularly, to backup and restoration of a storage device.","Typical computing environments include one or more computing devices, such as desktop computers, laptop computers, hand-held computers, database servers, file servers, web servers, supercomputers, and the like. Each of these devices typically includes one or more processors and storage media for storing data and executable software modules.","The loss of data due to an unforeseen event is of paramount concern to organizations or other computer users. The data may be lost, for example, by fire, flood, and other natural disasters, hardware failure, and even software viruses or other hostile network attacks. To mitigate the risk of loss, due to an unforeseen event, organizations typically make use of an archival and retrieval system to periodically backup the data. These systems may include a number of backup devices including remote storage devices, tape drives, optical jukeboxes and the like.","A backup operation is typically performed by one of a number of different commercially available software programs. The software programs often run on a computer coupled to a network of computers, and tend to consume network bandwidth when saving the data to a backup device. Consequently, these programs tend to require considerable time to backup critical data, and can often consume significant computing and network resources. Furthermore, the software program responsible for the backup and restoration may be subject to viruses or other network attacks, thereby increasing the risk to the organization.","In general, the invention is directed to a system that makes use of dynamic virtual storage to save and restore data within a computing environment. The system may include a controller that saves data stored to one or more physical storage devices by defining a primary virtual storage and a secondary virtual storage. The controller may define the primary virtual storage and the secondary virtual storage within one or more logical storage volumes mapped to one or more physical storage devices. In this manner, the primary virtual storage and the secondary virtual storage may, for example, reside on physically separate storage mediums of separate devices, or may reside on a common storage medium within a storage device.","The controller uses the primary virtual storage to store an initial state of data written by a computing device prior to a point in time, referred to herein as time T. In other words, the primary virtual storage stores a snapshot of the data at time T. The controller uses the secondary virtual storage to store all data written by the computing device subsequent to time T. Consequently, the controller responds to read requests received from the computing device by selectively reading data from the secondary virtual storage and the primary virtual storage, depending on whether data stored by the primary virtual storage has been rendered obsolete by data stored by the secondary virtual storage.","The controller provides the ability to quickly create a new snapshot of the data by dynamically reallocating the primary virtual storage and the secondary virtual storage. In particular, the controller maintains a map that defines the allocation of the primary and secondary virtual storage. By adjusting the map, the controller can quickly reallocate the primary storage to include the data written to the secondary virtual storage, thereby establishing a new time Tfor the primary virtual storage. In this manner, the controller can backup data in a manner that appears almost instantaneous to the user.","In one embodiment, the invention is directed to a method that includes storing a virtual storage map (VSM) allocating a primary virtual storage and a secondary virtual storage. The method further includes updating the VSM to reallocate the primary virtual storage to include data written to the secondary virtual storage. The VSM may define a set of storage units for each virtual storage, and updating the VSM may comprise updating the VSM to reallocate at least one storage unit from the secondary virtual storage to the primary storage device. The method may further include receiving a save command, and updating the VSM in response to the save command. The save command may be received in response to an actuated hardware switch from software executing on a host computer, from a handheld device, or the like.","In another embodiment, the invention is directed to a system including a processor, a storage system having one or more physical storage devices, and a controller coupled to the processor and the storage system. The controller maintains a virtual storage map (VSM) allocating a primary virtual storage and a secondary virtual storage within a storage system. The controller may include a computer-readable medium to store the VSM, may store the VSM within the storage system, or both. The controller stores data received from the processor prior to a time Ton the primary virtual storage, stores data received from the processor after time Ton the secondary virtual storage. The controller updates the VSM in response to a save command to reallocate the primary virtual storage to include data written to the secondary virtual storage. The system may include an input\/output (I\/O) device to issue the save command to the controller. The I\/O device may, for example, issue commands to the controller upon actuation of a hardware switch. Alternatively, the I\/O device may issue commands to the controller via a wireless signal.","In another embodiment, the invention is directed to an apparatus including a computer-readable medium to store a virtual storage map (VSM) allocating a primary virtual storage and a secondary virtual storage within a storage system, and a control unit to update the VSM to reallocate the primary virtual storage to include data written to the secondary virtual storage. The apparatus may include a first interface coupled to the control unit to receive storage requests from a processor, and a second interface coupling the control unit to the storage system. The apparatus may further include an input\/output (I\/O) interface to receive a save command directing the control unit to reallocate the primary virtual storage.","The invention provides a number of advantages. For example, the invention provides the ability to quickly backup data by dynamically reallocating virtual storage, such as by adjusting a virtual storage map. In this manner, the system can backup data in a manner that appears almost instantaneous to the user. The user, therefore, need not refrain from using the computing device for a significant period of time, as is often required by conventional backup mechanisms.","In addition, the controller may be used to provide a secure means for saving and restoring data that is not susceptible to malicious network users, viruses, or other such devices. The controller may, for example, provide a hardware interface for saving and restoring data that is physically separate from the computing device and the software executing thereon. A user, such as a system administrator, may save and restore the data by actuating a hardware switch or interacting with the controller via a secure dedicated connection or wireless link.","Furthermore, the controller may be used to provide additional security by filtering any unauthorized commands issued to a storage system via a host computer. The controller may, for example, filter unpublished, vendor-specific commands. In addition, the controller may filter published but unwanted commands, or may translate the unwanted command to an acceptable command. The controller may selectively filter the commands based on configuration information defined by a user, such as a system administrator. In this manner, the controller may provide a bus-level filter for access commands issued to the storage system.","The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features, objects, and advantages of the invention will be apparent from the description and drawings, and from the claims.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1","b":["2","2","6","8","4","4","4"]},"Storage system  provides a system for storing data and executable software modules for use by processor . Storage system  may comprise, for example, one or more physical storage devices including one or more hard disks, tape drives, removable storage media, optical storage media, volatile storage memory, EEPROM and the like.","Controller  receives storage access requests, such as conventional read and write requests, from processor  via interconnect . In response, controller  manages storage system  by issuing commands to storage system  via interconnect . Interconnects ,  may conform to, for example, the small computer system interface (SCSI), a Fiber Channel interface, Integrated Drive Electronics\/AT Attachment (IDE\/ATA) interface, or the like. Storage system  may include one or more physical storage mediums, such as a conventional magnetic disk drives, magneto optical storage devices, and CDROMS.","As described in detail below, controller  manages storage system  to provide a secure backup for data written by processor . Moreover, controller  provides mechanisms to backup and restore data in a manner that appears instantaneous to a user. In particular, controller  allocates and maintains a primary virtual storage A and a secondary virtual storage B, collectively referred to as virtual storage , within storage system . Controller  may allocate virtual storage  according to one or more physical storage media of storage system . Alternatively, controller  may allocate virtual storage  according to logical storage volumes that are mapped to the underlying physical storage media of storage system . In this manner, the primary virtual storage and the secondary virtual storage may, for example, reside on physically separate storage mediums of separate devices, or may reside on a common storage medium within a storage device.","Controller  uses primary virtual storage A to store an initial state of data written by processor  prior to a point in time, referred to herein as time T. In other words, primary virtual storage A stores a snapshot of the data at time T. Controller  uses secondary virtual storage B to store all data written by processor  subsequent to time T. Consequently, controller  responds to read requests received from processor  by selectively reading data from secondary virtual storage B and the primary virtual storage A, depending on whether data stored by primary virtual storage A has been rendered obsolete by data stored by secondary virtual storage B. In order to respond a read request, controller  determines whether the requested data has been written to primary virtual storage A, or has been superceded by data written to secondary virtual storage B. Controller  then selectively reads data from secondary virtual storage B and primary virtual storage A in response to the read request.","In order to quickly and efficiently backup and restore data, controller  dynamically allocates and reallocates virtual storage . In particular, controller  maintains a virtual storage map (VSM) that defines the allocation of the primary and secondary virtual storage. Controller  may maintain the map within internal embedded memory, within storage system , or both. In response to a save (backup) command, controller  updates the VSM, dynamically reallocating primary virtual storage A to include the data written to secondary virtual storage B. Consequently, controller  dynamically reallocates secondary virtual storage B to exclude the data. In this manner, controller  quickly establishes a new time Tin which primary virtual storage A stores all of the data received prior to time T. In this manner, controller  can save (backup) the data in the manner that appears instantaneous to a user. Specifically, by dynamically allocating and reallocating virtual storage  upon receiving the save command, controller  avoids copying any of the actual data in order to perform a backup.","In addition to the ability to save data in a manner that appears instantaneous to a user, controller  can also revert back to the previously saved state in similar fashion. Specifically, upon receiving a restore command, controller  can simply disregard the data written to secondary virtual storage B, thereby reverting to the data stored by primary virtual storage A. In this manner, controller  can quickly revert to using data stored prior to a time T.","Furthermore, controller  may provide additional security by filtering any unauthorized commands received from processor . Controller  may, for example, filter unpublished, vendor-specific commands received from processor . In addition, controller  may filter published but unwanted commands, or may translate the unwanted command to an acceptable command. Controller  may selectively filter the commands based on configuration information defined by a user, such as a system administrator. In this manner, controller  may provide a bus-level filter for access commands issued to storage system .",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 2","b":["6","6","16","18","20","22","24","16","18","6","4","8","20","4","12","16","20","8","14","18","6","4","8","2","4","8"]},"Control unit  stores the virtual storage map (VSM) within memory  to maintain a current allocation of primary virtual storage A and secondary virtual storage B within storage system . In addition, control unit  may, as described below, store other information within memory  including a record of the locations of secondary virtual storage B to which data has been written. Alternatively, control unit  may store the VSM and other information within storage system  for persistency, or within both memory  and storage system  for purposes of redundancy.","Control unit  receives data backup and restoration commands directly from I\/O device . In particular, I\/O device  may be a dedicated device by which a user issues commands to controller , thereby bypassing processor . In this manner, I\/O device  and controller  provide a secure means for saving and restoring data within storage system . Consequently, controller  and storage system  are not subject to attacks via network hackers, viruses or other malicious software.","I\/O device  may comprises a keyboard, pointing device or other conventional input mechanisms. In one embodiment, comprises a panel mounted to a host computing device. Alternatively, I\/O device  may comprise a dedicated communication link or wireless device by which a user, such as a network administrator, may save and restore data within storage system . In this embodiment, signals  may represent wireless communications received by controller  from I\/O device .","Bus interface  provides a mechanism by which controller  may be directly coupled to a system or I\/O bus within a chassis of the host computer. Bus interface  may provide, for example, power and ground signals for use by controller .",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 3A","b":["26","26","30","32","34","30","26","20","6","32","26","6","34","6","34","6"]},"I\/O device  may include other features such as a display of the last date and time at which a save was performed. In addition, I\/O device  may include mechanisms by which a user enters an authorization code or provides other secure information such as a digital key to be used for authenticating the user.","I\/O device  need not be directly coupled to the host computer device. For a wireless device, I\/O device  may include antenna  to communicate with controller  via radio frequency or other appropriate mechanisms. I\/O device  and controller  may be configured to communicate, for example, via cellular or infrared communications or may be enabled as BLUETOOTH applications. Alternatively, I\/O device may comprise a removable panel that engages controller  via an I\/O port of other communication means.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 3B","b":["26","36","35","6","36","35","6","6","35","6","6","4"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 4","b":["6","6","10","10","6"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 5","b":["6","6","10","10","8","40","6","10","10","10","4","10","42"],"sub":"0 "},"Controller  maintains a record of the locations to which data has been written written to secondary virtual storage B subsequent to time T(). Controller  makes use of this record in order to respond to read requests received from processor . Specifically, upon receiving a read request, controller  selectively reads data from primary virtual storage A and secondary virtual storage B based upon the record (). For example, if the record indicates that the requested data has been written subsequent to time T, controller  reads the data from secondary virtual storage B and forwards the data to processor . Otherwise, controller  reads the data from primary virtual storage A and forwards the data to processor .","Upon receiving a save command (), controller  reallocates primary virtual storage A and secondary virtual storage B (). In particular, controller  reallocates the virtual storage space to such that data written to to secondary virtual storage B subsequent to the time Tis allocated to primary virtual storage A and excluded from secondary virtual storage B. In this manner controller  establishes a new time Tin response to the save command ().",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 6A","FIG. 6A"],"b":["52","52","52","10","10","52","10","52","10","52"],"sub":"0"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 6B","b":["52","6","10","10","52","52"],"sub":"0 "},"Specifically, regions A and B of logical storage volume  have been allocated to primary virtual storage A. Similarly, the corresponding regions within logical storage volume A have been allocated to secondary virtual storage B. As illustrated, primary virtual storage A and secondary virtual storage B may be distributed throughout logical storage volumes  as a result of allocation and reallocation due to save commands. As described in further detail below, by reallocating virtual storage within the logical storage volumes, controller  is able to quickly perform a save operation in a manner that appears instantaneous to the user.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 7","b":["60","6","10","10","60","62","64"]},"VSM  defines a set of logical storage units within each of primary virtual storage A and secondary virtual storage B. The units may correspond to ranges of addresses, data blocks, sectors, or other units of storage within virtual storage . In one embodiment, VSM  comprises a bitmap containing a set of binary values. Each binary value corresponds to a respective storage unit. A binary value of 1, for example, may indicate that the corresponding storage unit is allocated to primary virtual storage A. A binary value of 0, however, may indicate that the storage unit is allocated to secondary virtual storage B. Controller  may easily reallocate a storage unit from one virtual storage to another by changing a state of the corresponding binary value of VSM .","Similarly, in one embodiment, DDM  is a bitmap having a set of binary values. Each binary value of the set corresponds to a logical storage unit within secondary virtual storage B, and indicates whether data has been written to secondary virtual storage B subsequent to a time T. In this manner, controller  can readily determine whether to read data from secondary virtual storage B or from primary virtual storage A based on the DDM.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 8","FIG. 6A"],"b":["10","60","7","6","62","10","10","70","6","62","10","10","10","10"]},"Next, controller  initializes the delta data map (DDM)  by setting all of the binary values to a null value (). In this manner, controller  resets DDM  to indicate that no data has yet been stored to secondary virtual storage B subsequent to the allocation. Next, controller  writes data to secondary virtual storage B in response to write requests received from processor  (). After writing the data, controller  updates DDM  to record the locations of the data written to secondary virtual storage B (). In particular, controller  may change the state of the corresponding binary values within DDM  from a null value to a logical one, thereby marking the storage units as containing data written subsequent to time T.","Upon receiving a read request from processor , controller  selectively reads data from primary virtual storage A and secondary virtual storage B based upon the state of the binary data within DDM  (). More specifically, controller  reads the appropriate binary values of DDM  to determine whether the data requested by processor  has been written to secondary virtual storage B. If so, controller  reads the data from secondary virtual storage B and forwards the data to processor . If, however, the data has not been written from processor  subsequent to a time T, controller  reads the data from primary virtual storage A and forwards the data to processor .","Upon receiving a save command (), controller  reallocates primary virtual storage A and secondary virtual storage B by updating VSM  and DDM  (). In general, controller  examines DDM  to identify those storage units within secondary virtual storage B that contain data written by processor  subsequent to time T. Controller  then updates VSM  to reallocate primary virtual storage A to include the identified storage units of secondary virtual storage B (). In this manner, the storage units of secondary virtual storage B that contain data written subsequent to time Tare redefined to be included within primary virtual storage A. Consequently, the corresponding storage units within primary virtual storage A that contain old data are automatically redefined to be included within secondary virtual storage B. Controller  resets DDM  by setting all of the binary values to null. In this manner, controller  marks all of the storage units within secondary virtual storage B as being initialized and available to store new data. In this manner, controller  establishes a new time T.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIGS. 9A-9E","FIG. 9A"],"b":["80","10","10","82","10","84","86","10","10"],"sub":"0"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 9B","b":["82","4","82","4","10"],"sub":"0"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 9C","b":["80","82","6","6","82","6","80","10","10","6","80","10","10","84","86","6","82","80"],"sub":["0","0"]},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 9D","b":["82","4","6","10","82"]},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 9E","b":["6","6","80","10","10","82"]},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 10","b":["87","6","87","88","89","90","90"]},"In particular, status data  may comprise a bitmap having a set of binary values. Each binary value may correspond to a storage unit within secondary virtual storage B. The state of the binary value represents whether the corresponding storage unit has been reallocated, if necessary, in response to a recent save command. In this manner, data structure  may be useful when controller  performs the reallocation in the background, such as during free cycles of a system bus within a host computing device. Thus, by including status data in the data structure, the reallocation can be performed solely during free cycles. If the free cycles are interrupted, status data  can maintain an indication of the status of the reallocation so that it can be finished during subsequent free cycles. In this manner, controller  can perform reallocation without using non-free cycles.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 11","b":["6","87","91","6","88","89","4","91","6","90"]},"During this process, if controller  receives a write request (), controller  accesses status data  to determine whether the storage units holding the requested data have been updated in response to the previous save command (). If so, controller  immediately writes the data to the storage units of secondary virtual storage B (). If not, controller  updates VSM  and DDM  () and status data  () prior to writing the data ().","If a read request is received (), controller  selectively reads data from primary virtual storage A and secondary virtual storage B in accordance with DDM  as described above (). Controller  continues to update status data  in the background until all of the storage units containing data written subsequent to time Thave been reallocated from secondary virtual storage B to primary virtual storage A ().",{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 12","b":["104","6","104","106","108","110","111","110","10","6","111","10","26","6","6","111"]},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 13","b":["6","104","12","120","6","111","122","124","6","110","111","126"]},"If the version number for the requested storage unit is less than system version , controller  initiates a reallocation of the storage unit from secondary virtual storage B to primary virtual storage A () and sets the version number for the storage unit to system version  (). Next, controller  writes the data to the storage unit of secondary virtual storage B () and updates DDM  to indicate that the storage unit contains data subsequent to the last save command ().","If however, the version number for the storage unit requested is equal to system version , controller  writes the data to secondary virtual storage B () without updating VSM  to reallocate storage units () and updates DDM  (). If controller  receives a read request, controller  accesses DDM  and selectively reads data from secondary virtual storage B and primary virtual storage A ().",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 14","b":["140","6","140","142","144","146","148","150","148","6","148"]},"In this embodiment, version data  may store an index into command history . In this manner, the version number indicates the last command, save or restore, applied to a particular storage unit of secondary virtual storage B. In other words, by indexing into command history , the version number indicates a current state for the respective storage unit.","Upon receiving a read request from processor , controller  accesses version data  to determine if the version for the accessed storage unit is less than system version . If so, controller  reallocates VSM  and updates the version data  for the accessed storage unit. In this manner, controller  may update data structure  within local memory . For write requests, controller  may perform a similar operation and save data structure  to storage system .","Upon receiving a save or restore command, controller  may update command history  to reflect the command, save data structure  to storage system , and increment system version . This allows controller  to perform a save or restore in a manner that appears instantaneous to the user.","Various embodiments of the invention have been described. These and other embodiments are within the scope of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 6A-6B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8","b":"7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIGS. 9A-9E"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 11","b":"10"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 13","b":"12"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 14"}]},"DETDESC":[{},{}]}
