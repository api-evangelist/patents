---
title: System for selecting a connectivity mechanism
abstract: An address resolver system that assists a node in an IPv6 network to select an address for connectivity with a node in an IPv4 network when both DSTM and NAT-PT transition mechanisms are available. Native connectivity can be achieved by preferring an encapsulation or tunnelling mechanism such as DSTM where possible over a translation mechanism such as NAT-PT. A range of encapsulation and translation mechanisms are envisaged. The resolver determines capabilities of the node and of the application that requires the address in order to make the selection.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07929533&OS=07929533&RS=07929533
owner: British Telecommunications plc
number: 07929533
owner_city: London
owner_country: GB
publication_date: 20030324
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["This application is the US national phase of international application PCT\/GB03\/01256 filed 24 Mar. 2003 which designated the U.S. and claims benefit of EP 02252222.1, dated 27 Mar. 2002, the entire content of which is hereby incorporated by reference.","1. Technical Field","This invention relates to systems suitable for use in computer networks undergoing the transition from IPv4 to IPv6. Particularly but not only to a resolver system that assists a node in an IPv6 network to select an address for connectivity with a node in an IPv4 network when both DSTM and NAT-PT or similar transition mechanisms are available.","2. Related Art","A variety of transition mechanisms are proposed for migrating IP (Internet Protocol) networks from IPv4 to IPv6, including encapsulation or tunnelling systems such as DSTM (Dual Stack Transition Mechanism) and translation systems such as NAT-PT (Network Address Translation-Protocol Translation), SIIT (Stateless IP\/ICMP Translator), BIS (Bump-in-the-Stack), BIA (Bump-in-the-API). DSTM allows a node in an IPv6 network to communicate with a node in an IPv4 network by allocating the IPv6 node a temporary IPv4 address. NAT-PT enables translation of IPv4 addresses and packets into equivalent IPv6 addresses and packets, and vice versa. Management of IP addresses is generally carried out by DNS (Domain Name System) servers. All have been described in documents published by the IETF (Internet Engineering Task Force).","A growing number of Internet nodes contain dual stack applications that are capable of packet communication with other nodes using both IPv4 and IPv6. Each node also contains a resolver that obtains one or more IP addresses for a remote node when required by a local application. The resolver generally determines a remote address by way of a request transmitted through one or more DNS servers, being an A request for a record containing an IPv4 address or an AAAA request for a record containing an IPv6 address. An A6 request might also be used in relation to IPv6 addresses although AAAA requests are more likely to be deployed in practice. The application will usually ask for both kinds of address, and the DNS response along with capabilities of the local node generally determines which address will be used. However, current methods for selection of the address do not always provide the most efficient connectivity been the nodes.","For example, an application in an IPv6 node requests both IPv4 and IPv6 addresses of a target IPv4 node through the local resolver and DNS. If the target is bounded from the source by both NAT-PT and DSTM, then the resolver may list both an IPv6 version of the target native IPv4 address, produced by translation, and the actual IPv4 address returned for activation of DSTM. The source node or application may not have a system for selecting from the list other than simply to choose the first address that is presented or to follow a default algorithm. If the first address is the IPv6 version then connectivity between the source and the target will be established using the translation mechanism. If the first address is the actual IPv4 address then connectivity will be set up with DSTM.","Translation mechanisms are \u201cbest effort\u201d but may result in loss of service specific information. Encapsulation mechanisms are generally preferred because native connectivity is possible. In the example above, the IPv6 node will communicate with the IPv4 node using a mechanism determined arbitrarily by whichever DNS response is presented first to the application. The most suitable mechanism is not generally determined before a connection between the nodes is set up.","The exemplary embodiment provides for improved address selectin in IPv6 nodes that are able to communicate with IPv4 nodes by both DSTM and NAT-PT, or similar encapsulation and translation system, or at least to provide an alternative to existing selection mechanism. In general terms the address is selected in accord with capabilities of the IPv6 node and in a way that establishes native connectivity for communication with an IPv4 node if possible.","In one aspect the invention may broadly be said to consist in a method of selecting connectivity between a source node and a target node in an IP network, comprising: requesting at least one IP address for the target node, receiving two or more IP addresses for the target node, determining that one of the received addresses represents connectivity by encapsulation, determining that another of the received addresses represents connectivity by translation, and selecting the address that represents connectivity by encapsulation for communication between the nodes. Preferably the method also determines that the source node has a dual stack mechanism available and is capable of connectivity with IPv4 nodes by DSTM.","In another aspect the invention may be said to consist in a node in an IP network including: application layer components having different IP addressing capabilities for communication with components in other nodes, network layer components providing different IP addressing capabilities for the application layer components, and an address resolver component that determines the capabilities of both the application layer components and the network layer components, and selects IP addresses giving preference to encapsulation over translation wherever possible.","In another aspect the invention may be said to consist in an address selector for a node in an IP network, including: means for determining IP addressing capabilities of application and network layer components in the node, means for determining IP address characteristics of a remote node in the network with which the application components may communicate, means for determining a connectivity mechanism according to the capabilities of the components and characteristics of the remote node, and means for selecting addresses for the node and the remote node in order to optimise the connectivity mechanism.","In a further aspect the invention consists in a method of selecting connectivity at a node in an IP network, comprising: determining capability of the node for communication over the network by way of two or more connectivity mechanisms, obtaining two or more IP addresses for another node representing communication between nodes by way of at least two of the mechanisms, and selecting an address for each node and a mechanism for communication giving preference to encapsulation over translation where possible.","A node in this specification can be any device that implements IPv4 or IPv6 and is therefore capable of communicating with other devices over an IP based network either wired or wireless. It includes devices such as end user PCs (Personal Computers) and central servers, and anything commonly called an Internet host. Other terms in the specification are also to be interpreted broadly to include all equivalent devices and features.","Referring to the figures it will be appreciated that the invention can be implemented in a variety of ways on a variety of IPv6 nodes in the Internet or other computer network. This description is given by way of example only. Internet protocols and systems such as IPv4, IPv6, layer models, DNS, DSTM or other encapsulation mechanisms and NAT-PT or other translation mechanisms, will be understood by a skilled reader and need not be explained in detail.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1","b":["10","11","12","13","14","15","16","11","14","12","13","15","18","19"]},"Each IPv6 network in  that implements DSTM generally requires a separate address server  to hold a pool of IPv4 addresses for assignment to local IPv6 nodes, and maintains a record of each mapping for the duration of sessions between local and remote nodes. A DSTM border router or gateway  is also generally required for connection of the network to the Internet and may also be able to cache address mappings, for example. Each IPv6 node  that uses DSTM in network  generally requires a DSTM application that manages temporary assignments of IPv4 addresses to the node, and also a DTI (Dynamic Tunnelling Interface) system that encapsulates and decapsulates IPv4 packets within IPv6 packets for transmission and reception within the local network.","Networks in  that implement NAT-PT generally require at least a border router or gateway  capable of translating IPv4 addresses and packets into IPv6 addresses and packets. DSTM and NAT-PT routers are shown separately for network  but may be combined in a single device. These NAT-PT systems are generally bidirectional and may hold a pool of IP addresses for assignment to local nodes as required. They may also track the duration of each session between local and remote nodes. More complex translation systems such as NAPT-PT (Network Address Port Translation-Protocol Translation) perhaps including ALG (Application Layer Gateway) and a range of other might also be implemented in the border router in some circumstances.","An IPv6 network in  may mix DSTM capable nodes that can temporarily be assigned an IPv4 address, and IPv6 only nodes that have no capability for temporary address allocation and must use a translator to communicate with IPv4 only nodes. Software applications in nodes of either type may have dual stack capability and thereby support both IPv6 and IPv4 communications. A typical dual stack application is likely to request both IPv6 and IPv4 addresses when attempting to communicate with a remote node. However, the application generally has no knowledge of the capabilities of the local IPv6 node and without control over DNS exchanges will not necessarily select a suitable address to establish the most efficient mechanism for connectivity. A typical DNS resolver in the IPv6 node will send both A and AAAA requests to the local DNS server and then return a list of possible addresses to the application, generally ordered according to their time of receipt.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 2","FIG. 1"],"b":["18","11","12","25","26","27","28"]},"The resolver system  in  is typically contained in a library  of components such as APIs (Application Programming Interfaces) that provide services to the applications. The resolver provides generally standard functions including sending and collecting DNS requests and responses, but also functions that are able to determine the node capability and process the DNS responses accordingly for address selection. A DSTM interface can be detected for example, by inspecting the Windows Registry on a Microsoft system, or through ifconfig dti0 on a Unix system. These functions of the resolver could be spread over several components in other layers if required.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 3","FIG. 2"],"b":["30","31","32","33","34","35","36"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 4","FIG. 2","FIG. 1","FIG. 7"],"b":["18","11","19","14","18","12","19","13","16"]},"In , the application in the source IPv6 node then requests an IPv4 address for the target IPv4 node. The local resolver sends an A request to the local DNSv6 server which sends the request on towards a DNSv4 server in the IPv4 network of the target node. The DNS interconnect device relays the request to the DNSv4 server without need of translation and receives an A response in turn. The A response is sent back toward the source node being encapsulated by DSTM on the border of the IPv6 network. The resolver in the IPv6 node collects the AAAA and A responses and provides a list of possible addresses for the dual stack application. The list is ordered by a process in the resolver that generally prefers connectivity by DSTM ahead of connectivity by NAT-PT, and orders the addresses accordingly. More than two addresses may appear in the list depending on a range of circumstances of the source and target nodes. The application in the source node will generally attempt a connection to the target node using the first address on the list, then using second and any lower addresses for further attempts if necessary.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 5","FIG. 3"],"b":["35","30"]},"In , the resolver has a collection of IPv4 and IPv6 addresses to list in suitable order for an application on the source node. The resolver first determines in decision step  whether the node is IPv6 only or DSTM capable, and then in either of decision steps  and  whether the particular application for which the list is being prepared is IPv4, IPv6 or dual capable. An IPv4 only application on an IPv6 only node cannot communicate with any target node and DNS responses are dropped in step . An IPv6 only or dual stack application on an IPv6 only node can communicate only by IPv6 so the AAAA response, whether native from an IPv6 target, or translated from an IPv4 target, is placed first on the list in step . An IPv4 only application on a DSTM capable node can only communicate with an IPv4 target node using DSTM, so the A response is placed first in step , and the encapsulation mechanism is activated. An IPv6 only application on a DSTM capable node can communicate using either a native or translated address so the AAAA response is therefore placed first in step . A dual stack application on a DSTM capable node can communicate with a target node in several ways and an assessment of the IPv6 address is required in decision step . Native connectivity is preferred so that for communication with an IPv6 target the AAAA response is placed first in step . For communication with an IPv4 node the A response is placed first and the DSTM or other encapsulation mechanism is activated.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 7","FIG. 5"],"b":"57"},"In  the translator identifier is added by the translator. A possible alternative would be to pre-configure a relevant translator identifier into each IPv4 node. The former is more manageable for large or growing IPv6 networks. The latter preferable for smaller networks."],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Preferred embodiments of the invention will be described with respect to the accompanying drawings, of which:",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 5","FIG. 2"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
