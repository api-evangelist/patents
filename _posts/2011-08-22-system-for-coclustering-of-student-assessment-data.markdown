---
title: System for co-clustering of student assessment data
abstract: A system and method for making use of formative assessment data collected is disclosed that identifies clusters of students and concurrently determines the characteristics of the student clusters. A decomposition of the data is performed with spectral theories of graphs and fuzzy logic algorithms to identify the clusters of students, clusters of assessment data and relationships between them. An actionable output is presented to teachers for the evaluation of educational progress.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08718534&OS=08718534&RS=08718534
owner: Xerox Corporation
number: 08718534
owner_city: Norwalk
owner_country: US
publication_date: 20110822
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["The present disclosure relates to multifunction device systems and methods for evaluating student assessment data, and in particular, for utilizing formative assessment data in order to identify co-clusters of students and metadata associated therewith that are displayed and\/or printed on the multifunctional device system.","In recent years the basic office copier has evolved into what can be called a \u201cmulti-function device\u201d or MFD. With digital technology, a machine with the basic outward appearance of a traditional copier can perform additional functions such as printing documents submitted in digital form over a network; sending and receiving messages via facsimile; recording hard-copy original images in digital form and sending the resulting data over a network, such as in electronic mail; or recording hard-copy original images in digital form on a compact disc or equivalent medium. These additional functions present further challenges to a designer of a convenient and intuitive user interface.","The present disclosure is directed utilizing MFDs to creating, grading, and analyzing the results of tests administered to students, and in particular, to a computer-implemented educational assessment system and method for generating and administering student assessments, evaluating the results thereof to enable educators to identify strengths and weaknesses of students both individually and in the aggregate, and tailoring the learning experience of students in a classroom environment.","The present disclosure relates to the process of assessing the attributes of a student or group of students at selected times during their learning process and particularly relates to the assessment and evaluation of student attributes or progress in a structured classroom where a teacher is required to educate the students to a level of proficiency in various subject matters and at particular grade levels. Typically, in a grade level classroom, the teacher periodically gives the students printed formative assessments or tests, as they have previously been referred to, in order to obtain an indication of the student(s) level(s) of proficiency in the subject matter of immediate interest.","Where a teacher is responsible for a class having a relatively large number of students, the teacher typically passes out to all students a common assessment form. The assessments are distributed to the students who then mark their responses on the forms which are then gathered by the teacher and individually reviewed and evaluated or graded by the teacher. The process has required the teacher to then manually enter an overall metric of each student's performance on the assessment into a record book or database. Typically the metric is a single total score or percentage of possible points. This process has thus been time consuming and often requires the teacher to spend considerable time outside of the classroom performing these functions. Furthermore, no detailed record is kept regarding how each student performed on each item within the assessment. Given the low resolution metric recorded for each assessment, the recorded results do not fully or meaningfully determine the state of learning of individual students who may be experiencing learning difficulties or are insufficiently prepared for particular elements of the assessment.","Currently formative assessments are widely used in schools to close the gap between the current and the desired state of learning of a student. They are used by teachers as a feedback mechanism to assess the effectiveness of their instruction. Highly granular data on the performance of the students on a formative assessment can be captured. However, the data can be useful only if some actionable insights can be extracted from it and presented to the teachers, parents and students alike. One such view that can be extracted from the data is the information regarding clusters of students and the problem areas specific to each student cluster.","Thus, it has been desired to provide a way or means of automatically evaluating educational assessments to further enhance education needs for groups of students.","The following presents a simplified summary in order to provide a basic understanding of one or more aspects of the disclosure. This summary is not an extensive overview and is neither intended to identify key or critical elements, nor to delineate the scope thereof. Rather, the primary purpose of the summary is to present some concepts of the disclosure in a simplified form as a prelude to the more detailed description that is presented later.","In one embodiment, a system for educational assessment of student groups is provided. The system includes a processor having a memory, wherein the processor has a clustering engine that includes a student identification module that identifies student clusters and associated metadata having characteristics of each of the student clusters. The clustering also includes an assessment identification module identifies assessment data clusters among assessment data for students belonging to the student clusters, which is performed concurrent with the student identification module identifying student clusters. A display module compiles the metadata related to the student clusters and the assessment data clusters, and provides relationships between the student clusters and the assessment data clusters with the metadata in a visible medium.","In another embodiment, a system for educational assessment of students is disclosed that comprises a processor having a memory, wherein the processor has a clustering engine that includes a student identification module that identifies student clusters based on metadata having characteristics of students within each student cluster and is associated with a hierarchy of assessment data of one or more formative assessments. The hierarchy of assessment data is related to different levels of demonstrated knowledge by students based on the formative assessments. A display module that compiles the metadata related to the student clusters and the assessment data clusters, and provides relationships between the student clusters and the assessment data clusters with the metadata to a visible medium in response to co-clustering of student data and assessment data. The student clusters are assigned to hard clustering so that each student is associated with only one student cluster and the assessment data is assigned to soft clustering so that the assessment data is not confined to being associated with only one assessment cluster. In addition, the assessment data includes data related to student responses to assessment evaluations of each formative assessment and each assessment evaluation includes a question for evaluation of each student that is associable with more than one assessment cluster.","In yet another embodiment, a method for co-clustering student data and assessment data from formative assessments on a processor is disclosed. The processor has a memory storing executable instructions for the method. The method comprises transforming student data from formative assessments into one or more bipartite graphs and mapping adjacency relationships between the students and the assessment data by creating one or more adjacency matrices from the one or more bipartite graphs. The data is then clustered into student clusters and the assessment data from the formative assessments into assessment data clusters while extracting metadata pertaining to each student cluster. The metadata includes characteristics of students belonging to each student cluster as well as any additional data pertaining thereto.","The following description and annexed drawings set forth in detail certain illustrative aspects and implementations of this disclosure. These are indicative of only a few of the various ways in which the principles of the disclosure may be employed.","One or more implementations of the present disclosure will now be described with reference to the attached drawings, wherein like reference numerals are used to refer to like elements throughout.","Aspects of the exemplary embodiment relate to systems and methods to dynamically assess student data by automatically extracting actionable insights from assessment data as it is received and present the insights to the teachers, parents and students alike. One such view that can be extracted from the data is the information regarding clusters of students and the problem areas specific to each student cluster. Aspects of the systems and methods provide a co-clustering based approach to simultaneously discover student clusters as well as the defining characteristics of the cluster (e.g., questions that the students answered incorrectly, a specific concept which a set of students could not master, and\/or an error mode common among the students). The assessment data can be accumulated in a highly granular detail with a system more detailed in a related U.S. application, namely U.S. Patent Publication Number 2010\/0157345 by Robert M Lofthus et al, which is incorporated herein by reference in its entirety and reproduced in sections herein.","Referring to the drawings,  shows an illustration of an educational assessment system in accordance with the present disclosure. System  includes stages  through . A teacher and\/or school administrator may utilize system . A teacher identifies herself to the MFD  during stage  by logging into system . The teacher can log into system  utilizing any authentication and\/or security technology. For example, the teacher (or authorized user) can log into system  using a unique ID, a username, an RFID tag, a smart card, a passphrase, and the like. Additionally or alternatively, the teacher logs into MDF  using a touch-screen display. Several formative assessments are presented to the teacher so that she can choose among them to print. The chosen assessments are then printed during stage . Each formative assessment includes assessment data that includes information about the concepts, error modes and\/or assessment evaluations therein. At stage , the teacher administers the formative assessments to one or more students. During stage , the teacher scans in or enters the data from the assessments into MDF . MDF  can convert the scanned assessment into a Page Description Language File, image data, and\/or other format. MDF  and\/or a server (not shown) may perform processing on the scanned assessments. During stage , the assessments are evaluated, e.g., an algorithm (not depicted) grades the assessments using a rubric (not depicted). Stage  evaluates the assessment by reviewing the human markings or answers to assessment evaluations (e.g., short questions, multiple choice, matching, essay and the like). The teacher may be notified by the algorithm that the assessments have been evaluated, e.g., via email, text message, a printed page and the like. During stage , the teacher can verify and\/or correct how the assessments were graded using personal computer . During stage , the teacher requests reports about the formative assessment to design other assessments and\/or to tailor the teaching of the students. Stages  and\/or  may be repeated several times. In other embodiments, stages  through  may vary in sequence, some stages may be performed in a serial manner or a parallel manner, and\/or some stages may be performed in a step-wise manner.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2","b":["200","202","204","206","200","208","210","212","214","200","216","218","220","222","226","228","200","202","202"]},"A bus  permits communication among the components of the system . The processor  includes processing logic that may include a microprocessor or application specific integrated circuit (ASIC), a field programmable gate array (FPGA), or the like. The processor  may also include a graphical processor (not shown) for processing instructions, programs or data structures for assessment data from formative assessments provided to students.","The memory  may include a random access memory (RAM) or another type of dynamic storage device that may store information and instructions for execution by the processor , a read only memory (ROM) or another type of static storage device that may store static information and instructions for use by processing logic; a flash memory (e.g., an electrically erasable programmable read only memory (EEPROM)) device for storing information and instructions, and\/or some other type of magnetic or optical recording medium and its corresponding drive.","The processor  drives the clustering engine , which includes the student identification module  and the assessment identification module . The student identification module  identifies student clusters and associated metadata that includes characteristics of students within each student cluster. For example, the characteristics may include data related to concepts, mastery of skills, problem areas, errors made, questions missed, and\/or other characteristics related to assessment evaluations provided to each student within a student cluster. The assessment identification module  identifies assessment data clusters among assessment data for students belonging to the student cluster.","The transformation engine  compiles the assessment received from formative assessments provided to students and in turn, creates bipartite relationships in bipartite graphs of student data for each student and the assessment evaluations. The adjacency mapping engine  maps adjacency relationships between students and the assessment data by creating at least one adjacency matrix from the one or more bipartite graphs. The decomposition engine  performs a spectral decomposition on the adjacency matrices and establishes weighted distances for each relationship, which is further detailed infra.","Referring now to , illustrated is an exemplary embodiment of an output  of a clustering engine, such as illustrated in the clustering engine  of  above that co-clusters student data into student clusters and assessment data into assessment data clusters in order to help teachers more easily identify clusters of students and the problem areas within these clusters, helping him or her to take remedial actions to address issues therein. The clustering engine  of  identifies clusters of students and simultaneously determines metadata for each cluster with characteristics of the student clusters (e.g. what questions or assessment evaluation do they most often get wrong). Other characteristics may also be identified from the formative assessments of the students, such as points of error (i.e., error modes), which indicate how or in what manner an error is being made. In addition, concept mastery and\/or a standard\/level of mastery can be part of the characteristics in the metadata related to the students and\/or the student cluster that a student belongs to. For example, other characteristics may be a set of questions that the students answered incorrectly or a specific concept, which a set of students could not master.","An example of one output view  that is extracted from the data by the clustering engine is shown in . For example, the information regarding clusters of students and the problem areas specific to each student cluster can be extracted by a co-clustering based approach to simultaneously discover student clusters as well as the defining characteristics of the cluster (e.g. a set of questions that the students answered incorrectly or a specific concept, which a set of students could not master).",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 3","FIG. 2"],"b":["314","312","216","306","316","1","2","4","5","216","310","308","2","3","7","8","9","10","302","304","1","2","2","3","302","4","5","7","8","9","10","304"]},"The co-clusters identified from the data can be used in several ways. It can help the teacher to easily identify clusters of students and the problem areas within these clusters, helping her or him to take remedial actions to address issues with a classroom. The co-clusters identified from a prior assessment could also help in automated generation of subsequent formative assessments.","An example methodology  for co-clustering student data and assessment data from formative assessments provided to students with a processor having a memory storing executable instructions for the method is illustrated in . While the method  is illustrated and described below as a series of acts or events, it will be appreciated that the illustrated ordering of such acts or events are not to be interpreted in a limiting sense. For example, some acts may occur in different orders and\/or concurrently with other acts or events apart from those illustrated and\/or described herein. In addition, not all illustrated acts may be required to implement one or more aspects or embodiments of the description herein. Further, one or more of the acts depicted herein may be carried out in one or more separate acts and\/or phases.","The method  is described in conjunction with other figures described herein for ease of explanation and example. However, the method  is not limited to any one aspect of an embodiment provided in the other figures. The method  initiates at  with data preprocessing and transformation of student groups and assessment data compiled from formative assessments. The preprocessing and transformation that could be performed by the transformation engine  of the educational assessment system  as described above for example. Preprocessing gathers the data from student assessments provided to the students. The student data is then formed into one or more bipartite graphs, which are illustrated further in .","Referring to , illustrated is a bipartite graph representing student data and assessment data with different relationships therebetween. Student performance data is represented as a bipartite graph at  of the method  by a transformation engine , for example. The different relationships that are created include student-item bipartite relationships as shown in the bipartite graph , student-concept relationships as shown in a bipartite graph , and student to error mode relationships as shown in a portion of a bipartite graph .","In one example, bipartite graph  illustrates the student-Item bipartite relationships formed by the transformation engine of the educational assessment system. The students (e.g., S, S, S, S and S) are represented by a square and the questions as circles. A line from the student to a question represents that the student gave an incorrect response to that question (or skipped that question).","In another example, bipartite graph  illustrates the student-concept bipartite relationship. When a formative assessment measures the student performance on multiple concepts (e.g. Addition, Long division etc.), the bipartite graphs may be formed in order to cluster students based on their performance in these concepts. Also here, the students are represented as square blocks and the concepts as circles. The weight between a student and the concept is the measure of student mastery of that particular concept. In addition, the length or distance of the line may represent a weight provided to the missed or skipped question for a weighted distance. Various other means may also be envisioned for representing the weight of the relationships. In one embodiment, the weights may be varied, either manually or via user interface controls of the system. Therefore, certain concepts proving more difficult or taught with more stress could be evaluated differently in relation to other relationships shown in the graph.","Referring again to , the method  at  continues to pre-process and transform assessment data compiled from formative assessments of students by creating adjacency relationships from the bipartite graphs shown in , for example. An adjacency mapping engine  as shown in  maps the relationships between students and the assessment data from the bipartite graphs into matrices. This enables further decomposition of the data with algorithms at  of the method.","At  a decomposition of the adjacency matrices formed at  is performed by a decomposition engine , which performs a spectral decomposition on the adjacency matrices and establishes weighted distances for each relationship. For example, a spectral decomposition is performed with student data from the adjacency matrices. The \u201cSpectrum\u201d values of a graph are the eigenvalues of a graph ordered on the strength of their corresponding eigenvalues. The spectrum provides valuable insights into the connectivity of a graph. The objective of spectral decomposition of the adjacency data is two-fold: to estimate three different types of distances: Student-Student, Question-Question and Student-Question. The Student-Student distances and Question-Question distances are between homogenous entities only. By transforming the data into an adjacency representation and by applying spectral decomposition, in addition to the similarities between homogenous entities, the system , for example, is also able to compare the distances between dissimilar entities (e.g. students and questions). The weighted distances establish the amount of truth degree or probability for a connection between students and the student data, for example. Thus, the decomposition helps in co-clustering of students and questions. The data has high dimensionality and applying clustering on the raw data will suffer from the \u201ccurse of dimensionality\u201d, i.e., it will result in imprecise clusters. However, by applying spectral decomposition on the adjacency data, the system is able to focus on a few dimensions with the highest variability, and thus, results in more accurate clusters.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 6","b":"222"},"Referring back to , the method continues at  where a clustering algorithm is performed by a clustering engine on the data. One way to facilitate individualized learning experiences for a student is to group the student with other students having similar problem areas as seen from the administration of a formative assessment. The co-clustering is based on the Fuzzy-C-Means (FCM) clustering algorithm. The FCM algorithm takes the spectrum S, and the value k (desired number of clusters) as inputs and for each record S, (which can represent either a student or question) generates cluster membership probabilities, P={p, p, . . . , p}, where prepresents the probability that the record belongs to a cluster x. The fuzzy cluster assignment algorithm is shown in . The algorithm assigns students to one among the k clusters (e.g., hard clustering basis), but it can assign questions to multiple clusters (e.g., soft clustering basis) based on their membership probabilities. At  hard clustering is done on student data and at  concurrently soft clustering is done on questions.","At  reporting of the co-clustering data is performed in a display and\/or at a visible medium. Examples of the reporting of co-cluster information are illustrated at . At  questions are provided in the vertical left side column  and students along a horizontal top row . Co-clusters of data are shown in the top left quadrant (Co-cluster ) between a group of students and questions missed. Further clustering can also be performed within the data to obtained more finely tuned levels of knowledge and skills so that clusters are formed within clusters of students. For example, if particular assessment evaluations are multiple-choice, students may also be clustered according to the answer they provide or the error mode of the student despite whether the answer is correct or not. Certain errors may indicate where guidance is needed among a subject matter or how misunderstanding is occurring with a particular topic. Co-cluster , for example, illustrates a different co-cluster of student data pertaining to a different set of questions. The highlighted portions of each co-cluster (Co-cluster  and ) represent incorrect answers corresponding to the students. The reporting illustrated in  thus illustrates how co-clustering of data can be easily visualized. Another embodiment for reporting co-clustering of student and assessment data is illustrated in . Here, different colors or other patterns indicate the different clusters and lines from question to student indicate the different mistakes among students.","Although not required, embodiments are described in the general context of \u201ccomputer readable instructions\u201d being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media (discussed below). Computer readable instructions may be implemented as program modules, such as functions, objects, Application Programming Interfaces (APIs), data structures, and the like, that perform particular tasks or implement particular abstract data types. Typically, the functionality of the computer readable instructions may be combined or distributed as desired in various environments.","The exemplary method may be implemented on one or more general purpose computers, special purpose computer(s), a programmed microprocessor or microcontroller and peripheral integrated circuit elements, an ASIC or other integrated circuit, a digital signal processor, a hardwired electronic or logic circuit such as a discrete element circuit, a programmable logic device such as a PLD, PLA, FPGA, or PAL, or the like. In general, any device, capable of implementing a finite state machine that is, in turn, capable of implementing the flowchart shown herein.","The methods illustrated and related herein may be implemented in a computer program product that may be executed on a computer. The computer program product may be a tangible computer-readable recording medium on which a control program is recorded, such as a disk, hard drive, or may be a transmittable carrier wave in which the control program is embodied as a data signal. Common forms of computer-readable media include, for example, floppy disks, flexible disks, hard disks, magnetic tape, or any other magnetic storage medium, CD-ROM, DVD, or any other optical medium, a RAM, a PROM, an EPROM, a FLASH-EPROM, or other memory chip or cartridge, transmission media, such as acoustic or light waves, such as those generated during radio wave and infrared data communications, and the like, or any other medium from which a computer can read and use.","It will be appreciated that variants of the above-disclosed and other features and functions, or alternatives thereof, may be combined into many other different systems or applications. Various presently unforeseen or unanticipated alternatives, modifications, variations or improvements therein may be subsequently made by those skilled in the art which are also intended to be encompassed by the following claims."],"heading":["BRIEF DESCRIPTION","DETAILED DESCRIPTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
