---
title: Method and apparatus for maintaining data integrity
abstract: Techniques are provided for controlling data access to maintain data integrity. A request is received to perform an action on a data element. The request is analyzed based on at least one data access rule associated with the data element. This analysis further utilizes a data structure model associated with the data element. The request is approved if the request satisfies the data access rule. The request is rejected if the request does not satisfy the data access rule.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07039649&OS=07039649&RS=07039649
owner: Sun Microsystems, Inc.
number: 07039649
owner_city: Santa Clara
owner_country: US
publication_date: 20020517
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The systems and methods described herein relate to controlling data access to maintain the integrity of a data set.","Reading and writing data is a common event in computing environments. A particular computing device may read data from an internal storage device or from an external data source coupled to the computing device. Similarly, the computing device may write data to the internal storage device or to an external data storage device. When the data read or data write operation is performed between two devices (e.g., a data source and a data destination), the procedure is relatively straightforward. However, when multiple devices attempt to read and\/or write the same data at the same time, problems may occur. For example, if one user attempts to read data that is being deleted or modified by another user, the read operation may produce inaccurate data or the read operation may fail.","Similarly, if two or more users are attempting to modify or delete the same data at the same time, errors may occur. If one user deletes a particular data element while another user is attempting to modify the same data element, an error or corrupted data is likely to result. Additionally, modification of one data element may affect one or more other data elements. For example, deleting a parent data element in a data hierarchy may result in deletion of all child data elements.","One solution to these problems involves limiting the use of a data storage system to a single user at a time. Such a solution is undesirable because many users may be prevented from accessing the data storage system, even though the users are attempting to access different sets of data. This solution is particularly troublesome in web-based data storage systems that can be accessed by thousands of different users simultaneously.","Accordingly, there is a need for systems and methods that allow multiple users to access data in a data storage system but prevents users from performing operations that might jeopardize the integrity of the data set or the integrity of the data processed by the operation.","The systems and methods described herein control access to data such that the integrity of the data is maintained. A control mechanism receives data access requests (e.g., read operations, write operations, or delete operations) and determines whether each particular data access request should be approved. Determining whether to approve a particular data access request includes applying one or more data access rules to the request.","In one embodiment, a system receives a request to perform an action on a data element. The request is analyzed based on at least one data access rule associated with the data element. This analysis further utilizes a data structure model associated with the data element. The request is approved if the access rule is satisfied by the request. The request is rejected if the access rule is not satisfied by the request.","In another embodiment, a system receives a hypertext transfer protocol (HTTP) request message including information relating to a requested action and a particular data element. The requested action is analyzed based on a set of data access rules associated with the data element. The requested action is executed if the requested action satisfies the set of data access rules. The requested action is rejected if the requested action does not satisfy the set of data access rules.","The systems and methods described herein control access to a data set to maintain the integrity of that data set. For purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the various systems and methods. It will be apparent, however, that the systems and methods described herein may be implemented without these specific details. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 1","FIG. 1"],"b":["100","102","104","106","108","110","112","114","102","104","106","108","102","106","108"]},"The computing devices \u2013 shown in  may be located in different geographic areas, such as different offices or homes in various parts of the world. Communication links \u2013 may utilize any type of wired or wireless communication medium, or any combination of wired and wireless communication mediums. For example, one or more communication link \u2013 is established via the Internet and another communication link is established via a local area network (LAN).","Data access controller  receives data access requests from one or more computing devices coupled to the data access controller. These data access requests may include, for example, read data requests, write data requests, or delete data requests. Data access controller  parses certain information from the data access requests, such as the requested action (e.g., read, write or delete) and the data element or data node on which the action is to be performed. This parsed information is provided to a permission verifier  via a communication link . Permission verifier  determines whether a data access request can be fulfilled. The operation of permission verifier  is discussed in greater detail below. Communication link  can use any type of communication medium and any communication protocol(s).","Permission verifier  is coupled to a data structure model  and a set of data access rules . Data structure model  maintains dependencies and relationships among various data nodes in a database . Database  is capable of storing multiple data elements or data entries, typically in tabular format. Data structure model  represents the structure of the data stored in database , but not the data itself. For example, data structure model  may represent a tree structure or other arrangement of data. The information stored in data structure model  may also be referred to as \u201cmetadata\u201d. Data structure model  maintains various status information for each data node, such as read, write and delete status information. A particular data structure model may store multiple different trees and other data arrangements. Although particular types of data and data structures are discussed herein, the systems and methods described can be used with any type of data and any data structure.","Data structure model  communicates with database  periodically via a communication link  to update the data structure model based on changes to the data stored in the database. Although the data stored in database  may change frequently, the structure of that data is not likely to change as frequently. Thus, updates of data structure model  may be performed as a background task or performed when permission verifier  is not requesting data from the data structure model.","In the embodiment of , data access controller , permission verifier , data structure model  and data access rules  are illustrated as separate components. However, in alternate embodiments any two or more of these components can be combined with one another. In a specific embodiment, data access controller , permission verifier , data structure model  and data access rules  are contained in a server.","In a particular embodiment, environment  is a Java\u2122 environment implemented using the Java 2 Enterprise Edition (J2EE) platform from Sun Microsystems, Inc. of Palo Alto, Calif. The J2EE platform is designed to provide server-side and client-side support for distributed, multi-tier applications. J2EE is a platform-independent environment that can be used to develop, build and deploy web-based enterprise applications. Enterprise JavaBeans\u2122 (EJB) is a Java application programming interface (API) that defines a component architecture for the multi-tier client\/server systems. Java and JavaBeans are trademarks of Sun Microsystems, Inc.","In this Java-based environment, requests are received as HyperText Transfer Protocol (HTTP) request messages. HTTP is the underlying protocol used by the world wide web. HTTP defines how messages are formatted and transmitted, and what actions web servers and web browsers should take in response to various commands. For example, HTTP request messages include an initial line, optional header lines, a blank line and an optional message body. The HTTP request messages use this message body to communicate an action that the originator of the request message would like to have performed and an identifier of a data element on which the action is to be performed. As mentioned above, permission verifier  parses this action information and data element identifier from the HTTP request. In this Java-based environment, the data access controller  uses Enterprise JavaBeans to make API calls to permission verifier  and other components.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 2","FIG. 1","FIG. 1"],"b":["200","202","204","108","206","116","208","212","214"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 3","FIG. 1","FIG. 1"],"b":["300","302","120","122"]},"The procedure then applies appropriate data access rules to the request (block ). Depending on the situation, one or more of the data access rules may not be appropriate for a particular user. For example, if the request is to delete a data entry, rules relating to reading a data entry or writing a data entry are not likely to be applicable to the request.","At block , the procedure  determines whether the appropriate data access rules have been satisfied. If so, the user's request is approved at block . However, if the appropriate access rules are not satisfied, the procedure continues to block  to determine whether a write error occurred. If so, the user is instructed to resubmit the request at a later time (block ).","In a particular embodiment, the data access controller or the permission verifier maintains a log of the average amount of time spent implementing a particular type of action. For example, a typical write action may take ten minutes while a typical delete action may takes a few seconds. Although an actual write operation may take less than a second, the system tracks the total time a user spends modifying data and performing other tasks before finally writing the new or modified data to a database, thereby allowing another user to access the data that was being modified. The instruction given to the user to resubmit the request gives an approximate time that the user should resubmit the request. This approximate time is based on data in the log regarding the average amount of time spent implementing the current action. Alternatively, the instruction may instruct the user to wait a particular time period before resubmitting the request instead of providing a specific time.","Referring again to , if a write error did not occur, then it is likely that a delete error occurred. In a particular embodiment, there are two error messages that can result in denying a requested action: a write error and a delete error. The write error indicates that another user is modifying the same data element. The delete error indicates that the data element has been deleted. Since a write error was not detected in block , the procedure continues to block  knowing that the error generated is a delete error. At block , the user is notified that the selected data element has been deleted. Finally, the user's request is not approved (block ), so the user's request is rejected at block  in .",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 4","b":["400","402","404"]},"After modifying the status of the appropriate data elements, the requested action is implemented (block ). Block  checks to see whether the requested action is complete. When the requested action is complete, the status of the data elements (e.g., the specific data element being modified and its associated data elements) is updated in the data structure model (block ). Next, the change that resulted from the requested action is broadcast to other users of the data (block ), thereby allowing the other users to view the change, if desired. The changes may be \u201cbroadcast\u201d via email, an instant messaging service, or other communication mechanism. In a particular embodiment, multiple users are collaborating on a project involving a data structure of the type discussed herein. In this embodiment, the other users collaborating on the project are notified of the change. The other users can approve the change, disapprove the change, or make further modifications.","To give all users an opportunity to view changes, the procedure  prevents other users from modifying changes for a particular time period (block ). Depending on the magnitude of the changes, the number of other users and\/or the typical frequency with which the other users access the data, the time period may vary from a few minutes to a few days or longer. In specific embodiments, the time period may be of any duration. After the time period has passed, the status of the specific data element and its associated data elements is reset to an \u201cavailable\u201d or \u201cunlocked\u201d state (block ), thereby allowing other users to perform actions on the data elements.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIGS. 5 and 6","FIG. 5"],"b":["500","600","500","502","504","506","508"]},"Data access rules  identify the results of an action requested by a parent data element based on the current status of an associated child. A first column  identifies the current status of the particular data element. The next column  identifies the three results associated with a request to read the particular data element. If the status is \u201creading\u201d, the read request is approved. If the status is \u201cwriting\u201d or \u201cdeleting\u201d, the read request is not approved (the request fails). A third column  identifies the three results associated with a request to write to the particular data element. In the example of , all results in this column are a failure of the request. A fourth column  identifies the three results associated with a request to delete the particular data element. Again, all results in this column are a failure of the request. Although data access rules  and  are very similar, alternate embodiments may have significantly different data access rules for individual data elements as compared to parents retrieving data based on the status of one or more associated children.","The data access rules  and  represent example results of various requests based on the status of a data element. In alternate embodiments, one or more of the results illustrated in  and\/or  can be changed, based on the desired operating characteristics of the system. In other embodiments, one or more data access rules may be defined using a different mechanism, such as a set of logical conditions, rather than using a table format. An example set of logical conditions is:",{"@attributes":{"id":"p-0039","num":"0038"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IF Request=Read AND (Status=Reading OR Status=Writing) THEN Approved"]},{"entry":[{},"IF Request=Read AND Status=Deleting THEN Fail"]},{"entry":[{},"If(Request=Write OR Request=Delete) AND (Status=Reading OR Status=Writing"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"OR Status=Deleting) THEN Fail"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 7","b":["700","702","700","704","706","708","704","708","702","2","3","3","708","3","2","3","1"]},"In a particular example, data structure model  represents the data associated with a collaborative project involving multiple users. In this example, it is important that each of the multiple users has an opportunity to review changes to the data entered by another user. Thus, when a change is made by one user, other users are notified of the change. The status of the data element (or elements) associated with the change is locked for a period of time to allow other users to see the change before another user enters further changes, deletes the previous changes, or deletes the data element.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 8","b":["800","800","802","804","802","800","806","802","804","806","804","800","808","802","804","810","802"]},"Computer system  may be coupled via bus  to a display , such as a cathode ray tube (CRT), for displaying information to a computer user. An input device , including alphanumeric and other keys, is coupled to bus  for communicating information and command selections to processor . Another type of user input device is cursor control , such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor  and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify positions in a plane.","The described systems and methods are related to the use of computer system  for implementing various techniques described herein. According to one embodiment, those techniques are performed by computer system  in response to processor  executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory  from another computer-readable medium, such as storage device . Execution of the sequences of instructions contained in main memory  causes processor  to perform the process steps described herein. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the systems and methods described herein. Thus, the described systems and methods are not limited to any specific combination of hardware circuitry and software.","The term \u201ccomputer-readable medium\u201d as used herein refers to any medium that participates in providing instructions to processor  for execution. Such a medium may take many forms, including but not limited to, non-volatile media, volatile media, and transmission media. Non-volatile media includes, for example, optical or magnetic disks, such as storage device . Volatile media includes dynamic memory, such as main memory . Transmission media includes coaxial cables, copper wire and fiber optics, including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves, such as those generated during radio-wave and infra-red data communications.","Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, or any other magnetic medium, a CD-ROM, any other optical medium, punchcards, papertape, any other physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, any other memory chip or cartridge, a carrier wave as described hereinafter, or any other medium from which a computer can read.","Various forms of computer-readable media may be involved in carrying one or more sequences of one or more instructions to processor  for execution. For example, the instructions may initially be carried on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system  can receive the data on the telephone line and use an infra-red transmitter to convert the data to an infra-red signal. An infra-red detector can receive the data carried in the infra-red signal and appropriate circuitry can place the data on bus . Bus  carries the data to main memory , from which processor  retrieves and executes the instructions. The instructions received by main memory  may optionally be stored on storage device  either before or after execution by processor .","Computer system  also includes a communication interface  coupled to bus . Communication interface  provides a two-way data communication coupling to a network link  that is connected to a local network . For example, communication interface  may be an integrated services digital network (ISDN) card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface  sends and receives electrical, electromagnetic or optical signals that carry digital data streams representing various types of information.","Network link  typically provides data communication through one or more networks to other data devices. For example, network link  may provide a connection through local network  to a host computer  or to data equipment operated by an Internet Service Provider (ISP) . ISP  in turn provides data communication services through the world wide packet data communication network now commonly referred to as the \u201cInternet\u201d . Local network  and Internet  both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link  and through communication interface , which carry the digital data to and from computer system , are exemplary forms of carrier waves transporting the information.","Computer system  can send messages and receive data, including program code, through the network(s), network link  and communication interface . In the Internet example, a server  might transmit a requested code for an application program through Internet , ISP , local network  and communication interface .","The received code may be executed by processor  as it is received, and\/or stored in storage device , or other non-volatile storage for later execution. In this manner, computer system  may obtain application code in the form of a carrier wave."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The systems and methods described herein are illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings. Similar reference numbers are used throughout the drawings to reference similar elements and features.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIGS. 5 and 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
