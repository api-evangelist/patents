---
title: Identifying synonyms of entities using a document collection
abstract: Identifying synonyms of entities using a collection of documents is disclosed herein. In some aspects, a document from a collection of documents may be analyzed to identify hit sequences that include one or more tokens (e.g., words, number, etc.). The hit sequences may then be used to generate discriminating token sets (DTS's) that are subsets of both the hit sequences and the entity names. The DTS's are matched with corresponding entity names, and then used to create DTS phrases by selecting adjacent text in the document that is proximate to the DTS. The DTS phrases may be analyzed to determine whether the corresponding DTS is synonyms of the entity name. In various aspects, the tokens of an associated entity name that are present in the DTS phrases are used to generate a score for the DTS. When the score at least reaches a threshold, the DTS may be designated as a synonym. A list of synonyms may be generated for each entity name.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08533203&OS=08533203&RS=08533203
owner: Microsoft Corporation
number: 08533203
owner_city: Redmond
owner_country: US
publication_date: 20090604
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The Internet enables access to a vast archive of data that may be exploited to provide users with a great wealth of information. However, the enormous amount of information made available via the Internet may also be difficult navigate. For example, a search of the Internet using a term that is too generic may result in millions of results, many of which are unhelpful to a search recipient. Conversely, a search that is too specific or narrow may exclude many pertinent results that may be helpful to the search recipient.","When authors generate documents for publication, such as via the Internet, the authors are typically free to select descriptors (names, identifiers, etc.) for entities discussed in their documents. Often, authors shorten a long identifier of an entity (e.g., product, title, or other identifier) to create a shorter phrase to refer to the entity. These phrases can be an individual's preferred description of the entity. Thus, the descriptor is a short identifier of the entity's conventional name. Some entities include many descriptors which may make locating an entity during an Internet search more difficult than if the entity used a same identifier.","In an example, an author may refer to a product (entity) by only the model number (a possible descriptor) rather than a longer conventional name that may include the manufacturer, class, or other identifying features listed in a complete (formal) identifier of the product. Additionally, some authors may select different descriptors for identical entities such that an Internet search of only one descriptor may not retrieve all documents discussing the entity because some authors do not use the searched descriptor.","Identifying synonyms of entities using a collection of documents is disclosed herein. In some aspects, a document from a collection of documents may be analyzed to identify hit sequences that include one or more tokens (e.g., words, numbers, etc.) of entities in an entity list. The hit sequences may be matched to the entities to determine discriminating token sets (DTS) that are sub-sequences of the hit sequences. Next, the DTS's may be used to generate a DTS phrase by selecting adjacent text that is proximate the DTS in the document. The DTS phrase may be analyzed to determine whether the corresponding DTS is a synonym of the entity name(s) by comparing a score assigned to the DTS, based on the DTS phrase, over various occurrences of the DTS, which are likely in a large document collection.","In various aspects, the tokens of an associated entity name that are present in the DTS phrase are used to generate a score for the DTS. The score may be aggregated for many instances (e.g., documents). When the aggregated score at least reaches a threshold, the DTS may be designated as a synonym. A list of synonyms may be generated for each entity name.","In further aspects, the hit sequences may be arranged in a suffix tree. The suffix tree may be analyzed to identify suffix links, which may be exploited to efficiently map DTS's to entity names, thus reducing redundancy during processing and identification of the synonyms.","This summary is provided to introduce simplified concepts of identifying synonyms of entity names, which is further described below in the Detailed Description. This summary is not intended to identify essential features of the claimed subject matter, nor is it intended for use in determining the scope of the claimed subject matter.","Overview","To enable more comprehensive document searches, it may be desirable to identify \u201csynonyms,\u201d of entity names by exploiting usage of the entity names in a document collection. The entity names are author-generated descriptors that are used to reference an entity. Synonyms with a strong correlation to the entity name may be identified by analyzing multiple uses of the synonym in various documents. Synonyms may be helpful to enable searching documents sources, such as the Internet, to locate relevant information for an entity.","Synonyms of an entity name may be determined after analyzing discriminating token sets (DTS's) extracted from a document collection. The DTS's may be used to create DTS phrases which include groups of text that surround the DTS in the documents. The DTS phrases may be analyzed to determine whether corresponding DTS's are synonyms of the entity name. A list of synonyms may be generated for an entity name. These techniques, and others, are discussed in more detail below.","Illustrative Environment",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1","b":["100","100","102"]},"The servers  may store an entity name list  that includes entity names . The entity names  may be conventional names of known entities. The entities may be products, titles, subjects, or anything else an author may use to describe something of interest. For example, the entity name  of a particular computer may be \u201cAcme Pro F150 Laptop.\u201d The entity names  are formed of a combination of tokens . The tokens  may be words, numbers, symbols, objects, and so forth (or a combination thereof). For example, \u201cAcme,\u201d \u201cPro,\u201d \u201cF150,\u201d and \u201cLaptop\u201d are the tokens  of the entity name  of \u201cAcme Pro F150 Laptop.\u201d","In addition, the servers  may also include a document collection . The document collection  may be stored locally or remotely and made available to the servers . For example, the document collection  may be made available for access via the Internet, a document library, or other large repository of documents.","In accordance with various embodiments, the servers  may perform a scan operation  (i.e., review, search) of documents in the document collection  for one or more instances of the tokens  to generate a hit sequence list . In some embodiments, the scan operation  is performed by scanning for individual tokens, contiguous token pairs, or other instances of the tokens , which create hit sequences . The hit sequences  may be contiguous instances of tokens from the entity names  and may be of any length of tokens. In various embodiments, the scan operation  may systematically extract token combinations as the hit sequences  from a document to populate the hit sequence list  and then advance to another document in the document collection until all documents have been scanned and all hit sequences have been obtained. In this way, a large document collection may be \u201cpruned\u201d to only include relevant instances of the hit sequences  that are stored in the hit sequence list . In some embodiments, multiple instances of the hit sequences  may be extracted from a single document while other documents may not include any instances of the hit sequences (e.g., a document of the document collection  does not discuss the entities names ).","In some embodiments, the hit sequences  may be matched to the entity name list  to populate a discriminating token set (DTS) list  of DTS's . The DTS  is a sub-sequence of the hit sequence  and a subset of the entity name , which is matched to the DTS. As a subset of tokens of the entities, the DTS  may discriminate a corresponding entity from the other entities in the entity name list because a frequency of the DTS over the entity list is small. For example, the entity name \u201cAcme Pro F150 Laptop\u201d may have a DTS of \u201cAcme Pro\u201d which is a sub-sequence of a hit sequence of \u201cAcme Pro Notebook.\u201d After each document is subjected to the scanning operation , some entities may include multiple DTS's while other entities may not have a DTS from each document.","In accordance with various embodiments, the DTS's  may be combined with data from the document collection  to populate a DTS phrase list  of DTS phrases . The DTS phrase  includes the DTS  and a predetermined number of tokens that are adjacent to the DTS  in the document where the DTS appears. In some embodiments, the DTS phrases  may be populated by scanning the document collection  a second time. The quantity of the accompanying tokens (thus the size of the DTS phrase  including the hit sequence ) may be predetermined and stored as an input variable. For example, the input variable may determine the number of tokens (e.g., words, characters, etc.) that are selected before\/after the hit sequence  to define the DTS phrase .","An analyzer  may analyze the DTS phrases  of the DTS phrase list . In some embodiments, the analyzer  may analyze the DTS phrases  to identify a count of the tokens  of the entity names , or other relevant data to determine whether the DTS  of the DTS phrase  is a synonym of one of the entity names . When the analyzer  determines that the DTS  in the DTS phrase  is a synonym of the entity name, then the DTS  may be stored in a synonym list  as a synonym . Otherwise, the DTS  may be omitted from being included as a synonym.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2","b":["200","106","202","200","202","106","128","106","128","128"]},"The computing device  may include one or more processors  and a memory . The memory  may include volatile and\/or nonvolatile memory, removable and non-removable media implemented in any method or technology for storage of information, such as computer-readable instructions, data structures, program modules or other data. The memory  of the computing device  may store a number of components such as an input module , a document analysis module , a scoring module , and an output module , among other possible components.","The input module  may be configured to receive the entity name(s)  for processing by the computing device . For example, without limitation, the input module  may include a user interface that enables a user to selectively provide one or more of the entity names , which may be received by the input module  and stored by the computing device  for further processing.","In some embodiments, the document analysis module  may perform a variety of operations that may begin by identifying the hit sequences  in the document collection . The document analysis module  may also determine the DTS's  from the hit sequences  and match the DTS's  to a corresponding one of the entity names . In addition, the document analysis module  may extract token strings from a document of the document collection using the tokens  of the entity names , which ultimately may produce the DTS phrase list  of the DTS phrases .","In accordance with various embodiments, the scoring module  may analyze the DTS phrases , in combination with other available data such as the entity names , the tokens , and so forth to generate a score for the DTS  for an entity. The score may be compared to a threshold value, which when reached and\/or surpassed by the score, indicates that the DTS  is a synonym of one of the entity names . The threshold may be determined by selecting a value that, when reached or exceeded by the score, indicates that the DTS  is a synonym  of the entity names .","Finally, the output module  may output synonyms  for inclusion in the synonym list . For example, the output module  may store a DTS of the DTS's  as the synonym  in the synonym list  when the score indicates that the DTS is a synonym (e.g., after comparison to a threshold, etc.). The synonyms  may be stored in the synonym list  upon designation as a synonym or the synonyms may be stored in the synonym list via a batch process.","Illustrative Operation",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 3","b":["300","300","302","304","302","306","308","304","302","308","304","302","308"]},"The text  of the DTS phrase  may include some instances of tokens  that are included in an entity name  in addition to the tokens of the DTS . For example, some of the tokens  may be DTS tokens  of the DTS  while other instances of entity tokens  may not be included in the DTS . Some of the tokens may be contiguous while other tokens may be separated by various amounts of the text .","In accordance with some embodiments, a score  may be generated for the DTS  based on the tokens  located in the DTS phrase . For example, the score  may be based on the number or percent of the tokens  (e.g., absolute, unique occurrence, etc.) in the DTS phrase  as compared to tokens  of the entity name. Additional details of scoring techniques are discussed below with reference to . The score  may then be used to determine whether the DTS , which is derived via the document search , is a synonym of the entity name .",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 4","FIGS. 1-3"],"b":["400","400","400","400"]},"At , the document analysis module  may identify the hit sequences  in a document of the document collection . For example, the tokens  of the entity names  may be used to identify the hit sequences . In some embodiments, the servers  may perform the operation  by scanning each document of the document collection . The hit sequences  may be defined as any consecutive grouping of tokens in a document where the tokens are a subset of the tokens  in the entity name list .","At , the document analysis module  may determine the DTS  by comparing the hit sequences  to the entity names . The DTS  may be determined as a subset of both the hit sequence  and an associated one of the entity names . The DTS  may be associated with the entity name .","At , the document analysis module  may obtain the DTS phrase  for each DTS . The DTS phrase  may include a predetermined number of tokens (the gap ) that are adjacent to the DTS  as originally located in the document of the document collection . In some embodiments, the document may be scanned a second time to obtain the DTS phrase .","At , the document analysis module  may identify token pairs that are common between the entity name and the DTS phrase associated with the entity name. The token pairs may be tokens in the gap of the DTS phrase  (or  in ) that are obtained at the operation . The token pairs may be tokens that are a subset of both the entity name and the DTS phrase.","At , the scoring module  compute the score  for the token pairs of the DTS's . In some embodiments, the score  may be assigned to each of the DTS's  based on whether all (or a predetermined number) of the tokens  of the entity name  are included in the DTS phrase  as the token pairs, thus the score may be either one or zero {0,1}. For example, a value of \u201c1\u201d may be assigned to DTS with at least one occurrence of each of the tokens  in the DTS phrase. In various embodiments, other techniques and\/or calculations may be used to generate the score  for each of the DTS's . For example, the score  may be generated that weighs the quantity of the tokens in the token pairs. The score may result in a fractional score (e.g., 0.33 for one third of the tokens in the DTS phrase). Other scoring algorithms are contemplated that provide different weights to tokens (absolute, linear, exponential, etc.) that are included in the DTS phrase.","At , the servers  may determine whether another document should be analyzed using the operations -. If another document is analyzed, the process  may continue at the operation . When there are no additional documents, the process may continue at .","At , the scoring module  may compute an aggregate score that is representative of the score  for each unique instance of the DTS's  (e.g., average, median, etc.). Aggregating (e.g., averaging, etc.) all the scores of all of the DTS occurrences across multiple documents may generate an aggregate score for each of the DTS's .","At , the scoring module  may determine whether the aggregate score generated at  (or the score at ) at least reaches a threshold. When the score at least reaches the threshold, the DTS  may be designated as a synonym and added to the synonym list  at . When the score fails to at least reach the threshold, the DTS  may be omitted from the synonym list  at .","In accordance with various embodiments, the document analysis module  may perform the operations of the process  using an approach that scans the document once, twice, or more times to obtain the hit sequences and the DTS phrases. The number of document scans may be determined in part based on the size of the entity name list  and\/or a size of the document collection .","A two-scan approach includes a first scan of a document to obtain the hit sequences  and then a second scan of the document to obtain the gap  for the DTS phrase  (or ). A single-scan approach may be implemented when the number of entities is small enough that memory is not overrun during processing by the document analysis module . An index may be maintained for each token in the documents where the documents are cached in memory. However, this single-scan approach may not be feasible when the document collection  is sizable such that it is not feasible or practical to load an entity ID list (index) of the entities into memory because of memory capacity constraints. In these cases, the two-scan approach may be an efficient alternative to the single-scan approach.","In some embodiments, a map-reduce framework may be implemented to enable processing of large document collections. The map-reduce is a software framework that supports parallel computations over large data sets on clusters of computers. This framework consists of a \u201cmap\u201d phase and a \u201creduce\u201d phase. In the map phase, the master node separates the original problem up into smaller sub-problems and then distributes the sub-problems to multiple worker nodes. The worker nodes process the sub-problems problems to generate answers, which are then passed to a reduce phase. In the reduce phase, the master node combines the answers to all the sub-problems to obtain the answer to the original problem.","Additional Embodiments",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIGS. 5-6","FIGS. 7-8","FIG. 5","FIG. 7"],"b":["120","116","106","108","106"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 5","FIG. 5"],"b":["500","500","502","502","106"]},"The entity name list  may be used to generate a token table  as a filter list. The token table  may be populated with each unique instance of the tokens  of the entity names  in the entity name list . For example, the entity name list  of  includes four unique tokens of {A, B, C, D}.","In various embodiments, a document  that contains tokens (represented by combinations of letters in ) may be analyzed by the document analysis module . The document analysis module  may analyze the tokens in the document to populate a hit sequence list . The hit sequence list contains various instances of hit sequences  that are consecutive arrangements of the tokens of the token table  that are identified in the document .","In accordance with some embodiments, the hit sequence list  may be populated by extracting hit sequences  from the document , each hit sequence being of a maximum length of contiguous token combinations. Each of the hit sequences  may be used to create the DTS's , which are ultimately used to generate the DTS phrases  by selecting the text  of the document based on the gap  as shown in . Each of the DTS phrases  may be associated with one or more of the DTS's, which may ultimately be scored (e.g., the operation  of the process ) to determine whether the DTS is a synonym of the entity name .",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 6","FIG. 6"],"b":["600","600"]},"At , the server  may analyze the entity names  of the entity name list . In some instances, only a portion of a large collection of entity names may be included in the entity name list. For example, a large group of entity names may be divided into smaller groups of entity names, each being batch processed to determine synonyms of each entity name. In this way, the server  may manage memory to prevent buffer overflow or other occurrences that may disrupt processing of the entity names.","At , the server  may determine unique tokens in the entity names. The unique tokens may be used to populate the token table . In some embodiments, the token table  can be extended to use core token sets as shown in the operation . The core token sets are a collection of \u201cfrontier\u201d token sets whose subsets are small (contain less than a predetermined number (L) of tokens) and frequent (occur in more than a predetermined number (K) of entities). A token set S is not a core token set if all of the token set S's immediate subsets (with one less token, i.e., with |S|\u22121 tokens) are core token sets. The core token sets may have the following properties: (i) linear time (to the document length) table lookup in generating hit sequence; (ii) selective; and\/or (iii) compact in size.","At , the document analysis module  may populate the hit sequence list  with identified hit sequences  from the tokens in the document . The hit sequences  may be selected as the longest possible consecutive sequences of tokens from the token table  as arranged in the document . In some instances, the document  may contain no hit sequences while in other instances the document may contain one or more hit sequences . Additional documents may be processed according to the process  to extract hit sequences from the documents.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 7","b":["700","700","502","106","502","508","600","702","510","510","106"]},"In accordance with one or more embodiments, the suffix tree  may be formed by arranging tokens  of the hit sequences  as linked groups  (e.g., A, A-D, A-B, A-B-C, and so forth). Each of the hit sequences  is represented in the suffix tree  in the form of the linked groups . Suffix links  may be leveraged to increase efficiency of processing of the suffix tree . The suffix tree  is used to batch process the matching of the DTS  and the entity names  rather than matching the DTS to the entity names on a one-by-one basis, which may be inefficient.","The entity name list  may be used to generate a token index , which includes a list of each of token in the entity names  and a respective entity name position including the token (e.g., \u201cA: 1,4\u201d denotes that the token \u201cA\u201d is present in the entity names in position  (\u201cAC\u201d) and position  (\u201cACB\u201d)). In some embodiments, the token index  may be used to generate the hit sequence list  by identifying unique instances of the tokens (which may be equivalent to the token table  of ).","In some embodiments, the token index  may then modified as a combination token index  that includes indexes for combinations of tokens. For example, the combination of A-D may be \u2205 (empty set) because A:1,4 does not overlap with D:3 (no common index numbers). The combination of B-C may be BC:2,4 because B:2,4 overlaps with C:1,2,3,4 in two positions. The combination token table  may then be exploited to quickly determine any overlaps for the linked group of B-C-A-D by comparing the index of AD to BC (AD: \u2205, BC:2,4\u2192BCAD: \u2205). Accordingly, the identification and exploitation of the combination token index  reduces the processing time of mapping the entity names  to the DTS's of the hit sequences .","In accordance with various embodiments, a DTS map  is generated (via a verification process) using the combination token index  (or the token index ) and the suffix tree . The DTS map  includes a matching of the entity name  and a DTS . For example, the token \u201cA\u201d is the DTS  of the entity name  \u201cAC\u201d, which appears in the DTS map . However, the tokens \u201cBC\u201d is not one of the DTS's  of the entity name  \u201cAC\u201d, and thus is omitted from the DTS map . Finally, the DTS  may be used to generate the DTS phrase  with the gap  as described with reference to .",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 8","FIG. 7"],"b":"800"},"At , the document analysis module  may generate the token index  of each token of the entity names  with the corresponding entity name for the token. For example, the token \u201cA\u201d as shown in  may include an index of A:1,4 when the first and fourth entity names include the token of \u201cA.\u201d","At , the document analysis module  may generate the hit sequence list  that includes the hit sequences . In some instances, the filter process  (e.g., the operations  and\/or ) may be used to select the hit sequences  for inclusion in the hit sequence list .","At , the document analysis module  may generate the suffix tree  from the hit sequences . The suffix tree  may be stored as an array of the linked groups , or via other techniques to generate and store the suffix tree.","At , the document analysis module  may identify the suffix links  of the suffix tree . The suffix links  may be leveraged to increase efficiency of processing of the suffix tree ","At , the document analysis module  may generate the combination token index . The combination token index  may be created by determining indexes for token pairs or other groupings of tokens.","At , the document analysis module  may map the entity names  to the DTS  of the hit sequences  to create the DTS map . The DTS map  may be created using the combination token index  (or the token index ) and the suffix tree  in a verification process. The DTS map  may then be used by the operation  to retrieve the DTS phrases  to populate the DTS phrase list . In this way, the process  may be performed by including a first optimization of the filter process  and a second optimization of the suffix link process  to efficiently identify synonyms for entity names from the document collection .","Illustrative Computing System",{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 9","FIG. 1","FIG. 9"],"b":["900","900"]},"In a very basic configuration, the computing device  typically includes at least one processing unit  and system memory . Depending on the exact configuration and type of computing device, the system memory  may be volatile (such as RAM), non-volatile (such as ROM, flash memory, etc.) or some combination of the two. The system memory  typically includes an operating system , one or more program modules , and may include program data . The operating system  includes a component-based framework  that supports components (including properties and events), objects, inheritance, polymorphism, reflection, and provides an object-oriented component-based application programming interface (API). The computing device  is of a very basic configuration demarcated by a dashed line . Again, a terminal may have fewer components but will interact with a computing device that may have such a basic configuration.","The computing device  may have additional features or functionality. For example, the computing device  may also include additional data storage devices (removable and\/or non-removable) such as, for example, magnetic disks, optical disks, or tape. Such additional storage is illustrated in  by removable storage  and non-removable storage . Computer storage media may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. The system memory , the removable storage , and the non-removable storage  are all examples of computer storage media. The computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by the computing device . Any such computer storage media may be part of the computing device . The computing device  may also have input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, etc. Output device(s)  such as a display, speakers, printer, etc. may also be included. These devices are well known in the art and are not discussed at length here.","The computing device  may also contain communication connections  that allow the device to communicate with other computing devices , such as over a network. These networks may include wired networks as well as wireless networks. The communication connections  are one example of communication media. The communication media may typically be embodied by computer readable instructions, data structures, program modules, etc.","The illustrated computing device  is only one example of a suitable device and is not intended to suggest any limitation as to the scope of use or functionality of the various embodiments described herein. Other well-known computing devices, systems, environments and\/or configurations that may be suitable for use with the embodiments include, but are not limited to personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-base systems, set top boxes, game consoles, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and\/or the like. For example, some or all of the components of the computing device  may be implemented in a data center or cloud computing environment, such that resources and\/or services are made available via a computer network for selective use by client devices.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 10","FIG. 9"],"b":["1000","908","900"]},"In accordance with various embodiments, the document analysis module  may include a hit sequence identifier , a suffix tree identifier , and a DTS identifier , and a DTS phrase list selector . The hit sequence identifier  may be used to extract the hit sequences  from the document  of the document collection . For example, the hit sequence identifier  may perform some or all of the operations of the process  to populate the hit sequence list  with hit sequences  of the document .","In accordance with various embodiments, the suffix tree identifier  may be used to generate and manage the suffix tree  and identify suffix links  to efficiently batch process the hit sequences.","The DTS identifier  may used to identify the DTS's , which are sub-sequences of the hit sequences . In addition, the DTS identifier  may map the DTS's to the entity names .","The DTS phrase list selector  may be used to select the DTS phrases  for each of the DTS's . The phrase list selector  may select the text  of the document  using the gap  of a predefined length.","In accordance with some embodiments, the scoring module  may include a DTS phrase analyzer  and a score generator . The DTS phrase analyzer  may analyze the DTS phrases , which are associated with the DTS's  that are used to generate the DTS phrase. For example, the DTS phrase analyzer  may identify the tokens  included in the entity name  in the DTS phrase .","The score generator  may generate a score (the operation ) for each of the DTS's  and\/or an aggregate score for all of the DTS's (the operation ). In the latter case, the score generator  may generate a representative score for each of the DTS's  (e.g., an average, a median, etc.). The score generator  may then compare the DTS score (the score ) to a threshold value (e.g., via the operation ) to determine whether the DTS is a synonym  or not a synonym of the entity name .","Conclusion","The above-described techniques may be used to identify synonyms of entities a document collection. Although the techniques have been described in language specific to structural features and\/or methodological acts, it is to be understood that the appended claims are not necessarily limited to the specific features or acts described. Rather, the specific features and acts are disclosed as exemplary forms of implementing such techniques."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The Detailed Description is described with reference to the accompanying figures. In the figures, the left-most digit(s) of a reference number identifies the figure in which the reference number first appears. The same reference number in different figures refers to similar or identical items.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 6","FIG. 6"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 9","FIG. 1"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 10","FIG. 9"]}]},"DETDESC":[{},{}]}
