---
title: Determining semantic information of business applications
abstract: Various embodiments of systems and methods to determine semantic information of a plurality of business applications are described herein. In one aspect, a selection of user interface elements of a first business application and a second business application of the plurality of business applications are received. Further, data processing paths to a business object field and a corresponding database table field associated with the user interface elements are identified. Furthermore, semantic information of the plurality of business applications is determined by grouping the identified data processing paths, which can be used for applications such as business application integration, business data migration and the like.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09460415&OS=09460415&RS=09460415
owner: SAP SE
number: 09460415
owner_city: Walldorf
owner_country: DE
publication_date: 20111110
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Embodiments generally relate to computer systems and more particularly to methods and systems to determine semantic information of a plurality of business applications.","Enterprises often use different business applications built over time in different languages using different technologies. Also, the business applications run on different hardware platforms with inconsistent user interfaces. Typically, business data of a business application is stored in a database and a user interface is provided for a user to read, create and modify the business data. In addition, there is an increasing need for business-to-business integration (e.g., integration of different business applications) running on different business systems to easily modify and automate business processes to meet new needs (e.g., networked business applications).","Further, knowing binding information (e.g., a data processing path from a user interface element to a corresponding business object field and a database table field) is vital for integrating different business applications and also for other purposes such as data migration from one business application to another and the like. In other words, such purposes (e.g., business application integration, business data migration and the like) require a significant understanding of the capabilities, the terminology and also the database schemes of the business applications. Within the business application, the data processing path from the user interface element to the corresponding business object field and the database table field is either described by mapping techniques such as object relational mapping (using meta-data) or it is hidden behind programmed application logic (using coding), which are time consuming and expensive processes. Providing a simplified method to determine and document the data processing paths associated with the user interface elements of the business applications to simplify the process of integrating the business applications, business data migrations and the like may be desirable.","Various embodiments of systems and methods to determine semantic information of a plurality of business applications are described herein. In one aspect, a selection of user interface elements of a first business application and a second business application of the plurality of business applications are received. Further, data processing paths to a business object field and a corresponding database table field associated with the user interface elements are identified. Furthermore, semantic information of the plurality of business applications is determined by grouping the identified data processing paths, which can be used for applications such as business application integration, business data migration and the like.","These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings.","Embodiments of techniques to determine semantic information of business applications are described herein. A business application may include one or more business processes that help a business to increase productivity or measure the productivity. The business process may comprise a list of sequential and parallel business process steps that are executed on top of one or more business objects (i.e., business application servers) in a computer system. The computer system can support multiple business applications. In other words, one or more business applications can run on the same computer system. The computer system may be desktop computers, work stations, laptop computers, hand held computers, smart phone, console devices or the like.","According to one embodiment, user interfaces of the business applications are analyzed to identify the underlying business object fields and corresponding database table fields. Further, the semantic information of the business applications is determined by grouping the identified information of analogous of user interface elements of the user interfaces. In other words, the semantic information of the business applications is determined by analyzing the corresponding user interfaces of the business applications to find the data processing path down to the underlying business objects and to the database schemas. This semantic information documentation can then be used for the knowledge transfer in process integration, business data migration scenarios, technical business data type documentation and the like.","In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.","Determining semantic information of business applications makes the process of business application integration, business data migration from one business application to another and the like easier. According to one embodiment, the user interfaces of the business applications are analyzed to determine the semantic information of the business applications. Since the user interfaces are user friendly, the user can easily identify analogous user interface elements of the user interfaces. With respect to the user interface elements identified as analogous by the user, data processing paths of the user interface elements are identified. Further, the semantic information of the business applications is determined using the data processing paths. Determining the semantic information is described in greater detail in .",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 1","FIG. 2"],"b":["100","110"]},"In one exemplary embodiment, the user may be required to select a predetermined key combination to start the process of determining the semantic information of the plurality of the business applications. For example, \u2018Shift+Ctrl\u2019 can be set as the predetermined key combination to start the process of determining the semantic information of the business applications.","At step , data processing paths to a business object field and at least one corresponding database table field associated with the user interface elements of the first business application and the second business application are identified. In one embodiment, the data processing path defines binding information between the user interface element, corresponding business object field and database table field. For example, a business object field \u2018personal information business object\u2019 and a corresponding database table field \u2018personal information database\u2019 associated with the user interface element \u2018contact number\u2019 is identified. Further, the data processing path to the business object field and the corresponding database table field associated with the user interface element \u2018phone number\u2019 is identified. In one embodiment, the data processing path associated with the user interface element of the first business application is identified by a user interface field analyzer and a field mapping analyzer specific to the first business application. The data processing path associated with the user interface element of the second business application is identified by a user interface field analyzer and a field mapping analyzer specific to the second business application. Identification of the data processing path is described in greater detail in .","At step , semantic information of the plurality of business applications is determined by grouping the identified data processing paths associated with the user interface elements of the first business application and second business application. For example, the data processing path associated with the user interface element \u2018contact number\u2019 and the data processing path associated with the user interface element \u2018phone number\u2019 are grouped and stored in a user interface analyzer unit. In one exemplary embodiment, the user interface analyzer unit stores the semantic information in a file format (e.g., stored in a form of excel, xml and the like).",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 2","b":["205","210","215","205","210","215","205","210","215","205","210","215"]},"The user interfaces (e.g., ,  and ) may include one or more user interface elements which are analogous. The analogous user interface elements may resemble one another in function but are traceable back to different origins (e.g., business object field and database table field). For example, a user interface element \u2018quantity\u2019 exists in the three user interfaces (e.g., \u2018quantity\u2019 in , \u2018measure\u2019 in  and \u2018quantity\u2019 ) as shown in  and , which are analogous. Similarly, the user interface element \u2018ordered date\u2019 exists in the three user interfaces (e.g., ,  and ), which are analogous. In one exemplary embodiment, the analogous user interface elements (e.g., \u2018quantity\u2019 and \u2018ordered date\u2019) are identified. Further, data processing paths associated with the user interface elements (e.g., \u2018quantity\u2019 and \u2018ordered date\u2019) are stored. Further, the identified data processing paths are stored as semantic information of the business applications (e.g., \u2018delivery order, \u2018sales order\u2019 and \u2018purchase order\u2019) and later can be used for different applications such as business application integration, data migration and the like. Determining the semantic information is explained in greater detail in .",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 3","b":["300","300","300","300","305","305","305","305","310","305","310","305","310","310","300","310","310","310","310"]},"Furthermore, the business applications (e.g., A and B) include respective business application servers (e.g., A and B) to execute respective business applications. For example, the business application server A is based on a metadata repository A (e.g., data is stored using meta-data) and the business application server B is based on application logic B (e.g., data is stored using coding). Also, the business application servers (e.g., A and B) include respective underlying databases (e.g., a database A associated with the business application server A and a database B associated with the business application server B). The databases (e.g., A and B) include an organized collection of business data used to execute the business applications (e.g., A and B).","In one embodiment, the semantic information of the business applications (e.g., A and B) is determined by analyzing user interface elements of the user interfaces (e.g., A and B). The semantic information can include data processing paths associated with analogous user interface elements of the business applications (e.g., A and B). Further, the user interface elements are analyzed using business application specific user interface field analyzers (e.g., a user interface field analyzer A of the business application A and a user interface field analyzer B of the business application B) and field mapping analyzers (e.g., a field mapping analyzer A of the business application A and a field mapping analyzer B of the business application B). Furthermore, the semantic information of the business applications (e.g., A and B) is stored in a user interface analyzer unit , wherein the user interface analyzer unit  is communicatively coupled to the business applications (e.g., A and B).","In operation, a selection of the user interface element of the business application A is received by the user interface field analyzer A. Further, the user interface field analyzer A triggers the field mapping analyzer A to identify an underlying business object field stored in the business application server A and one or more database table fields stored in the database A. The identified business object field and the database table fields constitute binding information of the user interface element, the business object field and the database table fields. In other words, the identified business object field and the database table fields corresponding to the user interface element results in a data processing path to the business object field and the database table fields associated with the user interface element.","Further in operation, a user is prompted to select a user interface element of the business application B corresponding to the user interface element of the business application A. A data processing path corresponding to the user interface element, a business object field and one or more database table fields is identified using the user interface field analyzer B and the field mapping analyzer B associated with the business application B. In one embodiment, the field mapping analyzers (e.g., A and B) identifies the data processing paths in different types of business application servers (e.g., the business application server A is based on metadata repository A and the business application server B is based on application logic B). The method of identifying the data processing path is described in greater detail in .","Furthermore in operation, the data processing path associated with the user interface element of the business application A and the data processing path associated with the user interface element of the business application B are grouped in the user interface analyzer unit  as the semantic information of the business applications (e.g., A and B).",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 4","b":["400","410"]},"At step , user interface model name and context information associated with the selected user interface element are identified. For example, the user interface model name \u2018new sales order\u2019 and the corresponding information documenting relationships of the content information of the \u2018new sales order\u2019 such as screen name or table control name is identified by the user interface field analyzer.","At step , the user interface field analyzer triggers a field mapping analyzer to identity the data processing path to a business object field using the identified user interface model name and the context information. After identifying the business object field, the field mapping analyzer analyzes the business object to identify a corresponding at least one database table field. In one embodiment, the field mapping analyzer is specific to the business application. For example, the data processing path to a \u2018sales order business object\u2019 and corresponding \u2018sales order database scheme\u2019 associated with the user interface element \u2018quantity\u2019 is identified. The method of identifying the data processing path is described with an example in .",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 5","b":["500","500","505","510","510","515","520","525","530","530","535","540","545","505","550","565","550","555","560","555","510","560","565","570","575"]},"In one exemplary embodiment, when a user interface element \u2018quantity\u2019 is selected by a user, the data processing path to a corresponding business object field and database table fields are identified by a user interface field analyzer and a field mapping analyzer. At step , the user interface field analyzer receives the selected user interface element \u2018quantity\u2019. Further, the user interface field analyzer identifies user interface model name and context information (e.g., sales order). In one embodiment, the user interface field analyzer triggers the field mapping analyzer to identify a corresponding business object field. Thereby, \u2018quantity\u2019 of the \u2018sales order business object\u2019 associated with the user interface element \u2018quantity\u2019 is identified. At step , a corresponding database table field is identified by the field mapping analyzer. Thereby, \u2018quantity\u2019 of the \u2018sales order database scheme\u2019 is identified. In one embodiment, the data processing path (i.e., user interface element-business object field-database table field (i.e., as mentioned in steps  and )) is stored in a user interface analyzer unit. Determining of semantic information of a plurality of business applications is explained with an example in .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 6","b":["600","605","605","605","605","600","605","605","605","605","615","615","620","620","605","605"]},"For example, when a user selects a user interface element (e.g., \u2018quantity\u2019 A) of the sales order A, the user interface field analyzer A identify a user interface model name and accordingly triggers the field mapping analyzer A (wherein the field mapping analyzer A is specific to the sales order A). Further, the field mapping analyzer A identifies a data processing path of a business object stored in a metadata repository A and underlying database table fields stored in a database A. Generally, the business objects are represented in the metadata repository A as structured objects including a corresponding metadata object. Further, the business object includes the information of the object-relational mapping to the database A. Therefore, it is possible to find the data processing path of the user interface element \u2018quantity\u2019 A down to the business object filed described in the metadata repository A and further to database table field in the database A.","Further, a prompt is generated for the user to select a user interface element analogous to the user interface element \u2018quantity\u2019 A in sales order B. In response, the user may select a user interface element \u2018measure\u2019 B (as \u2018measure\u2019 B constitute same attribute \u2018quantity\u2019 A, i.e., the number of items). Furthermore, a data processing path associated with the user interface element \u2018measure\u2019 B is identified by the user interface field analyzer B and the field mapping analyzer B, using application logic B and a database B (as described for the user interface element \u2018quantity\u2019 A). For example, since the business application server of the sales order B is based on the application logic (e.g., using coding), the field mapping analyzer B detects source code to identify the data processing path associated with the user interface element \u2018measure\u2019 B.","In one exemplary embodiment, the data processing path associated with the user interface element \u2018quantity\u2019 A and the data processing path associated with the user interface element \u2018measure\u2019 B are grouped and stored in a user interface analyzer unit  as the semantic information of the business applications (e.g., A and B). In one exemplary embodiment, missing semantic information (i.e., if no corresponding or similar or analogous user interface elements are found between the business applications) can be enriched by tagging of the user interface elements with additional business knowledge.","Generally, the method described above includes business application specific software components in the user interface (e.g., user interface field analyzer) and in the application server (e.g., field mapping analyzer). Starting from the user interfaces of two different business applications on the same computer system, the is-equal (i.e., analyzing the user interfaces of the business applications to identify similar or analogous user interface elements) relationship of two corresponding user interface fields is analyzed. Further, corresponding business object fields and database table fields are identified by the field mapping analyzers. The field mapping analyzers dig in the bindings and usages of the user interface element until the data processing path to the corresponding business object field and database table field are found. Further, the field mapping information and the correlation of the different elements of the different business applications can be saved in different file formats for further processing in other tools like provisioning of the semantic documentation of legacy systems to simplify and improve data migration and business application integration.","Some embodiments of the invention may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components maybe implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer readable storage media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include machine code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment of the invention may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment of the invention may be implemented in hard-wired circuitry in place of, or in combination with machine readable software instructions.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 7","b":["700","700","705","755","700","740","755","710","715","710","715","705","715","700","725","730","700","725","730","700","735","700","750","750","700","745","700","720","760","760","760","750","760"]},"A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transactional, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transactional data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system (e.g., ERP system), and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","In the above description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however that the invention can be practiced without one or more of the specific details or with other methods, components, techniques, etc. In other instances, well-known operations or structures are not shown or described in details to avoid obscuring aspects of the invention.","Although the processes illustrated and described herein include series of steps, it will be appreciated that the different embodiments of the present invention are not limited by the illustrated ordering of steps, as some steps may occur in different orders, some concurrently with other steps apart from that shown and described herein. In addition, not all illustrated steps may be required to implement a methodology in accordance with the present invention. Moreover, it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.","The above descriptions and illustrations of embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather, the scope of the invention is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The claims set forth the embodiments of the invention with particularity. The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments of the invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
