---
title: Secure printing with authenticated printer key
abstract: Securely storing a public key for encryption of data in a computing device by using a user-specific key pair which is securely stored in the computing device, including receiving a target public key corresponding to a target device, obtaining a user-specific key pair from a secure registry, using a user-specific private key from the user-specific key pair to create a target key verifier based on the target public key, storing the target key verifier and the target public key in a storage area, retrieving the target key verifier and the target public key from the storage area, applying a user-specific public key from the user-specific key pair to the target key verifier for verifying the authenticity of the target public key, and encrypting data with the target public key, if authenticity of the target public key is verified, thereby creating encrypted data for transmission to the target device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07305556&OS=07305556&RS=07305556
owner: Canon Kabushiki Kaisha
number: 07305556
owner_city: Tokyo
owner_country: JP
publication_date: 20011205
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["Incorporation by Reference","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["U.S. patent application Ser. No. 09\/411,070, entitled \u201cTargeted Secure Printing\u201d, filed on Oct. 4, 1999, is incorporated herein by reference.","1. Field of the Invention","The present invention concerns secure printing by encrypting print data using a verified printer key, without the need for an external certificate authority. In particular, the invention concerns using a user-specific private key to create an encrypted key version of a stored printer public key. When the printer public key is subsequently needed for encryption of print data, the encrypted key version is decrypted using a user-specific public key and is then compared to the stored printer public key to verify that the stored printer public key was not changed or corrupted.","2. Description of the Related Art","In computing environments, a print job generated by a computer at one location in the network can be printed by an image output device at another location. For example, a personal computer (PC) may be connected to a printer at a distant location, or a workstation may be connected to a network on which many devices and workstations reside. If the print job includes confidential or otherwise sensitive information, it is possible that there may be an unauthorized interception of the print job between the origin of the print job and the targeted printer. In particular, the print job may be intercepted by an unauthorized device connected to a local connection between an originating PC and the target printer, or by a device connected to the network on which an originating workstation and the target printer reside. Such an unauthorized device may be a PC or a workstation capable of utilizing network listening, trapping and interception tools.","To avoid unwanted interception or retrieval of print jobs, it is known to use secure printing in which a public printer key is utilized to encrypt print data at the originating computer. In some applications, the public printer key may be used in conjunction with a symmetric key to encrypt the print data. The encrypted print data is sent to the target printer where the printer private key is used to decrypt the print data and to store it. The printer private key is maintained in the printer in a secure fashion to ensure security of encrypted print data. It is preferable for a computing device to obtain the printer public key and store it, but the printer public key should be verified each time it is used to encrypt print data, to make sure that the printer public key has not been corrupted or tampered with.","Certificate authorities are often used to facilitate the secure distribution and verification of public keys for encryption purposes. A certificate authority is a trusted party that can sign a unique public key for a developer or manufacturer, such as a printer manufacturer, for secure distribution to users. For example, a certificate authority can use its own private key to sign a printer public key from a printer manufacturer by placing the printer public key in a certificate for distribution, along with other information related to the source of the printer public key and the certificate authority, and then signing the entire certificate. Users can then access the certificate containing the signed printer public key for use. In such a case, the user obtains the certificate authority's own trusted public key (verification key) and uses it to verify that the signed printer public key is authentic. The printer public key can then be trusted by the user for encryption of the user's print data to be printed on the target printer containing the corresponding printer private key.","In many cases, it is not practical for a user wishing to use a public key for a device, such as a printer public key, to utilize a certificate from a certificate authority to verify the authenticity of the public key. For example, certificate authorities are known to change their verification key from time to time to maintain integrity of the certificates. Additionally, the certificates may expire or be revoked by the certificate authority. In order to ensure the integrity of the certificates, a certificate revocation list (CRL) must be checked before relying on the integrity of the certificates. Unfortunately, it takes time for a user to obtain the certificate authority's verification key every time a user wishes to use a particular public key for encryption purposes.","In addition, not every device necessarily uses a certificate authority for the distribution of the device's public key. Also, a user may be required to store and maintain numerous verification keys from corresponding certificate authorities for supporting different public keys needed by the user's applications. Lastly, certificates from certificate authorities often contain additional information besides a signed public key, and the processing of this additional information can result in greater processing overhead in verification of the signed public key.","Accordingly, what is needed is an arrangement for securely maintaining a public key on a computing device wherein the public key can be easily verified before each use without the need for a certificate or a certificate authority.","The invention addresses the foregoing need by obtaining a public key from a target device, such as a printer, and storing the public key. A user-specific private key from a user-specific key pair is used to create a target key verifier corresponding to the public key. In this regard, the target key verifier can be any one of several types of data objects for purposes of the present invention. For example, the target key verifier can be comprised of an encrypted public key, a digital signature of the public key, or another resultant data object resulting from the application of a security algorithm, such as DSS, to the public key. When the public key is subsequently needed for encryption purposes, the target key verifier is decrypted using a user-specific public key from the user-specific key pair and is then compared to the stored public key to verify that the stored public key has not been changed or corrupted.","Accordingly, one aspect of the present invention concerns securely storing a public key for encryption of data in a computing device by using a user-specific key pair which is securely stored in the computing device. In particular, a target public key corresponding to a target device is received, a user-specific key pair is obtained from a secure registry and a user-specific private key from the user-specific key pair is used to create a target key verifier based on the target public key. The target key verifier and the target public key are stored in a storage area. The target key verifier and the target public key are subsequently retrieved from the storage area. A user-specific public key from the user-specific key pair is applied to the target key verifier for verifying the authenticity of the target public key, and, in the case that the authenticity of the target public key is verified, data is encrypted with the target public key, thereby creating encrypted data for transmission to the target device.","Preferably, the user-specific key-pair is generated and securely maintained by the operating system which is executing in the computing device. For example, the operating system preferably maintains a secure registry which stores user-specific key pairs for each user and which only allows access to a user-specific key pair when provided with an appropriate login identification of the user corresponding to the user-specific key pair. Also, the target key verifier is preferably a public key signature which is created by hashing the target public key and then encrypting the resulting first key hash with the user-specific private key from the user-specific key pair. The verification step preferably includes decrypting the target key verifier with the user-specific public key from the user-specific key pair to retrieve the first key hash. A second key hash is obtained by hashing the stored target public key, and the first and second key hashes are compared to verify the authenticity of the stored target public key. Also, in the receiving step, the target public key is preferably received in response to a request from the computing device to the target device.","By virtue of the foregoing arrangements, a target public key can be securely maintained on a computing device for subsequent use to encrypt data. In particular, the encryption (signing) and subsequent verification of the target public key with the locally maintained user-specific key pair allows the target public key to be easily verified before each use without the need for an external digital certificate or certificate authority.","In another aspect, the invention concerns securely storing a printer public key for encryption of print data in a computing device by using a user-specific key pair which is securely stored in the computing device. In particular, a printer public key corresponding to a printer is received, and a user-specific key pair is obtained from a secure registry upon receipt of a corresponding user identification. A hashing algorithm is applied to the printer public key to create a first printer key hash, and an encryption algorithm is applied to encrypt the first printer key hash with a user-specific private key from the user-specific key pair, thereby creating a printer key signature. The printer key signature and the printer public key are stored in a storage area. The printer key signature and the printer public key are subsequently retrieved from the storage area. The hashing algorithm is applied to the retrieved printer public key to create a second printer key hash, and a decryption algorithm is applied to decrypt the printer key signature with a user-specific public key from the user-specific key pair, thereby retrieving the first printer key hash. A verification algorithm is applied to compare the first printer key hash with the second printer key hash, for verifying the authenticity of the retrieved printer public key, and, in the case that the authenticity of the retrieved printer public key is verified, an encryption algorithm is applied to print data using the retrieved printer public key to create encrypted print data for transmission to the printer.","Preferably, the user-specific key-pair obtained in the obtaining step is generated and securely maintained by the operating system which is executing in the computing device. For example, the operating system preferably maintains a secure registry which stores user-specific key pairs for each user and which only allows access to a user-specific key pair when provided with an appropriate login identification of the user corresponding to the user-specific key pair. Also, in the receiving step, the printer public key is preferably received in response to a key request which is sent from the computing device to the printer.","By virtue of the foregoing arrangements, a printer public key can be securely maintained on a computing device for subsequent use to encrypt data. In particular, the signing and subsequent verification of the printer public key with the locally maintained user-specific key pair allows the printer public key to be easily verified before each use without the need for an external digital certificate or certificate authority.","According to yet another aspect of the invention, a printer public key received by a computing device is authenticated. In particular, the computing device receives a printer public key corresponding to a printer, and a hashing algorithm is applied to the printer public key to create a first printer key hash. The computing device receives a predetermined second printer key hash obtained from a test page printed by the printer, wherein the second printer key hash is input into the computing device by a user-input means connected to the computing device. A verification algorithm is then used to compare the first printer key hash with the second printer key hash, for verifying the authenticity of the received printer public key, and, in the case that the authenticity of the received printer public key is verified, the received printer public key is stored in a memory area of the computing device.","Preferably, the received printer public key is received in response to a key request message sent from the computing device to the printer. In addition, the test page is preferably printed in response to a command from a user of the computing device, the command being directly entered by the user through a front panel of the printer. The user-input means is preferably a keyboard and mouse, to that the user can view the predetermined second printer key hash from the test page and then enter the predetermined second printer key hash into the computing device.","By virtue of the foregoing arrangements, a printer public key can be authenticated upon initial receipt from a printer by a user of the printer. In particular, the authentication of the received printer public key is performed by using a predetermined hash value printed by the printer in the presence of the user. In this manner, the authenticity of the printer public key is easily verified upon receipt without the need for an external digital certificate or certificate authority.","This brief summary has been provided so that the nature of the invention may be understood quickly. A more complete understanding of the invention can be obtained by reference to the following detailed description of the preferred embodiments thereof in connection with the attached drawings.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 1","FIG. 1"],"b":["10","20","1","1","10","20","1","1"]},"Desktop computer  is preferably a personal computer or workstation having a windowing operating system environment such as Microsoft Windows 2000, Microsoft Windows ME or Microsoft Windows XP. As is typical with PC-type computers, desktop computer  preferably has display , keyboard , mouse , host processor , fixed disk , and a floppy drive and\/or other type of storage medium (not shown). The contents of fixed disk  and the operation of computer  according to the present invention are explained in more detail below.","Printer  is also connected to computer  by connection  and is preferably a laser or an ink-jet printer which is capable of printing images on recording medium based on received print data. Printer  has a fixed storage  which is preferably a fixed disk, but can be another form of computer memory such as read-only memory (ROM) or electrically-erasable programmable read-only memory (EEPROM). The contents of fixed storage  and the operation of printer  according to the present invention are discussed in more detail below.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 2","FIG. 1","FIG. 2","FIG. 1","FIG. 2"],"b":["10","20","30","1","10","20","1"]},"As seen in , server  is also connected to connection . Server  preferably comprises a PC-compatible computer having a windowing operating system environment such as Microsoft Windows 2000, Microsoft Windows ME or Microsoft Windows XP. Server  has a fixed disk  which is preferably a large fixed disk for storing numerous files, applications and data. Server  can therefore be utilized by other devices on connection , such as computer , as a file server or other type of server, such as a print server. Server  may also act as a gateway for other devices on connection  to access another network such as the Internet. In one embodiment of the present invention, server  is used to store public keys for use by computer , as discussed in more detail below.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 3","FIG. 3"],"b":["13","10","21","20","21","20","22","25","23","25","23","25","20","20","20","25","20"]},"Printer public key  is made accessible to the public for use in the encryption of print data to send to printer  in a secure, encrypted manner. Printer private key  is also a cryptographic key which corresponds to printer public key , and is also created by the creator of printer public key . However, unlike printer public key , printer private key  is maintained under strict security within printer  and cannot be accessed and\/or removed from printer . In this manner, only printer  has access to both of keys  and  of printer key pair , thereby allowing users of printer  to trust that encrypted print data sent to printer  cannot be decrypted by any unauthorized party if the encrypted print data should be intercepted on its way to printer .","Returning to , it can be seen that fixed disk  of computer  includes operating system , registry , key database , printer driver  and storage area . As discussed above, operating system  is preferably a windowing operating system, and in particular is preferably a Microsoft Windows operating system which includes a cryptographic application programming interface (CAPI). The Microsoft CAPI provides a transparent manner for generating, maintaining and accessing user-specific cryptographic key pairs in an efficient and transparent manner. In particular CAPI generates a user-specific key pair for each user of computer  and stores each user-specific key pair in a registry entry for the particular corresponding user. CAPI does not allow a user-specific key pair to be accessed unless the corresponding user is logged into computer  by providing appropriate user login identification, such as a user-specific password. A function call is supported by CAPI to retrieve a user-specific key pair for an authorized user. CAPI also supports other cryptographic function calls, such as a function call for verification of the authenticity of data, such as a public key, which has been encrypted or signed with a user-specific public key.","Although applications exist, such as PGP (\u201cpretty good privacy\u201d), for supporting the cryptographic signature of data and the subsequent verification of a cryptographic signature, such applications are seen to have a significant shortcoming with respect to the Microsoft Windows CAPI functionality. In particular, other cryptographic applications, such as PGP, require the user of the application to maintain the storage of the key pair that is used to create the cryptographic signature. Accordingly, such applications do not maintain the key pair under strict security and may be more prone to a security breach in which an unauthorized user of the computer can access the key pair and use it to access encrypted data of the authorized user.","It should be appreciated that although it is preferred to use a Microsoft Windows operating system which supports CAPI, other types of operating systems can be used to practice the present invention. In such a case, the generation, maintenance and access of user-specific key pairs as described above can be performed by functions of the other type of operating system, or can be performed by an application, so long as the user-specific key pairs are generated, maintained and accessed in a secure fashion which is transparent to the user, as described with respect to CAPI.","Returning to , key database  is a component of operating system  and is used to securely generate and maintain user-specific key pairs for the users of computer . In particular, key database  contains a user entry for each user of computer , each user entry containing a corresponding user-specific key pair, such as user-specific key pair which is in the entry corresponding to user . Each user-specific key pair contains a private key and a public key for encryption\/signing of data objects and for authenticity verification of such encrypted\/signed data objects. For example, user-specific key pair  includes user-specific public key  and user-specific private key , both of which are unique and correspond to user .","Likewise, key database  may include entries for other users, such as user  with public key  and private key .","Registry  is a storage area for use by operating system  to maintain data corresponding to each user of computer . In particular, registry  contains an entry for each user, in which login identification data is stored, and other user-specific data is stored. For example, the entry for user () of registry  includes login id  and digital signature . Login id  is preferably a password which is used by user to login to computer  and which is known only to user for security purposes. Digital signature  is a target key verifier for verifying the authenticity of a target key, such as printer public key . Digital signature  is preferably a digital signature which was created by user-specific key pair  corresponding to user and is maintained in registry . In the alternative, digital signature  can be comprised of an encrypted version of the target key, or can be comprised of a resultant code obtained from applying a security algorithm, such as DSS, to the target key. Digital signature  is discussed in more detail below.","Likewise, registry  may include entries for other users, such as user  which includes a login ID  and a digital signature  which function in the same way as the corresponding entries for user .","Also seen in  is printer driver  which is used for generating print data to be sent to printer  for printing of an image which may be a text document, a picture, graphic or other type of image. Printer driver  preferably corresponds to printer  for optimal printing quality and for supporting the features and characteristics of printer . In the preferred embodiment of the invention, printer driver  contains the software code for implementing the functionality of the present invention, which is discussed in more detail below.","Storage area  of  is a general storage area of fixed disk  for access by printer driver , which is not necessarily secure. Storage area  includes printer public key , encryption (signing) algorithm , hashing algorithm , decryption (verification) algorithm , key verification algorithm , hash verification algorithm , other applications  and other files . Printer public key  was obtained from printer  for use in encrypting print data, as discussed further below.","Encryption (signing) algorithm  is used by printer driver  to encrypt or digitally sign data objects, such as print data and printer public key . In addition, encryption (signing) algorithm  as used in the present invention can be comprised of other types of security algorithms. Hashing algorithm  is used to perform a digital hash of data objects, such as printer public key , as discussed further below. Decryption (verification) algorithm  is used to decrypt encrypted data objects, or to verify the digital signature of signed data objects, such as printer public key , and is discussed further below. In addition, decryption (verification) algorithm  as used in the present invention can be comprised of other types of security algorithms. Key verification algorithm  is used to compare a decrypted public key to a stored public key to confirm the authenticity of the stored public key, as discussed more fully below. Hash verification algorithm  is used to compare a decrypted public key hash value to a newly-generated hash value of a stored public key to confirm the authenticity of the stored public key, as discussed more fully below. Lastly, other applications  and other files  are used by printer driver  and\/or computer  to support other applications and functions.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 4A","FIG. 2","FIG. 4A"],"b":["25","25","20","10","25","30","10","30","25","20","54","65","25","67","41","1","42","44","54","40","45","1","25","41","25","25"]},{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 4B","FIG. 4B"],"b":["25","25","20","30","10","25","68","69","25","68"]},"User-specific private key  is then provided to encryption algorithm  along with printer public key hash value  to create digital signature  which is essentially an encrypted form of printer public key hash value . Digital signature  is then stored in registry  under user entry  in sub-entry . As discussed above, user-specific private key  is preferably accessed through operating system  based on login id  for user. In this manner, digital signature  is securely stored in registry  for subsequent use to authenticate a stored version of printer public key  before printer driver  uses printer public key  to encrypt print data.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 5A","FIG. 4A","FIG. 5A","FIG. 5A","FIG. 2"],"b":["67","25","25","72","10","20","53","40","53","76","67","75","25","62","10","25","31","30","75","25","62","77","25","77","75","25","25","20","30","25","30","60","11","10","25","20","30"]},{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 5B","FIG. 4B","FIG. 5B","FIG. 5B","FIG. 2"],"b":["70","25","25","72","10","20","53","40","53","76","70","79","25","62","10","25","31","30"]},"Printer public key  is then re-subjected to hashing algorithm  to generate new printer public key hash value . Decrypted printer public key hash value  and new printer public key hash value  are then provided to hash verification algorithm  to verify the authenticity of printer public key . If hash verification algorithm  determines that decrypted printer public key hash value  matches new printer public key hash value , then printer public key  is authentic and has not been changed or corrupted since it was initially obtained from printer , or from server  as the case may be. If there is a mismatch, then printer public key  has either been corrupted, or has been modified. For example, a new version of printer public key  may have been created and uploaded from printer  to server  since the first time that computer  obtained a version of printer public key  from server . Preferably, printer driver  generates an error message for display on display  of computer  to prompt the user to re-obtain a new, authenticated copy of printer public key  from printer , or from server , as the case may be.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 6","FIG. 6"],"b":["25","82","83","82","40","85","83","65","87","20","83","87","25","83","65","88","20","88","90","89","87","89","20","1","89","20","87","88","23","20"]},{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 7","FIG. 7"],"b":["87","20","89","20","23","21","20","88","90","92","83","83","87","92","85","85","27","20","100","20","25","25"]},{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 8","FIG. 2","FIG. 4B","FIG. 4A"],"b":["801","10","1","45","1","10","802","51","50","1","803","25","10","20","30","10","25","10","20","30","25","804","20","30","805","25"]},"The two aforementioned possibilities for step S are depicted in , respectively. As seen in , user-specific private key  is used to fully encrypt printer public key  using encryption algorithm , thereby creating encrypted printer public key  (S). Flow then passes to return (step S) in . As seen in , hashing algorithm  is applied to printer public key  to create printer public key hash value  (step S). In step S, printer public key hash value  is encrypted with user-specific private key  to create digital signature . Flow then passes to return (step S) in .","Returning to , flow passes to step S in which printer public key  is stored in storage area  for subsequent use, and digital signature , (or encrypted printer public key ) is securely stored in registry . In the alternative, it should be appreciated that printer public key  can be stored in fixed disk  of server  instead of in storage area  in the case that computer  is in a networked environment with server , as depicted in . As discussed above, printer public key  can be stored in fixed disk  of server  in the case that computer  is in a networked computing environment as depicted in . In such a case, computer  preferably accesses printer public key  from server  every time that computer  subsequently needs to encrypt data. This allows the printer driver to automatically detect the case where the version of printer public key  stored on server  has been updated by a system administrator. In step S, computer  receives print command  from user, which preferably includes an indication that the print job is to be sent to printer  in a secure fashion.","Next, printer public key  is retrieved from storage area  or from fixed disk  of server  as the case may be (step S). In step S, digital signature , or encrypted printer public key , is decrypted and provided to a verification algorithm along with printer public key  to verify the authenticity of printer public key . This step is different depending on whether printer public key  is signed or fully encrypted as discussed above with respect to .  depicts the explanation of step S for the case in which printer public key  is fully encrypted. In step S, user-specific public key  is used to decrypt encrypted printer public key  which was retrieved from registry . Next, in step S, decrypted printer public key  and retrieved printer public key  are provided to key verification algorithm  for verifying that they match, thereby determining that printer public key  is authentic and can be used for proper encryption of print data. Flow then passes to return in step S.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 12","b":["25","70","1201","53","70","41","79","1202","68","25","62","30","80","1203","79","80","84","25","1204"]},"Returning to , flow passes to step S in which it is determined if there was a match in the verification performed in step S. If there has been a match, flow passes to step S. If there is not a match, flow passes to step S in which an error message is generated for display on display  of computer , and then flow passes to return in step S. In step S, random key generator  is used to generate symmetric key . In step S, print data  is encrypted with symmetric key  using encryption algorithm  to generate encrypted print data . Next, in step S, symmetric key  is encrypted with verified printer public key  using encryption algorithm  to generate encrypted symmetric key . Encrypted symmetric key  and encrypted print data  are placed in print job  and sent to printer  (step S). Flow then passes to step S wherein printer  receives print job  and applies printer private key  via decryption algorithm  to decrypt encrypted symmetric key , thereby retrieving symmetric key . Symmetric key  is then applied to encrypted print data  to retrieve decrypted (clear) print data  (step S). Decrypted print data  is then sent to print engine  of printer  to generate printed image  based on print data  (step S). Flow then passes to return in step S.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":["FIG. 13","FIG. 13"],"b":["25","20","25","10","10","25","25","20","68","69"]},"Next, printer test page  is generated at printer  in response to a command which is preferably provided at the front panel of printer  by the user of computer . Printer test page contains a printed hash value  of which is the correct hash value for printer public key . Printed hash value  is entered into computer  by the user and is provided to hash verification algorithm  along with printer public key hash value . Hash verification algorithm  determines whether the two hash values match in order to verify the authenticity of received printer public key . If there is a match, then computer  accepts printer public key  as an authentic copy from printer  and stores it into storage area  for subsequent use. If there is not a match, then an error message  is generated for display on display  of computer  to prompt the user to take action, such as sending another request to printer  for printer public key , or such as re-entering printed hash value  into computer .",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 14","FIG. 13"],"b":["25","1401","25","20","20","25","10","1402","25","68","69","1403","102","20","20","10","1404","103","25"]},"In step S, printed hash value  is entered into computer  by the user, preferably in a dialog window provided on display  of computer . Printed hash value  is then provided to hash verification algorithm  along with printer public key hash value  in step S. Hash verification algorithm  determines whether the two hash values match in order to verify the authenticity of received printer public key . In step S, it is determined if a match was established in step S. If there is a match, then flow passes to step S in which computer  accepts printer public key  as an authentic copy from printer  and stores it into storage area  for subsequent use. Flow then passes to return at step S. If there is not a match at step S, then flow passes to step S where an error message is generated for display on display  of computer  to prompt the user to take action, such as sending another request to printer  for printer public key , or such as re-entering printed hash value  into computer . Flow then passes to return at step S.","In this manner, secure printing is provided through the use of a public key without having to use an external certificate authority to verify the authenticity of the public key every time that the public key is need for encryption purposes. In particular, a target public key such as a printer public key can be securely maintained on a computing device for subsequent use to encrypt data. Accordingly, the encryption (signing) and subsequent verification of the target public key is performed locally with a locally maintained user-specific key pair, thereby allowing authenticity of the target public key to be easily verified before each use.","The invention has been described with particular illustrative embodiments. It is to be understood that the invention is not limited to the above-described embodiments and that various changes and modifications may be made by those of ordinary skill in the art without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 14"}]},"DETDESC":[{},{}]}
