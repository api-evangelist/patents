---
title: Role-based permissions for accessing computing resources
abstract: Mechanisms for controlling access to a computing resource are disclosed. A request to initiate an action against a computing resource of a plurality of computing resources is received from a user. A plurality of permission definitions that identify a plurality of corresponding permissions that grant access to the plurality of computing resources is accessed. Based on a set of permissions comprising at least one permission associated with the user and at least one permission associated with a team of which the user is a member, it is determined that at least one permission in the set of permissions grants the user access to the computing resource. The request to initiate the action against the computing resource is processed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09619631&OS=09619631&RS=09619631
owner: Ansible, Inc.
number: 09619631
owner_city: Durham
owner_country: US
publication_date: 20140611
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The embodiments relate generally to controlling access to computing resources.","Complex software systems are typically designed, developed, debugged, deployed, maintained and updated by a group of individuals, such as developers and\/or administrators (referred to collectively herein as \u201cusers\u201d), employed by a software manufacturing entity. Each user may have a particular role, or multiple roles, in the process, such as writing software updates, testing software, deploying the software in a production environment, upgrading the software in the production environment, and the like. The computing resources on which particular functions are performed may be different. Even the ownership of the computing resources on which the functions are performed may differ.","Establishing security in such an environment can be complex, and can be a bottleneck to efficiency, but is increasingly important in view of the potential damage a hacker can intentionally cause, as well as in view of the disruption even a legitimate user can inadvertently cause. Security can be implemented at many different levels, such as creating security definitions that define which users are permitted to perform which actions on which computing resources, and which users are permitted to modify such security definitions. Moreover, each computing resource may have its own security authentication requirements, which, for example, may require that authentication data, sometimes referred to as credentials, such as user identifiers and passwords, be provided before allowing commands to be performed on the computing resource. Credentials have their own security issues, because the authentication data must be provided to the users that need to perform actions against the computing resources, yet, it is desirable that such information be tightly controlled and restricted to ensure that unauthorized access to a computing resource is prevented. If such users leave the software manufacturing entity, all such authentication data must be changed, to ensure that the ex-employee no longer has access to the computing resources. Implementing new authentication data may be onerous and time-consuming, and may involve removing the old authentication data from each computing resource, implementing the new authentication data on each computing resource, and then providing the new authentication data to appropriate users who need access to the computing resources in order to perform the functions for which they are responsible. Due to the onerous nature of changing authentication data, sometimes it is not done immediately, leaving the ex-employee with access to a computing resource.","Accordingly, there is a need for improved security mechanisms that ease the administration of security in a complex software development environment, while maintaining flexibility and a highly secure environment.","The embodiments provide a role-based access control mechanism that implements access control rights in a flexible and intuitive manner based, in part, on the role of a user. The embodiments also implement credential control mechanisms that allow users to use credentials, without disclosing to the users the underlying authentication data associated with the credential. The embodiments implement access control rights in part by implementing access control elements that are modeled based on the manner in which complex software systems are designed, implemented, and maintained.","In one embodiment, a request to initiate an action against a computing resource of a plurality of computing resources is received from a user. A plurality of permission definitions that identify a plurality of corresponding permissions that grant access to the plurality of computing resources are accessed. Based on a set of permissions comprising at least one permission associated with the user and at least one permission associated with a team of which the user is a member, it is determined that at least one permission in the set of permissions grants the user access to the computing resource. The request to initiate the action against the computing resource is processed.","In another embodiment, a computing device receives at a first time a request associated with a user to initiate a plurality of actions against a computing resource of a plurality of computing resources. The request includes a credential identifier that identifies a credential. The computing device accesses a memory, based on the credential identifier, to retrieve a credential identified by the credential identifier that was stored in the memory at a time prior to the first time. The credential comprises authentication information configured to authenticate the action to the computing resource. The computing device communicates the request and the authentication information to an orchestration engine for execution of the plurality of actions against the computing resource.","Those skilled in the art will appreciate the scope of the disclosure and realize additional aspects thereof after reading the following detailed description of the preferred embodiments in association with the accompanying drawing figures.","The embodiments set forth below represent the necessary information to enable those skilled in the art to practice the embodiments and illustrate the best mode of practicing the embodiments. Upon reading the following description in light of the accompanying drawing figures, those skilled in the art will understand the concepts of the disclosure and will recognize applications of these concepts not particularly addressed herein. It should be understood that these concepts and applications fall within the scope of the disclosure and the accompanying claims.","Any flowcharts discussed herein are necessarily discussed in some sequence for purposes of illustration, but unless otherwise explicitly indicated, the embodiments are not limited to any particular sequence of steps. The use herein of ordinals in conjunction with an element is solely for distinguishing what might otherwise be similar or identical labels, such as \u201cfirst credential\u201d and \u201csecond credential,\u201d and does not imply a priority, a type, an importance, or other attribute, unless otherwise stated herein. The term \u201cabout\u201d used herein in conjunction with a numeric value means any value that is within a range of ten percent greater than or ten percent less than the numeric value.","The embodiments provide a role-based access control mechanism that implements access control rights in a flexible and intuitive manner based, in part, on the role of an individual involved in the manufacture, maintenance, or other aspect of a software system. Such an individual will be referred to herein as a user. The embodiments implement access control in part by implementing access control elements that are modeled based on the manner in which complex software systems are designed, implemented, and maintained. The embodiments also implement credential control mechanisms that allow users to use credentials, without disclosing to the users the underlying authentication data associated with the credential.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 1","b":["10","10","12","14","14","14","16","1","16","16","18","16","20","1","20","20","20","22"]},"The network  may comprise any suitable public network, proprietary network or combination thereof that facilitates communication between the computing device  and client computers . In some embodiments, the access control module  may have an associated application programming interface (API)  that facilitates programmatic access to the access control module , such that some or all of the functionality described herein in conjunction with user input and user interfaces may be similarly implemented via programmatic interaction with the API .","The computing device  is also in communication with one or more computing resources ---N (generally, computing resources ). A computing resource  may comprise any object for which it is desired to control access. The computing resource -, for example, may comprise a computer server. The computing resource - may be a cloud computing resource, and may comprise a plurality of computer servers. The phrase \u201ccloud computing\u201d refers to a group of computing devices, such as a group of computer servers. The computing resource - may comprise a database server. While for purposes of illustration and relative simplicity the computing resources  will be discussed herein in the context of being individual computers, such as computer servers, the embodiments are not limited to any particular type of computing resource.","The users  may have different functions related to the software system produced by the entity . For example, the user - may be responsible for testing pre-production versions of the software system. The user - may be responsible for deploying a version of the software system into a production environment. The user - may be responsible for developing new features on an existing version of the software system. Each of these functions may require access to certain computing resources , but not require access to other computing resources .","In the course of performing tasks on the computing resources , it is often desirable that such tasks be automated to provide consistency, efficiency, and automation to the process. An orchestration engine  is one mechanism utilized to facilitate the automation of such tasks. The orchestration engine  accesses sets of actions that are to be performed against one or more of the computing resources , and coordinates the performance of the actions. Such sets of actions will be referred to herein as a playbook , but the sets of actions may take any desired form so long as the sets of actions are written in a manner, such as being written in a particular programming language, protocol, or format, that is understood by the respective orchestration engine . In one embodiment, the orchestration engine  comprises the Ansible IT automation platform available from Ansible, 312 Blackwell St., Suite 100, Durham, N.C. 27701; however, the embodiments are not limited to any particular orchestration engine . Similarly, the playbooks  may, in one embodiment, be expressed in YAML Ain't Markup Language (YAML) format, but the embodiments are not limited to any particular format or programming language.","The computing resources  may each implement a security, or authentication mechanism, to ensure that actions performed against the respective computing resource  by the orchestration engine  are authorized. The authentication mechanism will be referred to herein as a credential, as described in greater detail herein, and may be provided by the orchestration engine  to the respective computing resource  prior to implementing any actions on the computing resource . If the computing resource  accepts the credentials as valid, the computing resource  permits actions to be performed on the computing resource . Otherwise, the computing resource  does not allow actions to be performed on the computing resource .","The access control module , among other features, implements a multiple-level security mechanism that ensures that the users  have the appropriate access to the computing resources , and that such users  have access to the credentials required by the computing resources  in order to perform actions on the computing resources . The security mechanism is implemented in part via access control elements that are stored in an access rights repository , in a memory device such as a storage . The access control elements are modeled based on a manner in which software systems are often developed, and include, by way of non-limiting example, elements that model organizations, teams, users, permissions, credentials, and projects. In one embodiment, the access control elements are defined via a user interface, and stored as corresponding definitions in the access rights repository . Thus, the access rights repository  may include one or more organization definitions , one or more team definitions , one or more user definitions , one or more permission definitions , one or more credential definitions , one or more computing resource definitions , one or more project definitions , and one or more job template definitions  (generally, access control definitions ).","When a user  desires to execute a playbook  against a computing resource , the access control module  facilitates the generation of a job template based on the rights, referred to herein as permissions, granted to the user , and ensures that the user  has permission to access the computing resource , and has been given permission to access any credentials required by the respective computing resource . In the event the user  either has not been provided permission to access the computing resource , or has not been given permission to utilize a credential required by the respective computing resource , the user  will not be able to perform the requested actions against the computing resource .","Mechanisms for generating the access control definitions  will now be discussed, in conjunction with example data that may be provided in the course of generating an access control definition . For purposes of illustration, the generation of access control definitions  will be discussed in conjunction with a user interface wherein the user - has, as part of a setup phase of the access control module , been given superuser rights such that the user - is permitted unrestricted rights to generate access control definitions . Assume that the user - desires to define an organization to the access control module . In one embodiment, the access control module  interfaces with the client computer - via a web interface, and in response to queries from the client computer - provides data that may be presented to the user - via a display  associated with the client computer -. The user - may select a link, such as a uniform resource locator, that causes the access control module  to provide a web application that executes on the client computer -. After the user - has logged in and provided sufficient authorization information to identify the user - to the access control module , the access control module  may provide a user interface that allows the user - to generate, delete, or modify one or more access control definitions .",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 2","b":["50","32","50","52","20","1","54","20","1","56","20","1","36","20","12","36","58","20","1","20","48"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 3","b":["32","32","60","62","64","20"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 4","b":["66","34","20","20","20","24","66","68","20","1","70","20","1","72","20","1","74","12","30","30","20","1","20","1","76","20","1","78","20","1","80","20","1","82","20","72"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 5","b":["34","84","86","88","90","92","20","94"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 6","b":["96","36","36","20","12","98","20","1","20","100","20","1","20","102","20","1","20","104","12","30","30","20","1","108","110","20","1","20","12","111","20","1","20","30"]},"The user - may select a credentials control  to identify credentials that are available to be assigned to the respective user , and\/or to access a credential user interface window that facilitates the generation of a credential, as discussed in greater detail below. The user - may select a permissions control  to identify permissions that are available to be assigned to the respective user , and\/or to create a new permission that may be assigned to the respective user . The user - may select an organizations control  to identify organizations of which this respective user  is a member. The user - may select a teams control  to identify teams of which this respective user  is a member. The user - may select a project control  to identify projects to which this respective user  has access.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 7","b":["36","122","124","20","126","20","128","20","130","20","12","132","20","134","20","136","138"]},"The access control module  implements multiple different types of permissions, including an inventory-type permission that identifies permissions associated with adding and deleting computing resource definitions  to the access rights repository , and a deployment-type permission that identifies permissions associated with performing actions against computing resources .  is a diagram of an example user interface window  for generating an inventory-type permission according to one embodiment. The user - can designate that the permission is an inventory-type permission by selection of an inventory control . An inventory-type permission grants a user, or team, rights to read, modify, or administrate a computing resource , but the inventory-type permission does not grant the user or team the right to perform actions against the computing resource . A permission name control  enables the user - to provide a permission name for the permission. A permission description control  enables the user - to provide a permission description for the permission. A computing resource control  enables the user - to identify a computing resource  to which this permission applies. Selection of a computing resource search control  causes the access control module  to access the access rights repository  and list the computing resources . Permission controls  enable the user - to identify the particular rights that are granted by this permission over this particular computing resource .",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 8B","b":["140","20","1","154","144","20","1","146","20","1","148","20","1","24","150","12","30","24","160","20","1","24","156","20","1","158","12","30","160","20","1","24","24","24"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 9","b":["38","38","162","164","166","24","168","24","170","172","24","174","24"]},"Credentials, as discussed above, include authentication data, such as user identifiers and passwords, which are used by a computing resource  to ensure actions are being performed by an authorized user.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 10","FIG. 10"],"b":["180","24","24","24","20","1","180","24","24","182","20","1","184","20","1","20","20","186","20","1","188","20","1","190","20","1","20","192","20","1","24","194","194","196","180"]},"Some credentials, such as machine-type credentials, may require a secure shell (SSH) password that may be entered via a SSH password control . The SSH password may be stored in an encrypted form in the credential definition . A machine-type credential may also, or alternatively, utilize a SSH private key used to authenticate a particular user  via SSH, which may be entered via a SSH private key control . The SSH private key may be stored in an encrypted form in the credential definition . The user - may also be able to provide a SUDO password used to authenticate a user  to SUDO.","Credentials may also be used to authenticate with a cloud provider, such as Amazon Web Services (AWS) or Rackspace. For example, if the AWS radio control  is selected, the user - may provide an AWS access key and a secret key that is stored in the credential definition . If the Rackspace radio control  is selected, the user - may provide a Rackspace username and Application Programming Interface (API) key that is stored in the credential definition . AWS and Rackspace are merely examples of cloud providers, and the embodiments are not limited to any particular cloud provider.","If the Source Code Management (SCM) radio control  is selected, the user - may provide a username, password and\/or SCM private key and key password for use with, for example, Git, Apache Subversion (SVN) or Mercurial remote revision control systems.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 11","b":["40","40","200","202","204","14","40","20","24","20","204","12","30","40","206","208"]},"In one embodiment, once the access control module  receives and stores the authentication information associated with a credential, the access control module  will not provide the authentication information to a user , thereby preventing a user , other than the original user  who created the credential, from ever seeing the authentication information. As will be discussed in greater detail herein, in some embodiments the access control module  may use the authentication information in conjunction with launching a playbook ; however, the playbook  launching mechanism involves inter-process communication between the access control module  and the orchestration engine . Thus, the communication of the authentication information by the access control module  to the orchestration engine  is not seen by the user .",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 12","b":["212","42","42","24","12","214","20","1","24","216","20","1","24"]},"In some embodiments, the user interface window  may allow the user - to select a radio button control A or B to indicate a computing resource type, such as a machine-type computing resource , or a group-type computing resource . If the computing resource type is a group-type computing resource, the user interface window  may change to allow the user - to define a group of individual computing devices. Actions may then be initiated against the group, such that the action is performed against each computing device in the group.","As one example, a computing resource group may define a plurality of computing devices provided by a third-party cloud provider, such as, by way of non-limiting example, an AWS EC2 cloud provider or a Rackspace cloud provider. In one embodiment, the user - may be able to identify one or more regions associated with the particular cloud provider, and may be requested to identify a credential that is identified by a credential definition  for use with the respective cloud provider. If supported by the respective cloud provider, the user - may initiate a synchronization button (not illustrated), which causes the access control module  to communicate with the identified cloud provider using the identified credential to automatically obtain from the cloud provider identification of one or more computing devices, such as computer servers, that are provided by the cloud provider for use by the user - based on the identified credential. The access control module  may then associate the computing devices provided by the cloud provider with the computing resource  without the user - having to manually enter such computing device into the user interface window .","A variable control  enables the user - to provide data, in the form of variables and values, which may be provided to the computing resource  when actions are performed on the computing resource . Variable type radio buttons A and B enable the user - to indicate a format, or language, in which the variables are written. For example, selection of the variable type radio buttons A indicates that the variables are provided in a JavaScript Object Notation (JSON) format, and selection of the variable type radio button B indicates that the variables are provided in a YAML format. While JSON and YAML formats are illustrated for purposes of convenience, the embodiments are not limited to providing variables in any particular format.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 13","b":["42","42","24","42","42","42","220","24","222","24","224","24","24","226","224"]},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 14","b":["228","44","44","28","24","230","20","1","232","20","1","234","20","1","236","12","30","237","20","1","228","20","1","238","20","1","240","20","1","238","28","28","24","28","20","24"]},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 15","b":["44","44","44","42","44","44","44","242","244","246","248","28","250","28","42","42"]},"According to one embodiment, a job template provides a mechanism for launching a playbook  against a computing resource . When processing a job template, the access control module  utilizes the access rights repository , and access control definitions  discussed herein, to ensure that a user  has appropriate permissions, based either on the respective user , or a role the user  has on a team, to access the respective computing resource . The access control module  also utilizes the access rights repository , and access control definitions  discussed herein, to ensure that the user  has access to the appropriate credential(s) to authenticate with the computing resource . For purposes of illustration, assume that the user - desires to launch a playbook  against the computing resource -. The user - logs into the access control module  using, for example, the username and password provided in the user definition  that corresponds to the user -. After logging in, the user - may select a link, or other reference, indicating a desire to create a job template.  is a diagram of an example user interface window  that may be presented on a display  associated with the client computer - () to facilitate the generation of a job template definition according to one embodiment. A job template name control  enables the user - to provide a job template name for the job template. A job template description control  enables the user - to provide a job template description for the job template.","A job type field allows the user - to select either a Run-type job radio control A or a Check-type radio control B to identify whether the job is for actual execution against a computing resource , or is merely a \u201cdry-run.\u201d A computing resource control  allows the user - to identify a computing resource  against which the job will be executed, or launched. Selection of a computing resource search control  causes the access control module  to access the access rights repository  and list the computing resources  which the user - has permission to access. In order to determine such computing resources , the access control module  determines the set of those permissions defined by permission definitions  that are associated with the user -, as well as each permission defined by a permission definition  that is associated with a team of which the user - is a member. Thus, even though no permission definition  may directly grant the user - a right to access a particular computing resource , if the user - is a member of a team that has been granted a permission to access the particular computing resource  via a permission definition , the access control module  allows the user - to access the particular computing resource .","A project control  allows the user - to identify a project defined by a project definition . Selection of a project search control  causes the access control module  to access the access rights repository  and list the projects available to the user -. A playbook control  enables the user - to identify a particular playbook  for execution against the computing resource  identified in the computing resource control . Selection of a playbook search control  causes the access control module  to access the project base path of the project identified in the project control  and list the playbooks  found in such project base path. The user - may then select one of such playbooks .","A credential control  allows the user - to identify a credential defined by a credential definition  for use in authenticating with the computing resource  identified in the computing resource control . Selection of a credential search control  causes the access control module  to access the access rights repository  and list the credentials available to the user -. The set of credentials available to the user - include those credentials defined by credential definitions that have been directly associated with the user -, and those credentials defined by credential definitions associated with each team of which the user - is a member.","In some embodiments, the access control module  can facilitate parallel processing of actions identified in a playbook . A number of forks control  enables the user - to designate a maximum number of such parallel processes. A variables control  allows the user - to identify variables that may be used in conjunction with the playbook . Radio controls A and B allow the user - to identify a syntax of any variables provided in the variables control .","Upon successful creation of a job template, the user - may request that the access control module  initiate the playbook  identified in the playbook control  against the computing resource  identified in the computing resource control , such as by selecting a launch control , or via some other suitable user input. Upon receipt of the request to initiate the playbook  against the computing resource , the access control module  may first validate, again, that the user - associated with the request has the appropriate permissions, as discussed above, to access the computing resource , and may also validate that the credential identified in the request is designated as being associated with the user -, or a team of which the user - is a member, prior to processing the request.","The access control module  may then generate a reference, such as a URL, to the playbook . The access control module  also accesses the credential definition  associated with the credential identified in the credential control . The access control module  extracts from the respective credential definition  the associated authentication information maintained in the credential definition . In some embodiments, the authentication information may be maintained in an encrypted form, in which case the access control module  may decrypt the authentication information. The access control module  provides the reference to the playbook  and the authentication information to the orchestration engine  for further processing. The orchestration engine  first provides the authentication information to the computing resource  in order to authenticate the imminent actions with the computing resource , and thereafter processes the actions identified in the playbook  against the computing resource .",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 17","FIG. 17","FIG. 1","FIG. 17","FIG. 17","FIG. 17","FIG. 17"],"b":["20","2","28","46","24","1","12","28","24","1","1000","12","38","1002","12","20","2","20","2","20","2","24","1","1004","12","28","26","1006"]},{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 18","FIG. 18","FIG. 16","FIG. 18","FIG. 18","FIG. 18"],"b":["20","46","20","2","292","20","2","12","20","2","20","2","292","2000","12","40","20","2","20","2","2002","2004","12","40","20","2","2006","12","20","2","20","2","16","2"]},{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIG. 19","FIG. 19","FIG. 1","FIG. 19","FIG. 19","FIG. 18"],"b":["20","2","28","46","24","1","12","28","24","1","3000","12","30","29","30","3002","30","20","20","2","12","26","28","3004","12","26","12","26","20","2"]},{"@attributes":{"id":"p-0078","num":"0077"},"figref":["FIG. 20","FIG. 19","FIG. 20","FIG. 20"],"b":["20","20","2","28","46","24","1","12","28","24","1","12","30","20","2","20","2","4000","12","20","2","4002","20","2","20","2","20","2","12","26","28","12"]},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 21","b":["14","14","14","400","402","404","404","402","400","400"]},"The system bus  may be any of several types of bus structures that may further interconnect to a memory bus (with or without a memory controller), a peripheral bus, and\/or a local bus using any of a variety of commercially available bus architectures. The system memory  may include non-volatile memory  (e.g., read only memory (ROM), erasable programmable read only memory (EPROM), electrically erasable programmable read only memory (EEPROM), etc.) and\/or volatile memory  (e.g., random access memory (RAM)). A basic input\/output system (BIOS)  may be stored in the non-volatile memory , and can include the basic routines that help to transfer information between elements within the computing device . The volatile memory  may also include a high-speed RAM, such as static RAM for caching data.","The computing device  may further include or be coupled to a computer-readable storage , which may comprise, for example, an internal or external hard disk drive (HDD) (e.g., enhanced integrated drive electronics (EIDE) or serial advanced technology attachment (SATA)), HDD (e.g., EIDE or SATA) for storage, flash memory, or the like. The computer-readable storage  and other drives, associated with computer-readable media and computer-usable media, may provide non-volatile storage of data, data structures, computer-executable instructions, and the like, including, for example, the access rights repository  and playbooks . Such media may also contain computer-executable instructions for performing novel methods of the disclosed embodiments.","A number of modules can be stored in the computer-readable storage  and in the volatile memory , including an operating system  and one or more program modules , which may implement the functionality described herein in whole or in part, including, for example, the functionality described with respect to the access control module . It is to be appreciated that the embodiments can be implemented with various commercially available operating systems  or combinations of operating systems .","All or a portion of the embodiments may be implemented as a computer program product stored on a transitory or non-transitory computer-usable or computer-readable storage medium, such as the computer-readable storage , which includes complex programming instructions, such as complex computer-readable program code, configured to cause the central processing unit  to carry out the steps described herein. Thus, the computer-readable program code can comprise software instructions for implementing the functionality of the embodiments described herein when executed on the central processing unit . The central processing unit , in conjunction with the program modules  in the volatile memory , may serve as a controller for the computing device  that is configured to, or adapted to, implement the functionality described herein.","The computing device  may also include a communication interface , suitable for communicating with the network  and other networks as appropriate or desired.","While for purposes of illustration the embodiments have been discussed in conjunction with a user interface, some or all of the functionality discussed herein, and in particular the launching of job templates, the determination that a user has appropriate permissions, and the use of credentials, may all be triggered programmatically via appropriate invocation of the API .","Those skilled in the art will recognize improvements and modifications to the preferred embodiments of the disclosure. All such improvements and modifications are considered within the scope of the concepts disclosed herein and the claims that follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawing figures incorporated in and forming a part of this specification illustrate several aspects of the disclosure, and together with the description serve to explain the principles of the disclosure.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIGS. 8A and 8B"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 21"}]},"DETDESC":[{},{}]}
