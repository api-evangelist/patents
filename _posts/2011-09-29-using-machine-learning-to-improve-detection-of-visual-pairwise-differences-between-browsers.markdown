---
title: Using machine learning to improve detection of visual pairwise differences between browsers
abstract: In some embodiments, information associated with a first plurality of image pairs is received. Each image pair is assessed to detect visual pairwise differences that qualify as an error. A visual pairwise difference may be a difference with respect to at least one of position, size, color, or style. A prediction engine is trained based upon the assessed visual pairwise differences. Information associated with a second plurality of image pairs is received. Each of these image pairs comprises at least a portion of a visual end-user experience screen of an event-driven application executed in a client-tier environment. Each of these image pairs is assessed, using the prediction engine, to detect visual pairwise differences that qualify as an error. User feedback is received, indicating that at least one assessed pairwise difference should not have qualified as an error. The prediction engine is then re-trained based on the user feedback.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08805094&OS=08805094&RS=08805094
owner: Fujitsu Limited
number: 08805094
owner_city: Kawasaki-shi
owner_country: JP
publication_date: 20110929
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATIONS","INTRODUCTION","DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["This application hereby incorporates by reference in its entirety and for all purposes, U.S. patent application Ser. No. 13\/248,027, filed on 29 Sep. 2011, entitled \u201cIncremental Visual Comparison of Web Browser Screens\u201d, U.S. patent application Ser. No. 12\/723,568, filed on 12 Mar. 2010, entitled \u201cDetermining Differences in an Event-Driven Application Accessed in Different Client-Tier Environments\u201d and U.S. patent application Ser. No. 13\/026,899, filed on 14 Feb. 2011, entitled \u201cWeb Service for Automated Cross-Browser Compatibility Checking of Web Applications.","The present disclosure relates generally to determining differences in an event-driven application accessed in different client-tier environments.","A web application follows a typical client-server computing model and usually consists of several server and client side components. Server side components get invoked when the web server receives a request (typically, from a remote user through a web browser). As a result of the server side execution, various client side components are dynamically generated and sent back to the web browser in the form of HTML (HyperText Markup Language) pages. These pages, which are rendered by the browser, reference or contain resources such as images, animations, style information (e.g., Cascading Style Sheets (CCS)) and scripts (e.g., JavaScript or VBScript).","A web browser consists of different subsystems that handle various functionality, such as processing the client side components and managing the interactions of these components with system resources (e.g., network, display, file system). In some subsystems of a browser, one of the main components is the layout engine, which is responsible for rendering a web page by parsing the HTML tags in the page and applying to the relevant elements the style information contained in the CSS stylesheets for the page. The browser also maintains a DOM (Document Object Model) representation of the web page in its memory to allow scripts associated with the page to query and modify web page elements. Although there is a standard definition for the DOM format, web browsers often deviate from the standard. Moreover, since most web pages have browser-specific code to make them work on different browsers and platforms, the DOM generated by different browsers can be very different. For this reason, simply comparing the DOM information in different web browsers may not be ideal when comparing web pages rendered in such browsers.","A basic technique for comparing two images is to compare their histograms, where an image histogram represents the distribution of the value of a particular feature in the image. In particular, a color histogram of an image represents the distribution of colors in that image, that is, the number of pixels in the image whose color belongs in each of a fixed list of color ranges (bins). Obviously, if two images are the same, their color distributions will also match. Although the converse is not true, and two different images can have the same histogram, this issue is again not particularly relevant in our problem domain.","Basic histogram-matching techniques find the difference between corresponding bins across two images, which can result in false positives in the case of small shifts. The use of the Earth Movers' Distance (EMD) can alleviate this issue. EMD is a measure of the distance between two distributions and, intuitively, consists of the minimum amount of \u201cwork\u201d required to make the two histograms identical by moving around the quantities in the different bins. Because it can ignore small changes in an image, EMD is widely used in computer vision. For the same reason, it is a suitable approach for the problem of comparing the graphical rendering across web browsers, where we want to be able to account for negligible variations while catching larger changes.","Event-driven applications typically may be accessed in different client-tier environments. However, in many cases, a first client-tier environment may provide a different end-user experience of the event-driven application than a second client-tier environment. These types of issues are far from rare because developers tend to use mostly one browser during development and then port the code to other browsers. Even in the case where multiple browsers are considered from the beginning, it is difficult to test for all possible browsers and versions. Moreover, such testing is performed in a mostly manual manner, and is thus extremely time consuming (and often neglected). In fact, cross-browser issues are notoriously considered to be a major problem by most web application developers.","Layout issues are very common in web applications and result in differences in rendering the web page across browsers that are visible to the user. These issues can be classified as differences in element position, size, visibility, or appearance. Differences in positions and size are self explanatory. Differences in visibility consist of an element not being visible in one or more browsers. Finally, we define as differences in appearance when the an element's style or content is different across browsers.","Functionality issues involve the functionality of a web application and are often due to differences in the way the script elements within a web page are executed by different browsers. Functionality issues typically limit the ability of a user to access specific web page elements, such as widgets. Although the users would identify the problem when they try to exercise the affected elements, these issues are sometimes more difficult to identify because they may not have any visible effect (e.g., a button may be displayed correctly even if it does not work).","Non-Compliant Browsers: Although the client side technologies have associated standards, they continue to evolve. At any point in time, there are thus features that are in the specification but are either not implemented or not implemented correctly in some browsers. These problematic features are often known, and there are web sites that maintain a list of such features to help web developers be aware of them and provide suitable workarounds in their code. The check performed at line  by the script.js script in  is a typical example of one such workaround.","Extra Features in Browsers: Many browsers implement extra features that are not a part of the standard to provide more flexibility to developers. While web developers try to avoid using these features as much as possible, they do use them for convenience. For example, Internet Explorer supports conditional comments\u2014comments that allow the commented out code to conditionally run in Internet Explorer while being","In order to ensure a high-quality user experience, cross-browser testing and regression testing is typically undertaken. However, the conventional manner of performing such testing, which involves a high number of visual comparisons, may be not only time-consuming, but also error-prone.","Embodiments disclosed herein provide methods for utilizing machine learning to improve visual comparison and error prediction when performing cross-browser testing and regression testing of event-driven applications. In some embodiments, diverse factors are analyzed to detect pairwise differences that qualify as meaningful errors.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1","b":["110","120"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2","b":["210","220","230","240"]},"From structured representations  and , a set of matched node pairs  is determined for the screen. The goal is to visually compare each pair of matched nodes. For example, when structured representations of screen  are compared as between the Firefox\u00ae environment  and the Internet Explorer\u00ae environment , each comparison operation  assesses the pair of nodes to determine whether the image in each node displays any pairwise differences.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3","b":["310","320","330"]},"In some embodiments, the prediction engine  learns to classify pairwise differences based on a decision tree classifier that incorporates algorithms to compute or assess a number of different features.","In the Testing Phase, the prediction engine  is then used to test web applications , from which error reports  are generated. Error reports  may contain some number of false-positive errors\u2014user feedback  detecting the false-positive errors may then be applied to re-train prediction engine .",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4","b":["410","420","430","440","450","460","430"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIGS. 5","FIG. 5"],"i":["a ","b ","a"],"b":"5"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 6","FIG. 6"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 7","FIG. 6"]},"Particular embodiments may be implemented in a network environment.  illustrates an example network environment  suitable for providing cross-browser compatibility checking as a web-based service. Network environment  includes a network  coupling one or more servers  and one or more clients  to each other. In particular embodiments, network  is an intranet, an extranet, a virtual private network (VPN), a local area network (LAN), a wireless LAN (WLAN), a wide area network (WAN), a metropolitan area network (MAN), a portion of the Internet, or another network  or a combination of two or more such networks . The present disclosure contemplates any suitable network .","One or more links  couple a server  or a client  to network . In particular embodiments, one or more links  each includes one or more wireline, wireless, or optical links . In particular embodiments, one or more links  each includes an intranet, an extranet, a VPN, a LAN, a WLAN, a WAN, a MAN, a portion of the Internet, or another link  or a combination of two or more such links . The present disclosure contemplates any suitable links  coupling servers  and clients  to network .","In particular embodiments, each server  may be a unitary server or may be a distributed server spanning multiple computers or multiple datacenters. Servers  may be of various types, such as, for example and without limitation, web server, news server, mail server, message server, advertising server, file server, application server, exchange server, database server, or proxy server. In particular embodiments, each server  may include hardware, software, or embedded logic components or a combination of two or more such components for carrying out the appropriate functionalities implemented or supported by server . For example, a web server is generally capable of hosting websites containing web pages or particular elements of web pages. More specifically, a web server may host HTML files or other file types, or may dynamically create or constitute files upon a request, and communicate them to clients  in response to HTTP or other requests from clients . A mail server is generally capable of providing electronic mail services to various clients . A database server is generally capable of providing an interface for managing data stored in one or more data stores.","In particular embodiments, one or more data storages  may be communicatively linked to one or more severs  via one or more links . In particular embodiments, data storages  may be used to store various types of information. In particular embodiments, the information stored in data storages  may be organized according to specific data structures. In particular embodiment, each data storage  may be a relational database. Particular embodiments may provide interfaces that enable servers  or clients  to manage, e.g., retrieve, modify, add, or delete, the information stored in data storage .","In particular embodiments, each client  may be an electronic device including hardware, software, or embedded logic components or a combination of two or more such components and capable of carrying out the appropriate functionalities implemented or supported by client . For example and without limitation, a client  may be a desktop computer system, a notebook computer system, a netbook computer system, a handheld electronic device, or a mobile telephone. The present disclosure contemplates any suitable clients . A client  may enable a network user at client  to access network . A client  may enable its user to communicate with other users at other clients .","A client  may have a web browser , such as MICROSOFT INTERNET EXPLORER, GOOGLE CHROME or MOZILLA FIREFOX, and may have one or more add-ons, plug-ins, or other extensions, such as TOOLBAR or YAHOO TOOLBAR. A user at client  may enter a Uniform Resource Locator (URL) or other address directing the web browser  to a server , and the web browser  may generate a Hyper Text Transfer Protocol (HTTP) request and communicate the HTTP request to server . Server  may accept the HTTP request and communicate to client  one or more Hyper Text Markup Language (HTML) files responsive to the HTTP request. Client  may render a web page based on the HTML files from server  for presentation to the user. The present disclosure contemplates any suitable web page files. As an example and not by way of limitation, web pages may render from HTML files, Extensible Hyper Text Markup Language (XHTML) files, or Extensible Markup Language (XML) files, according to particular needs. Such pages may also execute scripts such as, for example and without limitation, those written in JAVASCRIPT, JAVA, MICROSOFT SILVERLIGHT, combinations of markup language and scripts such as AJAX (Asynchronous JAVASCRIPT and XML), and the like. Herein, reference to a web page encompasses one or more corresponding web page files (which a browser may use to render the web page) and vice versa, where appropriate.","In particular embodiments, the cross-browser compatibility checking service may reside and execute on a server . A user of the service may access the service through a web browser  executing on a client  associated with the user.","Particular embodiments may be implemented on one or more computer systems.  illustrates an example computer system . In particular embodiments, one or more computer systems  perform one or more steps of one or more methods described or illustrated herein. In particular embodiments, one or more computer systems  provide functionality described or illustrated herein. In particular embodiments, software running on one or more computer systems  performs one or more steps of one or more methods described or illustrated herein or provides functionality described or illustrated herein. Particular embodiments include one or more portions of one or more computer systems .","This disclosure contemplates any suitable number of computer systems . This disclosure contemplates computer system  taking any suitable physical form. As example and not by way of limitation, computer system  may be an embedded computer system, a system-on-chip (SOC), a single-board computer system (SBC) (such as, for example, a computer-on-module (COM) or system-on-module (SOM)), a desktop computer system, a laptop or notebook computer system, an interactive kiosk, a mainframe, a mesh of computer systems, a mobile telephone, a personal digital assistant (PDA), a server, or a combination of two or more of these. Where appropriate, computer system  may include one or more computer systems ; be unitary or distributed; span multiple locations; span multiple machines; or reside in a cloud, which may include one or more cloud components in one or more networks. Where appropriate, one or more computer systems  may perform without substantial spatial or temporal limitation one or more steps of one or more methods described or illustrated herein. As an example and not by way of limitation, one or more computer systems  may perform in real time or in batch mode one or more steps of one or more methods described or illustrated herein. One or more computer systems  may perform at different times or at different locations one or more steps of one or more methods described or illustrated herein, where appropriate.","In particular embodiments, computer system  includes a processor , memory , storage , an input\/output (I\/O) interface , a communication interface , and a bus . Although this disclosure describes and illustrates a particular computer system having a particular number of particular components in a particular arrangement, this disclosure contemplates any suitable computer system having any suitable number of any suitable components in any suitable arrangement.","In particular embodiments, processor  includes hardware for executing instructions, such as those making up a computer program. As an example and not by way of limitation, to execute instructions, processor  may retrieve (or fetch) the instructions from an internal register, an internal cache, memory , or storage ; decode and execute them; and then write one or more results to an internal register, an internal cache, memory , or storage . In particular embodiments, processor  may include one or more internal caches for data, instructions, or addresses. The present disclosure contemplates processor  including any suitable number of any suitable internal caches, where appropriate. As an example and not by way of limitation, processor  may include one or more instruction caches, one or more data caches, and one or more translation lookaside buffers (TLBs). Instructions in the instruction caches may be copies of instructions in memory  or storage , and the instruction caches may speed up retrieval of those instructions by processor . Data in the data caches may be copies of data in memory  or storage  for instructions executing at processor  to operate on; the results of previous instructions executed at processor  for access by subsequent instructions executing at processor  or for writing to memory  or storage ; or other suitable data. The data caches may speed up read or write operations by processor . The TLBs may speed up virtual-address translation for processor . In particular embodiments, processor  may include one or more internal registers for data, instructions, or addresses. The present disclosure contemplates processor  including any suitable number of any suitable internal registers, where appropriate. Where appropriate, processor  may include one or more arithmetic logic units (ALUs); be a multi-core processor; or include one or more processors . Although this disclosure describes and illustrates a particular processor, this disclosure contemplates any suitable processor.","In particular embodiments, memory  includes main memory for storing instructions for processor  to execute or data for processor  to operate on. As an example and not by way of limitation, computer system  may load instructions from storage  or another source (such as, for example, another computer system ) to memory . Processor  may then load the instructions from memory  to an internal register or internal cache. To execute the instructions, processor  may retrieve the instructions from the internal register or internal cache and decode them. During or after execution of the instructions, processor  may write one or more results (which may be intermediate or final results) to the internal register or internal cache. Processor  may then write one or more of those results to memory . In particular embodiments, processor  executes only instructions in one or more internal registers or internal caches or in memory  (as opposed to storage  or elsewhere) and operates only on data in one or more internal registers or internal caches or in memory  (as opposed to storage  or elsewhere). One or more memory buses (which may each include an address bus and a data bus) may couple processor  to memory . Bus  may include one or more memory buses, as described below. In particular embodiments, one or more memory management units (MMUs) reside between processor  and memory  and facilitate accesses to memory  requested by processor . In particular embodiments, memory  includes random access memory (RAM). This RAM may be volatile memory, where appropriate Where appropriate, this RAM may be dynamic RAM (DRAM) or static RAM (SRAM). Moreover, where appropriate, this RAM may be single-ported or multi-ported RAM. The present disclosure contemplates any suitable RAM. Memory  may include one or more memories , where appropriate. Although this disclosure describes and illustrates particular memory, this disclosure contemplates any suitable memory.","In particular embodiments, storage  includes mass storage for data or instructions. As an example and not by way of limitation, storage  may include an HDD, a floppy disk drive, flash memory, an optical disc, a magneto-optical disc, magnetic tape, or a Universal Serial Bus (USB) drive or a combination of two or more of these. Storage  may include removable or non-removable (or fixed) media, where appropriate. Storage  may be internal or external to computer system , where appropriate. In particular embodiments, storage  is non-volatile, solid-state memory. In particular embodiments, storage  includes read-only memory (ROM). Where appropriate, this ROM may be mask-programmed ROM, programmable ROM (PROM), erasable PROM (EPROM), electrically erasable PROM (EEPROM), electrically alterable ROM (EAROM), or flash memory or a combination of two or more of these. This disclosure contemplates mass storage  taking any suitable physical form. Storage  may include one or more storage control units facilitating communication between processor  and storage , where appropriate. Where appropriate, storage  may include one or more storages . Although this disclosure describes and illustrates particular storage, this disclosure contemplates any suitable storage.","In particular embodiments, I\/O interface  includes hardware, software, or both providing one or more interfaces for communication between computer system  and one or more I\/O devices. Computer system  may include one or more of these I\/O devices, where appropriate. One or more of these I\/O devices may enable communication between a person and computer system . As an example and not by way of limitation, an I\/O device may include a keyboard, keypad, microphone, monitor, mouse, printer, scanner, speaker, still camera, stylus, tablet, touch screen, trackball, video camera, another suitable I\/O device or a combination of two or more of these. An I\/O device may include one or more sensors. This disclosure contemplates any suitable I\/O devices and any suitable I\/O interfaces  for them. Where appropriate, I\/O interface  may include one or more device or software drivers enabling processor  to drive one or more of these I\/O devices. I\/O interface  may include one or more I\/O interfaces , where appropriate. Although this disclosure describes and illustrates a particular I\/O interface, this disclosure contemplates any suitable I\/O interface.","In particular embodiments, communication interface  includes hardware, software, or both providing one or more interfaces for communication (such as, for example, packet-based communication) between computer system  and one or more other computer systems  or one or more networks. As an example and not by way of limitation, communication interface  may include a network interface controller (NIC) or network adapter for communicating with an Ethernet or other wire-based network or a wireless NIC (WNIC) or wireless adapter for communicating with a wireless network, such as a WI-FI network. This disclosure contemplates any suitable network and any suitable communication interface  for it. As an example and not by way of limitation, computer system  may communicate with an ad hoc network, a personal area network (PAN), a local area network (LAN), a wide area network (WAN), a metropolitan area network (MAN), or one or more portions of the Internet or a combination of two or more of these. One or more portions of one or more of these networks may be wired or wireless. As an example, computer system  may communicate with a wireless PAN (WPAN) (such as, for example, a BLUETOOTH WPAN), a WI-FI network, a WI-MAX network, a cellular telephone network (such as, for example, a Global System for Mobile Communications (GSM) network), or other suitable wireless network or a combination of two or more of these. Computer system  may include any suitable communication interface  for any of these networks, where appropriate. Communication interface  may include one or more communication interfaces , where appropriate. Although this disclosure describes and illustrates a particular communication interface, this disclosure contemplates any suitable communication interface.","In particular embodiments, bus  includes hardware, software, or both coupling components of computer system  to each other. As an example and not by way of limitation, bus  may include an Accelerated Graphics Port (AGP) or other graphics bus, an Enhanced Industry Standard Architecture (EISA) bus, a front-side bus (FSB), a HYPERTRANSPORT (HT) interconnect, an Industry Standard Architecture (ISA) bus, an INFINIBAND interconnect, a low-pin-count (LPC) bus, a memory bus, a Micro Channel Architecture (MCA) bus, a Peripheral Component Interconnect (PCI) bus, a PCI-Express (PCI-X) bus, a serial advanced technology attachment (SATA) bus, a Video Electronics Standards Association local (VLB) bus, or another suitable bus or a combination of two or more of these. Bus  may include one or more buses , where appropriate. Although this disclosure describes and illustrates a particular bus, this disclosure contemplates any suitable bus or interconnect.","Herein, reference to a computer-readable storage medium encompasses one or more non-transitory, tangible computer-readable storage media possessing structure. As an example and not by way of limitation, a computer-readable storage medium may include a semiconductor-based or other integrated circuit (IC) (such, as for example, a field-programmable gate array (FPGA) or an application-specific IC (ASIC)), a hard disk, an HDD, a hybrid hard drive (HHD), an optical disc, an optical disc drive (ODD), a magneto-optical disc, a magneto-optical drive, a floppy disk, a floppy disk drive (FDD), magnetic tape, a holographic storage medium, a solid-state drive (SSD), a RAM-drive, a SECURE DIGITAL card, a SECURE DIGITAL drive, or another suitable computer-readable storage medium or a combination of two or more of these, where appropriate. Herein, reference to a computer-readable storage medium excludes any medium that is not eligible for patent protection under 35 U.S.C. \u00a7101. Herein, reference to a computer-readable storage medium excludes transitory forms of signal transmission (such as a propagating electrical or electromagnetic signal per se) to the extent that they are not eligible for patent protection under 35 U.S.C. \u00a7101. A computer-readable non-transitory storage medium may be volatile, non-volatile, or a combination of volatile and non-volatile, where appropriate.","This disclosure contemplates one or more computer-readable storage media implementing any suitable storage. In particular embodiments, a computer-readable storage medium implements one or more portions of processor  (such as, for example, one or more internal registers or caches), one or more portions of memory , one or more portions of storage , or a combination of these, where appropriate. In particular embodiments, a computer-readable storage medium implements RAM or ROM. In particular embodiments, a computer-readable storage medium implements volatile or persistent memory. In particular embodiments, one or more computer-readable storage media embody software. Herein, reference to software may encompass one or more applications, bytecode, one or more computer programs, one or more executables, one or more instructions, logic, machine code, one or more scripts, or source code, and vice versa, where appropriate. In particular embodiments, software includes one or more application programming interfaces (APIs). This disclosure contemplates any suitable software written or otherwise expressed in any suitable programming language or combination of programming languages. In particular embodiments, software is expressed as source code or object code. In particular embodiments, software is expressed in a higher-level programming language, such as, for example, C, Perl, or a suitable extension thereof. In particular embodiments, software is expressed in a lower-level programming language, such as assembly language (or machine code). In particular embodiments, software is expressed in JAVA. In particular embodiments, software is expressed in Hyper Text Markup Language (HTML), Extensible Markup Language (XML), or other suitable markup language.","Herein, \u201cor\u201d is inclusive and not exclusive, unless expressly indicated otherwise or indicated otherwise by context. Therefore, herein, \u201cA or B\u201d means \u201cA, B, or both,\u201d unless expressly indicated otherwise or indicated otherwise by context. Moreover, \u201cand\u201d is both joint and several, unless expressly indicated otherwise or indicated otherwise by context. Therefore, herein, \u201cA and B\u201d means \u201cA and B, jointly or severally,\u201d unless expressly indicated otherwise or indicated otherwise by context.","This disclosure encompasses all changes, substitutions, variations, alterations, and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend. Similarly, where appropriate, the appended claims encompass all changes, substitutions, variations, alterations, and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend. Moreover, reference in the appended claims to an apparatus or system or a component of an apparatus or system being adapted to, arranged to, capable of, configured to, enabled to, operable to, or operative to perform a particular function encompasses that apparatus, system, component, whether or not it or that particular function is activated, turned on, or unlocked, as long as that apparatus, system, or component is so adapted, arranged, capable, configured, enabled, operable, or operative."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIGS. 5","i":["a ","b "],"b":"5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 7","FIG. 6"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
