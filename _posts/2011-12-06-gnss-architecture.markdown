---
title: GNSS architecture
abstract: Disclosed are various embodiments of Global Navigation Satellite System (GNSS) chipsets or architecture. Based upon a requested accuracy and/or update of a host application, embodiments of the disclosure can calculate position data points on-board the GNSS chipset or allow a host processor to calculate position data points, which can allow the host processor to enter a low power mode if the requested update rate and/or accuracy allow.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09274229&OS=09274229&RS=09274229
owner: BROADCOM CORPORATION
number: 09274229
owner_city: Irvine
owner_country: US
publication_date: 20111206
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["Global Navigation Satellite System (GNSS) chipsets and\/or modules are often found within various types of devices. For example, many smartphone and other mobile devices incorporate a GNSS chipset that provides the ability for the smartphone to execute location based applications, which can take advantage of detection of a geographical location by the GNSS chipset accessible to the smartphone. A navigation device providing turn by turn directions that are rendered on a display device also employs detection of a location by a GNSS chipset. Power consumption of a mobile device can strain resources of a mobile device when a GNSS chipset is activated for purposes of location detection.","Mobile devices often include a Global Navigation Satellite System (GNSS) chipset or module that provides location detection abilities. A GNSS chipset can receive signals from a global and\/or regional satellite network and employ various calculations on the received signals to determine a geographical location of the chipset and a device in which the chipset is integrated. GNSS chipsets can receive signals that are broadcasted from various types of satellite networks, which in some cases can also include ground based repeaters or transmitters that facilitate location detection by a GNSS device. These satellite networks can include, but are not limited to Global Position System (GPS), GLONASS, Galileo positioning system, and other types of location finding systems as can be appreciated.","Some mobile devices in which a GNSS chipset is integrated employ a system-on-a-chip (SoC) GNSS chipset architecture. In such a solution, the entire GNSS system is integrated within a single chipset or module that is integrated in the mobile device. In other words, a SoC GNSS chipset includes various hardware components that compute a requested location at a particular precision and update rate as requested by a host device in which the chipset is integrated. In one example, the output of such a GNSS solution is position, velocity, and time that is calculated by the SoC GNSS chipset from signal measurements associated associated with demodulated signals received from one or more satellites and\/or ground based signal transmitters. For example, an SoC chipset can include a radio frequency tuner(s), baseband processor(s), and one or more central processing units (CPUs) in which a position data point is calculated that expresses a location based upon the signals received in the RF tuner(s).","A SoC GNSS chipset can provide position data points according to an update frequency and\/or a precision parameter that is provided by a host system. In other words, a host CPU in a mobile device executing software on the mobile device can request position data from a SoC GNSS chipset, which can respond to the host CPU with position data points (e.g., position, velocity, and\/or time) based upon the signals received in the chipset. Accordingly, a host CPU, for example, can execute a navigation and\/or geofencing application or process that requires location information. The systems in the SoC GNSS chipset, including the RF tuner, baseband processor(s), and CPU, are activated upon receiving such a request and calculate the requested position data. In other words, the RF tuner, baseband processor, and\/or CPU of the SoC chipset are activated in order to provide the requested position data points for the application executed by the host CPU.","Accordingly, in many mobile device architectures that employ a SoC GNSS chipset, the various components in the SoC chipset as well as the host CPU are active during execution of a location application. This situation exists because the host CPU executes a location application, which relies on position data points that are calculated by the CPU of the SoC GNSS chipset. Therefore, in such a situation, the host CPU as well as the CPU in the SoC GNSS chipset are consuming power and potentially draining power resources (e.g., battery) of a mobile device in which they are integrated.","Another GNSS chipset architecture that can be employed in a mobile device or other types of devices is known as a GNSS host based architecture. A host based architecture allows for a less expensive and potentially smaller GNSS chipset to be integrated in a mobile device architecture, as such an architecture relies on a host CPU in a host device to compute a navigation solution, or position data points, from signal measurements received by an RF subsystem and that are processed by a baseband processor. In one embodiment, the baseband processor includes the ability to perform certain control logic functions that are present in a SoC GNSS CPU but does not calculate a complete location solution. In other words, the output of the baseband processor can be certain intermediate data, such as raw correlation energy results, that are based upon the signals received in the RF tuner, which are transmitted to a host CPU in a host device. Accordingly, the host CPU can convert the intermediate data to position data points. In many cases, a software library including an application programming interface is provided by a GNSS chipset vendor that allows the host CPU to make such a conversion.","Because a host based architecture does not include an on-board CPU that calculates position data points and instead relies on the host CPU to perform such calculations, a smaller GNSS chipset is realized. However, location applications executed by the host CPU on behalf of a host device require the host CPU to be powered in order to track a location of the host device and calculate position data from intermediate data received from the host based GNSS chipset. Accordingly, power consumption is also a concern in traditional host based architectures.","Therefore, embodiments of the disclosure are generally related to a GNSS module or chipset that can include multiple modes that can reduce power consumption in a device depending upon a type of location application requested by a host device in which it is integrated. Generally speaking, location applications that require frequent position update rates and\/or a high degree of position precision or accuracy can be serviced by a GNSS chipset according to an embodiment of the disclosure that effectively mirrors a host based architecture. Location applications that require less frequent position update rates and\/or a lower degree of position precision or accuracy can be serviced by an embodiment of the disclosure that calculates position data points with a CPU that is on-board the GNSS chipset. However, in such a scenario, the CPU can be one that consumes far less power than the host CPU and also allows the host CPU to enter a sleep and\/or an underclocked state in certain situations, which allows the mobile device to consume less power because the host CPU need not calculate position data points.","Therefore, reference is now made to , which illustrates one embodiment of a GNSS system  according to the present disclosure. It should be appreciated that the depicted examples in the accompanying figures represent but one example and that other variations consistent with the disclosure should be appreciated by a person of ordinary skill in the art. The GNSS system  shown in  can comprise one or more integrated circuits. The GNSS system  is coupled to at least one RF antenna system  that can receive signals from one or more satellites and\/or ground-based transmitters in a global navigation satellite system. The RF antenna system  can be provided as a part of a host device  architecture and\/or the GNSS system . A host device  can include a mobile device, such as a smartphone, tablet computing device, navigation device, personal computing device, a device that execution an application in which a location of the device is relevant or any other devices incorporating a GNSS system or chipset as can be appreciated. In many implementations, the GNSS system  will rely on an RF antenna system provided by a mobile device in which the GNSS system  is integrated to receive one or more signals from a GNSS satellite or other transmitter.","Analog or RF signals that are received by the RF antenna system  are extracted by an RF tuner  in the GNSS system . The RF tuner  can convert the RF signals received by the RF antenna system  into a digital signal that can be provided to and subsequently processed by the baseband processor . As with SoC and traditional host based architectures, the baseband processor  can demodulate GNSS signals from the signals received from the RF tuner . The GNSS system  also includes a CPU  that is configured with the ability to calculate position data, which can include position, velocity, time and\/or other position related data points from signal measurements based upon the demodulated signals received by the baseband processor . In the context of this disclosure, signal measurements can include pseudorange measurements, Doppler measurements, raw signal measurements, or any other that can be received by the RF tuner  as can be appreciated. A host interface  is also provided in the GNSS system , which allows communication of data to or from the baseband processor  and\/or the CPU  with the host device. In the depicted example, the host interface  communicates with a device interface  with which a host CPU  can likewise communicate.","The on-board CPU  with which the GNSS system  is configured can include one that exhibits low power consumption relative to traditional SoC GNSS chipsets. Accordingly, as a low power consumption CPU , the CPU  may not possess the capability to calculate position data points with the degree of accuracy and at an update rate as high as with some SoC GNSS chipsets. However, because of its lower power consumption, such a tradeoff can be desirable in the context of certain location based applications. The CPU  can be configured to calculate position data points using a least squares algorithm, while a SoC GNSS chipset may employ a more precise Kalman filter to calculate position data points. Employing a less precise but potentially computationally simpler algorithm to calculate position data points can allow the CPU  to be configured as a lower power consumption processor relative to one in a SoC GNSS that employs more computationally intensive algorithms.","The CPU  can also be configured to execute a certain location application without interactions with a host CPU . Accordingly, in some embodiments, the GNSS system  can be configured on on-board memory and\/or mass storage (e.g., flash memory) to facilitate configuration and execution of a location application aboard the GNSS system  by the CPU . The execution of a location application by the CPU  is described in further detail below.","In many embodiments, the host interface  of the GNSS system  comprises a serial interface and the device interface  can comprise a corresponding serial interface with which the host CPU  can also communicate. In this way, position data points, correlation energy results, and other data can be transferred between the host CPU  and the various components of the GNSS system . The host CPU  can comprise a processor in a host device, such as a smartphone, navigation system device, or other device that can execute an application that uses location data provided by the GNSS system . For example, the host CPU  can comprise a main CPU of a smartphone that facilitates display of information on a smartphone display, exchange of information over various types of networks (e.g., local area networks, wide area networks, etc.), process user input (e.g., via a keyboard and\/or capacitive touchscreen input device, etc.), and execute potentially many other operations, applications and processes.","The host CPU  can also execute a decision processor , which can comprise one or more commands provided by a software application programming interface (API) that can be provided to communicate with the GNSS system . The decision processor  can represent one or more API calls made by the host CPU  and\/or an application executed by the host CPU  that determine a mode in which the GNSS system  operates, as is described in further detail below. The functionality of the decision processor  can also be provided within the CPU  of the GNSS system , a separate hardware processor, or any other alternative implementation as should be appreciated. The depicted implementation of a process executed by the host CPU  is only one example for the sake of discussion in the present disclosure.","In the context of this disclosure, a location application can include any process, service, and\/or application that includes a location component. That is to say that a location application can be any application that requests position data points (e.g., latitude, longitude, velocity, etc.) that can be derived from signals received by the RF antenna system . A location application can include a browser executed in a host device that requests a location of the host device. A location application can also include a geofencing application that allows a user to specify a virtual perimeter, points of interest, or other geographic markers that, when breached or approached, the application takes some action. Such an action can include generating a notification to a user or any other action as can be appreciated. A location application can also include a turn-by-turn vehicle navigation application that overlays a location of the host device onto a map that is rendered on a display associated with the host device.","Therefore, the various types of location applications can have varying requirements for location precision or accuracy as well as an update rate (e.g., frequency with which the location is updated). For example, a turn-by-turn navigation application may require very precise and\/or accurate position data (e.g., with error of no more than a few meters) as well as a very high update rate so that the position of the mobile device can be tracked and overlaid on a map interface in close to real time. A geofencing application may require less precise and\/or accurate position data and a less frequent update rate (e.g., once per minute) because the need to update the location of the device on a real time basis does not exist.","Accordingly, the decision processor  can determine a mode in which the GNSS system  operates depending upon the type of location application that the host device requests or requires. The decision processor  can also determine GNSS system  mode depending upon the update rate as well as precision or accuracy requested by an application requesting position data points from the GNSS system . When location data is not required by a location application executing in the host device, the GNSS system  can enter a sleep mode so that the power consumption of its various components is minimized. When location data is required, the host CPU  can invoke the decision processor  when location data is required from the GNSS system  by submitting a request for position data points. Such a request can be initiated by a location application by making a call to a software API or a GNSS system  device driver that is configured facilitate communications with the GNSS system .","The request to the decision processor  can include one or more mode parameters that describe the location precision and\/or update rate requested by the location application. Depending upon the requested location precision or update rate, the decision processor  can cause the GNSS system  to enter a host mode, which wakens the RF tuner  and baseband processor , and where the host CPU  receives intermediate data, such as, for example, raw correlation energy data from the baseband processor  via the host interface . In such a host mode, the host CPU  can calculate position data points at a desired update rate from the intermediate data received from the baseband processor . Additionally, the decision processor  can transmit a command to the on-board CPU  to cause the CPU  enter or remain in a sleep or underclocked mode, which minimizes power consumption of the GNSS system . The decision processor  can invoke such a host mode when the update rate exceeds a predefined update rate threshold. In other words, if the location application requests or requires position data at a relatively high update rate, one that the CPU  cannot meet due to the fact that it is configured as a low power consuming processor with less capability relative to a SoC GNSS CPU, the decision processor  can determine that the location application is best served by the position data points being calculated by the host CPU  as in a host based architecture.","Additionally, if the location application requests or requires positional accuracy of the position data points used by the application to be more accurate than a predefined accuracy threshold, the decision processor  can also select the host mode. In other words, if the location application requests or requires position data at a relatively high accuracy, one that the CPU  cannot calculate due to the fact that it is configured as a low power consuming processor with less capability relative to a SoC GNSS CPU, the decision processor  can determine that the location application is best served by the position data points being calculated by the host CPU  as in a host based architecture.","Alternatively, decision processor  can also cause the GNSS system  to enter a mode in which the on-board CPU  calculates position data on behalf of a location application initiated in the host device and\/or host CPU . In this scenario, the decision processor  can select such a mode if the update rate requested or required by the location application is less than a predefined update frequency threshold and if the accuracy requested or required by the application is also less than a predefined accuracy threshold. In other words, if the on-board CPU  is capable of delivering position data to meet a level of service requested by the location application, then the decision processor  can allow the CPU  to calculate the position data at the requested update rate.","Additionally, a software API provided in conjunction with the GNSS system  can allow a location application initiated in the host CPU  to be executed in the on-board CPU  of the GNSS system . In such a scenario, the host CPU  can enter a sleep or underclocked mode and rely on the CPU  to execute the location application. Accordingly, the CPU  can alert or wake the host CPU  when a particular condition is met that requires notification of the host CPU . For example, the CPU  can, for example, be configured to execute a geofencing application. The host CPU  can, via a software API, setup the geofence parameters as a part of a request for position data points submitted to the decision processor , which includes various geographical locations or markers associated with a geofence virtual perimeter. Upon setting up the geofence parameters, the host CPU  can enter a sleep or underclocked mode to reduce power consumption if other operations, applications or processes in the host device do not require the attention of the host CPU . The CPU  can then track a location of the device and alert the host CPU  when a location of the device breaches or approaches a location specified by the geofence. In other words, the CPU , which is a lower power processor that consumes less power than the host CPU , can execute the location application and wake the host CPU  when it is needed to perform an operation based upon a condition of the geofence parameters being met.","The request submitted by the host CPU  to the decision processor  can also include an application mode associated with a location application executed in the host device. In other words, a location application can submit a request to the decision processor  for a \u201cgeofencing mode,\u201d a \u201cnavigation mode,\u201d or other application modes that specify which of the CPU  or the host CPU  is to calculate position data points for the location application.","Reference is now made to , which illustrates an example of a GNSS system  in a host mode where the host CPU  in a host device calculates position data points based upon intermediate data provided by the baseband processor  of the GNSS system . In the depicted example, the host CPU  executes a location application  that requests or requires location data from the GNSS system . The decision processor  () determines that the update rate and\/or accuracy requirements of the requested location data cannot be met by the on-board CPU . Accordingly, the decision processor  places the GNSS system  in a host mode. In such a scenario, the on-board CPU  can be placed into a sleep or underclocked mode to reduce power consumption of the GNSS system . As noted above, the host CPU  can employ higher accuracy algorithm, such as a Kalman filter, to calculate position data points relative to the on-board CPU .","Reference is now made to , which illustrates an example of the GNSS system  in a mode where the on-board CPU  calculates position data based upon signal measurements received from the baseband processor . In the example of , the decision processor  (), upon receiving a request for position data from a location application in the host CPU , can determine whether the position data points can be calculated by the on-board CPU  according to the requested accuracy and\/or update rate requirements. Additionally, the on-board CPU  can be configured to execute at least a portion of the location application  (e.g., location tracking related to a geofencing application) and alert the host CPU  when a certain condition is met. The host CPU  can also enter a sleep or underclocked mode until awoken by the CPU  when, for example, the virtual perimeter associated with a geofence is breached or is approached.","Referring next to , shown is a flowchart that provides one example of the operation of a portion of the decision processor  () according to various embodiments. It is understood that the flowchart of  provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the decision processor  as described herein. As an alternative, the flowchart of  may be viewed as depicting an example of steps of a method implemented in the CPU , host CPU , and\/or any other processor or device associated with a host device  according to one or more embodiments.","To begin, in box , the decision processor  obtains a request for position or location data from the GNSS system . As noted above, the request can be initiated by a location application executed by the host CPU  and made via a software API provided to facilitate communication with the GNSS system . The request can also include various mode parameters, which can include a requested location accuracy and a requested update rate. The mode parameters can also include a parameter that defines a specific type of mode, such as a navigation mode or a geofencing mode. Such a request can also include one or more parameters that, for example, can define various geographical boundaries and\/or markers associated with a geofence and\/or a navigation route.","In box , the decision processor  can extract the mode parameters and identify a mode in which the GNSS system  can be placed in box . In the example of , the decision processor  can determine, based upon the mode parameters extracted from the request, whether the GNSS system should be placed in a CPU mode. In other words, the decision processor  can determine whether the on-board CPU  should calculate position data points and potentially execute a location application on behalf of the host CPU . If the decision processor  determines that the host CPU  will calculate position data points based upon data received from the baseband processor  in box , then the CPU  can be placed in a sleep or underclocked mode to reduce or eliminate its power consumption in box . If the decision processor  determines that the on-board CPU  can calculate position data points at an acceptable update rate based upon the mode parameters in the request, the GNSS system  can be placed in a corresponding mode so that the CPU  can calculate the position data points in box .","Referring next to , shown is a flowchart that provides one example of the operation of a portion of the decision processor  () according to various embodiments. It is understood that the flowchart of  provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the decision processor  as described herein. As an alternative, the flowchart of  may be viewed as depicting an example of steps of a method implemented in the CPU , host CPU , and\/or any other processor or device associated with a host device  according to one or more embodiments.","First, in box , the decision processor  can obtain a request for position data points from the GNSS system . In boxes  and , the decision processor  can extract the mode parameters from the request and identify a mode in which the GNSS system  can be placed. In box , if the decision processor determines that the GNSS system  will be placed in a host mode, then the host CPU  can calculate position data points in box  as if the GNSS system  is a host based architecture. In box , if the decision processor  determines that the on-board CPU  of the GNSS system  can calculate position data points as well as potentially execute a location application on behalf of the host CPU , then in box  the decision processor  can transmit the mode parameters to the CPU , which can calculate position data points according to an update rate specified by the mode parameters or an application mode specified by the request. In some embodiments, in box , the decision processor  can also initiate the host CPU  to enter a sleep or underclocked mode to reduce power consumption of a host device  in which the GNSS system  is integrated.","It should be emphasized that the above-described embodiments of the present invention are merely possible examples of implementations, merely set forth for a clear understanding of the principles of the invention. Many variations and modifications may be made to the above-described embodiment(s) of the invention without departing substantially from the spirit and principles of the invention. All such modifications and variations are intended to be included herein within the scope of this disclosure and the present invention and protected by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Many aspects of the invention can be better understood with reference to the following drawings. The components in the drawings are not necessarily to scale, emphasis instead being placed upon clearly illustrating the principles of the present invention. Moreover, in the drawings, like reference numerals designate corresponding parts throughout the several views.",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIGS. 2-3","FIG. 1"]},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIGS. 4-5","FIG. 1"]}]},"DETDESC":[{},{}]}
