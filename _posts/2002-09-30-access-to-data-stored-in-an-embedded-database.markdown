---
title: Access to data stored in an embedded database
abstract: The solution concerns the access to a number of data files stored in the memory of a data processing device. The device includes a privilege file (P-P) associated with a user type (ADM, PUBLIC, USER, USER), the privilege file identifying for at least one command (SEL, INS, UPD, SUP) the data files on which the command can be executed. A microcontroller is programmed to create, when a user accesses the data files, a set of flags from the privilege file, each flag being associated with a unique data file, the flag indicating whether or not the command can be executed on the associated file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07891571&OS=07891571&RS=07891571
owner: Gemalto SA
number: 07891571
owner_city: Meudon
owner_country: FR
publication_date: 20020930
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","DESCRIPTION OF THE RELATED ART","SUMMARY OF THE INVENTION","DESCRIPTION OF THE INVENTION"],"p":["This invention concerns a method to authorise access to data stored in a database on a computer such as a cellular telephone, an electronic assistant, a smartcard, etc. Note that a computer is a programmable machine capable of data processing.","The example chosen to illustrate the invention is that of the smartcard. The language currently used on smartcards is a sub-assembly of SQL (Structured Query Language) called SCQL (Structured Card Query Language). SCQL is a relational database query language described in standard OSI 7816-7 published by ISO (International Standard Organisation).","More generally, the invention applies to any emerging or future database whose model would be similar to that of the relational model. Consequently, the term relational database also means a database whose model is similar to the relational model.","Smartcard users may have various profiles. The ISO standard defines these various profiles and how the privileges granted to these users are organised in memory.","There are three user profiles with their respective privileges.","A first user DB_O is called the \u201cdatabase owner\u201d. In particular, this user is authorised to\n\n","Another user DB00 called the owner of the database object also has a profile. His profile gives him the following rights:\n\n","A last user profile DBBU is the basic user of the database and has a specific identifier or a general identifier known as Public.","An identifier is generally called a \u201cuser Id\u201d by those skilled in the art.","These users and their respective privileges are defined in tables called system tables.","A first system table U is the table describing the database users. This table comprises columns, including in particular:\n\n","A second table P defines the user privileges. This table comprises in particular:\n\n","The data is stored in tables with a unique name. They consist of columns and rows.","Note that a view is a logical sub-assembly of a table which defines the accessible part of the table. A view on a system table is called a dictionary. In the remainder of the description, to ensure that the description is clear, the term table will refer to a table, a view or a dictionary.","The privileges describe which tables can be accessed and by which users. They also define the actions that these users can make on the respective table.","Only the following actions can be carried out on a table:\n\n","This current structure of user and privilege tables takes up too much memory space. We must not forget that there are strict hardware constraints on a smartcard, especially the limited memory space.","In addition, the users are defined in a common user table. When a user wants to access the data contained in the data tables, his identity (identification step) and privileges (authorisation step) are checked. These two steps involve first checking that the description of the user making a connection is defined in the user table U; then checking his rights to execute commands (select, insert, update, delete) in the privilege table P; lastly, taking the decision whether or not the user in question is authorised to access the data of the table in question. These steps take a certain amount of time, which considerably reduces the desired performance of the smartcard. When a user is connected to the database, each time he executes a command, the same identification and authentication steps are carried out. This redundancy considerably increases the time involved in this type of mechanism.","Lastly, there is further problem since, according to standard OSI 7816-7, a table can only be deleted by its owner. For example, if a user with profile DBOO creates a table, the user with profile DB_O cannot access this table since he does not own this object. This means that there is no hierarchy as such between users. In other words, the user with profile DB_O, although owner of the database, does not have the rights over some objects in the database. In the database, there is no user whose profile offers complete control over the database.","One objective of the invention is to:\n\n","A second objective is to design a true user hierarchy.","The purpose of the invention is therefore to define a data processing device including a number of data files, wherein it comprises\n\n","The invention also concerns a smartcard including a number of data tables, wherein it comprises\n\n","The solution also concerns a method to access a number of data tables of a data processing device including a privilege file associated with a user type, said privilege file identifying for at least one command the data files on which said command can be executed, the method including, when a user accesses the data files, a step to create a set of flags from the privilege file, each flag being associated with a unique data file, the flag indicating whether or not the command can be executed on the associated file.","The invention also concerns a computer program including program code instructions to execute the step to create a set of flags of the method previously defined, when said program is executed on a data processing device previously defined.","It will be easier to understand the invention on reading the description below, given as an example and referring to the attached drawings.","To simplify the description, the same elements illustrated in the drawings have the same references.",{"@attributes":{"id":"p-0033","num":"0057"},"figref":"FIG. 1","b":["1","1"]},"In our example, a cellular telephone POR communicates with this server SERV to exchange data. The cellular telephone includes a smartcard CAR including an electronic module MOD.","The data exchange between a server SERV and a cellular telephone POR may consist, for example, of updating the data stored on the smartcard CAR.","The invention is not limited to this example of realisation. Any device, such as a reader LEC connected to a PC, could have been used as an example to illustrate the invention.","The cellular telephone POR and the module MOD exchange data according to a data protocol, preferably the standardised protocol T=0 defined in standard ISO 7816-3. Any other protocol (T=1, etc.) could have been used to implement the invention.","A smartcard includes an electronic module (not shown). The module includes a microcontroller and contacts to communicate with the exterior. The microcontroller generally includes:\n\n","The operating system has a command set which it can execute upon request. It manages the communication with the exterior, using a standardised and secured communication protocol. The commands given are validated by the operating system before being executed (validation of user privileges). It may contain confidential information since it carries out itself an access check on its secured files.","A relational database query language is used to store data on the card. In our example, the query language is SCQL. An API, known by those skilled in the art, converts SQL commands into SCQL commands and vice versa.  shows a diagrammatic representation of the card, a server and the API. The API converts SQL commands into SCQL commands and vice versa.","The problem concerns the management of access rights to data in the database embedded on the smartcard.","To illustrate the solution, four users (ADM, PUBLIC, USER, USER) have been represented on .","User ADM with administrator profile has all rights over data tables T and T.","The user with the PUBLIC profile is any user who does not have to be identified or authenticated. This user has limited privileges. Generally, this user has the default privileges granted to all users. For example, a user with the PUBLIC profile may only have the right to select\/read data on the tables. The limitation of privileges is defined by the administrator when creating the tables.","USER and USER are users whose privileges were created with a \u201cGrant\u201d command known by those skilled in the art. We will give a brief reminder of the principles of this command. According to standard ISO 7816-7, the SCQL \u201cGrant\u201d command is used to grant privileges to a user, a group of users, or all users. For example, the following privileges could be granted to access a table:\n\n",{"@attributes":{"id":"p-0046","num":"0081"},"figref":"FIG. 3","b":["1","2"]},"The solution consists of creating a privilege file for all or some of the users. In our example of realisation, the privilege files are privilege tables P-P created for the respective users USER, USER and PUBLIC. In our example, a privilege table includes two columns, one including the commands (select, insert, update, delete), the other including all respective tables on which the command in question is authorised.","In our example, the privilege table P of USER shows that USER is authorised to execute the \u201cselect\u201d command on tables T and T. The user is also authorised to execute the \u201cinsert\u201d, \u201cupdate\u201d and \u201cdelete\u201d commands on table T.","In our example, the privilege table P of USER shows that USER is authorised to execute the \u201cinsert\u201d and \u201cupdate\u201d commands on table T. The user is also authorised to execute the \u201cselect\u201d and \u201cdelete\u201d commands on table T.","In our example, the privilege table P of user PUBLIC shows that this user is authorised to execute only the \u201cselect\u201d command on the two tables T and T.","The solution also consists of associating with each data table T and T at least one flag associated with a respective command, the flag can have one of two states (on\/off) indicating whether or not the current user is authorised to access the respective command. Preferably, these flags are built, using a program loaded in memory in the microcontroller, when the user makes a connection.","In our example of realisation, the flag states (on\/off) are represented as tables TP and TP. Table TP includes a first column including four flags (on\/off) and a second column including the respective command (select, insert, update, delete).","The privilege tables P-P and the flag tables TP and TP interact when a command is executed by a user (ADM, PUBLIC, USER, USER). The interaction consists of setting the flags in a defined state in the privilege table of the current user.","Preferably, especially to reduce the amount of memory required, no privilege table is created for the user with administrator profile ADM. Since this user has all rights, all flags are automatically set to state ON.","The method used to authorise access to the database includes several steps.","A first step consists of connecting to the database.","During a second step, an authentication mechanism is activated to check whether the user connecting is saved and to determine his profile. There are three possibilities depending on whether the user connecting has\n\n","If the user is the administrator, all flags in the two privilege tables TP and TP are automatically set to ON state, indicating that he has all rights over the database BDD.  represents the flag states. In our example, when the administrator connects, his identity is checked. For example, a mechanism can check his user Id and password. This check is carried out using a PRESENT command (defined in ISO 7816-7) known by those skilled in the art.",{"@attributes":{"id":"p-0059","num":"0097"},"figref":"FIG. 5","b":["1","2","1","2"]},{"@attributes":{"id":"p-0060","num":"0098"},"figref":"FIG. 6","b":"1"},"Firstly, the \u201cPRESENT\u201d operation is carried out. This operation consists of checking the user Id and password of this user. If the check is positive, the user in question is considered as the current user of the database and the flag update mechanism is implemented.","In table TP, the flag associated with the \u201cselect\u201d command has ON state. In the same table, the flags associated with the \u201cinsert\u201d, \u201cupdate\u201d and \u201cdelete\u201d commands have OFF state. This means that USER will be authorised to select data in table T and will not be authorised to insert, update or delete data in table T.","In table TP, the flags associated with the \u201cselect\u201d, \u201cinsert\u201d, \u201cupdate\u201d and \u201cdelete\u201d commands all have ON state. This means that USER can execute all the commands on table T.","The same logic applies to users with profiles USER and USER.","This way of organising the users offers an advantage since the users are structured in a hierarchy. This structure can be illustrated using a tree. In this tree, the administrator is at the root of the tree and can have the following rights:\n\n","Users, apart from the user with administrator profile, are son nodes (or subordinates) of the root. The rights granted to the son nodes are defined in the privilege tables.","In our example of realisation, the profiles PUBLIC and USER have a common point since their privileges are limited. The difference between these two profiles is that the USER profile must be identified (PRESENT USER command, standard ISO 7816-7).","Another advantage of the solution is that it stores in memory the states of all flags throughout a user's session. A session, within the context of the invention, is the period during which a user is connected to the database. For example, if a user with the PUBLIC profile connects a first time to the database and executes a command, the flag states are not modified throughout the session duration. Consequently, during the session, commands are executed immediately. For security reasons, however, a password may be requested periodically during the session.","Generally, the purpose of the invention is to define a data processing device including a number of data files, wherein it comprises\n\n","Obviously, the invention is not limited to a single privilege file. Several privilege files may coexist in the same data processing device.","In the introduction, it is specified that the invention applies to any data processing device, especially the smartcard. The solution therefore also concerns a smartcard (CAR) including a number of data tables (T-T), wherein it comprises\n\n","The invention also concerns the resulting access method. The method applies to a number of data tables (T-T) of a data processing device including a privilege file (P-P) associated with a user type (ADM, PUBLIC, USER, USER), said privilege file identifying for at least one command (SEL, INS, UPD, SUP) the data files on which said command can be executed, the method including, when a user accesses the data files, a step to create a set of flags from the privilege file, each flag being associated with a unique data file, the flag indicating whether or not the command can be executed on the associated file.","Preferably, we have seen that no privilege file is created for the administrator. A privilege file for the administrator profile would consist of a table with a first column including the commands (select, insert, update, delete) and a second column including for each command all the data files on which the command can be executed. The hardware constraints of a smartcard are too restricting to allow this type of implementation.","We have seen that the method consists, when a user connects to the database, of setting the flags according to the privileges defined in this user's privilege file.","We have also seen that when a user connects to a database, he often executes several commands successively during the same session. Advantageously, the solution consists of keeping the flag states throughout the current user's session.","We have also seen that several users may have the same privileges on data files in the database. A solution consists, for example, of only creating one privilege file common to this group of users. The user Ids of these users point to this common table.","We have also seen that an administrator has all rights in the database. The user has all rights on the data in the data files. He also has all rights on all users; he can grant\/cancel privileges. For the administrator, the solution consists of setting all flags to ON state when he connects to the database.","To guarantee security, when a user (USER, USER, ADM) makes a connection, the method is improved by a password check to ensure that the user is authorised to access the database.","We have also seen that the solution consists of creating a privilege file solely for those users with limited privileges on the database.","Lastly, the invention also concerns a computer program including program code instructions to execute the step to create a set of flags of the method previously defined, when said program is executed on a data processing device as previously defined.","We see that this invention offers numerous advantages. This mechanism consists of storing as much information as possible in the privilege tables. The new structure of the privilege tables is efficient since it only contains the table identifiers. These identifiers may be pointers which can point to flags to set them when a user connects to the database.","We can also see that the identification and authentication method is simplified and considerably reduces the time required when a user accesses the database. We have seen that during a session the flag states of the current user are stored, which reduces the same repetitive identification and authentication operations during a given session.","In addition, a true hierarchy has now been created between the users. Only the administrator can grant or cancel privileges. Moreover, we have seen that several users may have the same access rights on tables; if several users of the database have the same privileges, the solution consisting of only creating a privilege table common to these users considerably reduces the memory space required.","Although specific embodiments of the invention have been described and illustrated, the invention is not to be limited to the specific forms or arrangements of parts so described and illustrated. The invention is limited only by the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0028","num":"0000"},"ul":{"@attributes":{"id":"ul0017","list-style":"none"},"li":{"@attributes":{"id":"ul0017-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0018","list-style":"none"},"li":{"@attributes":{"id":"ul0018-0001","num":"0052"},"figref":"FIG. 1"}}}}},{"@attributes":{"id":"p-0029","num":"0053"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0030","num":"0054"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0031","num":"0055"},"figref":"FIGS. 4","b":["5","6"]}]},"DETDESC":[{},{}]}
