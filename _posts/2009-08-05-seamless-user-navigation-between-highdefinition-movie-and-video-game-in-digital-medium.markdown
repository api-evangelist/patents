---
title: Seamless user navigation between high-definition movie and video game in digital medium
abstract: Seamless navigation is provided between high-definition audio-video content configured for use with a media player application, and an executable video game packaged with the audio-video content on a digital medium. An API module is distributed to player/consoles. An application provided with the high-definition audio-video content detects the presence of the API module on the player device. In response to detecting the API module, the application provides an interactive feature that uses the API module to load and execute the executable video game in response to user input.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08444485&OS=08444485&RS=08444485
owner: Warner Bros. Entertainment Inc.
number: 08444485
owner_city: Burbank
owner_country: US
publication_date: 20090805
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority pursuant to 35 U.S.C. \u00a7119(e) to U.S. provisional application Ser. No. 61\/086,434, filed Aug. 5, 2008, which is hereby incorporated by reference, in its entirety.","1. Field","The present disclosure relates to a system and method for enabling seamless user navigation between a high-definition movie and a video game encoded together in a digital medium.","2. Description of the Related Art","For a given movie or other audio-video content property, a studio may publish and distribute several derivative or related products in various distribution packages. For example, for a given movie property, a studio may publish and distribute the movie on a DVD disc or a Blu-ray\u00ae disc, while distributing a thematically related video game, for example, a game console video game, e.g. PlayStation 3\u00ae game, or a video game configured for play on a personal computer. In some instances the studio may wish to distribute the video game inside the same distribution package as the DVD or Blu-ray\u00ae disc product, perhaps for cross-marketing purposes. For example, a Blu-ray\u00ae movie and game console video game may be distributed together on the same disc medium; however, the concepts discussed herein may also be applied to combinations of audio-video content and video games using other data standards or formats, and on various media.","Characteristically, the high-definition movie or other audio-video content is configured for playing using a media player application installed on a player\/console device, and principally comprises audio-video data defining successive frames of a video production that cannot be transformed into useful audio-video output (e.g., a movie showing) without using a compatible application installed on a player device. The media player application may be pre-installed on the player device, or provided with the audio-video content. In comparison, the video game is characteristically an application bundle including both executable code and static audio-video data for processing by the executable code to produce successive frames of video output. The executable code is not pre-installed on the player\/console device. The video game's executable code is configured for installation and execution through a compatible console's operating system, sometimes referred to as a user interface. Once installed and executing on the compatible console from the distribution package, the video game executable code accesses the static video game audio-video data to generate video game output that is responsive to input from a user interface device. Characteristically, the video game executable cannot be used to view or access the frame-based audio-video content, and the media player application cannot be used to access the video game's static audio-video output to provide video game output.","Combined distribution of a Blu-ray\u00ae movie and an executable video game has been accomplished by either including a second disc in the Blu-ray\u00ae package or by manufacturing a double-sided disc that contains a Blu-ray\u00ae movie content on one side and an executable video game content on the other side. However, both of these solutions are less than ideal, since it requires the consumer to swap discs or flip the disc over in order to switch between the Blu-ray\u00ae movie and video game, disrupting what might otherwise be a seamless user experience. It would be desirable, therefore, to provide a system or method that overcomes this and other limitations of the prior art.","An apparatus and method are disclosed herein for providing digital audio-video content and an executable video game encoded together in a single medium, configured so as to permit seamless transitions between viewing the audio-video content and executing the video game. The executable video game is not capable of processing the frame-based audio-video content to provide a display output; that function is performed by a distinct and separate media player application operating on the media player device.","As used herein, \u201cframe-based audio-video data\u201d refers to data that defines successive frames (including keyframes and interframe data) used to generate a predetermined succession of video frames with accompanying audio, usually after the data undergoes an image decompression process. Frame-based audio-video data may include, for example, DVD data or Blu-ray\u00ae movie data. \u201cStatic audio-video data\u201d refers to textures, data that mathematically models physical spaces or objects, audio sound bite files, viewpoint and camera data, and other data used for producing interactive audio-video output using a game engine. Video game data may also include some frame-based audio-video data used, for example, to generate short video clips in response to predefined game events. However, to enable a high degree of interactivity, the video game's data core should comprise mainly static audio-video data for processing by a game engine. Conversely, frame-based data may include some static elements used to generate menu screens and menu objects. Nonetheless, it should be apparent that media player applications and video game applications perform fundamentally different, non-interchangeable processing tasks to provide their respective audio-video outputs.","Frame-based audio-video content and an executable video game may be encoded together on a single digital medium, for example, on a single Blu-ray\u00ae (or other high-definition video format) disc. Such a disc may, for example, include both a Blu-ray\u00ae movie and video game on the same disc side. The Blu-ray\u00ae movie data and video game data may be logically separated on the single Blu-ray\u00ae disc such that when inserted into a conventional media player device (e.g., a Blu-ray\u00ae player) only the frame-based movie data is read and played back by the player.","In the absence of the technology disclosed herein, when the same disc medium is inserted into a game console, for example, PlayStation 3\u00ae, the user is provided the choice of playing either the frame-based movie or video game by selecting it via the game console's user interface, e.g. PlayStation 3\u00ae cross media bar. However, once the user makes the initial selection and chooses either the movie or video game the user cannot easily switch between the two. For example, if the user initially chooses the movie from the game console's user interface the user must stop playback of the movie and return to the game console's user interface to subsequently select the video game. Therefore, in the absence of the technology disclosed herein, even if the video game data and movie are provided on the same side of a high-density disc, the user is unable to select the video game from within the frame-based movie's menu interface. Likewise if the user initially chooses the video game from the game console's user interface the user must stop playback of the video game and return to the game console's user interface to subsequently select the play of the frame-based movie data. Therefore, in the absence of the technology disclosed herein, the disc encoded with both a movie and a video game also fails to enable the user to select the frame-based movie from within the video game's menu interface.","This limitation may be overcome to allow for seamless user navigation between a Blu-ray\u00ae movie or other frame-based high-definition encoded video to a video game (or vice versa) that reside on the same disc side, using a conventional video game console, for example, a PlayStation 3\u00ae game console. For example, from within the console's movie's menu interface the user is enabled to make a selection which switches from the Blu-ray\u00ae movie to the video game without the need to first stop playback of the Blu-ray\u00ae movie and navigate to the game console's user interface, using a specially configured API operating on the media player. Similarly, while operating the video game application, the user is enabled to switch from the video game directly to the movie without the need to first exit the video game and initiate play of the movie data from the console's user interface. In both cases, the transition between movie and video game may be done immediately from within whichever application is currently operating, and is therefore referred to herein as \u201cseamless navigation.\u201d","Seamless navigation may be achieved by preparing an API module and distributing the API module to player\/consoles. An application provided with the frame-based high-definition audio-video content, for example, a media player application or a plug-in for it, is configured to detect the presence of the API module on the player device. In response to detecting the API module, the application provides an interactive feature that uses the API module to load and execute the executable video game in response to user input. Seamless navigation from the video game to the movie content may similarly be achieved by configuring the video game to provide an interactive feature that uses the API module to initiate the media player application and play the movie content in response to user input.","Further details and features of the present technology are described in the detailed description that follows.","In the figures and in the detailed description, like element numerals are used to indicate like elements appearing in the figures.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1","b":["100","103","102","104","106","108","110","116","112","114","110","116"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2","b":["102","102","204","206","204","205","206","207","206","204","208","204","210","212","214","216","218","218","218","220"]},"CPU  may execute software and applications stored in storage device  by loading into memory . Applications may also be loaded from an inserted medium , for example, an optical disc. Media reader  may comprise a disc reader configured for reading Blu-ray\u00ae media. A familiar example of a game console generally consistent with depicted player  may be found in the PlayStation 3\u00ae game console, which can play Blu-ray\u00ae and DVD media discs as well as video games configured to operate on the PlayStation\u00ae platform.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3","b":["300","214","102","300","302","304","306","306"]},"It should be appreciated that the dividing lines shown in  are purely conceptual and do not represent an actual appearance of encoded data. Instead, data on the medium is delimited according to the applicable protocol (e.g., Blu-ray, DVD, or other data standard), such as by using a file system.","Frame-based audio-video content  may comprise one or more video sequences, for example, a main feature  and ancillary features , . Each of these may comprise separate features that may be selected off of a menu displayed by the player device, or otherwise navigated to in response to user input or by internal logic defined for the frame-based video content. In addition, content  for generating a movie or the like may include static graphical objects  such as menus, graphical icons, or photographs used to support presentation and playback of the primary video content. Tying all these elements together may be an application or executable logic  configured to control presentation and use of the primary video content, which is configured to be loaded by the media reader according to the applicable standard.","The executable game and data  may comprise one or more executable applications  defining the interactive operation of a video game, and numerous graphical or audio files  (e.g., static graphical objects, data models of environments and objects, viewpoint and camera data, audio clips, or video clips). These data files may provide the data enabling presentation of the game environment and game action according to the logic embedded in the game engine . The game engine  is therefore configured to operate on graphical and mathematical model data in response to user inputs to generate an indeterminate video output responsive to user input. In contrast, video data files ,  and  fully define high-definition predetermined video output and merely need to be decompressed and converted to a useful video signal for a display device.","To enable seamless transitions between play of frame-based video data by a media player and executable video game, an application programming interface (API) may be defined that can be utilized during the movie authoring process, for example, during authoring of a Blu-ray\u00ae movie for encoding on a disc medium. A link to the API  may be integrated into the Blu-ray\u00ae Java (BD-J) application  that resides in the Blu-ray\u00ae movie data such that the relevant function of the API is called and executed when the user activates a graphical button that appears on the display screen, for example, a menu button  configured to indicate \u201cPlay Video Game\u201d in a menu  (). When the menu button  is selected by the user, the game console will recognize the API, for example, SWITCH_TO_GM_CON( ) and subsequently switch playback from the Blu-ray\u00ae movie to the video game. API  may be loaded into firmware for the media player using an update process, or accessed from the medium holding dataset . For further example, a graphical icon  as shown in  may be programmed in the BD-J application to appear during one or more scenes of the frame-based video content . In response to user input indicating selection of the icon, the BD-J application may call the SWITCH_TO_GM_CON( ) API function. Any desired user input may be configured to trigger a call to the SWITCH_TO_GM_CON( ) API function, at any desired time during play of the frame-based video content .","Since the API SWITCH_TO_GM_CON( ) is newly defined, some existing playback devices may not recognize the API and therefore may return an exception, i.e. an error, or perhaps a null value when the API is executed. As a result the playback may not be switched from the Blu-ray\u00ae movie to the video game, depending on whether or not the API is recognized by the player. To eliminate this problem a device type field, DEVICE_TYPE, may be defined and stored into the internal memory of the game console and\/or Blu-ray\u00ae movie player. An additional API function, GET_DEVICE_TYPE( ) may be defined such that the Blu-ray\u00ae movie BD-J application may query the device it is in to determine if it is a game console or not. It is important to note that the BD-J application can query the device type prior to presenting the \u201cSwitch to Video Game\u201d menu button to the user.","Newer game consoles and Blu-ray\u00ae movie players will include the DEVICE_TYPE field such that when the BD-J application executes the GET_DEVICE_TYPE( ) API it will return a value of GAME_CONSOLE if the device is a game console or BD_MOVIE_PLAYER if the device is a conventional Blu-ray\u00ae movie player. If the return value is GAME_CONSOLE the BD-J application will present a \u201cSwitch to Video Game\u201d or similar menu button to the user, whereas if the return value is BD_MOVIE_PLAYER the BD-J application will not present the \u201cSwitch to Video Game\u201d menu button to the user, thereby avoiding the problem described above.","Legacy game consoles and Blu-ray\u00ae movie players may not contain the DEVICE_TYPE field at all, therefore when the BD-J application executes the GET_DEVICE_TYPE( ) API it will return an exception, i.e. an error, or a null value. In this instance the BD-J application may assume the device type is BD_MOVIE_PLAYER and therefore not present the \u201cSwitch to Video Game\u201d menu button to the user. It is important to note that many legacy game consoles and Blu-ray\u00ae movie players may update internal firmware to include the DEVICE_TYPE field.","As mentioned earlier in the case where the DEVICE_TYPE=GAME_CONSOLE the BD-J application may present the \u201cSwitch to Video Game\u201d menu button to the user, and in response to user activation of the described menu button, execute the SWITCH_TO_GM( ) API. However, in addition to just switching from the Blu-ray\u00ae movie to the beginning of the video game, additional control information, for example API command arguments, may be utilized to indicate the logical location within the video game to jump to, for example, to a particular game level and\/or the difficulty setting within the game. For example, the API SWITCH_TO_GM(GAME_LEVEL, DIFFICULTY) includes two arguments such that SWITCH_TO_GM(4, 2) directs the game console to jump to level  within the game with a difficulty setting of 2. Other arguments not mentioned here may also be defined in the SWITCH_TO_GM( ) API, the described arguments merely providing an example. In the alternative, or in addition, a SWITCH_TO_GM( ) API may include a pointer to a metadata file already stored in the game console's memory. The metadata file may include information about previous game sessions, e.g. where the user left off, current score, or a pointer to existing saved game data.","Conversely, to enable seamless transitions from within the executable video game to the frame-based video content, the API may be defined to include a function, for example one labeled SWITCH_TO_PLYR( ) to handle such transitions. A link to the API may be integrated into the video game application  such that the relevant function of the API is called and executed when the user activates the user interface device to provide the input proscribed for calling the API function. For example, the video game application may be configured to output a graphical button that appears on the video screen, for example, a graphical icon  or other link appearing in a video game menu or other display output screen , as shown in . When the icon  is selected by the user, and in response to user input indicating selection of the icon, the video game application may call the SWITCH_TO_PLYR( ) API function. Any desired user input may be configured to trigger a call to the SWITCH_TO_PLYR( ) API function, at any desired time during play of the video game application .","The video game application and SWITCH_TO_PLYR( ) API function may also be configured to enable the passing of data arguments to the SWITCH_TO_PLYR( ) API function for initiating play at a desired point, in a desired file, and for a desired duration. For example, the SWITCH_TO_PLYR( ) function may be configured to receive the arguments FILE, START TIME and DURATION, where FILE identifies the particular frame-based video content file to play, START TIME indicates the point at which to begin play, and DURATION a length of time to play the video content before returning to the video game application. The SWITCH_TO_PLYR( ) function may also operate to save the video game status when the transition is initiated as data arguments in a system memory, so that if or when play of the video game is resumed, it can resume in the condition and at the place where game play was left off.","In accordance with the foregoing,  diagrams an example of a method  for media player operation, enabling seamless transitions between execution of a video game and playing of frame-based audio-video content. Delivery and receipt of a data package by the media player  may initiate the method. The data package may be as described in connection with  above, or one of the alternatives described in connection with . Essentially the data package should include the frame-based audio-video content, the video game application, and the API as described above.","Optionally, the API may be copied to a system memory , for example to firmware, of the media player device. This may occur at any time prior to receiving the audio-video content and game application . As noted above, provisions should be made to handle media players in which the required API is not properly installed. Accordingly, the data package should be provided with an application for detecting whether or not the API is properly installed on the media player device. Prior to beginning play of the received audio-video content or video game, the media player may call the detection function  as directed by an initialization function, which queries system memory to determine  whether or not the API is available on the media player. Optionally, the function may attempt to install the API from a fixed media (e.g., an inserted optical data disc holding data as described in connection with ) or network source if the API is not detected. In response to detecting that no API is installed or can be installed, the media player may play the audio-video content  or video game without enabling seamless navigation capabilities in the video logic or game application.","In response to detecting that the required API for seamless navigation is installed or can be installed, the media player may play the audio-video content  or video game with seamless navigation enabled. According to the present example, this may be accomplished by loading an interface application or function , which is configured to respond to input from a user input device to call the API when desired. The interface application or function may be loaded or otherwise enabled prior to or during initialization of the audio-video content player, for example, by setting one or more state variables to a value that causes enablement of functions for indicating availability of seamless navigation and responding to user input to call API functions performing seamless navigation.","With seamless navigation enabled, the media player may play the audio-video content  until input is received from a user input device indicating that execution of the video game application is desired. In response to detecting the input requesting execution of the video game  using the interface function, the media player calls the designated switch function of the API  to terminate play of the audio-video content and initiate play of the game executable. Conversely, if no input requesting execution of the video game is detected, the media player continues play  until the audio-video content terminated normally  or such input is detected .","The switch function of the API may handle a switchover process via pointers, variables, or other data transfer means to the respective video content player applications and game executable. The actual transition may occur in innumerable way according to the desired result. For example, the API function called at  may push data to a memory location that causes the video player application to pause and display a message indicating that transition to the video game is in process. Then, the API switch function may store data indicating the file and timeline point at which the audio-video content is paused, for future reference ; in the alternative, or in addition, this may be accomplished continuously during play of the audio-video content by the content-playing application operating on the media player. In addition, the API function may retrieve stored data recording variables or pointers for passing to the executable video game . The API function may then cause the video content application to terminate, and immediately initialize the video game executable, using the stored variables or pointers .","Once initialized, the video game application may operate normally to provide video game play. The video game application may include a built-in function operative on the media player\/console to detect user input indicative of a request to seamlessly navigate to playing of the audio-video content, as previously described. In response to detecting such user input , the media player may call an API function for seamlessly navigating to play of the audio-video content . If not such user input is received , the video game application may continue operation until terminated normally  or until a seamless navigation request is detected .","The API function for seamlessly navigating to play of the audio-video content, once called, may pause play of the game and display a message indicating that a transition to a specific audio-video content is underway, e.g., \u201cPlaying of The Dark Knight will resume in a moment.\u201d In addition, the API function may execute on the media player to store any variables, pointers, or other data  indicating a state of the video game application at which play was interrupted by the request to navigate to play of the movie or other audio-video content. This stored data may be as retrieved in the converse operation . In the alternative, or in addition, such data may be stored by the video game application continuously during normal play.","At , the API function may retrieve variables, pointers or other data  for initiating play of the desired audio-video content at the indicated point. The data retrieved at  may be as stored in the converse operation . The API function may then cause the game application to terminate and initiate play of the audio-video content using the media player application provided with specified initialization data, if any. Play of the audio-video content may then continue  as previously described.","An article with encoded data, for example an optical disc medium, thumb drive, or other memory device, may be configured to operate as described above.  shows an example of a method  for producing a medium in which digital audio-video content and an executable video game are encoded together so as to permit seamless transitions between viewing the audio-video content and executing the video game. Audio-video content, for example, a feature movie presentation and its ancillary content and functions may be received  using any suitable computing device. The audio-video content may be packaged with a specific media player application, or merely designed for play by a pre-existing application. It may also include logic, for example, BD-J applications for providing desired interactive features within a media player application.","Separately, a video game executable and ancillary data are received  by the computing device. The game executable may be received in source code form, or as a binary executable. The audio-video content is formatted to a defined and accessible standard, for example, Blu-ray\u00ae. The executable game and audio-video content may be received from different sources with no built in links yet provided.","At , executable code defining an API is compiled and integrated with the audio-video content and game executable, using one or more computers. The API is coded to operate with a particular operating system for the intended player\/console devices, for example game players, set-top boxes, personal computers, or portable media devices. Program development and coding specifics may be appropriately selected by one of ordinary skill to comply with applicable specifications for the targeted devices or operating systems. Integration may include coordinating variables, pointers, and other data for passing to and from the game executable, media player application, and respective API functions as described above. Integration may further include providing interface modules to operate with or within the respective media player application and video game executable to call the API functions in response to input from one or more user input devices.","At , the one or more computers are used to prepare a data set suitable for encoded on the desired data medium. For example, a data set may comprise a collection of files arranged according to a file system, as described in connection with  above. In one embodiment, the data set complies with Blu-ray\u00ae specifications for encoding on a Blu-ray\u00ae medium. At , the data set is encoded on the desired medium, for example, on an optical disc medium, magnetic medium, or memory device, using any suitable method as known in the art. The encoded medium may then be provided to the targeted player\/console devices for operation as described herein.","Having thus described a preferred embodiment of a system and method for enabling seamless navigation between high-definition audio-video content and an executable video game encoded together on a digital medium, it should be apparent to those skilled in the art that certain advantages of the within system have been achieved. It should also be appreciated that various modifications, adaptations, and alternative embodiments thereof may be made without departing from the scope and spirit of the present technology. For example, a Blu-ray\u00ae disc medium has been described, but it should be apparent that the novel concepts described above may be applied by one of ordinary skill to other forms of digital content packages to realize the benefits described herein."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
