---
title: Service provider management of virtual instances corresponding to hardware resources managed by other service providers
abstract: A dynamic pool of virtual instances is managed. Each virtual instance corresponds to one or more hardware resources. Management includes tracking for each virtual instance: historical and current utilization, an operating cost, a capacity, and a characteristic associated with a capability of the hardware resources to which the virtual instance corresponds. A given virtual instance of the dynamic pool of virtual instances on which to schedule a workload for completion is selected, based on a characteristic of the workload matching the characteristic of the given virtual instance, and taking into account the capacity, the current utilization, and the operating cost of the given virtual instance. The hardware resources are managed by service providers different than a service provider managing computing devices on which the virtual instances are managed and the workload is scheduled, and the workload is received from a customer different than any of these service providers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09213503&OS=09213503&RS=09213503
owner: HEWLETT-PACKARD DEVELOPMENT COMPANY, L.P.
number: 09213503
owner_city: Houston
owner_country: US
publication_date: 20111030
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["Historically, hardware resources like computing devices and printing devices have been managed if not owned directly by the users who used them or the organizations with which the users are affiliated, such as their employers. More recently, infrastructure as a service (IaaS), software as a service (SaaS), printing or platform as a service (PaaS), and similar types of solutions have become more widespread. IaaS, SaaS, and PaaS service providers offer services in a scalable manner, which are employed, or consumed, by users in accordance with a business model. These service providers scale their hardware resources internally, taking into account the demands of their services that the providers observe.","As noted in the background section, infrastructure as a service (IaaS), software as a service (SaaS) and platform as a service (PaaS)-type solutions have become a more popular way by which users use effectively receive computing and printing services, such as over the Internet, which are delivered by service providers. While this frees the users from having to manage the computing devices or the printing devices responsible for providing these services, it can lock the users into receiving such services from a particular service provider. Different service providers, however, may offer different advantages, different cost structures, and different billing models that the users may want to avail themselves of at different times.","Furthermore, from the service provider standpoint, service providers have to adhere to service level agreements (SLAs) with which they have contracted with users, to provide various types of services with different turnaround times and at different cost structures. If a service provider does not manage its resources well, the provider can find itself in a position where it is unable to meet the guarantees delineated within the SLAs, or has to quickly locate additional resources to ensure that the SLAs are not violated. As such, existing service provider arrangements can be disadvantageous to both customers and the service providers themselves.","Techniques disclosed herein alleviate these shortcomings. In particular, there are two types of service providers. The first type of service provider is that with which customers directly interact to submit workloads for scheduling on and completion by virtual resources (which are referred to herein as virtual instances), monitor and manage workloads, and so on. An example of this first type of service provider is a print service provider. The second type of service provider, such as an infrastructure service provider, actually manages the hardware resources underlying and corresponding to the virtual instances. As such, the first service provider is a \u201cmeta\u201d service provider that manages virtual instances offered by second service providers for delivering services.","Such a methodology provides for better management of virtual instances and physical resources that are used by users in the context of IaaS, SaaS, PaaS, and other types of solutions. A system can include a pool manager and a scheduler implemented on a computing device managed by the first service provider. The pool manager manages a dynamic pool of virtual instances. Each virtual instance corresponds to one or more hardware resources that provide the service or solution in question. The virtual instances are managed by the first service providers, whereas the hardware resources underlying the virtual instances are managed by the second service providers. For each virtual instance, the pool manager tracks historical and current utilization, operating cost, and a characteristic associated with a capability of the hardware resources to which the virtual instance corresponds. The scheduler selects a given virtual instance on which to schedule a workload for completion, based on a characteristic of the workload matching the characteristic of the given virtual instance, and taking into account the capacity, the current utilization, and the operating cost of the given virtual instance.","Such an architecture provides for certain advantages in managing the resources. The pool of virtual instances is dynamic. The virtual instances may be sourced from one or more second service providers, such as infrastructure service providers, which provide hardware resources of, at, and with different capacities, costs, and other characteristics. The pool manager manages the virtual instances against the demands for the virtual instances, as indicated by the scheduler, by provisioning virtual instances from second service providers and by also releasing the virtual instances back to these second service providers. Provisioning decisions with respect to a virtual resource can be made based on the tracking of the historical and current utilization, the capacity, and the characteristic of each virtual instance already in the dynamic pool.","The scheduler schedules a workload by matching the characteristic of the workload with the characteristic of a virtual instance that is optimally suited to complete the workload, but taking into account the capacity, the current utilization, and the operating cost of the given virtual instance. Taking into operating cost can be particularly advantageous. This is because the dictates of the workload may be such that the virtual instance representing hardware resources that most closely match the characteristic of the workload may represent unnecessary incurred cost, such that a slightly less optimal virtual instance but with a significantly less operating cost may be more appropriate.","Additionally, a given job to be completed, such as a print job, may be divided into hierarchically organized job components that each correspond to a different workload that is separately scheduled on a virtual instance. Such a job may have some job components that have even significantly different characteristics as compared to other job components. As such, the job components may just loosely inherit characteristics from their parent job components within the hierarchy. Having such granularity in scheduling a job over multiple virtual instances means that more optimal completion of the job as a whole is achieved, in a more cost effective manner. For instance, different job components may be performed by different second service providers\u2014that is, by hardware resources managed by different second service providers.","It is noted that first service providers, such as providers of SaaS and PaaS, manage virtual instances, or resources, which correspond to hardware, or physical, resources. By comparison, second service providers, such as providers of IaaS, manage the hardware, or physical, resources to which the virtual instances correspond. The details of the hardware resources do not have to be, but can be, exposed to the first service providers by the second service providers. Furthermore, a given hardware, or physical, resource may have multiple virtual instances instantiated on it. That is, multiple virtual instances can correspond to or encompass the same hardware, or physical, resource.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":["100","100","102","104","106","106","106","106","108","102","106","104","108","108","108"]},"A first service provider  manages and is responsible for the pool manager  and the dynamic pool  of virtual instances . One or more second service providers , by comparison, manage and are responsible for the hardware resources  themselves to which the virtual instances  correspond. The first service provider  is different than the second service providers . Each virtual instance  can correspond to the hardware resources  managed by one second service provider , although the hardware resources  managed by a given second service provider  may be represented by more than one virtual instance .","The pool manager  manages the dynamic pool  of virtual instances . More specifically, the pool manager  can add new virtual instances  to the dynamic pool , as well as remove existing virtual instances  from the dynamic pool . The pool manager  can cause or request that an existing virtual instance  be augmented with additional hardware resources  by the second service provider  managing the hardware resources  associated with this virtual instance . Likewise, the pool manager  can request or request that an existing virtual instance  be diminished by the second service provider  managing the hardware resources  associated with this virtual instance , so that less hardware resources  are associated with the virtual instance .","The pool manager  monitors the virtual instances , and specifically tracks information for each virtual instance , on which basis the pool manager  manages the virtual instances . As depicted in , for instance, in representative relation to the virtual instance A, the pool manager  tracks information A, B, C, D, and E, collectively referred to as the information . The information A is historical utilization information; the information B is current utilization information; the information C is operating cost information; the information D is capacity information; and the information E is characteristic information.","The historical utilization information A includes how the virtual instance A has been used in the past. This information can include both periods of use and disuse, as well as how the virtual instance A in question was used during the periods of use. For example, the historical utilization information A can be related to the type of the virtual instance A that was used, such as the average and peak loads for the type of the virtual instance A. Other examples of the historical utilization information A can include the number, or count, of print (or other types of) jobs assigned to this type of the virtual instance A, overall and\/or within given time intervals. This information can be used, for instance, to predict usage of the virtual instance A at corresponding time intervals in the future.","The current utilization information B is similar to the historical utilization information A, but describes how the virtual instance A is being used, if at all. The operating cost information C includes how much it costs to operate the virtual instance A. The operating cost may be specified both for when the virtual instance A is being used as well as when it is not being used. The operating cost may further be specified in accordance with how the virtual instance A is being used. That is, the operating cost may differ depending on the type of workload that the virtual instance A is processing.","The capacity information D specifies how much of the virtual instance A can be used at a given time. For example, the virtual instance A may have multiple workloads assigned to it. The capacity information D in this case is related to the utilization of the virtual instance A on an overall basis, taking into account these multiple workloads. The workloads themselves may be parts of the same print (or other) job, or different jobs. The capacity information D can include or be related to a threshold that is employed when determining whether a particular workload is to be scheduled for completion on the virtual instance A in question. The characteristic information E is somewhat related to the capacity information B, and specifies one or more characteristics regarding capabilities of the virtual instance A.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2","b":["200","106","104","102","200","152","200"]},"The information  is tracked for each virtual instance  within the dynamic pool  (), as noted above. Tracking the information  may occur in a number of different manners. For example, the pool manager  may periodically poll the virtual instances  to obtain the information . As another example, the pool manager  may obtain the information  in an event-driven manner, by the virtual instances  themselves providing changes in the information  to the pool manager , without the pool manage having to periodically the virtual instances to obtain the information .","A new virtual instance  can be added to the dynamic pool , based on the tracking of the information  (). The new virtual instance  may correspond to hardware resources  provided by one of the existing second service providers  that manage hardware resources  to which an existing virtual instance  corresponds, or by a new second service provider . Various algorithmic and other approaches may be employed to determine when it is appropriate to add a new virtual instance  to the dynamic pool . The new virtual instance  is added by the first service provider , where the new virtual instance  itself is acquired from one of the second service providers  that provide the hardware resources  to which the new virtual instance  corresponds.","Similarly, an existing virtual instance  within the dynamic pool  may be augmented, based on the tracking of the information  (). Augmentation means that additional hardware resources  are assigned to the virtual instance . The existing virtual instance  is augmented by the same second service provider  that already provides the hardware resources  to which the virtual instance  currently corresponds, at the behest of the first service provider . Various algorithmic and other approaches may be employed to determine when it is appropriate to augment an existing virtual instance  within the dynamic pool .","An existing virtual instance  within the dynamic pool  may likewise be removed, based on the tracking of the information  (). Various algorithmic and other approaches may be employed to determine when it is appropriate to remove an existing virtual instance  from the dynamic pool . The existing virtual instance  is removed by the first service provider , and in this respect is relinquished back to the second service provider  that provides the hardware resources  to which the existing virtual instance  corresponds.","The removal process can be a two-step or two-part process. First, once it has been decided to remove an existing virtual instance  from the dynamic pool , the virtual instance  can be immediately tagged for such removal. However, the virtual instance  is not immediately removed from the dynamic pool . The virtual instance  may still be completing previously scheduled workloads, or previously scheduled workloads on the virtual instance  may not have yet even been started. Therefore, second, the virtual instance  is not removed from the dynamic pool  until it has completed such uncompleted workloads already scheduled on the virtual instance .","Once the virtual instance  has been tagged for removal, new workloads may not be permitted to be scheduled on the virtual instance , so that the virtual instance  will be able to be removed at some point in the future. However, a virtual instance  that has been tagged for removal may be subsequently untagged for removal, such that it is not ultimately removed. For instance, if the incoming workloads greatly increase, a virtual instance  that was previously tagged for removal may be untagged, so that these workloads can be scheduled on the virtual instance .","An existing virtual instance  within the dynamic pool  may be diminished, in a counterpart process to the augmentation process of part  (). Diminishing means that some of existing hardware resources assigned to the virtual instance  are unassigned from the virtual instance . The existing virtual instance  is diminished by the same second service provider  that provides the hardware resources  to which the virtual instance  currently corresponds, at the behest of the first service provider . Various algorithmic and other approaches may be employed to determine when it is appropriate to diminish an existing virtual instance  within the dynamic pool .",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 3","b":["300","300","302","104","106","108","302","152","302","104","106","154","108","106"]},"The scheduler  most generally receives a job , and selects a given virtual instance  from the dynamic pool  on which to schedule a workload  corresponding to the job  for completion by the virtual instance . A job  is a request, such as from a client like a client computing device, to have the hardware resources  perform, fulfill, or complete the job . For example, in the case of a PaaS solution, the job  may be a print job that a user is willing to pay to have printed.","As compared to existing service provider architectures, the job  is submitted from a customer or client directly to the first service provider , and not to the second service provider  providing the hardware resources  that will ultimately fulfill the job . As such, the first service provider  can select which second service provider  is to fulfill the job . Indeed, the job  may be fulfilled by multiple second service providers , as is described in more detail later in the detailed description.","It is noted that the difference between the job  and its associated workload  is that the former is what is received from a client (i.e., a customer), and the latter is what the scheduler  sends to the given virtual instance  to complete the job . The scheduler  may generate the workload  from the job . The workload  may include the job , and may be the job  in some implementations. The workload  may include a pointer to the job , in lieu of including the data of the job  itself.","The scheduler  selects the given virtual instance  from the virtual instances  within the dynamic pool . The scheduler  makes this selection based on a characteristic of the workload  (i.e., of the job ) matching the characteristic of the given virtual instance . In making this selection, the scheduler  takes into account the historical and current utilization, the capacity, and the operating cost of the given virtual instance .","The characteristic of the workload  specifies the type of processing that has to be performed to complete the workload . As such, the characteristic of the workload  is matched to the characteristic of the given virtual instance , insofar as the characteristic of the given virtual instance  specifies that are sufficient to complete the job , as specified by the characteristic of the workload . An example in this respect is provided later in the detailed description.","In one implementation, the scheduler  does not schedule a workload  for the entire job , but rather divides the job  into multiple job components, and separately schedules individual workloads for the job components. In the example of , the scheduler  can divide the job  into multiple job components A, B, C, D, E, and F, which are collectively referred to as the job components . The scheduler  can generate workloads A, B, C, D, E, and F, which are collectively referred to as the workloads , and which correspond to the job components . The scheduler  thus separately selects a given virtual instance  for each job component  for completion of the job component  in question. Thus, different job components  can be scheduled for fulfillment by the virtual instances  of different second service providers .","The job components  can be hierarchically organized. For instance, in the example of , the job component A is a parent job component to the job components B and C, and the job component B is a parent job component to the job components D, E, and F. Each job component  may strictly or loosely inherit its characteristics from its parent job component , and also specify other or additional characteristics. Strict inheritance means that a job component  inherits each characteristic that its parent job component  has. Loose inheritance means that a job component  does not have to inherit each characteristic that its parent job component  has, but typically inherits at least some such characteristics.","Dividing the job  into multiple job components  that have corresponding workloads  can be advantageous, where particular parts of the job  have different characteristics. Consider the following example, which also demonstrates how the workloads  are assigned to different virtual instances  by matching the characteristics of the former to the characteristics of the latter. The job  may include printing a mail message that has two attachments, one in portable document format (PDF), and the other in text format. This job  may be divided into six job components  correspondingly having six workloads .","The first workload  is to detect details of the job \u2014i.e., that a message having the ascribed two attachments is to be printed\u2014and to generate the other workloads . The second workload  may correspond to the body of the message, the third workload to the PDF attachment, and the fourth workload to the text attachment. This fourth workload itself may create the fifth and sixth workloads. The fifth workload is to convert the text attachment to PDF, and the sixth workload to convert the resultant PDF-converted text attachment to a printer control language (PCL) format (which is similar to what the third workload does as to the PDF attachment).","Different virtual instances  may be scheduled for different of these workloads . For instance, the first, second, fourth, and fifth workloads  noted in the previous paragraph may be assigned to the same or different virtual instances  that are generalized in nature, depending on the capacities of these virtual instance(s) , and so on. By comparison, the third and sixth workloads  noted in the previous paragraph may be assigned to a specialized virtual instance  that is dedicated to converting PDF documents to PCL format, assuming that this virtual instance  is available.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 4","b":["400","305","304","106","108","305","304","302","400","154","400"]},"The job  may be divided into hierarchically organized job components  (). Various algorithmic and other approaches may be employed to divide the job  into the job components . Each section, or job component , may further be divided into sub-sections, or additional job components , and so on, such as described in the example above.","A workload  can be generated for each job component , or if the job  has not been divided into job components , then the workload  can be generated for the job  as a whole (). The remaining description of the method  presumes workloads  being generated for the job components , but is equally applicable to a workload  being generated for the job  as a whole. In its most basic form, generating a workload  for a job component  can include wrapping the job component  in a data wrapper specified by an application programming interface (API) or other type of interface by which the virtual instances  expect to receive the workload .","For each workload , a virtual instance  is separately selected (), even if, as noted above, this means that different workloads  are ultimately fulfilled by hardware resources  managed by different second service providers . The virtual instance  is selected based on matching the characteristic of the workload  with the characteristics of the virtual instances , and taking into account the (historical and\/or current) utilizations, the operating costs, and the capacities of the virtual instances . Various algorithmic and other approaches may be employed to select a virtual instance separately for each workload . At a minimum, however, the given virtual instance  should have characteristics corresponding to capabilities of its corresponding hardware resources  that are sufficient to fulfill the workload  in question.","For example, there may be four virtual instances  that can fulfill a workload . One virtual instance  may be currently utilized, and hence unavailable, and another virtual instance  may not have sufficient capacity to fulfill the workload . Therefore, neither of these two virtual instances  is selected. Of the remaining two virtual instances  in this example, one virtual instance  may be able to fulfill the workload  more quickly than the other virtual instance , but at higher operating cost. Therefore, either of these latter two virtual instances  may be selected, depending on whether cost or timeliness is more important in completing the workload .","Once a given virtual instance  has been selected for a workload , the workload is scheduled for completion on the virtual instance  in question (). Various algorithmic and other approaches may be employed to perform scheduling. For example, the workload  may be passed to the given virtual instance , which completes its provided workloads  in a first-in, first-out (FIFO) manner. As another example, the workload  may be permitted to be scheduled for completion in advance of already scheduled workloads  on the virtual instance , depending on its priority, and the assured completion times of the already scheduled workloads  that will be pushed back, for instance.","Extensions to these scheduling techniques can also be implemented. As one example, the scheduler  may monitor completion of the workloads . If the workloads  are not being completed as expected, duplicate workloads  may be created and scheduled on other virtual instances , such as those having higher capacities, for instance. This approach is particularly useful where a job  is divided into multiple job components , such that completion of the job  is dependent on completion of its constituent job components . If completion of the job  is waiting on the completion of the workload  for just one job component , then a duplicate workload  for this job component  may be created and scheduled on a different virtual instance , to speed along completion of the job  as a whole, for instance.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 5","b":["500","500","501","108","152","501","154","108","108","501","501"]},"The computing devices  include at least a processor  and a non-transitory computer-readable data storage medium . The computing devices  can and typically will include other hardware components, in addition to the processor  and the computer-readable data storage medium . The computer-readable data storage medium  stores one or more computer programs , and data representing the dynamic pool  of virtual instances  that has been described.","The computing devices  includes the pool manager and the scheduler  as follows. The computer programs  include computer-readable code that implements the pool manager  and the scheduler . The processor  executes the computer-readable code of the computer programs  to perform the functionality ascribed above to the pool manager  and the scheduler . As such, it can be said that the processor  and\/or the computer-readable data storage medium  implement the pool manager  and the scheduler .","The solid line between the processor  and the computer-readable data storage medium  indicates that the former and latter are communicatively interconnected to one another. Similarly, the solid line between the computing devices  and the hardware resources  indicates that the former and latter are communicatively interconnected to one another. The dotted line between the pool manager  and the computer programs , and the dotted line between the scheduler  and the computer programs , indicate that the computer-readable code of the computer programs  implement the pool manager  and the scheduler . The dotted line between the virtual instances  and the hardware resources  indicates that the virtual instances  correspond to and represent the hardware resources .","As described above, the pool manager  manages the dynamic pool of virtual instances . Such management includes adding, removing, and augmenting the virtual instances , for instance. The scheduler  schedules workloads on the virtual instances , for completion by the hardware resources  to which the virtual instances  correspond."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0003","num":"0002"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
