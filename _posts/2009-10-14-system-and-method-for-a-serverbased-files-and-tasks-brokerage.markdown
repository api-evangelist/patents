---
title: System and method for a server-based files and tasks brokerage
abstract: A server-based files and tasks brokerage system and method are disclosed. In response to receiving a request from a requesting computing device, the server posts the request to a request queue. The request is for a requested mobile telephonic device to perform a task. The server posts a first notification to a first notification queue, in response to receiving the request. The server pushes the first notification to the requested device upon confirming a connection. Upon detecting a first condition of the task being for the requested device to receive a file, the server transfers the file from a file repository. Upon detecting a second condition of the task being for the requested device to send a file, the server transfers the file to the file repository. In response to confirming task completion, the server posts a second notification to a second notification queue associated with the requesting device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08352575&OS=08352575&RS=08352575
owner: 
number: 08352575
owner_city: 
owner_country: 
publication_date: 20091014
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority from U.S. provisional application No. 61\/105,260, filed Oct. 14, 2008.","The present invention relates generally to computing servers and, more specifically, server-based global communication network systems and services.","Since the proliferation of the global communication network known as the Internet, the varieties and number of Internet connectable devices have grown steadily. Desktops, notebooks, laptops and other portable and nonportable computers are joined by personal digital assistants (PDAs) as computing devices connectable to the Internet.","Cellular telephones, as examples of wireless telephonic network communication devices, are equipped with processors, memory, software and other components and features of computing devices. Many cellular telephones, and cellular telephone equipped PDAs such as Blackberry and iPhone, are connectable to the Internet. An Internet connection may be made as a wired connection, for example by using a USB cable between the cellular telephone and an Internet connected computer. An Internet connection may be made wirelessly, for example by accessing an Internet portal through the cellular network provider, or by using a wireless router and a wireless network-connectable device.","Often, a computing device or a communication device connected to the Internet makes use of a server, to access data, files or services when such data, files or services are not available directly on the computing or communication device itself. Routers on the Internet can connect multiple devices to a server, or devices to devices, in various combinations. As interconnectivity among devices and servers expands, further improvements are sought. The improvements may enable collaborative efforts, provide access to devices or files, or provide directing of requests or tasks.","A system and method for a server-based files and tasks brokerage are disclosed. The server is accessible via a global communication network to a plurality of computing devices and to a plurality of mobile telephonic devices. The server is programmed to broker files and tasks for the computing devices and the mobile telephonic devices.","One of the computing devices, acting as a requesting device, may make a request. The request is for a requested one of the mobile telephonic devices to perform a task, as a requested device. The requesting device sends the request via the global communication network to the server.","In response to receiving the request at the server, via the global communication network from the requesting device, the server posts the request to a request queue. The request queue is associated with the requesting device. The request queue communicates with the server.","In response to receiving the request, the server posts a first notification to a first notification queue. The first notification queue is associated with the requested device. The first notification queue communicates with the server. The notification identifies the requesting device.","The server confirms a connection of the requested device to the server via the global communication network. Upon confirming the connection, the server pushes the first notification from the first notification queue to the requested device.","The task for the requested device may have a condition.","Upon a first condition of the task being for the requested device to receive a file, and the server confirming the connection of the requested device to the server via the global communication network, the server transfers the file. The server transfers the file from a file repository to the requested device. The file repository communicates with the server.","Upon a second condition of the task being for the requested device to send the file, and the server confirming the connection of the requested device to the server via the global communication network, the server transfers the file to the file repository. The server transfers the file from the requested device to the file repository.","The server confirms a completion of the task by the requested device. In response to confirming the task completion, the server posts a second notification to a second notification queue. The second notification queue is associated with the requesting device. The second notification queue communicates with the server.","The server is programmed to receive the request, to post the request and to post the first notification, irrespective of connectivity to the server of the requested device. The server is further programmed to push the first notification, to conditionally transfer the file, and to post the second notification irrespective of connectivity to the server of the requesting device.","With reference to , the method and system for a server-based files and tasks brokerage  in accordance with the invention allows transfer of files to and from a remote device and directing of tasks to a remote device, featuring a server  communicating with various resources to broker the files and tasks. The method and system operate in a manner somewhat analogous to a broker working at a brokerage, a broker being a person who is paid to act as an agent for others in negotiating contracts or buying and selling goods and services.","A global communication network  such as the Internet may connect various computing or communication devices , , , ,  to the server  over connection paths , , , , . The server  may communicate with various resources , , , , , including a file repository , over connection paths , , , , , , respectively. For example, a communication device such as a mobile telephone , a computer such as a notebook computer , a communication device , a computer such as a desktop computer , an interactive automotive electronics device  in an automobile  or other computing or communication device may connect via the global communication network known as the Internet to the server .","Using an embodiment of the server-based files and tasks brokerage , a computing device such as the notebook computer  may request to transfer a file to or transfer a file from a communication device such as the mobile telephone , or may request that the mobile telephone  perform a task. The server-based files and tasks brokerage  brokers the file or the task. The server-based files and tasks brokerage  provides that the request may be made by the requesting device even if the requested device is not connected to the server. The server-based files and tasks brokerage  further provides that the file may be transferred to or from the requested device or the task may be performed by the requested device, even if the requesting device is not connected to the server.","With reference to , the notebook computer , as a computing device, connects to the global communication network \u201ccloud\u201d  over the connection path , through the global communication network \u201ccloud\u201d  on connection path  and to the server  on connection path . The mobile telephone , as a communication device, connects to the global communication network \u201ccloud\u201d  over the connection path , through the global communication network \u201ccloud\u201d  on connection path  and to the server  on connection path .","Other mobile telephonic devices, capable of connecting to both a global communication network and a wireless telephonic network, may be suitable as requested devices. Examples of mobile telephonic devices with dual network capability include the Android phone, the Blackberry, the iPhone and some mobile telephones using Windows Mobile, Symbian or other Mobile Operating System (OS).","The server , which may be a computing device operating software and allowing manipulation of or access to data or files, is connected to the global communication network \u201ccloud\u201d . A server is a combination of hardware or software designed to provide services, and may include one or more computers, one or more types of server software or one or more types of client software, in a cooperative arrangement. Resources as part of, connected to, or communicating with a server may be in local or distributed locations.","The server  communicates with a request queue  over connection path . The request queue  is associated with the requesting device. In an example, the notebook computer  is making the request and is the requesting device. Generally, when a plurality of computing or communication devices are connected to the server, each such device acting as a requesting device has an associated request queue. Each queue may be structured as a database having records and attributes, or a queue may be a hardware queue, a firmware queue, a software queue or other structure known in the art.","The server  communicates with a first notification queue  over connection path . The first notification queue  is associated with the first notified device. In an example, the mobile telephone  is notified that there is a request available at the server  for the mobile telephone . Generally, when multiple computing or communication devices are connected to the server , each such device which may be notified of a request or a result has an associated notification queue.","The server  communicates with a second notification queue  over connection path . The second notification queue  is associated with the second notified device. In an example, the notebook computer  is notified of the completion of a task, such as the completion of the task requested to the mobile telephone . Notification queues may have structures similar to, or differing from, the structure of a request queue. A notification queue or a request queue may make use of one or more flags.","When a number of computing or communication devices connected to the server  are making requests, receiving requests, and executing tasks as requested including transferring files to or from devices, the server  acts to broker the tasks and files by managing the requests and notifications. The server  makes the files being transferred accessible to authorized devices.","In the general case, a requesting device sends a request for a task to be performed by a requested device. The requesting device sends the request to the server . The server  posts the request in the request queue associated with the requesting device. The server posts a notification to the notification queue associated with the notified device. The notified device picks up the notification from the associated notification queue, picks up the request, performs the task, and coordinates with the server  to let the server  know the task is completed. The server posts a notification, indicating completion of the task, to the notification queue associated with the requesting device, to let the requesting device know that the task is completed. In this manner, the requesting device becomes a notified device for purposes of notification of completion of the task.","In an example, the task may involve executing a program previously installed on the requested device. If the task does not involve transferring a file, an indication of the completion of the task cues the server to post the notification of the task completion to the requesting device.","If the task does involve transferring a file, the server makes use of a file repository . The server communicates with the file repository  over the connection path . The file repository  may be structured as a database having a storage allocation for a set of files or may have another structure known in the art. Completion of a transfer of a file into or out of the file repository  may indicate completion of a task to the server, or a separate communication with a device may indicate completion of the task.","With further reference to , various requests and executions of tasks requested may be followed. Information paths symbolically depict information flow indicating the starting and end points of information travel, with information actually flowing over connection paths. Communications between the notebook computer  and resources of the server , and between the mobile telephone  and resources of the server , travel through the global communication network \u201ccloud\u201d . The notebook computer  may request that the mobile telephone  receive a file. The notebook computer  may transfer a file from the notebook computer to the file repository , assisted by the server , using information path . Further, another device may transfer a file from the device to the file repository , or the file may have resided in the file repository  for a length of time prior to the making of the request. The notebook computer  sends the request to the server  via the global communication network. In response to receiving the request, the server  posts the request to the request queue  associated with the requesting device, using information path .","In response to receiving the request and posting the request to the request queue , the server posts a notification to the notification queue associated with the notified device, in this case the first notification queue  associated with the mobile telephone , using information path . The preceding actions of receiving the request, posting the request and posting a notification may be performed by the server regardless of connectivity of the notification device, the mobile telephone . The mobile telephone  need not be connected to the server  in order for the server to receive the request from the requesting device and post the request and the notification.","When the mobile telephone  connects to the server , the mobile telephone  checks the first notification queue to see if there is a notification, using information path . The mobile telephone  may be operating client software, which was previously installed on and directs the actions of the mobile telephone . When the mobile telephone determines that the notification indicates a request from a requesting device, the mobile telephone retrieves the request from the request queue of the requesting device. The mobile telephone retrieves the request from the request queue , using information path .","After interpreting the request, the mobile telephone  retrieves the file from the file repository  using information path . The server pushes the file from the file repository  to the mobile telephone .","The determination that the file transfer is complete and the task is thus complete may be made by the server  or by the mobile telephone . In either case, when there is an indication that the task is complete, the server posts a notification of task completion to the second notification queue , associated with the notebook computer  as the notified device. Operations of notification to the mobile telephone , retrieval by the mobile telephone  of the request, file retrieval by or file pushing to the mobile telephone  and posting of the notification of task completion may all be performed regardless of the connectivity of the requesting device, the notebook computer . The notebook computer  need not be connected to the server  in order for the server  to send the notification, the request or the file to the mobile telephone  or to post the notification of task completion.","The notebook computer  may request that the mobile telephone  send a file. Actions of the server receiving and posting the request, posting a notification to the mobile telephone , the mobile telephone  retrieving the notification and retrieving the request proceed similarly to the preceding example. When the mobile telephone  interprets the request, the mobile telephone  sends the file from the mobile telephone  to the file repository  using path . The server  posts a notification of task completion, similarly to the previous example. The notebook computer , upon finding a notification of task completion in the second notification queue , may retrieve the file from the file repository  using the information path .","With reference to  the server-based files and tasks brokerage  may be operated according to the flow diagram. The method and system make use of presence and push. Presence is defined as detecting a connection of a selected computer or device. A device is considered present if it has the status of a current availability. Push is defined as delivering selected data to a selected computer or device at prescribed intervals or based on some event occurrence that is not dictated by the computer or device to which the data is delivered. Presence and push, as a technique, is delivering or pushing selected data to a selected computer or device upon detecting a connection or presence of the selected computer or device, the detection of the connection being the triggering event. Pulling is defined as receiving selected data when the selected data is requested from a selected computer. That is, pull technology allows the requesting computer or device to trigger the delivery processing, as compared to push technology in which the \u201cterms\u201d of delivery (other than presence) are determined elsewhere. A file transfer may be initiated by a sending device pushing the file or by a receiving device pulling the file.","A computing device such as the notebook computer  sends a request  for a task to be performed by a communication device such as the mobile telephone . If the task includes the communication device receiving a file, and the file is not already in the file repository communicating with the server, the computing device may send the file  before sending the request  or may send the file  after sending the request .","Client software, installed on and operating on the server, programs the server to broker  files and tasks. The server posts the request , in response to receiving the request from the requesting device. The server posts a first notification , in response to receiving the request from the requesting device.","The server tracks connectivity of the requested device, in order to determine the presence of the device. If the requested device is not connected or present, the server waits or performs other tasks until the device is connected. If the requested device is connected , the server pushes the first notification  to the requested device.","The first notification  is pushed from the server to the requested device such as the mobile telephone . The mobile telephone  retrieves the request , and the request for a task  to be performed by the requested device, namely the mobile telephone , is returned from the server to the mobile telephone . The mobile telephone  or other communication device performs the task  in response to retrieving the request.","After sending the notification about the request for a task to be performed, the server determines the nature of the task, and conditionally performs actions. The server determines  if a task has a first condition, a second condition or a third condition.","If the server detects that a first condition of the task is for the requested device to receive a file, the server transfers the file  to the requested device, in this example the mobile telephone . The server transfers the file  when the server confirms the connection of the requested device, the mobile telephone . The file is transferred  to the mobile telephone , as part of the mobile telephone performing the task , when the task is for the mobile telephone  to receive the file.","If the server detects that a second condition of the task is for the requested device to send the file, the server transfers the file  when the server confirms the connection of the requested device, the mobile telephone . The file is transferred  from the mobile telephone , as part of the mobile telephone performing the task , when the task is for the mobile telephone  to send the file.","After determining any applicable condition of the requested task and conditionally performing any applicable action, the server determines if the task is complete. Confirmation of task completion may be based upon a handshake with the requested device, a confirmation or other message from the requested device, the server completing a related task or an examination of the internal server states or processes, or may take another form as known in the art. For example, when the task includes transferring a file to or from the requested device, both the server and the requested device may observe an end of file character, a data transfer count equaling an expected value or other indicator that the file transfer is complete.","If the task is not complete, the server waits or performs other tasks. If the server confirms a completion  of the task by the requested device, the server posts a second notification to a second notification queue associated with the requesting device. The server may post a notification to the notebook computer  that the mobile telephone  has uploaded the file the mobile telephone  was requested to receive, has downloaded the file the mobile telephone  was requested to send, or has performed the task  the mobile telephone  was requested to perform.","The server tracks connectivity of the requesting device, in order to determine the presence of the device. If the requesting device is not connected, the server waits or performs other tasks until the device is connected. If the requesting device is connected , the server pushes the second notification  to the requesting device.","The second notification  is pushed from the server to the requesting device, in this example the notebook computer . The notebook computer  retrieves the second notification. If the notification indicates a file has been sent from the requested device in response to the request being for the requested device to send a file, the requesting device, the notebook computer , may retrieve the file  from the file repository. At the end  of brokering a particular file or task, the process may loop or restart, or multiple processes may be threaded as is known in the art.","The server is programmed to receive the request, to post the request, and to post the first notification, irrespective of connectivity to the server of the requested device. The server is programmed to push the first notification, to conditionally transfer the file, and to post the second notification irrespective of connectivity to the server of the requesting device. The requested device is programmed to retrieve the first notification, to retrieve the request, to perform a task and to send the confirmation irrespective of the connectedness to the server of the requesting device. In this manner a device may request another device to perform a task, even when the other device is not connected to the server or the global communication network. When the task involves a file transfer, the server can hold onto the file in the file repository, even when one, the other or both devices are not connected to the server. While a task is being performed by the other device, the requesting device need not remain connected and will be notified when the connection is again made. This flexibility of operation, with the server brokering files and task requests, fosters improved access, improved connectivity and improved collaboration among devices and users of the devices.","With reference to , various functions of the server-based files and tasks brokerage  are shown on a screen menu . Other functions may be added. The screen menu  may be displayed on a display of a requesting device such as the notebook computer . The device may be executing client software or may be using a Web browser to connect to the server , and the screen menu  may be part of the client software or be a webpage sent from the server . As used herein, \u201cclient software\u201d is programming that is dedicated to enabling the brokerage functions. Typically, client software is proprietary software.","Clicking on the \u201cSign in As . . . \u201d softbutton  brings up a login screen, so that a user may enter and confirm identity. The user then has authorized access to various functions and features of the server-based files and tasks brokerage , including files in the file repository requiring permission.","Clicking on the \u201cCloud Contact Manager\u201d softbutton  brings up a contact list with e-mail addresses and\/or telephone numbers. The contact list may have been previously downloaded from a communication device, may be uploaded to a communication device, or may be assembled from contact lists of multiple communication devices. A user can remotely backup, restore, delete, or add a new contact, or transfer contacts upon upgrading or loss of a mobile telephone.","Clicking on the \u201cCloud SMS Manager\u201d softbutton  brings up a short message service (SMS) menu, as will be described with reference to .","Clicking on the \u201cCloud File Manager\u201d softbutton  brings up a file manager manual, as will be described with reference to .","Clicking on the \u201cCloud Device Call Log\u201d softbutton  brings up a list showing recent calls made or received on a communication device.","Clicking on the \u201cGPS Locate Device\u201d softbutton  brings up data showing the present or most recent location of a global positioning satellite (GPS) receiver-equipped communication device. The GPS communication device may have previously been sent a request to periodically download GPS coordinates for the location of the device. The automatically downloaded coordinates would then be stored in a log file in the file repository, and accessed when the \u201cGPS locate device\u201d softbutton  is pressed.","Clicking on the \u201cSecurity Wipe\/Lock\/Encrypt\/Decrypt\u201d softbutton  brings up a menu allowing selection of security functions. A security wipe command sends a request to the requested device to erase a selected type or class of data. A lock command sends a request to the requested device to lock, and only unlock with a correct unlock command, such as the use of a password. An encrypt command sends a request to the requested device to encrypt a file or files or to encrypt future messages or transmissions. A decrypt command sends a request to the requested device to decrypt a file or files or to decrypt future arriving messages or transmissions.","Clicking on the \u201cE-Mail\/Contacts\/Outlook\/Exchange\u201d softbutton  brings up a menu allowing e-mail, a contacts list, use of the Outlook address book, and access to setting up an exchange server.","Clicking on the \u201cDevice Screen Image\u201d softbutton  brings up, on the requesting device, an image of the device screen from a remote device as the requested device.","Clicking on the \u201cSync Send\/Receive\u201d softbutton  synchronizes files between a sending device and a receiving device.","Clicking on the \u201cStop MobiWee\u201d softbutton  stops a task currently in progress on the system.","Clicking on the \u201cConfiguration\/Installation\u201d softbutton  brings up a menu for configuring or installing client software.","Clicking on the \u201cSign-Up and More about MobiWee\u201d softbutton  brings up a menu for signing up for a service and information about the service.","Clicking on the \u201cExit\u201d softbutton  exits the screen menu .","With reference to , an SMS menu  allows sending and receiving SMS messages and managing contacts. Clicking on the \u201cCompose SMS\u201d tab brings forward a menu for writing and sending SMS messages. Clicking on the \u201cRecipients List\u201d softbutton  allows a selection of one or more recipients for the SMS message. The user may compose an SMS message in the window below the \u201cSMS Message:\u201d header . Clicking the \u201cSend SMS\u201d softbutton  sends a request via the global communication network to a requested device such as a mobile telephone or mobile telephone equipped PDA to send the SMS message over a cellular telephonic network to the one or more recipients. Clicking the \u201cClear\u201d softbutton  clears the message from the window. Clicking the \u201cClose\u201d softbutton  closes the SMS menu .","Clicking on the \u201cSMS Inbox\u201d tab  brings forward a list of SMS messages previously received by a requested device such as a mobile telephone and previously downloaded from the mobile telephone to the file repository, acting upon a request sent to the mobile telephone. Clicking on the \u201cMobile Contacts\u201d tab  brings forward a menu for downloading contacts from a mobile telephone, uploading contacts to a mobile telephone, or editing a contacts list. Contact management allows a contact be added to or removed from a contact list, and allows a contact list to be backed up, restored, or externally transferred from one device to another. Data including categories and profiles may be similarly managed. A contact may be added upon a missed call. Interactions between a requesting device such as a computer and a requested device such as a mobile telephone are brokered by the server-based files and tasks brokerage , using requests and notifications as described.","With reference to , a file manager menu  allows managing of files on remote devices and in the file repository. Clicking on the \u201cFile on Server\u201d tab  brings forward a menu for viewing lists of files. The lists are maintained on the server, and are available regardless of connectivity of receiving or sending devices. A \u201cFiles Sent to Device\u201d list  shows files sent to a specified device. A \u201cFiles Received from Device\u201d list  shows files received from a specified device. Checking the \u201cAuto-Download Cloud Files to:\u201d checkbox sets up an automatic download to the specified destination. Requests and notifications may perform handshaking functions for automated uploads or downloads.","The server maintains a list of files available for each of a number of computing devices, each list showing the files available on the associated computing device. Filenames or file directories may be downloaded periodically or on an event-driven basis by the server from each computing device, while or when the computing device is connected to the server via the global communication network. In this manner, a list of files associated with a requested device is viewable by a requesting device even when the requested device is not connected to the global communication network. A requesting device may select a file to be transferred from the requested device to the file repository on the server, and from the file repository on the server to the requesting device. Similarly, a requesting device may transfer a file from the requesting device to the file repository on the server, and select the file to be transferred from the file repository on the server to the requested device. Thus, a file transfer may be effected in either direction even though the sending and receiving devices are not connected to the global communication network, to the server, or to each other at the same time.","Additional functions or services may be implemented and provided by the server-based files and tasks brokerage . A requesting device may send a request to a requested device to on-demand or automatically download a file, files of a specified type or a class of files. The file or files may be presently available on the requested device, or may be files to be generated by or otherwise available on the requested device on an ongoing basis. The server may be programmed to automatically upload files of a specified type or class from the file repository to a requesting device.","An event can trigger a request, an execution of a task or a notification. An event can be timer-based, manually or remotely triggered, or location-based. An external event can be a trigger, such as the arrival of a push message which can be http, SIP\/SMS, UDP\/TCP\/Peer-To-Peer, TCP, Bluetooth or cable packets.","For example, the requesting device may send a request to a camera-equipped cellular telephone to automatically download via the global communication network one or more subsequently captured digital photographs. If the server is programmed to automatically upload digital photographs from the file repository to a home computer as the requesting device, then digital photographs taken on a mobile telephone will be automatically transferred (pushed) to the home computer.","For a further example, the requesting device may send a request to a GPS equipped mobile telephone connected to the global communication network, to periodically or on an event-driven basis return geographical location information. The server may be programmed to automatically upload (push) the geographical location information to a home computer. In this manner, a parent may track the whereabouts of a child carrying the mobile telephone.","Similarly, authorities may track the whereabouts of a parolee carrying a similar device. The requesting device may send a request to the requested device to report or otherwise act on an event occurrence, such as detecting a GPS-based location which is out of bounds or otherwise in violation of a parole requirement. Location may be linked to a calendar application for a security application or an alternative to jail in a law enforcement application.","A mobile telephone may be requested to push call information on the occurrence of each call as acting on an event. The call information may be stored in the file repository in a call log. The server may be programmed to automatically send the call log, each time the call log is updated, from the file repository to a requesting device. The requesting device may be an interactive automotive electronics device, automatically displaying the call log on a screen in an automobile. The requesting device may be a telematics device or an Internet connected picture display. The requesting device may be a set top box, displaying the call log automatically in a viewing area on the television screen.","Further examples of tasks which a mobile telephone may be requested to perform include erasing data, shutting down the device, restarting the device, installing an application, updating an application, importing a certificate, installing a certificate, exporting a certificate, revoking a certificate, updating a certificate or activating a security feature or function. A mobile telephone may be requested to capture a certificate\/digital badge, PKI certificates and\/or keys from various digital formats for example from a PC or storage devices, a TPM Chip, a certificate information store, a certificate authority (CA) server or source\/feed such as Verisign, certificate files in a device storage or a device database, or from server storage files or a database. A mobile telephone may be requested to encrypt and upload files and\/or a message to the server and post to a queue for processing by the server or other devices. A mobile telephone may be requested to retrieve a certificate, decrypt and install the certificate on the device in a personal, intermediate or root directory or in any specified device's location including a TPM Chip, a Mobile TPM chip or the mobile phone's SIM or storage cards or peripherals. A certificate may stay on a server or be removed based on server policies. The user may have the ability, with a single click, to provision devices with a certificate from a PC client, a browser or from other platforms that support web services, certificate and I\/O operations.","Authentication and other security tasks may be performed in an enterprise solution. Such a solution may be implemented at wireless access points associated with devices and\/or servers, or on the edge of the network, for example with VPN, reverse proxy, application servers, network equipment and load balancers. In an example, an application running ActiveX on Windows the MobiWee API's can be executed by Java or ActiveX to extract a certificate based on a filter from a user PC or device, upload the certificate to the \u201ccloud\u201d, and deploy the certificate to a mobile device seamlessly with minimal user interaction. This will provide a strong authentication solution for corporate IT, carriers, service providers, manufacturers, automotive or infotainment providers.","Client software on a mobile telephone may implement a proxy agent on the device, taking action on device events such as SMS message arrival or transmission, an incoming call or incoming e-mail. The agent\/proxy may detect the event, capture data associated with the event from the client device, capture display GUI images, videos, a screen (if applicable) and data on the display, capture any relevant data for the event from files, a database, hardware, input\/output (I\/O) devices or memory, CPU or GBU, and upload the data to a \u201ccloud\u201d service, encrypting and storing the data for other devices for the user or another authorized user. In an example, when a mobile telephone rings while a user is occupied with driving an automobile, the screen of the mobile telephone is captured along with the telephone number, and the data is displayed on a car computer on the dashboard, complying with applicable safety rules and regulations. The system can display SMS messages and allow a user to respond to SMS and dialback using a touchscreen on the dashboard. In a further example, when a mobile telephone rings or an SMS message arrives on the mobile telephone, the device status or the SMS message can be displayed on a connected display or television or other device connected to the \u201ccloud\u201d.","\u201cCloud\u201d services can be a hosted server, cluster or server distributed worldwide (WW), a private \u201ccloud\u201d for a specific user, a \u201ccloud\u201d for a specific service provider, enterprise or original device manufacturer\/network equipment provider (ODM\/NEP), micro \u201ccloud\u201d hosted on a vehicle, airplane or other similar application, or a system within a system.","Client software installed on each of the requesting device, the requested device and the server is specific to the device. Operating the client software, the devices negotiate and communicate in various protocols which may include but are not limited to TCP, UDP, SMS, http, SIP or Peer-To-Peer, in a secure, un-secure or mixed mode, depending on the data transferred and based on user or administrator options. Protocols and capabilities are implemented using native device operating system (OS) commands and capabilities. Various supported programming languages can be used.","Commands may be sent and performed by an agent, operating client software, using OMA DM or a Native OS application programming interface (API). For enhanced manageability and security, telephony application programming interface (TAPI) may be used.","Messages may be encrypted, such as by AES\/3D encrypted XML remitted over secure SSL. Data can be double encrypted using secure sockets layer (SSL) and advanced encryption standard (AES) or 3DES. Client software may use multi-factor authentication parameters such as a mixture of password, key, token, device hardware parameters, SIM card parameters and other authentication parameters.","An authentication module acting on the communications between requesting device, server and requested device may make use of a user name and password, a password and an e-mail personal identification number (PIN) code, a password and an SMS PIN, lightweight directory access protocol (LDAP) authentication, LDAP PIN via mail or SMS, certificates, digital badges, single sign-on modules and integration modules or certificates in combination with another security measure. A zero user interaction model may be used, in which the user need not supply additional information but the telephone number, IMEI, IMSI or message authentication code (MAC) is used. A mobile telephone may send an SMS message to itself to capture an extra authentication token. An ActiveX component may extract certificates and Digital badges from a computing device and install them in a mobile device or remote device. The mobile device or remote device may then authenticate with routers, wireless gateways, a virtual private network (VPN) or the edge of a network.","Implementation may take the form of an enterprise solution, a cloud service, a free community and social networking service, or a mixed mode optimized between Internet service, an intranet and a demilitarized zone (DMZ). Various combinations of a firewall, a demilitarized zone, an intranet with authentication and communication on the Internet, a portal, data residing in a distributed manner, mirrored fields, types of cloud servers, main servers, cloud service or mixed mode service may be used.","Files or data may be cached or saved on the server for a specified period of time, depending on a policy or application. Files may include application data, images, media, encrypted or unencrypted files. Files may be saved for later retrieval or backup and restore operations, or may be deleted after retrieval by an intended service or device. Files may be backed up from one device, then restored to a new or replacement device in case of theft, loss of the original device or upgrade to a new device.","Client software may be programmed or selected by user option to operate in the background or to operate only when expressly enabled during a user session. Background operation has advantages in that a device may be requested to perform an operation upon a subsequent activation and connection to the server, without requiring that a user directly enable the client software during each session. As an example, a stolen or lost mobile phone may be requested to lock or wipe data, without requiring that a thief or a person finding the mobile phone expressly activate the client software. Background client software may boot up and operate when the mobile phone is turned on, regardless of whether the mobile phone is turned on by the original owner. Client software may even be programmed to operate if, for example, a SIM card is replaced, allowing locking, encryption or wiping upon command and thus protecting a stolen mobile phone from being used with a new SIM card. A requested device may be issued a command to perform call forwarding, as a proxy, with the client software acting on the request.","A software development kit (SDK) allows creating custom agents and optimizes the user experience and interactions. Software development kits may be available for Internet connectable appliances, televisions, telematics, automotive, set top box (STB), game consoles or other applications. Mobile telephone data and remote device data may be displayed on an interactive graphical user interface (GUI) operating under any of various operating systems. As an example, missed calls, a file arriving, a screen capture from a mobile phone, an arriving SMS message, a location of the device, a digital photograph from the device, or other information from a remote device may be brokered by the system and relayed to a requesting device for display or other use. The relaying may be on demand or automatic, at one or both ends. In this manner, SMS messages arriving at a mobile telephone may be automatically relayed end-to-end to a home computer. Digital photographs being taken using a camera-equipped mobile telephone may be automatically relayed end-to-end to a home computer.","A sharing module may allow users to share and interact with other user devices for sharing files, contacts or location. Multiple users may use the server-based files and tasks brokerage  in a collaborative effort.","As disclosed herein, the method and system for a server-based files and tasks brokerage provides a mechanism for file transfers and task request transfers between computing and communication devices connected in overlapping or nonoverlapping sessions to a server. The server acts to broker the transactions, transfers and communications, so that a request may be made and acted upon even when one device is not directly connected to the other device or both devices are not connected at the same time to the server."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 3","FIGS. 1 and 2"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 4","FIGS. 1 and 2"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 5","FIGS. 1 and 2"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 6","FIGS. 1 and 2"]}]},"DETDESC":[{},{}]}
