---
title: Using multidimensional access as surrogate for run-time hash table
abstract: Approaches are disclosed for using a multidimensional database as a surrogate for a run-time hash table in the context of processing a relational query. In an embodiment, an analytic workspace is used to store data, wherein the data is to be evaluated using a by a function in the processing of a MODEL clause. The approaches eliminate the need to use a hash table to store the data that is to be evaluated. The data may initially reside in the analytic workspace, or it may be loaded into the analytic workspace.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08001112&OS=08001112&RS=08001112
owner: Oracle International Corporation
number: 08001112
owner_city: Redwood Shores
owner_country: US
publication_date: 20040723
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","FIELD OF INVENTION","BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","Functional Overview","Exemplary System","Hardware Overview"],"p":["This application is a continuation-in-part of and claims the benefit of domestic priority from:","U.S. patent application Ser. No. 10\/424,003 entitled \u201cMethods of Navigating a Cube that is Implemented as a Relational Object,\u201d filed on Apr. 25, 2003, which claims the benefit of priority from U.S. Provisional Application No. 60\/379,870, entitled \u201cOnline Analytical Processing (OLAP) Operations and Access Structures for Data Stored in a Relational Database,\u201d filed on May 10, 2002;","U.S. patent application Ser. No. 10\/423,356 entitled \u201cUsing Relational Structures to Create and Support a Cube Within a Relational Database System,\u201d filed on Apr. 25, 2003, which also claims the benefit of priority from U.S. Provisional Application Ser. No. 60\/379,870, entitled \u201cOnline Analytical Processing (OLAP) Operations and Access Structures for Data Stored in a Relational Database,\u201d filed on May 10, 2002; and","U.S. patent application Ser. No. 10\/417,732 entitled \u201cTechniques for Managing What-If Analysis of Data Managed by a Relational Database System,\u201d filed on Apr. 16, 2003; which claims the benefit of priority from U.S. Provisional Application Ser. No. 60\/375,726, entitled \u201cIntegrating Online Analytical processing (OLAP) functions Into A Relational Database Management System (RDMBS),\u201d filed on Apr. 26, 2002.","This application is related to U.S. patent application Ser. No. 10\/898,280 entitled \u201cUsing a Cache to Provide Cursor Isolation,\u201d by Matthew Dombroski and Ekrem Soylemez, filed on Jul. 23, 2004.","The contents of all of which are incorporated by reference in their entirety for all purposes, as if fully set forth herein.","The invention generally relates to computer systems, and, more specifically, relates to approaches for using a multidimensional database as a surrogate for a run-time hash table in the context of processing a relational query.","The approaches described in this section are approaches that could be pursued, but not necessarily approaches that have been previously conceived or pursued. Therefore, unless otherwise indicated, the approaches described in this section are not prior art to the claims in this application and are not admitted to be prior art, merely by inclusion in this section.","Historically, there has been a distinction between relational database management systems (RDBMS) and multidimensional database management systems (MDDBMS). Each type of system has evolved somewhat independently from the other and to meet different goals. There are many general differences between such systems, including (1) database schema, (2) processes used to store, access and retrieve such data, and (3) data analysis capabilities, to name a few. Many specific differences in the internal processes associated with relational and multidimensional database systems stem from these general differences.","One significant difference between relational and multidimensional database systems is the difference in their respective transaction models and operation of associated transaction engines. Generally, relational systems and processes are modeled to provide fast and efficient loading and revising of data, whereas multidimensional systems and processes are modeled to provide fast, complex real-time analytical processing of data. Furthermore, relational systems are modeled to support many short transactions, or sequences of operations, that are almost always committed. That is, the changes made by transactions executed in a relational database system are almost always made permanent to the database.","In contrast, multidimensional systems are modeled to support long transactions that frequently are not committed. This is, the changes made by transactions executed in multidimensional system are usually temporary, only visible to the transaction that is making the changes, and must be removed from the database after the transaction terminates.","Not only do relational and multidimensional database systems meet different needs, in addition, such systems have historically been configured as separate stand-alone systems. In some instances, such systems are configured to emulate the functionality of one type of system in the other type of system. For example, U.S. Pat. No. 6,484,179 describes techniques for organizing multidimensional data in a relational database system in a manner that improves the performance of OLAP operations within the relational database system.","However, in prior approaches, the two disparate systems are not truly integrated. Prior approaches do not provide efficient large-scale analytical processing of transactions on relationally stored data, while maintaining desired properties of such data. For example, prior approaches do not provide the ability to efficiently handle multi-session what-if analysis transactions (e.g., MOLAP transactions) on relationally managed data, while maintaining the ACID (atomicity, consistency, isolation, durability) transaction properties typically associated with relationally managed data. What-if analyses are popular scenarios in data warehouse environments, particularly for assimilation of data in a business decision-making context. A data warehouse is a consolidated view of enterprise data, optimized for reporting and analysis. Basically, a data warehouse is an aggregated, sometimes summarized copy of transaction and non-transaction data specifically structured for dynamic querying, analysis and reporting.","A MODEL clause in a structured query language (\u201cSQL\u201d) provides numerous beneficial features, and is particularly useful in the context of integrated relational and multidimensional data. Techniques related to the MODEL clause are described in detail U.S. patent application Ser. No. 09\/886,839, entitled \u201cPERFORMING SPREADSHEET-LIKE CALCULATIONS IN A DATABASE SYSTEM\u201d, filed on Jun. 20, 2001, the entire contents of which are incorporated herein.","A MODEL clause allows database developers to treat relational data as multidimensional arrays. The data that is acted on by a MODEL clause may be referred to a \u201cmodel data\u201d. Formulas can then be defined on the arrays. As a result of the foregoing structure, a MODEL clause may resolve formula dependencies automatically, therefore supporting large sets of interlinked formulas in sophisticated applications. In particular, a MODEL clause is useful in the processing of complex calculations that involve inter-row references. The following example of a MODEL clause predicts sales of \u2018bike\u2019 in 2000 to be sum of its sales in 1999 and 1998 and sales of car in 2000 to be an average of years 1990 through 1994:",{"@attributes":{"id":"p-0017","num":"0016"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MODEL PARTITION BY (country) DIMENSION BY (prod, year)"]},{"entry":[{},"MEASURES (sales)"]},{"entry":[{},"("]},{"entry":[{},"\u2003sales[\u2018bike\u2019, 2000] = sales[\u2018bike\u2019, 1999] + sales[\u2018bike\u2019, 1998],"]},{"entry":[{},"\u2003sales[\u2018car\u2019, 2000] = avg(sales)[\u2018car\u2019, for year in (1990,1991,1992,"]},{"entry":[{},"\u2003993,1994)]"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Prior to the advent of the MODEL clause, such complex calculations often demanded the use of multiple data transformations, such as join and union statements, which are cumbersome and painstaking to develop.","In order to perform a relational query with a MODEL clause, random access of the data in the OLAP table is required. However, the data in the OLAP table cannot be randomly accessed. One solution is to create a hash table at runtime, and populate the hash table with OLAP table data. Once the data is stored in the hash table, it may be randomly accessed. A relational engine then evaluates the data in the hash table by applying spreadsheet functions. Spreadsheet functions include functions in which calculations, such as summation and averaging, are performed on data residing in rows, columns and\/or other dimensions of a database.","However, various costs are associated with the creation of the hash table \u201con the fly\u201d at run time. Additionally, some aspects of the hash table performance are undesirable. In particular, the creation of the hash table at run time is a resource intensive operation that consumes a great deal of time, memory and disk space. Also, in the event that the source data to be stored in the hash table is in an analytic workspace, the time to retrieve the data, and to build and populate the hash table is even greater.","One solution for decreasing the time consumed in the creation of the hash table at run time is to increase the size parameters of the hash table. However, this solution is not optimal because a great deal of memory must be employed if the parameters of the hash table are increased. Additionally, as a result of over-allocation of memory for a hash table, over-fetching may occur, which is not desirable. Over-fetching occurs when an area of memory is retrieved, but only a portion of the area is actually needed.","Additionally, due to the structure of a hash table, there are certain inefficiencies in the accessing and retrieval of data from the hash table. These inefficiencies can be rectified to a certain extent by optimization procedures to be performed on the hash table. However, the optimization procedures are costly to apply, and painstaking to develop.","In the implementation of the MODEL clause, as well as in the context of implementing other SQL statements and clauses, it would be desirable to have a configuration or mechanism that avoids the costs associated with creating and using a hash table at run time.","In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent, however, that the present invention may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.","Approaches are disclosed for using a multidimensional database as a surrogate for a run-time hash table in the context of processing a relational query.","In one embodiment, an approach is disclosed that employs an analytic workspace to store the data that is subject to a relational query, wherein the data is to be evaluated using one or more functions, such as a MODEL function. Such data is referred to herein as \u201cmodel data\u201d.","An analytic workspace is a storage type that provides multidimensional structures that are compatible with multidimensional database objects such as dimensions, variables, formulas, relations, and value sets. Analytic workspaces can persist across sessions and be shared by multiple user sessions. In the context of OLAP operations, an analytic workspace includes a set of data that is being manipulated according to the OLAP operations. The data underlying an analytic workspace may be stored persistently in relational database tables, as BLOBs (binary large object), for example. Furthermore, the data associated with an analytic workspace may comprise a portion of a multidimensional cube.","In other words, an analytic workspace is a construct that provides multidimensional structures that are compatible with multidimensional database objects such as dimensions, variables, formulas, relations, and value sets. Therefore, analytic workspace  includes a set of data on which extended or complex OLAP operations can be performed. In an embodiment, analytic workspaces are acquired from a database via procedures associated with an OLAP Application Programming Interface (API\u2033). For example, a database user performing OLAP operations on a set of multidimensional data, such as through an OLAP API to analyze data in analytic workspace, may requests aggregated or otherwise processed and grouped measure data for various grouping combinations of geography\/time dimensions.","The use of an analytical workspace to hold the model data eliminates the need to use a hash table to store the model data. In one embodiment, a relational engine is used to evaluate model functions that are included in queries that are performed on model data stored in an analytic workspace. The model data may initially reside in the analytic workspace, or it may be loaded into the analytic workspace in response to execution of the query that contains the model clause.","Each time a query that contains a model clause is executed, random access to the data upon which the clause in applied is required. As stated above, in the prior art, random access was provided by a hash table created for processing of the clause. However, as explained above, the creation and use of the hash table has many disadvantages.","In contrast, in the techniques described hereafter, a multidimensional database, such as an analytic workspace, is used as a to provide random access to model data. In a sense, the analytic workspace may serve as a surrogate for the hash table used to hold model data in the prior art. This use an analytic workspace has many advantages. For example, a pre-existing and\/or persistent analytic workspace can be used, which reduces or eliminates the need to create data structures, such as a hash table, \u201con the fly\u201d when an query is executed. Therefore, the use of an analytic workspace reduces or eliminates the time and storage costs involved with creating a hash table. If the data is already in an analytic workspace at the time the query is executed, even more time is saved. If the data is not already in the analytic workspace when the query is executed, the data may be loaded into the analytic workspace.","In addition, an analytic workspace provides more efficient and faster random access than a hash table if the data is much larger than the memory allocated to the hash table. In this regard, the need to perform various optimization steps that are often performed on hash table data is reduced or eliminated in the disclosed approaches. A join or a predicate push down is an example of an optimization technique that can be avoided by implementing a disclosed approach.","Additionally, in the disclosed approaches, there is no need to over-allocate storage parameters, as is often done to allow a hash table to function more efficiently. The over-allocation of storage parameters lead to over-fetching, a problem that is also reduced or eliminated in an embodiment. Moreover, procedures to optimize the size of hash tables may be extremely complex. Due to these complexities, the hash table, in its ultimate form, may still not function efficiently, and a lot of time may be wasted to develop and apply methods of managing the memory footprint of the hash table with respect to the data set.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 1"},"System  may be used to perform a relational query that includes a MODEL clause. The disclosed embodiments are particularly useful in respect of queries, such as those that involve a MODEL clause.","System  comprises analytic workspace , which serves as a surrogate for the hash table that was created in prior art approaches to handling queries that have model clauses. According to one embodiment, analytic workspace  exists prior to the time that the query that includes the model clause is performed, although it is not necessary that the data be loaded into analytic workspace  prior to the time that the query is performed. If the model data to be subject to the MODEL clause resides in a relational table, the data in the relational table may be loaded into analytic workspace . However, if the data already exists in analytic workspace  when the query that includes the model clause is executed, the query will be faster.","The MODEL clause may then be applied to the data in the analytic workspace . The data upon which a function is to be performed is specified in the list of a FROM clause of a query. In the prior art, when a query with a MODEL clause was executed, the hash table was created on the data generated by the query block. In an embodiment, instead of referring to the hash table in the FROM clause of the query, analytic workspace  may be referenced. For example, the following query may be executed:\n\n","In an embodiment of system , relational engine  directly accesses the model data in analytic workspace . Because model data is directly accessed, the access to the data in analytic workspace  should not be \u201cwrapped\u201d in other functions, such as wrapped in a WINDOW function. The analytic workspace is presented as a materialized view of a table.","System  includes application . Application  submits a query that includes a MODEL clause. System  employs various engines and functions to redirect a query to a multidimensional engine. As a result, the architecture of system  ensures that any select statement can be run against multidimensional data types, and that the results are consistent with the same select statement against a relational table. This aspect is facilitated by lying relational engine  over multidimensional table .","In the prior art, after the steps of aggregation and calculation were performed in multidimensional engine , it was necessary to create a hash table and populate the hash table with data from multidimensional engine  to enable model functions to be evaluated by relational engine . However, as described above, analytic workspace  serves as a surrogate for the hash table, and stores data upon which functions, such as the MODEL clause, functions may be performed by relational engine .","In an embodiment, system  also includes interface . Because a hash table and an analytic workspace have different structures, the same interface cannot be used to access the data that resides therein. In the prior art, a standard interface is used to access model data in the hash table. However, in an embodiment disclosed herein, a second layer interface is added to the standard interface to allow calls made through the standard interface to access an analytic workspace, using typical analytical workspace methods.","The disclosed methods reduce the overhead involved with various data transformations that were required in the prior art. For example, in the prior art, random access data in an analytic workspace was transformed into serial access relational data, and was then transformed into random access data in the hash table. Such transformations are reduced or eliminated by a disclosed embodiment, in which random access to model data is provided directly to relational engine .",{"@attributes":{"id":"p-0048","num":"0050"},"figref":"FIG. 2","b":"200"},"Step  comprises receiving a request to process a relational query in which data is updated. In one embodiment, the relational query may involve updating data through the application of a MODEL clause. The MODEL clause may be part of a SELECT statement, and is received by an application and processed by one or more engines, such as a relational engine. The disclosed subject matter may also be used in respect of other clauses which update data.","Step  comprises evaluating functions based on model data in an analytic workspace in order to process the relational query. In an embodiment, the functions include functions associated with the application of a MODEL clause. The application of functions may include the application of formulas on multidimensional arrays. The functions are comprised of computational rules expressed in terms of dimension variables.","Step  comprises providing the results of the relational query. The results of the relational query may be communicated to the application. In an embodiment, the results are returned to the application by a relational engine via Oracle Call Interface (\u201cOCI\u201d) or Java Database Connectivity (\u201cJDBC\u201d).","Embodiments of the disclosed subject matter may be applied in respect of other storage mediums. For example, an embodiment could be used to process queries that are performed on other types of random-access storage, not just analytic workspaces. Additionally, an embodiment could be applied in respect of the processing of SQL clauses other than the MODEL clause.",{"@attributes":{"id":"p-0053","num":"0055"},"figref":"FIG. 3","b":"300"},"In step , an analytic workspace is created. The analytic workspace may be created using conventional means for creating an analytic workspace. However, in other embodiments, the analytic workspace may be pre-existing, without data residing therein until it is populated with data, as described below.","Step  comprises populating the analytic workspace with data. Therefore, data that resides in relational tables can be dynamically populated into the analytic workspace. As a result, the more efficient data access methods described herein may be applied to process the relational query in respect of the data that is populated into the analytic workspace. In a sense, the analytic workspace provides a materialized view of the relational tables.","In step , similar to the steps of method , model functions are evaluated based on data that is loaded into the analytic workspace. In an embodiment, a relational engine may evaluate the model functions","In the approaches described above, an analytic workspace provides a materialized view of relational tables. If such a materialized view is maintained, query references to multiple relational tables may be replaced with references to analytic workspaces.",{"@attributes":{"id":"p-0058","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SELECT SUBSTR(country,1,20) country, SUBSTR(prod,1,15)"]},{"entry":[{},"prod, year, sales"]},{"entry":[{},"FROM AW_XYZ"]},{"entry":[{},"WHERE country=\u2018Italy\u2019"]},{"entry":[{},"MODEL PARTITION BY (country) DIMENSION BY (prod, year)"]},{"entry":[{},"MEASURES (sales)"]},{"entry":[{},"("]},{"entry":[{},"\u2003\u2003sales[\u2018bike\u2019, 2000] = sales[\u2018bike\u2019, 1999]"]},{"entry":[{},"+ sales[\u2018bike\u2019, 1998],"]},{"entry":[{},"\u2003\u2003sales[\u2018car\u2019, 2000] = avg(sales)[\u2018car\u2019, for year in"]},{"entry":[{},"(1990,1991,1992,1993,1994)]"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In the above example, model data in the analytic workspace AW_XYZ is accessed. The model data is not stored in a hash table. In this way, queries can take advantage of the fast access properties that are associated with analytic workspaces. Moreover, the use of analytic workspaces to provide a materialized view of relational tables is transparent to the user.","Although a persistent multidimensional database may be used to implement embodiments, a non-persistent multidimensional database may also be used in some embodiments. The non-persistent multidimensional database could be populated dynamically with data when a query, such as a query with a MODEL clause, is executed. If a large quantity of queries that include MODEL clauses are performed, a number of session analytic workspaces could be employed. In another embodiment, an analytic workspace may be maintained beyond a session.","If data in an analytic workspace is updated using a MODEL clause, the updated data in the analytic workspace may persist for the duration of a session, or across sessions. An additional feature that is found in an embodiment relates to the fact that unlike a hash table, an analytic workspace is capable of remembering updates. As such, a query including MODEL clause could be executed, and then update data in an analytic workspace. The updated data could then me accessed by a second MODEL clause that is executed. This feature is not available in relational database management systems.","The approach for using a multidimensional database as a surrogate for a hash table in the context of a relational query that are described herein may be implemented in a variety of ways and the invention is not limited to any particular implementation. The approach may be integrated into a computer system or a network device, or may be implemented as a stand-alone mechanism. Furthermore, the approach may be implemented in computer software, hardware, or a combination thereof.",{"@attributes":{"id":"p-0063","num":"0065"},"figref":"FIG. 4","b":["400","400","402","404","402","400","406","402","404","406","404","400","408","402","404","410","402"]},"Computer system  may be coupled via bus  to a display , such as a cathode ray tube (CRT), for displaying information to a computer user. An input device , including alphanumeric and other keys, is coupled to bus  for communicating information and command selections to processor . Another type of user input device is cursor control , such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor  and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify positions in a plane.","The invention is related to the use of computer system  for implementing the techniques described herein. According to one embodiment of the invention, those techniques are performed by computer system  in response to processor  executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory  from another computer-readable medium, such as storage device . Execution of the sequences of instructions contained in main memory  causes processor  to perform the process steps described herein. In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware circuitry and software.","The term \u201ccomputer-readable medium\u201d as used herein refers to any medium that participates in providing instructions to processor  for execution. Such a medium may take many forms, including but not limited to, non-volatile media, volatile media, and transmission media. Non-volatile media includes, for example, optical or magnetic disks, such as storage device . Volatile media includes dynamic memory, such as main memory . Transmission media includes coaxial cables, copper wire and fiber optics, including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves, such as those generated during radio-wave and infra-red data communications.","Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, or any other magnetic medium, a CD-ROM, any other optical medium, punchcards, papertape, any other physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, any other memory chip or cartridge, a carrier wave as described hereinafter, or any other medium from which a computer can read.","Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to processor  for execution. For example, the instructions may initially be carried on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system  can receive the data on the telephone line and use an infra-red transmitter to convert the data to an infra-red signal. An infra-red detector can receive the data carried in the infra-red signal and appropriate circuitry can place the data on bus . Bus  carries the data to main memory , from which processor  retrieves and executes the instructions. The instructions received by main memory  may optionally be stored on storage device  either before or after execution by processor .","Computer system  also includes a communication interface  coupled to bus . Communication interface  provides a two-way data communication coupling to a network link  that is connected to a local network . For example, communication interface  may be an integrated services digital network (ISDN) card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface  sends and receives electrical, electromagnetic or optical signals that carry digital data streams representing various types of information.","Network link  typically provides data communication through one or more networks to other data devices. For example, network link  may provide a connection through local network  to a host computer  or to data equipment operated by an Internet Service Provider (ISP) . ISP  in turn provides data communication services through the world wide packet data communication network now commonly referred to as the \u201cInternet\u201d . Local network  and Internet  both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link  and through communication interface , which carry the digital data to and from computer system , are exemplary forms of carrier waves transporting the information.","Computer system  can send messages and receive data, including program code, through the network(s), network link  and communication interface . In the Internet example, a server  might transmit a requested code for an application program through Internet , ISP , local network  and communication interface .","The received code may be executed by processor  as it is received, and\/or stored in storage device , or other non-volatile storage for later execution. In this manner, computer system  may obtain application code in the form of a carrier wave.","In the foregoing specification, the invention has been described with reference to specific embodiments thereof. It will, however, be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["The disclosed subject matter is depicted by way of representative examples, and not by way of limitation, in the illustrations of the accompanying figures. The figures include:",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
