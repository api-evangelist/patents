---
title: Friendly URLs
abstract: A Web crawler, search engine, browser program, or other client application dynamically accesses data by using “friendly” Uniform Resource Locaters (URLs) that do not require query parameters or other non-intuitive coding. A friendly URL includes a static URL that appears to identify a static resource, such as a Hyper Text Markup Language document. A friendly URL can be a link or entered in a browser program's address field. A data type in the friendly URL is mapped to a data source that dynamically accesses data associated with an intuitive data key in the friendly URL. The data key refers to a specific document, and/or is a search term. A query URL is constructed with the data key, and a data source identifier that preferably refers to a database function and is mapped to the data type. The resulting dynamically accessed data are communicated back to the requesting client application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07293012&OS=07293012&RS=07293012
owner: Microsoft Corporation
number: 07293012
owner_city: Redmond
owner_country: US
publication_date: 20031219
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["The present invention generally relates to accessing dynamically generated data with a static universal resource locator (URL), and more specifically, pertains to accessing data that are dynamically generated with one or more query parameters determined from elements of a static URL, instead of including the query parameters in a conventional URL.","Searching for information is one of the most prevalent activities on the Internet. Individuals increasingly use search engines that show lists of web sites potentially related to topics of interest. However, finding relevant information is difficult, because it is difficult for individual users and conventional search engines to identify relevant content among the enormous volume of accessible data. Further, most substantive content is not readily accessible, because the content is stored in databases that are used to dynamically generate documents and other data instead of being stored as static files. To access database content, a query string is typically specified in a URL that also identifies a network address of the database, so that the specific database to be searched for the desired content is identified in the query. URLs with query strings frequently become very long and complex. As the complexity of database driven Web sites has increased, it has become highly unlikely that a typical user will correctly type a URL and a query string to access content of possible interest on even a known Web site.","Similarly, secondary users of the Internet, such as conventional search engines and dynamic web crawlers, are often set up to avoid links that include URLs with a query string. Consequently, a large amount of the most valuable and substantive information that is available is not reported. To counteract this problem, some Web sites have been designed specifically for Web crawlers and search engines instead of for individual users. To ensure that their content is indeed identified in search results, such Web sites may use \u201ccloaked URLs\u201d to present different Web pages to Web crawlers than they do to individuals using browser programs to explore the Web sites. These Web sites detect when a request is from a Web crawler and redirect the request to a Web page that is specifically designed to maximize a search ranking in the reported search results, rather than to provide the page that a user would view in a browser. However, many search engine operators disapprove of this practice of cloaking URLs. Search engine operators try to ensure that their search engines return lists of Web pages that would actually be seen by their customers, if the customers were browsing the Web sites represented in the lists. Search engines are thus frequently set up to consider cloaked URLs as a form of spam and to make special efforts to eliminate cloaked URLs from their search results.","Another approach used to identify and access information on database driven Web sites evaluates a user's keywords, and attempts to match those keywords to a relevant search engine that is closely tied to one or a few database driven Web sites. This approach is sometimes discussed in terms of mining the \u201cdeep Web\u201d or the \u201cinvisible Web.\u201d Based on the keywords, a query string is created, which is syntactically valid for a selected search engine that is closely tied to one or more relevant databases. This preprocessing approach of selecting relevant Web sites and creating custom queries for their corresponding database(s) provides an alternative to using a conventional, \u201call-purpose\u201d search engine, such as GOOGLE\u2122, ALTAVISTA\u2122, etc. However, it would be preferable to utilize these conventional, all-purpose search engines to find the desired content in databases on the Web, because the conventional search engines are so widely used. Thus, it is preferable to provide a way for Web site operators to make their database content accessible and searchable using conventional search engines and Web crawlers. It is further desirable to enable users to search database content directly from a browser when the user already knows one or more database driven Web sites that likely contain relevant information.","The present invention provides a method and system for enabling a Web crawler, search engine, browser or other client application to access data by using \u201cfriendly\u201d URLs that do not require conventional query parameters or other non-intuitive coding, and which are dynamically obtained and\/or created. Such URLs are friendly because they are easy to read and understand by humans and are in a form that is readily searchable by conventional search engines, Web crawlers, browsers, and other client applications. A friendly URL comprises a static URL that appears to identify a location and name of a static resource such as a conventional hypertext markup language (HTML) document. A friendly URL does not include query strings, and preferably does not directly refer to any active server page (ASP) script, common gateway interface (CGI) script, or other executable module. The present invention enables a friendly URL to be mapped to a data source, such as a database driven Web site, and causes the data source to dynamically access or generate data associated with an easily understood data key provided in the friendly URL. The data key can refer to specific information known to be available from the data source, and\/or indicate a keyword that can be used to search the data source for related information of possible interest.","A friendly URL can be incorporated into a link in a source document that is accessible to a conventional search engine, Web crawler, browser, or other client application. Alternatively, a friendly URL can be entered by a user into an address data field of a browser or other communication application. The friendly URL is communicated to a server or other communication module that incorporates the present invention and that is in communication with a desired data source. The communication module receives the friendly URL just as it would any other static URL, but does not immediately attempt to access the static resource indicated in the friendly URL. Instead, the friendly URL is parsed to determine whether the friendly URL includes a data type and a data key at predefined locations within the URL string. The data type preferably refers to a text data source, an image data source, a media data source, or other data source that is dynamically accessible. The data key can comprise a specific data identifier or a search term. If a recognized data type is found in the received friendly URL, a query URL is constructed with a data source identifier that is mapped to the data type. The data source identifier preferably refers to a script or other function that can dynamically access data from the data source. This internal mapping of friendly URLs to data sources enables data providers to change the mappings whenever internal data locations change and does not require updating links to the data on existing Web pages. The internal mapping also provides a layer of security by not directly disclosing the location, data access function, and other details to the client application and\/or user, as occurs when using a real URL. The data key is also incorporated into the query URL as a query parameter with any other code characters needed by the data source to dynamically access and\/or generate data associated with the data key. The query URL can be communicated directly to the data source or internally redirected to the data source. In any case, the resulting dynamically accessed data are then communicated back to the requesting client application, but are identified only by reference to the original friendly URL.","Another aspect of the present invention is directed to a memory medium that stores machine instructions for carrying out the steps described above and as discussed in further detail below.","Exemplary System for Implementing Present Invention",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":["20","21","22","23","21","24","25","26","20","24","20","27","28","29","30","31","27","28","30","23","32","33","34","20","29","31"]},"A number of program modules may be stored on the hard disk, magnetic disk , optical disc , ROM , or RAM , including an operating system , one or more application programs , other program modules , and program data . A user may enter commands and information in to PC , and provide control input through input devices such as a keyboard  and a pointing device . Pointing device  may include a mouse, stylus, wireless remote control, or other pointer. As used hereinafter, the term \u201cmouse\u201d is intended to encompass virtually any pointing device that is useful for controlling the position of a cursor on the screen. Other input devices (not shown) may include a microphone, joystick, haptic joystick, yoke, foot pedals, game pad, satellite dish, scanner, or the like. These and other input\/output (I\/O) devices are often connected to processing unit  through an I\/O interface  that is coupled to system bus . The term I\/O interface is intended to encompass each interface specifically used for a serial port, a parallel port, a game port, a keyboard port, and\/or a universal serial bus (USB). A monitor  or other type of display device is also connected to system bus  via an appropriate interface, such as a video adapter . In addition to the monitor, PCs are often coupled to other peripheral output devices (not shown), such as speakers (through a sound card or other audio interface\u2014not shown), and printers.","The present invention may be practiced on a single machine, however, PC  can also operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . Remote computer  may be another PC, a server (which is typically generally configured much like PC ), a router, a network PC, a peer device, or a satellite or other common network node, and typically includes many or all of the elements described above in connection with PC , although only an external memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are common in offices, enterprise wide computer networks, intranets, and the Internet.","When used in a LAN networking environment, PC  is connected to LAN  through a network interface or adapter . When used in a WAN networking environment, PC  often will typically include a modem , or other means such as a cable modem, Digital Subscriber Line (DSL) interface, or an Integrated Service Digital Network (ISDN) interface for establishing communications over WAN , such as the Internet. Modem , which may be internal or external, is connected to system bus  or coupled to the bus via I\/O device interface , i.e., through a serial port. PC  may also communicate over a WAN through comparable network interfaces that are provided on the LAN to which the PC is coupled. In a networked environment, program modules depicted relative to PC , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used, such as wireless communication and wide band network links.","Request Specific Dynamic Data with Friendly URL",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2A","b":["100","100","102","104","106","106","106","106","106","108","110"]},"As in the example of , request message  preferably comprises a hypertext transfer protocol message to a known domain name and known directory such as the root directory of Microsoft Corporation's \u201cencarta.msn.com\/\u201d domain. Friendly URL  further indicates a data type, such as \u201cencyclopedia,\u201d and a data key, such as \u201c1861595373.\u201d The data type and data key are separated by a non-query separator such as an underscore character (\u201c_\u201d). The data type preferably refers to the form of the requested information\u2014in this case, an encyclopedia article. Those of ordinary skill in the art will recognize that the data type could be a picture file, a video file, an audio file, or almost any kind of electronically transmittable file. The data key preferably refers to a specific document or other item of information that is to be dynamically generated from the storage being accessed. The document name \u201ccamel.html\u201d indicates the topic of the dynamically generated data, but is expressed in static form with the \u201c.html\u201d extension.","An intercept module  of server communication software  recognizes the \u201c.html\u201d extension and stores the friendly URL. Intercept module  passes received friendly URL  to an application extension , such as an Internet Server Application Programming Interface (ISAPI) Extension. The application extension evaluates the friendly URL and generates an internal real URL . Internal real URL specifies the query parameters and\/or other coding needed to dynamically access or generate the desired encyclopedia article or other information. In general, the internal real URL is in a form that contains a source identifier, a data key, and a query indicator. In the example of , \u201c\/encnet\/refpages\/RefArticle.aspx\u201d of internal real URL comprises a source identifier that specifies a source of the desired dynamically generated information. In this case, the source identifier refers to an internal directory location and name of a script that will construct the encyclopedia article as a web page. This source identifier is mapped from the data type \u201cencyclopedia\u201d received in the friendly URL. Because the internal directory location and script name are not included in the original friendly URL, there is an added level of security introduced by using a friendly URL. The data key \u201c1861595373\u201d is also incorporated into the internal real URL for use by the script. As a conventional query string, the internal real URL includes any necessary query indicators, such as a question mark \u201c?.\u201d","Application extension  communicates internal real URL to an internal control transfer module , which communicates a redirected internal real URL to a database lookup script . The database lookup script retrieves data associated with the data key and\/or dynamically generates a Web page, and passes results data  to a return module  controlled by the IIS server software. Return module  creates a return message  comprising the dynamically generated Web page (or other data) and friendly URL  that was previously stored and then communicates return message  to the requesting browser or Web crawler.","Requesting a Search with the Friendly URL",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 2B","FIG. 2A","FIG. 2B"],"b":["140","142","144","146","110","146"]},"Also, similar to the hyperlink example, search request message  conforms to the hypertext transfer protocol and specifies a known domain name and known directory (e.g., \u201cencarta.msn.com\/\u201d). Search request message  also includes the data type \u201cencyclopedia\u201d and a separator \u201c\/\u201d (i.e., a forward slash). Again, the data type preferably refers to the form of the requested information, such as an encyclopedia article. The server software uses the separator to distinguish between the data type and data key and can comprise any predefined character other than a query character. The data key in this search example is the name of a static HTML file \u201ccamel\u201d that can be easily specified by a user, rather than a reference number that is predefined in a hyperlink. The \u201c.html\u201d extension again indicates a simple static document, but the server software is designed to use the data type and data key of the static friendly URL to access and\/or generate the dynamic data.","The remaining processing is very similar to the hyperlink example; however, a keyword search is performed rather than a direct dynamic access based on a predefined reference identifier. More than one search result may also be returned. In further detail, intercept module  of server communication software  recognizes the \u201c.html\u201d extension and stores the friendly URL. Intercept module  passes a received friendly URL  to application extension , which evaluates the received friendly URL and generates an internal real URL . Internal real URL specifies the query parameters and\/or other coding needed to perform the keyword search. In general, the internal real URL is still in a form that contains a source identifier, a data key, and a query indicator. In particular, \u201c\/encnet\/refpages\/RefArticle.aspx\u201d of internal real URL still comprises the source identifier that specifies the source to be searched. In this case, the source identifier refers to an internal directory location and name of a script that will construct a search for one or more encyclopedia articles that will be generated based on the data key received. The data key \u201ccamel\u201d is incorporated into the internal real URL for use by the script.","Application extension  communicates internal real URL to internal control transfer module , which communicates a redirected internal real URL to database lookup script . The database lookup script performs a search based on the data key and generates a search results page, encyclopedia article, or other appropriate search results. The database lookup script then passes search results data  to return module , which is controlled by the IIS server software. Return module  creates a return message  comprising the dynamically generated search results and friendly URL  that was previously stored. Return module  then communicates return message  to the requesting browser.","Providing Dynamically Accessed Data in Response to a Request",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3","b":["154","156","158","162","164"]},"In a step , the ISAPI extension generates the internal real URL and returns the internal real URL to the control transfer module of the IIS. As discussed in further detail below with regard to , the ISAPI extension uses the data type and data key of the friendly URL to construct an internal URL that contains a location, a script name, and query parameters. In a step , the control transfer module of the IIS redirects the internal real URL to the script defined in the internal real URL. This internal redirection process can be implemented with a child request of the original request. For instance, the ISAPI extension can call an HSE_REQ_EXEC_URL function of IIS version 6.0 to rewrite the received URL request to the script mapped to the data type. In a step , the script accesses the desired data associated with the data key and\/or generates a results page. As noted above, the desired data are typically stored in a database and are readily accessible when accessed using scripts that are controlled by the sever software. The script passes the results data to the return module of the IIS. In a step , the return module of the IIS accesses the friendly URL that was stored at step  when the request message was received by the intercept module of the IIS. The return module constructs a return message with the friendly URL as a header and incorporates the results data (e.g., dynamically generated Web page, search results, etc.) into the return message. In a step , the IIS sends the return message to the requesting browser program or Web crawler. Thus, the requesting entity receives the requested information using an easily readable URL that does not include any query parameters. Also, by using the friendly URL in the return message, details of the internal real URL are not discoverable by the requesting browser program or Web crawler.","Constructing a URL for Internal Processing","Further detail is now provided regarding steps employed for generating a real URL from a friendly URL as indicated in step  above.  is a flow diagram illustrating a method for constructing a corresponding internal URL for internal processing. At a step , the ISAPI extension receives the friendly URL from the IIS and parses it. In a decision step , the ISAPI extension examines the friendly URL to determine whether it includes a component followed by a predefined separator, such as an underscore or slash. If a separator component is present, the ISAPI extension determines whether the component matches a known data type. A known data type can include a text encyclopedia article, a dictionary entry, an image, a multimedia presentation, or other digital file. If a known data type is not found or an appropriate separator is not identified, the ISAPI extension uses a default mapping algorithm to construct the internal real URL at a step . The default mapping algorithm preferably processes conventional static URLs and\/or other URLs that do not include a known data type.","However, if a known data type is found, the ISAPI extension uses the data type, at a step , to ascertain the directory location and the script required to dynamically access and\/or generate the requested information. Table 1, which is shown in , illustrates some of the data types and corresponding paths to data source scripts used to dynamically access and\/or generate data from an online encyclopedia Web site. After detecting a separator, the ISAPI extension further analyzes the friendly URL in a step , to identify a data key and any other parameters expected to be associated with the data type. These parameters are sometimes referred to as tokens. Those skilled in the art will recognize that different separator characters can also be used to help identify different data keys and\/or associated parameters. The separator can also be used to help distinguish between a friendly URL that identifies a specific data item (e.g., a specific Web page) and a friendly URL that indicates a keyword search.","In a step , the ISAPI extension constructs an internal real URL by replacing the data type of the friendly URL with the directory location and script name of the corresponding data source. The ISAPI extension also replaces the separator of the friendly URL with the appropriate query character(s) and places the data key and token(s) in the appropriate locations to complete a valid query string for use in the internal real URL. In a step , the ISAPI extension returns the internal real URL to the IIS software for internally redirecting to the data source script.","Although the present invention has been described in connection with the preferred form of practicing it and modifications thereto, those of ordinary skill in the art will understand that many other modifications can be made to the present invention within the scope of the claims that follow. Accordingly, it is not intended that the scope of the invention in any way be limited by the above description, but instead be determined entirely by reference to the claims that follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWING FIGURES","p":["The foregoing aspects and many of the attendant advantages of this invention will become more readily appreciated as the same becomes better understood by reference to the following detailed description, when taken in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
