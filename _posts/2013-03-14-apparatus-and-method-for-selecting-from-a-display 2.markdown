---
title: Apparatus and method for selecting from a display
abstract: The apparatus and method of the disclosure relate to data entry and menu selection. Applications include: (a) data entry for ideographic languages, including Chinese, Japanese and Korean; (b) fast food ordering; (c) correction of documents generated by optical character recognition; and (d) computer access and speech synthesis by persons temporarily or permanently lacking normal motor capabilities. In a preferred embodiment, each option of a menu is associated respectively with a selectable region displayed adjacent an edge of a display, forming a perimeter menu and leaving a region in the center of the perimeter menu for the output of an application program. Selectable regions may be on the display, outside the display, or both. A menu option may be selected by clicking on the associated selectable region, by dwelling on it for a selection threshold period or by a cursor path toward the selectable region, or by a combination thereof. Remaining dwell time required to select a selectable region is preferably indicated by the brightness of the selectable region. Submenus of a perimeter menu may also be perimeter menus and the location of a submenu option may be foretold by the appearance of its parent menu option. Menu options may be ideographs sharing a sound, a structure or another characteristic. Ideographs, which may be homophones of one another, may be associated with colored indicating regions and selection of an ideograph may be made by speaking the name of the associated color.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09535494&OS=09535494&RS=09535494
owner: 
number: 09535494
owner_city: 
owner_country: 
publication_date: 20130314
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This is a divisional application of pending application Ser. No. 11\/890,355, filed 6 Aug. 2007, published application number 20080030463, published 7 Feb. 2008, now abandoned, which in turn is a divisional application of application Ser. No. 11\/124,563, filed 6 May 2005, published application number 20050231520, published 20 Oct. 2005, now abandoned, which in turn is a divisional application of application Ser. No. 08\/506,032, filed 24 Jul. 1995, which in turn is a continuation-in-part application of international application number PCT\/US95\/03591, International Publication Number WO 96\/30822, filed 27 Mar. 1995, as amended 25 Apr. 1995 and 26 May 1995, which designated the United States. The international application issued as U.S. Pat. No. 6,160,536 on 12 Dec. 2000. Application Ser. No. 08\/506,032 issued as U.S. Pat. No. 6,903,723 on 7 Jun. 2005. Each of the international application, U.S. Pat. No. 6,903,723, published application number 20050231520, and published application number 20080030463 is incorporated herein by reference.","The present disclosure relates generally to interactive displays and interactive display methods, and more particularly to interactive displays and interactive display methods for use by persons temporarily or permanently lacking normal motor capabilities. It also relates to systems and methods for the assessment of the motor capabilities of persons lacking normal motor capabilities. It further relates to interactive displays and interactive display methods for use in speech synthesis for persons having impaired speech. It also relates to systems and methods for the control of devices, including appliances, by persons lacking normal motor capabilities. It further relates to interactive displays and interactive display methods for selecting one menu option from a menu. It further relates to systems and methods utilizing sound recognition for selecting a menu option from a menu. It further relates to data and order entry systems including, and data and order entry methods utilizing, an interactive display terminal. It also relates to interactive displays and interactive display methods for displaying and selecting ideographic characters, such as are used in the Chinese, Japanese and Korean languages. It also relates to interactive displays and interactive display methods for producing an indication of progress toward and\/or away from selection of a menu option.","A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the World Intellectual Property Organization or United States Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","Many persons suffer from various neurogenic muscular disorders, such as Cerebral Palsy (\u201cCP\u201d), Traumatic Brain Injury, Spinal Cord Injury, Muscular Dystrophy, Amyotrophic Lateral Sclerosis and Multiple Sclerosis. These conditions can result in a reduced ability to voluntarily control or prevent the movement of parts of the body, including the head, limbs and digits, muscle stiffness, weakness, limited range of motion, abnormal posture, involuntary muscle tremors, involuntary muscle activity causing involuntary motion, impaired ability to voluntarily stop motion, impaired ability to coordinate muscle activity, and\/or impaired ability to sense the position of a part of the body. Any one of these symptoms may impair an affected individual's fine motor control. Moreover, while some individuals affected by a neuromuscular disorder may be able to exercise fine motor control with enormous effort, the struggle to do so often fatigues the individual, limiting the period of time the individual is capable or comfortable performing the fine motor control task.","Neuromuscular disorders are often systemic in effect, impairing an individual's ability to operate prosthetic devices, such as a wheelchair, and to perform the activities of daily life, such as speaking, walking and operating household appliances. Speech is frequently affected since the mechanics of producing speech require coordination of many muscle groups\u2014the muscles of the diaphragm which push air over the vocal cords, the muscles of the larynx, jaws, tongue and lips. The inability to use or coordinate these muscle groups may result in impaired speech. Depending upon the degree of impairment, speech may be totally absent, present but impaired to the point of unintelligibility, or intelligible on the whole but with occasional unintelligible words. The ability to walk is often affected since walking requires coordination and voluntary control of many muscle groups. Furthermore, impaired fine motor control may prevent or impede an individuals from effectively operating household appliances or computer input devices.","Devices are available which produce speech, control appliances and facilitate computer access for some persons having neuromuscular disorders (\u201cNMD operators\u201d). Devices which produce speech for individuals whose own speech is impaired, called Augmentative and Alternative Communication (\u201cAAC\u201d) devices, allow the operator to select words or phrases by spelling the words, by specifying an abbreviation for the phrase or by selecting a sequence of symbols, and then speak the selected words or phrases using an electronic speech synthesizer. However, due to the systemic nature of neuromuscular disorders, NMD operators are often unable to efficiently use a standard keyboard and mouse. For example, an NMD operator who is unable to stop the movement of a limb with precision, when attempting to use a keyboard or mouse, may move his arm toward the target key or move the cursor toward the target object on the display but overshoot the target. If he has involuntary tremors and cannot hold a limb still, then, when attempting to use a keyboard, he may hit keys adjacent to his target key. If he has involuntary motion moving left to right, then, when attempting to use a keyboard, he may have difficulty accessing an intended key on the right side of the keyboard.","The benefits of interfacing an NMD operator to a general purpose computer so that he may control the computer and devices attached to it (\u201ccomputer access\u201d) are both numerous, because many of the problems faced by the disabled are susceptible to a computer-driven solution, and profound, because of the psychological deprivation occasioned by a severe physical disability. The benefits potentially obtained through computer access for individuals affected by neuromuscular disorders include:\n\n","NMD operators vary widely in their motor capabilities. Even individuals having the same medical diagnosis may require completely different technologies for computer access. Many NMD operators are able to use an oversize keyboard, a device having a pressure-sensitive surface divided into squares, each square associated with a letter of the alphabet. The squares may be sized to match the operator's abilities, but typically each square is two inches on either side. NMD operators who are unable to efficiently use an oversize keyboard may use another conventional computer access solution, called an \u201con-screen keyboard\u201d, which, as illustrated in , is a picture of keyboard drawn on a computer display (). The operator selects a letter by pointing to that letter's key image on the display with a pointing device (\u201cpointer\u201d), then indicating that he has reached his target either by operating a switch, a process called selection by click, or by maintaining the location indicated by the pointer (\u201cdwelling\u201d) on the key image for a predetermined period of time (the \u201cselection threshold\u201d), a process called selection by dwell. Switch operation includes, but is not limited to, each of the following: opening the switch, closing the switch, opening the switch multiple times within a predetermined period, and closing the switch multiple times within a predetermined period. A program executing on the computer determines which letter the operator has selected and processes the letter or passes it to some other application program which processes the letter as if it came from a true keyboard.","Conventional pointing devices include a mouse, trackball, joystick (which may be integrated into a keyboard, e.g. TrackPoint II\u00ae), stylus and graphics tablet, lightpen, thumb wheel, touch screen, touch panel, head pointer, occulometer, intraoral pointer and eye tracker. They may be active, e.g. a lightpen that emits an infrared beam, or passive, e.g. an eye tracker that uses images of an individual's eyes to determine where his eyes are focusing. Conventional switches include a button on the mouse, a switch in the tip of the stylus actuated by pressure or the release of pressure, a switch mounted on the user's wheelchair operated by a turn of the head to or the switch below a keyboard key.","Dwell time may be continuous or discontinuous depending upon the operator's motor capabilities. In continuous dwelling, if the operator moves the cursor from one key image to another region of the display, the time accumulated on the key image is discarded so that if the operator returns to that key image he must dwell on it for the full selection threshold to select it. Discontinuous dwelling, by contrast, compensates for involuntary tremors which pull the operator off the desired key image. Accumulated dwell time on a key image is remembered, so that on return to a key image, the operator need only dwell for a period equal to the difference between the selection threshold and the previously accumulated dwell time for that key image. Accumulated dwell time is reset to zero for all key images following the selection of any one key image. Conventional on-screen keyboards do not indicate to the operator the dwell time associated with any key image.","There may be a single selection threshold period for all key images or each key image may be associated with its own selection threshold period. In the latter case, keys associated with shorter selection threshold periods are easier to select than keys associated with longer selection threshold periods.","As was mentioned earlier, computer access permits an NMD operator to run a variety of applications. One such application is speech synthesis. In a computer-based speech synthesis system, a computer system displaying an on-screen keyboard is connected to a speech synthesizer. The operator spells the desired word or words using the on-screen keyboard. These are then spoken by the speech synthesizer. Another application of the on-screen keyboard is word processing.  illustrates an example of a combined display of an on-screen keyboard and a word processing application program. The on-screen keyboard () is shown on the lower portion of a display connected to a computer system (not shown) which also executes the word processing application program whose output () appears on the upper portion of the display. Letters selected by the operator are input to the word processing application program.","Due to impaired fine motor control, many NMD operators have difficulty selecting a key image by click or by dwell and this difficulty increases as the size of the key image decreases.  shows an on-screen keyboard containing 81 total keys including 26 alphabetic keys, 10 numeric keys, 12 function keys, 4 arrow keys and 29 special purpose keys. Drawing this many key images on a display restricts the size of each key image making each very difficult for many NMD operators to select.","When a display is shared between application program output () and an on-screen keyboard (), as is the display shown in , the size of each key image must be reduced from its size in  to allow space for the application program output. Thus, as more display space is allotted to application program output, the key images become more difficult for an NMD operator to select.","Many NMD operators have difficulty using the conventional dwell selectable on-screen keyboard because they cannot maintain a steady pointer position. The body member with which they control the pointer may move slightly (\u201cdrift\u201d) when they want it to remain still. One approach to this problem is a variation of the on-screen keyboard, depicted in  and called a quaternary on-screen keyboard (\u201cquaternary keyboard\u201d). The quaternary keyboard provides for larger key images. The alphabet is divided into four groups of letters, each displayed in one of the four quadrants (), (), () and () of the display, as shown in . The operator selects one of the four groups by, for example, pointing to and dwelling on one quadrant of the display. The selected group is then exploded into four subgroups, each displayed in one quadrant of the display, as shown in . Once more the operator selects one of the four. The selected group is exploded into four letters and each letter displayed in one quadrant of the display, as shown in . The operator again selects one of the four. This letter is then input to an application program (not shown).","The quaternary keyboard illustrates the use of a menu hierarchy in computer access. Each of the four groups of letters (), (), () and () is a menu option. Each of these menu options is itself a menu which includes other menu options. A menu hierarchy exists if at least one of a menu's menu options is itself a menu. Hereinafter, a menu accessed from another menu may be called a submenu, and the options of the submenu may be called submenu options. If a menu hierarchy is narrow and deep, many selections are required to make the desired choice. If a menu hierarchy is broad and shallow, each layer is composed of many menu options.","The quaternary keyboard greatly expands the size of a single key image and thus accommodates certain NMD operators with drift or involuntary tremors. The cost of this adjustment is high Instead of selecting a letter with one pointing motion and dwelling for one selection threshold, the quaternary keyboard requires three pointing motions and dwelling for three selection thresholds. Thus the operator's productivity is dramatically reduced from the standard on-screen keyboard depicted in .","The computer access advantage gained from the quaternary keyboard is greatest when the quaternary keyboard occupies the entire display. In this configuration the size of each of the four active display regions is maximized, making them easier to hit and dwell on for the operator. However, this configuration allows no room on the display for the output of the application program being run by the operator, the reason he is sitting at the computer in the first place. This does not prevent the on-screen keyboard from passing letters to the application program since an application program need not be visible to be active, but it does prevent the operator from seeing what the application program has to show him. The more of the application program output that is displayed, the smaller the on-screen keyboard, the smaller each active region of the on-screen keyboard and the more difficult access becomes.  illustrates a display combining a quaternary keyboard and output from two application programs.","Another conventional structure for selecting of a menu option from a menu is a pie menu A pie menu is an opaque region on a display divided into selectable slices, each slice associated with a menu option. The pie menu suffers some of the drawbacks discussed above, particularly that, while displayed the pie menu occupies more space than a linear menu and obscures much of the output of the operator's application program. For illustrations and a discussion of pie menus, see Callahan, Jack et. al., \u201cAn Empirical Comparison of Pie vs. Linear Menus\u201d, Computer Science Technical Report Series, CS-TR-1919, University of Maryland, College Park, Md., September 1987.","NMD operators who cannot effectively use a conventional keyboard or a pointing device may use a computer access method called \u201cjoystick patterns\u201d.  depicts a conventional joystick pattern device. The device () is connected to a joystick and to a computer. The operator pushes the joystick to the top, bottom, left, right, top left corner, top right corner, lower left corner or lower right corner, closing one of eight switch contacts within the joystick housing. That switch position is then indicated on the display (). A sequence of consecutive of switch closures encodes a letter or other programmed output that the device () displays on an LCD display () and sends to the connected computer, simulating keyboard input.","The conventional joystick pattern device is ill-suited for many NMD operators. The involuntary tremors common some neuromuscular disorders may result in unintended switch closures. In addition, the device does not provide an indication that the operator is moving a body member in an unintended direction until switch closure occurs. For example, an operator with CP who intends to move the joystick the right but actually moves it to the upper right receives no indication from the device, prior to switch closure, that he's not on target. Moreover, the device requires that the operator memorize the encoding of each letter or other output since there's no indication on the display () which sequence encodes which letter. Further, the device provides no support for head pointing, although the head is often the best controlled part of an NMD operator's body.","NMD operators who cannot effectively use either a conventional keyboard or a pointing device but can reliably actuate a switch may use a computer access method called \u201cscanning\u201d, which is subdivided by cursor control technique into three types of scanning: automatic, directed and step. In automatic scanning all the operators' options, for example, the letters of the alphabet, appear on either a static or dynamic display (depending upon the implementation), organized in rows and columns. At the scanning interval, usually about one second, a cursor moves from one row to the next. When the cursor indicates the row containing the letter the operator wants, he closes a switch. The machine now moves the cursor from one letter to the next within the selected row until the operator closes the switch again. The operator has now selected one letter. In directed scanning, like automatic scanning, the cursor moves at the frequency determined by the scanning interval, however, it moves only when the switch is closed. To select an option, such as a row or a letter in a row, the operator opens the switch while the cursor indicates the desired option. In step scanning, the cursor moves with each switch activation.","As one can well imagine, writing a sentence via any of these scanning techniques is an extremely slow process, since selecting a single letter may take many seconds.","Problems of computer access cascade and affect the quality of verbal interactions between AAC device operators (\u201cAAC operators\u201d) and others. People speak much faster than they type. Not surprisingly, operators who speak with AAC devices, particularly NMD operators whose motor deficits impair their ability to use a keyboard, lag substantially in their conversations. The slow pace of an AAC operator's word production disrupts normal verbal interaction. Speaking persons, accustomed or not to the AAC operator's slow rate, often lose patience in conversations with AAC operators. They may prematurely terminate the conversation, read the AAC device display in an attempt to guess at the AAC operator's intended utterance and so accelerate the interaction, lead the AAC operator, ask predominantly yes\/no questions, change the topic of conversation with little input from the AAC operator and otherwise dominate the interaction. The AAC operator often has difficulty participating as an equal partner in the conversation. He may be unable to change the topic, interject a humorous comment in a timely fashion or respond to a question before the speaking person changes the topic. Slow AAC operators may be perceived as mentally slow. Thus the quality of verbal interactions where one party uses an AAC device to speak depends significantly upon the AAC operator's rate of word production.","Increasing an operator's letter or menu option selection rate proportionately increases his word production rate and increases the operator's productivity in data entry generally. Letter or menu option selection time includes the time the operator requires (a) to comprehend the menu options displayed, (b) to move the pointer to the desired menu option on the display, and, in selection by dwell, (c) the selection threshold period, or, in selection by click, (c) the time required to operate the switch. Decreasing any one of these increases the operator's productivity, assuming all other steps in the selection process are unaffected.","Personal interactions are composed of more than speech alone. People in conversation gesture to one another, use facial expressions, change the object of their gaze and make non-speech utterances (e.g. \u201chmmm-mmmm\u201d) to bid for a turn to speak, to grant such a bid made by the other party, to request to continue speaking and to acknowledge, accept or dispute what has been said. Ideally, the production of speech from an AAC devices does not distract the AAC operator from the personal interaction and subject matter of the conversation. This is possible if the operator habituates the AAC device access technique and menu structure, producing speech without focusing on each step of the process, much as automobile drivers habituate mechanical tasks, such as changing gears and switching between foot pedals, and focus their attention on pedestrians or traffic lights while operating their vehicle.","Another consequence of personal interaction during conversation for an AAC device operator is that the operator needs a way to easily enable and disable the AAC device operator interface so that movement the operator makes during personal interaction, for example, nodding his head, is not interpreted by the AAC device.","As noted previously, neurogenic muscular disorders may impair the ability of an individual to sense the position of a body member. An NMD operator thus relies more than his able-bodied peer on the location of a cursor or similar automated indication of body member position. Conventional access methods which use a pointer do not provide additional feedback to the operator of the position of a body member.","Access methods which require the NMD operator to make the same movement for most selections, such as single switch access, mouth sticking (the use of a small rod held in the mouth and used to depress keys on a keyboard) and head sticking (the use of a rod mounted on the head and used to depress keys on a keyboard), may result in repetitive motion injury, particularly after years of use.","The need for quick selection from a menu also arises from the use of optical character recognition (\u201cOCR\u201d) systems which attempt to recognize graphic symbols and words based on attributes for optical recognition purposes, for example, the appearance of graphic symbols, the ratio of dark space to light space within part or all of a graphic symbol, the ratio of dark space in one part of a graphic symbol to the dark space in another part of the graphic symbol, and the derivative of darkness over the scan of the graphic symbol. OCR systems convert the contents of a typewritten document into a computer encoding of the same. OCR systems at times are unable to recognize a graphic symbol or word, or may err in selecting a graphic symbol or word from a plurality of candidates. Therefore, following optical character recognition, a human may proofread and correct the computer encoded document. The proofreader may indicate where an error or omission in the computer encoded document occurred and may select from a plurality of menu options, each representing a candidate graphic symbol or word.","There are several aspects of the disclosure, each addressing one or more of the problems described above and\/or one or more problems specifically addressed by that aspect of the disclosure. The advantages and description of each aspect, where applicable, is separately described below under one of the headings: (A) Perimeter Menu, (B) Confinement, (C) Dwell, (D) Path Directness, (E) Intersection, (F) Alignment, (G) Length Order, (H) Location Indication, (I) Sound Match, and (J) Ideographic Languages. Where there is background art applicable to an aspect in addition to that described above, the additional background art is described below.","A & B. Perimeter Menu and Confinement","One advantage of the Perimeter Menu and Confinement aspects of the disclosure is to simultaneously display an application program window and a computer access menu which does not obstruct the application program window.","Another advantage of the Perimeter Menu and Confinement aspects of the disclosure is to allow an operator to enable and disable a menu.","Another advantage of the Perimeter Menu and Confinement aspects of the disclosure is to speed data entry.","C. Dwell","Conventional systems allowing selection by dwell do not provide an indication to the operator of either how much dwell time has been accumulated for any selectable region or how much more dwell time is required to select a selectable region. Consequently, an operator of a conventional system who is dwelling on a intended selectable region has no indication, other than his estimation from prior use of the system, that he has nearly made his selection and can plan his next movement to the next selectable region or that he has very nearly made his selection and can begin moving to the next selectable region. Furthermore, an operator of a conventional system who is dwelling on an unintended selectable region, has no indication, other than his estimation from prior use of the system, of how close he is to making an unintended selection and thus how important it is to act quickly. Conventional systems using discontinuous dwell give no indication of the accumulated dwell time associated with a selectable region either when the operator dwells on that region or when the operator ceases dwelling on that region. Some disabled users can dwell relatively easily on their intended targets for short periods of time, but have difficulty dwelling for long periods. If such an operator knows that only a little more dwell time is needed he may be able to satisfy the dwell time required for selection, without preparing himself to dwell for an extended period.","Conventional menu-driven data entry and order entry systems incorporating pointing at intended selections employ a two step selection procedure. In the first step the operator indicates, with a pointer, his intended selection. The system then provides feedback, for example, by highlighting the indicated selection, showing which selection the operator has indicated. In the second step, the operator selects the indicated selection, for example, by operating a switch. Thus, conventional data entry and order entry systems are ill-suited to circumstances where the operator cannot easily operate a switch while maintaining the pointer on the intended selection.","While the two step procedure is not complicated, many operators require some training to learn it, and, if they are infrequent users of the system, these operators may require refresher training. Simplifying the procedure further would lessen the need for initial and refresher training.","One advantage of the Dwell aspect of the disclosure is to facilitate the use of systems allowing selection by dwell.","Yet another advantage of the Dwell aspect of the disclosure is to facilitate the use of a data entry system by an intermittent operator.","D. Path Directness","The on-screen keyboard with dwell selectable key images is ill-suited for use by many NMD operators. Selection by dwell may fatigue NMD operators or may require greater fine motor control than they bring to this task. Operators with impaired ability to stop motion and those having involuntary tremors may have difficulty maintaining the location indicated by a pointer on a key image for a period sufficient to distinguish intentional dwelling from unintentional dwelling. Consequently, some NMD operators who try to use on-screen keyboards often miss their target key images and\/or accidentally select unintended key images. Following such an error, the operator must erase his erroneous selection by selecting the backspace or undo key. As the number of erroneous selections increases, the operator's productivity decreases markedly, since each error requires a correction in which there might be another error.","Conventional on-screen keyboards require the ability to select by dwell or by click and thus are limited to operators with these capabilities. Conventional on-screen keyboards do not utilize the relatively intact motor capabilities of some NMD operators to compensate for impaired ability to select by dwell or by click or to speed up the slow process of selecting by dwell. For example, while an NMD operator may overshoot a key image, his directional control may be relatively intact. Conventional on-screen keyboards do not exploit this capability.","The dominant computer operating system for graphic applications on general purpose computer systems today is the Windows\u00ae Operating System. Windows\u00ae assigns meaning to the cursor location. When the operator moves the cursor on top of a menu item and clicks, Windows\u00ae interprets the action as manifesting an intent to choose that menu item. The operator's path to that menu item, whether direct or circuitous, is irrelevant. Operators who can move toward a target accurately but cannot maintain the location indicated by a pointer on the target cannot effectively use standard Windows\u00ae applications through the conventional interface to these applications.","Often NMD operators cannot steady a pointer while operating a switch; the act of operating the switch triggers involuntary muscle activity pulling the cursor off target. For these operators, conventional selection by click is not practicable. Conventional selection by dwell also requires greater fine motor control than many NMD operators bring to this task. Operators with impaired ability to stop motion may overshoot their intended target. Operators whose voluntary muscle activity is accompanied by some involuntary muscle activity affecting their directional control often cannot point accurately. Operators with involuntary tremors often cannot maintain the location indicated by a pointer on a key image. Consequently, NMD operators who try to use on-screen keyboards often miss their target key images and accidentally select unintended key images. Following such an error, the operator must erase his erroneous selection by selecting the backspace or undo key. As the number of erroneous selections increases, the operator's productivity decreases markedly, since each error requires a correction in which there might be another error.","F. Alignment","Conventional on-screen keyboards do not compensate for NMD operators' inability to stop motion. Suppose the operator has been fitted with a head pointing device so that his head motion moves the cursor and that he's using the quaternary keyboard shown in . Assume further that, as he attempts to point to the quadrant containing the \u201cj\u201d key image () in , he is unable to stop on that quadrant and continues turning 20 more degrees to the left. There are two known ways of responding to this situation: (1) the cursor may continue to track the operator's motion and disappear from the display, leaving no indication to the operator of the location of the cursor and consequently causing some operator disorientation, or (2) the cursor may \u201cstick\u201d, i.e. remain confined to the display, at, for example, point (). Conventional on-screen keyboards respond in this way. The operator's line of sight is now 20 degrees to the left of the cursor location. After the dwell period, the quadrant () is selected and  is displayed. The cursor hasn't moved. It is now at point (). Assume that again the operator attempts to point to the quadrant containing the \u201cj\u201d key image () in . As the operator turns his head to the right, the cursor immediately moves with him Thus, the operator's line of sight remains 20 degrees to the left of the cursor location as the cursor moves to the right across the display. The operator must watch the cursor out of his right eye. The problem is aggravated if either the operator cannot cleanly stop or if he drifts as he dwells. Assume that while attempting to dwell on quadrant () the operator drifts 25 degrees past the bottom of the screen. His line of sight is now 25 degrees below and 20 degrees to the left of the cursor. To correct this misalignment in the conventional quaternary keyboard, the operator must turn his head to the right, \u201cstick\u201d the cursor against the right edge of the display, and continue turning 20 degrees until he has the cursor in his line of sight. Then he must lift his head until he sticks the cursor against the top edge and continue lifting 25 degrees more. Alternatively, in this scenario, the operator could stick the cursor in the upper right corner of the display and simultaneously rotate his head up and to the right until he brought the cursor into his line of sight.","Alignment is also a problematic for NMD operators who use a pointer, such as a mouse, with which the operator indicates a location on a surface, e.g. a desk top, which corresponds to a desired location on the display, and achieves alignment by removing the pointer from the surface, e.g. lifting the mouse, moving the mouse, then replacing it on the surface. Due to impaired fine motor control, many NMD operators cannot remove a pointer from the surface and replace it on the surface at a desired location without unintentional movement or extraordinary effort. For these operators, alignment cannot be effectively achieved through conventional means.","In summary, misalignment interferes with accurate pointing and the process of correcting for misalignment may result in the selection of unintended key images.","G. Length Order","As noted previously, one of the elements determining the menu option selection time is the time the operator requires to comprehend the menu options displayed. This time may be reduced if the operator can limit the number of menu options he searches in looking for his desired menu option. Conventional word prediction systems attempt to reduce this operator search time. The operator of a conventional word prediction system may, for example, select the letter \u201cp\u201d. The system displays some number, say six, of the most frequently used words beginning with the letter \u201cp\u201d. Conventionally these six words are displayed either in alphabetic order or in order of frequency of use. Assuming the operator does not see his desired word on the display, he selects another letter, say \u201cr\u201d. The system then displays the six most frequently used words beginning with the letters \u201cpr\u201d.","Searching a displayed list of words in alphabetic order requires that the operator focus his attention on the selection task, as opposed to the information content of the conversation or other task the operator is engaged in. Further, determining whether a given word is alphabetically greater or lesser than a desired word takes substantial time, slowing the selection process. An alphabetically ordered list is of limited use to an individual who has below normal spelling ability, a frequent problem among individuals with impaired speech. Ordering words by frequency of use often does not limit the number of words the operator must search. The word at the bottom of the displayed list, for example, the sixth most frequently used word beginning with the letters \u201cpr\u201d may be a very common word, even though it is less frequently used than the other five displayed words.","H. Location Indication","The difficulties experienced by NMD operators in pointing to relatively small selectable regions have already been described. One approach to these difficulties is to enlarge the on-screen selectable region, illustrated by the quaternary expansion on-screen keyboard already described. Another approach is the conventional eye gaze system for a speech impaired individual, depicted in . The system consists of a plexiglass frame () having a centrally located aperture (). The eye gaze system is positioned between the speech impaired individual and person with whom the speech impaired individual is communicating. There are eight groups of five squares each on the plexiglass frame. Each square within each group of five squares is color coded, e.g. red, blue, green, yellow and clear, matching the color on each of the four corners of the plexiglass frame. The clear square matches the aperture (). All squares are labeled with symbols representing items to be communicated. These labels are not shown in . The person with whom the speech impaired individual is communicating observes the eyes of the speech impaired individual to determine the target of the speech impaired individual's eye gaze. To communicate an item, the speech impaired individual gazes first toward the one of the eight groups of five squares, indicating that he wants to communicate one of the symbols in that group, and gazes second toward one of the four corners and aperture () matching the color of the square labeled with the item to be communicated in the previously indicated group.","Two types of selectable regions are conventionally used in a point and click menu interface in a graphical user interface. The first, shown in , depicts a menu having three menu options, labeled \u201cHigh\u201d, \u201cMedium\u201d and \u201cLow\u201d, each displayed on a display (), each associated respectively with selectable regions (), () and (), and each located adjacent the associated selectable region.  depicts a menu having the same three menu options, each displayed on a display (), each associated respectively with selectable regions (), () and (), and each intersecting the associated selectable region. In both these conventional menus, a menu option is selected by pointing to and clicking on the associated selectable region.","Conventional menu hierarchies in automated systems, built from menus of the type shown in  or , require that the operator proceed sequentially through the steps of searching menu options, selecting one of them, and, assuming a menu option including a submenu was selected, searching the submenu options, and selecting one of them. Where selection from menu hierarchies constitutes a substantial component of the operator's activities, the slowness of the selection process diminishes productivity.","Locating selectable regions or parts thereof outside the display, in accordance with the Perimeter Menu aspect of the disclosure, allows the large areas outside the display to be used, a major advantage for operators having impaired fine motor control who are unable to maintain a pointer on a small selectable region while selecting by click or by dwell. However, if menu options are displayed on the display near the perimeter of display and near their associated selectable region, the operator has an indication of the location of each selectable region but may not be able to see all the displayed menu options in a glance. Because an operator usually searches a displayed menu for his intended menu option, placing the menu only near the perimeter of the display may increase menu search time, thus increasing menu option selection time.","I. Sound Match","Conventional speech recognition systems facilitate computer access for individuals unable to use a standard keyboard whose speech is relatively unimpaired, for example, an individual with quadriplegia, and hands-free computer access for able-bodied individuals. The operator of such a speech recognition system reads a menu option out loud, for example, \u201copen file\u201d, and the system, which includes sound receiving means, for example, a microphone coupled to a sound board having a Digital Signal Processor (\u201cDSP\u201d), receives the sound of the read menu option, digitizes the sound of the read menu option, and then provides the digitized sound to another component of the speech recognition system, sound matching means which includes an application program for matching the digitized sound to one of a plurality of sounds, each representing respectively the sound of a spoken menu option. The system determines which sound best matches the sound of the read menu option and selects the menu option associated with this best matched sound.","Individuals whose speech is impaired are often unable to effectively use conventional speech recognition systems because they often cannot produce a large distinct variety of sounds characteristic of phonetic languages. For example, such an individual may produce similar sounds for the two consonants \u201ct\u201d and \u201cd\u201d so that these sound are indistinguishable to a conventional speech recognition system, or such an individual may not be able to consistently produce sounds distinguishable by a speech recognition system, resulting in false matches. Other symptoms of impaired speech, for example, similarities among certain phonemes and impaired ability to start or stop sound production appropriately, may substantially limit the variety of sounds distinguishable to a conventional speech recognition system an individual may consistently produce.","Conventional speech recognition systems provide limited capabilities in languages rich in homophones, for example, Chinese, because in such languages, a distinct sound is often insufficient to specify a word, as is described in the Background Art section of the Ideographic Languages aspect of the disclosure. The problem may be briefly illustrated by an example. Suppose a Chinese data entry operator using a conventional speech recognition system speaks the phonetic unit \u201cfu\u201d with a particular intonation. This distinct sound may well have over 15 homophones. Although the operator could use the keyboard to select one of these 15 homophones, this defeats the purpose of speech recognition, which is to facilitate hands-free computer access.","J. Ideographic Language","The use of ideographs as the graphic symbols in written languages is found in many parts of the world. An ideograph, as used herein, is a graphic symbol used to represent an object, an idea or a word, without expressing, as in a phonetic system, the specific sounds forming the verbal expression of the object, idea or word. Ideographic languages include Chinese, Japanese and Korean. A graphic symbol, as used herein, includes, but is not limited to, each of the following: a letter of an alphabet, a Japanese kava, and an ideograph. For purposes of illustrating the concepts of the present disclosure specific reference will be made herein to a preferred embodiment of the system and method as it applies to the Chinese language.","In modern Chinese, a repertoire of between 2500 and 3000 ideographs is necessary to achieve normal business adequacy in reading and writing, while the language itself has approximately 50,000 ideographs that have been identified historically, with about 10,000 ideographs in current use. The conventional keyboard, with approximately 100 keys, is designed for languages with phonetic scripts, such languages having a small set of graphic symbols, i.e. letters. If such a keyboard were to be used in a corresponding manner for the direct input of Chinese ideographs, it would require many thousands of keys since, unlike western phonetic languages, Chinese has many thousands of ideographs. Selection of an ideograph from such a keyboard would require the operator to search a great many keys for the desired key, and thus be impracticably slow.","Prior art methods for selecting Chinese ideographs make use of various ideograph classification systems known to Chinese speakers. The operator first specifies a class of ideograph, based on a first characteristic common to many ideographs. Ideographs having that common characteristic are displayed and the operator selects from among them, either directly, by selecting an individual ideograph, or indirectly, by specifying a second common characteristic usually dependent upon the first characteristic, thus further limiting the displayed ideographs to those having both the first and second common characteristics. In some prior art methods, the operator may continue to specify characteristics until he has specified a unique ideograph.","One ideograph classification system is called the Pin Yin System. This classification system uses the phonetic structure of the Chinese language. In spoken Chinese there are approximately 412 basic phonetic units, each having a monosyllabic sound, for example, \u201cnee\u201d, \u201chow\u201d and \u201cma\u201d. Four intonations can potentially be applied to each phonetic unit, resulting in approximately 1280 distinct sounds. With 10,000 ideographs in current use, each represented by one of approximately 1280 distinct sounds, it is evident that many Chinese ideographs are homophones, i.e. have the same sound. Over 80% of Chinese ideographs have homophones. The Pin Yin System uses this limited number of phonetic units as the basis for its classification. Ideographs which are homophones are classified together; the common characteristic of the Pin Yin System is the distinct sound.","According to the Pin Yin and Zhu Yin coding methods, known in the prior art, the operator specifies a distinct sound using a keyboard labeled with symbols representing the Latin alphabet (Pin Yin method) or Chinese phonetic units (Zhu Yin method). The first key operation or sequence of key operations specifies the phonetic unit. The second key operation specifies the intonation. In general, less than 15 ideographs have this sound, though in some cases there are many more homophones. These are displayed and the user selects from among them. In such cases, the operator, depending upon the system, may page through matching ideographs or specify another common characteristic to further limit the number of ideographs displayed. A common characteristic which may be used at this stage exploits another feature of the Chinese language. The majority of Chinese words are expressed by a combination of two ideographs, the meaning of the paired ideographs has its own meaning which may or may not be related to that of the constituent ideographs. Assuming the operator has specified a first distinct sound matching 40 ideographs, he may specify a second distinct sound which alone may match, for example, 20 ideographs, but there may be only two ideograph pairs having the specified first and second distinct sounds in that order. Thus, a second common characteristic may limit matching ideograph pairs to a number sufficiently small for the operator to efficiently search and select from, or may uniquely specify an ideograph pair. Another common characteristic the operator may specify to limit the number of matching ideographs is a meaning or meaning class to which one or more sequences of one or more ideographs belong.","Yet another feature of the Chinese language which may be exploited to limit the number of matching sequences of ideographs is the ideograph block. An ideograph block is a sequence of four ideographs which together has its own meaning which may or may not be related to that of the constituent ideographs. As above, where the operator specified a distinct sound for the second of two ideographs of an ideograph pair, so may the operator specify a distinct sound for the second, third and\/or fourth ideograph of an ideograph block, to limit the number of matching ideograph blocks.","Another conventional ideograph classification system makes use of a classification of parts of ideographs. Ideographs are built from a set of 214 components, called radicals. Different radicals, perhaps placed within different locations within an ideograph, are combined to create an ideograph. According to the Chan Jie coding method, known in the prior art, the operator specifies one or more radicals appearing in the ideograph he wishes to enter. He may, for example, use a keyboard having at least 214 keys, each corresponding to a radical, or may actuate a sequence of keys, the sequence corresponding to a radical. Other common characteristics the operator may specify to limit the number of matching ideographs include a phonetic unit, the first brush stroke, and the last brush stroke used to draw the ideograph.","Another conventional ideograph classification system makes use of a classification of parts of ideographs. According to the Four Corner coding method, known in the prior art, the operator specifies the classification of the four corners of the ideograph he wishes to enter. Other common characteristics the operator may specify to further limit the number of matching ideographs include the number of horizontal strokes used to draw the ideograph, and the classification of a certain part of the ideograph above the lower right corner.","Yet another conventional ideograph classification system makes use of a classification ideographs based on the basic strokes from which each ideograph is built. In Chinese, there are a limited number of basic strokes, each ideograph being composed of between 1 and 33 such strokes. Ideographs may be classified by a small number of basic strokes, preferably according to strict rules regarding the order of stroke entry. In one conventional application of this coding method, the operator specifies only the first and last basic strokes of the desired ideograph, then selects from a display of all ideographs sharing this first-last basic stroke combination.","Japanese is somewhat more complicated than Chinese. In addition to ideographs, the Japanese language uses graphic symbols called kana, which includes hiragana and katakana. In written Japanese, ideographs are frequently combined with kana. Kana may be may specified phonetically, for example, to designate the hiragana pronounced \u201cko\u201d an operator of a Japanese word processing system may type \u201ck\u201d and then \u201co\u201d on a Latin alphabetic keyboard or may type a single key associated with this hiragana. Kana has multiple uses in a Japanese word processing system. Kana may represent itself, since kana may stand alone in Japanese text. Alternatively, kana may be used to specify Japanese ideographs, either by specifying the radicals which compose Japanese ideographs or by specifying the pronunciation of Japanese ideographs. A sequence of phonetic units specified by kana may represent that sequence of kana, a single Japanese ideograph, multiple Japanese ideographs, or a combination of one or more Japanese ideographs and one or more kana. In addition, a single Japanese ideograph may have multiple pronunciations, including a Japanese pronunciation and a Chinese pronunciation, and may have multiple kana spellings.","Conventional word processing systems for ideographic languages suffer from certain deficiencies. First, in systems where the operator specifies common characteristics until he has uniquely specified an ideograph, the operator must be extensively trained in the particular classification system. Depending upon the system, the operator may need to know, for example, how may horizontal brush strokes are required to draw a desired ideograph, or each of the 214 radicals and the encoding of each of them on a keyboard having less than 214 keys. Second, in systems where the operator uses both hands on the keyboard to specify a common characteristic, then selects from among ideographs, ideograph pairs or ideograph blocks by operating a function key or by pointing to one of the options with a mouse or other hand operated pointer and then operating a switch, the operator lifts one of his hands from the keyboard, makes the selection and then moves his hand back to the keyboard to specify another common characteristic. This sequence occurs often and contributes to the slow average rate of word entry (approximately 20 words per minute) for Chinese relative to alphabetic languages. Another problem in these systems is that the display of ideographs for selection may obscure part of the image of the previously entered ideographs or other information on the display.","Another drawback of many word processing systems for ideographic languages relates to the ease of copying a document. Ideally, the operator concentrates on the document to be copied, only occasionally scanning text he has input. For those word processing systems that display ideographs on a display for the operator's selection, the operator must frequently shift his gaze from the document to the display and back again. The operator cannot concentrate on both the document and the display simultaneously.","Ideographs, as used herein, also include the symbols of symbol sets used for communication by individuals who have hearing, speech or language impairments, for teaching literacy skills to those lacking them, including pre-literate children and individuals with intellectual disabilities, and for international written communication. These symbol sets include, but are not limited to, each of the following: Picture Communication Symbols, Rebus, Picsym, Pictogram Ideogram Communication Symbols, Yerkish, Blissymbolics and depictions of the signs of a manual sign language. Examples of symbols of the Picture Communication Symbols, Rebus, Picsyms, and Blissymbolics symbol sets are shown in , Pictogram Ideogram Communication Symbols in  and Yerkish in - (). Picture Communication Symbols, Rebus, Picsyms, Pictogram Ideogram Communication Symbols, Yerkish, and Blissymbolics are each described in Beukelman, David R. & Mirenda, Pat, , Paul H. Brookes Publishing Co., 1992, pp. 22-29.","Individuals who have not acquired or who have lost their literacy skills may use symbolic symbol sets in learning to read. If the individual lacks fine motor control, for example, due to cerebral palsy, the individual's disability may inhibit the acquisition of literacy skills by, for example, inhibiting repetition of an exercise by the individual, by limiting the individual's ability to participate in the classroom, or by making skill assessment by a teacher difficult so that the teacher may incorrectly believe that remediation is necessary or that a particular skill has been mastered. If the individual also has impaired speech, literacy acquisition is more difficult still.","Conventional literacy training systems for individuals who are unable to use a standard keyboard or mouse may use switch access, often in combination with scanning. As already described, scanning is an extremely slow process. Moreover, as the number of symbols in the symbol set increases, the time required to select a symbol also increases. Of the symbol sets mentioned above, Picture Communication Symbols contains approximately 1800 symbols, Rebus contains approximately 800 symbols, Picsyms contains approximately 1800 symbols, Pictogram Ideogram Communication Symbols contains approximately 400 symbols and Blissymbolics contains approximately 1400 symbols. When using a system with a static display, the operator may expend considerable time and effort finding the desired symbol; when using a system with a dynamic display, the operator may expend considerable time effort memorizing and recalling where a particular symbol is located within a hierarchy of symbols. This time and effort generally does not contribute to the acquisition of literacy skills.","One advantage of the Ideographic Languages aspect of the disclosure is to display a menu of sequences of one or more ideographs on a display so that a large contiguous area on the display is not obstructed by the menu.","Another advantage of the Ideographic Languages aspect of the disclosure is to facilitate ideograph entry in word processing systems for the Chinese, Japanese and Korean languages.","Still another advantage of the Ideographic Languages aspect of the disclosure is to speed selection of sequences of graphics including one or more ideographs.","Yet another advantage of the Ideographic Languages aspect of the disclosure is to allow an operator of a word processing system for an ideographic language to select a sequence of one or more ideographs without lifting either hand from the keyboard.","A further advantage of the Ideographic Languages aspect of the disclosure is to indicate to an operator the progress toward selection of a dwell-selectable sequence of one or more ideographic characters.","Additional advantages and features of the disclosure will be set forth in part in the description which follows, and in part will become apparent to those skilled in the art upon examination of the following or may be learned by practice of the disclosure. Each of the advantages of the disclosure may be realized by at least one embodiment of at least one of the appended claims.","Still other advantages of the present disclosure will become readily apparent to those skilled in this art from the following detailed descriptions, wherein I have shown and described the preferred embodiment of each aspect of the disclosure, simply by way of illustration of the best mode contemplated by me of carrying out each aspect of my disclosure. As will be realized, each aspect of the disclosure is capable of other and different embodiments, and its several details are capable of modifications in various obvious respects, all without departing from the disclosure. Accordingly, the drawings and descriptions are to be regarded as illustrative in nature, and not as restrictive.","The hardware and software operating environment of the preferred embodiment of all aspects of the disclosure will now be described with reference to a particular embodiment of the disclosure, hereinafter \u201cprototype\u201d. The prototype of the disclosure illustrates the best mode of practicing each aspect of the disclosure known by me except where a preferred mode is described.",{"@attributes":{"id":"p-0133","num":"0138"},"figref":["FIG. 15","FIG. 14"],"b":["2214","2218","2202","2220","2206","2218","2116","2208","2210","2216","2116","2102","2112","2102","2104","2106","2108"]},"The prototype employs the Remote Headmaster\u00ae manufactured by the Prentke Romich Company, Wooster, Ohio, USA. However, the combination of the HeadMaster\u00ae Plus, part number HM-1P, HeadMaster\u00ae Plus Remote Adapter, part number HM-RA, and HeadMaster\u00ae Plus Laptop Adapter, part number HM-LA, all available from the Prentke Romich Company, is preferable because the headset is more comfortable and the HeadMaster\u00ae Plus ultrasonic transmitter mounts more easily on a laptop computer system than the Remote Headmaster ultrasonic transmitter.","The preferred embodiment further includes a battery powered printer, the MobileWriter\u00ae, part number 730879, manufactured by Mannessmann Tally Corporation, Kent, Wash., USA and a speech synthesizer, the Multivoice Speech Synthesizer, part number MV2-SS, manufactured by The Institute on Applied Technology, Children's Hospital, Boston, Mass., USA.","The pointer () is a device which provides data concerning the relative or absolute position of the operator or any body member of the operator. The display () and pointer () together provide for the interactive nature of the general purpose computer system () in that, in accord with the various aspects of the disclosure, the interpretation that the processor () gives to a certain pointer action made by the operator depends, in the majority of situations, upon what is being displayed to the operator at that time.","The prototype () shown in  further includes a keyboard (), which functions to provide input from an able-bodied operator to the general purpose computer system (). The keyboard () is useful for configuration, diagnostic and backup purposes, functions which are performed relatively infrequently and usually require an able-bodied person for ancillary activities, for example, loading backup media into the general purpose computer system. The prototype () also optionally includes a printer () which functions to provide hard copy output of data developed or stored in the general purpose computer system, and a speech synthesizer (), which functions to provide speech output for utterances and words composed using or retrieved from the general purpose computer system ().","The couplings between the devices depicted in  may be made by any means which permits the orderly and timely exchange of data across the interface. In the preferred embodiment, the interfaces between the pointer () and the general purpose computer system () and between the general purpose computer system () and the speech synthesizer () conform to the Electronic Industries Association RS-232 interface specification. The interface between the general purpose computer system () and the printer () conform to the Centronix 50 pin parallel interface specification.","The software component of the prototype are stored in memory () and executed on the processing unit (). The software component of the prototype, depicted in , include a software driver (), an operating system (), an optional database program (), and the prototype access program code and data, hereinafter collectively referred to as the \u201caccess program\u201d (). In the preferred embodiment, one or more application programs () may also execute on the processing unit () and accept control and data from the access program () via the operating system (). The software driver () of the prototype is the Logitech Mouse Driver included with Windows\u00ae version 3.1. The operating system () of the prototype is Windows\u00ae version 3.1 in combination with MS-DOS\u00ae version 6.2. Hereinafter, the operating system is referred to simply as \u201cWindows\u00ae\u201d, available from Microsoft Corporation, Redmond, Wash., USA.","The optional database program () is described in the detailed description of the Length Order aspect of the disclosure. The prototype access program () is described in detail below.","As stated earlier, the software components of the prototype are stored in memory (). Depending on the capacity of memory () and the size of the application programs, portions of these programs may be transferred as needed between memory () and the storage unit () or between memory () and a diskette in the diskette drive () depicted in . The basic function of the storage unit () and the diskette drive () is to store programs and data that are employed by the general purpose computer system () and which may readily be transferred to the memory () when needed.","It is to be understood that components others than those used in the prototype may be utilized in accordance with the disclosure. It is only necessary that the substitute component or components have the capacity to carry out the functions described. For example, the processing unit of the general purpose computer system may be substituted with a microprocessor coupled to custom electronics for performing the functions of the various aspects of the disclosure, or the color display of the prototype may be substituted with a monochrome display.","A. Perimeter Menu","The preferred embodiment of the Perimeter Menu aspect of the disclosure will now be described in detail from a functional perspective using an example. This description refers to selectable regions which include one or more subregions. A selectable region is a region, delimited with respect to a display or a surface, and associated with a menu option which may be selected, usually by a selection event. A subregion is a selectable region that is included within another selectable region. Thus a subregion is, by itself, a selectable region. Assuming that a certain selectable region includes subregions A and B, dwell time on subregions A and B may be combined, for example, by summing, so that dwelling on either subregion A or B or a combination of both for the selection threshold period selects the menu option associated with the selectable region.","Reference will now be made to  which depict an example of the preferred embodiment of the Perimeter Menu aspect of the disclosure.  shows the display () of a general purpose computer system ( in ) and eight selectable regions. Each of the eight selectable regions consists of the union of a visible subregion on the display () and an invisible subregion located outside the display () and adjacent the visible subregion. For example, the selectable region at 11 o'clock in  labeled with menu option \u201cvort<space>x\u201d consists of invisible subregion () and visible subregion (), and within this description of the Perimeter Menu aspect of the disclosure is referred to as selectable region (\/). The other selectable regions shown in , proceeding counter clockwise from selectable region (\/) are (\/), (\/), (\/), (\/), (\/), (\/) and (\/). Each subregion may be sized to suit the operator's preferences and abilities. Each selectable region is associated respectively with a menu option. In , selectable region (\/) is associated with menu option vort<space>x, selectable region (\/) with menu option \u201csumac\u201d, selectable region (\/) with menu option \u201cwizen\u201d, selectable region (\/) with the menu option undo indicated by an icon on visible subregion () representing an undo function, selectable region (\/) with menu option \u201cwords\u201d, selectable region (\/) with menu option \u201ctalk\u201d, selectable region (\/) with menu option \u201cldhbfk\u201d and selectable region (\/) with menu option \u201cypgqj,\u201d. Together, the eight visible subregions circumscribe region () on the display.","Selectable regions may be delimited by data indicative of one or more boundaries of the selectable region. Equivalently, the delimit means may be detectors operative to determine when the location indicated by the movement related signal has crossed one of those boundaries or intersects a selectable region. A partially delimited region or subregion is one which is unbounded on at least one side.","Resuming, now, with the example, to select a menu option associated with a selectable region the operator moves a pointer ( in ) coupled to the general purpose computer system ( in ) to indicate a location on the selectable region, including either subregion, associated with the desired menu option and maintains the indicated location on the selectable region for the selection threshold period. The period of time required for selection may vary responsive to the proximity of the indicated location to the location of a cursor on the display or to the proximity of the indicated location to a point within the intersected selectable region. Dwell time may be continuous, discontinuous or dynamic (described below) for either or both subregions of the selectable region.","Selection in the above example is in response to a dwell event. A dwell event includes, but is not limited to, each of the following: (a) the durations of one or more periods of intersection of locations indicated by a movement related signal, a body member or a cursor (including any part of the cursor) and a selectable region equalling or exceeding a predetermined period; (b) a first quantity responsive to the durations of the periods referred to in (a) equalling or exceeding a predetermined quantity; (c) dwell event (a) or (b) followed by a location indicated by the movement related signal, the body member or the cursor no longer intersecting the intersected selectable region; and (d) dwell event (a) or (b) wherein the period of intersection required for selection of a selectable region increases in response to a non-intersection or a period of non-intersection of locations indicated by the movement related signal, the body member or the cursor and the selectable region (\u201cdynamic dwell event\u201d). The use of non-intersection or a period of non-intersection in determining the duration of a period of intersection required for selection is called dynamic dwell. Associated with each type of dwell event is an intersected selectable region. This is the selectable region intersected by the location indicated by the movement related signal, body member or cursor which triggers the dwell event by causing the period or the first quantity to equal or exceed the predetermined period or the predetermined quantity, respectively.","Selection may also be in response to a selection event. A selection event includes, but is not limited to: (a) a dwell event; (b) a switch operation at or near the time of an intersection of a location indicated by a movement related signal, a body member or a cursor and a selectable region; (c) an intersection of a location indicated by a movement related signal, a body member or a cursor and a selectable region; and (d) selection event (c) followed by a location indicated by the movement related signal, the body member or the cursor no longer intersecting the selectable region it previously intersected. Associated with each type of selection event is an intersected selectable region. This is the selectable region intersected by the location indicated by the movement related signal, body member or cursor. The fact that a selection event has occurred may be indicated to the operator, for example, visually by changing the cursor appearance or location, by changing location, size, shape, hue, brightness, contrast, tone, dithering, pattern, hatching, font or fill of an object on the surface, or by displaying a graphic or a point distinguishable from its immediate surroundings on a surface or removing a graphic or point distinguishable from its immediate surroundings from a surface; auditively by generating a sound or changing the pitch or volume of an extant sound; tactilely by changing the surface or temperature of a contact area or the pressure exerted by a contact area; or by other means. In the prototype, following selection, the hue of the visible subregion of the selected selectable region is changed from green to magenta.","As used herein, a cursor includes a temporary marking on a display which emphasizes to an operator, in an optical manner, a momentarily important location or object. As used herein, body member means any part of the body including, but not limited to, each of the following: the shoulder, arm, elbow, wrist, hand, finger, thumb, leg, knee, ankle, foot, toe, hip, trunk, neck, tongue, lip, eye and head. The received movement related signal includes, but is not limited to, a signal indicative of movement or from which movement can be derived, such as a plurality of relative or absolute positions or a difference between two relative or absolute positions. Movement related signal receiving means includes, but is not limited to, each of the following: (a) pointer interface circuitry found in a general purpose computer system; (b) one or more detectors operative to detect movement of a pointer; and (c) one or more detectors operative to detect movement of a body member of an operator. In the prototype, the movement related signal receiving includes electronic circuitry in the general purpose computer system () operative to receive the movement related signal generated in part by the movement of the pointer ().","In the prototype subregions are displayed on the display (). However, other means for displaying may be substituted for the means used in the prototype, for example, a projector for projecting an image, a surface having a static display thereon, or other suitable means.","Resuming, now, with the example of , and assuming that the operator has selected menu option \u201cvort<space>x\u201d, the display is changed to that shown in . In , each of six selectable regions is now associated with a submenu option of the selected menu option \u201cvort<space>x\u201d. Selectable region (\/) is now associated with submenu option \u201c<space>\u201d, selectable region (\/) with submenu option \u201co\u201d, selectable region (\/) with submenu option \u201ct\u201d, selectable region (\/) with submenu option \u201cx\u201d, selectable region (\/) with submenu option \u201cv\u201d, and selectable region (\/) with submenu option \u201cr\u201d. Selectable regions (\/) and (\/) remains associated with the same menu options with which each was associated in . The operator may now select one of these submenu options.","Assuming that the selected submenu option is one of v, o, r, t, x and space, the selected character, or a corresponding computer encoding of that character, may be input to an apparatus coupled to the general purpose computer system ( in ), or input to an application program () executing on the general purpose computer system () coupled to the display (). Inputting, as used herein, includes, but is not limited to, generating or passing signals representative of the selected menu option along a path toward the destination apparatus or program. Preferably, the computer program displays at least some of its output in the circumscribed region ().","Given a display having eight selectable regions, an operator may, with a single selection indicate one of eight menu options, with two selections indicate one of up to 64 different menu options, with three selections indicate one of up to 256 menu options, etc. Each of these menu options may represent a sequence of one or more characters, a sequence of one or more data or control inputs to an application program (), or a control function for one or more devices or speech synthesizers coupled to the general purpose computer system (). As used herein, a character includes a space, a control character as defined by the American National Standards Institute (ANSI) or the American Standard Code for Information Exchange (ASCII), and a letter from one of the Afrikaans, Albanian, Amharic, Arabic, Armenian, Assamese, Assyrian, Avar, Azerbaijani, Balinese, Bamara, Bantu, Bashkir, Basque, Bengali, Birhari, Bulgarian, Buluba-Lulua, Burmese, Buryat, Byelorussian, Caddoan, Catalan, Chechen, Chikaranga, Chippewa, Choctaw, Church Slavik, Chuvash, Coptic, Cree, Croatian, Cyrillic, Czech, Dakota, Danish, Dari, Devanagari, Dutch, Dzongkha, English, Eskimo, Esperanto, Estonian, Ewe, Farsi, Fijian, Filipino, Finnish, Flemish, French, Fulani, Gaelic, Galician, Georgian, German, Greek, Gujarati, Gurmakhi, Harari, Hausa, Hawaiian, Hebrew, Hindi, Hiragana, Ibo, Icelandic, Indonesian, Irish, Irogquoian, Italian, Kabardian, Kalmyk, Kannada, Kanuri, Kashmiri, Katakana, Kazakh, Khasi, Khmer, Kirghiz, Kishmiri, Komi, Kongo, Kurdish, Lao, Latin, Latvian, Lithuanian, Lu-Guanda, Macedonian, Magahi, Maithili, Makua, Malagasy, Malay, Malayalam, Maltese, Mandingo, Manipuri, Marathi, Masai, Mizo, Moldavian, Mongolian, Munda, Naga, Navaho, Nyanja, Nepalese, Norwegian, Oriya, Oromo, Ossetian, Pashto, Polish, Portugese, Punjabi, Rajasthani, Rhaeto-Romanic, Rumanian, Russian, Samoan, Sangs, Serbian, Serbo-Croatian, Sinhalese, Sinhi, Sioux, Slovak, Slovenia, Spanish, Sundanese, Swahili, Swedish, Syriac, Tadzhik, Tagalog, Tajik, Tamil, Tatar, Telugu, Thai, Tibetan, Turkish, Turkmen, Udmurt, Uighur, Ukranian, Umbundu, Urdu, Uzbek, Vietnamese, Visayan, Welsh, Yakut, Yoruba and phonetic alphabets. As used herein, each of a character, ideograph, control input and control function includes a computer encoding of the same. As used herein, a device includes, but is not limited to, each of a wheelchair, a household appliance, an appliance for use in an office, a workstation, a robot, and a computer peripheral. Thus, by selecting from a menu, the operator may, for example, increase the volume of an external speech synthesizer, or turn a wheelchair to the left.","The selectable regions organized as described above help an NMD operator make the menu selection he intends. Referring to , suppose, for example, an NMD operator intends to move a pointer () that is indicating point () to indicate point (), a location in subregion (), but who is unable to quickly stop motion, so that the location indicated by the pointer () moves from point () past point () to point (). Because point () lies within the same selectable region (\/) as the overshot subregion (), dwelling at point () operates to select the intended selectable region (\/). Invisible subregions, in accordance with the Perimeter Menu aspect of the disclosure, may extend outward from the edge of the display () to infinity. In such an embodiment, dwelling at point () would operate to select selectable region (\/). Preferably, invisible subregions extend a finite distance from the edge of the display (). In such an embodiment, dwelling at point () would not operate to select selectable region (\/). The sizes of the invisible subregions shown in  are illustrative only. Preferably the size of each invisible subregion is large enough to encompass overshoot but small enough to avoid unintentional selections when the NMD operator turns to see someone or something.","The prototype utilizes the area outside the display to facilitate menu selection by a disabled operator. If an operator has impaired ability to maintain a steady position, he can point to a relatively large invisible subregion outside the display which is more forgiving of the operator's involuntary motion than the relatively small selectable regions on the display in conventional on-screen keyboards. Thus, the effective area of a selectable region is expanded beyond the region's visible subregion shown on a display. If an operator has impaired ability to stop motion he may, starting from the center of the screen, point to any selectable region. His impaired ability to stop will not impair his ability to select his intended target, assuming his directional control is relatively unimpaired, since, in the prototype, each selectable region is unbounded on its side furthest from the center of the display. Although the selectable regions of the prototype are large, only the visible subregion of each selectable region uses space on the display. Thus a large rectangular region remains available on the display for the output of an application program. The Perimeter Menu aspect of the disclosure is preferably implemented on a general purpose computer system. If the general purpose computer system is coupled to a speech synthesizer and the menu hierarchy allows the selection of letters and\/or words, an operator having impaired speech may speak using the speech synthesizer. If a word processing or data entry application program is run on the general purpose computer system, the operator may enter words or data, respectively, for input to the application program. If the general purpose computer system is coupled to a devices capable of executing commands and the menu hierarchy allows the selection of commands, a disabled operator may select and issue commands to control these devices.","Since the cognitive demand for scanning is greater than that for direct selection, the prototype places less cognitive demand on the operator than a scanning system for selecting options from a menu.",{"@attributes":{"id":"p-0157","num":"0162"},"figref":"FIG. 19","b":"6950"},{"@attributes":{"id":"p-0158","num":"0163"},"figref":"FIG. 20","b":"0806"},{"@attributes":{"id":"p-0159","num":"0164"},"figref":"FIG. 21","b":["0508","0506","0504","0502","0510"]},{"@attributes":{"id":"p-0160","num":"0165"},"figref":"FIG. 22","b":["4008","4006","4004","4002","4010"]},{"@attributes":{"id":"p-0161","num":"0166"},"figref":["FIG. 23","FIG. 23"],"b":["3510","3514","3512","3508","3535","3504","3502","3512"]},{"@attributes":{"id":"p-0162","num":"0167"},"figref":["FIGS. 24 and 25","FIG. 24","FIG. 24","FIG. 25"],"b":["6502","6504","6506","6508","6510","6512","6514","6514","6516","6518","6520","2112","6550","6506","2112","6608"]},{"@attributes":{"id":"p-0163","num":"0168"},"figref":["FIGS. 26 and 27","FIG. 26","FIG. 27","FIG. 26","FIG. 27","FIG. 27","FIGS. 26 and 27","FIG. 27"],"b":["0348","0304","0306","0308","0310","0312","0314","0316","0318","0320","0322","0324","0326","0328","0330","0332","0334","0336","0338","0340","0342","0348","0350","0348"]},"Still another apparatus in accordance with the Perimeter Menu aspect of the disclosure is illustrated in  which depicts a headrest for an operator using his head to indicate a location on a display.  shows an irregularity () on the surface () of the headrest. The irregularity is in physical contact with the operator and tactilely indicates to him the position of his head. The tactile indication means may be concave, convex or both or may differ from the surface in temperature. For individuals having impaired ability to sense the position of a body member, e.g. the operator's head, the tactile input thus provided to the operator improves the operator's ability to sense the position of his head.","The prototype of the disclosure will now be described in detail and where the preferred mode of practicing the disclosure differs from the prototype, the preferred mode is described. The description is broken into several parts:","1. A brief overview of how a state table works.","2. A description of the operation of the events, state table and state processing used in the prototype.","3. A general description of each event and one example of the use of that event.","4. An example of state machine processing in the operation of the prototype.","The prototype implements the Perimeter Menu aspect of the disclosure as a state table. A state table is a tool for processing sequential inputs and is most easily understood by analogy. Imagine yourself in a room having a ticket window and three exits, each regulated by a turnstile. You collect a ticket at the ticket window which, when inserted into the appropriate turnstile, allows passage to a connecting room. The turnstile keeps the ticket. Any given ticket operates only one turnstile in a room, though different tickets may operate the same turnstile. You begin in a certain room, collect a ticket, insert it into the appropriate turnstile and pass to a connecting room, where you perform certain tasks associated with the new room. Then you collect another ticket from the ticket window in that room, insert the ticket into the appropriate turnstile in that room, pass to a connecting room, perform certain tasks associated with the new room, and so on.","The state table used in the prototype is depicted in . Moving from the analogy above, the rooms are states represented by the rows of the state table; the tickets are events represented by the columns of the state table. Each entry in the state table represents a passage from one state to another. The tasks performed upon entry into a room correspond to the processing performed by the processor () on entry to a new state (\u201cstate processing\u201d). For example, state processing may cause a slight lightening of the color of a selectable region. Reentry into that state five times may successively lighten a selectable region five times.","In the prototype, each selectable region is directly controlled by one associated state machine. Each state machine directly controls only its associated selectable region. Each state machine includes data uniquely associated with its associated selectable region, the shared state table shown in , and the shared code for state processing, described below. This embodiment means that the state machine associated with selectable region () may be in state ST_SELECTED while the state machine associated with selectable region () is in state ST_INITIAL. In the prototype, these separate states are reflected only in separate values for data uniquely associated with each state machine. Each state machine has a unique index.","The state table used in the prototype defines 18 states, composed of states zero through seventeen shown in . State  (ST_ERROR_STATE in ) is not used. Preferably, it is omitted. In the prototype, the differences between the several state machines, for example, the state of a particular state machine at any given time, are confined to data structures associated with that state machine. The state machines share the same code and the same state table. In other words, returning to the ticket and turnstile analogy, there are multiple travelers each with his own ticket (event) and his own baggage (data) moving from room to room in the same labyrinth. Each traveler's actions in each room usually affect only his own baggage.","In the prototype, there are two types of sequential inputs processed by the state table: external events and internal events. External events are generated outside the state table, for example, by the operator moving the pointer () or by a timer expiring. Pointer movement may generate an event indicating that the operator has moved the cursor across the selectable region boundary from without the selectable region to within it. This event causes a transition from one state to another (\u201cdrives\u201d a state machine to a new state). For example, assuming a state machine is in state ST_CREST_TIDE, row  in the state table shown in , when an event EV_CROSS_OUT, column  of the state table, occurs. At the intersection of row  and column  is a 7. This represents the new state, row  of the state table, state ST_SELECTED. Thus event EV_CROSS_OUT drives the state machine from state ST_CREST_TIDE to state ST_SELECTED. On entry to the new state, the computer performs the state processing associated with the new state.","Internal events are generated during state processing to handle circumstances where a first state transition is made due to an external event and the processing associated with the new state determines that a second state transition is necessary. The first, external, event has already been used so a second, internal, event is generated by the state. For example, if the operator has a prolonged muscle spasm, common among individuals with CP, or loses his grip on a hand held pointing device, the cursor may sit without moving on a selectable region for a considerable period of time. It is desirable to detect this condition, move the cursor to the center of the screen so the operator can easily find the cursor, and reset all selectable regions to their initial color. Detection is accomplished with a timer. On timer expiration, a state machine transitions to state ST_IDLE which centers the cursor. From there it is desirable to transition to state ST_RESET which, among other processing, initializes selectable region color. The transition from state ST_IDLE to state ST_RESET is driven by an internal event, generated by state ST_IDLE state processing.","Although the preferred embodiment uses only one state to perform certain state processing, that state processing may be equivalently performed in multiple states. Likewise, the state processing of multiple states of the described embodiment may be equivalently performed in a single state.","Although the prototype uses a state table to control the flow of program execution and to select one of a plurality of selectable regions, the same function may be equivalently performed using object oriented software architecture, if-then-else statements or a combination of these. In particular, in accord with object oriented software architecture, each state machine may be equivalently represented as an instantiation of a selectable region class for processing inputs affecting a particular selectable region.","Although the described embodiment uses a single processor, state table and code for state processing for all the selectable regions, each of these may be duplicated. Alternate embodiments may include processors, electronic circuitry, state tables or code for state processing used for processing fewer than all the selectable regions or used to process certain selectable regions at one time and other selectable regions at other times.","In the prototype, each state machine processes events independently of all other state machines, though a state machine may send an event to another state machine. For example, when the operator selects a selectable region, the associated state machine sends the event EV_RESET to all other state machines so that all selectable regions revert to their respective initial colors.","A single operator action may result in the issuance of different events to different state machines. For example, when the operator moves the cursor from without a selectable region to within it, EV_DWELL is sent to the newly indicated state machine. EV_MOVEMENT is sent to all other state machines.","Following is a general description of each event used in the prototype and an example of the use of each event. For all uses of each event, refer to the state table shown in  which determines what state transition occurs from every state on occurrence of a given event.","The event EV_RESET is an internal event which drives a state machine to its initial state. For example, when the operator has not moved the pointer () for a predetermined period of time, event EV_RESET is sent to all other selectable regions.","The event EV_DECAY is an external event which indicates that the cursor hotspot does not intersect the selectable region associated with the state machine. EV_DECAY is sent to a state machine periodically when the operator has positioned the cursor hotspot on a selectable region other than the selectable region associated with that state machine.","The event EV_DWELL is an external event which indicates that the cursor hotspot intersects the selectable region associated with the state machine. EV_DWELL is sent to a state machine periodically when the operator has positioned the cursor hotspot on the associated selectable region.","The event EV_CROSS_OUT is an external event which indicates that the cursor hotspot has moved from a location intersecting the selectable region associated with the state machine to a location not intersecting the selectable region. After the operator selects a selectable region, he must move the cursor hotspot out of the selectable region, generating EV_CROSS_OUT, before he can again select that selectable region.","The event EV_STEP_UP is an internal event which indicates that a selectable region's selection threshold has been satisfied.","The event EV_MOVEMENT is an external event which indicates that the cursor hotspot has moved. If the cursor hotspot intersects a selectable region without moving for a predetermined period of time, a timeout occurs, causing all state machines to transition to the reset state. EV_MOVEMENT drives the state machine out of the reset state.","The event EV_IDLE_TIMEOUT is an external event which indicates that the cursor hotspot has intersected a selectable region without moving for a predetermined period of time. EV_IDLE_TIMEOUT causes the state machine to move the cursor hotspot to the center of the display.","The event EV_CEILING is an external event which indicates that the cursor hotspot intersects a selectable region and the color of the selectable region equals the selectable region color ceiling. If the locking feature is enabled, EV_CEILING drives the state machine to the begin lock state where it displays the lock icon.","The null event, EV_NULL, is a multi-purpose internal event used in a variety of situations to drive a state machine to another state. For example, after a timeout has been detected, EV_IDLE_TIMEOUT is generated and sent to the appropriate state machine driving it to the idle state, the receiving state machine sends itself EV_NULL in order to drive itself to the reset state. The use of EV_NULL here allows states to be simpler and the reset state to be reused.","The prototype uses eight partially delimited selectable regions. In the description below, the portion of each selectable region shown on the display is referred to as the visible subregion of the selectable region. The portion of each selectable region outside the display is referred to as the invisible subregion of the selectable region. Because the software driver () confines the cursor hotspot to the Windows\u00ae cursor clipping rectangle, a rectangle on the display slightly smaller in area than the display, the access program () of the prototype only reads hotspot cursor locations within the Windows\u00ae cursor clipping rectangle, even though the operator may in fact be pointing to a location outside the Windows\u00ae cursor clipping rectangle, e.g. within an invisible subregion. Thus the access program () does not distinguish between two locations indicated by the operator, the first at a first location on the edge of the Windows\u00ae cursor clipping rectangle and the second outside the Windows\u00ae cursor clipping rectangle whose location is reported by the software driver () to be the first location. For example, assuming that the operator moves the location indicated by the pointer () to a location within invisible subregion ( in ), the software driver () in the prototype reports the cursor hotspot location to be the closest point within the visible subregion (). Consequently, in the prototype, all invisible subregions are unbounded on their side furthest from and parallel to the edge of the display. Thus, in the prototype, point () in  lies within selectable region (\/) since the rightmost side of selectable region (\/) is unbounded.","The operation of the prototype will now be described using, as an example, the selection of a menu option associated with selectable region (\/). First described are notation conventions used in the description, then initialization in the prototype, and then the example. The description refers to the procedures PocketFsm and CreateEvent. These procedures are listed in pseudo-code in Appendix I.","Notational conventions used in the description below:\n\n","During initialization:\n\n",{"@attributes":{"id":"p-0191","num":"0201"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["variable","initial value","meaning"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["fInvert","FALSE","if TRUE, display the color"]},{"entry":[{},{},"complementary to that"]},{"entry":[{},{},"indicated by this selectable"]},{"entry":[{},{},"region's Color variable"]},{"entry":["State","ST_INITIAL","state of the state machine"]},{"entry":["Previous State","0","previous state of the state"]},{"entry":[{},{},"machine"]},{"entry":["Color","0","RGB encoding of visible"]},{"entry":[{},{},"subregion color"]},{"entry":["fPaint","FALSE","if TRUE, paint visible"]},{"entry":[{},{},"subregion on receipt of"]},{"entry":[{},{},"WM_PAINT message"]},{"entry":["InitialColor","RGB (0, 32, 0)","initial value corresponds to a"]},{"entry":[{},{},"dark green"]},{"entry":["pLabel","initial menu option","indicates an element within"]},{"entry":[{},"for the state machine's","the aLabel array, described"]},{"entry":[{},"selectable region","below"]},{"entry":["Decrement","RGB (0, 1, 0)","value subtracted from Color"]},{"entry":[{},{},"on EV_DECAY"]},{"entry":["Increment","RGB (0, 4, 0)","value added to Color on"]},{"entry":[{},{},"EV_DWELL"]},{"entry":["Ceiling","RGB (0, 255, 0)","initial value corresponds to a"]},{"entry":[{},{},"very light, bright green"]},{"entry":["CrestTide","RGB (0, 143, 0)","initial value corresponds to a"]},{"entry":[{},{},"light green"]},{"entry":["Lockspot.x","a point within the","x coordinate of location for"]},{"entry":[{},"selectable region","the display of the lock icon"]},{"entry":[{},"located two thirds of"]},{"entry":[{},"the length of the"]},{"entry":[{},"selectable region from"]},{"entry":[{},"the closest corner of"]},{"entry":[{},"the display"]},{"entry":["Lockspot.y","a point within the","y coordinate of location for"]},{"entry":[{},"selectable region","the display of the lock icon"]},{"entry":[{},"located two thirds of"]},{"entry":[{},"the length of the"]},{"entry":[{},"selectable region from"]},{"entry":[{},"the closest corner of"]},{"entry":[{},"the display"]},{"entry":["fInterior","TRUE for interior","if TRUE, this is an interior"]},{"entry":[{},"regions, otherwise","region of adjacent regions"]},{"entry":[{},"FALSE; used for"]},{"entry":[{},"the Intersection"]},{"entry":[{},"aspect of the invention"]},{"entry":["iAdjacentPocket","index of state machine"]},{"entry":[{},"associated with the"]},{"entry":[{},"adjacent region; used"]},{"entry":[{},"for the Intersection"]},{"entry":[{},"aspect of the invention"]},{"entry":["first array","boundaries of the"]},{"entry":["of points","visible subregion"]},{"entry":["second array","boundaries of the"]},{"entry":["of points","region; used for the"]},{"entry":[{},"Intersection aspect"]},{"entry":[{},"of the invention"]},{"entry":["hRegion","handle to Windows\u2009\u00ae"]},{"entry":[{},"region corresponding"]},{"entry":[{},"to the visible"]},{"entry":[{},"subregion; used for the"]},{"entry":[{},"Intersection aspect"]},{"entry":[{},"of the invention"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0007","list-style":"none"},"li":{"@attributes":{"id":"ul0007-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0008","list-style":"none"},"li":["4. aLabel, an array of data structures defining the menu and submenu options and the menu hierarchy, is initialized. For example, one of the elements of aLabel defines menu option \u201cvort<space>x\u201d. This element includes fields which determine that this menu option is displayed horizontally starting at certain (x,y) coordinates, that on selection certain actions are to be taken, for example, outputting text to a speech synthesizer, and that on selection certain submenu options, in this example, \u201cv\u201d, \u201co\u201d, \u201cr\u201d, \u201ct\u201d, \u201c<space>\u201d and \u201cx\u201d, and related data are to be associated with certain state machines. In the prototype, this association is accomplished by modifying pLabel in the set of data of the associated state machine to point to the aLabel element corresponding to the menu option to be associated with that state machine.","5. At least one window is created in the circumscribed region () for the display of selected letters.","6. The state table is initialized to the values shown in .","7. EV_RESET is sent to each state machine by a procedure call of the form PocketFsm (pPocket, EV_RESET). As an example, assume pPocket indicates the state machine associated with selectable region (\/). Proceeding through the pseudo-code for the procedure PocketFsm listed in Appendix I, fInternalEvent is set to TRUE and consequently control passes into the while loop. fInternalEvent is now set to FALSE. The current state, pPocket\u2192State, is stored in pPocket\u2192PreviousState. Now a state transition is made. The current state, ST_INITIAL, having a value of 2, and the current event, EV_RESET, having a value of 1, are used as row and column indices respectively into the state table aPocketFsm shown in , to determine the value of the new state of the state machine, in this example, the state machine associated with selectable region (\/). aPocketFsm[2][1] equals 3. Thus the new state of the state machine is 3, the value of ST_RESET. Control passes, via the switch statement, to the ST_RESET case and ST_RESET state processing is performed. The time of selectable region selection is set to the current time, the state machine's fInvert flag is set to FALSE and the value of the state machine's color variable, pPocket\u2192Color, is compared to the state machine's initial color, pPocket\u2192InitialColor. pPocket\u2192Color was initialized to zero, which is not the value of pPocket\u2192InitialColor. Consequently, pPocket\u2192Color is set to pPocket\u2192InitialColor and the flag pPocket\u2192fPaint is set to TRUE. Upon reaching the break statement, control passes through the bottom of the switch statement and the value of pPocket\u2192fPaint is tested. Since it is TRUE, the client area rectangle is invalidated. In the prototype, Windows\u00ae () responds to invalidating the client rectangle by sending the access program () a WM_PAINT message. On receipt of a WM_PAINT message, the access program () redraws all selectable regions and any menu option located thereon for each state machines having pPocket\u2192fPaint equal to TRUE. Thus, somewhat indirectly, visible subregion () is drawn on the display (). Then control returns to Windows\u00ae (). The other seven state machines, each associated respectively with a selectable region, are similarly initialized so that each state machine transitions from ST_INITIAL to ST_RESET and draws its respective visible subregion and any menu option located thereon on the display (). The display shown in  now appears on the display () of the computer system ().","8. A periodic timer, called the cursor polling timer, is set. This timer provides the access program () with a WM_TIMER message at frequent intervals, in the prototype every system clock tick which occurs approximately every 54 milliseconds. Following access program () initialization, most state transitions are made on expiration of the cursor polling timer. The access program () calls the procedure CreateEvent to determine the appropriate event for each state machine and to complete the event data structure addressed by pEvent accordingly, then repetitively calls the procedure PocketFsm for each state machine, passing the unique indicator for the state machine and the appropriate event for that state machine. Preferably, the cursor polling timer is more frequent so that color changes to visible subregions are smaller and more frequent, giving a smoother appearance to color change."]}}}},"An example of the selection of selectable region (\/) in accord with the Perimeter Menu aspect of the disclosure will now be described. Following initialization, assume that the operator now begins to move the pointer (). Every 54 milliseconds the cursor polling timer expires, causing Windows\u00ae () to send a WM_TIMER message to the access program (). Following receipt of WM_TIMER, the access program () calls the procedure CreateEvent. The procedure CreateEvent, among other functions, determines whether the current cursor hotspot location lies within any selectable region. In this example, the operator is moving the cursor from its initial location in the center of the display toward selectable region (\/), but since only 54 milliseconds have elapsed, the cursor hotspot has moved only slightly in that direction. The procedure CreateEvent determines that the cursor hotspot does not lie within any selectable region and that the cursor hotspot has not crossed out of a selectable region in the past 54 milliseconds. Therefore, the procedure CreateEvent determines that each state machine should receive EV_MOVEMENT. The procedure PocketFsm is called with the indicator for the state machine associated with selectable region (\/) and with EV_MOVEMENT. The event EV_MOVEMENT drives this state machine from its current state, ST_RESET, to ST_EBB_TIDE. The pseudo-code for ST_EBB_TIDE in procedure PocketFsm is a break statement, indicating that no state specific action is taken at this time, other than the transition to ST_EBB_TIDE. Control returns to Windows\u00ae ().","Shortly before or shortly after the state machine associated with selectable region (\/) receives EV_MOVEMENT, all other state machines each receive EV_MOVEMENT and each makes the same transition from ST_RESET to ST_EBB_TIDE.","Another 54 milliseconds elapses and again procedure PocketFsm is called, sending EV_MOVEMENT to the state machine associated with selectable region (\/) and driving state machine from ST_EBB_TIDE to ST_DECAY. Stepping through the pseudo-code for ST_DECAY, the ST_DECAY state sets pPocket\u2192State to the value stored in pPocket\u2192PreviousState and decrements pPocket\u2192Color but not below the value of pPocket\u2192InitialColor. pPocket\u2192Color determines the color and brightness of visible subregion (). Decrementing pPocket\u2192Color results in a darkening of visible subregion (). Resuming with the pseudo-code for ST_DECAY state processing, the ST_DECAY state sets fInternalEvent to TRUE, and, in this case, sets Event to EV_NULL. Following the break statement, the while fInternalEvent condition is true and another state transition occurs, using the value of pPocket\u2192State which was set by ST_DECAY state processing to ST_EBB_TIDE, the previous state. The new state is found at aPocketFsm[ST_EBB_TIDE][EV_NULL], which equals ST_EBB_TIDE. This state transition is unlike an ordinary state transition because the starting state is set by ST_DECAY. All transitions from ST_DECAY share this distinction. The state machine executes the code for the new state, ST_EBB_TIDE, which is simply a break statement. The procedure PocketFsm determines that fPaint is FALSE and exits. Control returns to Windows\u00ae ().","Shortly before or shortly after the state machine associated with selectable region (\/) receives EV_MOVEMENT, all other state machines each receive EV_MOVEMENT and each makes the same transitions from ST_EBB_TIDE to ST_DECAY to ST_EBB_TIDE.","Every 54 milliseconds this scenario is repeated for each state machine until the operator moves the cursor hotspot to a point within selectable region (\/). At this time the procedure CreateEvent determines that there is an active selectable region, specifically selectable region (\/), and that consequently EV_DWELL should be sent to the associated state machine. The procedure PocketFsm is called with the indicator for the state machine associated with selectable region (\/) and the event EV_DWELL. EV_DWELL drives this state machine from ST_EBB_TIDE to ST_ENTRY. Following the pseudo-code for ST_ENTRY state processing shown in PocketFsm pseudo-code, fInternalEvent is set to TRUE and Event is set to EV_NULL, resulting in another state transition to aPocketFsm[ST_ENTRY][EV_NULL], which equals ST_LOW_TIDE.","The pseudo-code for ST_LOW_TIDE is only a break statement, so there is no state specific action for ST_LOW_TIDE other than entry into this state. fPaint is FALSE so the selectable region is not redrawn. Control returns to Windows\u00ae ().","Shortly before or shortly after the state machine associated with selectable region (\/) receives EV_DWELL, all other state machines each receive EV_MOVEMENT and each makes the same transitions from ST_EBB_TIDE to ST_DECAY to ST_EBB_TIDE.","Another 54 milliseconds elapses. The procedure CreateEvent determines that the state machine associated with selectable region (\/) should receive EV_MOVEMENT, which drives it from ST_LOW_TIDE to ST_DWELL. Stepping through the pseudo-code for ST_DWELL, the ST_DWELL state sets pPocket\u2192State to the value stored in pPocket\u2192PreviousState, increments pPocket\u2192Color by pPocket\u2192Increment, but not above the value of pPocket\u2192Ceiling, sets pPocket\u2192fPaint to TRUE, sets fInternalEvent to TRUE, and, in this case, sets Event to EV_NULL. Following the break statement, the while finternalEvent condition is true and another state transition occurs. The new state is found at aPocketFsm[ST_LOW_TIDE][EV_NULL], which equals ST_LOW_TIDE. This path is unlike an ordinary state transition because the starting state is set by ST_DWELL. All transitions from ST_DWELL share this distinction. The state machine executes the code for the new state, ST_LOW_TIDE, which is simply a break statement. The procedure PocketFsm determines that fPaint is TRUE, invalidates the client rectangle and exits. As a result of invalidating the client rectangle, Windows\u00ae () sends a WM_PAINT message to the access program (). On receipt of WM_PAINT, the access program () checks the value of fPaint for each state machine, and if TRUE, sets fPaint to FALSE and redraws the visible subregion of the selectable region associated with that state machine and any menu option located thereon. The color of the redrawn visible subregion is determined by the value of the Color variable for that state machine. After redrawing, control returns to Windows\u00ae ().","Shortly before or shortly after the state machine associated with selectable region (\/) receives EV_DWELL, all other state machines each receive EV_MOVEMENT and each makes the state transitions from ST_EBB_TIDE to ST_DECAY to ST_EBB_TIDE.","Assuming the operator maintains the cursor hotspot in the selectable region (\/), the state machine associated with selectable region (\/) cycles repetitively through the state transitions from ST_LOW_TIDE to ST_DWELL to ST_LOW_TIDE, driven by the cursor polling timer. With each transition to ST_DWELL, visible subregion () is brightened a bit. The polling timer interval is short enough and the increment to pPocket\u2192Color is small enough that visible subregion () appears to gradually brighten although in fact it progresses rapidly through a series of discrete brightness levels. With each iteration through ST_DWELL, pPocket\u2192Color in incremented.","Assuming that the operator maintains the cursor hotspot on selectable region (\/), pPocket\u2192Color will eventually equal or exceed pPocket\u2192CrestTide, a variable set at initialization time and not changed thereafter. At this time, Event is set to EV_STEP_UP, driving a transition to aPocketFsm[ST_LOW_TIDE][EV_STEP_UP], which equals ST_SELECTED. The state processing for ST_SELECTED provides the operator with an audible indication that a selection has just been made, takes the action appropriate upon selection of this selectable region, including selecting the menu option associated with the selected selectable region. In this example, the access program () does not generate output to another program or device at this time. ST_SELECTED next sets pPocket\u2192flnvert to TRUE, and, if appropriate, changes the menu options associated with various selectable regions. In this example, selectable region (\/) is now associated with menu option \u201c<space>\u201d, selectable region (\/) with menu option \u201co\u201d, selectable region (\/) with menu option \u201ct\u201d, selectable region (\/) with menu option \u201cx\u201d, selectable region (\/) with menu option \u201cv\u201d, and selectable region (\/) with menu option \u201cr\u201d. Selectable regions (\/) and (\/) remains associated with the same menu options with which they were associated in . fPaint is set to TRUE for the state machines associated with the selectable regions having changed menu options. ST_SELECTED next sets Event to EV_NULL and fInternalEvent to TRUE. The state machine now makes the transition to aPocketFsm[ST_SELECTED_TIDE][EV_NULL], which equals ST_CREST_TIDE. There is no state specific action for ST_CREST_TIDE other than entry into this state. The pseudo-code for ST_CREST_TIDE is only a break statement. Control returns to Windows\u00ae ().","When the access program () later receives the WM_PAINT message resulting from the invalidating of the client rectangle, the setting of flnvert to TRUE causes the visible subregion () to be drawn in the color complementary to the value then indicated by pPocket\u2192Color. The setting of fPaint to TRUE for all selectable regions associated with changed menu options causes those selectable regions and the menu options thereon to be redrawn. The display shown in  now appears on the display () of the computer system ().","Assuming the operator maintains the cursor hotspot in the selectable region (\/), the state machine associated with selectable region (\/) cycles repetitively through the state transitions from ST_CREST_TIDE to ST_DWELL to ST_CREST_TIDE, driven by the cursor polling timer. With each transition to ST_DWELL, visible subregion () is brightened a bit, though it is now magenta, the complement of green. The polling timer interval is short enough and the increment to pPocket\u2192Color is small enough that visible subregion () appears to gradually brighten although in fact it progresses rapidly through a series of discrete brightness levels. With each iteration through ST_DWELL, pPocket\u2192Color in incremented. Assuming that the operator maintains the cursor hotspot on selectable region (\/), pPocket\u2192Color will eventually equal pPocket\u2192Ceiling, a variable set at initialization time and not changed thereafter.","Assuming that the operator now moves the cursor so that the hotspot is located outside selectable region (\/), CreateEvent generates the EV_CROSS_OUT for the state machine associated with selectable region (\/), driving the state machine to aPocketFsm[ST_CREST_TIDE][EV_CROSS_OUT], which equals ST_SELECT_AND_OUT. The state processing for ST_SELECT_AND_OUT sends EV_RESET and then EV_MOVEMENT to all state machines, driving each of them from their current state to ST_RESET and then to ST_EBB_TIDE. For each state machine, the transition ST_RESET and then to ST_EBB_TIDE results in actions previously described for those states, except that, unlike before, the value of pPocket\u2192Color for the state machine associated with selectable region (\/) does not equal the value of pPocket\u2192InitialColor for the state machine associated with selectable region (\/). Consequently, pPocket\u2192Color is set to pPocket\u2192InitialColor and fPaint is set to TRUE, subsequently causing visible subregion () to be redrawn in its initial color. Control returns to Windows\u00ae ().","The prototype continues to sample cursor location at 54 millisecond intervals, determine the appropriate event for each state machine and send that event each state machine, causing state transitions in each state machine according to the state table shown in . Assuming that the operator next selects selectable region (\/), the state processing in ST_SELECTED displays the selection, the letter \u201co\u201d, in the circumscribed region (), and associates the menu options shown in  with their respective selectable regions. The display shown in  appears on the display () of the computer system ().","B. Confinement","The preferred embodiment of the Confinement aspect of the disclosure will now be described in detail from a functional perspective using an example illustrated in . In , 20 selectable regions, e.g. (), () and (), are depicted on display (). Each of the selectable regions is located on the display () adjacent an edge of the display, and the selectable regions together circumscribe a region () on the display. The top and left edges of the Windows\u00ae cursor clipping rectangle () lie on the top and left edges, respectively, of the display (). The bottom and right edges of the Windows\u00ae cursor clipping rectangle () lie on the display parallel to and slightly indented from the bottom and right edges, respectively, of the display. A confining polygon is delimited on the display. The boundary of the confining polygon, starting from the upper right corner of the Windows\u00ae cursor clipping rectangle, follows the top edge of the Windows\u00ae cursor clipping rectangle to the left until it reaches region (), where the boundary follows the side of region () down, to the left, and back up to the top edge of the Windows\u00ae cursor clipping rectangle. The boundary continues left along the top edge of the Windows\u00ae cursor clipping rectangle until it reaches region (), where the boundary follows the side of region () down, to the left, and back up to the top edge of the Windows\u00ae cursor clipping rectangle. The boundary continues left along the top edge of the Windows\u00ae cursor clipping rectangle to the upper left corner and then turns down along the left edge of the Windows\u00ae cursor clipping rectangle until it reaches region (), where the boundary follows the side of region () to the right, down, and to the left to the left edge of the Windows\u00ae cursor clipping rectangle. The boundary of the confining polygon continues in this fashion around to the upper right corner of the Windows\u00ae cursor clipping rectangle. The confining polygon thus includes all the area of the Windows\u00ae cursor clipping rectangle except for the regions (), (), (), (), (), (), (), and (). An operator controlling a pointer indicating successive locations with respect to the display and attempting to select a target selectable region may overshoot the target so that some of the successive locations lie outside the Windows\u00ae cursor clipping rectangle. In the preferred embodiment of the Confinement aspect of the disclosure, the cursor () is confined to the confining polygon. The preferred embodiment is responsive to an intersection of the cursor hotspot and any one selectable region so that an overshot selectable region may be selected by click or by dwell without moving the location presently indicated by the pointer to a location in the overshot selectable region. Thus, the preferred embodiment of the Confinement aspect of the disclosure allows an operator with impaired ability to stop motion to maintain the cursor more easily on a selectable region, and so select the intended selectable region, than do conventional user interface systems.","A selectable region having a single side abutting a confining polygon prevents cursor movement only beyond the abutting side. However, NMD operators who drift may drift in more than one direction. Assume that a certain NMD operator tends to drift both up and to the left and that he is attempting to select selectable region (). If he moves the cursor into that selectable region his upward drift will be confined; the drift will not move the cursor beyond the confining polygon. However, the cursor will move to the left, since, in the preferred embodiment of the Confinement aspect of the disclosure, movement in this direction is not affected by the confining polygon, and consequently the cursor may move into selectable region (), the selectable region to the left of selectable region (). NMD operators having this type of drift may be assisted in selecting by confining corners. For example, such an operator, attempting to select selectable region () could move the cursor to location () in selectable region (). As the operator drifts to the left, he can compensate by moving the pointer to the right. Assuming the operator lacks fine motor control, he may overcompensate and indicate a location to the right of the Windows\u00ae cursor clipping rectangle (). However, since the cursor is confined to the confining polygon, the cursor remains in the intended selectable region.","Confining corners facilitate the selection process for some NMD operators. The preferred embodiment of the Confinement aspect of the disclosure creates a corner or virtual corner in each selectable region. A virtual corner is a corner of a selectable region formed by the intersection of two sides of a selectable region both of which abut a confining polygon. For example, corner () in selectable region () abuts the confining polygon both along the top edge of the Windows\u00ae cursor clipping rectangle and along the right side of region (). If an NMD operator drifts from selectable region () to the left into region (), the cursor remains in selectable region (). Thus, drift to the left does not move the cursor out of selectable region (). An operator trying to select selectable region () may overcompensate for drift to the right by moving the pointer to indicate a location in region ().",{"@attributes":{"id":"p-0210","num":"0225"},"figref":["FIG. 32","FIG. 32"],"b":["0602","2112","0660","0660","0604","0608","0610","0612","0608","0652","0632","0634","0636","0638","0640","0642","0644","0646"]},{"@attributes":{"id":"p-0211","num":"0226"},"figref":["FIG. 33","FIG. 33"],"b":["0918","2112","0902","0906","0908","0910","0904"]},"The preferred embodiment of the Confinement aspect of the disclosure will now be described in detail from an implementation perspective. Preferably, the Confinement aspect is implemented by modifications to the access program () described in the detailed description of the Perimeter Menu aspect of the disclosure. The modifications required are: (1) define 20 state machines and 20 respectively associated selectable regions located as shown in ; (2) at initialization time, create a Windows\u00ae region corresponding to the confining polygon described above in the functional description of the preferred embodiment of the Confinement aspect of the disclosure; and (3) modify the procedure CreateEvent so that before generating an EV_CROSS_OUT event, CreateEvent determines whether the current hotspot cursor location intersects the confining polygon, and, if not, set the Windows\u00ae hotspot cursor location to the previous hotspot cursor location and transfers control to the code at the beginning of the CreateEvent procedure which gets the current cursor hotspot location from Windows\u00ae. If the current hotspot cursor location intersects the confining polygon, CreateEvent takes the same action as in the access program ().","C. Dwell","The preferred embodiment of the Dwell aspect of the disclosure will now be described in detail from a functional and implementation perspective. The prototype implements dynamic dwell. The effect of dwelling on a selectable region and its implementation have been described in the detailed description of the Perimeter Menu aspect of the disclosure. Now the effect and implementation of moving the cursor hotspot off a selectable region will be described.","Referring now to , assuming that the state machine associated with the selectable region (\/) is in state ST_LOW_TIDE, that pPocket\u2192Color has been incremented above its initial value, that the cursor hotspot intersected selectable region (\/) at the last expiration of the cursor polling timer, and that the operator initiates movement of the cursor hotspot to the right from selectable region (\/) toward selectable region (\/) so that, when the cursor polling timer next expires, the cursor hotspot is located in area () between visible subregions () and (), the procedure CreateEvent determines that the state machine associated with selectable region (\/) should receive EV_CROSS_OUT, which drives it from ST_LOW_TIDE to ST_LOW_TIDE. The state processing for ST_LOW_TIDE has already been described in the detailed description of the Perimeter Menu aspect of the disclosure.","Assuming that the operator continues to move the cursor hotspot toward selectable region (\/), on the next expiration of the cursor polling timer, the procedure CreateEvent determines that the state machine associated with selectable region (\/) should receive EV_MOVEMENT, which drives it from ST_LOW_TIDE to ST_DECAY. Stepping through the pseudo-code for ST_DECAY, the ST_DECAY state sets pPocket\u2192State to the value stored in pPocket\u2192PreviousState, decrements pPocket\u2192Color by pPocket\u2192Decrement, but not below the value of pPocket\u2192InitialColor, sets pPocket\u2192fPaint to TRUE, sets flnternalEvent to TRUE, and, in this case, sets Event to EV_NULL. Following the break statement, the while fInternalEvent condition is true and another state transition occurs. The new state is found at aPocketFsm[ST_LOW_TIDE][EV_NULL], which equals ST_LOW_TIDE. This path is unlike an ordinary state transition because the starting state is set by ST_DECAY. All transitions from ST_DECAY share this distinction. The state machine executes the code for the new state, ST_LOW_TIDE, which is simply a break statement. The procedure PocketFsm determines that fPaint is TRUE, invalidates the client rectangle and exits. As a result of invalidating the client rectangle, Windows\u00ae () sends a WM_PAINT message to the access program (). On receipt of WM_PAINT, the access program () checks the value of fPaint for each state machine, and if TRUE, sets fPaint to FALSE and redraws the visible subregion of the selectable region associated with that state machine and any menu option located thereon. The color of the redrawn visible subregion is determined by the value of the Color variable for that state machine. After redrawing, control returns to Windows\u00ae ().","If the movement of the cursor hotspot pause between successive samplings of its location, the procedure Create Event will determine that not EV_MOVEMENT, but EV_DECAY, should be sent to the state machine associated with selectable region (\/). Like EV_DECAY, EV_MOVEMENT drives the state machine associated with selectable region (\/) to ST_DECAY. The same state processing as described above for ST_DECAY takes place, including the transition back to ST_LOW_TIDE.","Assuming the operator maintains the cursor hotspot in area (), the state machine associated with selectable region (\/) cycles repetitively through the state transitions from ST_LOW_TIDE to ST_DECAY to ST_LOW_TIDE, driven by the cursor polling timer. With each transition to ST_DECAY, visible subregion () is darkened a bit. The polling timer interval is short enough and the decrement to pPocket\u2192Color is small enough that visible subregion () appears to gradually darken although in fact it progresses rapidly through a series of discrete brightness levels. With each iteration through ST_DECAY, pPocket\u2192Color in decremented until pPocket\u2192Color reaches pPocket\u2192InitialColor.","When the cursor hotspot reaches selectable region (\/), the procedure CreateEvent determines that the state machine associated with selectable region (\/) should receive EV_DECAY, continuing the repetitively cycling through from ST_LOW_TIDE to ST_DECAY to ST_LOW_TIDE, driven by the cursor polling timer. Driven by the same polling timer, the procedure CreateEvent determines that the state machine associated with selectable region (\/) should receive EV_DWELL, driving this state machine through the state transitions described in the detailed description of the Perimeter Menu aspect of the disclosure.","If the operator moves the cursor hotspot from selectable region (\/) back to selectable region (\/), the procedure CreateEvent determines that the state machine associated with selectable region (\/) should receive EV_DWELL, driving this state machine through the state transitions described in the detailed description of the Perimeter Menu aspect of the disclosure.","In the prototype, the selectable regions are shown on a display (). Alternatively, the selectable regions may appear on a static display, or they may be projected on a surface.","In the prototype, the brightness of a visible subregion at any time indicates the progress of the selection of the selectable region including the visible subregion. A brightness close to the initial brightness indicates that a relatively long period of dwelling on this selectable region is required for selection. A brightness close to the brightness just prior to selection indicates that relatively short period of dwelling on this selectable region is required for selection. However, means for indicating an intersection of the location indicated by the movement related signal and a selectable region, or the duration of a period of such an intersection includes, but is not limited to, a change in cursor appearance or location, a change in location, size, shape, hue, brightness, contrast, tone, dithering, pattern, hatching, font or fill of an object on the surface, a display of or change in a graphic on the surface or the removal of a graphic from the surface, a generation of a sound or a change in the pitch or volume of an extant sound, a change in the temperature or surface of a contact area, the pressure exerted by a contact area, or frequency of contact by a contact area, or other suitable means. Any of these indications may be continuous or frequent.","Although dwell is implemented in the prototype using a data value, specifically pPocket\u2192Color, it may be implemented using a signal, for example, voltage or current, varying in response to the intersection and subsequent non-intersection of a location indicated by a pointer and a selectable region. For example, a selectable region may include a detector and coupled electronics or electrical circuitry operative to increase the voltage level of a capacitor. Once elevated, the voltage level may decrease over time. Upon reaching a predetermined threshold, the voltage level may trigger selection.","The prototype allows an operator to make selections by dwell more efficiently than in conventional systems. In the prototype, the brightness of a visible subregion indicates the dwell time required for selection. A practiced operator may accurately estimate when he may plan his next pointer movement, when he may begin moving the pointer and may determine when a bit more exertion will select a selectable region and when it will not. Thus a disabled operator who is fatigued by computer access and can maintain a pointer in a steady position for only brief periods, may optimize his energy expenditure, for example, exerting himself to maintain the cursor on a certain selectable region only when doing so will quickly select the selectable region.","The prototype may increase the independence of a disable individual by allowing him to control devices such as a TV, thermostat and other household appliances. As stated earlier, the Perimeter Menu aspect of the disclosure may be implemented on a general purpose computer system. If the general purpose computer system is coupled to a devices capable of executing commands and the menu hierarchy allows the selection of commands, a disabled operator may select and issue commands to control these devices.",{"@attributes":{"id":"p-0225","num":"0240"},"figref":"FIG. 34","b":["3101","3103","3105","3107","3109","3111","3115","3117","3119","3121","3125","3127","3129","3131","3133","3135","3139","3141","3143","3145","3151","3147"]},{"@attributes":{"id":"p-0226","num":"0241"},"figref":"FIG. 35","b":["3101","3201","3103","3203"]},{"@attributes":{"id":"p-0227","num":"0242"},"figref":"FIG. 36","b":["3350","3301","3303"]},{"@attributes":{"id":"p-0228","num":"0243"},"figref":"FIG. 37","b":["3402","3401"]},{"@attributes":{"id":"p-0229","num":"0244"},"figref":"FIG. 38","b":["2501","2503","2505","2501","2502","2501","2512","2512","2514"]},"Means for determining the difference between two data items or signals and means for totaling two or more data items or signals may each include a processing unit programmed to calculate this difference or total. Alternatively, the difference or total may be determined by electronic, mechanical, optical, or other suitable means.","The two step procedure described earlier for operating conventional menu-driven data entry and order entry systems incorporating pointing at intended selections may be simplified to a single step in accordance with the Dwell aspect of the disclosure. Referring now to , the operator points pointer () at an order entry item. The item brightens responsive to the signals falling on the associated detector, indicating to the operator which order entry item he is dwelling on and his dwell time on that order entry item. When his dwell time equals or exceeds the selection threshold, the order entry item is selected. The operation of such a system is intuitive and may be learned or relearned by pointing and dwelling. No surface is required, unlike a standard mouse. Additionally, an operator seated in the driver's seat of a vehicle is probably right-handed and may be making selections with his left hand, the hand closest to the window in a left-hand drive vehicle. Pointing and maintaining a pointer in a steady position requires less coordination than pointing and clicking.","D. Path Directness","The Path Directness aspect of the disclosure includes several aspects, hereinafter \u201csubaspects\u201d, called Facilitated Dwell, Direction and Intersection, Direction, Appraisal and Drift Attenuation. The preferred embodiment and certain alternative embodiments of each of these subaspects will now be described.","According to the Facilitated Dwell subaspect of the disclosure, the duration of the dwell period required for selection (\u201cselection threshold period\u201d) of a menu option associated with a selectable region varies with the directness of the cursor's path to that selectable region. The preferred embodiment of the Facilitated Dwell subaspect of the disclosure will now be described in detail from a functional perspective using an example illustrated in . In  on display () are defined corridors (), (), (), (), (), () and () lying between the previously selected selectable region () and, respectively, selectable regions (), (), (), (), (), () and (). Each selectable region is associated respectively with a selection threshold period. Each cursor location in a cursor path, for example cursor path (), may slightly decrease one or more the selection threshold periods, except for the selection threshold period associated with the previously selected selectable region, selectable region () in this example. The effect of a cursor location depends, in the preferred embodiment, on whether that cursor location intersects one of the corridors. If it does, as for example location () intersects corridor (), then the selection threshold period associated with the selectable region to which the intersected corridor leads, () in this example, is decreased, preferably to a limit of approximately 20% of the initial value of the selection threshold period so that some period of intersection of the cursor and the intended selectable region is still required for selection. A changed selection threshold period is preferably indicated by a change in the brightness of the selectable region associated with the changed selection threshold period. Thus, when the operator moves the cursor within a corridor, the selectable region associated with the corridor brightens, indicating both the target selectable region the system believes the cursor is headed toward and the changed selection threshold period. When the operator moves the cursor outside a corridor the cursor had previously intersected, the selectable region associated with the previously intersected corridor darkens in accord with the dynamic dwell aspect of the disclosure, indicating both that the system no longer believes the cursor is headed toward that selectable region and the changed selection threshold period. Reducing the selection threshold period facilitates selection of dwell-selectable regions without unduly increasing the likelihood of erroneous selections, since cursor locations within a corridor evidence the operator's intention to select the selectable region associated with the corridor.","Preferably, corridors are hidden from view, but they may be may be shown on the display or shown only at certain times or under certain conditions. Corridors may have fixed boundaries, depending on which selectable region has been selected, or their boundaries may be determined when a starting location, for example, cursor location () in , is known. Corridor shape, size, number and position about the associated selectable region may vary, as illustrated by the alterative embodiments shown in . Where corridors overlap, a cursor location intersecting two or more corridors may be defined to be in a cursor path toward zero, one or more selectable regions associated with the intersected corridors.","The intersection of a cursor location and a corridor is but one means of identifying which one of a plurality of selectable regions is most nearly along a cursor path. A cursor path may be indicated by an intersection of a cursor location and a predetermined region, e.g. a corridor, by a cursor location and a movement related signal from which may be derived a second location, or by two or more successive cursor locations. As used herein, successive locations include a plurality of locations distributed in time. Successive location may be, but need not be, consecutive. Given a location and a movement related signal or two locations, an intention to select a particular selectable region may be inferred, for example, by extrapolation, and the selection thresholds associated with either or both the intended or unintended selectable regions modified accordingly. As an example, assume successive cursor locations are periodically stored in a ring buffer and the magnitude of the angle between two line segments, the first between the oldest cursor location in the ring buffer and a predetermined point in the selectable region, and the second between the oldest cursor location in the ring buffer and the current cursor location, is determined. The selectable region associated with the smallest of these angles may be considered to be the selectable region most nearly along the cursor path indicated by the first line segment.","An alternative means of identifying which one of a plurality of selectable region is most nearly along a cursor path is to determine the ratio of the number cursor locations indicating a selectable region to the total cursor locations in the cursor path.",{"@attributes":{"id":"p-0237","num":"0252"},"figref":["FIG. 42","FIG. 42"],"b":["2410","2406","2408","2404","2410","2412","2408","2404","2414","2410","2412"]},"Another apparatus in accord with the Path Directness aspect of the disclosure is illustrated in . In this Figure, selectable regions (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), () and () circumscribe area (). Area () and optionally the selectable regions include detectors for sensing radiant energy emitted from a pointer () coupled to a body member of the operator. A computer coupled to the detectors determines which selectable region is most nearly along the path indicated by the body member of the operator. Responsive to the indicated path, the embodiment may facilitate the selection of one of the selectable regions by reducing a selection threshold, may select a selectable region upon intersection of the point indicated by the pointer () and a selectable region, or may select a particular selectable region in advance of intersection of the point indicated by the pointer () and the particular selectable region.","A move direction of a body member of an operator may be determined in any way that a cursor path may be determined, including sampling among data indicative of position of the body member. In determining move direction of a body member, data indicative of body member positions may serve the same function as cursor locations in indicating a path toward a selectable region. Position indicating means, used, for example, in indicating a position of the body member, includes each of the means for indicating that a selection event has occurred.","As an alternative to decreasing a selection threshold period, an embodiment may include a plurality of selection thresholds, each associated respectively with a selectable region. One or more of the selection thresholds may be increased when the direction of cursor movement does not indicate a path toward the associated selectable region.","Means for indicating which one of the plurality of selectable regions is most nearly along the cursor path includes each of the means for indicating an intersection of the location indicated by the movement related signal and a selectable region.","According to the Direction and Intersection subaspect of the disclosure, the selection threshold period is completely satisfied in response to a cursor path to a particular selectable region, so that when the cursor intersects the particular selectable region, that region is selected. Preferably, the selection threshold period is completely satisfied in response to a measure of directness of a cursor path to a particular selectable region equalling or exceeding a predetermined measure of directness. In circumstances where the measured directness is less than the predetermined measure, a dwell period is required for selection of the particular selectable region.","According to the Direction subaspect of the disclosure, a selectable region is selected in response to a cursor path to that selectable region, in advance of an intersection of the cursor and that selectable region. Preferably, the selectable region is selected in response to a measure of directness of a cursor path to a particular selectable region equalling or exceeding a predetermined measure of directness. In circumstances where the measured directness is less than the predetermined measure, a dwell period is required for selection of the particular selectable region.","According to the Appraisal subaspect of the disclosure, the directness of a cursor path to a selectable region is measured. Preferably, the means for measuring the directness of a cursor path includes each of the means for identifying which one of a plurality of selectable regions is most nearly along a cursor path. Thus, the particular means for identifying which one of a plurality of selectable regions is most nearly along a cursor path which best correlates with an operator's intended target selectable region may be identified.","As earlier described, some NMD operators have relatively unimpaired directional control, despite having other movement disorders. The Facilitated Dwell, Direction and Intersection, and Direction subaspects of the Path Directness aspect of the disclosure utilize that capability for computer access. Specifically, the ability of an operator to move a cursor in a direct path toward a selectable region is used to facilitate selection of that selectable region. The selectable region is selected more quickly than in conventional systems utilizing selection by dwell, increasing operator productivity. In addition, when selectable regions are located in accordance with the Perimeter Menu aspect of the disclosure, a cursor path toward a selectable region is often unambiguous, since usually there is only one selectable region along a cursor path, and a large rectangular area on the display is available for the output of an application program and is not obstructed by the menu. In certain embodiments in accordance with the Facilitated Dwell, Direction and Intersection, and Direction subaspects of the Path Directness aspect of the disclosure, the operator may receive an indication of which selectable region the system believes the operator is moving the cursor toward. The operator may adjust the cursor path in response to this feedback and thus move the pointer more accurately. Additionally, in embodiments in accordance with both the Facilitated Dwell subaspect of the Path Directness aspect of the disclosure and the Dwell aspect of the disclosure, the operator may receive an indication of the dwell time required to select the selectable region most nearly along the cursor path as the required dwell time changes in response to the cursor path.","The preferred embodiment of the Drift Attenuation subaspect of the disclosure will now be described in detail from a functional perspective using an example illustrated in .  depicts the upper right corner of a display () having two selectable regions () and () thereon. Assuming, for purposes of this example, that a movement related signal indicates the path shown from point () to point () (\u201cfirst segment\u201d) at a relatively high velocity and from point () to point () (\u201csecond segment\u201d) at a relatively low velocity. The path of the first segment is relatively direct, the path of the second segment, relatively meandering. During receipt of the movement related signal for the first segment, the cursor preferably tracks the exact path indicated by the movement related signal. During receipt of the movement related signal for the second segment, the movement of the cursor is attenuated, preferably so that the cursor does not leave selectable region () until it is selected.","Many NMD operators are unable to cleanly stop movement of a body member, resulting in a relatively slow or meandering path being indicated by the movement related signal. According to the Drift Attenuation subaspect of the disclosure, drift, that is, unintentional movement, indicated by the movement related signal following intentional movement is distinguished from the intentional movement, and cursor movement responsive to the drift is attenuated relative to cursor movement responsive to intentional movement. Thus unintentional movements of NMD operators are filtered so that the cursor is displayed closer to the location intended by the operator and drifting of the cursor into a nearby, but unintended, selectable region, is avoided, resulting in fewer errors due to unintended selections.","The preferred embodiment of each subaspect of the Path Directness aspect of the disclosure will now be described in detail from an implementation perspective. Preferably, the Facilitated Dwell subaspect is implemented by modifications to the access program () described in the detailed description of the Perimeter Menu aspect of the disclosure. The modifications required are: (1) Additional state processing should be added to ST_SELECTED to create a Windows\u00ae region in the shape of a corridor starting a predetermined distance from the selected selectable region to each of the other selectable regions; (2) The event data structure should be expanded to accommodate an event for a selectable region along a cursor path; (3) The procedure CreateEvent should be changed so that, before setting an event to EV_DECAY or EV_MOVEMENT, a test is made for the intersection of the cursor hotspot and each corridor, and, on finding such an intersection, a new event, EV_CORRIDOR, is stored in the event data structure indicated by pEvent for the selectable region associated with the intersected corridor; (4) A column should be added to the state table so that each state which in the prototype may receive either EV_MOVEMENT or EV_DECAY will on receipt of EV_CORRIDOR drive that state machine to ST_CORRIDOR; (5) An additional variable, Corridorincrement, preferably having an initial value one half the value of Increment, should be added the set of data associated with each state machine; and (6) A new state, ST_CORRIDOR, should be added to the procedure PocketFsm. The pseudo-code for state processing in ST_CORRIDOR follows:",{"@attributes":{"id":"p-0249","num":"0264"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"case ST_CORRIDOR:",{}]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002\/*\u2002set state to previous state","*\/"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002\/*\u2002in preparation for the next","*\/"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002\/*\u2002state transition","*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003\u2002set pPocket->State to pPocket->PreviousState"]},{"entry":[{},"\u2003\u2003\u2003\u2002increment pPocket->Color by"]},{"entry":[{},"\u2003\u2003\u2003\u2002pPocket->CorridorIncrement, but not above"]},{"entry":[{},"\u2003\u2003\u2003\u2002pPocket->InitialColor plus 80% of the difference"]},{"entry":[{},"\u2003\u2003\u2003\u2002between pPocket->CrestTide and"]},{"entry":[{},"\u2003\u2003\u2003\u2002pPocket->InitialColor"]},{"entry":[{},"\u2003\u2003\u2003\u2002if pPocket->Color was changed"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003set pPocket->fPaint to TRUE"]},{"entry":[{},"\u2003\u2003\u2003\u2002set fInternalEvent to TRUE"]},{"entry":[{},"\u2003\u2003\u2003\u2002set Event to EV_NULL"]},{"entry":[{},"\u2003\u2003\u2003\u2002break"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"An example of the selection of selectable region () in accord with the preferred embodiment of the Facilitated Dwell subaspect of the disclosure will now be described with reference to , assuming that the prototype has been modified as described, that the operator has just selected selectable region (), that all state machines are in state ST_RESET, and that the operator moves the cursor hotspot from a location inside selectable region () to location (), a location just outside selectable region (). On receipt of the next WM_TIMER message, procedure PocketFsm is called with the indicator for the state machine associated with selectable region () and with event EV_CROSS_OUT. Event EV_CROSS_OUT drives this state machine from its current state, ST_RESET, to ST_EBB_TIDE. The pseudo-code for ST_EBB_TIDE in procedure PocketFsm is a break statement, indicating that no state specific action is taken at this time, other than the transition to ST_EBB_TIDE. Control returns to Windows\u00ae ().","Shortly before or shortly after the state machine associated with selectable region () receives EV_CROSS_OUT all other state machines each receive EV_MOVEMENT and each makes the transition from ST_RESET to ST_EBB_TIDE.","Assume that the operator moves the cursor hotspot along path () toward location (), a location outside all corridors, and then the next WM_TIMER message is received. All state machines receive EV_MOVEMENT and are driven from ST_EBB_TIDE to ST_DECAY to ST_EBB_TIDE. The state processing associated with these states has been described in the description of the Perimeter Menu aspect of the disclosure.","Assuming that the operator moves the cursor hotspot along path (), the transition from ST_EBB_TIDE to ST_DECAY to ST_EBB_TIDE is repeated every 54 milliseconds for each state machine until the operator moves the cursor hotspot beyond location (). At this time the procedure CreateEvent determines that the cursor hotspot intersects corridor () and that consequently EV_CORRIDOR should be sent to the state machine associated with selectable region (). EV_CORRIDOR drives this state machine from ST_EBB_TIDE to ST_CORRIDOR. Stepping through the pseudo-code for ST_CORRIDOR, the ST_CORRIDOR state sets pPocket\u2192State to the value stored in pPocket\u2192PreviousState, increments pPocket\u2192Color by pPocket\u2192Corridorincrement, but not above pPocket\u2192InitialColor plus 80% of the difference between pPocket\u2192CrestTide and pPocket\u2192InitialColor, sets pPocket\u2192fPaint to TRUE, sets fInternalEvent to TRUE, and sets Event to EV_NULL. Following the break statement, the while fInternalEvent condition is true and another state transition occurs. The new state is found at aPocketFsm[ST_EBB_TIDE][EV_NULL], which equals ST_EBB_TIDE. This path is unlike an ordinary state transition because the starting state is set by ST_CORRIDOR. All transitions from ST_CORRIDOR share this distinction. The state machine executes the code for the new state, ST_EBB_TIDE, which is simply a break statement. The procedure PocketFsm determines that fPaint is TRUE, invalidates the client rectangle and exits. As a result of invalidating the client rectangle, Windows\u00ae () sends a WM_PAINT message to the access program (). On receipt of WM_PAINT, the access program () checks the value of fPaint for each state machine, and if TRUE, sets fPaint to FALSE and redraws the visible subregion of the selectable region associated with that state machine and any menu option located thereon. The color of the redrawn visible subregion is determined by the value of the Color variable for that state machine. The incremented value of pPocket\u2192Color results in a slight brightening of selectable region () and reduces the difference between pPocket\u2192Color and pPocket\u2192CrestTide, corresponding to the dwell period required to select the associated selectable region. After redrawing, control returns to Windows\u00ae ().","Shortly before or shortly after the state machine associated with selectable region () receives EV_CORRIDOR, all other state machines each receive EV_MOVEMENT and each makes the state transitions from ST_EBB_TIDE to ST_DECAY to ST_EBB_TIDE.","This scenario is repeated at 54 millisecond intervals while the cursor hotspot travels along path () to location (), a location intersecting corridor (). Between this location () and location (), a location intersecting corridor (), along path (), the procedure CreateEvent determines that all state machines should receive EV_MOVEMENT, driving each of them from their current state to ST_DECAY and back to their current state. As described in the example in the detailed description of the Perimeter Menu aspect of the disclosure, ST_DECAY state processing darkens the selectable region associated with the state machine, but not below a predetermined brightness represented by the variable InitialColor. Thus selectable region () darkens when the cursor hotspot no longer intersects corridor (). From location () to location (), the procedure CreateEvent determines that the state machine associated with selectable region () should received EV_CORRIDOR and all other state machines EV_MOVEMENT. Consequently, selectable region () gradually brightens up to a ceiling represented by pPocket\u2192InitialColor plus 80% of the difference between pPocket\u2192CrestTide and pPocket\u2192InitialColor. The duration of dwell time required for selection of selectable region () is thus reduced to approximately 20% of the dwell period required without Facilitated Dwell.","Preferably, the Direction and Intersection subaspect of the disclosure is implemented by making the changes to the prototype described for the Facilitated Dwell subaspect, except that, in incrementing pPocket\u2192Color in ST_CORRIDOR, the upper limit for pPocket\u2192Color in ST_CORRIDOR state processing is pPocket\u2192CrestTide minus pPocket\u2192Increment. Assuming these changes, a selectable region whose associated Color variable is at this upper limit is selected during processing of the WM_TIMER message immediately following the intersection of the cursor hotspot and the selectable region.","Preferably, the Direction subaspect of the disclosure is implemented by making the changes to the prototype described for the Direction and Intersection subaspect of the disclosure, except that (1) the corridors are narrow, as illustrated in ; and (2) the pseudo-code for state processing in ST_CORRIDOR is as follows:",{"@attributes":{"id":"p-0258","num":"0273"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"case ST_CORRIDOR:",{}]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002\/*\u2002set state to previous state","*\/"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002\/*\u2002in preparation for the next","*\/"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002\/*\u2002state transition","*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003\u2002set pPocket->State to pPocket->PreviousState"]},{"entry":[{},"\u2003\u2003\u2003\u2002increment pPocket->Color by"]},{"entry":[{},"\u2003\u2003\u2003\u2002pPocket->CorridorIncrement but not above"]},{"entry":[{},"\u2003\u2003\u2003\u2002pPocket->Ceiling"]},{"entry":[{},"\u2003\u2003\u2003\u2002if pPocket->Color was changed"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003set pPocket->fPaint to TRUE"]},{"entry":[{},"\u2003\u2003\u2003\u2002set fInternalEvent to TRUE"]},{"entry":[{},"\u2003\u2003\u2003\u2002if pPocket->Color was changed from a value below"]},{"entry":[{},"\u2003\u2003\u2003\u2002pPocket->CrestTide to a value greater than or"]},{"entry":[{},"\u2003\u2003\u2003\u2002equal to"]},{"entry":[{},"\u2003\u2003\u2003\u2002pPocket->CrestTide"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003set Event to EV_STEP_UP"]},{"entry":[{},"\u2003\u2003\u2003\u2002else"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003set Event to EV_NULL"]},{"entry":[{},"\u2003\u2003\u2003\u2002break"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"State ST_CORRIDOR may now generate the internal event EV_STEP_UP, as state ST_DWELL does in the detailed description of the Perimeter Menu aspect of the disclosure. A state machine in state ST_EBB_TIDE having a Color variable equal to or exceeding the CrestTide variable, will transition via PocketFsm[ST_EBB_TIDE][EV_STEP_UP] to ST_SELECTED, and perform the ST_SELECTED state processing described in the detailed description of the Perimeter Menu aspect of the disclosure.","Preferably, the Appraisal subaspect of the disclosure is implemented by making the changes to the prototype described for the Facilitated Dwell subaspect, except that (1) the corridors are visible on the display (), (2) one of the selectable regions is designated to be the target selectable region and this is indicated to the operator, (3) cursor locations are stored in memory (), and (4) following an intersection of the cursor hotspot and the target or selection of a selectable region other than the target, path directness is measured in accordance with the stored cursor locations.","The preferred embodiment of the Drift Attenuation aspect of the disclosure will now be described in detail from an implementation perspective. Preferably, the Drift Attenuation aspect is implemented by modifications to the access program () described in the detailed description of the Perimeter Menu aspect of the disclosure, modified as described above in the description of the implementation of the preferred embodiment of the Facilitated Dwell subaspect of the disclosure and further modified as follows: (1) add two booleans to the data set associated with each state machine, one called fDirectPath, the other fAttenuateDrift, and initialize each of them in all state machines to FALSE; (2) in both ST_DECAY and ST_CORRIDOR, set both pPocket\u2192fDirectPath and pPocket\u2192fAttenuateDrift to FALSE; (3) append to ST_ENTRY state processing corresponding to the following pseudo-code:",{"@attributes":{"id":"p-0262","num":"0277"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if pPocket->Color equals or exceeds"]},{"entry":[{},"(pPocket->InitialColor +\u2002(0.5 *\u2002\u2009(pPocket->CrestTide \u2212"]},{"entry":[{},"pPocket->InitialColor)))"]},{"entry":[{},"set pPocket->fDirectPath to TRUE"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0263","num":"0278"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if the present cursor position intersects the edge of the"]},{"entry":[{},"Windows\u2009\u00ae cursor clipping rectangle and"]},{"entry":[{},"pPocket->fDirectPath is TRUE"]},{"entry":[{},"\u2003\u2003\u2009set pPocket->fAttentuateDrift to TRUE"]},{"entry":[{},"if pPocket->fAttentuateDrift is TRUE"]},{"entry":[{},"\u2003\u2003\u2009store the difference in each of the x and y"]},{"entry":[{},"\u2003\u2003\u2009coordinates (\u201cdelta\u201d) between consecutive cursor"]},{"entry":[{},"\u2003\u2003\u2009locations in a circular buffer accommodating the"]},{"entry":[{},"\u2003\u2003\u2009last ten deltas, overwriting the oldest delta with"]},{"entry":[{},"\u2003\u2003\u2009the newest delta"]},{"entry":[{},"\u2003\u2003\u2009if ten deltas have been accumulated"]},{"entry":[{},"\u2003\u2003\u2003\u2002calculate the average acceleration indicated by"]},{"entry":[{},"\u2003\u2003\u2003\u2002the last ten deltas"]},{"entry":[{},"\u2003\u2003\u2003\u2002if the average acceleration is negative"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002\u2009set the cursor at the location one half the"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002\u2009distance between the current cursor location"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002\u2009and the previous cursor location"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002\u2009display the cursor at this new cursor"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002\u2009location"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"The preferred embodiment of the Intersection aspect of the disclosure will now be described in detail from a functional perspective using an example depicted in .  shows the display () of a general purpose computer system ( in ) to which is coupled a pointer (). Eight regions are delimited with respect to the display () and together circumscribe region () on the display (). Four of these regions, (), (), (), and (), are entirely on the display (). Each of the other four regions respectively includes both a visible subregion ((), (), (), and ()) on the display () and an invisible subregion ((), (), (), and ()) adjacent and outside the display (). Assume, for example, that the pointer is indicating location () on the display () and that the operator moves the pointer so that the location indicated by the pointer first intersects one of the regions at location () in region (). Upon this intersection, the display changes to that shown in .  depicts a selectable region consisting of the union of invisible subregion () and visible subregion (), hereinafter referred to as selectable region (\/). Selectable region (\/) is associated with menu option \u201csumac\u201d. In the preferred embodiment, the operator may select menu option \u201csumac\u201d by dwelling on any part of the selectable region for the selection threshold period. Assuming, for example, that instead of moving the pointer from a position indicating location () to location (), the operator instead moves the pointer so that the location indicated by the pointer first enters one of the regions at location () in region (\/). Upon this intersection, the display changes to that shown in .  depicts a selectable region consisting of the union of invisible subregion () and visible subregion (), hereinafter referred to as selectable region (\/). Selectable region (\/) is associated with menu option \u201cvort<space>x\u201d. In the preferred embodiment, the operator may select menu option \u201cvort<space>x\u201d by dwelling on any part of the selectable region for the selection threshold period.","In the preferred embodiment, each of the other seven regions shown in  is associated with a selectable region and each selectable region is associated with a menu option. The menu options shown in , in addition to \u201csumac\u201d and \u201cvort<space>x\u201d are \u201cwizen\u201d, \u201cbackspace\u201d, \u201cwords\u201d, \u201ctalk\u201d, ldhbfk\u201d and \u201cypgqj,\u201d. The operator may select the menu option associated with any one of the selectable regions by moving the location indicated by the pointer from circumscribed region () into the region associated with the selectable region and then dwelling on the selectable region for the selection threshold period. Each selectable region preferably includes all the area of its associated region.","An operator having impaired ability to maintain a body member in a steady position but who can control the point at which the location indicated by a body member enters a region may, in accord with the Intersection aspect of the disclosure, use his relatively unimpaired motor capability to selectively enlarge a selectable region or determine which of two or more selectable regions will occupy a predetermined area, thus making it easier for him to select. If the general purpose computer system of the preferred embodiment is coupled to a speech synthesizer and the menu options are letters or words, an operator with impaired speech may select or spell words and speak them.",{"@attributes":{"id":"p-0267","num":"0282"},"figref":["FIGS. 47 and 48","FIG. 47","FIG. 47","FIG. 48"],"b":["2112","2116","1404","1402","1402","1402","1404","1404","1406","1404","2112","1402","1404","1402","1406","1402","1404","1404","1406"]},"The preferred embodiment of the Intersection aspect will now be described in detail from an implementation perspective. The Intersection aspect is preferably implemented by modifications to the access program () described above in the detailed description of the Perimeter Menu aspect of the disclosure. The modifications are: (1) add a row to the state table aPocketFsm at row index  for a new state, ST_EXIT and initialize the value of aPocketFsm[ST_EXIT][EV_NULL] to 4, the value of ST_LOW_TIDE; (2) at initialization time, change aPocketFsm[ST_LOW_TIDE][EV_CROSS_OUT] to 18, the value of ST_EXIT; (3) at initialization time for each state machine, (a) if the visible subregion associated with the state machine does not abut the edge of the display, set fInterior to TRUE, otherwise set fInterior to FALSE; (b) initialize iAdjacentPocket to the index of the state machine associated with the adjacent region. For example, assuming the index of the state machine associated with region (\/) in  is 2 and the index of the state machine associated with region () in  is 3, iAdjacentPocket in the data set associated with the state machine associated with region (\/) is initialized to 3 and iAdjacentPocket in the data set associated with the state machine associated with region () is initialized to 2; (c) initialize the second array of points to define the boundaries of the region associated with the selectable region associated with each state machine, for example, region (), and initialize the first array of points to define the boundaries of the visible subregion of the selectable region associated with the state machine, for example, visible subregion (); (4) remove creation of Windows\u00ae regions corresponding to visible subregions from the access program () initialization; (5) append to ST_ENTRY state processing corresponding to the following pseudo-code:",{"@attributes":{"id":"p-0269","num":"0284"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if pPocket->fInterior equals TRUE"]},{"entry":[{},"\u2003\u2002if pPocket->hRegion is not NULL"]},{"entry":[{},"\u2003\u2003\u2003delete the Windows\u2009\u00ae region having the handle"]},{"entry":[{},"\u2003\u2003\u2003pPocket->hRegion"]},{"entry":[{},"\u2003\u2002create a Windows\u2009\u00ae region having the boundaries"]},{"entry":[{},"\u2003\u2002defined by the second array of points associated"]},{"entry":[{},"\u2003\u2002with this state machine and set pPocket->hRegion to"]},{"entry":[{},"\u2003\u2002the handle to this region"]},{"entry":[{},"\u2003\u2002set pPocket->fPaint to TRUE"]},{"entry":[{},"send EV_RESET to all state machines except this one and"]},{"entry":[{},"the state machine having the index"]},{"entry":[{},"pPocket->iAdjacentPocket"]},{"entry":[{},"set pAdjacentPocket to point to the data set associated"]},{"entry":[{},"with the state machine having the index"]},{"entry":[{},"pPocket->iAdjacentPocket"]},{"entry":[{},"delete the Windows\u2009\u00ae region having the handle"]},{"entry":[{},"pAdjacentPocket->hRegion"]},{"entry":[{},"set pAdjacentPocket->hRegion to NULL"]},{"entry":[{},"set pAdjacentPocket->fPaint to TRUE"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0270","num":"0285"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if pPocket->hRegion is not NULL"]},{"entry":[{},"\u2003\u2002delete the Windows\u2009\u00ae region having the handle"]},{"entry":[{},"\u2003\u2002pPocket->hRegion"]},{"entry":[{},"create a Windows\u2009\u00ae region having the boundaries defined by"]},{"entry":[{},"the second array of points associated with this state"]},{"entry":[{},"machine and set pPocket->hRegion to the handle to this"]},{"entry":[{},"region"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"An example of the selection of selectable region in accord with the Intersection aspect of the disclosure will now be described with reference to . Following initialization, assume that the operator moves the pointer () from a position indicating location () toward location () in . At the next expiration of the cursor polling timer, the procedure CreateEvent sends an EV_MOVEMENT event to the state machine associated with the selectable region associated with the menu option \u201csumac\u201d. The event EV_MOVEMENT drives this state machine from its current state, ST_RESET, to ST_EBB_TIDE. The pseudo-code for ST_EBB_TIDE in procedure PocketFsm is a break statement, indicating that no state specific action is taken at this time, other than the transition to ST_EBB_TIDE. Control returns to Windows\u00ae (). At the expiration of the cursor polling timer after the location indicated by the pointer reaches location (), the procedure CreateEvent sends event EV_DWELL to the state machine associated with the selectable region associated with the menu option \u201csumac\u201d. EV_DWELL drives this state machine from ST_EBB_TIDE to ST_ENTRY. Following the pseudo-code for ST_ENTRY state processing shown above and in the Procedure PocketFsm, fInternalEvent is set to TRUE, Event is set to EV_NULL, the Windows\u00ae region corresponding to region (), ie. the Windows\u00ae region having the handle pPocket\u2192hRegion, is deleted and a new Windows\u00ae region having the boundaries indicated in the first array of points, ie. visible subregion () in , is created and the handle stored in pPocket\u2192hRegion. pPocket\u2192fPaint is set to TRUE, EV_RESET is sent to state machines associated with regions other than () and (\/). Data in the data set associated with the adjacent region (\/) is now modified. The Windows\u00ae region corresponding to region (\/) is deleted, hRegion for the state machine associated with that region is set to NULL and fPaint associated with that state machine is set to TRUE. The event EV_NULL drives the state machine associated with selectable region (\/) to ST_LOW_TIDE. The pseudo-code for ST_LOW_TIDE is only a break statement, so there is no state specific action for ST_LOW_TIDE other than entry into this state. pPocket-fPaint is TRUE so the client rectangle is invalidated, resulting in the redrawing of Windows\u00ae regions associated with state machines having fPaint equal to TRUE so that the display () appears as shown in . Control returns to Windows\u00ae ().","Dwelling at any location within selectable region (\/) now causes the procedure CreateEvent to send EV_DWELL to the state machine associated with this selectable region. Selection of this selectable region proceeds as described above in the detailed description of the Perimeter Menu aspect of the disclosure.","Assuming the operator moves the location indicated by the pointer out of selectable region (\/) prior to selection, the procedure CreateEvent sends the event EV_CROSS_OUT to the state machine associate with that selectable region, driving it to ST_EXIT. The state processing for ST_EXIT causes the display () to change to that shown in .","F. Alignment","The embodiment of the Alignment aspect of the disclosure as implemented in the prototype will now be described in detail from a functional and implementation perspective using an example depicted in . Each of these Figures depicts the upper right corner of a display () having two visible subregions on the display. In these Figures, no subregions outside the display () are shown. Alignment is achieved in several steps and requires operator interaction with the apparatus. For purposes of this example, assume that  depicts the upper right corner of the display (), that an operator, fitted with a head pointer, desires to keep the cursor on the display directly in his line of sight and that the location indicated by the pointer is presently 15 degrees to the right of the location of the arrow cursor (). The operator now dwells on selectable region () for a predetermined period (\u201cthe lock threshold\u201d) which preferably is significantly greater than the selection threshold period. The apparatus responds to this extended dwell period by changing the display to that shown in . The arrow cursor is removed from the display and the lock icon () is displayed in a predetermined location of the intersected selectable region (\u201clockspot\u201d) on the display. The lock icon remains on the lockspot for a predetermined period (\u201cthe lock period\u201d); it does not move responsive to the operator's head movement. While the lock icon is displayed, the operator turns his head, bringing his line of sight into alignment with the lockspot. At the expiration of the lock period, the apparatus changes the display to that shown in . The lock icon is erased and the arrow cursor appears in the lockspot, which is where the operator is now looking. The arrow cursor moves in response to the operator's head movement.","An operator who loses alignment between the location indicated by his pointer and the cursor may thus initiate an alignment sequence, and then, by moving his head or other body member when the prototype indicates he should do so by displaying the lock icon, regain alignment. That the lock icon is displayed indicates to the operator that he can align his head or other body member. The position of the lock icon indicates to the operator the location on the display with which he should align his head or other body member. This is the location where the arrow cursor will appear at the expiration of the lock period.","The Alignment aspect will now be described in detail from an implementation perspective as implemented in the prototype. The Alignment aspect of the disclosure is implemented as an integral part of the state machine described in the detailed description of the Perimeter Menu aspect of the disclosure, using the same state machines and initialization, with the exception that aPocketFsm[ST_CREST_TIDE][EV_CEILING] is changed from 9, the value of ST_DWELL, to 14, the value of ST_BEGIN_LOCK. The operator initiates the alignment process by moving the cursor so that the cursor hotspot intersects a selectable region. As an example,  shows the arrow cursor () intersecting selectable region (). The operator then dwells on the selectable region for the lock threshold, preferably at least one second greater than the selection threshold period. This operator action causes the state machine associated with the intersected selectable region to reach state ST_CREST_TIDE. On receipt of the first WM_TIMER message following entry into state ST_CREST_TIDE, the procedure CreateEvent creates event EV_CEILING, which drives the state machine from state ST_CREST_TIDE to state ST_BEGIN_LOCK. The state processing within state ST_BEGIN_LOCK beeps, sets the system cursor location to the selectable region's lockspot, sets the system cursor to null erasing the arrow cursor, displays a the lock icon ( in ) on the selectable region's lockspot and initializes the global variable iLockCursor to the number of expirations of the cursor polling timer corresponding to the period of time the cursor will be locked (the \u201clock period\u201d) configured by the operator, preferably two seconds, and control is returned to Windows\u00ae (). Following the next expiration of the cursor polling timer, the procedure CreateEvent may generate an event EV_DECAY, EV_DWELL, EV_CROSS_OUT, EV_MOVEMENT or EV_CEILING. Each of these events drives the state machine from state ST_BEGIN_LOCK to state ST_LOCK. Within state ST_LOCK the system cursor is moved to the selectable region's lockspot and iLockCursor is decremented. Then it is determined whether iLockCursor equals zero. If not, control returns to Windows\u00ae () for another iteration through ST_LOCK. During the lock period, the system cursor is moved to the lockspot upon every expiration of the cursor polling timer, thus inhibiting movement of the cursor from the lockspot so that, during the lock period, the operator may move the location indicated by the pointer while the lock icon remains on or very close to the selectable region's lockspot. When, eventually, iLockCursor is decremented to zero, the global Event is set to EV_NULL and fInternalEvent is set to TRUE so that another state transition occurs immediately. This transition drives the state machine from state ST_LOCK to state ST_END_LOCK. Within state ST_END_LOCK, the lock icon is erased, Windows\u00ae () is directed to display the arrow cursor () at the lockspot, as shown in , the fPaint flag associated with the intersected selectable region is set to TRUE so that the selectable region will be drawn, restoring the background behind the erased lock icon. Assuming the cursor hotspot remains on the selectable region for another 54 milliseconds, CreateEvent generates EV_DWELL, which drives the state machine to ST_DISCARD. Referring to the pseudo-code in PocketFsm, ST_DISCARD state processing sets State to PreviousState, returning the state machine to ST_END_LOCK and in effect, discarding the last event. Following the expiration of the cursor polling timer after the operator moves the cursor out of the selectable region it presently intersects, the procedure CreateEvent generates an event EV_CROSS_OUT which drives the state machine from state ST_END_LOCK to state ST_SELECT_AND_OUT. The access program () performs the state processing for state ST_SELECT_AND_OUT and subsequent states as previously described in the description of the Perimeter Menu aspect of the disclosure.","In the prototype, the operator may initiate alignment by depressing any character key on the keyboard. On receipt of a WM_CHAR message from Windows\u00ae (), the access program () removes the arrow cursor from the display and displays the lock icon at a predetermined location on the display. In the prototype, the predetermined location is the center of the display (). After a predetermined period, two seconds in the prototype, the lock cursor icon is erased and the arrow cursor displayed at the predetermined location.","In the prototype, the cursor is automatically centered if the cursor hotspot does not move for two minutes. Lack of movement of the cursor hotspot is detected in the procedure CreateEvent, which generates the event EV_IDLE_TIMEOUT for all state machines. The state processing of each state machine on receipt of EV_IDLE_TIMEOUT depends upon its current state. State machines in states ST_INITIAL and ST_RESET stay in those states. State machines in all other states in which an external event can be received are driven to ST_IDLE. Referring to the pseudo-code in PocketFsm, ST_IDLE state processing moves the cursor to the center of the display, sets fInternalEvent to TRUE and sets Event to EV_NULL. PocketFsm[ST_IDLE][NULL] equals 3, the value of ST_RESET. The access program () performs the state processing for the ST_RESET and subsequent states as described in the description of the Perimeter aspect of the disclosure.","G. Length Order","The preferred embodiment of the Length Order aspect of the disclosure will now be described in detail from a functional and implementation perspective using an example depicted in  and described in the detailed description of the Location Indication aspect of the disclosure. Assume, for purposes of this example, that the operator has previously selected the letter \u201cs\u201d. In the preferred embodiment, the string \u201cs\u201d is passed from the access program ( in ) via the Windows\u00ae Dynamic Data Exchange (\u201cDDE\u201d) interface to a database program ( in ), preferably the FoxPro for Windows\u00ae version 2.6 program, available from Microsoft Corporation, Redmond, Wash., USA. The FoxPro program looks up the record having the index \u201cs\u201d in a database composed of 26 letters, one for each letter of the alphabet. Each record includes one field for a letter of the alphabet and 12 fields containing the 12 most frequently used English words beginning with that letter. The 12 words in the record are ordered primarily by length, determined by the number of letters in each word, and secondarily by alphabetic order. The FoxPro program returns these 12 words to the access program () and these are displayed on the display () as named menu options. The twelve named menu options, ordered as described and depicted in , are \u201cso\u201d, \u201csay\u201d, \u201cshe\u201d, \u201csaid\u201d, \u201cshow\u201d, \u201csome\u201d, \u201csuch\u201d, \u201cstate\u201d, \u201cschool\u201d, \u201csocial\u201d, \u201cservice\u201d, and \u201cstudent\u201d. Preferably, only the root form of inflected forms of words which can be created through available suffixes (\u201croot word\u201d) may be displayed as named menu options, so that the limited number of available menu options in combination with the apparatus' capability to add suffixes offers a large number of inflected forms.","Words which may be named menu options in the same menu may be ordered by any suitable method. Preferably ordering is done by an ordering program operating on a corpus of text or speech including text or speech produced by individuals whose age, sex, geographic location and disability are the same as or similar to that of the operator. The ordering program determines the frequency of use of root words in the corpus, selects the twelve most common root words, beginning with every possible combination of one, two and three letters, and stores them in three FoxPro databases for one, two and three letter word beginnings respectively, the words in each record ordered as described above. Ordering the words prior to a request minimizes the delay between the operator's selection of a letter or letters and the display of the named menu options. Preferably, the ordering program also creates a database of records for root words beginning with four or more letters. Each record includes the words and its frequency of use in the corpus. When the operator selects four or more letters consecutively, the access program () requests via DDE that the FoxPro program () look up words starting with four or more letters in the database for words beginning with four or more letters, select the 12 most frequently used words matching the selected letters, order them as described above, and return them to the access program ().","An operator searching named menu options for a desired menu option may start his search in the area on the display most likely to contain the desired menu option. Upon comparison of the length of the desired menu option to a displayed menu option, the operator may determine whether to continue his search from the displayed menu option toward the front of the list or toward the rear of the list, or to jump to another displayed menu option in the list Further, he may make this determination more quickly than if the displayed menu options were sorted conventionally. The reduced menu option search time increases the operator's productivity with respect to conventional menu interfaces.","H. Location Indication","The preferred embodiment of the Location Indication aspect of the disclosure will now be described in detail from a functional perspective using an example depicted in .  shows the display () of a general purpose computer system ( in ) having thereon eight selectable regions, each associated respectively with a menu option. Each of the eight selectable regions consists of the union of a visible subregion on the display () and an invisible subregion (not shown) located outside the display () and adjacent the visible subregion. Selectable region () is associated with menu option \u201cso\u201d, selectable region () with menu option \u201csay\u201d, selectable region () with menu option \u201cshe\u201d, selectable region () with menu option \u201csuffixes\u201d, selectable region () with menu option \u201cwords\u201d, selectable region () with menu option \u201csome\u201d, selectable region () with menu option \u201cshow\u201d and selectable region () with menu option \u201csaid\u201d. Also shown on the display () are 12 indicating regions, each associated respectively with a menu option. Indicating region () is associated with menu option \u201cso\u201d, indicating region () with menu option \u201csay\u201d, indicating region () with menu option \u201cshe\u201d, indicating region () with menu option \u201csome\u201d, indicating region () with menu option \u201cshow\u201d, indicating region () with menu option \u201csaid\u201d, indicating region () is associated with menu option \u201csuch\u201d, indicating region () with menu option \u201cstate\u201d, indicating region () with menu option \u201cschool\u201d, indicating region () with menu option \u201cstudent\u201d, indicating region () with menu option \u201cservice\u201d and indicating region () with menu option \u201csocial\u201d. Each indicating region is located on the display () in the region () circumscribed by the selectable regions. In accord with the Location Indication aspect of the disclosure, the location of each of the indicating regions (), (), (), (), () and () indicates the location of each of the selectable regions associated with the menu option associated with the indicating region. These selectable regions, respectively, are (), (), (), (), () and ().","In the preferred embodiment, selection of menu option \u201cwords\u201d causes selectable region () to be associated with menu option \u201csuch\u201d instead of menu option \u201cso\u201d, selectable region () to be associated with menu option \u201cstate\u201d instead of menu option \u201csay\u201d, selectable region () to be associated with menu option \u201cschool\u201d instead of menu option \u201cshe\u201d, selectable region () to be associated with menu option \u201cstudent\u201d instead of menu option \u201csome\u201d, selectable region () to be associated with menu option \u201cservice\u201d instead of menu option \u201cshow\u201d, and selectable region () to be associated with menu option \u201csocial\u201d instead of menu option \u201csaid\u201d. In the preferred embodiment, following the selection of menu option \u201cwords\u201d, the menu option newly associated with each selectable region is displayed on that selectable region (not shown). Following the selection of menu option \u201cwords\u201d, indicating regions (), (), (), (), () and () each indicate the location of each of the selectable regions associated with the menu option associated with the indicating region.","The indicating regions and the menu options displayed thereon in  are disproportionately large relative to the rest of . They are approximately 1.5 times their proportionate size. They are represented as shown in  in compliance with Patent Cooperation Treaty Rules requiring a minimum size for letters in figures.","In the preferred embodiment of the Perimeter Menu aspect of the disclosure, all the menu options displayed on the selectable regions cannot be seen in a glance by many operators. However, when the displayed menu options are displayed on the indicating regions, for example, as shown in , the displayed menu options can be seen in a glance, facilitating searching of the menu by the operator for his intended menu option. Since the location of each selectable region is indicated by the location of the associated indicating region, the operator may point to the intended selectable region without searching it out or pausing to verify that the menu option associated with a selectable region is the menu option he desires. The frequent operator of such a menu interface may habituate the process of selecting an intended menu option so he can focus his attention on another task while selecting the option, for example, planning his next interaction with the menu interface.",{"@attributes":{"id":"p-0286","num":"0301"},"figref":"FIG. 53","b":["4604","4608","4612","4616","4620","4624","4628","4632","2112","4351","4353","4355","4357","4367","4361","4363","4365"]},"The large size of the selectable regions outside the display, for example, as shown in , facilitate selection by individuals with impaired fine motor control while the indicating regions indicate the location of each associated selectable region.","Yet another embodiment in accord with the Location Indication aspect of the disclosure is shown in .  depicts a display () having thereon eight selectable regions, each associated respectively with a menu option. As shown in the Figure, selectable region () is associated with menu option \u201caeiou\u201d, selectable region () with menu option \u201cgqjyvwxz\u201d, selectable region () with menu option \u201csetup\u201d, selectable region () with menu option undo, selectable region () with menu option \u201ccontrol\u201d, selectable region () with menu option \u201cwords\u201d, selectable region () with menu option \u201cnsrm<space>tcp\u201d and selectable region () with menu option \u201cbdfhkl\u201d. Menu option \u201caeiou\u201d is associated with a submenu which includes submenu options \u201ca\u201d, \u201ce\u201d, \u201ci\u201d, \u201co\u201d and \u201cu\u201d, displayed on indicating regions (), (), (), () and () respectively. The background pattern of indicating region () matches the background pattern of selectable region (), indicating that submenu option \u201ca\u201d will be associated with selectable region () following selection of menu option \u201caeiou\u201d. Similarly, the background pattern of indicating region () matches the background pattern of selectable region (), indicating that submenu option \u201ce\u201d will be associated with selectable region () following selection of menu option \u201caeiou\u201d. Alternatively, the indication may be made by the size, shape, hue, brightness, contrast, dithering, fill, blinking, hatching or pattern of the indicating region or any part thereof, including either of the foreground and background of the indicating region.","When the operator selects selectable region (), the display () changes to that shown in . Now, selectable region () is associated with submenu option \u201ce\u201d, selectable region () with submenu option \u201ca\u201d, selectable region () with submenu option \u201cu\u201d, selectable region () with submenu option \u201co\u201d and selectable region () with submenu option \u201ci\u201d. In accord with the Location Indication aspect of the disclosure, the appearance of an indicating region indicates the location of the selectable regions associated with the submenu option associated with the indicating region.","The embodiment shown in  illustrates how the Location Indication aspect of the disclosure speeds selection of a submenu option of a menu hierarchy. The operator, by observing the background pattern of the submenu option within the displayed menu option, may determine which selectable region he should next dwell on. The operator may make this determination prior to selection of the menu option and need not wait for the submenu options to be displayed on their associated selectable regions. In accordance with the Location Indication aspect of the disclosure, the operator may select or spell out words more quickly than with conventional automated menu hierarchy. Assuming the display () is part of computer system, these words may be input to an application program, and, if the computer system is coupled to a speech synthesizer, these words may be spoken.",{"@attributes":{"id":"p-0291","num":"0306"},"figref":["FIG. 56","FIG. 56","FIG. 56"],"b":["4770","4701","4703","4705","4707","4709","4711","4713","4715","4721","4723","4725","4727","4729","4731","4733","4735"]},"Alternatively, the apparatus shown in  may require two successive selection events, the first selection event to select a set of eight menu options or to select a set of three menu options, the set being associated with one selectable region, and the second selection event to select one of the selected set. For example, the first selection event may select the set of menu options associated with indicators (), () and (), and the second selection event may select one menu option from this set.","Still another apparatus in accord with the Location Indication aspect of the disclosure is shown in .  depicts display area () outside of which are located selectable regions (), (), (), (), (), (), (), (), (), (), (), (), (), (), () and (). The location of each selectable region is indicated by an indicating region on the display area, (), (), (), (), (), (), (), (), (), (), (), (), (), (), () and (), respectively.","The Location Indication aspect of the disclosure will now be described from an implementation perspective with reference to . Preferably, the Location Indication aspect is implemented by modifications to the access program () described in the detailed description of the Perimeter Menu aspect of the disclosure. The modifications required for the Location Indication aspect of the disclosure are: (1) at initialization time: (a) create twelve child edit windows, each corresponding to one of the indicating regions shown in , each of the class \u201cedit\u201d, each having the style (WS_CHILD WS_BORDER | WS_DISABLED | ES_MULTILINE | AlignmentStyle) where \u201c \u201d represents a logical OR operation and where AlignmentStyle equals ES_RIGHT for child windows having right justified text and ES_LEFT for child windows having left justified text, as shown in ; (b) move the child edit windows so they are located in or near the center of the display; (c) display the child edit windows; and (d) initialize an array which maps each child edit window, for example, by an index between 0 and 11 inclusive, to an element of the aLabel array; and (2) modify the code implementing ST_SELECTED state processing, so that after changing the menu options associated with various selectable regions (by changing the pLabel element of the data set associated with each of the state machines to point to the menu option in the aLabel array to be associated with that state machine), the array mapping each child window to an element of the aLabel array is used to access the text of the menu option and the text of each child edit window is set accordingly. In the preferred embodiment, the six menu options displayed in indicating regions (), (), (), (), () and () are present in the aLabel array when  is shown, but are not associated with selectable regions until the operator selects menu option \u201cwords\u201d.","I. Sound Match","The preferred embodiment of the Sound Match aspect of the disclosure will now be described in detail from a functional perspective using an example depicted in .  shows a display () of a computer system () having thereon six regions or sound indicators, (), (), (), (), (), and (), each associated with a menu option, \u201cypgqj,\u201d, \u201cldhbfk\u201d, \u201cwizen\u201d, \u201cwords\u201d, \u201cvort x\u201d, and \u201csumac\u201d, respectively. Each menu option is displayed on its associated sound indicator. Each sound indicator has a distinct hue. For example, sound indicator () may be green, () white, () blue, () red, () orange and () grey. Each of these sound indicators indicates a sound the operator is able to consistently produce, for example, the vowel sound e as it sounds in green, i as it sounds in white, u as it sounds in blue, e as it sounds in red, o as it sounds in orange and e it sounds in grey. Assuming the operator says o as it sounds in orange, \u201cvort x\u201d, the menu option associated with the orange sound indicator () is selected and the display is changed to that shown in . In the preferred embodiment, submenu options space, \u201cx\u201d, \u201cr\u201d, \u201ct\u201d, \u201cv\u201d and \u201co\u201d are now associated with each of the sound indicators (), (), (), (), (), and () respectively. Assuming the operator says e as in green, submenu option space is selected and a space is input to the application program () whose output appears in region ().",{"@attributes":{"id":"p-0296","num":"0311"},"figref":["FIG. 60","FIG. 60"],"b":["2112","2116","2112","6252","6204","6208","6212","6216","6220","6224","6228","6232","2112","6250"]},"An operator with impaired speech but who is able to consistently produce a relatively small number of sounds distinguishable by conventional speech recognition means may, in accord with the Sound Match aspect of the disclosure, select from among the small number of menu options by using the sounds he can produce. Assuming the display () is part of computer system, the menu option may represent inputs to an application program, and, if the computer system is coupled to a speech synthesizer, the menu option may represent words to be spoken.",{"@attributes":{"id":"p-0298","num":"0313"},"figref":["FIG. 61","FIG. 61","FIG. 61"],"b":["2112","2116","6401","6403","6405","6411","6413","6415","2112"]},"The Sound Match aspect of the disclosure thus allows an operator to select from an option from a menu, using speech recognition means, whether or not the menu options are homophones. The operator does not need to use his hands to make this selection and so may keep both his hands on the home row of the keyboard, in preparation for entering the next common characteristic, or, if specifying the common characteristic by voice, may select a menu option without interrupting the manual activity he's engaged in.","The preferred embodiment of the Sound Match aspect of the disclosure will now be described in detail from an implementation perspective, beginning with the hardware and software operating environment which will now be described with reference to  which depicts a speech recognition system () including a computer system () and keyboard (), as earlier described, a sound board () and a microphone (). The conventional computer system () preferably includes an 80486 CPU running at 33 MHz or faster, and is provided with Dragon Dictate Power Edition software, available from Dragon Systems, Inc., Newton, Mass., USA. Preferably, the sound board is the Audio Capture Playback Adaptor and the microphone is the Shur Headset microphone, both available from Dragon Systems, Inc.  depicts the software environment of the preferred embodiment, which includes the earlier described Windows\u00ae version 3.1 operating system (), an optional Windows\u00ae application program (), the Windows\u00ae Dragon software driver () included in the Dragon Dictate Power Edition software, the Dragon Application () included in the Dragon Dictate Power Edition software, and a speech recognition access program (). The Dragon Application () is configured to match a sample of each of six sounds distinguishable by the Dragon Application () which the operator can consistently produce. Using the example described above, these are the vowel sounds produced by the operator of e as it sounds in green, i as it sounds in white, u as it sounds in blue, e as it sounds in red, o as it sounds in orange and e it sounds in grey. Each of these sounds is associated respectively with an identifier, for example, a number or a sequence of one or more characters. The speech recognition access program () is preferably a Windows\u00ae application program developed using, in part, the Voice Tools Software Development Kit available from Dragon Systems, Inc. At initialization time, the speech recognition access program () defines an array of data structures defining the menu and submenu options and the menu hierarchy. For example, one of the elements of this array determines that, on selection, certain actions are to be taken, for example, inputting text to an application program, and that certain submenu options and related data are to be associated with certain child edit windows. Also at initialization time, the speech recognition access program () initializes callback procedures using the Dragon Application's Application Program Interface to receive notification from the Dragon Application when a sound has been matched. Also at initialization time, the main window of the speech recognition access program () is preferably sized to just encompass the sound indicators shown in . Also at initialization time, the speech recognition access program () creates six child edit controls, each corresponding to one of the sound indicators shown in . Each of the child edit controls has the background color described above and a text color of black or white depending upon which provides better contrast against the background color of the child edit control, and each is located on the display () as shown in . Also at initialization time, the menu options of the initial menu are each associated respectively with one of the child edit controls. After initialization, the speech recognition access program (), upon notification from the Dragon Application that a sound has been received and a match attempted, sequentially searches the list of identifiers matched to the sound by the Dragon Application (), starting with the best match, until it finds an identifier corresponding to any one of the six sounds distinguishable by the Dragon Application (). Assuming the operator says o as it sounds in orange, the Dragon Application () provides to the speech recognition access program () a list of matches including, before any other identifier corresponding to any one of the six sounds distinguishable by the Dragon Application (), the identifier associated with child edit control (). This child edit control is currently associated with menu option \u201cvort x\u201d, the matched menu option. The speech recognition access program () then sets the text of each of the child edit controls to one of the submenu options associated with the matched menu option. In the example above, submenu options space, \u201cx\u201d, \u201cr\u201d, \u201ct\u201d, \u201cv\u201d and \u201co\u201d are associated with each of the child edit controls respectively and the text of the associated child edit control is set to the submenu option. Assuming the operator says e as in green, submenu option space is the matched submenu option and a space is input to the application program () whose output appears in region (). Preferably the application program () is an application program capable of executing a WM_SIZE command so that the speech recognition access program () may size the windows of the application program () to fit neatly in region () and is capable of executing WM_CHAR messages so that the speech recognition access program () may input characters to the application program ().","J. Ideographic Language","The preferred embodiment of the Ideographic Language aspect of the disclosure will now be described in detail from a functional perspective using an example depicted in .  shows the display () of a general purpose computer system ( in ) and 12 selectable regions. Each of the 12 selectable regions consists of the union of a visible subregion on the display () and an invisible subregion located outside the display () and adjacent the visible subregion. For example, the selectable region in the upper left corner both above and below the top of the display () in  consists of invisible subregion () and visible subregion (), and hereinafter is referred to as selectable region (\/). The other selectable regions shown in , proceeding counter clockwise from selectable region (\/) are (\/), (\/), (\/), (\/), (\/), (\/), (\/), (\/), (\/), (\/) and (\/). In  each of the visible subregions is adjacent an edge of the display (). The selectable regions together circumscribe region () in the center of the display. Also shown on the display () within region () in  are ten square indicating regions arranged in two columns of five indicating regions. Each indicating region abuts an indicating region in the other column, the indicating region located above it, if any, and the indicating region located below it, if any. In the preferred embodiment, each indicating region indicates by its location the location of a respectively associated selectable region, in accord with the Location Indication aspect of the disclosure. For example, the uppermost indicating region in the left column of indicating regions () is associated with the uppermost selectable region (\/) on the left side of the display. Indicating region () located immediately below indicating region () is associated with selectable region (\/) located immediately below selectable region (\/).","The operation of the example of the preferred embodiment of the Ideographic Language aspect of the disclosure will now be described. Assuming that the operator is fitted with a head pointer coupled to the general purpose computer system (), that he uses a keyboard to enter a phonetic unit and intonation according to the Pin Yin coding method for the Chinese language, and that he enters the distinct sound \u201cf\u00fa\u201d, each of the plurality of the selectable regions shown in  is associated with one of a plurality of menu options, each of the plurality of menu options having a common characteristic. In this example, the common characteristic is a phonetic unit and intonation but may be a phonetic unit alone, an intonation alone, a stroke used to draw an ideograph, a number of horizontal strokes, a number of vertical strokes, a number of total strokes, a stroke order, a radical, a part of speech, an ideograph, a kana, a diacritic, a classification of a part of an ideograph or other characteristic of a class of ideographs. The ten menu options shown in  are Chinese ideographs each starting with the distinct sound \u201cf\u00fa\u201d. Alternatively, the menu options may be sequences of graphic symbols including one or more kanji. In  the Chinese ideographs are each displayed on the visible subregion of the associated selectable region and on the indicating region associated with the selectable region. The remaining two of the 12 selectable regions, (\/) and (\/), are associated with menu options for undo and for displaying more menu options, respectively. In the preferred embodiment, in response to the selection of the menu option for displaying more menu options, each of the selectable regions associated with a menu option starting with the distinct sound \u201cf\u00fa\u201d is associated with a menu option not previously displayed and the newly associated menu option replaces the old menu option on the display.","Resuming now with the description of the example of the preferred embodiment, a cross hair cursor () is displayed in the circumscribed region (). Assuming the operator desires to select the menu option associated with selectable region (\/), he turns his head to the left and the cross hair cursor () moves to the left, responsive to the head movement, until the cross hair cursor hotspot intersects selectable region (\/) and he maintains the location of the cross hair cursor hotspot on that selectable region for the selection threshold period. The menu option associated with selectable region (\/) is selected and added to text () displayed in the circumscribed region (), the general purpose computer system () emits an audible beep indicating that selection has occurred and the displayed menu options, both on the indicating regions and the visible subregions, are removed from the display.","In the preferred embodiment, selection is made in accord with the Facilitated Dwell subaspect of the Dwell aspect of the disclosure, described above. Thus, the operator receives an indication of the progress of his selection by a change in appearance of the indicating region associated with the intersected selectable region. Alternatively, selection may be by intersection of a location indicated by the at least part of a cursor and a selectable region alone, by such an intersection accompanied by a switch operation, for example, a depression of a space bar on the keyboard, or by other suitable means.","In accord with the Location Indication aspect of the disclosure, the operator sees the entire menu in the compact indicating regions and may discover the location of the selectable region associated with each menu option without having to visually scan all the visible subregions. In the preferred embodiment, the plurality of indicating regions may be moved to a different location on the display to avoid obstructing the area of the display showing most recently added graphic symbols or the area of the display where graphic symbols will soon be added. In accord with the Ideographic Language aspect of the disclosure, an operator may select from among many sequences of one or more ideographs without lifting either hand from the keyboard, thus speeding entry of single ideographs or sequences of ideographs in word processing systems for the Chinese, Japanese and Korean languages. Since, in the preferred embodiment, the selectable regions are located adjacent the edge of the display, a large rectangular region remains available on the display for the output of an application program. Further, if the selectable regions are located entirely outside the display, the indicating regions obstruct only a relatively small portion of the circumscribed region (), permitting the display of a sequences of ideographs for selection simultaneous with the display of previously selected ideographs, neither obstructing the operator's view of the other. If the general purpose computer system is coupled to a speech synthesizer and the ideographs are symbols of a symbol set, for example, the Blissymbolics Symbol Set, an illiterate operator, for example, a school child having impaired speech, may select symbols associated with words and those words may be spoken via the speech synthesizer.",{"@attributes":{"id":"p-0306","num":"0321"},"figref":["FIG. 65","FIG. 65"],"b":["3704","3706","3708","3710","3712","3714","3716","3718","3720","3722","3724","3726","3728","3730","3732","3734","3736","3738","3740","3742","3744","3746","3748","3750","3752","3754","3756","3758","3760","3762","3764","3766","3768","3770","3772","3774","3776","3778","3780","2112","2112","2112","3780","3724","3726","3744","3746"]},"The indicating regions () in  are disproportionately large relative to the rest of . They are approximately 1.5 times their proportionate size. They are represented as shown in  in compliance with Patent Cooperation Treaty Rules requiring a minimum size for letters in figures.",{"@attributes":{"id":"p-0308","num":"0323"},"figref":["FIG. 66","FIG. 66"],"b":["2112","2116","3801","3803","3805","3807","3809","3811","3813","3815","3817","3819","2116","2116","2112"]},{"@attributes":{"id":"p-0309","num":"0324"},"figref":["FIG. 67","FIG. 67","FIG. 67"],"b":["2112","2116","6701","6703","6705","6707","6709","6711","6713","6715","2112","2112","6750","6703","6705","6707","6701","6715","6713","6703","2112","2112","2112","2112","6709","6711"]},"The preferred embodiment of the Ideographic Language aspect of the disclosure will now be described in detail from an implementation perspective. Preferably, the Ideographic Language aspect of the disclosure is implemented by modifications to the access program () described in the detailed description of the Perimeter Menu aspect of the disclosure, modified as described in the descriptions of the Facilitated Dwell subaspect and the Location Indication aspects of the disclosure. The modifications required for the Ideographic Language aspect of the disclosure are: (1) install on the general purpose computer system a font for the ideographic language of the embodiment; (2) at initialization time: (a) set the text of all labels for display on the selectable regions to null; (b) do not enable the cursor polling timer; and (c) hide the Windows\u00ae () system cursor; (3) include in the main window processing procedure of the access program () code to process WM_CHAR messages and, when a sequence of one or more WM_CHAR messages indicates a common characteristic: (a) lookup sequences or representations of sequences of one or more ideographs (hereinafter \u201csequences\u201d) having the common characteristic; (b) copy ten of the sequences to the labels; (c) set the Windows\u00ae () system cursor to the cross hair cursor, set the cursor location to a predetermined location near an indicating region and show the Windows\u00ae () system cursor; (d) set fPaint to TRUE for every state machine; (e) send EV_RESET to every state machine; (f) display each sequence at the appropriate location in the indicating region; and (g) enable the cursor polling timer; and (4) add state processing to ST_SELECTED to: (a) set the text of all labels for display to null; (b) hide the Windows\u00ae () system cursor; (c) erase all sequences from the indicating region; (d) disable the cursor polling timer; (e) set fPaint to TRUE for every state machine; (f) send EV_RESET to every state machine; and (g) insert the selected sequence into the work space.",{"@attributes":{"id":"p-0311","num":"0326"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"APPENDIX I"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Procedure: PocketFsm"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/**********************************************************\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\/*",{},"*\/"]},{"entry":["\/*\u2003Procedure:","PocketFsm","*\/"]},{"entry":["\/*",{},"*\/"]},{"entry":["\/*\u2003Description:","State Machine for processing events to","*\/"]},{"entry":["\/*","selectable regions.","*\/"]},{"entry":["\/*",{},"*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\/*\u2003Input Parameters:","*\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\/*","pPocket","\u2003pointer to selectable region data","*\/"]},{"entry":["\/*",{},"\u2003set","*\/"]},{"entry":["\/*","Event","\u2003event to process","*\/"]},{"entry":["\/*",{},{},"*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/**********************************************************\/"},{"entry":"PocketFsm (pPocket, Event)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003BOOL","fInternalEvent","\/*\u2002declaration of local"]},{"entry":[{},{},"boolean variable\u2002*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003set fInternalEvent to TRUE"},{"entry":"\u2003\u2003while (fInternalEvent is TRUE)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003set fInternalEvent to FALSE"},{"entry":"\u2003\u2003\u2003\u2003set pPocket->PreviousState to pPocket->State"},{"entry":"\u2003\u2003\u2003\u2003set pPocket->State to aPocketFsm[pPocket->State][Event]"},{"entry":"\u2003\u2003\u2003\u2003switch (pPocket->State)"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_ILLEGAL_STATE:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_ERROR:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003turn off all timers"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003log the error"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003display an error message to the operator"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_INITIAL:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_RESET:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set time of selection to the current time"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if pPocket->Color is not equal to"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003pPocket->InitialColor"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set pPocket->Color to pPocket->InitialColor"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set pPocket->fPaint to TRUE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set pPocket->fInvert to FALSE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_LOW_TIDE:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_CREST_TIDE:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_BEGIN_LOCK:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003emit an audible beep"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set the system cursor location to the visible"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003subregion's lockspot"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set the system cursor to null"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003display the lock icon on the visible subregion's"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003lockspot"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/*\u2003initialize counter"]},{"entry":[{},"for locking\u2002*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set iLockCursor to cLockCursor"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_LOCK:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set the system cursor location to the visible"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003subregion's lockspot"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/*\u2003on lock counter"]},{"entry":[{},"expiration,\u2002*\/"]},{"entry":[{},"\/*\u2003transfer to the next"]},{"entry":[{},"state\u2002*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003decrement iLockCursor by 1"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if iLockCursor equals 0"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set Event to EV_NULL"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set fInternalEvent to TRUE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_END_LOCK:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003erase the lock icon with white"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set the system cursor to the arrow cursor"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003display the system cursor on the visible subregion\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003lockspot"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003emit an audible beep"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/*\u2003paint selectable"]},{"entry":[{},"region so that\u2002*\/"]},{"entry":[{},"\/*\u2003the white erasure"]},{"entry":[{},"of the lock\u2002*\/"]},{"entry":[{},"\/*\u2003cursor icon is"]},{"entry":[{},"overwritten\u2002*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set pPocket->fPaint to TRUE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_SELECTED:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003emit an audible beep"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003take the action appropriate upon selection of this"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003selectable region, for example, sending data to an"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003application program, sending a control sequence to"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003a device coupled to the computer, or displaying the"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003selection"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set pPocket->fInvert to TRUE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if appropriate, change the menu options associated"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003with various selectable regions and set fPaint to"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003TRUE for the state machines associated with those"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003selectable regions"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set Event to EV_NULL"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set fInternalEvent to TRUE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_SELECT_AND_OUT:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003send EV_RESET then EV_MOVEMENT to all state"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003machines, resetting them and indicating that the"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003operator is moving the cursor"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_DECAY:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/*\u2002set state to"]},{"entry":[{},"previous state\u2002*\/"]},{"entry":[{},"\/*\u2002in preparation for"]},{"entry":[{},"the next\u2002*\/"]},{"entry":[{},"\/*\u2002state transition\u2002*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set pPocket->State to pPocket->PreviousState"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003decrement pPocket->Color by pPocket->Decrement,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003but not below pPocket->InitialColor"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if pPocket->Color was changed"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set pPocket->fPaint to TRUE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set fInternalEvent to TRUE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if pPocket->Color was changed from a value greater"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003than or equal to pPocket->CrestTide to a value below"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003pPocket->CrestTide"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set Event to EV_STEP_DOWN"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003else"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set Event to EV_NULL"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_DWELL:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/*\u2002set state to"]},{"entry":[{},"previous state\u2002*\/"]},{"entry":[{},"\/*\u2002in preparation for"]},{"entry":[{},"the next\u2002*\/"]},{"entry":[{},"\/*\u2002state transition\u2002*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set pPocket->State to pPocket->PreviousState"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003increment pPocket->Color by pPocket->Increment, but"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003not above pPocket->Ceiling"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if pPocket->Color was changed"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set pPocket->fPaint to TRUE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set fInternalEvent to TRUE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if pPocket->Color was changed from a value below"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003pPocket->CrestTide to a value greater than or equal"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003to pPocket->CrestTide"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set Event to EV_STEP_UP"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003else"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set Event to EV_NULL"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_IDLE:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set the system cursor location to the center of the"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003display"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set fInternalEvent to TRUE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set Event to EV_NULL"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_EBB_TIDE:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_ENTRY:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set fInternalEvent to TRUE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set Event to EV_NULL"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_DISCARD:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/*\u2002set state to"]},{"entry":[{},"\u2009previous state\u2002*\/"]},{"entry":[{},"\/*\u2002for the next"]},{"entry":[{},"transition*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set pPocket->State to pPocket->PreviousState"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case ST_EXIT:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set Event to EV_NULL"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set fInternalEvent to TRUE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if pPocket->fInterior equals TRUE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003change the boundaries of the Windows\u2009\u00ae region"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003having the handle pPocket->hRegion to those"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003defined by the second array of points associated"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003with this state machine"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set pPocket->fPaint to TRUE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003send EV_RESET to the state machine having the"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003index pPocket->iAdjacentPocket"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003display error message"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003break"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\/*\u2002end switch\u2002*\/"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003\/*\u2002end while\u2002*\/"},{"entry":"\u2003\u2003if pPocket->fPaint is equal to TRUE"},{"entry":"\u2003\u2003\u2003\u2003invalidate the entire client area"},{"entry":"}"},{"entry":"\/*\u2002end PocketFsm\u2002*\/"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Procedure: CreateEvent"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/**********************************************************\/"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\/*",{},"*\/"]},{"entry":["\/*\u2003Procedure:","CreateEvent","*\/"]},{"entry":["\/*",{},"*\/"]},{"entry":["\/*\u2003Description:","Examines movement of cursor and determines","*\/"]},{"entry":["\/*","what events have occurred.","*\/"]},{"entry":["\/*",{},"*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\/*\u2003Input Parameters:","*\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\/*","pEvent","\u2003pointer to an event data structure","*\/"]},{"entry":["\/*",{},"\u2003for output","*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\/*\u2003Output:","A completed event data structure","*\/"]},{"entry":["\/*","indicated by pEvent including:","*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\/*","(1)","an indication of whether the cursor hotspot","*\/"]},{"entry":["\/*",{},"\u2002intersects a selectable region","*\/"]},{"entry":["\/*","(2)","the index of the intersected selectable","*\/"]},{"entry":["\/*",{},"region, if any","*\/"]},{"entry":["\/*","(3)","the event for the intersected selectable","*\/"]},{"entry":["\/*",{},"region, if any","*\/"]},{"entry":["\/*","(4)","the event for all non-intersected","*\/"]},{"entry":["\/*",{},"selectable regions","*\/"]},{"entry":["\/*",{},{},"*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\/*","Updated variables indicate:","*\/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\/*","(1)","the previous location of the cursor hotspot","*\/"]},{"entry":["\/*","(2)","the approximate time of the sampling of the","*\/"]},{"entry":["\/*",{},"previous location of the cursor hotspot","*\/"]},{"entry":["\/*",{},{},"*\/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/**********************************************************\/"},{"entry":"CreateEvent (pEvent)"},{"entry":"{"},{"entry":"\u2003\u2003get current cursor hotspot location"},{"entry":"\u2003\u2003if there has been cursor hotspot movement since the last cursor"},{"entry":"\u2003\u2003location sampling"},{"entry":"\u2003\u2003\u2003\u2003set time of previous cursor movement to time latest received"},{"entry":"\u2003\u2003\u2003\u2003WM_TIMER message was generated"},{"entry":"\u2003\u2003\u2003\u2003if cursor hotspot has crossed out of a selectable region"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003set event to EV_CROSS_OUT for the intersected"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003selectable region and to EV_MOVEMENT for all other"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003selectable regions"},{"entry":"\u2003\u2003\u2003\u2003else"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003if cursor hotspot intersects a selectable region"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if intersected selectable region's Color equals"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003Ceiling"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set event to EV_CEILING for the intersected"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003selectable region and to EV_DECAY for all"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003other selectable regions"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003else"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set event to EV_DWELL for the intersected"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003selectable region and to EV_DECAY for all"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003other selectable regions"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003else"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set event to EV_MOVEMENT for all selectable"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003regions"},{"entry":"\u2003\u2003else"},{"entry":"\u2003\u2003\u2003\u2003if cursor hotspot intersects a selectable region"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003if idle time exceeded"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set event to EV_IDLE_TIMEOUT for all selectable"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003regions"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003else"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003if intersected selectable region's Color equals"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003Ceiling"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set event to EV_CEILING for the intersected"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003selectable region and to EV_DECAY for all"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003other selectable regions"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003else"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003set event to EV_DWELL for the intersected"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003selectable region and to EV_DECAY for all"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003other selectable regions"},{"entry":"\u2003\u2003\u2003\u2003else"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003set event to EV_DECAY for all selectable regions"},{"entry":"\u2003\u2003set the previous cursor hotspot location to the current hotspot"},{"entry":"\u2003\u2003location"},{"entry":"}"},{"entry":"\/*\u2002end CreateEvent\u2002*\/"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}}],"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND ART","DESCRIPTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0079","num":"0084"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0080","num":"0085"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0081","num":"0086"},"figref":"FIGS. 3, 4 and 5"},{"@attributes":{"id":"p-0082","num":"0087"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0083","num":"0088"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0084","num":"0089"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0085","num":"0090"},"figref":"FIGS. 9 and 10"},{"@attributes":{"id":"p-0086","num":"0091"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0087","num":"0092"},"figref":["FIG. 12()","FIG. 12()"]},{"@attributes":{"id":"p-0088","num":"0093"},"figref":["FIG. 13()","FIG. 13()"]},{"@attributes":{"id":"p-0089","num":"0094"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0090","num":"0095"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0091","num":"0096"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0092","num":"0097"},"figref":"FIGS. 17 and 18"},{"@attributes":{"id":"p-0093","num":"0098"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0094","num":"0099"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0095","num":"0100"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0096","num":"0101"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0097","num":"0102"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0098","num":"0103"},"figref":"FIGS. 24 and 25"},{"@attributes":{"id":"p-0099","num":"0104"},"figref":["FIGS. 26 and 27","FIG. 26","FIG. 27"]},{"@attributes":{"id":"p-0100","num":"0105"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0101","num":"0106"},"figref":"FIGS. 29 and 30"},{"@attributes":{"id":"p-0102","num":"0107"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0103","num":"0108"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0104","num":"0109"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0105","num":"0110"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0106","num":"0111"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0107","num":"0112"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0108","num":"0113"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0109","num":"0114"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0110","num":"0115"},"figref":"FIG. 39"},{"@attributes":{"id":"p-0111","num":"0116"},"figref":"FIG. 40"},{"@attributes":{"id":"p-0112","num":"0117"},"figref":"FIG. 41"},{"@attributes":{"id":"p-0113","num":"0118"},"figref":"FIG. 42"},{"@attributes":{"id":"p-0114","num":"0119"},"figref":"FIG. 43"},{"@attributes":{"id":"p-0115","num":"0120"},"figref":"FIGS. 44, 45 and 46"},{"@attributes":{"id":"p-0116","num":"0121"},"figref":"FIGS. 47 and 48"},{"@attributes":{"id":"p-0117","num":"0122"},"figref":"FIGS. 49, 50 and 51"},{"@attributes":{"id":"p-0118","num":"0123"},"figref":"FIG. 52"},{"@attributes":{"id":"p-0119","num":"0124"},"figref":"FIG. 53"},{"@attributes":{"id":"p-0120","num":"0125"},"figref":"FIGS. 54 and 55"},{"@attributes":{"id":"p-0121","num":"0126"},"figref":"FIG. 56"},{"@attributes":{"id":"p-0122","num":"0127"},"figref":"FIG. 57"},{"@attributes":{"id":"p-0123","num":"0128"},"figref":"FIGS. 58 and 59"},{"@attributes":{"id":"p-0124","num":"0129"},"figref":"FIG. 60"},{"@attributes":{"id":"p-0125","num":"0130"},"figref":"FIG. 61"},{"@attributes":{"id":"p-0126","num":"0131"},"figref":"FIG. 62"},{"@attributes":{"id":"p-0127","num":"0132"},"figref":"FIG. 63"},{"@attributes":{"id":"p-0128","num":"0133"},"figref":"FIG. 64"},{"@attributes":{"id":"p-0129","num":"0134"},"figref":"FIG. 65"},{"@attributes":{"id":"p-0130","num":"0135"},"figref":"FIG. 66"},{"@attributes":{"id":"p-0131","num":"0136"},"figref":"FIG. 67"}]},"DETDESC":[{},{}]}
