---
title: Filtering and promoting application store applications
abstract: Techniques for filtering and promoting application store applications are described that can be employed to provide filtered application information and/or application promotions to client devices. The filtering and promoting can be based at least in part upon system information that describes configurations and capabilities of the client devices. In one or more embodiments, various system information for a client device is detected. The detected system information for the client device is used to filter application data in an application catalog. Page information to be provided to the client device for interaction with the application catalog is then ascertained using the filtered application data. The page information is sufficient to enable the client device to render targeted application store pages having filtered application information and/or promotions that are selected based on the detected system information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09424018&OS=09424018&RS=09424018
owner: Microsoft Technology Licensing, LLC
number: 09424018
owner_city: Redmond
owner_country: US
publication_date: 20110321
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Overview","CONCLUSION"],"p":["The amount of application content available to users of various computing devices including tablet devices, laptops, mobile phones, desktop computers, and so forth, is ever-increasing. However, the sheer quantity of application choices available to users can make it difficult for users to find applications that are relevant and interesting. Users with a limited amount of time may not wish to spend a great deal of time searching among a multitude of applications and therefore simply may not discover some of the \u201cbest\u201d applications for their devices, which detracts from the overall user experience and limits opportunities for application developers. Third party recommendations for applications and lists of popular applications have been used to assist users in finding relevant applications. However, these recommendation lists have proliferated as the amount of application content has increased and can be quite cumbersome for users to navigate.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","Techniques for filtering and promoting application store applications are described that can be employed to provide filtered application information and\/or application promotions to client devices. The filtering and promoting can be based at least in part upon system information that describes configurations and capabilities of the client devices. In one or more embodiments, various system information for a client device is detected. The detected system information for the client device is used to filter application data in an application catalog. Page information to be provided to the client device for interaction with the application catalog is then ascertained using the filtered application data. The page information is sufficient to enable the client device to render targeted application store pages having filtered application information and\/or promotions that are selected based on the detected system information.","Techniques for filtering and promoting application store applications are described that can be employed to provide filtered application information and\/or application promotions to client devices. The filtering and promoting can be based at least in part upon system information that describes configurations and capabilities of the client devices. In one or more embodiments, various system information for a client device is detected. The detected system information for the client device is used to filter application data in an application catalog. Page information to be provided to the client device for interaction with the application catalog is then ascertained using the filtered application data. The page information is sufficient to enable the client device to render targeted application store pages having filtered application information and\/or promotions that are selected based on the detected system information.","In the discussion that follows, a section titled \u201cOperating Environment\u201d is provided and describes one environment in which one or more embodiments can be employed. Following this, a section titled \u201cExample Methods\u201d describes example techniques for filtering and promoting application store applications in accordance with one or more embodiments. Next, a section titled \u201cExample User Interface\u201d describes example user interfaces in accordance with one or more embodiments. Last, a section titled \u201cExample System\u201d describes example computing systems and devices that can be utilized to implement one or more embodiments.","Operating Environment",{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 1","FIG. 6"],"b":["100","100","102","104","106","108","102","102"]},"The computer-readable media can include, by way of example and not limitation, all forms of volatile and non-volatile memory and\/or storage media that are typically associated with a computing device. Such media can include ROM, RAM, flash memory, hard disk, removable media and the like. Computer-readable media can include both \u201ccomputer-readable storage media\u201d and \u201ccommunication media,\u201d examples of which can be found in the discussion of the example computing system of .","In addition, client  includes a software application in the form of a communication module . The communication module  represents functionality of the client  operable to communicate with and interact with various other entities (e.g., other clients, providers, servers, web sites). For example, the communication module  may be configured as a web browser. Interactions with other entities can include sending and receiving electronic messages in various forms (e.g., e-mail, instant messages, text messages, and so forth) between the entities, obtaining resources (e.g., content and services) from the other entities, accessing and\/or downloading various applications  from an online application catalog or store, and so forth.","The client  can also include an application store module  that represents functionality for enabling access of the clients to an online application database, catalog, or store (e.g., an application marketplace) through which various applications  can be made available to clients. Application store module  can be implemented in various ways to facilitate access to and navigation of a database of applications , selection and\/or purchase of applications, and download of applications to the client . Application store module  can further be configured to implement aspects of techniques for filtering and promoting applications described above and below.","The application store module  can be implemented as a standalone client application and\/or as a component of the communication module , such as being implemented as an add-in for a web browser. The application store module  can also be implemented as a web-hosted application that the client  can access and run in conjunction with a service provider over a network (e.g., \u201cin the cloud\u201d). Thus, the application store module  can be implemented in different ways for different client devices that can have different configurations and capabilities.","For instance, the client  can be communicatively coupled over a network , such as the Internet, with one or more service providers  from and to which resources (e.g., content and services) can be received and sent. Example service providers  of  are each depicted as having one or more processors  and one or more computer-readable media . A service provider  can be implemented by way of one or more server devices. Accordingly, various example components represented and described for a service provider  can be included on a single server device and\/or can be divided between multiple different server devices.","Service provider  is depicted as including a resource manager module . The resource manager module  represents functionality operable by the service provider  to manage various resources  that may be made available over the network . For example, various resources  can be provided by way of web pages, HTML pages, application UIs, or other user interfaces  that are communicated over the network  for output by the client . The resource manager module  can manage access to the resources , performance of the resources , configuration of user interfaces or data to provide the resources , and so on.","Generally, resources  made accessible by a service provider  can include one or more services and\/or content. A service provider  can provide one or more web servers and\/or sites, which a client  can navigate to in order to access the resources . The resources  can include any suitable combination of services and\/or content typically made available over a network by one or more providers. Some examples of services include, but are not limited to, an application store service to manage and provide client access to a database of applications , a search service, an email service to send and receive email, an instant messaging service to provide instant messages between clients , and a social networking service to facilitate connections and interactions between groups of users who share common interests and activities. Additional examples of services include a shopping service, a weblog service, productivity service, an authentication service, a news service, and an advertisement service to name a few. Content may include various combinations of text, video, ads, audio, multi-media streams, animations, images, web pages, web applications, device applications, content for display by a browser or other device application, pages, URLS, and\/or links for use by an application store module , and the like.","In addition, the service provider  can include or otherwise make use of one or more application catalogs  configured to store a variety of different application data  related to applications that are made available to clients  for purchase and\/or download. A variety of application data  can be collected from one or more content providers  over the network . The content providers  represent developers, device manufacturers, and other third parties who may develop applications and distribute the applications to clients using the application store infrastructure managed by the service provider  and represented by the example environment  depicted in . Content providers  can publish the applications they develop through the service provider , which can include providing application data  for inclusion in the application catalog . Naturally, the service providers  can also include their own applications in the application catalog . Clients  can then navigate and select applications for download from the application catalog  using the application store module .","As depicted in , application data  describing applications can include various data such as application details , page information , and filter data . Application details  can include detailed information describing applications in the applications catalog such as identifiers, pricing info, category data, developer information, ratings, descriptions, promotions, download URLs or addresses, and so forth. The applications for download can also be maintained as part of application details . Additionally or alternatively download URLs or addresses can be used to access applications from various locations such as through download servers managed by the service provider , from different content providers , using a peer-to-peer network of clients , and\/or using any other suitable download mechanism.","Page information  represents various content that can be used to build and\/or output various pages for interaction with the application catalog. Page information  can include complete pages, portions of pages, HTML code or other mark-up language code, script, URLs and links, images, and\/or other data typically used to build pages. When a client navigates through the application catalog  via the application store module , page information  sufficient to enable the client to render pages for interaction with the application catalog can be communicated over the network . This can include communicating pages that are built on the server side and\/or information to enable the client  to build the pages on the client side.","Filter data  represents data that can be used to filter applications in various ways. For instance, filter data  can be employed to target applications to clients based on device configurations and capabilities. Application developers can use filter data  to match their applications to designated device configurations and capabilities. Different versions of applications can therefore be developed for different device configurations and capabilities. This can include identifying specific hardware configurations and targeting applications that are configured to work with specific hardware configurations. In this manner, clients  can be provided with a filtered view of the application catalog  that surfaces and promotes more relevant and interesting applications that are designed to work well with a particular device and\/or are being promoted to the particular device. Filter data  can also be used to hide and\/or provide notifications regarding applications that may not work well with particular devices. Further details regarding techniques for filtering and promoting application store applications can be found in relation to the following figures.","A variety of other data  can also be provided examples of which include topic data that can be used to organize and promote applications within different relevant topics, application support data, authentication data, client accounts and account data, and so forth.","Having described an example operating environment, consider now example methods for filtering and promoting application store applications in accordance with one or more embodiments.","Example Methods","The following section provides a discussion of flow diagrams that describe steps of example methods for filtering and promoting application store applications in accordance with one or more embodiments. The methods can be implemented in connection with any suitable hardware, software, firmware, or combination thereof. In at least some embodiments, the methods can be implemented by way of a suitability configured computing device, such as the example service provider  of  that includes or otherwise makes use of a resource manager module .",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 2","FIG. 2"]},"Step  detects system information for a device. The detection of system information for a device can occur in various ways. In one example, resource manager module  can operate to collect system information from one or more client devices . This can occur in response to requests made via the client devices to access an application catalog . For instance, application store module  of a client  can be configured to collect and maintain system information that describes the configuration and capabilities of the client device. Such system information can then be provided over the network  to the service provider  in conjunction with a request to access the resources .","In another approach, resource manager module  can operate to poll clients  at various times to obtain corresponding system information. Resource manager module  can then use this information to selectively serve resources  including applications from the application catalog . In yet another approach, system information can be collected and maintained by the service provider  in connection with client accounts. The resource manager module  can therefore be configured to reference a client account associated with a client  to detect corresponding system information.","A variety of system information can be collected and utilized. In general, system information describes the configuration and capabilities of a client . System information can include, by way of example and not limitation, at least some information regarding the hardware configuration of a client device. For example, system information can describe hardware components included with a device such as whether or not the device includes a radio antenna, a television tuner, a camera, a GPS receiver, a touch screen, an accelerometer, a gyroscope, and so forth. System information can also describe connected or connectable peripherals devices associated with the client device such as a keyboard, mouse, touch pad, speakers, printer, scanner, and other peripheral devices. Still further, system information encompasses basic hardware capabilities of the client such as memory, storage, processing power, device architecture, and so forth.","System information can also include, by way of example and not limitation, information regarding installed software or applications including an operating system and other device applications. This can include identification of the installed applications and\/or which versions of the applications are installed. Alternately or additionally, in some embodiments, system information can include device class data that is associated with a client . Device class data is configured to define different classes of client devices that can be assigned to different clients and used to implement aspects of filtering and promoting application store applications, as discussed in detail in relation to  below.","Step  filters application data in an application catalog based on the detected system information for the device. A variety of filtering can occur using combinations of the different types of system information described above to identify and select applications in the application catalog . Generally, application data  can be filtered to discover applications that are targeted to or otherwise match or are consistent or compliant with the detected system information. For example, an application designed to use a GPS receiver would match or be compliant with devices having a GPS receiver and would therefore be selected for these devices. On the other hand, the example GPS application could be filtered out for devices that do not include a GPS receiver. Likewise, an application that is developed to make use of a touch screen can be matched to a touch screen tablet device and filtered out for a desktop computing device that does not include a touch screen. As noted, in at least some embodiments the filtering can be based on different device classes that are defined and assigned to different devices. Examples of using device classes to filter an application catalog are described in detail in relation to  below.","Step  ascertains page information for interaction with the application catalog using the filtered application data. Step  communicates ascertained page information to the device sufficient to enable the device to render pages for interaction with the application catalog. For example, the filtered application data can be employed to select, generate, and\/or render pages that can be used to interact with the application catalog  using page information . In particular, one or more pages that provide a filtered view of the application catalog can be provided to a client  in any suitable way.","For example, using the page information  that is ascertained, pages can be dynamically generated by the service provider , by the client , and\/or by the service provider  and the client  in combination. The service provider  can also select pre-configured pages that are provided over the network to the client  for use by the application store module . In another approach, page information  can include data such as links to content, URLs, images and other page information that is used by the application store module  to generate pages locally at the client. Page information can also include filtered application data that enables the application store module  to selectively generate one or more filtered views of the application catalog .","Thus, through various pages that reflect filtering applied using system information for a client device, a user of the client device can interact with one or more filtered views of an application catalog. Pages can also be configured to provide the user with options to selectively turn filtering on or off. The various pages can be arranged in various ways to enable interaction with the application catalog . Some examples regarding different ways in which pages for interaction with the application catalog can be configured are discussed below in relation to the example user interface depicted in .","By making use of system information in the manner just described, content providers  can develop, target, and promote applications to specific device configurations and capabilities as described above and below. Pages for interaction with an application catalog can be configured to selectively present a filtered view of the application catalog to assist users in finding relevant and interesting applications. Moreover, applications that are designed to work well with a particular device configuration can be surfaced to matching devices based on system information. This can improve the overall user experience both by helping the user find applications more easily and by promoting applications that will work well with the user's particular device. Additionally, content providers  benefit by being able to expose their application content in a targeted manner to user's who are most likely to download and\/or purchase the application content because the application content is tailored to the users' particular devices.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 3","FIG. 3","FIG. 3"]},"Step  defines a plurality of device classes for an application catalog. In general, the device classes are defined to classify devices into groups based on common configurations and capabilities. In one approach, the device classes are configured to broadly classify devices according to device types. For example, device classes can be configured to include different classes for slate (e.g., tablet), mobile, desktop, laptop, all-in-one, and set-top box devices.","Additionally or alternatively, more granular classes and\/or subclasses can be defined to create classes related to different configurations and capabilities described by system information. By way of example and not limitation, different classes can be defined as standalone classes or subclasses for devices having certain components such as a camera, a GPS receiver, or a touch screen and\/or for devices having selected capabilities such as a selected amount of memory, processing power, operating system version, architecture, and so forth. A variety of other classes based on system information can be utilized without departing from the spirit of the claimed subject matter.","In one approach, the broad classifications can be combined with different subclasses to create a multitude of options for classifying devices. By way of example and not limitation, classes can be combined to form classes such as slate with camera, slate without camera, slate with GPS and camera, desktop with at least four gigabytes of RAM, and\/or set-top box with ten gigabyte hard drive, to name a few examples. A variety of other combinations comparable to the enumerated examples can also be utilized.","Any suitable data, field, or identifier can be employed to designate the classes and assign a device class to a particular device. An application store module  of a client  can be configured to identify, assign, and\/or or maintain a device class for a device, such as by setting a device class field to an appropriate value.","Step  obtains system information for a device that accesses the application catalog. A service provider  can obtain system information in any suitable way. This step can occur by detecting and\/or collecting system information for a device using techniques comparable to those described above in relation to . For example, a resource manager module  of a service provider  can obtain system information for a client  that is communicated by an application store module  in connection with a request to access the application catalog . The service provider  can alternatively pro-actively poll clients  to obtain and\/or store system information at various times.","Step  determines whether a device class is available. This step involves examining the system information that is obtained for a device to check for device class data. For example, a device class field or other suitable data can be included with system information to associate a device class with a client . If the device class field is populated with a device class, the device class can be used directly for filtering and promoting of applications. On the other hand, if the device class field is empty or device class information is otherwise unavailable, then system information provided by a client device can be used to determine a device class for the client device and\/or to perform filtering and promoting of applications.","In one approach, application store module  of a client  can be configured to provide the device class if available and otherwise provide system information for use by the service provider  if the device class if unavailable at the client . In other words, the device class can be obtained by the service provider and can be used as an alternative to having to obtain complete system information for a device when the device interacts with the application catalog. This approach can result in reduced communication traffic over the network, decreased analysis time, and less data collection for the service provider  and clients  alike. At the same time, devices that cannot provide the device class and\/or do not support the device class approach can still take advantage of the described techniques for filtering and promoting application store applications.","More particularly, if a device class is not available, step  determines a device class for the device based upon the capabilities of the device. Here, the resource manager module  can operate to analyze the system information to match the client device to one or more of the classes described above. This can include assigning the device to a broadly defined class and\/or one or more sub-classes. For example, the client  can be assigned to a mobile device class and to classes for camera and touch screen based on the system information. To do so, the resource manager module  can examine various criteria used to define the classes and determine classes for which configuration and capabilities of a device defined by the system information match the criteria for the classes. The device can then be assigned to these matching classes by setting device class fields or other suitable data for the device to appropriate values.","Step  returns information regarding the device class to the device. For example, the resource manager module  can return data describing the classes determined in step  over the network  to the client . This enables the application store module  of a client  to make use of the device class for subsequent interaction with the application catalog .","Having determined the device class directly in step  or by analyzing system information as per steps  and , step  filters the application catalog to identify applications targeted to the device based on the device class. This can involve searching multiple different categories and types of application using the device class as represented by example sub-steps - in . In general, in one or more embodiments, filtering can include comparing the device class to application data  to discover applications that are targeted specifically to a device or are otherwise a good match to device configuration and capabilities that are represented by the device class.","In particular, step  identifies applications targeted specifically to the device class. Applications that are examined for filtering operations can include both third-party applications from content providers  and applications that are developed by the service provider . The applications can be associated in the application catalog with device class data to match the applications to selected device classes. For example, filtering that is performed for the mobile device having a camera and a touch screen in the preceding example can identify various applications that are targeted to mobile devices, cameras, touch screens, and\/or combinations of these using the one or more device classes associated with the device.","Step  determines applications that are designated as being general applications to each device class. Such applications can be those that are considered appropriate for each device class. These general applications are effectively not filtered based on device classes.","Step  ascertains applications that are installed on the device and step  finds applications that are incompatible with the device. As noted, system information can include information that identifies applications and application versions that are already installed on the device. In addition, the device class can be used to identify applications that are incompatible with or are otherwise not suited to a device. For example, a camera application can be considered incompatible with a device that does not include a camera. Likewise, a mapping program that uses GPS can be considered incompatible with a device that does not have a GPS receiver.","Step  returns the filtered application catalog information to the device. For instance, filtering operations as just described in relation to steps - can produce a filtered application catalog that places applications in different filter groups relative to a particular device\/device class. The filtered application catalog and filter groups can be stored as filter data  as depicted in . The filtered application catalog information can be returned to the client  in various ways. This can include returning page information and\/or pages that reflect the filtering. The client  can use the filtered application catalog information in various ways to provide filtered views of the application catalog through one or more pages. This can include selectively showing or hiding applications that are placed within the different filter groups in different views and\/or pages.","In particular, the different filter groups can include targeted applications, general applications, installed applications, incompatible applications, and so forth. By filtering and forming filter groups in this manner, targeted applications can be selectively surfaced, promoted, highlighted, exposed, or otherwise be identified differently than other applications within pages used for interaction with the application catalog . General applications can be shown along with targeted applications and\/or using different pages, views, and\/or portions of pages. Applications that are already installed on a device as well as incompatible applications can be hidden, flagged, or otherwise be differentiated from targeted and\/or general applications in various pages.","The application store module  can also provide various options selectable to enable a user to turn filtering on and off. Thus, a default view may be configured to show targeted applications with a selectable control that can be used to expand the view to include general applications, all applications, and so forth. Thus, filter data  including filtered application catalog information and filter groups can be used in various ways to build pages that provide a great deal of flexibility to view and navigate an application catalog, further examples of which can be found below in relation to the example user interface of .",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 4","FIG. 4"],"b":["102","126","114","111"]},"Step  collects system information for a device. For example, application store module  can operate to collect and maintain various system configuration and capability data at a client . This can occur through interaction with an operating system of the client . In some embodiments, an application programming interface (API) can be used to obtain system information from the operating system, monitor changes to the system information, and update the system information as appropriate.","As noted, application store module  can also maintain device class data. Application store module  can also operate to derive a device class using system information. This can occur in connection with an attempt to access an application catalog and\/or at other times such as periodically, in response to system changes, and so forth. In one approach, the application store module  can interact over the network to obtain data that describes the various device classes. Application store module  can then use this data locally at the client to derive a device class. In another example, application store module  can communicate system information to a service provider  and obtain a device class determined by the service provider  in response to the communication. Again, this can occur at different times including but not limited to occurring in connection with an attempt to access an application catalog from the service provider .","Step  communicates the collected system information to a service provider to facilitate targeted access to an application catalog. For instance, application store module  can operate to communicate system information to the service provider  upon request, in connection with an attempt to access the application catalog , and so forth. This can include sending a device class if available and\/or system information by the client  to the service provider . In response to this communication, the service provider  can use the device class and\/or system information to filter the application catalog based on configuration and capabilities of the device using the various approaches described above and below.","Step  obtains page information returned by the service provider that reflects filtering of the application catalog based on the communicated system information. For example, application store module  can operate to obtain various page information from the service provider . This can occur when the client  attempts to access the application catalog . The service provider  can also push application store updates including page information to the client  at times other than when the client  attempts to access the application catalog . Application store module  can then use the application store updates locally without having to communicate with the service provider , such as when the device is \u201coffline.\u201d","Step  outputs one or more pages to enable interaction with the application catalog using the page information that is returned. In particular, application store module , alone or in conjunction with the resource manager module , can use the various page information obtained in step  to build and\/or output pages for interaction with the application catalog. The pages can be configured to present targeted applications in various ways. This can include selectively showing just the targeted applications, highlighting or promoting one or more targeted applications, enabling a user to selectively show all applications or just the targeted applications, and so forth. The pages can be pre-configured pages that are obtained from the service provider . A page or portions thereof can also be dynamically generated at the client  based on page information returned by the service provider. This can occur by using page and\/or code templates to dynamically configure at least some portions of the page. Pages, templates, code, URLs, images, and so forth used to build pages can be defined and implemented using any suitable techniques including but not limited to XML or other mark-up language code, documents, and tags.","Having considered various example methods for filtering and promoting application store applications, consider now an example user interface that can be employed to implement various aspects of filtering and promoting application store applications in accordance with one or more embodiments.","Example User Interface",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 5","b":["500","124","126","111","124","502","502"]},"In particular, the page  can include a device specific applications portion  that can be configured in any suitable way to identify and present device specific applications. In this example, the device specific applications portion  is represented by a selectable tile. Selection of this portion can expose another page that presents a listing or other view of various applications that are targeted to a particular device based upon system information as described herein.","The page  also includes a recommended applications portion  that can be configured in any suitable way to identify and present applications recommended by a particular entity. In the example, the recommended applications portion  is also shown as a tile that when selected can expose another page that presents a listing or other view of applications recommended by a corresponding entity This portion enables entities such as content providers , device manufacturers, and service providers  to target and\/or promote applications that are \u201capproved\u201d or otherwise considered good fits for particular devices.","For instance, the example provider \u201cX\u201d may be a manufacturer of a particular laptop device. Since the provider X would like users to have a good experience with their equipment, the provider X can use recommended applications portion  to recommend applications that they think provide such an experience. In some embodiments, device classes can be defined to correspond to particular content providers, manufacturers, or other entities. The recommended applications portion  can be configured to present different recommendations according to particular device classes. Thus, the content providers, manufacturers, or other entities can make use of their own device classes to recommend applications using the described techniques.","Page  also includes a promoted applications portion . Here a special offer, new application, popular item or other application can be promoted. The promoted applications portion  can be configured to present different promotions to different devices. In particular, the promotion to be shown in the promoted applications portion  can be selected based on device configurations and capabilities and\/or using device classes. Thus, devices with different configurations and capabilities may be served different promotions. In the example, the \u201cBall Breaker Pro\u201d application can be selected for devices that have a touch screen. Other devices that do not have a touch screen may be unable to use this application properly. Therefore, these devices can be served other device specific promotions.","Another feature is a filter selection control  that can be used to selectively turn filtering on or off. The filter selection control  can be used to toggle between different filtered and unfiltered views of pages that are presented by the application store module . This filter selection control  can make use of different filter groups derived in the manner previously described to turn different filtered views on or off. For example, the \u201cChange\u201d link in the example page  can be selected to expose various options that enable a user to select whether to show or hide different filter groups within the user interface .","The page  additionally includes a navigation bar  that represents various navigation links that can assist a user with navigation between different pages of the application catalog. Navigation links can be configured in various ways. In the depicted example the links are configured to present different views within selected categories. For example, the \u201cHome\u201d link can be used to navigate to the example home page depicted in . The \u201cTopics\u201d link can enable navigation to a view of applications organized according to different topics. The topics can be arranged to reflect different areas of interest such as geographic locations, specific devices or manufacturers, current events or holidays, and so forth. The topic pages can present different views of applications that are relevant to the various topics. The \u201cNew\u201d link can enable navigation to a view of newly available applications. Additional example links can be provided to represent additional categories such as applications that are related to a user's friends, work applications, games, kids applications, and so forth.","Having considered an example user interface for filtering and promoting application store applications, consider now an example system that can be employed to implement various aspects of filtering and promoting application store applications in accordance with one or more embodiments.","Example System",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 6","b":["600","602","602","114","102"]},"The example computing device  includes one or more processors  or processing units, one or more computer-readable media  which may include one or more memory and\/or storage components , one or more input\/output (I\/O) interfaces  for input\/output (I\/O) devices, and a bus  that allows the various components and devices to communicate one to another. Computer-readable media  and\/or one or more I\/O devices may be included as part of, or alternatively may be coupled to, the computing device . The bus  represents one or more of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. The bus  may include wired and\/or wireless buses.","The one or more processors  are not limited by the materials from which they are formed or the processing mechanisms employed therein. For example, processors may be comprised of semiconductor(s) and\/or transistors (e.g., electronic integrated circuits (ICs)). In such a context, processor-executable instructions may be electronically-executable instructions. The memory\/storage component  represents memory\/storage capacity associated with one or more computer-readable media. The memory\/storage component  may include volatile media (such as random access memory (RAM)) and\/or nonvolatile media (such as read only memory (ROM), Flash memory, optical disks, magnetic disks, and so forth). The memory\/storage component  may include fixed media (e.g., RAM, ROM, a fixed hard drive, etc.) as well as removable media (e.g., a Flash memory drive, a removable hard drive, an optical disk, and so forth).","Input\/output interface(s)  allow a user to enter commands and information to computing device , and also allow information to be presented to the user and\/or other components or devices using various input\/output devices. Examples of input devices include a keyboard, a cursor control device (e.g., a mouse), a microphone, a scanner, and so forth. Examples of output devices include a display device (e.g., a monitor or projector), speakers, a printer, a network card, and so forth.","Various techniques may be described herein in the general context of software, hardware (fixed logic circuitry), or program modules. Generally, such modules include routines, programs, objects, elements, components, data structures, and so forth that perform particular tasks or implement particular abstract data types. An implementation of these modules and techniques may be stored on or transmitted across some form of computer-readable media. The computer-readable media may include a variety of available medium or media that may be accessed by a computing device. By way of example, and not limitation, computer-readable media may include \u201ccomputer-readable storage media\u201d and \u201ccommunication media.\u201d","\u201cComputer-readable storage media\u201d may refer to media and\/or devices that enable persistent and\/or non-transitory storage of information in contrast to mere signal transmission, carrier waves, or signals per se. Thus, computer-readable storage media refers to non-signal bearing media. Computer-readable storage media also includes hardware elements having instructions, modules, and\/or fixed device logic implemented in a hardware form that may be employed in some embodiments to implement aspects of the described techniques.","The computer-readable storage media includes volatile and non-volatile, removable and non-removable media and\/or storage devices implemented in a method or technology suitable for storage of information such as computer readable instructions, data structures, program modules, logic elements\/circuits, or other data. Examples of computer-readable storage media may include, but are not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, hard disks, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, hardware elements (e.g., fixed logic) of an integrated circuit or chip, or other storage device, tangible media, or article of manufacture suitable to store the desired information and which may be accessed by a computer.","\u201cCommunication media\u201d may refer to a signal bearing medium that is configured to transmit instructions to the hardware of the computing device, such as via the network . Communication media typically may embody computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as carrier waves, data signals, or other transport mechanism. Communication media also include any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media include wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media.","Combinations of any of the above are also included within the scope of computer-readable media. Accordingly, software, hardware, or program modules, including the resource manager module , applications , communication module , application store module  and other program modules, may be implemented as one or more instructions and\/or logic embodied on some form of computer-readable media.","Accordingly, particular modules, functionality, components, and techniques described herein may be implemented in software, hardware, firmware and\/or combinations thereof. The computing device  may be configured to implement particular instructions and\/or functions corresponding to the software and\/or hardware modules implemented on computer-readable media. The instructions and\/or functions may be executable\/operable by one or more articles of manufacture (for example, one or more computing devices  and\/or processors ) to implement techniques for filtering and promoting application store applications, as well as other techniques. Such techniques include, but are not limited to, the example procedures described herein. Thus, computer-readable media may be configured to store or otherwise provide instructions that, when executed by one or more devices described herein, cause various techniques for filtering and promoting application store applications.","Techniques for filtering and promoting application store applications have been described herein. The described techniques can be employed to provide filtered application information and\/or application promotions to client devices that are based at least in part upon system information that describes configurations and capabilities of the client devices. System information for a client device can be detected in various ways and can be used to filter application data in an application catalog. Page information to be provided to the client device for interaction with the application catalog is then ascertained using the filtered application data. The page information enables the client device to render targeted application store pages having filtered application information and\/or promotions that are selected based on the detected system information.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The same numbers are used throughout the drawings to reference like features.",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
