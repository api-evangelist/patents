---
title: Measuring coupling between coverage tasks and use thereof
abstract: Test coverage is enhanced by measuring various types of coupling between coverage tasks. The coupling measurements may be implicit coupling measurements, explicit coupling measurements, coding coupling measurements, performance coupling measurements, resource coupling measurements or the like. Based on the coupling measurements, different coverage tasks may be grouped together. For example, closely coupled coverage tasks may be grouped together. The groups may also be determined based on an initial distribution of groups, by combining groups having closely coupled member coverage tasks. The groups may be ordered and prioritized, such as based on the size of the groups and the number of uncovered tasks in each group. The groups may also be ordered, such as based on coupling score which aggregate the coupling measurements of the member coverage tasks.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08719799&OS=08719799&RS=08719799
owner: International Business Machines Corporation
number: 08719799
owner_city: Armonk
owner_country: US
publication_date: 20110307
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present disclosure relates to code coverage in general, and to grouping of coupled coverage tasks, in particular.","Computerized devices control almost every aspect of our life\u2014from writing documents to controlling traffic lights. However, computerized devices are bug-prone, and thus require a testing phase in which the bugs should be discovered. The testing phase is considered one of the most difficult tasks in designing a computerized device. The cost of not discovering a bug may be enormous, as the consequences of the bug may be disastrous. For example, a bug may cause the injury of a person relying on the designated behavior of the computerized device. Additionally, a bug in hardware or firmware may be expensive to fix, as patching it requires call-back of the computerized device. Hence, many developers of computerized devices invest a substantial portion of the development cycle to discover erroneous behaviors of the computerized device.","During testing phase, developers, QA staff members, and the like test application to verify that a newly developed application operates properly. In some cases, test cases (also referred to simply as \u201ctests\u201d) may be devised to provide stimuli to the application, and enable testing whether its operation is correct (e.g., as expected).","However, as the total number of possible stimuli is usually large, testing can only falsify the requirements (i.e., exhibit execution in which the requirements are not met), but cannot verify correctness (i.e., prove that every execution conforms to the requirements). A measurement may be used to determine whether sufficient testing of the application was performed. Coverage analysis provides one such measurement.","A coverage model defines coverage tasks. A coverage measurement may be measured by comparing the number of covered coverage tasks with the total number of coverage tasks defined by the coverage model. For example, if the coverage model defines coverage tasks for each function of the application, and a function that is invoked during execution is considered as covering the correlating coverage task, then the greater the number of different functions that are invoked during the entire testing process, the higher the coverage measurement.","Various coverage models exist. Each defines different coverage tasks. A code coverage model defines coverage tasks associated with code elements of the Software-Under-Test (SUT). Various types of code coverage models exist, such as: function coverage (a coverage task is the execution of a function), statement coverage (a coverage task is the execution of a statement), branch coverage (a coverage task is traversing a control flow edge (i.e., taking a \u201cbranch\u201d)), decision coverage (a coverage task is each control structure in the SUT (such as an if statement); each control structure should be evaluated both to true and false), condition coverage, also known as predicate coverage (a coverage task is each Boolean sub-expression used by the SUT; each Boolean expression should be evaluated both to true and false), condition\/decision coverage (a combination of condition coverage and decision coverage), modified condition\/decision coverage (MC\/DC) (adds to the condition\/decision coverage metric the requirement that each condition should affect the decision outcome independently), path coverage (a coverage task is every possible route through the code of the SUT), Exit\/entry coverage (a coverage task is every possible invocation and return of each function), and the like.","After coverage is measured, review and analysis of the testing phase may be performed to improve it based on the measured coverage. One example would be to determine whether \u201csufficient\u201d testing was performed. In some cases, should the coverage measurement by above a predetermined threshold, it may be concluded that \u201csufficient\u201d testing was performed. Another example would be to design a test that would cover an uncovered coverage tasks. Yet another example would be to perform test selection: selection of a subset of executed tests that would induce the same coverage measurement. Test selection may enable future testing to be more efficient by reducing duplicity. Yet another example would be to group several related coverage tasks (some of which may be covered by some test suits while other may not) into sets, and perform coverage analysis of groups of tasks thus reducing the total number of items the user needs to review.","One exemplary embodiment of the disclosed subject matter is a computer-implemented method performed by a computerized device, comprising: obtaining coverage tasks, each coverage task is associated with a code element of a Software-Under-Test (SUT), the coverage tasks are associated with an initial distribution into groups; for each groups, with respect to substantially all other groups, computing a coupling score of the group with the other groups; grouping a set of closely coupled groups based on the computed coupling scores into a single group in a new distribution into groups.","Another exemplary embodiment of the disclosed subject matter is a computerized apparatus having a processor and a memory device, comprising: a coverage task obtainer operative to obtain coverage tasks associated with a Software-Under-Test (SUT), each coverage task is associated with a code element of the SUT, the coverage tasks are associated with an initial distribution into groups; a coupling score determinator operative to compute coupling scores of a first group with respect to a second group; a coverage tasks grouper operative to group closely coupled groups, based on the computed coupling scores.","Yet another exemplary embodiment of the disclosed subject matter is a computer program product comprising: a non-transitory computer readable medium; a first program instruction for obtaining coverage tasks, each coverage task is associated with a code element of a Software-Under-Test (SUT), the coverage tasks are associated with an initial distribution into groups; a second program instruction for, with respect to substantially all other groups and for each group, computing a coupling score of the group with the other groups; a third program instruction for grouping a set of closely coupled groups based on the computed coupling scores into a single group in a new distribution into groups; wherein the first, second, and third program instructions are stored on the non-transitory computer readable media.","The disclosed subject matter is described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the subject matter. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer-readable medium that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable medium produce an article of manufacture including instruction means which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","One technical problem dealt with by the disclosed subject matter is to group coverage tasks together. Grouping may be performed so as to include closely coupled coverage tasks.","Another technical problem is to prioritize groups so as to enable a user, such as a developer, to decide to which group the user should direct his attention first. Yet another technical problem is to modify initial distribution of coverage tasks into groups by unifying two or more groups into a single group, so as to decrease the total number of groups.","One technical solution is to determine coupling measurement of a first coverage task (associated with a first code element) with respect to a second coverage task (associated with a second code element). In some exemplary embodiments, the coupling measurement may be an explicit coupling measurement, such as indicated by an invocation of the second code element by the first code element. The coupling measurement may be an implicit coupling measurement, such as a coding coupling measurement, a resource coupling measurement, a performance coupling measurement, or the like. Based on the coupling measurements, closely coupled coverage tasks may be identified and grouped together in a single group. In some exemplary embodiments, an initial distribution to groups may be modified by unifying two or more groups into a single group based on coupling measurements between member coverage tasks of the initial groups by aggregating the coupling measurements between elements in separate groups and computing coupling scores between groups. The created groups may be prioritized based on coverage score, based on the total number of coverage tasks in the group, and on the number of uncovered coverage tasks in the group. Yet another technical solution is to aggregate coupling measurements of the coverage tasks within a group to compute a coupling score of the group. The coupling score of a group may be utilized in ranking and prioritizing the groups. In some exemplary embodiments, a plurality of types of coupling measurements may be measured. In some exemplary embodiments, coupling measurements of different types may be treated separately; therefore a plurality of coupling scores of different types may be calculated, based on different types of coupling measurements. The plurality of coupling scores of different types (whether associated with groups or single tasks) may be aggregated to calculate a single coupling score. In some exemplary embodiments, the coupling score may be a weighted average of the different coupling scores, each calculated based on different coupling measurements. Based on the determined groups and the determined prioritization, a user may determine for which aspect of the SUT a test should be designed to cover uncovered tasks in one of the groups.","One technical effect of utilizing the disclosed subject matter is to group correlated coverage tasks. Yet another technical effect is to further combine groups determined by an initial group distribution. Another technical effect is to reduce the number of discrete items the user should review in a substantial manner (e.g., by an order of magnitude). Each group of closely coupled coverage tasks may be associated with an aspect of the SUT, such as the same transaction, similar functionality, or the like. Yet another technical effect is to enable prioritizing groups of coverage tasks, based on their relative importance, which is indicated by the coverage property of the coverage tasks in the groups and may also be indicated by an aggregated value of the coupling measurements of the member coverage tasks of the group.","Referring now to  showing a computerized environment in which the disclosed subject matter is used, in accordance with some exemplary embodiments of the subject matter.","The environment  may comprise a Software-Under-Test (SUT)  having a form of code representation. The SUT  may be any form of computer program, such as a non-limiting example, a software, a firmware, an application, a web application, a smartphone app, or the like.","In some exemplary embodiments, a coverage tool , such as implemented using software, firmware, hardware, combination thereof, or the like, may be operative to determine coverage tasks based on the SUT . The coverage tool  may utilize a code coverage model, such as function coverage, statement coverage, branch coverage, decision coverage, condition coverage, condition\/decision coverage, modified condition\/decision coverage (MC\/DC), path coverage, exit\/entry coverage, and the like. The code coverage model may define for which code elements of the SUT , a coverage task is created. It will be understood that a \u201ccode element\u201d may be any element of the source code representation of the SUT , binary code representation of the SUT , or any other code representation of the SUT . A function may be a code element that pertains to function coverage, a statement may be a code element that pertains to statement coverage, an edge in a Control Flow Graph (CFG) may be a code element that pertains to branch coverage, and so forth.","In some exemplary embodiments, the coverage tool  is further operative to determine a coverage measurement based on execution of the SUT . The execution of the SUT  may be performed during the testing phase.","In some exemplary embodiments, the execution may be performed by an SUT exerciser . The SUT exerciser  may be a computerized apparatus, implemented using software, firmware, hardware, combination thereof, or the like. The SUT exerciser  may be configured to execute the SUT  using tests. The tests may be a part of a test suite , which may be retained in a database, storage device, storage server, Hard Drive, Flash disk, Random Access Memory (RAM), or the like. In some exemplary embodiments, the SUT exerciser  may apply the test suite  on the SUT  in a batch process.","In some exemplary embodiments, a grouping apparatus , implemented using software, firmware, hardware, combination thereof, or the like, may be configured to group coverage tasks, in accordance with the disclosed subject matter.","In some exemplary embodiments, grouping may be determined based on coupling measurements between coverage tasks. A coupling measurement of a coverage task and another coverage task may be a measurement of how much the coverage task affects or is affected by the other coverage task. In some exemplary embodiments, the coupling measurement may be formulated as a number, where the higher the number, the coupling of a first coverage task with a second coverage task is greater. Closely coupled coverage tasks may be grouped together. For example, coverage tasks that are each having a coverage measurement above a predetermined threshold coverage measurement (either a relative or an absolute threshold) may be considered closely coupled. As another example, closely coupled coverage tasks may be coverage tasks forming a clique, a strongly connected component, or a similar element in a graph, as is further disclosed hereinbelow. Additional manners to determine closely coupled coverage tasks may be obvious to a person of ordinary skill in the art reading the current disclosure.","In some exemplary embodiments, the coupling measurement is an asymmetric property, where a first coverage task may be considered closely coupled to as second coverage task, but the second coverage task may not be considered as closely coupled to the first coverage task thus given different coupling measurements.","In some exemplary embodiments, the grouping apparatus  may modify an initial sets of groups, such as determined by substring hole-analysis. The new distribution of coverage tasks into groups may be based on the initial sets of groups. In some exemplary embodiments, groups of the initial sets of groups may be combined into a single group in the new distribution, based on a determination that the groups are closely coupled to one another. Coupling of the groups may be determined based on the coupling measurement between the member coverage tasks of the groups. For example, when determining coupling between two groups: A and B, a coupling measurement of every pair (a,b), where a is a member of group A and b is a member of group B, may be utilized. In some exemplary embodiments, the coupling measurements may be aggregated into a coupling score of group A to group B. In some exemplary embodiments, the coupling score may be symmetric and may further take into account the pairs (b,a) as well.","In some exemplary embodiments, the grouping apparatus  may determine coupling scores to each of the groups. A coupling score may be an aggregation of the coupling measurements of member coverage tasks within the group into a single score. Aggregation may be achieved by calculating an average of the coupling measurements, by summing the coupling measurements, or the like. In some exemplary embodiments, the coupling scores may be normalized. For example, the coupling scores may be normalized to correlate to a standard deviation from the average. Other formulations of the coupling scores may be possible to a person of ordinary skill in the art.","In some exemplary embodiments, the coupling score between groups and of the groups may be calculated based on different types of specific coupling measurements, as are disclosed hereinbelow. A plurality of coupling scores associated with each type of coupling measurement may be calculated. The plurality of type-associated coupling scores of a coverage task may be aggregated into a coupling score of the coverage task. The coupling score may be a weighted average of the different types coupling measurements, a summation of the different types of coupling measurements (with or without using predetermined weights to each different type of coupling), or the like.","In some exemplary embodiments, the groups may be ranked. In some exemplary embodiments, the ranking may be performed based on a score that is calculated based on size of the group and the number of uncovered coverage task in the group. In some exemplary embodiments such a score may be calculated based on the ratio between uncovered coverage and the total number of member coverage tasks of the group. In such a case, a group where 90% of its member coverage tasks are not covered may be given a higher ranking that a group where 10% of its member coverage tasks are uncovered. In some exemplary embodiments, the size of the group may also be taken into account when the ranking is determined For example, a group comprising ten coverage tasks, one of which is uncovered may be given a lower ranking than a group comprising one hundred coverage tasks, ten of which are uncovered.","In some exemplary embodiments, the ranking may be based upon the coupling scores of the groups. The ranking may be utilized in prioritizing the groups, such as when determining whether sufficient coverage was reached, when determining which aspects of the SUT were not adequately covered and should be covered by a newly designed test (either manually designed, automatically generated, a combination thereof, or the like), when determining to which group of coverage tasks the developer's attention should be focused first, or the like.","In some exemplary embodiments, the grouping apparatus  may process groups that may include uncovered coverage tasks that are not covered by a test suite, so as to enable identification of aspects of the SUT that were not adequately covered by the test suite.","In some exemplary embodiments, a user , such as a developer, a QA staff member, a tester, a designer, or the like, may interact with the computerized environment . For simplicity, the user  may be generally referred to as the developer. The user  may utilize a Man-Machine Interface (MMI)  such as a terminal, a display, a keyboard, an input device or the like. The user  may design, develop, test, or the like, the SUT . The user  may design, update, maintain, or the like, the test suite . The user  may invoke the SUT exerciser , provide it with commands, rules, parameters, preferences, or the like. The user  may interact with the coverage tool  to view coverage information, provide commands, rules, parameters, preferences, or the like with respect to coverage analysis. The user  may view coverage information that took into account the ranking of the grouping apparatus . The user  may provide the grouping apparatus  with commands, rules, parameters, preferences, or the like. Based upon coverage information, the user  may determine to design a new test, to modify the SUT , fix a bug, update the test suite , or the like.","Referring now to  showing an apparatus in accordance with some exemplary embodiments of the disclosed subject matter. An apparatus , such as  of , may be configured to group coverage tasks, in accordance with the disclosed subject matter.","In some exemplary embodiments, a coverage task obtainer  may be configured to obtain coverage tasks associated with the SUT. The coverage tasks may be obtained from a coverage tool, such as  of . The coverage tasks may be obtained from a code coverage module . In some exemplary embodiments, the code coverage module  may be configured to provide only uncovered tasks.","In some exemplary embodiments, a coupling measurements determinator  may be operative to measure coupling measurements. In some exemplary embodiments, a coupling measurement is measured between a first coverage task and a second coverage task. In some exemplary embodiments, the coupling measurement may be asymmetric, such that the coverage measurement of the first coverage task with respect to the second coverage task may be different than the coverage measurement of the second coverage task with respect to the first coverage task.","In some exemplary embodiments, coupling measurements of different types may be measured. A coupling measurement may be an explicit coupling measurement, an implicit coupling measurement, an aggregation thereof, or the like.","In some exemplary embodiments, an explicit coupling measurement determinator  may be operative to measure an explicit coupling measurement. Explicit coupling measurement may be affected by explicit interactions between a first and a second coverage tasks. For example, in case the coverage tasks correspond to functions of the SUT, an exemplary explicit coupling measurement may be indicative of the first function calling or being called by the second function. In some exemplary embodiments, the explicit coupling measurement may be asymmetric, may be determined dynamically, statically, or the like, may be relative, absolute, or the like, may be formulated by a number, normalized, or the like. In some exemplary embodiments, the coupling may be relative, so that in case the first function calls a thousand functions, one of which is the second function, the explicit coupling measurement is lower than in the case that only ten other functions are called. In some exemplary embodiments, a different weight may be given to being invoked than to invoking, such as invoking other functions may be considered as a more\/less substantial evidence to explicit coupling between the coverage tasks. In some exemplary embodiments, a probability of invoking the function may be used, such as a static probability (e.g., out of the ten possible invocations of functions, two are of the second function; as another example: the probability of performing each function invocation may be estimated using static analysis measures), dynamic probability (e.g., out of ten execution of the first function, the second function was invoked a total of eight times and\/or the second function was invoked in seven of those times (e.g., in one operation of the first function, the second function was invoked twice)), or the like. It will be noted that explicit coupling is not limited to function coverage, and may be applied on other coding coverage models. Invocations may be determined based on files, statements, basic blocks, functions, or the like. Invocations may be determined using a Control Flow Graph (CFG) tool , as is known in the art.","In some exemplary embodiments, an implicit coupling measurement determinator  may be operative to measure an implicit coupling measurement. An implicit coupling measurement may be indicative of a coupling between the coverage tasks which is not explicit in the code elements. As is explained hereinbelow, some exemplary implicit coupling measurements may be coding coupling, resource coupling, performance coupling, and the like. In some exemplary embodiments, the implicit coupling measurement may be asymmetric, may be determined dynamically, statically, or the like, may be relative, absolute, or the like, may be formulated by a number. In some exemplary embodiments, the implicit coupling measurement may be an aggregated value, such as a weighted average or summation, of several implicit coupling measurements of different types.","In some exemplary embodiments, a coding coupling measurement determinator  may be operative to measure coding coupling measurement of the first coverage tasks with respect to the second coverage task. In some exemplary embodiments, coding coupling measurement is an indication, based on operations on the source code or any other representation of the SUT, that two coding elements are associated. In some exemplary embodiments, a revision control tool , as is known in the art, may be operative to monitor revisions made to source code of the SUT. Based upon revisions, certain inferences may be made as to the couplings of coding elements. For example, in case that there is a strong correlation between updating a first code element and of updating a second code element, then the coding coupling measurement may be relatively high. In some exemplary embodiments, the coding coupling measurement may be asymmetric in the sense that there is a strong correlation between updating the first code element and updating the second code element, but there may be a weak correlation between updating the second code element and updating the first code element. In some exemplary embodiments, the coding coupling measurement may be measured by determining a portion of modifications made to the first code element that are associated with a modification made to the second code element out of the total modifications made to the first code element. For simplicity, two different associated modifications made to the first and second code elements may be referred to as modifications made to both the first and second code elements. In some exemplary embodiments, associated modifications may be modifications made in within predetermined timeframe, optionally by the same developer; made contemporaneously; made with respect to the same update, bug, feature or the like; or the like. In some exemplary embodiments, a revision control tool  may provide an Application Programming Interface (API) enabling the apparatus  to obtain pertinent data associated with coding coupling.","In some exemplary embodiments, a resource coupling measurement determinator  may be operative to measure resource coupling measurements. Resource coupling measurements may be determined based on usage of a shared resource, such as for example, a global variable, a shared memory address, a cache line, a semaphore, or the like. In some exemplary embodiments, the resource coupling may be relative (e.g., out of the total usages of resources\/shared resources), absolute (e.g., a number of shared usages), or the like. The resource coupling may be statically estimated, dynamically determined, or the like. In some exemplary embodiments, resource coupling may be applied to SUTs exhibiting concurrent features, such as having a plurality of threads. In case of concurrent SUTs, resource coupling may be measured with respect to substantially concurrent usage of the shared resource.","In some exemplary embodiments, a performance coupling measurement determinator  may be operative to measure performance coupling measurements. Performance coupling measurement may be indicative of the first code element having an effect on a performance property associated with execution of the second code element. The effect may be in on a performance aspect, such as exhibited by performance metrics, for example, CPU utilization, memory usage, throughput, wait time, execution time, or the like. In some exemplary embodiments, the performance coupling may be determined using dynamic analysis, static analysis, or the like. In some exemplary embodiments, performance coupling measurements may be indicative of correlations (either positive or negative) between covering the first coverage task and of a performance metric while covering the second coverage task. In some exemplary embodiments, the correlation may be measured by comparing performance in executions covering the second coverage task in which the first coverage task is not covered and executions covering the second coverage task in which the first coverage task is covered. In some exemplary embodiments, performance coupling may be used with respect to concurrent SUTs. Effects on performance may be measured in cases in which a first concurrent entity (e.g., thread, process, or the like) covers the first coverage task and a second concurrent entity covers the second coverage task. Performance may be considered effected in predetermined timeframes in which both coverage tasks are covered by the two different concurrent entities. In some exemplary embodiments, performance may be measured using a profiling tool , as is known in the art.","In some exemplary embodiments, an analysis module such as a static analysis module  and\/or a dynamic analysis module  may be useful for analyzing operation of the SUT to determine information pertinent to the coupling measurement determinator . In some exemplary embodiments, a static analysis module  may be operative to determine aspects of the behavior of the SUT without executing the SUT. The analysis may be performed based on SUT representation such as the source code, binary code or the like, such as building a CFG, identifying shared resources, identifying declared critical sections, or the like. In some exemplary embodiments, the dynamic analysis module  may be operative to determine aspects of the behavior of the SUT based on executions of the SUT. The dynamic analysis module  may monitor executions on-the-fly, review traces of previous execution, or the like. In some exemplary embodiments, the dynamic analysis module  may instrument the SUT's source code, binary, or similar representation with instructions useful for logging and\/or monitoring operation of the SUT during execution thereof.","In some exemplary embodiments, a coverage tasks grouper  may be configured to group coverage tasks into groups. The grouping may be performed based on the coupling measurements. In some exemplary embodiments, a determination of closely coupled coverage tasks may be determined based on the coupling measurements. In some exemplary embodiments, the group may comprise coverage tasks that are closely coupled to each other (i.e., all member coverage tasks are closely coupled). In some exemplary embodiments, the group may comprise coverage tasks that are closely coupled to one another either directly or indirectly (i.e., two member coverage tasks may not be closely coupled to one another but indirectly closely coupled via an intermediate coverage task that is closely coupled to both).","In some exemplary embodiments, a coverage task may be a member of more than a single group. Once a coverage task is added to a group by the coverage tasks grouper , the coverage task may be selected to be a member of another group.","In some exemplary embodiments, a coverage task may be a member of exactly one group. Once a coverage task is added to a group by the coverage tasks grouper . the coverage task may be excluded from being selected as a member of another group.","In some exemplary embodiments, the coverage task grouper  may utilize machine learning techniques for determining closely-coupled coverage tasks, such as for example, clustering analysis, Support Vector Machines (SVM), or the like.","In some exemplary embodiments, a graph representation of the coverage task may be generated. In some exemplary embodiments, a vertex of the graph may represent a coverage task and an edge between two coverage tasks may indicate coupling. In some exemplary embodiments, the edges may be weighted with the coupling score between the coverage tasks. In some exemplary embodiments, the weight may be a score computed based on coupling measurements of different types. In some exemplary embodiments, the edges may be directed, so as to facilitate a showing of asymmetric coupling measurements between the coverage task A to coverage task B and between the coverage task B to the coverage task A. In some exemplary embodiments, the graph may consist only of edges (A,B), where the coupling measurement between A and B are above a predetermined threshold (e.g. absolute threshold or relative threshold). In some exemplary embodiments, the edge may exist in the case the coupling measurement is high with respect to all types of coupling measurements, at least one type of coupling measurement, or the like. In some exemplary embodiments, based on the graph, the groups may be determined, such as for example by identifying elements of the graph. In some exemplary embodiments, a clique may be identified and determined as a group. In some exemplary embodiments, Strongly Connected Components (SCCs) may be identified and determined as groups.","In some exemplary embodiments, an initial distribution of the coverage tasks into groups may be taken into account. In some exemplary embodiments, the initial distribution to groups may be determined by another technique, such as for example substring hole analysis. Groups of the initial distribution may be combined together into larger groups based on coupling measurements of the member coverage tasks. For example, two groups determined using substring hole analysis may be merged into a single group based on a determination that a substantial portion, such as fifty percent, of the first group is closely coupled to a substantial portion, such as thirty percent, of the second group. Other methods of aggregating the coupling measurements so as to indicate coupling of groups may be applied. By reducing the number of groups, an effort required by the developer to review all the groups may be reduces accordingly. In some exemplary embodiments, merging of groups may be performed based on a coupling score determined by a coupling score determinator , as is disclosed hereinbelow.","In some exemplary embodiments, the a graph having nodes representing groups of the initial distribution may be created. An edges between two nodes in the graph may be weighted with an aggregated coupling measurements between member coverage tasks of the two groups associated with the two nodes. Elements of the graph, such as SCCs may be identified and based thereof groups may be merged.","It will be noted that in substring hole analysis technique, a label associated with a coverage task is assumed to be indicative of its functionality. The label may be, for example, the name of function that the coverage task is associated with. As opposed to grouping performed by disclosed subject matter, in substring hole analysis the grouping is determined based upon having a shared substring in the label, and not based upon coupling measurements and identification of closely coupled coverage tasks. Substring hole analysis is disclosed in Yoram Adler, Eitan Farchi, Moshe Klausner, Dan Peleg, Orna Raz, Moran Shochat, Shmuel Ur and Aviad Zlotnick, \u201cAutomated Substring Hole Analysis\u201d, ICSE 2009, Yoram Adler, Eitan Farchi, Moshe Klausner, Dan Pelleg, Orna Raz, Moran Shochat, Shmuel Ur and Aviad Zlotnick, \u201cAdvanced Code Coverage Analysis Using Substring Holes\u201d, ISSTA 2009, which are both hereby incorporated by reference.","In some exemplary embodiments, a coupling score determinator  may be configured to aggregate the coupling measurements of member coverage tasks of a group into a coupling score. The aggregation may be performed by computing an average of the various coupling measurements, by summing the coupling measurements, or the like. In some exemplary embodiments, intermediate coupling scores of different types may be calculated based on coupling measurements of the same type. The intermediate coupling scores may be used to compute the coupling scores, such as by computing an average, a weighted average, a summation, or a similar computation. In some exemplary embodiments, the coupling score may be normalized. In some exemplary embodiments, the coupling score may be determined based on coupling measurements between member coverage tasks only. In some alternative exemplary embodiments, the coupling score may be determined based on all coupling measurements associated with member coverage tasks.","In some exemplary embodiments, the coupling score determinator  may be configured to determine a coupling score of a single task. In some exemplary embodiments, the coupling score determinator  may be configured to determine a coupling score of a group based on coupling measurements of the tasks within the group. In some exemplary embodiments, the coupling score determinator  may be configured to determine a coupling score between groups based on the coupling measurements of a pair of tasks (a,b) from the groups.","In some exemplary embodiments, a groups prioritizer  uses the coverage score of the group which may be calculated by a coverage score determinator  based on the coverage information obtained from coverage module . The groups prioritizer  may be configured also to create secondary prioritization based on the calculated coupling scores as well. In some exemplary embodiments, groups of coverage tasks may be ranked and ordered so as to enable a user, such as  of , to design a test that covers at least one uncovered coverage task in one of the high-priority groups. In such a scenario, the user may select the highly-ranked group of coverage tasks and design the test in accordance with the group. In some exemplary embodiments, a test generator (not shown) may be configured to generate, either automatically, or semi-automatically, a test based on selected uncovered coverage tasks.","In some exemplary embodiments, a code coverage module  may provide functionality such as provided by the coverage tool  of . The code coverage module  may generate the coverage tasks. The code coverage module  may generate the coverage tasks based on a predetermined code coverage metric. The code coverage module  may be configured to determine which coverage tasks are covered by a test suite and which are not. The coverage module  may be configured to generate only the uncovered tasks. In some exemplary embodiments, the code coverage module  may determine coverage by monitoring execution of the SUT, by reviewing logs of execution of the SUT, or the like. In some exemplary embodiments, the code coverage module  may be configured to compute a coverage measurement for the test suite, such as for example based on a portion of coverage tasks that was covered in the test suite.","In some exemplary embodiments, the apparatus  may comprise a processor . The processor  may be a Central Processing Unit (CPU), a microprocessor, an electronic circuit, an Integrated Circuit (IC) or the like. The processor  may be utilized to perform computations required by the apparatus  or any of it subcomponents.","In some exemplary embodiments of the disclosed subject matter, the apparatus  may comprise an Input\/Output (I\/O) module . The I\/O module  may be utilized to provide an output to and receive input from a user, such as  of . The I\/O module  may provide for an interface to external modules, tools, devices, or the like, such as the revision control tool , the control flow graph tool , the profiling tool , the test suite  of , the coverage tool  of , or the like.","In some exemplary embodiments, the apparatus  may comprise a storage device . The storage device  may be a hard disk drive, a Flash disk, a Random Access Memory (RAM), a memory chip, or the like. In some exemplary embodiments, the storage device  may retain program code operative to cause the processor  to perform acts s associated with any of the subcomponents of the apparatus . In some exemplary embodiments, the storage device  may retain the values of coupling measurements, the coupling scores, the coverage measurement, the selected subset of tests, or the like.","Referring now to  showing a flowchart diagram of a method in accordance with some exemplary embodiments of the disclosed subject matter.","In step , coverage tasks may be determined The coverage tasks may be determined by a code coverage module, such as  of , or by a coverage tool, such as  of .","In step , a test suite may be executed. In some exemplary embodiments, the test suite may be executed by an SUT exerciser, such as  of . In some exemplary embodiments, the test suite may be executed manually by a user, such as  of .","In step , for each coverage task, coupling measurement with respect to other tasks may be determined. The coupling measurement may be determined by a coupling measurements determinator, such as  of . The coupling measurement may be explicit coupling measurement, implicit coupling measurement, combination thereof, or the like. In some exemplary embodiments, the measurements may be determined using external tools, such as for example, a revision control tool, such as  of , a control flow graph tool, such as  of , and a profiling tool, such as  of .","It will be noted that analysis of the coverage tasks may be performed without execution of the test suite, such as by performing static analysis. Static analysis may be performed in lieu or in addition to dynamic analysis. Static analysis may be performed by a static analysis module, such as  of . In case the test suite is executed in step , dynamic analysis may be performed by a dynamic analysis module, such as  of .","In step , groups of closely coupled coverage tasks may be determined Alternatively, based on an initial distribution into groups, closely coupled groups may be merged to a single group. The determination may be based on coupling measurements between the coverage tasks\/groups. In some exemplary embodiments, the grouping may be performed based on Strongly Coupled Components in a graph representation of the relationships between coverage tasks\/groups, based on a clique in the graph, based on a similar element in the graph, based on a graph which takes into account all or some of the coupling measurements, or the like. In some exemplary embodiments, grouping may be performed by a coverage tasks grouper, such as  of .","In step , for each group, coverage score may be determined The coverage score may be determined by a coverage score determinator, such as  of .","In step , for each group, the coupling measurements may be aggregated into a coupling score between single tasks or between groups of tasks or for single group. In some exemplary embodiments, intermediate coupling scores with respect to different types of coupling measurements may be calculated and utilized in computing the coupling score of the group. The coupling score may be calculated by a coupling score determinator, such as  of .","In step , groups are prioritized based on the coverage attributes of the groups. For example, a score f(g) may be computed for each group g, where the score depends on the number of coverage tasks in g (i.e., |g|) and the number of uncovered coverage tasks in g (i.e., |u(g)|, where u(g) is the set of uncovered coverage tasks in g). Step  may further prioritize groups based on coupling scores. Prioritization may be performed by a groups prioritizer, such as  of .","The groups may be outputted to a developer to be viewed. In some exemplary embodiments, the groups may be outputted in a sorted manner, wherein the order is based on the prioritization.","In step , a test may be designed, generated, created or the like. The test may be directed towards covering at least one coverage task in a group having a relatively high determined priority. The test may be designed either manually by a developer, automatically by a test generator, or in a combination thereof. In some exemplary embodiments, the new test may be added to the test suite which may be executed again in step .","The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of program code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","As will be appreciated by one skilled in the art, the disclosed subject matter may be embodied as a system, method or computer program product. Accordingly, the disclosed subject matter may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, the present invention may take the form of a computer program product embodied in any tangible medium of expression having computer-usable program code embodied in the medium.","Any combination of one or more computer usable or computer readable medium(s) may be utilized. The computer-usable or computer-readable medium may be, for example but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, device, or propagation medium. More specific examples (a non-exhaustive list) of the computer-readable medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CDROM), an optical storage device, a transmission media such as those supporting the Internet or an intranet, or a magnetic storage device. Note that the computer-usable or computer-readable medium could even be paper or another suitable medium upon which the program is printed, as the program can be electronically captured, via, for instance, optical scanning of the paper or other medium, then compiled, interpreted, or otherwise processed in a suitable manner, if necessary, and then stored in a computer memory. In the context of this document, a computer-usable or computer-readable medium may be any medium that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device. The computer-usable medium may include a propagated data signal with the computer-usable program code embodied therewith, either in baseband or as part of a carrier wave. The computer usable program code may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, and the like.","Computer program code for carrying out operations of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"THE BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":["The present disclosed subject matter will be understood and appreciated more fully from the following detailed description taken in conjunction with the drawings in which corresponding or like numerals or characters indicate corresponding or like components. Unless indicated otherwise, the drawings provide exemplary embodiments or aspects of the disclosure and do not limit the scope of the disclosure. In the drawings:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
