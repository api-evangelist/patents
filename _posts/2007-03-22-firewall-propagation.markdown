---
title: Firewall propagation
abstract: Methods and systems for propagating data security policies and rules up a chain of network components, for example, from an end-user device having a firewall, to a network component at the “edge” of the network, from where a policy statement can be transmitted to a service provider are described. A device, such as a computer or mobile phone, has, as part of its firewall software, a policy propagation file, that communicates with pre-existing firewall software. The firewall software creates a policy statement upon detecting a triggering event, which is transmitted from the device to the next data security component up the chain, “upstream,” in the network. The firewall server may combine policy statements from numerous end-user type devices and transmit the policy statement to an external network component. The ISP or other service provider may then use the policy statement to implement data security rules for the devices in the network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07853998&OS=07853998&RS=07853998
owner: Mocana Corporation
number: 07853998
owner_city: San Francisco
owner_country: US
publication_date: 20070322
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","The present invention relates to communication network security. More specifically, it relates to firewall technology and exchange of data between networks.","2. Description of the Related Art","Firewalls have made a significant contribution to computer network security, particularly since the advent of the Internet. As is well known in the field of computer networking, there are numerous types of firewall technology, such as application-layer firewalls, network-layer firewalls, and so on, which can be implemented as hardware, software, firmware, or combinations thereof. However, firewalls and computer network security in general should continue to expand and improve. Attacks on enterprise and home networks are growing increasingly sophisticated. More individuals are using portable, hand-held, IP-enabled devices to communicate. While network bandwidth has increased, so has the number of users. Thus, sharing bandwidth and assigning priorities to bandwidth usage have become important factors to service providers and network operators. As wired and wireless digital communication becomes more prevalent, users are demanding more options with regard to network usage, such as paying premiums for guaranteed service, for a larger share of a digital pipeline, or for ensuring certain levels of network performance. Thus, for the benefit of various entities, ranging, for example, from telecom providers and ISPs to individual VoIP phone users, it would be useful to expand the capabilities of firewalls.","ISPs normally let all or most data traffic into a network, leaving it to the network owner to keep bad traffic out using devices such as firewalls. The ISP has access to the Internet via a high speed network, such as a fiber optic network. The connection from the ISP to a typical enterprise network, via a Ti line, for example, has a much smaller bandwidth and can be easily saturated and cause denial of service and other issues for the network owner. Malicious parties have the ability to consume the network's bandwidth between the network's firewalls and the ISP.","In addition, within a home network (as well as other networks), users may want to ensure that they have outgoing service at all times for certain devices. For example, a VoIP phone may be used to make a 911 call and the user will want to ensure that the call is made. However, if another device in the home network is consuming all the bandwidth (e.g., a DVR downloading a TV schedule or a PC downloading a movie file), the VoIP phone call may not make it through.","Therefore, it would be desirable have a firewall operated by the ISP that implements rules and policies of a network owner or the owner of a stand-alone device, thereby preventing unwanted traffic from entering the network and ensuring that there is available bandwidth for data leaving the network in certain specified circumstances.","In one aspect of the present invention, a data communication network is described. The network includes at least one device. In one embodiment, the network is an internal network of devices. In another embodiment, there is a single end-user device connected to a service provider's network. In the internal network embodiment, there is a data-filtering server having a trigger component that stores trigger names, trigger definitions, and propagation policies. It may also contain a trigger definition translation module and a trigger directory. The network also includes a data-filtering module having a policy propagation file and second, downstream data filtering module having a second policy propagation file. The network also has a data filtering policy server for combining policy statements. In another embodiment, the network is connected to an ISP network server. In yet another embodiment, the network has a policy statement containing trigger names and propagation policies.","In another aspect of the present invention, a method of filtering data entering a network is described. A policy statement is created on a network device or an end-user device, the statement containing trigger names, propagation policies, and trigger short definitions. Within the network, the policy statement is propagated to a network data security server.","It is then determined whether there is a match between a trigger name contained in the policy statement with a second trigger name contained in a second policy statement contained in the network data security server. If there is a match, a combined policy statement is created, wherein the combined policy statement contains data that overrides data in the first policy statement. It is then determined who should receive the combined policy statement. In one embodiment, a network component detects an event or action taking place and determines whether the event is a trigger, which includes checking whether the event is listed in a policy propagation file. In another embodiment, it is determined whether the event is a network-based trigger or an external trigger. In yet another embodiment, a policy statement is created by storing trigger data in the statement when the trigger is activated. In yet another embodiment, the policy statement is created by storing trigger data in a policy statement when a trigger is activated.","These and other features of the present invention will be presented in more detail in the following detailed description of the invention and the associated figures.","Example embodiments of a network utilizing novel firewall and firewall propagating technology according to the present invention are described. These examples and embodiments are provided solely to add context and aid in the understanding of the invention. Thus, it will be apparent to one skilled in the art that the present invention may be practiced without some or all of the specific details described herein. In other instances, well-known concepts and networking components and technologies have not been described in detail in order to avoid unnecessarily obscuring the present invention. Other applications and examples are possible, such that the following examples, illustrations, and contexts should not be taken as definitive or limiting either in scope or setting. Although these embodiments are described in sufficient detail to enable one skilled in the art to practice the invention, these examples, illustrations, and contexts are not limiting, and other embodiments may be used and changes may be made without departing from the spirit and scope of the invention.","Methods and networking systems for propagating and expanding the capabilities of one or more firewalls in private or public networks or of a stand-alone device are described in the various figures. A firewall, implemented in the described embodiment as either a software component in a user device (e.g., a PC, a VoIP phone, an IP-enabled PDA, and the like) or as a separate hardware component, implements security and data filtering rules to data entering or leaving a computing device.","In one aspect of the present invention, security rules of individual firewalls operate in response to triggers caused by certain events and conditions thereby creating a policy statement that contains instructions and modified rules. In one embodiment, these rules, encapsulated in the policy statement, are propagated up a chain of firewalls terminating at a firewall implemented by an ISP, or in the case of a stand-alone device, directly to the ISP firewall. This allows a firewall, operating at a more effective and advantageous network location, to implement the security rules of the originating firewall. In another embodiment, a policy statement may be transmitted downstream closer to the end user device. As described below, this allows for more efficient use of network bandwidth and can be effective, for example, in preventing denial of service attacks, ensuring bandwidth availability, enforcing priority of use for devices within a network, and the like. It also allows ISPs to fine tune their services to customers by permitting the propagation of a customer's firewall policy to be implemented at an ISP's firewalls.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1A","b":["102","104","106","102","104","102","102"]},"In the described embodiment, the external network is the Internet  or some other public network. The entity, for example, a company, receives and transmits data using an ISP  which provides services to the entity for accessing the Internet. In the described embodiment of the present invention, ISP  has a firewall . A connection  enables ISP  to provide and receive data from network . Bandwidth of connection  can vary but is normally in the range of 0.5 megabits to 155 megabits. The connection  between ISP  and Internet  is often a relatively high bandwidth connection in the range of 1 to 10 gigabits.","In enterprise network , firewall  is logically connected to numerous user components as well as non-end user or network components. Examples are shown in FIG A: a PC  having a firewall , a VoIP phone  with firewall , and a mobile, hand-held computing device , such as a PDA, having a firewall . Each have connections ,  and , respectively. The bandwidth of these connections may depend on the type of end-user device. The internal implementation of firewalls  (the \u201cedge\u201d firewall), , , and , and the propagation of these firewalls to firewall  at the ISP are described below.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 1B","FIG. 1A","FIG. 1B","FIG. 1B","FIG. 1A","FIG. 1A"],"b":["110","108","112","134","136","138","140","142","136","108","144","140","146","138","142","116","120","124","112"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIGS. 1A and 1B","FIGS. 1A and 1B","FIG. 1A"],"b":["104","108"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 2","FIG. 1A","FIG. 2","FIG. 2"],"b":["110","134","108","112","126","104","112"]},"Firewall  (for PC  not shown in ) has a policy propagation file  (\u201cpolicy file\u201d). Firewall  has policy file  and firewall  has policy file . These policy propagation files can be incorporated into firewall software or a firmware\/hardware device. In another embodiment, they can be enhancements to the existing firewalls. Firewall  also has a policy propagation file  and firewall  at ISP  also has a policy propagation file . There may be numerous other components in network  that have firewalls which are not shown in  for clarity and to clearly illustrate the functionality of the present invention. As described below, a generic firewall program of the present invention has two components: a pre-existing firmware\/software component and a trigger component that instructs on how to propagate triggers in the network. The trigger component is, in one embodiment, entirely contained within a firewall software program or hardware device, and is location independent within the network.","In one embodiment, firewall policy statements are propagated from, for example, firewalls , , and  to ISP firewall . Shown in  are example policy statements files originating at the various firewalls. Policy statement  is propagated from firewall  to firewall . In another embodiment, policy statement  and other policy statements may go to a policy server where they are combined before being further propagated upstream in the network. Policy statement  is transmitted from firewall  to firewall , as is policy statement  from firewall . As described in further detail below, one or more policy statements  are propagated from network edge firewall , where it exits enterprise network , crossing boundary , and are transmitted to ISP firewall . In another embodiment, the policy statements may be transmitted downstream to the end user devices in the network.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 3","b":["302","202","204","206","116","120","124","104","304","1","2","306","1","2","308","310","310","102","104","212","214","216","208","218"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 4","b":["402","212","214","216","116","120","124","402","404","104","402","102","104","104","106","102","104","102","108"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 5","FIG. 3","FIG. 5"],"b":["302","500","502","504","506"]},"In one embodiment, a trigger name is used as a unique identifier for a specific trigger definition. In some embodiments, the trigger name may contain some indicia of the type of trigger, of the conditions making up the trigger, or it may simply be an arbitrary name assigned by a network administrator. Trigger definition  is made up of one or more conditions or events that must occur for a trigger to be activated. For example, an event may be \u201cphone receiver pick up\u201d or \u201cnumber of TCP\/IP resets has exceeded 25\u201d or \u201cbad network traffic has exceeded a threshold value\u201d and so on. The type and variety of conditions and events can vary widely and will likely depend on the type of equipment being used. For example, the triggers in a policy propagation file stored in firewall  for PC  may be different from triggers in firewall  for VoIP phone . In one embodiment, there may be a process to translate a trigger definition, for example, by implementing a policy trigger translation module in the firewall software or as part of policy propagation file  itself. There may also be many trigger definitions that are common to most network devices, such as for components that are network driven. External triggers, for example, that may be caused by user-initiated events, are likely to be more component specific. Conditions and events can be set by one or more parties, such as the equipment manufacturer (for cell phones, PDAs, etc.), network administrators (for PCs, servers, etc.), or by component users. In another embodiment, a policy statement or individual trigger definition may be sent prior to a trigger event occurring, for example to edge firewall . This would enable the trigger policy (described below) to be performed in cases where a communication link or channel is not available or when a network wants to ensure high priority to propagation of specific policies.","If a condition or set of conditions is met, the action taken or performed is described in propagation policy category . For example, if a VoIP phone receiver is \u201cpicked up\u201d because a user wants to make a call (the trigger), the actions taken may be \u201cstop all ads from being delivered to that phone\u201d and \u201cfocus all resources on enabling user to make a call\u201d and the like. In another example, if the trigger is \u201cthe number of TCP\/IP resets has exceeded 25,\u201d the actions described in propagation policy category  may be \u201cdisable device\u201d and \u201cre-enable if bad traffic has decreased.\u201d The conditional language and syntax used for implementing the trigger definitions and the propagation policies may vary and may use known conditional programming language concepts and formats. Defining triggers, storing them in policy propagation file , and implementing them in firewall software for an end user device may require some degree of technical sophistication. Therefore, in other embodiments, there may be a template or software tool that allows users of consumer equipment, such as VoIP phones, PDAs, and home networks, to create policy propagation files and store them on a network or stand-alone devices. This would allow non-enterprise network users, such as users of home networks, to program their firewalls as they wish to meet their changing needs. In another embodiment, policy propagation file  may be structured more generically to show, for example, conditions necessary to disable, enable, or propagate firewall rules, rather than triggering specific policies or acts. In another example, the trigger policy is not propagated upstream in the network.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 6","b":["602","602","602","602","500","500","602","602","602","500","602","604","606","602","602"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 7","FIG. 2","FIG. 7","FIG. 7"],"b":["212","214","216","702","704","706","708","710","702"]},"In the described embodiment, policy statement  is created at the firewall, such as firewall ,  or . When a trigger is activated, that is, when the conditions defining the trigger are met, data on the trigger are stored in policy statement . The specific data items stored may vary and depend on what information is needed at the source. As noted above, in one embodiment, these data may be the trigger name  and the propagation policy . The type of data included in policy statement  may also depend on the component receiving the statement. For example, a short name (or code name) may only be needed instead of transmitting all or some of the data items shown in . The source, such as edge firewall  or policy server , may only need a trigger name or code to know which policy to execute. In other embodiments, it may be desirable to transmit more data. For example, if a policy server, such as server  in , receives the statement, it may only need the trigger name because it has data on all the policy propagation files for components it is responsible for or connected to. In another embodiment, if the receiving component has trigger directory  for all the triggers in the network or in a particular domain of the network from where it receives policy documents, statement  may only need a trigger name. In other embodiments, a full description of the trigger, as well as propagation policies , may be needed. In one embodiment, policy statement  may also include message type data  on the component from which the policy document was forwarded and origin data  providing information on the original source of policy statement , such as end user network components, PC  or VoIP phone . In the described embodiment, policy statement  has a digital signature  made by the originating firewall or device. A variety of known methods for implementing a digital signature or other security measures can be used to verify and authenticate that the policy document is being propagated by the device indicated in field . Also included in policy statement  is a timestamp field  that may be used in determining the lifetime of the policy statement. This may be useful in cases where the device is disabled or goes down because of an unexpected event.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 8","FIG. 8"],"b":["104","112"]},"At step  the network firewall receives a policy statement from a firewall downstream in network . In another embodiment the network firewall  may receive a policy statement from a policy server as described in . At step  the network firewall examines the policy statement to determine whether a trigger name , propagation policy , etc. is included or covered in the network firewall's policy propagation file, as described in . At step  a comparison is made between the firewall's policy propagation file and the policy statement that was received. If there is no match between a trigger short name, propagation policy, and the like, contained in the policy statement, control goes to step . At step , the network firewall applies the propagation policy embodied in the policy document.","If there is a match at step , network firewall  applies the propagation policy contained in its policy propagation file  thereby overriding the policy provided by the downstream network device or policy server. At step  network firewall  creates one or more policy statements that are transmitted outside of network . In the described embodiment, external policy statements  are transmitted to ISP firewall  at step . In the case where there are multiple ISPs or other recipients, firewall  determines which policy statements are transmitted to which recipients, ISPs, and the like. At this stage the processes within network  are complete.","When ISP firewall  receives policy statement , which may have a format derived in collaboration with ISP , it may apply its own policy propagation file . At ISP , the ISP may implement its own proprietary process of propagating policy statements that it receives from network  and other networks. Based on the instructions and policies contained in policy statement , ISP  may, for example, compute costs and fees associated with implementing the specific instructions for network  (i.e., the ISP's customer) and perform billing and accounting functions. ISP  may also delete duplicate policy statements or duplicate content among multiple statements, and perform other optimizations.","2. Use Cases","2.1. Preserving Bandwidth for Premium\/Critical Service","When certain user event are triggered (i.e. making\/receiving IP phone call, start downloading on-demand video), firewall would be enabled and propagated to block out lower priority traffic. An alternative solution is to provide prioritized queue to preserve the bandwidth of the premium service (by priority bit coloring). This policy could also be propagated upstream to enable early classification.","2.2. General Prevention of DOS\/Network Attack","Upon a general detection of network attach, via the local firewall, or under command of some sentry nodes, strong firewall protection policy would be enabled to protect the critical local service until the attack could be better analyzed, better firewall rule deployed to restore normal service.","2.3. Deploying Firewall Closer to Better Defensive Position","Firewall should be moved to network location with larger incoming bandwidth to prevent DOS attack which clog the data pipe.\n\n","Firewall should be moved to network location closer to the source of attack (based on routing information) to minimize adverse effect of attack to network.","Traditionally, firewall has been located closest to the source of protection for the purpose of keeping the number of packets to be inspected low, and as a side effect, creating less damages to data in case of false identification.","This approach does not work well for all cases, especially when the attacking sources are rampants. And a defensive posture, while protecting the local resource from damages, may not be the most effective to protect end-to-end service.","A more proactive firewall allows the system under protection to detecting and identifying the attack, deploying the shields (firewall), moving\/replicating the shields to the most effective place (during which time also monitoring the resulting the changing state). In a sense, this would attack the source of the attack and inoculate the overall system against its effect.","2.5. Central Management of Firewalls on Network Edge","Allow network provider to push common firewall policies toward edge device to protect network . . .","2.6. Dynamic Enabling\/Disabling of Firewall Rule Based on Usage Events",{"@attributes":{"id":"p-0054","num":"0000"},"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":["Firewall rule are grouped into profiles","Profiles are activated or deactivated by: software trigger, timer trigger, internal firewall rule trigger.\n        \n        ","Firewall Rule: A self contained, location independent, packet matching rule. A match or non-match will trigger a rule specific action.","Firewall Profile: A set of firewall rules to be evaluated as a sequence, enabled, or disabled as a set.","Firewall Program: An intelligent profile which support better programming of firewall rather than a straight sequence (including jump to, subroutine, execution context, variables, session context access, . . . )","Movable firewall: A firewall which could be applied anywhere on the network with the same terminating behavior. It may needs to be supported with network translation context when traverse across network address boundaries (NAT, VPN)","Moving direction: A ruleset could be moved upstream (from edge device to network), or downstream (from network to edge device)","Authorized client. An authorized client which could export its firewall ruleset.","TLS\u2014Transport Layer Security (RFC 4346). This is used to establish secure domain and transportation of firewall management packets between node.","DTLS\u2014Datagram TLS (RFC 4347). This could be used for firewall management packets to better address the asynchronous notification and performance issue.nat standnat","NAT: Network Address Translation (RFC3022). The translation of network address information from one address domain to another. This is done to allow node in a private network to communicate with node on the public network (or on another private network). This is not a strict firewall function, but since it is an integrated part of more home-gateway firewall implementation, it must be provided in Mocana firewall. Since this application attempts to move firewall across these boundaries, and as firewalls are built upon recognition of ip traffic (which include address information)\u2014special handling must be done to allow for the translation as well as the dynamic remap within each address domain.","SIP\u2014Session Initiation Protocol (RFC3261). Used for VOIP, and multimedia distribution and conference.\n\n4. Requirements\n","Firewall:\n        \n        ","Propagation:\n        \n        ","Reliability\n        \n        ","Performance\n        \n        "]}}}},"Implementation of this product has the following dependencies:\n\n","From this section forward, the discussion belongs to the design specifications.","6.1. Propagation Policies","6.1.1. General",{"@attributes":{"id":"p-0057","num":"0000"},"ul":{"@attributes":{"id":"ul0012","list-style":"none"},"li":{"@attributes":{"id":"ul0012-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0013","list-style":"none"},"li":["A policy file defines the firewall rule to be applied. The policy is to be transferred, enabled, disabled, executed as a single entity.","A terminating device could have one or more policies files deployed.","The policy files could be activate\/deactivated by local application (via library trigger points). When to activate\/deactivate the policies is totally under the control of the local device and hidden to the network.","A policy is identified uniquely in the network by the device identifier (name+certificate), and the policy name. All destination devices will keep track of the policy owner and will only act on those policies if the owner authentication matches.","A policy file could be accepted and propagate to another server (after local processing) according to the local propagation policy. This fact will be transparent to the original policy file owner. The propagation path per policy file will be remembered so subsequent changes on those policies will be propagated along the same path.","Policies is only propagated to device within the same secured administrative domain (defined by the same set of root certificates negotiated through TLS or DTLS).","A device could propagate policies to more than one servers (policy replication).","Even after propagation, a device could choose to run the policy locally as a backup protection.","Loop detection logic will be built-in to prevent propagation path looping for mis-configured network.","Policies statements will contain lifetime information so the policy could be removed automatically should the policy owner failed to refresh it.","A node could only request propagation for policies controlling its own resources (i.e. source or destination address belonged to it)\n\n6.1.2. Propagation Messages\n"]}}}},"There are 3 sets of information propagation for firewalls.\n\n","Hop counts, and source route trace information will be included in all messages to detect propagation loop and to send asynchronous rejections.","Messages may be concatenated and send en-block for efficiency.","6.1.3. Propagation Decision",{"@attributes":{"id":"p-0061","num":"0000"},"ul":{"@attributes":{"id":"ul0019","list-style":"none"},"li":{"@attributes":{"id":"ul0019-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0020","list-style":"none"},"li":["The server device may be designated as propagating device or as terminating device, or both.","Each candidate device to propagate the policy to is provisioned with a matching profile (address range, port range, protocol). Receiving policies which match this profile will be propagated out to that device.","It is possible to propagate to more than 1 device.","It is possible to propagate to 0 device. In which case, the policy is handled locally (if the local device is designated as such), or would be rejected back to the source.","Profile may still be rejected back to the source due to other reasons (i.e. lack of local resources)","Rejection will be propagated back all the way to the source or to the first node which could handle the policy locally.","Each server in the propagation path must remember its propagation ports for N,P)","Policy will only be accepted for the device owning that resource (i.e. routing address going to it).\n\n6.1.4. Local Policy Handling (and Summarization)\n","The server must track each profile and its owner, and act upon it based on the request of the authenticated owner.","Summarization of policies: This topic is for further study\u2014although the many algorithms (routing) are know, they are more suitable for a more static network as it is CPU intensive. For dynamic firewall application where filter could be enabled\/disabled quickly, the cost may outweight the benefit.","Application hooks should be supported so the server could implement some rule assisted summarization if desired (i.e. a matching policy would trigger an installation of an alternative policy locally).","Policy could be moved from egress to ingress filter by application of routing lookup in the reverse direction.\n\n6.2. Process Flow\u2014Client\n\n6.2.1. Configuration\n","Configure trusted root level certificate","[Optionally] Configure list of peer for connection to for propagation","[Optionally] Enabling support for peer discovery","Configure firewall profiles","Configure activation rule for firewall\n\n6.2.2. Initialization\n","Establish connection to all known peers for updating rule. The peer list could be changed during runtime.","Once there is a server connection found, the propagater is activated.","The local client decides which profile is could be transfered to the server side (by routing rule), and sends them to the server.","Profiles sent to server are automatically expired unless refreshed by the client.","During normal operation, if a local profile is activated, it's status will be sent also to the server for activation of the rule.","The local machine may also activate the rule as a back-end protection in case the server side activation failed for some reason. It is expected that the local rule will not be matched except for transient conditions (activation and deactivation time)\n\n6.2.3. Runtime\n","When profile files are added\/deleted\/updated\n        \n        ","When peer are added (or went down and back up)\n        \n        ","When event trigger change in profile status.\n        \n        ","Auditing\n        \n        ","Configure trusted root level certificate","Configure role of server (propagation, termination, or both)","Configure list of propagating servers.\n\n6.3.2. Initialization\n","Activating list of pre-existing profile (locally)","Establishing secured control channel to all propagating server.\n\n6.3.3. Runtime\n","Accepting secured connections from other routers.","When profiles are received from client\n        \n        ","When activation is received from client\n        \n        ","When audit is received from client.\n\n6.4. Firewall Engine\n","Fast packet classification engine.","Support for deep packet inspection.","Execution engine for running of firewall programs.","Definition of firewall program\n\n6.4.1. Firewall Rule (Packet Match)\n"]}}}},"A firewall rule has 2 parts: a packet matching part and a disposition part.","Packet matching is based on a simple data matching pattern: anchor offset, offset, size, mask (optional), compare\/compare-low, compare-high (optional), in list, . . .\n\n","This is the base instruction. It is possible also, to create more complex instruction later which could match multiple hard-coded fields for optimization.","The disposition part tells the engine what to do if the packet match:\n\n","This optional module is for matching of higher level application data (mostly string based\u2014i.e. XML, HTML, FTP, . . . ). This should support\n\n","The profile is a list of firewall rules and some additional rules which affects the filter flow and engine (it is similar to an assembly or micro-code instruction). The firewall engine just execute the sequence starting from the 1st instruction. Some standard components of an execution engine will be implemented to support general processing.\n\n","The rules are executed until a terminal condition is reached: ACCEPT, REJECT, DROPPED. If the sequence terminated w\/o a terminating condition, the packets will be treated with a user configured default rule.","A small parser should be provided to translate high level filter definition to the assembly level sequence. It will support\n\n","Trigger supports allows rules\/Sequence to be added\/removed\/enabled\/disabled during runtime. Other applications on the platform should be able to call the provided API (from the application space) and change the rule.","The following support (API's) must be provided\n\n","The last 2 operations must be done very quickly to support dynamic application of firewall based on real-time triggering events.\n\n","Support for enabling\/disabling of single rule\/sequence is simple. The status could be simply marked, and the ip\/firewall process will start\/skip processing on the next packet. This works for single table change.","For related table changes, or modification of active tables itself, the ip\/firewall processing must be stopped during the time to avoid execution in staled table. To improve performance, one of the technique could be to implement active\/standby table to allow updating directly to standby, and instruct ip\/firewall to switch working table, so there are no impact for processing. This has the added benefit of being able to rollback if there are any problem applying the change.","6.4.6. Statefull Firewall Support","In stateful firewall, TCP incoming packet could be matched with existing TCP session state and use the matching rule of the TCP session rather than the packet based rule.","Support is added via a new instruction in the filter rule. The same structure could be used, except the comparison value would be TCP state, and the lookup would be based external table (TCP sessions)","6.4.7. Deny of Service (DOS) Detection","DOS detection could be implemented by supporting filter context (i.e. a rule\/group of rule is associated with a context). The context are used to keep statistics on that particular type of traffic. Based on that, different filters could be applied:\n\n","This section is for support for 3rd party application to also install hooks into ip\/firewall for\u2014filtering and adding of disposition state.","6.4.9. Protocol Stack Integration","The firewall integrates with the protocol stack via the following 3 set of hooks (IP stack, L3 handlers, and L4 handlers)\n\n","This includes using certificates to authenticate peer, and advertisement of service\/capabilities of each peer.","6.5.2. Peer\/Network Discovery","This support (optional) allows for the discovery of peer without manual configuration. It uses algorithm similar to route tracing to discover router in the path, then attempt to negotiate certificate and service to discover if that router would support remote installation of firewall.","6.5.3. Installation of Firewall Profiles","TBD","6.5.4. Update\/Delete of Firewall Profiles","TBD","6.5.5. Monitoring of Firewall Owners","Each firewall implement rules for a remote owner must continuously monitor the owner status. If the owner no longer update its status, the rule will be deactivated automatically (exception for DOS handling when the owner has difficulty maintain continuos control).","6.5.6. Startup (Client and Server Side)","TBD","6.6. NAT","This component could be derived from Mocana TCP\/IP stack currently with some modification to make it standalone, and support for VOIP applications.","NAT supports is summarized as followed:\n\n","Although illustrative embodiments and applications of this invention are shown and described herein, many variations and modifications are possible which remain within the concept, scope, and spirit of the invention, and these variations would become clear to those of ordinary skill in the art after perusal of this application. For example, firewall rule\/policy propagation may also occur in the downstream direction whereby, for example, a firewall is moved closer to the source of an attack (e.g., a rouge component in the network). In another example, network address translation (NAT) data may have to be taken into consideration when transmitting data in policy statements and other firewall rule data across network boundaries, such as boundary . This may require altering a rule or policy, public and private addresses, new NAT entries based on traffic flow, and so on. Accordingly, the embodiments described are to be considered as illustrative and not restrictive, and the invention is not to be limited to the details given herein, but may be modified within the scope and equivalents of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["References are made to the accompanying drawings, which form a part of the description and in which are shown, by way of illustration, specific embodiments of the present invention:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 2","FIG. 1A"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6","b":"602"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
