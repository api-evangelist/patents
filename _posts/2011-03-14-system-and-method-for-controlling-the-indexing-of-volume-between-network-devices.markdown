---
title: System and method for controlling the indexing of volume between network devices
abstract: The invention is directed towards enabling data volume and data type based licensing of software in a distributed system of a plurality of remote and/or local nodes. The invention enables measuring and optionally restricting the use of software based on one or more provided licenses that restrict the amount and type of data that may be processed by the software. New and older licenses may be added together for a single, bulk entitlement for a given volume of data processing for one or all types of data. Different users in the same enterprise may combine license entitlements too. Also, a new license can be acquired repeatedly, without requiring the issuance of combined licenses by the issuing authority and/or the revocation of prior licenses.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08589304&OS=08589304&RS=08589304
owner: Splunk Inc.
number: 08589304
owner_city: San Francisco
owner_country: US
publication_date: 20110314
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["The invention is directed to licensing an application for use by a customer, and more particularly, to managing a licensed volume and type of data that is processed by a distributed application.","Many software licensing facilities control the use and installation of software based on the number of devices or nodes that are enabled to use it. Also, many companies use software on a variety of distributed systems that can range from a single computer for a small business to a collection of servers and a plurality of user computer nodes for a large corporation. Also, the volume of data processed by a node in a small business can be a magnitude less than the volume of data processed by a node in a large corporation.","Additionally, the type of data processed by large and small business can vary widely, such as sending and receiving messages, creating and storing documents, hosting web sites, database searches, facilitating online transactions, and the like. Furthermore, the expense of developing and maintaining software that can handle the type and volume of data processed by a large corporation can be substantially greater than the effort expended to do somewhat the same for a small business. Consequently, determining a price for the licensing of software for different sizes of businesses with different volumes of data and types of data can be difficult. Thus, it is with respect to these considerations and others that the present invention has been made.","Throughout the specification and claims, the following terms take the meanings explicitly associated herein, unless the context clearly dictates otherwise. The phrase \u201cin one embodiment\u201d as used herein does not necessarily refer to the same embodiment, though it may. Furthermore, the phrase \u201cin another embodiment\u201d as used herein does not necessarily refer to a different embodiment, although it may. Thus, as described below, various embodiments of the invention may be readily combined, without departing from the scope or spirit of the invention.","In addition, as used herein, the term \u201cor\u201d is an inclusive \u201cor\u201d operator, and is equivalent to the term \u201cand\/or,\u201d unless the context clearly dictates otherwise. The term \u201cbased on\u201d is not exclusive and allows for being based on additional factors not described, unless the context clearly dictates otherwise. In addition, throughout the specification, the meaning of \u201ca,\u201d \u201can,\u201d and \u201cthe\u201d include plural references. The meaning of \u201cin\u201d includes \u201cin\u201d and \u201con.\u201d","As used herein, the term \u201cevent data\u201d refers to computing data that is collected about an event for a computing system, including, for example, an action, characteristic, condition (or state) of the computing system. For example, such events may be about a computing system's performance, actions taken by the computing system, or the like. Event data may be obtained from various computing log files generated by the computer's operating system, and\/or other monitoring application. However, event data is not restricted by a file format or structure from which the event data is obtained. In one embodiment, event data may have metadata associated with it.","As used herein, the term \u201cmetadata\u201d refers to a plurality of features that characterize event data. Such metadata includes, for example, a computer host from which the event data is obtained, or otherwise associated with; a timestamp associated with the event data; a file name or source name with which the event data is associated; a source type for the event data; and the like. A source type may refer to whether the event data is from a log file, a system metric, or some other data type.","As used herein, the term \u201cLicense\u201d refers to a single, atomic entity that defines entitlements such as feature enablement, indexing byte quota, and the like. A license may be generated via a template. Typically, each template would have a fixed set of features turned either on or off. In this manner, control is provided for the different types of licenses that are released to licensees such as customers. Also, creating a new license for a future feature is simplified by the use of a template license. In at least one embodiment, at least some licenses may be embedded in an application so that if no external licenses are available, the application can use one or more embedded licenses to operate at least partially, e.g., a free license and a forwarder license. See  for a sample license template file.","As used herein, the term \u201cStack\u201d refers to a collection of licenses with the same \u201ctype\u201d, e.g., the same StackId. The stack manages the logical combining of multiple licenses, whether it is adding up indexing byte quota or presenting a single set of the features enabled by its collection of licenses. Some stacks are stackable, such as a stack used in an Enterprise, while other stacks are not, e.g., a Free license stack, a Forwarder of data license stack, and a Download-Free Trial stack.","As used herein, the term \u201cPool\u201d is somewhat similar, albeit different, to partitioning a disk volume, e.g., a pool logically partitions a stack. The logical partitioning may be used to divvy up license privileges to groups of slave computers. The pools can be allocated to specific indexers or configured to accept any indexer that connects to it. A default pool for licenses is typically created on startup so that an application is ready to perform right away.","As used herein, the terms \u201cStack Group\u201d, or \u201cGroup\u201d refers to one or more stacks. Each stack is typically a member of a single group. And for at least one embodiment, just one group is active at any given time. Also, an \u201cEnterprise\u201d group often includes more than one stack such as an enterprise stack and one or more fixed source stacks. Additionally, some stacks may map to their own particular group. The Group enables multiple stacks of licenses to be active for a given time.","As used herein the term \u201cFeature\u201d refers to those features that a license enables for use by a customer. For example, a \u201clocal search\u201d feature enables a customer to search over their data, an authentication or \u201cauth\u201d feature enables an administrator to create different users with different access controls. Typically, each license contains a list of one or more features that it enables. A particular feature is enabled if a valid license is sold\/provided to the customer that indicates that this feature is enabled. A list of at least some features may include: (1) Auth\u2014authentication; (2) FwdData\u2014allows instance to forward data; (3) RcvData\u2014allows instance to receive data; (4) LocalSearch\u2014enables searching of local indexed data; (5) DistSearch\u2014enables searching across distributed peers; (6) RcvSearch\u2014allows instance to act as search peer; (7) ScheduledSearch\u2014enables schedule searches; (8) Alerting\u2014enables alerting on searches; (9) DeployClient\u2014allows instance to be a deployment client; (10) DeployServer\u2014allows instance to be a deployment server; (11) Web\u2014allows instance to bring up web interface; (12) SyslogOutputProcessor\u2014enables syslog forwarding; and (13) SigningProcessor\u2014enables signing.","The following briefly describes the embodiments of the invention in order to provide a basic understanding of some aspects of the invention. This brief description is not intended as an extensive overview. It is not intended to identify key or critical elements, or to delineate or otherwise narrow the scope. Its purpose is merely to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.","Briefly stated, embodiments are directed towards enabling data volume and data type based licensing of software in a distributed system of a plurality of remote and\/or local nodes. The invention enables measuring and optionally restricting the use of software based on one or more provided licenses that restrict the amount and type of data that may be processed by the software. New and older licenses may be added together for a single, bulk entitlement for a given volume of data processing for one or all types of data. Different users in the same enterprise may combine license entitlements too. Also, a new license can be acquired repeatedly, without requiring the issuance of combined licenses by the issuing authority and\/or the revocation of prior licenses.","In at least one embodiment, license entitlements may be shared collectively, or divided across, multiple nodes or groups of nodes. A user may allocate entitlement to groups of nodes so that they may collectively process data, without the limitation that the systems be individually licensed nor limited to a fixed fraction of the total licensed entitlement. However, in at least one embodiment, explicit allocation of a specific license entitlement may be assigned to one or more individual nodes.","Also, in at least one embodiment, different types of data may be separately and differently treated based on its structure, content or source for measurement of its licensed amount of data flow. Additionally, a type of data may be licensed or metered for data flow based on where, when, what and\/or how it was created, and it is not known a priori on which node the data may be processed. In at least one embodiment, the most data type specific license is metered before a license that allows processing of more general types of data.","Furthermore, in at least one embodiment, a corrective action is provided if a licensed entitlement is exceeded, such as displaying a warning or notification, disabling one or more features, until the licensed entitlement is increased, e.g., another license for additional data flow is purchased. Additionally, in at least one embodiment, a license can include a collection of features which can be turned on or off during the license creation process. In this way, a license can be custom tailored to the needs of a particular customer. Moreover, a combination of each of the embodiments briefly discussed herein enable efficient licensing of software for distributed systems based on at least one of data type and a volume of data.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 1","FIG. 1"],"b":["100","107","101","103","109"]},"One embodiment of client devices - is described in more detail below in conjunction with . Generally, however, client devices - may include virtually any computing device capable of communicating over a network to send and receive information, including event data and related metadata, performing various online activities, offline actions, or the like. In one embodiment, one or more of client devices - may be configured to operate within a business or other entity to perform a variety of services for the business or other entity. For example, client devices - may be configured to operate as a web server, an accounting server, a production server, an inventory server, an indexer of data, or the like. However, client devices - are not constrained to these services and may also be employed, for example, as an end-user computing node, in other embodiments. Further, it should be recognized that more or less client devices may be included within a system such as described herein, and embodiments are therefore not constrained by the number or type of client devices employed.","The set of such devices may include devices that typically connect using a wired or wireless communications medium such as personal computers, servers, multiprocessor systems, microprocessor-based or programmable consumer electronics, network PCs, or the like. In one embodiment, at least some of client devices - may operate over wired and\/or wireless network. In some embodiments, client devices - may include virtually any portable computing device capable of receiving and sending a message over a network, such as network .","Client devices - also may include at least one other client application that is configured to receive and\/or send data, including event data and\/or related metadata, between another computing device. The client application may include a capability to provide, index, and\/or to receive requests for event data and\/or related metadata, or the like. However, the client application need not be limited to merely providing indexed event data and related metadata, and may also provide other information, and\/or provide for a variety of other services, including, for example, monitoring for events within and\/or between client devices.","The client application may further provide information that identifies itself, including a type, capability, name, and the like. Such information may be provided in a network packet, or the like, sent between other client devices, DLM , or other computing devices.","Client devices - may further be configured to include a client application that enables an end-user to log into an end-user account that may be managed by another computing device, such as DLM , or the like. Such end-user account, in one non-limiting example, may be configured to enable the end-user to search for event data. However, participation in such activities may also be performed without logging into the end-user account.","Network  is configured to couple network devices with other computing devices, including, DLM , and client devices -. Network  is enabled to employ any form of computer readable media for communicating information from one electronic device to another. Also, network  can include the Internet in addition to local area networks (LANs), wide area networks (WANs), direct connections, such as through a universal serial bus (USB) port, other forms of computer-readable media, or any combination thereof. On an interconnected set of LANs, including those based on differing architectures and protocols, a router acts as a link between LANs, enabling messages to be sent from one to another. In addition, communication links within LANs typically include twisted wire pair or coaxial cable, while communication links between networks may utilize analog telephone lines, full or fractional dedicated digital lines including T1, T2, T3, and T4, and\/or other carrier mechanisms including, for example, E-carriers, Integrated Services Digital Networks (ISDNs), Digital Subscriber Lines (DSLs), wireless links including satellite links, or other communications links known to those skilled in the art. Moreover, communication links may further employ any of a variety of digital signaling technologies, including without limit, for example, DS-0, DS-1, DS-2, DS-3, DS-4, OC-3, OC-12, OC-48, or the like. Furthermore, remote computers and other related electronic devices could be remotely connected to either LANs or WANs via a modem and temporary telephone link. In one embodiment, network  may be configured to transport information of an Internet Protocol (IP). In essence, network  includes any communication method by which information may travel between computing devices.","Additionally, communication media typically embodies computer-readable instructions, data structures, program modules, or other transport mechanism and includes any information delivery media. By way of example, communication media includes wired media such as twisted pair, coaxial cable, fiber optics, wave guides, and other wired media and wireless media such as acoustic, RF, infrared, and other wireless media.","In some embodiments, network  may be further configurable as a wireless network, which may further employ a plurality of access technologies including 2nd (2G), 3rd (3G), 4th (4G), 5D (5G) generation radio access for cellular systems, WLAN, Wireless Router (WR) mesh, and the like. In one non-limiting example, network , when configured as a wireless network, may enable a radio connection through a radio network access such as Global System for Mobile communication (GSM), General Packet Radio Services (GPRS), Enhanced Data GSM Environment (EDGE), Wideband Code Division Multiple Access (WCDMA), and the like.","DLM  includes virtually any network device usable to operate to receive and\/or analyze event data from client devices -. DLM  may, for example, be configured to perform management of licenses for metering different types of data that are indexed for a corresponding flow of data. In one embodiment, a license is received by DLM  for a particular type of data and a volume of data to be indexed. Also, in at least one embodiment, the DLM enables a plurality of licenses of substantially the same type to be aggregated into a stack of licenses. The entitlement provided by the stack of licenses may be assigned to a particular client device or a pool of client devices.","DLM  may employ processes such as described below in conjunction with  to perform at least some of its actions. Devices that may operate as DLM  include various network devices, including, but not limited to personal computers, desktop computers, multiprocessor systems, microprocessor-based or programmable consumer electronics, network PCs, server devices, network appliances, and the like.","Although  illustrates DLM  as a single computing device, the invention is not so limited. For example, one or more functions of the DLM  may be distributed across one or more distinct network devices. Moreover, DLM  is not limited to a particular configuration. Thus, in one embodiment, DLM  may contain a plurality of network devices to perform compressed journaling and\/or replication or recovery. Similarly, in another embodiment, DLM  may contain a plurality of network devices that operate using a master\/slave approach, where one of the plurality of network devices of DLM  operates to manage and\/or otherwise coordinate operations of the other network devices. In other embodiments, the DLM  may operate as a plurality of network devices within a cluster architecture, a peer-to-peer architecture, and\/or even within a cloud architecture. Thus, the invention is not to be construed as being limited to a single environment, and other configurations, and architectures are also envisaged.","Illustrative Client Device",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 2","FIG. 2","FIG. 1"],"b":["200","200","200","101","103"]},"As shown in the figure, client device  includes processor  in communication with a mass memory  via a bus . Client device  also includes a power supply , one or more network interfaces , an audio interface , a display , and an input\/output interface . Power supply  provides power to client device .","Network interface  includes circuitry for coupling client device  to one or more networks, and is constructed for use with one or more communication protocols and technologies including, but not limited to, 2nd (2G), 3rd (3G), 4th (4G), and 5(5G) generation radio access for cellular systems, global system for mobile communication (GSM), code division multiple access (CDMA), time division multiple access (TDMA), Universal Mobile Telecommunication System (UMTS), High Speed Downlink Packet Access (HSDPA), user datagram protocol (UDP), transmission control protocol\/Internet protocol (TCP\/IP), SMS, general packet radio service (GPRS), WAP, ultra wide band (UWB), IEEE 802.16 Worldwide Interoperability for Microwave Access (WiMax), SIP\/RTP, or any of a variety of other communication protocols. Network interface  is sometimes known as a transceiver, transceiving device, or network interface card (NIC).","Audio interface  is arranged to produce and receive audio signals such as the sound of a human voice. For example, audio interface  may be coupled to a speaker and microphone (not shown) to enable telecommunication with others and\/or generate an audio acknowledgement for some action. Display  may be a liquid crystal display (LCD), gas plasma, light emitting diode (LED), or any other type of display used with a computing device. Display  may also include a touch sensitive screen arranged to receive input from an object such as a stylus or a digit from a human hand.","Client device  also comprises input\/output interface  for communicating with external devices, such as a keyboard, or other input or output devices not shown in . Input\/output interface  can utilize one or more communication technologies, such as USB, infrared, Bluetooth\u2122, or the like.","Mass memory  includes a RAM , a ROM , and other storage means. Mass memory  illustrates an example of computer readable storage media (devices) for storage of information such as computer readable instructions, data structures, program modules or other data. Mass memory  stores a basic input\/output system (\u201cBIOS\u201d)  for controlling low-level operation of client device . The mass memory also stores an operating system  for controlling the operation of client device . It will be appreciated that this component may include a general-purpose operating system such as a version of UNIX, or LINUX\u2122, or a specialized client communication operating system such as Windows Mobile\u2122, Google Android\u2122, Apple iOS\u2122, or the Symbian\u00ae operating system. The operating system may include, or interface with a Java virtual machine module that enables control of hardware components and\/or operating system operations via Java application programs.","Mass memory  further includes one or more data storage , which can be utilized by client device  to store, among other things, applications  and\/or other data. For example, data storage  may also be employed to store information that describes various capabilities of client device . The information may then be provided to another device based on any of a variety of events, including being sent as part of a header during a communication, sent upon request, or the like. At least a portion of the information may also be stored on a disk drive or other computer-readable storage device  within client device . Data storage  may further store event data and metadata . Such event data and metadata  may also be stored within any of a variety of other processor-readable storage devices, including, but not limited to a hard drive, a portable storage device, a flash drive, a DVD\/CD-ROM, tape drive, or the like, such as illustrated by processor-readable storage device .","Applications  may include computer executable instructions which, when executed by client device , transmit, receive, and\/or otherwise process network data. Other examples of application programs include calendars, search programs, email clients, IM applications, SMS applications, VOIP applications, contact managers, task managers, transcoders, database programs, word processing programs, security applications, spreadsheet programs, games, search programs, data log recording programs, and so forth. Applications  may include, for example, Data Indexer  and Licensing Agent . Data Indexer  is configured to index data, such as event data and metadata  based on licensed entitlements managed by another network device, such as DLM  of . The indexed event data and metadata may be sent to DLM  based on a request from DLM , or other network device. However, the indexed event data and metadata may also be sent based on a time, change in a state of client device , or any of a variety of other criteria. Licensing Agent  is in communication with Indexer  and DLM , and provides DLM  with monitored information regarding the volume and type of data that is indexed at the client device. DLM  operates as a master to licensing agent  which is configured to operate as a slave.","Illustrative Network Device",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 3","FIG. 1"],"b":["300","300","300","300","109"]},"Network device  includes processor unit , an input\/output interface , video display adapter , and a mass memory, all in communication with each other via bus . The mass memory generally includes RAM , ROM  and one or more permanent mass storage devices, such as hard disk drive , tape drive, optical drive, and\/or floppy disk drive. The mass memory stores operating system  for controlling the operation of network device . Any general-purpose operating system may be employed. Basic input\/output system (\u201cBIOS\u201d)  is also provided for controlling the low-level operation of network device . As illustrated in , network device  also can communicate with the Internet, or some other communications network, via network interface unit , which is constructed for use with various communication protocols including the TCP\/IP protocol. Network interface unit  is sometimes known as a transceiver, transceiving device, or network interface card (NIC).","Network device  also comprises input\/output interface  for communicating with external devices, such as a keyboard, or other input or output devices not shown in . Input\/output interface  can utilize one or more communication technologies, such as USB, infrared, Bluetooth\u2122, or the like.","The mass memory as described above illustrates another type of computer-readable media, namely computer-readable storage media and\/or processor-readable storage medium. Computer-readable storage media (devices) may include volatile, nonvolatile, removable, and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. Examples of computer readable storage media include RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other non-transitory physical medium which can be used to store the desired information and which can be accessed by a computing device.","As shown, data storage  may include a database, text, spreadsheet, folder, file, or the like, that may be configured to maintain and store user account identifiers, user profiles, email addresses, IM addresses, and\/or other network addresses; or the like. Data stores  may further include program code, data, algorithms, and the like, for use by a processor, such as processor  to execute and perform actions. In one embodiment, at least some of data store  might also be stored on another component of network device , including, but not limited to computer-readable storage medium , hard disk drive , or the like. Data storage  may further store event data and metadata .","Event data and metadata  may include event data and\/or related metadata received from another network device, such as client device  of . Data Storage  may further store a search index, which is described below in conjunction with .","The mass memory also stores program code and data. One or more applications  are loaded into mass memory and run on operating system . Examples of application programs may include transcoders, schedulers, calendars, database programs, word processing programs, HTTP programs, customizable user interface programs, IPSec applications, encryption programs, security programs, SMS message servers, account managers, and so forth. Distributed Licensing Manager  includes License Master, Stack(s) and Pool(s) . Distributed Licensing Manager , Indexer  (optional), and Licensing Agent  (optional), may be included as application programs within applications .","Distributed Licensing Manager  may include virtually any computing component or components configured and arranged to manage and record event data and its related metadata. In one embodiment, Distributed Licensing Manager  may receive a license for a volume of a type of data, add the license to a corresponding stack of other licenses for that type of data, and enable the apportionment of the volume of data to a pool of indexers and\/or a particular indexer such as one that is relatively local to the Distributed Licensing Manager. In at least one embodiment, Distributed Licensing Manager  may perform actions such as those described below in conjunction with . Additionally, Indexer  and Licensing Agent  may be optionally included to locally index data in accordance with the licensed entitlements that correspond to the stack, and pool. Licensing Agent  is in communication with Indexer  and Distributed Licensing Manager , and provides the Distributed Licensing Manager with monitored information regarding the volume and type of data that is indexed by the Indexer. License Master  operates as a master to licensing agent  which is configured to operate as a slave.","General Operation","The operation of certain aspects of the invention will now be described with respect to .  illustrates an exemplary architecture for Distributed Licensing Manager . As shown, License Master  enables a user to organize Group Enterprise  to include two stacks of several licenses with corresponding pools. The Enterprise License stack organizes several licenses to provide an entitlement to index all types of data for a total volume of one Terabyte per day. Somewhat similarly, the Mail System License Stack organizes several licenses to provide an entitlement to index a particular type of data related to sending mail messages for a total volume of 100 gigabytes per day.","As shown, most of the volume corresponding to the licensed entitlement of each stack is distributed over a pool of indexers and the remainder volume is assigned to a particular indexer. For example, 800 gigabytes per day volume is assigned to Enterprise Pool  where the volume can be shared by indexers  and  or carved out in particular amounts, and the remainder 200 gigabytes per day of volume is assigned to indexer . In some embodiments, an assignment of volume to a particular indexer is warranted at least in part because the indexer may have extra capacity or is locally situated so that response time is improved for a user. Also, as shown, 90 gigabytes per day volume is assigned to Mail System Pool  where the volume is shared by indexers  and , and the remaining 10 gigabytes per day volume is assigned to indexer . Additionally, one through \u201cn\u201d indexers - are in communication with License Master . Indexers - include licensing agents - which are arranged to operate as slaves in communication with datastores -.","For at least one embodiment, at initialization, License Master  builds an in-memory representation of the full license entitlements granted to a cluster of slave Indexers -. These slaves are typically initialized with a master URI. Slave Indexers - keep tallies of their indexing totals for a given slice of time, and periodically report their usage up to License Master . License Master  then routes the various usages from various slave indexers to the correct pools and corresponding stacks of licenses. License Master  stores an in-memory summary of mappings relevant to tracking a slave Indexer's status in the cluster. Based on this representation, once a day License Master  can assess whether one or more slave Indexers are in violation of its daily volume quota based on rules that govern the license and perform an appropriate action for the violation. In at least one embodiment, these actions are serialized and relayed to the corresponding slave Indexer(s) as directives over the network. The slave Indexer executes the directive, which may include disabling search on the slave Indexer and\/or notifying a user with a warning banner.","In at least one embodiment, in addition to License Master  having an in-memory representation of the slave Indexers' usage summary for a given day, this representation is also persisted on the individual slave Indexers in a secure manner. Upon first contact with License Master , a slave Indexer sends this persistent representation to the License Master to join the cluster of slave Indexers. Also, in at least one embodiment, the usage data stored on slave Indexers is broken up based on source types of data. In this way, License Master  can allocate the data usage to the appropriate stack based on its source type. Additionally, secure communication is maintained between master and slave with security techniques such as signing payloads with a symmetric key, and timestamps to avoid masquerading slaves and masters and replay attacks.","In at least one embodiment, an Application Programming Interface (API) is provided to query License Master  to determine the current state of the licensed entitlements and whether a feature is available or not. A user could view licensing details with the API via a User Interface (UI) as well as a Command Line Interface (CLI). In at least one embodiment, all time is maintained on License Master , and the slave Indexers store the master time in their persistent store. Since there is only one notion of time, time zone and daylight saving time issues between remotely located indexers is eliminated.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIGS. 5A-5C"},"As shown in , overview  show a volume of data of the Mail System type that is debited to a Mail System Data License in a Mail System License stack which is configured to provide an entitlement to indexing for just Mail System type of data. Also, another volume of data of all other types but the Mail System type is debited to an Enterprise Data License in an Enterprise data stack which is arranged to provide an entitlement for all types of data.","In , overview  shows a Mail System data license that is expired so that the volume of Mail System type of data is debited to the Enterprise Data License until a new Mail System Data License is acquired. Similarly, the volume of the other types of data is debited to the Enterprise Data License. In , overview  shows a Mail System Data License and an Enterprise Data License that are both expired so that the volume for all of the data can not be debited. Instead, a notification is provided to the user regarding the undebited volume of data that is not being indexed.","In at least one embodiment, the user may be notified of a grace period to obtain a new license before the processing of the data stops. In at least another embodiment, a user might be offered a burst license to bridge a particular period of time of unexpectedly high volume of data.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 6","FIGS. 1-5","FIG. 6","FIG. 3","FIGS. 1-4"],"b":["600","600","7","8","600","300","600"]},"Process  begins, after a start block, at block , where a user is provisioned with at least a license master and at last one indexer for indexing data. Moving to block , a user obtains at least one data volume license for at least one type of data to be indexed. Stepping to block , each data volume license is added to a stack of other data volume licenses that are configured for processing (indexing) the same type of data.","At block , the data volume capacity of each stack of licenses is configured for at least one pool of at least one indexer to process the corresponding type of data. Members of a pool can share the configured entitlement from a stack or they can be assigned a particular volume of data from the corresponding stack. Also, individual indexers in a pool can share the data volume entitlement, or they can receive an assignment of an entire entitlement.","Flowing to block , the process configures the data volume and type of data to be processed by each indexer in a cluster in accordance with a pool that they correspond to. Also, each indexer that is assigned an entitlement to a data volume for a data type separate from a pool is configured. At block , a data volume for a data type that is processed by one or more indexers is metered. If the daily quota of data volume is exceeded in regard to at least the stack\/pool configuration and\/or license entitlements, the licensing master notifies the user that another license is required for additional data volume for at least one type of data.","Moving to block , the process augments exceeded stack(s) with additional licenses for additional data volume for at least one corresponding type of data. The stacks that correspond to the data types of the new licenses are updated with the additional data volume. See  for more detail regarding this aspect of the process. Also, the pools of indexers and directly assigned indexers are updated with the additional data volume so that they can process the additional data volume. Next, the process returns to performing other actions.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 7","b":["700","702","704","706","702"]},"However, if the determination at decision block  is affirmative, the process flows to block  where a new license is added to a stack of licenses that corresponds to the same type of data. At block , the additional volume for the type of data for the new license is mapped to one or more pools that include one or more indexers. At block , the indexers with the newly mapped volume for the type of data for the new license are enabled to process searches of data.","Flowing to decision block , the process monitors the volume for the type of data processed by the indexers. If the volume is not exceeded, the process continues monitoring. However, if the determination finds that the volume is exceeded, the process loops back to block  and continues performing substantially the same actions as described herein.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 8"},"It will be understood that each block of the flowchart illustration, and combinations of blocks in the flowchart illustration, can be implemented by computer program instructions. These program instructions may be provided to a processor to produce a machine, such that the instructions, which execute on the processor, create means for implementing the actions specified in the flowchart block or blocks. The computer program instructions may be executed by a processor to cause a series of operational steps to be performed by the processor to produce a computer-implemented process such that the instructions, which execute on the processor to provide steps for implementing the actions specified in the flowchart block or blocks. The computer program instructions may also cause at least some of the operational steps shown in the blocks of the flowchart to be performed in parallel. Moreover, some of the steps may also be performed across more than one processor, such as might arise in a multi-processor computer system. In addition, one or more blocks or combinations of blocks in the flowchart illustration may also be performed concurrently with other blocks or combinations of blocks, or even in a different sequence than illustrated without departing from the scope or spirit of the invention.","Accordingly, blocks of the flowchart illustration support combinations of means for performing the specified actions, combinations of steps for performing the specified actions and program instruction means for performing the specified actions. It will also be understood that each block of the flowchart illustration, and combinations of blocks in the flowchart illustration, can be implemented by special purpose hardware-based systems, which perform the specified actions or steps, or combinations of special purpose hardware and computer instructions.","The above specification, examples, and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention, the invention resides in the claims hereinafter appended."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Non-limiting and non-exhaustive embodiments of the present invention are described with reference to the following drawings. In the drawings, like reference numerals refer to like parts throughout the various figures unless otherwise specified. For a better understanding of the present invention, reference will be made to the following Detailed Description, which is to be read in association with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 5A-5C"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
