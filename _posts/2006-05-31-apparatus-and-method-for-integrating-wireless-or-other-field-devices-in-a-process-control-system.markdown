---
title: Apparatus and method for integrating wireless or other field devices in a process control system
abstract: An apparatus is provided for facilitating communication between, for example, a configuration tool in a process control system and a wireless field device (such as a wireless sensor or actuator). The configuration tool and the wireless field device use different protocols, and the apparatus converts between the different protocols. The protocol used by the configuration tool could include HART. From the perspective of the wireless field device, the apparatus could appear to support the application protocol of the wireless field device. From the perspective of the configuration tool, the apparatus could simulate a HART multiplexer. This may allow a user to use the configuration tool to configure, commission, and monitor the wireless field device, even when the user does not know or understand the protocol used by the wireless field device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07675935&OS=07675935&RS=07675935
owner: Honeywell International Inc.
number: 07675935
owner_city: Morristown
owner_country: US
publication_date: 20060531
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is related to the following concurrently filed U.S. patent applications:","Ser. No. 11\/444,044 entitled \u201cAPPARATUS AND METHOD FOR CONVERTING BETWEEN DEVICE DESCRIPTION LANGUAGES IN A PROCESS CONTROL SYSTEM\u201d;","Ser. No. 11\/444,200 entitled \u201cAPPARATUS AND METHOD FOR INTEGRATING WIRELESS FIELD DEVICES WITH A WIRED PROTOCOL IN A PROCESS CONTROL SYSTEM\u201d; and","Ser. No. 11\/443,773 entitled \u201cAPPARATUS, SYSTEM, AND METHOD FOR INTEGRATING A WIRELESS NETWORK WITH WIRED FIELD DEVICES IN A PROCESS CONTROL SYSTEM\u201d;","all of which are hereby incorporated by reference.","This disclosure relates generally to control systems and more specifically to an apparatus and method for integrating wireless or other field devices in a process control system.","Processing facilities are often managed using process control systems. Example processing facilities include manufacturing plants, chemical plants, crude oil refineries, and ore processing plants. Among other operations, process control systems typically interact with and control various field devices, such as sensors and actuators, in the processing facilities.","Field devices are typically configured and commissioned to operate in a specific process control system and are monitored during operation in that process control system. Engineers, operators, or other personnel routinely use configuration tools to configure, commission, and monitor the field devices. Different configuration tools are often used in different process control systems or even within the same process control system, often depending on the type(s) of communication protocol(s) used in the process control system(s). Quite a few of the communication protocols are standard, and a configuration tool associated with a standard communication protocol can often be used in any process control system supporting that communication protocol.","This disclosure provides an apparatus and method for integrating wireless or other field devices in a process control system.","In a first embodiment, a method includes receiving first information from a configuration tool in a process control system. The configuration tool is associated with a first field device protocol. The method also includes converting the first information associated with the first field device protocol into second information associated with a second field device protocol. In addition, the method includes communicating the second information to a field device in the process control system.","In particular embodiments, the method also includes receiving third information associated with the second field device protocol, converting the third information into fourth information associated with the first field device protocol, and communicating the fourth information to the configuration tool. The third information originates at the field device.","In other particular embodiments, the first field device protocol includes a Highway Addressable Remote Transducer (HART) protocol, and the second field device protocol includes a wireless protocol. Also, converting the first information into the second information includes using (i) a first list associating HART manufacturer identifiers and vendor names and\/or (ii) a second list associating HART device types and vendor model names.","In yet other particular embodiments, converting the first information into the second information includes using (i) a generic device descriptor associated with multiple types of field devices, (ii) a generic device descriptor having one or more device-specific commands associated with multiple types of field devices, and\/or (iii) a device descriptor having one or more device-specific commands associated with a particular type of field device or with a particular field device.","In a second embodiment, an apparatus includes at least one memory operable to store mapping information defining mappings between a first field device protocol and a second field device protocol. The apparatus also includes at least one processor operable to receive a first command associated with the first field device protocol. The at least one processor is also operable to convert the first command into a second command associated with the second field device protocol using at least some of the mapping information. In addition, the at least one processor is operable to communicate the second command over a network to a field device in a process control system.","In a third embodiment, a computer program is embodied on a computer readable medium and is operable to be executed by a processor. The computer program includes computer readable program code for receiving first information from a source in a process control system. The first information is associated with a first field device protocol. The computer program also includes computer readable program code for converting the first information associated with the first field device protocol into second information associated with a second field device protocol. In addition, the computer program includes computer readable program code for communicating the second information to a target in the process control system.","Other technical features may be readily apparent to one skilled in the art from the following figures, descriptions, and claims.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","100"]},"In this example, the process control system  includes multiple wireless field devices -. The wireless field devices -represent components in a process or production system that may perform any of a wide variety of functions. For example, the wireless field devices -could represent sensors capable of measuring one or more characteristics of a process or production system. The wireless field devices -could also represent valves or other actuators capable of performing one or more actions that alter the process or production system. Each of the wireless field devices -includes any suitable device or structure for performing one or more functions in a process or production system.","A process controller  controls the operation of the wireless field devices -. For example, the process controller  may be capable of receiving data from one or more of the wireless field devices -(such as sensors) and providing control signals to one or more of the wireless field devices -(such as actuators). The process controller  includes any hardware, software, firmware, or combination thereof for controlling one or more of the wireless field devices -","In this example, the wireless field devices -communicate with the process controller  through one or more wireless gateways -and one or more wireless marshalling panels -. Each of the wireless gateways -is capable of transmitting information wirelessly to and receiving information wirelessly from the wireless field devices -. Each of the wireless gateways -includes any device or structure for wirelessly communicating with one or more of the wireless field devices -. Each of the wireless gateways -could, for example, include one or more radio frequency (RF) transmitters, receivers, or transceivers.","The wireless marshalling panels -facilitate communication between the wireless field devices -and the process controller . For example, the wireless marshalling panels -may enable the process controller  to communicate with the wireless field devices -without requiring the process controller  to understand the communication protocol(s) used by the wireless field devices -","As a particular example, the process controller  could support the Highway Addressable Remote Transducer (HART) protocol, where signals for field devices are transmitted by the process controller  over a multi-conductor cable  to a terminal block . The terminal block  separates the signals for the field devices into wire pairs -, where each wire pair is associated with a different field device. In these embodiments, the wireless marshalling panel could convert HART-compliant signals received from the process controller  into messages sent to the wireless gateways -. The wireless marshalling panel could also convert messages from the wireless gateways -into HART-compliant signals sent to the process controller . The use of the multi-conductor cable  and terminal block  with the HART protocol is for illustration only. Any other input\/output technique and\/or communication network could be used with the HART protocol.","As another particular example, the process controller  could support the Foundation Fieldbus (FF) High Speed Ethernet (HSE) protocol, where signals for field devices are transmitted from the process controller  over a single wire pair . In these embodiments, the wireless marshalling panel may transmit FF HSE-compliant signals to and receive FF HSE-complaint signals from the process controller , while at the same time providing data to and receiving data from the wireless gateways -using a different protocol.","Each of the wireless marshalling panels -could include any device or structure facilitating communication between the wireless field devices -(via the gateways -) and the process controller . Additional details regarding the wireless marshalling panels -can be found in U.S. patent application Ser. No. 11\/394,947 entitled \u201cAPPARATUS, SYSTEM, AND METHOD FOR INTEGRATION OF WIRELESS DEVICES WITH A DISTRIBUTED CONTROL SYSTEM,\u201d which is hereby incorporated by reference. The wireless marshalling panels -could support the use of any suitable field device protocol(s), such as HART, FF HSE, FF H1, Modbus, Profibus, and WorldFIP. In this document, the phrase \u201cfield device protocol\u201d refers to any protocol(s) for communicating with one or more field devices in a control system (whether or not the field devices of the control system actually use that protocol).","A network  couples the wireless gateways -and the wireless marshalling panels -. The network  represents any suitable computing or communication network capable of transporting data, such as one or more local area networks (LANs), metropolitan area networks (MANs), wide area networks (WANs), all or a portion of a global network such as the Internet, or any other communication system or systems at one or more locations. As particular examples, the network  could represent an RS-485 network or an Ethernet network. The network  could also represent a redundant set of networks, such as a pair of Ethernet networks forming a Fault Tolerant Ethernet (FTE) network.","In this example embodiment, the process control system  includes one or more configuration tools . A configuration tool  may represent a tool (such as a software program) used to configure, commission, and monitor field devices -. The configuration tool  could be associated with a particular field device protocol, such as when the tool  is a HART configuration tool. As particular examples, the configuration tool  could represent a HART Field Device Manager (FDM) or a HART Asset Management System (AMS).","At least one of the wireless field devices -in  may represent a field device that uses a protocol differing from the protocol used by the configuration tool . For example, a wireless field device could use a non-standard protocol, a protocol that is new in the process control industry, or a protocol that is unfamiliar to a user of the configuration tool . As a particular example, one or more of the wireless field devices -could represent devices that use the WIRELESS NETWORK FOR SECURE INDUSTRIAL APPLICATION (WNSIA) protocol from HONEYWELL INTERNATIONAL INC. Details regarding the WNSIA protocol are shown in  through , which are described below. In order to configure these types of field devices, a user would typically need to use a new configuration tool (such as a WNSIA configuration tool). This would often force the user to learn how to use a new protocol and a new configuration tool.","According to this disclosure, a configuration tool  associated with one field device protocol may be used to configure, commission, and monitor field devices that use a different field device protocol. For example, a HART configuration tool  could be used to configure, commission, and monitor WNSIA field devices. In this way, a user familiar with the HART configuration tool  is not required to learn how to use a WNSIA configuration tool. Also, the user may not be required to learn all of the details of the WNSIA protocol in order to use the WNSIA field devices. In addition, an organization may not be required to purchase a WNSIA configuration tool to use the WNSIA field devices, resulting in a reduction in the cost of obtaining and using the WNSIA field devices.","In the example shown in , the configuration tool  is coupled to a WNSIA server . The WNSIA server  supports the use of the WNSIA protocol in the process control system . For example, the WNSIA server  may receive commands in a particular field device protocol from the configuration tool  or other source and convert the commands into WNSIA commands for a WNSIA field device or other target. The WNSIA server  may also receive messages from the WNSIA field devices (via the wireless gateways -) and convert the messages into messages compliant with the particular field device protocol used by the configuration tool . As a specific example, the WNSIA server  could convert HART commands into WNSIA commands and WNSIA responses into HART responses. This may allow a HART configuration tool  to control and monitor the WNSIA field devices.","The WNSIA server  includes any hardware, software, firmware, or combination thereof for supporting the use of WNSIA field devices. Although shown as a server, the functionality of the WNSIA server  could be implemented on any other or additional computing device(s), such as a personal computer (like a desktop or laptop computer). In particular embodiments, the WNSIA server  is coupled to the configuration tool  by a serial link (such as an RS-485 link).","The use of WNSIA field devices with a HART configuration tool  is for illustration only. Any configuration tool  could be used to configure field devices that use a different field device protocol than the configuration tool . For example, a Foundation Fieldbus configuration tool  or a Profibus configuration tool  could be used to configure WNSIA field devices. As another example, a WNSIA configuration tool  could be used to configure field devices that use a different protocol. The field devices being configured by the configuration tool  could include wireless and\/or wired field devices.","Although  illustrates one example of a process control system , various changes may be made to . For example, a control system could include any number of field devices (including wired and\/or wireless field devices), controllers, gateways, wireless marshalling panels, terminal blocks, and tools. Also, while  illustrates two types of connections between the wireless marshalling panels -and the process controller , the system  could include any number and type of connections. Further,  illustrates one functional division between components in the system . However, various components in  could be combined or further subdivided, such as by combining the configuration tool  and the WNSIA server  into a single physical unit. Various components could also be omitted from the system  if their functionality is not desired or required in a particular implementation. In addition,  illustrates one operational environment in which the conversion of information between field device protocols can occur. This functionality could be used in any other suitable device or system.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 2","FIG. 2","FIG. 2","FIG. 1"],"b":["100","120","122","100","120","122","100","120","122"]},"In this example, the configuration tool  represents a HART configuration tool , which is typically used to configure HART field devices. Also, in this example, the WNSIA server  implements a WNSIA-HART multiplexer . The WNSIA-HART multiplexer  implements or functions as a protocol converter to convert between the HART and WNSIA protocols. From the perspective of the field devices, the WNSIA-HART multiplexer  appears as a device that supports a WNSIA application protocol. From the perspective of the HART configuration tool , the WNSIA-HART multiplexer  simulates a HART multiplexer connection.","As shown in , the WNSIA-HART multiplexer  receives HART commands from the configuration tool  and converts them into Control Data Access (CDA) commands. A wireless gateway (such as gateway ) in turn receives the CDA commands from the WNSIA-HART multiplexer  and communicates them to the WNSIA field devices using the WNSIA protocol. The WNSIA-HART multiplexer  also receives CDA responses from the wireless gateway and converts them into HART responses for the configuration tool . This allows the HART configuration tool  to configure and access the WNSIA field devices. For example, the HART configuration tool  could access the WNSIA field devices as if they were HART devices coupled to a HART multiplexer. As particular examples, the HART configuration tool  could access and control the WNSIA field devices as if they were connected to a HART MTL, Stahl, or Pepperl+Fuchs multiplexer. In this example, the wireless gateway may contain or have access to the WNSIA field device details, allowing the wireless gateway to respond to CDA commands with the appropriate CDA responses (which are then converted into HART responses).","The WNSIA-HART multiplexer  includes any hardware, software, firmware, or combination thereof for converting information between the WNSIA and HART protocols. For example, the WNSIA server  could include one or more processors  and one or more memories  capable of storing data and instructions used by the processor(s)  (such as a software program implementing the WNSIA-HART multiplexer ). Also, the WNSIA server  could include one or more interfaces  facilitating communication with other components of the process control system , such as an Ethernet interface and a serial interface.","Any suitable technique could be used by the WNSIA-HART multiplexer  to map HART commands into WNSIA commands and to map WNSIA responses into HART responses. For example, in a first approach, a HART generic device descriptor (DD) is used to describe all types of WNSIA field devices, and the HART generic DD is used to convert between the HART and CDA protocols. In a second approach, a WNSIA generic device descriptor for the WNSIA field devices includes similar information as the HART generic device descriptor, along with one or more device-specific commands for all types of WNSIA field devices. In a third approach, a WNSIA device-specific device descriptor may be created for individual types of WNSIA field devices or for individual WNSIA field devices.","In the first approach, the HART generic device descriptor describes all WNSIA field devices. In general, this allows the WNSIA object model to be mapped into a flat HART model. For example, HART messages may be mapped to WNSIA parameters in CDA messages, and vice versa. The following tables identify how specific HART commands may be mapped to specific WNSIA parameters. The contents of these tables are for illustration and explanation only. Other embodiments of the process control system  that use other or additional mapping information or associations could be used without departing from the scope of this disclosure.","The HART protocol uses a one-byte manufacturer identifier and a one-byte device type registered with the HART Communication Foundation (HCF). In contrast, WNSIA uses 32-character strings to represent a vendor identifier and a model name. In the first approach, the WNSIA vendor identifier and model name may be set to any constant value(s). Also, WNSIA field devices are identified only using their serial numbers. For example, the last three bytes of a four-byte WNSIA serial number can be used as a HART device identifier.","Table 1 illustrates the mapping for HART command  (read unique identifier) into a WNSIA message.",{"@attributes":{"id":"p-0047","num":"0046"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","Device Type Code","254"]},{"entry":[{},"for Expansion"]},{"entry":["1","MFR ID","A constant (need not be"]},{"entry":[{},{},"registered with HCF)."]},{"entry":["2","MFR'S DEVICE TYPE","A constant (need not be"]},{"entry":[{},{},"registered with HCF)."]},{"entry":["3","NUMBER RQUEST","5"]},{"entry":[{},"PREAM"]},{"entry":["4","UNIV CMD REV","5"]},{"entry":["5","TRANS SPEC REV","Last byte of the 2-byte"]},{"entry":[{},{},"DevRev parameter in the WNSIA"]},{"entry":[{},{},"device object."]},{"entry":["6","SOFT REV","Last byte of the Build"]},{"entry":[{},{},"parameter in the WNSIA device"]},{"entry":[{},{},"object."]},{"entry":["7","HARD REV","1"]},{"entry":["8","FLAGS","Any suitable value"]},{"entry":["9-11","DEVICE ID NUMBER","Last 3 bytes of the 4-byte"]},{"entry":[{},{},"WNSIA device serial number"]},{"entry":[{},{},"parameter in the WNSIA device"]},{"entry":[{},{},"object."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Table 2 illustrates the mapping for HART command  (read primary variable) into a WNSIA message. Object identifiers (ID) of 3 through 6 respectively represent a primary variable (PV), a secondary variable (SV), a tertiary variable (TV), and a quaternary variable (QV).",{"@attributes":{"id":"p-0049","num":"0048"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","PV UNITS","For an analog I\/O, use the"]},{"entry":[{},{},"unit field of the Scale"]},{"entry":[{},{},"parameter of a primary"]},{"entry":[{},{},"variable transducer (may"]},{"entry":[{},{},"require conversion from WNSIA"]},{"entry":[{},{},"units to HART units). For a"]},{"entry":[{},{},"binary I\/O, value set to \u201cNot"]},{"entry":[{},{},"Used\u201d (i.e. 251)."]},{"entry":["1-4","PV","For an analog I\/O, use the"]},{"entry":[{},{},"float of the DS-65 structure"]},{"entry":[{},{},"as is. For a binary I\/O,"]},{"entry":[{},{},"convert binary 0 or 1 to"]},{"entry":[{},{},"float 0.0 or 1.0."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Table 3 illustrates the mapping for HART command  (read primary variable current and percent of range) into a WNSIA message. The parameters present in any response message may have values derived from the PV value.",{"@attributes":{"id":"p-0051","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0-3","PV CURR","((PV value\/(Upper Range value \u2212"]},{"entry":[{},{},"Lower Range value)) * 4)\/(20 \u2212 4)"]},{"entry":["4-7","PV PER RANGE","(AI PV value\/(AI Upper Range"]},{"entry":[{},{},"value - AI Lower Range"]},{"entry":[{},{},"value)) * 100.0"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Table 4 illustrates the mapping for HART command  (read dynamic variables and PV current) into a WNSIA message.",{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0-3","PV CURR","((PV value\/(Upper Range value \u2212"]},{"entry":[{},{},"Lower Range value)) * 4)\/(20 \u2212 4)"]},{"entry":["\u20024","PV UNITS","The unit field of the Scale"]},{"entry":[{},{},"parameter (may require"]},{"entry":[{},{},"conversion from WNSIA units"]},{"entry":[{},{},"to HART units)."]},{"entry":["5-8","PV","For an analog I\/O, use the"]},{"entry":[{},{},"float of the DS-65 structure"]},{"entry":[{},{},"as is. For a binary I\/O,"]},{"entry":[{},{},"convert binary 0 or 1 to"]},{"entry":[{},{},"float 0.0 or 1.0."]},{"entry":["\u20029","SV UNITS","The unit field of the Scale"]},{"entry":[{},{},"parameter (may require"]},{"entry":[{},{},"conversion from WNSIA units"]},{"entry":[{},{},"to HART units)."]},{"entry":["10-13","SV","For an analog I\/O, use the"]},{"entry":[{},{},"float of the DS-65 structure"]},{"entry":[{},{},"as is. For a binary I\/O,"]},{"entry":[{},{},"convert binary 0 or 1 to"]},{"entry":[{},{},"float 0.0 or 1.0."]},{"entry":["14","TV UNITS","The unit field of the Scale"]},{"entry":[{},{},"parameter (may require"]},{"entry":[{},{},"conversion from WNSIA units"]},{"entry":[{},{},"to HART units)."]},{"entry":["15-18","TV","For an analog I\/O, use the"]},{"entry":[{},{},"float of the DS-65 structure"]},{"entry":[{},{},"as is. For a binary I\/O,"]},{"entry":[{},{},"convert binary 0 or 1 to"]},{"entry":[{},{},"float 0.0 or 1.0."]},{"entry":["19","QV UNITS","The unit field of the Scale"]},{"entry":[{},{},"parameter (may require"]},{"entry":[{},{},"conversion from WNSIA units"]},{"entry":[{},{},"to HART units)."]},{"entry":["20-23","QV","For an analog I\/O, use the"]},{"entry":[{},{},"float of the DS-65 structure"]},{"entry":[{},{},"as is. For a binary I\/O,"]},{"entry":[{},{},"convert binary 0 or 1 to"]},{"entry":[{},{},"float 0.0 or 1.0."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"HART commands  and  may be reserved and not have associated mappings. HART command  (write polling address) may not be needed since it may not be used with HART multiplexer networks. HART command  (read unique identifier associated with tag) may have the same or similar mapping as HART command . Also, for HART command , the first eight bytes of the TAG_DESC parameter in the WNSIA device object may be compared.","Table 5 illustrates the mapping for HART command  (read message) into a WNSIA message.",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0-23","MESSAGE","Any suitable value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Table 6 illustrates the mapping for HART command  (read tag, descriptor, date) into a WNSIA message.",{"@attributes":{"id":"p-0058","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 6"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0-5","Tag","Any suitable value"]},{"entry":["\u20026-17","Descriptor","Any suitable value"]},{"entry":["19-20","Date","Any suitable value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Table 7 illustrates the mapping for HART command  (read primary variable sensor information) into a WNSIA message.",{"@attributes":{"id":"p-0060","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 7"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0-2","PV SENSOR SERIAL","0"]},{"entry":[{},"NUMBER"]},{"entry":["3","PV SENSOR LIMITS\/","Not used (i.e. 251)."]},{"entry":[{},"MIN SPAN UNITS"]},{"entry":["4-7","PV UPPER SENSOR","7F A0 00 00"]},{"entry":[{},"LIMIT"]},{"entry":["\u20028-11","PV LOWER SENSOR","7F A0 00 00"]},{"entry":[{},"LIMIT"]},{"entry":["12-15","PV MIN SPAN","7F A0 00 00"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Table 8 illustrates the mapping for HART command  (read primary variable output information) into a WNSIA message.",{"@attributes":{"id":"p-0062","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 8"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","PV ALARM SELECT","Not used (i.e. 251)."]},{"entry":[{},"CODE"]},{"entry":["1","PV XFER FNCT","Linear."]},{"entry":["2","PV RANGE VALUES","The unit field of the Scale"]},{"entry":[{},"UNITS CODES","parameter (may require"]},{"entry":[{},{},"conversion from WNSIA units"]},{"entry":[{},{},"to HART units)."]},{"entry":["3-6","PV UPPER RANGE","The Upper Range value of the"]},{"entry":[{},"VALUE","Scale parameter (may require"]},{"entry":[{},{},"conversion from WNSIA units"]},{"entry":[{},{},"to HART units)."]},{"entry":["\u20027-10","PV LOWER RANGE","The Lower Range value of the"]},{"entry":[{},"VALUE","Scale parameter (may require"]},{"entry":[{},{},"conversion from WNSIA units"]},{"entry":[{},{},"to HART units)."]},{"entry":["11-14","PV DAMP VALUE","7F A0 00 00"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Table 9 illustrates the mapping for HART command  (read assembly message) into a WNSIA message.",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 9"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0-2","FINAL ASSEMBLY","Any suitable value"]},{"entry":[{},"NUMBER"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Table 10 illustrates the mapping for HART command  (write message) into a WNSIA message.",{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 10"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0-23","MESSAGE","Any suitable value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The mapping for HART command  (write tag, descriptor, date) may be similar to the mapping for HART command  (read tag, descriptor, date) shown in Table 6. Table 11 illustrates the mapping for HART command  (write assembly number) into a WNSIA message.",{"@attributes":{"id":"p-0068","num":"0067"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 11"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0-2","FINAL ASSEMBLY","Any suitable value"]},{"entry":[{},"NUMBER"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Table 12 illustrates the mapping for HART command  (read transmitter variable) into a WNSIA message. Here, WNSIA object identifiers of 7 and above are mapped to HART Device Variable codes 0 and above.",{"@attributes":{"id":"p-0070","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 12"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","Transmitter","WNSIA object ID of 7 is"]},{"entry":[{},"Variable in Slot","mapped to HART Device"]},{"entry":[{},"#0","Variable code 0"]},{"entry":["1","Slot #0 Units Code","Unit code of HART Device"]},{"entry":[{},{},"Variable code 0"]},{"entry":["2-5","Slot #0 Data","Data of HART Device Variable"]},{"entry":[{},{},"code 0"]},{"entry":["6","Transmitter","WNSIA object ID of 7 is"]},{"entry":[{},"Variable in Slot","mapped to HART Device"]},{"entry":[{},"#1","Variable code 1"]},{"entry":["7","Slot #1 Units Code","Unit code of HART Device"]},{"entry":[{},{},"Variable code 1"]},{"entry":["\u20028-11","Slot #1 Data","Data of HART Device Variable"]},{"entry":[{},{},"code 1"]},{"entry":["12\u2002","Transmitter","WNSIA object ID of 7 is"]},{"entry":[{},"Variable in Slot","mapped to HART Device"]},{"entry":[{},"#2","Variable code 2"]},{"entry":["13\u2002","Slot #2 Units Code","Unit code of HART Device"]},{"entry":[{},{},"Variable code 2"]},{"entry":["14-17","Slot #2 Data","Data of HART Device Variable"]},{"entry":[{},{},"code 2"]},{"entry":["18\u2002","Transmitter","WNSIA object ID of 7 is"]},{"entry":[{},"Variable in Slot","mapped to HART Device"]},{"entry":[{},"#3","Variable code 3"]},{"entry":["19\u2002","Slot #3 Units Code","Unit code of HART Device"]},{"entry":[{},{},"Variable code 3"]},{"entry":["20-23","Slot #3 Data","Data of HART Device Variable"]},{"entry":[{},{},"code 3"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Table 13 illustrates the mappings for HART command  (write primary variable range values) into a WNSIA message.",{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 13"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","PV range value","Write this value to the unit"]},{"entry":[{},"units","part of the Scale parameter"]},{"entry":[{},{},"in the WNSIA device object."]},{"entry":["1-4","PV upper range","Write this value to the Upper"]},{"entry":[{},"value","Range part of the SCALE"]},{"entry":[{},{},"parameter in the WNSIA device"]},{"entry":[{},{},"object."]},{"entry":["5-8","PV lower range","Write this value to the Lower"]},{"entry":[{},"value","Range part of the SCALE"]},{"entry":[{},{},"parameter in the WNSIA device"]},{"entry":[{},{},"object."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"HART command  (set primary variable upper range value) and HART command  (set primary variable lower range value) can be implemented in the WNSIA-HART multiplexer , but this is not required. HART command  (reset configuration changed flag) may require no response bytes. Whenever there is a write command, a configuration change bit may be sent with a response upon the success of the write command. Immediately after a write command, HART command  could be used by the HART configuration tool , so a HART command  can be accepted and returned as success without any mapping.","Table 14 illustrates the mappings for HART command  (write primary variable units) into a WNSIA message.",{"@attributes":{"id":"p-0075","num":"0074"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 14"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","PV Units Code","Write this value to the unit"]},{"entry":[{},{},"part of the Scale parameter"]},{"entry":[{},{},"in the WNSIA device object."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Table 15 illustrates the mappings for HART command  (read additional transmitter status) into a WNSIA message.",{"@attributes":{"id":"p-0077","num":"0076"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 15"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0-5","Transmitter-","Any suitable value"]},{"entry":[{},"Specific Status"]},{"entry":["6","Operating Mode #1","Any suitable value"]},{"entry":["7","Operating Mode #2","Any suitable value"]},{"entry":["\u20028-10","Analog Output","Any suitable value"]},{"entry":[{},"Saturated"]},{"entry":["11-13","Analog Output","Any suitable value"]},{"entry":[{},"Fixed"]},{"entry":["14-24","Transmitter-","Any suitable value"]},{"entry":[{},"Specific Status"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Bytes 0-3 in Table 15 represent the 4-byte Device Status (DEV_STATUS) variable in the WNSIA device object. Bytes 4-5 and 14-24 represent transducer block status interpretations. Each status byte may have the following status interpretation:","Bit \u2014Configuration error (Bad Quality)","Bit \u2014Device failure (Bad Quality)","Bit \u2014Sensor failure (Bad Quality)","Bit \u2014Out of service (Bad Quality)","Bit \u2014Sensor conversion not accurate\n\n","Bit \u2014Range limits exceeded (Uncertain quality)","Bit \u2014Reserved","Bit \u2014Reserved.","The HART configuration tool  may show the status interpretation strings as specified in the HART generic device descriptor.","HART command  (write transmitter variable units) and HART command  (read transmitter variable information) can be supported if desired. However, the use of these commands is not required.","In the second approach, a WNSIA generic device descriptor supports the above-identified mappings, with the addition of several device-specific commands. Also, in this approach, a list associating WNSIA vendor names with HART Manufacturer Identifiers can be used to identify the appropriate WNSIA vendor name or HART Manufacturer Identifier. Further, a list associating different WNSIA model names with HART Device Types can be specified for each vendor.","The WNSIA generic device descriptor may have the same mappings shown above, except for modifications to two of the mappings shown below. Table 16 illustrates the mappings for HART command  (read unique identifier) into a WNSIA message.",{"@attributes":{"id":"p-0090","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 16"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","Device Type Code","254"]},{"entry":[{},"for Expansion"]},{"entry":["1","MFR ID","HART Manufacturer ID used"]},{"entry":[{},{},"after converting WNSIA 32-"]},{"entry":[{},{},"character vendor name string"]},{"entry":[{},{},"into 1-byte HART code. Non-"]},{"entry":[{},{},"existing vendor name may be"]},{"entry":[{},{},"given a 1-byte HART code of"]},{"entry":[{},{},"250."]},{"entry":["2","MFR'S DEVICE TYPE","HART Device Type used after"]},{"entry":[{},{},"converting WNSIA 32-character"]},{"entry":[{},{},"model name string into 1-byte"]},{"entry":[{},{},"HART code."]},{"entry":["3","NUMBER RQUEST","5"]},{"entry":[{},"PREAM"]},{"entry":["4","UNIV CMD REV","5"]},{"entry":["5","TRANS SPEC REV","Last byte of the 2-byte"]},{"entry":[{},{},"DevRev parameter in the WNSIA"]},{"entry":[{},{},"device object."]},{"entry":["6","SOFT REV","Last byte of the Build"]},{"entry":[{},{},"parameter in the WNSIA device"]},{"entry":[{},{},"object."]},{"entry":["7","HARD REV","1"]},{"entry":["8","FLAGS","Any suitable value"]},{"entry":["9-11","DEVICE ID NUMBER","Last 3 bytes of the 4-byte"]},{"entry":[{},{},"WNSIA device serial number"]},{"entry":[{},{},"parameter in the WNSIA device"]},{"entry":[{},{},"object."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Table 17 illustrates the mappings for HART command  (read additional transmitter status) into a WNSIA message.",{"@attributes":{"id":"p-0092","num":"0092"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 17"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Byte","Description","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0-5","Transmitter-","Any suitable value"]},{"entry":[{},"Specific Status"]},{"entry":["6","Operating Mode #1","Any suitable value"]},{"entry":["7","Operating Mode #2","Any suitable value"]},{"entry":["\u20028-10","Analog Output","Any suitable value"]},{"entry":[{},"Saturated"]},{"entry":["11-13","Analog Output","Any suitable value"]},{"entry":[{},"Fixed"]},{"entry":["14-24","Transmitter-","Any suitable value"]},{"entry":[{},"Specific Status"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},"Additional device specific commands may include HART command  (read static revision and WITK_VER variable in the device object), HART command  (read mode parameter of all transducer blocks), and HART command  (read read_back value of all output transducer blocks).","In this second approach, a WNSIA generic device descriptor for all WNSIA devices, the WNSIA vendor name\u2014HART Manufacturer Identifier list, and the WNSIA model name\u2014HART Device Type list may be distributed with the installation of the WNSIA-HART multiplexer . The lists may be used by the WNSIA-HART multiplexer , and the WNSIA generic device descriptor may be copied into the configuration tool's DD library folder. The WNSIA-HART multiplexer  may convert WNSIA vendor names and model names into 1-byte HART codes using the lists and return the results in HART command . The HART configuration tool  may then select the proper DD from the binary files in its library. Using this approach, any status or help strings can be modified, and menus and items in menus can be added, modified, or deleted.","As noted above, generic device descriptors may be copied into the DD library folder of the configuration tool . A generic device descriptor could be stored in the library under the Manufacturer ID and Device Type, as they are identified in the lists maintained by WNSIA-HART multiplexer . These device descriptors need not be registered with HCF. In particular embodiments, a user may copy the device descriptors into the HART DD library before using the HART configuration tool .","In the third approach, a WNSIA device-specific device descriptor is generated for individual WNSIA field devices. In this approach, the above-identified mappings are used, along with device-specific commands for a particular WNSIA field device. The device-specific device descriptor may be capable of representing all WNSIA parameters, and a user may be able to define his or her own string descriptions, variable names, and menus. The look and feel of each WNSIA field device may be different, and the user may be able to modify methods as needed.","As shown in the above tables and associated description, the WNSIA-HART multiplexer  functions as a protocol converter that allows HART configuration tools  to configure, commission, and monitor WNSIA field devices. A user of the HART configuration tool  need not be familiar with the WNSIA protocol (or whatever protocol is used in conjunction with the HART configuration tool ). Rather, the user may interact with and configure the WNSIA field devices as if they were multiplexed HART field devices.","In particular embodiments, a HART device descriptor can be automatically generated using a WNSIA device descriptor from a vendor. Additional information regarding the conversion of a WNSIA device descriptor into a HART device descriptor can be found in U.S. patent application Ser. No. 11\/444,944, which has been incorporated by reference above.","Although  illustrates additional details of one example process control system , various changes may be made to . For example, although shown as providing conversions between HART and WNSIA, the WNSIA-HART multiplexer  could be replaced or supplemented by any other or additional device or component capable of converting between different protocols. Also, while shown as residing in the WNSIA server , the WNSIA-HART multiplexer  could be located in any other suitable position, such as in a wireless gateway.",{"@attributes":{"id":"p-0100","num":"0100"},"figref":["FIG. 3","FIG. 1"],"b":["300","300","202","122","100","300"]},"The WNSIA-HART multiplexer  receives information from a configuration tool at step . This may include, for example, the WNSIA-HART multiplexer  receiving a HART command from a HART configuration tool . As particular examples, the command could represent a HART command used to configure, commission, or monitor a wireless field device.","The WNSIA-HART multiplexer  converts the received information into information suitable for use by a wireless field device at step . This may include, for example, the WNSIA-HART multiplexer  converting the HART command into a command suitable for use by a WNSIA field device. More specifically, this may include the WNSIA-HART multiplexer  mapping parameters in the HART command into parameters compliant with the WNSIA protocol. This may also include the WNSIA-HART multiplexer  mapping the HART Manufacturer ID and Device Type into suitable vendor and model names for use in a WNSIA message.","The WNSIA-HART multiplexer  communicates the converted information to the wireless field device at step . This may include, for example, the WNSIA-HART multiplexer  transmitting a WNSIA-compliant message to a wireless field device via one of the wireless gateways -. At this point, the wireless field device may use the WNSIA-compliant message in some way, such as by performing a requested function.","The wireless field device may respond by transmitting a response, which is received by the WNSIA-HART multiplexer  at step . This may include, for example, the WNSIA-HART multiplexer  receiving the response from the wireless field device via one of the wireless gateways -","The WNSIA-HART multiplexer  converts the response into a response suitable for use by the configuration tool at step . This may include, for example, the WNSIA-HART multiplexer  converting the WNSIA response into a message suitable for use by the HART configuration tool . More specifically, this may include the WNSIA-HART multiplexer  mapping parameters in the WNSIA response into parameters compliant with the HART protocol. This may also include the WNSIA-HART multiplexer  mapping particular WNSIA vendor and model names into a HART Manufacturer ID and Device Type for use in a HART message.","The WNSIA-HART multiplexer  communicates the converted response to the configuration tool at step . This may include, for example, the WNSIA-HART multiplexer  transmitting a HART-compliant message to the configuration tool . At this point, the configuration tool  may use the HART-compliant message in some way, such as by informing a user whether the requested function to be performed by the wireless field device was successful.","Although  illustrates one example of a method  for integrating wireless field devices in a process control system, various changes may be made to . For example, the WNSIA-HART multiplexer  could convert a HART message into a WNSIA message (steps -) and not receive and convert a response (steps -), or vice versa. Also, although described as converting between the HART and WNSIA protocols, the method  could involve conversions between any other suitable protocols.",{"@attributes":{"id":"p-0108","num":"0108"},"figref":["FIGS. 4 through 6","FIGS. 4 through 6"],"b":["100","100"]},"As shown in , the WNSIA object model is based on an object-parameter paradigm. Everything within a WNSIA device, including the device itself, is represented by an object. Each object can be categorized as an application object or a management object. In this example, each analog input transducer, analog output transducer, digital or binary input transducer, and digital or binary output transducer is represented by an application object. Each of these application objects contains a set of parameters describing the device or transducer. Also, a physical layer management object (PLMO), Medium Access Control (MAC) layer management object (MLMO), network layer management object (NLMO), and security layer management object (SLMO) are included in the management objects. These management objects are used to manage or control different layers of a communication network stack.","As shown in , if implemented on a single processor, the application objects reside in a user layer. The user layer resides above an Application Interface Layer (AIL), which resides above a complete network stack (including Security, Network, and Physical layers). Management objects representing the various communication stack layers can also be viewed as residing above the AIL.","As shown in , management objects can be implemented on a different processor than the application objects. In this example, the AIL can be viewed as being composed of two parts. One part includes an application user layer and the AIL, which are provided by an application processor. Another part includes a management user layer, the AIL, and the remaining layers of the network stack, which are provided by a network processor. The different AIL portions shown in  are distributed between two or more processors and may communicate with each other over one or more AIL extension channels. These channels may be built on top of any suitable inter-processor communication (IPC) mechanism, such as Ethernet or serial communications.","Each one of the six layers shown in  (user, application interface, security, network, L-MAC, L-PHY) may have an interface between itself and an adjacent layer. For example, an application interface may be defined between the user and application interface layers. A security interface may be defined between the application interface and security layers. A network interface may be defined between the security and network layers. A MAC interface may be defined between the network and L-MAC layers. A PHY interface may be defined between the L-MAC and L-PHY layers. In particular embodiments, the application interface is defined and consistent for all WNSIA field devices, while the remaining interfaces are internal and may be implemented differently as long as any applicable RF frames and MAC\/PHY requirements are met. The interfaces between the different layers could, for example, be implemented using a set of Application Programming Interface (API) calls, using message passing, or using an IPC mechanism.","Returning to , a hierarchical addressing model may be used to access device data of WNSIA field devices. The top of the hierarchy may be a 16-bit device address. Objects within a device may be identified by an 8-bit object ID (OID). Parameters within an object may be identified by a parameter number (PN). Parameters that are arrays or structures may be supported in the same manner as in Foundation Fieldbus. Individual array or structure elements may be accessed by specifying an 8-bit element index.","Management objects may represent different layers of the wireless communication stack. The physical layer management object (PLMO) may contain attributes of the wireless physical communication layer. A MAC layer management object may contain attributes of the wireless MAC layer. There are also management objects for the network layer and security layer, as well as possibly other management objects. In particular embodiments, management objects within leaf nodes (sensors and actuators) and infrastructure nodes (routing nodes used to route wireless traffic) may be fully specified and fixed, and device vendors may not extend their functionality. Management objects, in addition to parameters, may define one or more function codes that can be invoked by other objects within the same node or from a different node. Function calls could be numbered (such as from 1 to 255).","A sensor application may include a device object, a firmware download object, and one or more transducer blocks. Four types of transducer blocks could be supported, namely analog input transducer blocks (AITB), analog output transducer blocks (AOTB), binary input transducer blocks (BITB), and binary output transducer blocks (BOTB). Each transducer block could correspond to a single process variable or a single output variable. Multivariable sensors may be implemented using multiple AITBs and\/or multiple BITBs for each of their measurements. A device block could be associated with an object ID of one. An application firmware download object could be associated with an object ID of two. Transducer blocks may use object ID numbers of three and higher. Management objects may have fixed object ID values starting at 255 and decreasing. Table 18 illustrates a possible association of object IDs with objects.",{"@attributes":{"id":"p-0116","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 18"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Object ID","Object"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u20031","Device Object"]},{"entry":["\u20032","Application Firmware Download"]},{"entry":[{},"Object"]},{"entry":["\u20033","Analog Input Transducer Block 1"]},{"entry":["\u20034","Analog Input Transducer Block 2"]},{"entry":[". . . ",". . . "]},{"entry":["244","Infrastructure Node Physical"]},{"entry":[{},"Layer Management Object"]},{"entry":["245","Infrastructure Node MAC Layer"]},{"entry":[{},"Management Object"]},{"entry":["246","Leaf Node Physical Layer"]},{"entry":[{},"Management Object"]},{"entry":["247","Leaf Node MAC Layer Management"]},{"entry":[{},"Object"]},{"entry":["248","Network Layer Management Object"]},{"entry":["249","Security Layer Management Object"]},{"entry":["250","Device Layer Management Object"]},{"entry":[{},"(DLMO)"]},{"entry":["251","Management (Radio Communication)"]},{"entry":[{},"Firmware Download Object"]},{"entry":["252","Alert Report Management Object"]},{"entry":["253","Reserved"]},{"entry":["254","Reserved"]},{"entry":["255","Reserved"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The first parameter within a transducer block may be a process variable or output variable (based on the transducer type). Several other parameters following the first parameter may be standard. In addition to the standard parameters, transducer blocks could contain vendor-specific parameters (such as up to 255 total parameters). WNSIA sensor devices may provide measurements in engineering units, and process variable or output variable parameters may use Foundation Fieldbus value-status structures. For example, AITBs and AOTBs may use the Foundation Fieldbus DS-65 data structure, and BITBs and BOTBs may use the Foundation Fieldbus DS-66 data structure for their PV_D and OP_D parameters. The DS-66 data structure may be limited to Boolean values, multi-state discrete values may not be supported, and any non-FALSE value may be treated as TRUE. Floating point numbers may be in the IEEE756 format.","Scalar values and one-dimensional arrays and structures are supported in the WNSIA protocol. Scalar parameters within an object may be uniquely identified by a parameter number, and a parameter index may be ignored if one is specified. Arrays and structures are also supported in the WNSIA protocol, and they may be supported in the same manner as in the Foundation Fieldbus protocols. A one-based index could be used to identify a specific array or structure element. An index of zero may address an entire array or structure as a whole.","To facilitate data access of a WNSIA field device, a parameter class describing a parameter change frequency may be defined as follows. A dynamic (D) parameter class description typically represents a measurement or computed value that changes every time a device executes its algorithm or obtains a new measurement. A static (S) parameter class description typically represents a configuration parameter that only changes when written from an external source or that changes infrequently. A constant (C) parameter class description typically represents a description type parameter identifying a device's physical properties or capabilities that do not change. In particular embodiments, every change to a static parameter may result in incrementing a ST_REV parameter of either a WNSIA device object or the DLMO to indicate that a static parameter has changed. Devices observing the ST_REV parameter can detect a change and refresh a static parameter database accordingly.","WNSIA field device parameters may be further classified by access specification. For example, each parameter could fall into one of three groups, namely read-only (RO), write-only (WO), or read-write (RW). An error may be generated in response to an attempt to write data to a read-only parameter or an attempt to read data from a write-only parameter.","In particular embodiments, the data types used in WNSIA devices may represent a subset of the FF-defined data types. Table 19 summarizes the simple data types defined by FF that could be used in WNSIA devices.",{"@attributes":{"id":"p-0122","num":"0122"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 19"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Data Type","Index","Number of Octets"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Boolean","1","1"]},{"entry":[{},"Int8","2","1"]},{"entry":[{},"Int16","3","2"]},{"entry":[{},"Int32","4","4"]},{"entry":[{},"UInt8","5","1"]},{"entry":[{},"UInt16","6","2"]},{"entry":[{},"UInt32","7","4"]},{"entry":[{},"Float32","8","4"]},{"entry":[{},"String","9","1-32"]},{"entry":[{},"Blob","10","1-32"]},{"entry":[{},"Date","11","7"]},{"entry":[{},"TimeDif","13","4 or 6"]},{"entry":[{},"Bitstring","14","1-4\u2002"]},{"entry":[{},"Time","21","8"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0123","num":"0123"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 20"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Data Type","Index","Number of Octets"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Value & Status -","65","5"]},{"entry":[{},"Float"]},{"entry":[{},"Value & Status -","66","2"]},{"entry":[{},"Boolean"]},{"entry":[{},"Scaling","68","11"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"As described above, a status byte may be used to describe the status of a process variable. In particular embodiments, a process variable status byte includes three bit-fields as shown in Table 21. These fields may represent a consistent subset of the Foundation Fieldbus, HART, and OLE Process Control (OPC) status byte practices.",{"@attributes":{"id":"p-0125","num":"0125"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"8"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"28pt","align":"center"}}],"thead":{"row":{"entry":"TABLE 21"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"8","align":"center","rowsep":"1"}}},{"entry":["Bit 7","Bit 6","Bit 5","Bit 4","Bit 3","Bit 2","Bit 1","Bit 0"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Quality","Reserved","Sub-Status","Limit Status"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["0 - Bad","0","0 - Non-specific","0 - Not"]},{"entry":[{},{},"1 - Configuration","limited"]},{"entry":[{},{},"error","1 - Low"]},{"entry":[{},{},"3 - Device failure","limited"]},{"entry":[{},{},"4 - Sensor failure","2 - High"]},{"entry":[{},{},"7 - Out of service","limited"]},{"entry":[{},{},"x - Other values","3 - Constant"]},{"entry":[{},{},"reserved","(high and"]},{"entry":["1 - Uncertain",{},"0 - Non-specific","low"]},{"entry":[{},{},"4 - Sensor","limited)"]},{"entry":[{},{},"conversion not"]},{"entry":[{},{},"accurate"]},{"entry":[{},{},"5 - Range limits"]},{"entry":[{},{},"exceeded"]},{"entry":[{},{},"x - Other values"]},{"entry":[{},{},"reserved"]},{"entry":["2 - Good",{},"0 - No special"]},{"entry":[{},{},"condition"]},{"entry":[{},{},"exists"]},{"entry":[{},{},"x - Other values"]},{"entry":[{},{},"reserved"]},{"entry":["3 - Reserved",{},"Reserved"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"A Mode parameter in each transducer block may represent an 8-bit integer with an enumerated set of values. The Mode parameter may be defined as a subset of the FF mode definition. There could be no distinction between target and actual modes. There may also be no concept of normal or permitted modes. In some embodiments, two modes are defined, namely an Out of Service (OOS) mode and an Automatic (AUTO) mode. In particular embodiments, an 8-bit value is associated with the Mode parameter, where bit  (the most significant bit) corresponds to the OOS mode, bit  corresponds to the AUTO mode, and all other bits are reserved (and may be set to 0). This 8-bit value could be represented by an unsigned integer (UInt), where the OOS mode corresponds to a decimal value of 127 and the AUTO mode corresponds to a decimal value of 8. All bits in the Mode parameter value could be mutually exclusive (i.e. the Mode parameter is not a bit string). Other modes, such as manual, local override, or cascade, may be added using the reserved bits.","The Mode parameter in the transducer blocks may be related to alarm processing. Setting the Mode parameter to OOS (inactivating a block) may cause all active alarms to return to normal, and corresponding reports are published on the network. Activating a device or setting its Mode parameter to a value other than OOS causes the device to process its alarm conditions and generate alarm reports for those that are active. The Mode parameter may also be related to data publications. If a connection is configured and a transducer is publishing its process variable, setting the Mode parameter to OOS may not stop the publication. Rather, the data quality may be changed to \u201cBad\u201d with a sub-status of \u201cOut of Service.\u201d","As noted above, a WNSIA device object may be used to represent a WNSIA field device. Table 22 illustrates the various parameters of a standard WNSIA device object.",{"@attributes":{"id":"p-0129","num":"0129"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 22"},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}},{"entry":["#","Name","Data Type","CLS","ACC","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","ST_REV","UInt16","D","RO","Static data revision"]},{"entry":[{},{},{},{},{},"for entire device"]},{"entry":[{},{},{},{},{},"application process."]},{"entry":[{},{},{},{},{},"Change of static data"]},{"entry":[{},{},{},{},{},"member in application"]},{"entry":[{},{},{},{},{},"object increments this."]},{"entry":["2","TAG_DESC","String","S","RW","32-character string"]},{"entry":[{},{},{},{},{},"containing device tag"]},{"entry":[{},{},{},{},{},"descriptor."]},{"entry":["3","VENDOR","String","C","RO","32-character string"]},{"entry":[{},{},{},{},{},"identifying device"]},{"entry":[{},{},{},{},{},"vendor."]},{"entry":["4","MODEL","String","C","RO","32-character string"]},{"entry":[{},{},{},{},{},"identifying device"]},{"entry":[{},{},{},{},{},"model."]},{"entry":["5","SERIALNUM","UInt32","C","RO","32-bit device serial"]},{"entry":[{},{},{},{},{},"number."]},{"entry":["6","DEVREV","UInt16","C","RO","16-bit revision number."]},{"entry":["7","BUILD","UInt16","C","RO","16-bit software build"]},{"entry":[{},{},{},{},{},"number."]},{"entry":["8","DEV_STATUS","Bit-","D","RO","32-bit bitstring"]},{"entry":[{},{},"string",{},{},"indicating device error"]},{"entry":[{},{},{},{},{},"and status conditions."]},{"entry":["9","NUMTB","UInt8","C","RO","Number of transducer"]},{"entry":[{},{},{},{},{},"blocks in device."]},{"entry":["10","TBTYPE","UInt8","C","RO","Array of transducer"]},{"entry":[{},{},{},{},{},"types. Array size is"]},{"entry":[{},{},{},{},{},"the NUMTB parameter."]},{"entry":[{},{},{},{},{},"Each array element can"]},{"entry":[{},{},{},{},{},"be one of: AITB = 0,"]},{"entry":[{},{},{},{},{},"AOTB = 1, BITB = 2, and"]},{"entry":[{},{},{},{},{},"BOTB = 3."]},{"entry":["11","WITK_VER","UInt16","C","RO","Wireless"]},{"entry":[{},{},{},{},{},"interoperability test"]},{"entry":[{},{},{},{},{},"kit revision that the"]},{"entry":[{},{},{},{},{},"device complies with."]},{"entry":["12","ALLOW_EHM_ACC","Boolean","S","RW","Enable Equipment Health"]},{"entry":[{},{},{},{},{},"Monitoring (EHM) tools"]},{"entry":[{},{},{},{},{},"to access device data -"]},{"entry":[{},{},{},{},{},"read, write, and method"]},{"entry":[{},{},{},{},{},"execution. EHM tools"]},{"entry":[{},{},{},{},{},"cannot change this"]},{"entry":[{},{},{},{},{},"parameter. It can only"]},{"entry":[{},{},{},{},{},"be set by plant"]},{"entry":[{},{},{},{},{},"operators."]},{"entry":["13","Reserved",{},{},{},"Reserved"]},{"entry":["14","Reserved",{},{},{},"Reserved"]},{"entry":["15","Reserved",{},{},{},"Reserved"]},{"entry":["16","Reserved",{},{},{},"Reserved"]},{"entry":["17","Reserved",{},{},{},"Reserved"]},{"entry":["18","Reserved",{},{},{},"Reserved"]},{"entry":["19","Reserved",{},{},{},"Reserved"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The Vendor, Model, DevRev, and SerialNum parameters may serve several purposes related to device identification. For example, the Vendor-Model-SerialNum triplet may uniquely identify a given physical device, which can be used during the device commissioning process to map a device configured offline to an actual piece of hardware. As another example, the Vendor-Model-DevRev triplet combined with a DDRev parameter (identifying a DD file revision) may uniquely identify a device descriptor required to create a system template for a given device. The DD revision (DDRev) may allow for the ability to update DD files that correspond to the same version of device firmware. As yet another example, the Vendor-Model-DevRev-Build combination may uniquely identify a device's firmware. These relationships are summarized in Table 23.",{"@attributes":{"id":"p-0131","num":"0131"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 23"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Device","Device",{}]},{"entry":[{},"Hardware","Firmware","DD"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Vendor","X","X","X"]},{"entry":[{},"Model","X","X","X"]},{"entry":[{},"SerialNum","X"]},{"entry":[{},"DevRev",{},"X","X"]},{"entry":[{},"DDRev",{},{},"X"]},{"entry":[{},"Build",{},"X"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"The Build parameter may be used to reflect a device firmware version. While a change in DevRev may necessitate a new DD revision, the Build number can be incremented independently of the DD changes. Also, the Build, DevRev, and DDRev parameters may provide two degrees of freedom, namely an ability to change DD files without releasing new device firmware and an ability to change device firmware without releasing new DD files. The Build numbering may be relative to the DevRev value. In other words, firmware with a different DevRev revision may use the same Build to identify its firmware build variant within a device revision family. In particular embodiments, any set of DD files with the same DevRev value can be used to represent a device in a host system, where the highest DDRev value for a given DevRev value is the most recent DD revision.","A device application may contain at least one firmware download object, which is used to upgrade the device application over a wireless connection. Multi-processor devices can contain multiple firmware download objects, such as when a dual-processor device with a sensor\/actuator application on one processor and a radio communication stack on another processor contains two firmware download objects (one for upgrading the sensor\/actuator software, another for upgrading the radio communication stack). Table 24 illustrates the parameters of a firmware download object (which might not be extensible by vendors).",{"@attributes":{"id":"p-0134","num":"0134"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 24"},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}},{"entry":[{},{},"Data",{},{},{}]},{"entry":["#","Name","Type","CLS","ACC","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","FW_DLD_CMD","UInt16","S","RW","Firmware download"]},{"entry":[{},{},{},{},{},"command. Valid values"]},{"entry":[{},{},{},{},{},"are DLD_START = 1,"]},{"entry":[{},{},{},{},{},"DLD_ABORT = 2, and"]},{"entry":[{},{},{},{},{},"DLD_ACTIVATE = 3."]},{"entry":["2","FW_DLD_STAT","UInt16","D","RO","Firmware download"]},{"entry":[{},{},{},{},{},"status. Valid values"]},{"entry":[{},{},{},{},{},"are DLD_INACTIVE = 1,"]},{"entry":[{},{},{},{},{},"DLD_ACTIVE = 2, DLD_OK ="]},{"entry":[{},{},{},{},{},"3, and DLD_ERROR = 4."]},{"entry":["3","FW_DLD_ERR","UInt16","D","RO","Vendor-defined firmware"]},{"entry":[{},{},{},{},{},"download error code."]},{"entry":[{},{},{},{},{},"Zero indicates no"]},{"entry":[{},{},{},{},{},"error."]},{"entry":["4","FW_DLD_PREP_TO","UInt16","C","RO","Time in seconds for"]},{"entry":[{},{},{},{},{},"device to prepare for"]},{"entry":[{},{},{},{},{},"download."]},{"entry":["5","FW_DLD_ACT_TO","UInt16","C","RO","Time in seconds for"]},{"entry":[{},{},{},{},{},"device to activate new"]},{"entry":[{},{},{},{},{},"firmware."]},{"entry":["6","FW_DLD","Blob","S","WO","Parameter for storing"]},{"entry":[{},{},{},{},{},"device application"]},{"entry":[{},{},{},{},{},"firmware packets."]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}}}},"Table 25 identifies the parameters in an analog input transducer block.",{"@attributes":{"id":"p-0136","num":"0136"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 25"},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}},{"entry":["#","Name","Data Type","CLS","ACC","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","PV","DS-65","D","RO","Measurement variable in"]},{"entry":[{},{},{},{},{},"engineering units of"]},{"entry":[{},{},{},{},{},"the sensor."]},{"entry":["2","MODE","UInt8","D","RW","Transducer mode"]},{"entry":["3","OUTCONN","DS-320","S","RW","Output connection"]},{"entry":[{},{},{},{},{},"specification for"]},{"entry":[{},{},{},{},{},"process variable."]},{"entry":["4","SCALE","DS-68","S","RW","Range and units of the"]},{"entry":[{},{},{},{},{},"measurement variable."]},{"entry":["5","Reserved",{},{},{},"Reserved"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}}}},"Table 26 identifies the parameters in a binary input transducer block.",{"@attributes":{"id":"p-0138","num":"0138"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 26"},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}},{"entry":["#","Name","Data Type","CLS","ACC","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","PV_B","DS-66","D","RO","Discrete measurement"]},{"entry":[{},{},{},{},{},"variable."]},{"entry":["2","MODE","UInt8","D","RW","Transducer mode"]},{"entry":["3","OUTCONN","DS-320","S","RW","Output connection"]},{"entry":[{},{},{},{},{},"specification for"]},{"entry":[{},{},{},{},{},"process variable."]},{"entry":["4","Reserved",{},{},{},"Reserved"]},{"entry":["5","Reserved",{},{},{},"Reserved"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}}}},"Table 27 identifies the parameters in an analog output transducer block.",{"@attributes":{"id":"p-0140","num":"0140"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 27"},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}},{"entry":["#","Name","Data Type","CLS","ACC","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","OP","DS-65","D","RW","Output value for the"]},{"entry":[{},{},{},{},{},"actuator."]},{"entry":["2","MODE","UInt8","D","RW","Transducer mode"]},{"entry":["3","INCONN","DS-320","S","RW","Input connection"]},{"entry":[{},{},{},{},{},"specification for"]},{"entry":[{},{},{},{},{},"output variable."]},{"entry":["4","READBACK","DS-65","D","RO","Readback value of the"]},{"entry":[{},{},{},{},{},"actual position of the"]},{"entry":[{},{},{},{},{},"actuator."]},{"entry":["5","OUTCONN","DS-320","S","RW","Output connection"]},{"entry":[{},{},{},{},{},"specification for"]},{"entry":[{},{},{},{},{},"READBACK."]},{"entry":["6","SCALE","DS-68","S","RW","Range and units of the"]},{"entry":[{},{},{},{},{},"output variable."]},{"entry":["7","Reserved",{},{},{},"Reserved"]},{"entry":["8","Reserved",{},{},{},"Reserved"]},{"entry":["9","Reserved",{},{},{},"Reserved"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}}}},"Table 28 identifies the parameters in a binary output transducer block.",{"@attributes":{"id":"p-0142","num":"0142"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 28"},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}},{"entry":["#","Name","Data Type","CLS","ACC","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","OP_B","DS-66","D","RW","Output value for the"]},{"entry":[{},{},{},{},{},"actuator."]},{"entry":["2","MODE","UInt8","D","RW","Transducer mode"]},{"entry":["3","INCONN","DS-320","S","RW","Input connection"]},{"entry":[{},{},{},{},{},"specification for"]},{"entry":[{},{},{},{},{},"output variable."]},{"entry":["4","READBACK_B","DS-66","D","RO","Readback value of the"]},{"entry":[{},{},{},{},{},"actual position of the"]},{"entry":[{},{},{},{},{},"actuator."]},{"entry":["5","OUTCONN","DS-320","S","RW","Output connection"]},{"entry":[{},{},{},{},{},"specification for"]},{"entry":[{},{},{},{},{},"READBACK."]},{"entry":["6","Reserved",{},{},{},"Reserved"]},{"entry":["7","Reserved",{},{},{},"Reserved"]},{"entry":["8","Reserved",{},{},{},"Reserved"]},{"entry":["9","Reserved",{},{},{},"Reserved"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}}}}},"In some embodiments, WNSIA device vendors are required to provide device descriptors for their WNSIA devices. The device descriptors define the number of transducer blocks, their types, and all parameters of each transducer block. The Foundation Fieldbus Device Description Language (DDL) specifications may be used to define the device descriptors for the WNSIA devices. As a result, users may develop WNSIA device descriptors using the FF tokenizer toolkit and the FF standard DD library toolkit from the Fieldbus Foundation. Users may develop devices (such as the gateways -) that communicate with WNSIA field devices using the FF DD services toolkit from the Fieldbus Foundation.","In particular embodiments, the WNSIA device descriptors may include a subset of the DDL constructs defined in the FF DDL specification (such as Specification FF-900, which is hereby incorporated by reference). For example, the DDL constructs that may be used in WNSIA device descriptors could include the BLOCK, VARIABLE, MENU, EDIT-DISPLAY, METHOD, RELATION, UNIT, REFRESH, WRITE-AS-ONE, ITEM-ARRAY, COLLECTION, RECORD, ARRAY, RESPONSE CODE, LIKE keyword, and EXPRESSION constructs. As another example, the DDL constructs that may not be used in WNSIA device descriptors could include the PROGRAM, DOMAIN, VARIABLE LIST, OPEN\/CLOSE keywords, and possibly CONDITIONAL constructs.","To facilitate the generation of WNSIA device descriptors by vendors, manufacturers, or other entities associated with wireless field devices, standard wireless DD files could be made available or provided to the entities. These standard DD files could be provided for each transducer block type (analog input, analog output, digital input, digital output), and the standard files may be imported into WNSIA device DDL source files. The vendors, manufacturers, or other entities could add their own device-specific parameters to the standard DD files, such as by using the ADD, DELETE, and REDEFINE DDL constructs to add, delete, or modify the attributes of a block. The vendors, manufacturers, or other entities could be prevented from deleting any of the standard or required attributes of the imported standard DD files (although they could be redefined using the REDEFINE construct). The Foundation Fieldbus Specification FF-901 (which is hereby incorporated by reference) provides additional information about these constructs and their attributes.","DD developers could rely on a set of specifications, tools, and standard files to produce WNSIA device descriptors. The standard specifications may include the FF DDL source language specification, which specifies a structured text language used to define the meaning and relationships between available wireless field device data. It also specifies the syntax of the language used in WNSIA DDL source files. Another standard specification is the FF DDL binary encoding specification, which specifies a standard encoding of DDL source files into a binary file format. Device specifications could also be used, where the device specifications are used to customize standard wireless DDL files and produce vendor-, manufacturer-, or other entity-specific device descriptors for given device types. Once created, DDL source files may be tokenized into binary format and delivered to a host system, which uses FF DD services libraries to interpret information contained in the binary WNSIA DDL files.","Although  illustrate example details of the WNSIA protocol used in the process control system , various changes may be made to . For example, other or additional divisions between objects could be used in place of or in addition to the divisions shown in . Also, other or additional protocol stacks could be used in place of or in addition to the stacks shown in . In addition, other or additional parameters could be contained in the tables described above.","In some embodiments, various functions described above are implemented or supported by a computer program that is formed from computer readable program code and that is embodied in a computer readable medium. The phrase \u201ccomputer readable program code\u201d includes any type of computer code, including source code, object code, and executable code. The phrase \u201ccomputer readable medium\u201d includes any type of medium capable of being accessed by a computer, such as read only memory (ROM), random access memory (RAM), a hard disk drive, a compact disc (CD), a digital video disc (DVD), or any other type of memory.","It may be advantageous to set forth definitions of certain words and phrases used throughout this patent document. The term \u201ccouple\u201d and its derivatives refer to any direct or indirect communication between two or more elements, whether or not those elements are in physical contact with one another. The terms \u201capplication\u201d and \u201cprogram\u201d refer to one or more computer programs, software components, sets of instructions, procedures, functions, objects, classes, instances, related data, or a portion thereof adapted for implementation in a suitable computer code (including source code, object code, or executable code). The terms \u201ctransmit,\u201d \u201creceive,\u201d and \u201ccommunicate,\u201d as well as derivatives thereof, encompass both direct and indirect communication. The terms \u201cinclude\u201d and \u201ccomprise,\u201d as well as derivatives thereof, mean inclusion without limitation. The term \u201cor\u201d is inclusive, meaning and\/or. The phrases \u201cassociated with\u201d and \u201cassociated therewith,\u201d as well as derivatives thereof, may mean to include, be included within, interconnect with, contain, be contained within, connect to or with, couple to or with, be communicable with, cooperate with, interleave, juxtapose, be proximate to, be bound to or with, have, have a property of, or the like. The term \u201ccontroller\u201d means any device, system, or part thereof that controls at least one operation. A controller may be implemented in hardware, firmware, software, or some combination of at least two of the same. The functionality associated with any particular controller may be centralized or distributed, whether locally or remotely.","While this disclosure has described certain embodiments and generally associated methods, alterations and permutations of these embodiments and methods will be apparent to those skilled in the art. Accordingly, the above description of example embodiments does not define or constrain this disclosure. Other changes, substitutions, and alterations are also possible without departing from the spirit and scope of this disclosure, as defined by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a more complete understanding of this disclosure, reference is now made to the following description, taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 4 through 6"}]},"DETDESC":[{},{}]}
