---
title: Object-oriented representation of a generic profitability rule for financial processing in a relational database management system
abstract: A Value Analyzer system is a data-driven computer-facilitated financial model that provides accurate and consistent profitability calculations using account, product and event attributes stored in a relational database managed by a relational database management system (RDBMS). Profitability calculations are performed in the computer by applying one or more rules to the account, product and event attributes accessed from the database, wherein each of the rules is represented as one or more objects in a hierarchy, the objects include one or more relations, criteria lists and criteria, each of the relations includes one or more of the criteria lists, and each of the criteria lists includes one or more of the criteria, and the criteria determine which accounts, products and events are processed in the profitability calculations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07418415&OS=07418415&RS=07418415
owner: Teredata US, Inc.
number: 07418415
owner_city: Miamisburg
owner_country: US
publication_date: 20020826
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT","Overview","Hardware and Software Environment","Value Analyzer Operation","Value Analyzer Data Flow","Object Oriented Representation of Profitability Calculation Rules","Logic of the Preferred Embodiment","CONCLUSION"],"p":["This application is a continuation-in-part of the following co-pending and commonly assigned patent applications:","Utility application Ser. No. 10\/227,909, filed on same date herewith, by Brian J. Wasserman and Thomas K. Ryan, entitled \u201cPLATFORM INDEPENDENT ARCHITECTURE FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d;","Utility application Ser. No. 10\/227,783, filed on same date herewith, by George R. Hood, Brian J. Wasserman, Thomas K. Ryan and Sang Y. Yum, entitled \u201cSELECTION PROCESSING FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d;","Utility application Ser. No. 10\/227,726, filed on same date herewith, by Richard C. Schwarz, Brian J. Wasserman, Sang Y. Yum and Thomas K. Ryan, entitled \u201cDRIVER AMOUNT\/COUNT SELECTION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d;","Utility application Ser. No. 10\/227,976, filed on same date herewith, by Richard C. Schwarz, Brian J. Wasserman, Sang Y. Yum and Thomas K. Ryan, entitled \u201cDRIVER AMOUNT\/COUNT SELECTION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d;","Utility application Ser. No. 10\/228,022, filed on same date herewith, by Brian J. Wasserman, George R. Hood and Thomas K. Ryan, entitled \u201cDISCRETE PROFITABILITY CALCULATIONS FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d;","Utility application Ser. No. 10\/016,779, filed on same date herewith, by Brian J. Wasserman, George R. Hood and Thomas K. Ryan, entitled \u201cRULES-BASED, DATA-DRIVEN PROFITABILITY CALCULATIONS FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201dwhich is a continuation-in-part of the applications listed herein that are identified by Ser. Nos. 10\/013,422, 10\/013,434, and 10\/016,452;","Utility application Ser. No. 10\/013,422, filed on Dec. 10, 2001, now abandoned, by Brian J. Wasserman, entitled \u201cACCOUNT SELECTION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d, which is a continuation-in-part of the applications listed herein that are identified by Ser. Nos. 10\/016,779, 10\/013,434, and 10\/016,452;","Utility application Ser. No. 10\/013,434, filed on Dec. 10, 2001, by Brian J. Wasserman, entitled \u201cDRIVER AMOUNT AND COUNT SELECTION PROCESSING FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d, which is a continuation-in-part of the applications listed herein that are identified by Ser. Nos. 10\/016,779, 10\/013,422, and 10\/016,452; and","Utility application Ser. No. 10\/016,452, filed on Dec. 10, 2001, now U.S. Pat. No. 7,383,214, by Brian J. Wasserman, George R. Hood, and Thomas K. Ryan, entitled \u201cDYNAMIC EVENT SELECTION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d, which is a continuation-in-part of the applications listed herein that are identified by Ser. Nos. 10\/016,779, 10\/013,422, 10\/013,434, 09\/845,461, 09\/845,924, 09\/845,851, 09\/608,355, 09\/610,646, 09\/608,681, 09\/608,675, 09\/608,342 and 09\/608,682;","all of which applications are incorporated by reference herein.","Further, the applications listed herein that are identified by Ser. Nos. 10\/227,783, 10\/227,976, and 10\/228,022 each is a continuation-in-part of the following co-pending and commonly assigned patent applications:","Utility application Ser. No. 09\/845,461, filed on Apr. 30, 2001, by George R. Hood, entitled \u201cTAX ADJUSTMENT FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d, which is a continuation-in-part of the applications listed herein that are identified by Ser. Nos. 09\/608,355, 09\/610,646, 09\/608,681, 09\/608,675, 09\/608,342 and 09\/608,682;","Utility application Ser. No. 09\/845,924, filed on Apr. 30, 2001, by George R. Hood, entitled \u201cAMORTIZATION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d, which is a continuation-in-part of the applications listed herein that are identified by Ser. Nos. 09\/608,355, 09\/610,646, 09\/608,681, 09\/608,675, 09\/608,342, and 09\/608,682;","Utility application Ser. No. 09\/845,851, filed on Apr. 30, 2001, by George R. Hood, entitled \u201cSHAREHOLDER VALUE ADD FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d, which is a continuation-in-part of the applications listed herein that are identified by Ser. Nos. 09\/608,355, 09\/610,646, 09\/608,681, 09\/608,675, 09\/608,342, and 09\/608,682;","Utility application Ser. No. 09\/608,355, filed on Jun. 29, 2000, by George R. Hood and Paul H. Phibbs, Jr., entitled \u201cADVANCED AND BREAKTHROUGH NET INTEREST REVENUE IMPLEMENTATION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d;","Utility application Ser. No. 09\/610,646, filed on Jun. 29, 2000, by George R. Hood and Paul H. Phibbs, Jr., entitled \u201cBASIC AND INTERMEDIATE NET INTEREST REVENUE IMPLEMENTATION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d;","Utility application Ser. No. 09\/608,681, filed on Jun. 29, 2000, by George R. Hood, entitled \u201cOTHER REVENUE IMPLEMENTATION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d;","Utility application Ser. No. 09\/608,675, filed on Jun. 29, 2000, by George R. Hood, entitled \u201cDIRECT EXPENSE IMPLEMENTATION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d;","Utility application Ser. No. 09\/608,342, filed on Jun. 29, 2000, by George R. Hood, entitled \u201cINDIRECT EXPENSE IMPLEMENTATION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d; and","Utility application Ser. No. 09\/608,682, filed on Jun. 29, 2000, by George R. Hood, entitled \u201cRISK PROVISION IMPLEMENTATION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d;","all of which applications are incorporated by reference herein.","Finally, this application is related to the following co-pending and commonly assigned patent applications:","Utility application Ser. No. 09\/943,060, filed on Aug. 30, 2001, by Paul H. Phibbs, Jr., entitled \u201cCAPITAL ALLOCATION IN A NET INTEREST REVENUE IMPLEMENTATION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d, which claims the benefit under 35 U.S.C. 5119(e) to Provisional Application Ser. No. 60\/253,281, filed Nov. 27, 2000, by Paul H. Phibbs, Jr., entitled \u201cCAPITAL ALLOCATION IN A NET INTEREST REVENUE IMPLEMENTATION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d, and Provisional Application Ser. No. 60\/253,254, filed Nov. 27, 2000, by Paul H. Phibbs, Jr., entitled \u201cALLOCATED BALANCES IN A NET INTEREST REVENUE IMPLEMENTATION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d, and which is a continuation-in-part of the applications listed herein that are identified by Ser. Nos. 09\/608,355 and 09\/610,646;","Utility application Ser. No. 09\/943,059, filed on Aug. 30, 2001, by Paul H. Phibbs, Jr., entitled \u201cALLOCATED BALANCES IN A NET INTEREST REVENUE IMPLEMENTATION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d, which claims the benefit under 35 U.S.C. \u00a7119(e) to Provisional Application Ser. No. 60\/253,254, filed Nov. 27, 2000, by Paul H. Phibbs, Jr., entitled \u201cALLOCATED BALANCES IN A NET INTEREST REVENUE IMPLEMENTATION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d, and Provisional Application Ser. No. 60\/253,281, filed Nov. 27, 2000, by Paul H. Phibbs, Jr., entitled \u201cCAPITAL ALLOCATION IN A NET INTEREST REVENUE IMPLEMENTATION FOR FINANCIAL PROCESSING IN A RELATIONAL DATABASE MANAGEMENT SYSTEM,\u201d, and which is a continuation-in-part of the applications listed herein that are identified by Ser. Nos. 09\/608,355 and 09\/610,646;","both of which applications are incorporated by reference herein.","1. Field of the Invention","This invention relates in general to financial processing systems performed by computers, and in particular, to the implementation of object-oriented representations of generic profitability rules for financial processing using data accessed from a relational database management system.","2. Description of Related Art","Financial processing systems provide tools for financial analysis of accounting data. Typically, each financial processing system operates in a unique way and approaches financial analysis differently. Some financial processing systems are advanced in their approach to profitability calculations, and others are still at a more basic level. In addition, there is no agreement as to the rules for profitability calculations, outside of generally accepted accounting policies that external auditors use.","Yet, the majority of financial processing systems are inefficient in their accessing of relational databases. There is a need, then, for an improved approach for performing financial processing from a relational database, especially in the area of the representation of profitability rules.","A Value Analyzer system is a data-driven computer-facilitated financial model that provides accurate and consistent profitability calculations using account, product and event attributes stored in a relational database managed by a relational database management system (RDBMS).","The present invention performs financial processing in a computer by: (a) accessing account, product and event attributes from a database, wherein: (1) the account attributes comprise data about accounts being measured, (2) the product attributes comprise data about products being purchased, and (3) the event attributes comprise data about account-related and product-related transactions; (b) performing one or more profitability calculations by applying one or more rules to the account, product and event attributes accessed from the database; and (c) wherein each of the rules is represented as one or more objects in a hierarchy, the objects include one or more relations, criteria lists and criteria, each of the relations includes one or more of the criteria lists, and each of the criteria lists includes one or more of the criteria, and the criteria determine which accounts, products and events are processed in the profitability calculations. The hierarchy includes a root node and the root node represents the rule. Each of the relations corresponds to a combination of selection criteria that comprise account attributes, product attributes, and event attributes, as well as predicates, operations and functions operating thereon. The criteria lists are selected from a group comprised of an account criteria list, product criteria list, and event criteria list. The criteria are selected from a group comprised of an account attribute criteria, product attribute criteria, and event attribute criteria, wherein the criteria comprise one or more elements selected from a group comprising attributes, predicates, operators and functions, and the criteria compare an attribute to another attribute, a literal value, or a result. Each of the rules comprises at least one of the criteria lists and the criteria list comprises at least one of the criteria, and the rules are selected from a group comprising Risk Provision (RP) Rules, Net Interest Revenue (NIR) Rules, Direct Expense (DE) Rules, Indirect Expense (IE) Rules, and Other Revenue (OR) Rules, and the rules are selected from a group comprising Basic, Intermediate, Advanced, and Breakthrough Rules. The objects are stored in a relational database, include queries to load and save the objects.","In the following description of the preferred embodiment, reference is made to the accompanying drawings which form a part hereof, and in which is shown by way of illustration a specific embodiment in which the invention may be practiced. It is to be understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.","A Value Analyzer system is a data-driven computer-facilitated financial model that provides accurate and consistent profitability calculations using account, product and event attributes stored in a relational database managed by a relational database management system (RDBMS).",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 1","b":["100","102","104","106"]},"In the preferred embodiment, the RDBMS  includes at least one Parsing Engine (PE)  and one or more Access Module Processors (AMPs) A-E storing the relational database in one or more data storage devices A-E. The Parsing Engine  and Access Module Processors  may be implemented in separate machines, or may be implemented as separate or related processes in a single machine. The RDBMS  used in the preferred embodiment comprises the Teradata\u00ae RDBMS sold by NCR Corporation, the assignee of the present invention, although other DBMS's could be used.","Generally, the Value Analyzer Client  includes a graphical user interface (GUI) for operators of the system , wherein requests are transmitted to the Value Analyzer Calculation Engine  and\/or the RDBMS , and responses are received therefrom. In response to the requests, the Value Analyzer Calculation Engine  performs the functions described below, including formulating queries for the RDBMS  and processing data retrieved from the RDBMS . Moreover, the results from the functions performed by the Value Analyzer Calculation Engine  may be provided directly to the Value Analyzer Client  or may be provided to the RDBMS  for storing into the relational database. Once stored in the relational database, the results from the functions performed by the Value Analyzer Calculation Engine  may be independently retrieved from the RDBMS  by the Value Analyzer Client .","Note that the Value Analyzer Client , the Value Analyzer Calculation Engine , and the RDBMS  may be implemented in separate machines, or may be implemented as separate or related processes in a single machine. Moreover, in the preferred embodiment, the system  may use any number of different parallelism mechanisms to take advantage of the parallelism offered by the multiple tier architecture, the client-server structure of the Value Analyzer Client , Value Analyzer Calculation Engine , and RDBMS , and the multiple Access Module Processors  of the RDBMS . Further, data within the relational database may be partitioned across multiple data storage devices  to provide additional parallelism.","Generally, the Value Analyzer Client , Value Analyzer Calculation Engine , RDBMS , Parsing Engine , and\/or Access Module Processors A-E comprise logic and\/or data tangibly embodied in and\/or accessible from a device, media, carrier, or signal, such as RAM, ROM, one or more of the data storage devices A-E, and\/or a remote system or device communicating with the computer system  via one or more data communications devices.","However, those skilled in the art will recognize that the exemplary environment illustrated in  is not intended to limit the present invention. Indeed, those skilled in the art will recognize that other alternative environments may be used without departing from the scope of the present invention. In addition, it should be understood that the present invention may also apply to components other than those disclosed herein.","The Value Analyzer system is a data-driven computer-facilitated financial model that provides accurate and consistent profitability calculations using account, event and organization data stored in the RDBMS , wherein: (1) the account attributes comprise data about accounts being measured, (2) the event attributes comprise data about account-related transactions, and (3) the organization attributes comprise data about the organization's financial status. The profitability calculations performed by the Value Analyzer system rely on a Five Factor Atomic Profit Metric (FFAPM):\n\nProfit=Net Interest Revenue (NIR)\n\n+Other Revenue (OR)\n\n\u2212Direct Expense (DE)\n\n\u2212Indirect Expense (IE)\n\n\u2212Risk Provision (RP)\n\n=NIR+OR\u2212DE\u2212IE\u2212RP\n","In the above equation, it is assumed that the sign of elements that reduce profit are negative and those that contribute are positive.","Each of the five factors of FFAPM are defined below:\n\n","Each of these five factors can be measured for a desired period (daily, weekly, monthly, quarterly, etc.). Moreover, each factor is essentially discrete and independent with fundamentally different characteristics, which strengthens the user's ability to fully utilize the output to determine relationships between account, event and organization data, and enable consistent multiple dimensional aggregation.","The FFAPM is \u201catomic\u201d in that profitability is computed using data stored in the RDBMS . There are three aspects to this:\n\n","The Value Analyzer generally defines \u201cindirect\u201d components of profitability to be those which must be apportioned to accounts and \u201cdirect\u201d components to be those which are either computed at the account level, or are rolled up to the account level from lower level events.",{"@attributes":{"id":"p-0054","num":"0061"},"figref":"FIG. 2","b":["104","200","202","204","206","208","200","210","212","214","214"]},"Input Definitions","Account Attributes  comprise data about the accounts being measured. This data includes: balance, rate (or interest accrued), product identification, limits, expected default frequency, and various dates (e.g., open, rate reset, last payment, next payment, maturity, etc.).","Event Attributes  comprise data about account-related events or transactions. This data includes: account identification, event or transaction amounts, event or transaction location, event or transaction time, counter-party identification, event or transaction type (e.g., loan payment, interest paid, loan draw down amount, etc.).","Organization Attributes  comprise data about the financial status of the organization. This data includes: balance sheet and profit statement amounts aggregated by the legal or management entities that own the account base being measured.","Profit Factors  include parameter values necessary to perform the Profitability Calculations . The major classifications of this data include:\n\n","Rules","The Profitability Calculations  use one or more Rules  applied to data retrieved from the RDBMS . These Rules  include, inter alia, the following:","Treatments. Every account with cash flows affecting a organization's balance sheet requires a method of valuing the account's use of internal funds. One approach is \u201cmatched maturity funds transfer pricing,\u201d which uses a canonical representation of an account's funding characteristics and then determines a value based on adjusted market yields for each instance that requires an interest rate transfer price to calculate an account's marginal Net Interest Revenue.","Equity Allocation. In order to provide precise Net Interest Revenue calculations, the amount of equity funds required at an account must be determined. This rule allows for equity allocation using any of the following methods: simple ratios; regulatory definitions; economic allocations, or user defined allocations.","Apportionment. Other Revenue, Risk Provision and Indirect Expense calculations are applied at the account level using Organization Attributes  that are not related directly to account activity. These profit adjustments are made so that the sum of all account-level Profitability Calculations  comprises the overall profit. One approach is to pool indirect costs and revenues and then apportion them. Apportionment rules specify how the pooled indirect costs and revenues is completely allocated to appropriate accounts, wherein the preferred embodiment uses closed form allocation rules, which require only information known in the current period and not iterative computation.","Amortization. Some types of income or expense are deferred or accrued over multiple periods, including and subsequent to the current accounting period. This is common to accrual accounting methods used in profit presentations of financial statements, and gives rise to timing differences between cash flows and their related profit as presented in a financial statement in any accounting period. Since the Value Analyzer system is designed to reconcile to the financial statement's profit values, it supports deferral and accrual accounting principles. Amortization methods that account for these timing differences are: interest amortization (used for interest income and expense accruals and for deferral of fees that are in lieu of interest), and straight line or declining balance amortizations (used for cost deferrals and investment depreciation).","Other Revenue Pricing. In situations where account and event activity can be used to derive account level income or fees, the Value Analyzer system calculates these drivers of the profitability in the Other Revenue calculations. These calculations comprise linear combinations of event or account values and modeled coefficients.","Direct Expense. The calculation of account profit adjustments due to account-related activity requires rules that take the form of linear combinations of event or account values and modeled coefficients.","Indirect Expense. In situations where expense apportionment or amortization amounts are aggregated, the user may want different rules applied depending on the path (or dimension) of aggregation. These rules allow for multiple Profitability Calculations rules to be applied to derive multiple account level Indirect Expense amounts.","Risk Provision. Adjusting current profit for expected future losses is known as \u201cactuarial\u201d profit provisioning. The Value Analyzer system applies actuarial-based methods in its account level Profitability Calculations, where the actuarial reserve that the provisions maintain represents the expected loss associated with all accounts.","Taxable Equivalent Gross-up. Profit is an after-tax measure, and thus some events or portions of some accounts' profits may be excluded from normal taxation. The Value Analyzer system adjusts these pre-tax values, so that a singular tax rate can be used to convert pre-tax profit into after-tax values, which are also known as taxable equivalent adjustment. These rules use account and event attributes to adjust each of the five factors of the FFAPM to a taxable equivalent basis.","Interest Yield Adjustments. Since the Value Analyzer system can calculate profits for any number of periods, the adjustment of cash interest payments, and the financial statement's accrual or smoothed representation of interest-related Profit, the Value Analyzer system provides a method for converting cash interest amounts to accrual amounts for financial statements. The Value Analyzer system implements an \u201ceffective interest rate\u201d conversion to accomplish this type of calculation.","Profitability Calculations","The following describes the method used by the Profitability Calculations :\n\n","Note that steps 2 through 6 perform account-level calculations. Steps 2, 3, 4, 5, and 6 can be performed independently and in parallel, while step 7 requires values derived in steps 2, 3, 4, 5, and 6, and therefore must be performed after steps 2, 3, 4, 5, and 6 are completed.","Output Definition","The Profitability Calculations  generate one or more values for the five factors of the FFAPM , and specifically, the NIR, OR, DE, IE, RP, and Profit values. These values are used to generate the Database , which comprises one or more tables stored by the RDBMS  in the relational database.","In the Value Analyzer system, there are many types of Rules  used in the Profitability Calculations , such as Risk Provision (RP) Rules, Net Interest Revenue (NIR) Rules, Direct Expense (DE) Rules, Indirect Expense (IE) Rules, and Other Revenue (OR) Rules, as well as different levels (Basic, Intermediate, Advanced, Breakthrough) for each type of Rule .","The present invention represents all of the common data attributes and functionality common to all Rules  in a single, reusable class hierarchy that can then be inherited by class specifications for all specific types and levels of Rules . Moreover, the class specifications combine these common data attributes and functionality with specific data attributes and functionality for each Rule . The common and specific data attributes include Selection Criteria (Account Attributes, Product Attributes, and Event Group Attributes) that identify the set of Accounts to which the Rule  will be applied by the Value Analyzer Calculation Engine . The common and specific functionality includes operations performed on the relational database (insert, select, modify and delete), since the Rules  are stored in one or more tables of the relational database managed by the RDBMS .","The benefit of the present invention is to simply the implementation of Rules , and reduce the amount of source code that is created. For example, the class hierarchy avoids the replication of source code and functionality for each specific type and level of Rule . In addition, the present invention improves both the quality and maintainability of the Value Analyzer system, since there is a single location for most source code, which makes it easier to test and debug. Moreover, the present invention significantly decreases the time and cost of both development and maintenance of the Value Analyzer system.","Common Classes of the Generic Profitability Rule",{"@attributes":{"id":"p-0081","num":"0104"},"figref":"FIG. 3","b":["300","300","302","302","304","304","306","308","310","312","314","316"]},"While not all types or levels of Rules  allow for all types of criteria ,  and , including them all in the hierarchy  provides for a single, extensible base class specification. On the other hand, each type or level of Rules  will use at least one of the types of criteria , , .","Generic Rule Example:","Assume a Rule  includes the following Relations :","PRODUCT IN (PROD1, PROD2) AND STATUS=OPEN","OR","PRODUCT=PROD3 AND TERM>30 AND STATUS=OPEN","In this example, \u201cPRODUCT IN (PROD1, PROD2) AND STATUS=OPEN\u201d is identified as Relation #1, and \u201cPRODUCT=PROD3 AND TERM>30 AND STATUS OPEN\u201d is identified as Relation #2.","Relation #1 contains one Account Attribute Criteria  and two Product Attribute Criteria , which are joined together and evaluated with an AND operator:","Account Attribute Criteria: STATUS=OPEN","AND","Product Attribute Criteria: PRODUCT IN (PROD1, PROD2)","Relation #2 contains two Account Attribute Criteria  and one Product Attribute Criteria , which are joined together and evaluated with an AND operator:","Account Attribute Criteria: STATUS=OPEN","AND","Account Attribute Criteria: TERM>30","AND","Product Attribute Criteria: PRODUCT=PROD3","Using this concept, the following describes how Rules  are implemented in an object-oriented representation.","Database Functionality","Users are able to add, modify, and delete Rules , Relations , Criteria Lists ,  and  and Criteria ,  and , as needed. Generally, the database functionality loops through the entire hierarchy  and saves each object individually. The objects are also retrieved in the same manner.","Graphical User Interface","The Value Analyzer Client  has the ability to display the entire hierarchy , as well as groups of objects or individual objects. Dialogs are provided that allow the users to insert, modify and delete the objects. The primary function is to display Rules , their Relations , Criteria Lists ,  and  and Criteria ,  and , to create new Rules , their Relations , Criteria Lists ,  and  and Criteria ,  and , and to modify Rules , their Relations , Criteria Lists ,  and  and Criteria ,  and . The tables in the relational database are updated as appropriate.","Detailed Class Specifications","Following are the class specifications for the various objects.","CBaseRule","This is the base class specification for all Rules . CRule, which is a class specification derived from the CBaseRule class specification, incorporates all of the functionality contained in this class specification, and extends it to support a CRelation class specification. Both CRule and CRelation are described in more detail below.","Attributes","Attributes of this class include the following:\n\n","Methods","The methods of this class include the following:\n\n","CRule Class","This class specification is used to instantiate all types and levels of Rules . This class inherits the base functionality of the CBaseRule class, and extends it as requited for the specific type and level of Rule  being instantiated. The extensions may include both attributes and methods.","Attributes","The attributes of this class include all attributes of the base partition class (above), as well as the following:\n\n","Methods","The methods of this class include the following:\n\n","CRelation Class","The CRelation class specification is used to instantiate a Relation . Each Relation  corresponds to a combination of Selection Criteria that comprise account attributes, product attributes, and event attributes, as well as predicates, operations and functions operating thereon. In this context, each Relation  comprises one or more predicates or conditions. All of the Selection Criteria in a Relation  are joined together using an AND operator when executed.","Attributes","The attributes of this class include the following:\n\n","Methods","The methods of this class include the following:\n\n","CAccountCriteriaList Class","This class specification is used to instantiate an Account Criteria List , which comprises an array of Account Attribute Criteria  (i.e., the account attribute selections) for a specific Relation .","Attributes\n\n","Methods\n\n","CProductCriteriaList Class","This class specification is used to instantiate the Product Criteria List , which comprises an array of Product Attribute Criteria  (i.e., the product attribute selections) for a specific Relation .","Attributes\n\n","Methods\n\n","CEventCriteriaList Class","This class specification is used to instantiate the Event CriteriaList , which comprises an array of Event Attribute Criteria  (i.e., the event attribute selections) for a specific Relation .","Attributes\n\n","Methods\n\n","CCriteria Class","This class specification is the base class specification for all Criteria ,  and .","Attributes\n\n","Methods\n\n","CAccountAttributeCriteria Class","This class specification is used to instantiate the Account Attribute Criteria . This class specification inherits from the CCriteria class specification.","Attributes\n\n","Method\n\n","CProductAttributeCriteria Class","This class specification is used to instantiate a Product Attribute Criteria . This class specification inherits from the CCriteria class specification.","Attributes\n\n","Methods\n\n","CEventAttributeCriteria Class","This class specification is used to instantiate the Event Attribute Criteria . This class specification inherits from the CCriteria class specification.","Attributes\n\n","Method\n\n",{"@attributes":{"id":"p-0152","num":"0263"},"figref":"FIG. 4"},"Block  represents the Value Analyzer Client  accepting one or more rule specifications from the user.","Block  represents the Value Analyzer Calculation Engine  invoking one or more SQL macros in the RDBMS  to select accounts, products and events from the relational database based on the specified rules.","Block  represents the Parsing Engine  of the RDBMS  accessing the SQL macros and the SQL statements therein, and transforming the statements into an operator tree.","Block  represents the Parsing Engine  of the RDBMS  generating one or more access plans from the operator tree.","Block  represents the Parsing Engine  of the RDBMS  parallelizing the access plans, and then transmitting the access plans to their assigned Access Module Processors A-E of the RDBMS .","Block  represents the Access Module Processors A-E of the RDBMS  executing the access plans, and thereby performing the required data manipulation associated with the access plans received from the Parsing Engine , wherein the requited data manipulation associated with the access plans are performed in parallel by the Access Module Processors A-E.","Block  represents the Parsing Engine  of the RDBMS  standardizing the results received from the Access Module Processors A-E and storing the standardized results in the intermediate tables in the relational database.","Block  represents the Value Analyzer Calculation Engine  invoking one or more SQL macros in the RDBMS  to perform the calculation steps of the Profitability Calculations  by applying the rules to the results stored in the intermediate tables in the database.","Block  represents the Parsing Engine  of the RDBMS  accessing the SQL macros and the SQL statements therein, and transforming the statements into an operator tree.","Block  represents the Parsing Engine  of the RDBMS  generating one or more access plans from the operator tree.","Block  represents the Parsing Engine  of the RDBMS  parallelizing the access plans, and then transmitting the access plans to their assigned Access Module Processors A-E of the RDBMS .","Block  represents the Access Module Processors A-E of the RDBMS  executing the access plans, and thereby performing the required data manipulation associated with the access plans received from the Parsing Engine , wherein the required data manipulation associated with the access plans are performed in parallel by the Access Module Processors A-E.","Block  represents the Parsing Engine  of the RDBMS  standardizing the results received from the Access Module Processors A-E and providing the standardized results to the Value Analyzer Calculation Engine .","Block  represents the Value Analyzer Calculation Engine  delivering the output or results from the Profitability Calculations  to the Value Analyzer Client  and\/or the RDBMS . With regard to the Value Analyzer Client , the results may be presented to the user, printed, or used by various other computer programs, as desired. With regard to the RDBMS , the results may be stored for later use by the Value Analyzer Client , the Value Analyzer Calculation Engine , or other computer programs, as desired.","This concludes the description of the preferred embodiment of the invention. The following paragraphs describe some alternative embodiments for accomplishing the same invention.","In one alternative embodiment, any type of computer or configuration of computers could be used to implement the present invention. In addition, any database management system, decision support system, on-line analytic processing system, or other computer program that performs similar functions could be used with the present invention.","In summary, the present invention discloses a Value Analyzer system, which is a data-driven computer-facilitated financial model that provides accurate and consistent profitability calculations using account, product and event attributes stored in a relational database managed by a relational database management system (RDBMS). Profitability calculations are performed in the computer by applying one or more rules to the account, product and event attributes accessed from the database, wherein each of the rules is represented as one or more objects in a hierarchy, the objects include one or more relations, criteria lists and criteria, each of the relations includes one or more of the criteria lists, and each of the criteria lists includes one or more of the criteria, and the criteria determine which accounts, products and events are processed in the profitability calculations.","The foregoing description of the preferred embodiment of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
