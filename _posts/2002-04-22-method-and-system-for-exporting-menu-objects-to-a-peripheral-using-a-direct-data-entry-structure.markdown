---
title: Method and system for exporting menu objects to a peripheral using a direct data entry structure
abstract: A method and system for exporting menu objects to a peripheral, which includes the steps of collecting configuration data of the current setting, creating a Direct Data Entry menu of pages and elements, storing the configuration data into the Direct Data Entry menu, and sending a Direct Data Entry string for a requested element in the Direct Data Entry menu.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07640504&OS=07640504&RS=07640504
owner: Hewlett-Packard Development Company, L.P.
number: 07640504
owner_city: Houston
owner_country: US
publication_date: 20020422
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention generally concerns an exporting method for displaying a menu in a peripheral. The method of the invention more specifically concerns exporting methods using a direct data entry structure.","Typically, using an input and output device, such as an input and output \u201cI\/O\u201d card (herein \u201ccard\u201d), data can be exported to a peripheral for display to users. The card generally includes a microprocessor for processing any commands from the peripheral, memory (i.e. a computer storage medium or computer-readable medium) for storing the processes and data and an interface for communicating with the peripheral. The most common data displayed to the user is configuration data, such as a setting for the default paper size, relating to the peripheral.","However, in prior methods, the card could send only text strings, which are then displayed to the user by the peripheral. A string is a sequence of data values (e.g., bytes), which typically stand for characters (e.g., a \u201ccharacter string\u201d). The mapping between values and characters is determined by the character set which is itself specified implicitly or explicitly by the environment in which the string is being interpreted. Because the strings in the prior method are limited to user readable text, the menu display and flexibility is greatly limited. In addition, since the peripheral is generally adapted to send only incremental commands, only one entry can be displayed at one time. As peripherals play a greater role in networking, it is becoming more common for the peripherals to be implemented with a server, resulting in a very long and complicated configuration menu. A typical menu would involve multiple pages, sections, subsections, and choices. With the limited use of text strings and incremental commands, the peripheral cannot display such complex menu without being a tedious task for the user, since only one entry can be displayed at a time. Furthermore, it would be difficult for the peripheral to recognize any menu structures that may be divided into pages, sections and subsection.","In the present invention, the configuration data of a current setting of a peripheral is first collected, and a Direct Data Entry menu of the pages and elements is then created. The configuration data is stored into the created Direct Data Entry menu. Upon a request for an element in the menu, the Direct Data Entry string for the requested element is then sent.","The present invention provides a way to display complicated menu structures on peripherals, which are generally limited to text strings. With the use of a Direct Data Entry (\u201cDDE\u201d) structure, the peripheral is able to recognize a page, section, subsection or items. Users can easily navigate through the menu using the display panel on the peripheral. For example, users can navigate from a page with many sections (e.g., opens up to more choices) and items (e.g., selectable for configuration), and from a particular section with multiple subsections and items.","In the present invention, the configuration data of the current setting of a peripheral is first collected, and a Direct Data Entry menu of the pages and elements is then created. The configuration data is stored into the created Direct Data Entry menu. Upon a request for an element in the menu, a Direct Data Entry string for the requested element is then sent.","A block diagram of a system according to an embodiment of the present invention is shown in , and indicated generally at . As with most typical systems, there is a peripheral  that generally includes a display panel  for displaying data to users, microprocessor  for processing data, a shared memory  for storing data, an interface chip  for communication with other devices, and a bus controller chip  for controlling the processing among the microprocessor. In this embodiment, a card  is used as an input and output device for communicating with the peripheral . Similarly, the card includes a microprocessor  for processing, memory  (i.e. a computer storage medium or computer-readable medium) for storing data and program codes of processes executable by microprocessor , and an interface chip  for communicating with the peripheral. The card is a separate component (i.e., external) from the peripheral. For example, the card can be inserted or extracted easily to and from the peripheral. However, the present invention also contemplates using the card or any input or output device that is internal to the peripheral. Thus, it should be understood that these various implementations are within the scope of the present invention.","In this embodiment, the card  stores the configuration data, such as menu objects of a menu, for display on the peripheral . With the use of a display  on the peripheral, the card exports the menu to the user for configuration set up or revision. In this embodiment, the card  monitors and controls the navigation of a user session for configuring the menu. However, implementations of the peripheral monitoring and controlling the navigation are also contemplated, and these various implementations are within the scope of the present invention.","The present invention may be implemented in a variety of systems. The current embodiment uses a card as one of the many implementation variations. The present invention, nonetheless, can be implemented on any device that has the capability to store and process information. However, it should also be understood that the present invention can be implemented in various computer codes, such as machine codes, and firmware.","In addition, the present invention can be implemented with different types of data structures, such as a tree. As a result, it should be understood that others skilled in the art can appreciate the implementations of the various systems and configurations, and these implementations are within the scope of the present invention. However, a page object-oriented data structure is used as the data structure according to one embodiment, and the present invention will be explained and described with a page object-oriented data structure implementation as the data structure.","A general data structure  and an exemplary data structure  of a Direct Data Entry string according to an embodiment of the present invention are shown in . In the current embodiment, a Direct Data Entry (\u201cDDE\u201d) string of an element is generated by the card  in response to commands sent from the peripheral . An element is defined as one of the items of data in an array (i.e., a collection of similarly typed data items distinguished by their indices or subscripts). In the present DDE data structure, an element can be a page, a selection and an item, and this is dependent on what type the element is defined as. In the current embodiment, elements are used to define menu objects (e.g., page, a selection and an item) in a menu with a specific structure, and the DDE string defines the configuration of the elements, which includes multiple attributes. An attribute is used as a named value or relationship that exists for some or all instances of some entity and is directly associated with that instance. The peripheral, using these attributes, displays the menu objects according to their appropriate structure.","In this embodiment, there is a type attribute (e.g., type=user) for defining a type for the element and an identification attribute for uniquely identifying the element in a page. Although the identification attribute is defined as \u201cid=0x01\u201d, the \u201c0x0\u201d does not necessarily indicate any specific order or structure of the menu. Thus, for example, the identification attribute of \u201cid=0x860020\u201d would have also worked with the current implementation. It should be understood that any numbering of the identification attribute could have been chosen, depending on the implementation. As a result of the type attribute and the identification attribute, the menu objects (e.g., elements) are displayed according to their structure in a given menu. For example, a type attribute can be used to define a page (e.g., type=page), a host name (e.g., type=user), information relating to the network address of the peripheral (e.g., type=ipaddr), a selection defined by the user (e.g., type=selection), or any thing that may be appropriate to define menu objects in the menu structure.","There are also other attributes, such as an element count attribute for defining the total number of elements for a page, a value attribute for indicating a value for the element, a title attribute for defining a title for the element, a label attribute for defining a description of the element, a vis attribute for indicating whether the element is visible and operational, and an access attribute for indicating the users' right to view or modify the element. Although not all the attributes have been shown in this example, a skilled artisan would appreciate that various attributes can be added, altered or deleted depending on the implementation. The various implementations with the use of different attributes are contemplated, and they are within the scope of the present invention.","As shown in the examples shown in , the element entitled \u201cTCP\/IP\u201d (e.g., title=\u201cTCP\/IP\u201d) has a total of four elements (e.g., elements=4). The first element under \u201cTCP\/IP\u201d, which is a host name (e.g., label=\u201cHOST NAME\u201d) of \u201cstargate\u201d (e.g., value=\u201cstargate\u201d), an identification attribute of \u201cid=0x01\u201d is used as an association to an element in the page. As shown, there may be other attributes, such as max-length attribute for defining the maximum length allowed for the value attribute, an allow attribute for indicating the allowed characters for the value attribute, a focus attribute for defining a previously selected element, as well as the vis attribute for indicating whether the element is visible and operational and an access attribute for indicating the users' right to view or modify the element. A typical menu structure of the element \u201cTCP\/IP\u201d has been shown, which includes a host name, an IP address, a subnet mask and a default gateway.","A Direct Data Entry structure according to an embodiment of the present invention is shown in  and indicated generally at . The overall data structure is divided into a Session group , an Element group , a Page group  and a Selection group . The remaining groups of Elem TypeIpAddr , Elem TypeUint , Elem Type Float  and Elem TypeUser  are used to define the allowed configuration of elements of a specific type. Under each of the groups, the attribute and the commands are shown.","For example, session  includes attributes  of \u201c\u2212MyRoot: Page\u201d for defining the root page as the first page, \u201cMyLanguage: UNIT \u201d for defining the default language and \u201cMyCharacterSet: UNIT\u201d for defining the character and commands  of \u201cBegin( ): void\u201d for beginning the session, \u201cCancel( ): void\u201d for canceling the session and \u201cEnd( ) for ending the session. Page group , on the other hand, includes attributes  of \u201cFocus: POSITION\u201d for defining a previously selected element, \u201cListOf Elements: LIST\u201d for defining the number of elements in the page and \u201cCurrentElement: POSITION\u201d for defining the current element being processed and commands  of \u201cGetPageTitle(data:String): void\u201d for getting the title of the page, \u201cGetFirstElement( ): void\u201d for getting the first element in the page, \u201cGetNextElement( ): void\u201d for getting the next element in the page, \u201cSetNewPage( ): void\u201d for setting a new page and \u201cExitCurrentPage( ):void\u201d for exiting the current page.","The attributes  (e.g., \u201cMyId: UINT\u201d, \u201cMyLabel: String\u201d, \u201cMyType: String\u201d, \u201cMyVisibillty: BOOL\u201d and \u201cMyAccess: BOOL\u201d) and commands  (e.g., \u201cGetDDEString(data:String): void\u201d for getting the DDE String\u201d and \u201cSetDDEString(data:String): void\u201d for setting the DDE String) of the group element  are then used as a current element of the current page from the Page group . Lastly, a selection group  is included for allowing the user to select elements from the menu. The selection group , similarly, includes a different set of attributes  (e.g., \u201cvalue: String\u201d, \u201ccurrentIndex: UINT\u201d, \u201cminIndex: UINT\u201d and \u201cMaxIndex: UINT\u201d) and commands  (e.g., \u201cLookupIndex(index:UINT,data:String):void\u201d and \u201cSetlndex(index:UINT): void\u201d for looking up and setting the identification attribute of the selected element).","Because the group \u201cElem TypelpAddr\u201d , \u201cElem TypeUint\u201d , \u201cElem Type Float\u201d  and \u201cElem TypeUser\u201d  are used to define the allowed configuration of elements of a specific type, they do not have any commands in the current embodiment. Rather, these elements inherent commands from their base class (e.g., group elements). Put differently, these elements are a specific instance(s) of the group element. \u201cElem TypeIpAddr\u201d  includes an attribute  of \u201cvalue: IPADDR\u201d for defining the value of elements having IP Address as type (e.g., type=ipaddr), and \u201cElem TypeUint\u201d  includes attributes  \u201cvalue: UINT\u201d, \u201cmin: UINT\u201d and \u201cmax: UINT\u201d for defining the value of elements having an unassigned integer as type. Finally, \u201cElem Type Float\u201d  and \u201cElem TypeUser\u201d  includes similar attributes  (e.g., \u201cvalue: FLOAT\u201d, \u201cmin: FLOAT\u201d, \u201c\u2212max: FLOAT\u201d and \u201cprecision: UINT\u201d),  (e.g., \u201cvalue: String\u201d, \u201cmaxLength: UINT\u201d, \u201callow: String\u201d and \u201cdeny: String\u201d). Again, a skilled artisan would appreciate the flexibility in the implementation of the present invention, and it should be understood that the groups, attributes and\/or commands may be changed. These various implementations are within the scope of the present invention.","One embodiment of a method for exporting menu objects of a menu to the peripheral  in accordance with the invention is shown in . The method is initiated by a user, through the peripheral , by calling a command to start a menu session (block ), and the peripheral accordingly sends a Mod_Start_Session command to the card (block ). However, it should be noted that automatic initiation by a computer program is also contemplated, depending on the design and needs of the implementation. The card then creates a menu session on the display panel of the peripheral (block ) and collects the configuration data of the current setting for the peripheral (block ). In the current embodiment, the configuration is stored on the card, but the configuration data can also be stored on the peripheral.","Once the card finishes collecting the configuration data (block ), a DDE menu of the pages and elements is created (block ) and stored with the current configuration data (block ). The peripheral sends a Mod_Set_First_Page command to set the first page (block ), and, in response, the card sets the root page as the current_page (block ). After the root page is set as the current page (block ), the page-load process is initiated for loading the currently set page (block ), which is shown in .","Turning now to the page-load process (block ) shown in , for the current_page (e.g., the root page), the peripheral first sends a Mod_Get_Page_Title to the card for getting the title of the current page (block ). In response, the card returns a DDE string of the title of the current page (block ). From which, the peripheral sends a Mod_Get_First_Element command to get the first element of the current page (block ). The card accordingly sets the first element in the current page as the current_element (block ), and returns the DDE string of the current element (block ). In preparation for the next element in the current page, the card returns a status of a next element of the current page to the peripheral (block ).","It is then determined whether there is a selection element requested (block ). If so, the peripheral sends a Mod_Lookup_Selection command to request that an option in a selection element be returned by the card (block ). As requested, the card returns a DDE string of the selection element to the peripheral (block ). It is next determined whether there are more options in the selection element (block ). If there is another option (block ), the process reloops to the step of the peripheral sending the Mod_Lookup_Selection command for another request (Block ). This subroutine is repeated until there are no more options in the selection element (block ). Once it is either determined that there is not a selection element (block ) or there are no more options for the selection element (block ), the page-load process then determines whether there is a next element in the current page (block ). When there is a next element (block ), the peripheral sends a Mod_Get_Next_Element command to get the next element for the current page (block ). The card, in response, sets this next element as the current_element (block ) and reloops to the step of returning the DDE string of the current element (block ). The page-load method is restarted from this step. If, on the other hand, there is not a next element (block ), the peripheral displays the page elements with the returned DDE string to the user (block ) and returns to the method shown in  (block ).","Referring back to , after the elements of the current page are displayed to the user (block ), a response is expected from the user (block ). Once the user responds, it is determined whether the user's response is to set an element in the current page (block ). If so, it is then determined whether the element is an item or a selection selected by the user (block ). If the element is an item, the peripheral sends a Mod_Set_Item command for setting the item (block ). Similarly, if the element is a selection, the peripheral sends a Mod_Set_Selection command for setting the user selection (block ). Once the element has been set, it is determined whether the data sent to set the element is valid (block ). If so, according to the current embodiment, the data for the current element is saved to the temporary memory (block ). If the data fails the validity test (block ), the process simply waits until there is another user response (block ).","Upon a response from the user, the process loops back to the step of determining whether the user response is to set an element in the current page (block ). If the user response is to set an element, the process repeats. However, if the user response is not to set an element, it is then determined whether the user response is to go to the menu or a page in the menu (block ). If the user response is to go to a page, a page-change method (block ) shown in  is initiated to make such a page change.","Turning now to the page-change method (block ) shown in , it is determined whether the user response is to exit the current page or to set a new page (block ). If the user response is to set a new page, the peripheral sends a Mod_Set_New_Page command to request that a new page be set (block ), which is followed by the card setting the new page as the current_page (block ). In addition, the card responds with a page status of this change to the peripheral (block ). The page-change method ends and returns (block ) to the method shown in . If, however, the user response is to exit the current page without indicating a new page (block ), the peripheral would send a Mod_Exit_Page command to the card to make such a request (block ). The card then determines whether the current page is the root page (block ). If so, the card simply responds with a status of the current page being the root page to the peripheral (block ) and returns back to the method shown in . However, if the current page is not the root page, the card sets the current_page to a parent page of the page being requested for exit (block ), and, again, the card sends a page status of the current page (block ) and returns to method shown in  (block ), and the page-change method ends at this point.","Referring again to , after the page-change method is finished processing and returns with a page status of the current_page (block ), it is determined whether the current_page is beyond the root page (block ). Put differently, it is determined whether the currently set current_page is past the root page (block ). If the current_page is not beyond the root page (block ), the process reloops to the page-load method (block ), which is again initiated with the currently set current_page.","If, on the other hand, the current_page is beyond the root page (block ) or the earlier sent user response is to go back to the menu (block ), it is next determined whether there is a request to end or cancel the session altogether (block ). If a request to end the session has been submitted by the user (block ), the peripheral sends a Mod_End_Session command to the card for ending the session (block ). In response, the card saves the data from the temporary memory to the permanent memory (block ) and the session is ended (block ). However, if it has been requested to cancel the session (block ), the peripheral sends a Mod_Cancel_Session command to the card (block ). In response to the command, the card discards the data from the temporary memory (block ) and ends the session (block ).","Exemplary inputs and outputs given a defined menu structure is shown in , B, C, D, E, F, G and H. Turning to , an overall menu structure of the root page along with a specific example of the \u201cTCP\/IP\u201d page under the root page is shown and indicated generally at . Under the root page entitled, \u201cNETWORK SETTINGS,\u201d there are 4 elements, specifically a TCP\/IP page element, a IPX\/SPX page element, a APPLETALK page element and a RESTORE DEFAULTS selection element. In the example, only the TCP\/IP page element is shown, and it has 4 other elements under the TCP\/IP page element, which are HOST NAME, IP ADDRESS, SUBNET MASK and DEFAULT GATEWAY. Note that there is an unique identification attribute (e.g., id=0x01) for uniquely identifying each element in the page. Although TCP\/IP and HOST NAME has the same identification attribute (e.g., id=0x01), the identification attribute is specific to each page element.","Turning now to , a trace for setting the first page of the menu session is shown and indicated generally at . A trace is a utility that allows developers to see a list of inputs and outputs for the processing of the commands. The card receives the Mod_Set_First_Page from the peripheral, and there is no input or output from the card, since the root page is the first page by default. Next, the card loads the currently set page, which is the root page, and the trace for loading the current page is shown in .","In , the trace for the page-load method is shown and indicated generally at . From the previous example in , the first page is set as the current page being loaded, which is a root page from the example in . For each command sent from the peripheral, the card outputs a DDE string for the command. For example, for the Mod_Get_Page_Title command, the card outputs the DDE string of \u201c[title=\u201cNETWORK SETTINGS\u201d, elements=4, root=1]\u201d. The DDE string for the title is followed by each of the elements. The DDE string of the first element (e.g., TCP\/IP) is returned with the Mod_Get_First_Element command. After all the elements for the current page have been returned and displayed on the peripheral, the peripheral may sent back a Mod_Lookup_Selection command if the user selects an element from the current page. In this case, the card receives the command along with an input of the identification attribute and the index attribute of the selection (e.g., input=[id=0x04, index=0]), and an output (e.g., output=[id=0x04, index=0, value=\u201cYES\u201d]) that there is such a value is sent to the peripheral.","A trace of the page-change method with a specified page of the TCP\/IP page is shown in  and indicated generally at . The card receives the Mod_Set_New_Page command along with an input identifying the requested page using the identification attribute (e.g., input=[id=0x01]) from the peripheral, the card initiates the page-load method to load the TCP\/IP page element, which is shown in .","A trace of the page-load method for loading the TCP\/IP page element is shown in  and indicated generally at . Again, a Mod_Get_Page_Title command is received by the card, and a DDE string for the title (e.g., output=[title=\u201cTCP\/IP\u201d, elements=4) is returned to the peripheral. From the DDE string of the title, the peripheral sends the Mod_Get_First_Element command and the Mod_Get_Next_Element command to obtain the elements in the TCP\/IP page from the card. As shown, the card returns the DDE string of each element shown in .","With the TCP\/IP page displayed, the user can set an item, change the current page or set an selection, which is shown in , G and H and indicated generally at , , , respectively. If the user requested to set an item in the TCP\/IP page, the peripheral sends the Mod_Set_Item command with an input to identify the element and the value for the element (e.g., input=[id=0x01, value=\u201cstargate\u201d]). In this case, the card does not output any string to the peripheral. Similarly, the page-change method shown in , there is a Mod_Exit_Page, and there is no input or output to and from the card. In , the user can also set a selection, which again prompts the peripheral to send the Mod_Set_Item command along with an input (e.g., input=[id=0x04, index=0) to the card.","From the foregoing description, it should be understood that an improved system and method for exporting menu objects of a menu in a peripheral using a direct data entry structure have been shown and described, which have many desirable attributes and advantages. The system and method enables menu objects and structure to be exported to a peripheral, allowing for user selection to configure these menu objects.","While various embodiments of the present invention have been shown and described, it should be understood that other modifications, substitutions and alternatives are apparent to one of ordinary skill in the art. Such modifications, substitutions and alternatives can be made without departing from the spirit and scope of the invention, which should be determined from the appended claims.","Various features of the invention are set forth in the appended claims.",{"@attributes":{"id":"p-0045","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"APPENDIX A"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PERIPHERAL COMMANDS"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MOD_MENU_","Return the menu title in the buffer. Does not affect"]},{"entry":["TITLE","the card internal state. The title string must contain"]},{"entry":[{},"at least one printable character."]},{"entry":["MOD_START_","A request sent by the peripheral to enter into the"]},{"entry":["SESSION","card's menu state machine. A null string is sent by"]},{"entry":[{},"the peripheral in the request and the card returns a"]},{"entry":[{},"null string in the response. No Indicator bits should"]},{"entry":[{},"be set in either the request or response"]},{"entry":["MOD_END_","A request sent by the peripheral to exit the card's"]},{"entry":["SESSION","menu state machine and save any modifications. A"]},{"entry":[{},"null string is sent by the peripheral in the request"]},{"entry":[{},"and the card returns a null string in the response."]},{"entry":[{},"No Indicator bits should be set in either the request"]},{"entry":[{},"or response"]},{"entry":["MOD_CANCEL_","A request sent by the peripheral to exit the card's"]},{"entry":["SESSION","menu state machine and discard any changes. A"]},{"entry":[{},"null string is sent by the peripheral in the request"]},{"entry":[{},"and the card returns a null string in the response."]},{"entry":[{},"No Indicator bits should be set in either the request"]},{"entry":[{},"or response"]},{"entry":["MOD_SET_","A request sent by the peripheral to enter into the"]},{"entry":["FIRST_PAGE","card's first page. A page is a logical grouping of"]},{"entry":[{},"menu elements. A null string is sent by the"]},{"entry":[{},"peripheral in the request and the card returns a null"]},{"entry":[{},"string in the response. No Indicator bits should be"]},{"entry":[{},"set in either the request or response."]},{"entry":["MOD_SET_","A request sent by the peripheral to enter a new"]},{"entry":["NEW_PAGE","logical grouping of menu elements. A DDE string is"]},{"entry":[{},"sent by the peripheral in the request to inform the"]},{"entry":[{},"card of the desired page and the card returns a null"]},{"entry":[{},"string in the response. No Indicator bits should be"]},{"entry":[{},"set in the request. The card may set Indicator Bit 3"]},{"entry":[{},"in the response if the requested page is invalid."]},{"entry":["MOD_GET_","A request sent by the peripheral to get the title for a"]},{"entry":["PAGE_TITLE","page. Does not affect the card internal state. The"]},{"entry":[{},"title string must contain a least one printable"]},{"entry":[{},"character. Peripherals should issue this request"]},{"entry":[{},"when entering and exiting pages. The peripheral"]},{"entry":[{},"cannot assume the title of any previous page is still"]},{"entry":[{},"valid after performing either a"]},{"entry":[{},"MOD_SET_SELECTION or MOD_SET"]},{"entry":[{},"ELEMENT and must issue this request after recei-"]},{"entry":[{},"ving responses to these requests."]},{"entry":["MOD_EXIT_","A request sent by the peripheral to leave the current"]},{"entry":["CURRENT_PAGE","logical grouping of menu elements and return to the"]},{"entry":[{},"previous page. A null string is sent by the peripheral"]},{"entry":[{},"in the request and the card returns a null string in"]},{"entry":[{},"the response. No Indicator bits should be set in the"]},{"entry":[{},"request. If the peripheral was on the first page when"]},{"entry":[{},"this request is issued, the card will return the"]},{"entry":[{},"response with Indicator Bit 3 set. The peripheral"]},{"entry":[{},"cannot assume the elements of any previously page"]},{"entry":[{},"are still valid and the peripheral should gather all the"]},{"entry":[{},"elements of the current page after receiving the"]},{"entry":[{},"response from this request."]},{"entry":["MOD_GET_","A request sent by the peripheral to get the first"]},{"entry":["FIRST_ELEMENT","element of the current page. A null string is sent by"]},{"entry":[{},"the peripheral in the request and the card returns a"]},{"entry":[{},"DDE string representing the element in the"]},{"entry":[{},"response. This DDE string will represent various"]},{"entry":[{},"element types including parameter\/items, menus,"]},{"entry":[{},"and selections. See the appendix at the end of this"]},{"entry":[{},"document for more information concerning DDE"]},{"entry":[{},"strings. No Indicator bits should be set in the"]},{"entry":[{},"request. Indicator bit 2 will be set in the card's"]},{"entry":[{},"response verifying this is the first element on the"]},{"entry":[{},"page. If the peripheral does not have a current page"]},{"entry":[{},"when this request is issued, the card will return the"]},{"entry":[{},"response with a null string with Indicator Bit 3 set."]},{"entry":["MOD_GET_","A request sent by the peripheral to get the next"]},{"entry":["NEXT_ELEMENT","element of the current page. A null string is sent by"]},{"entry":[{},"the peripheral in the request and the card returns a"]},{"entry":[{},"DDE string representing the element in the"]},{"entry":[{},"response. This DDE string will represent various"]},{"entry":[{},"element types including parameter\/items, menus,"]},{"entry":[{},"and selections. See the appendix at the end of this"]},{"entry":[{},"document for more information concerning DDE"]},{"entry":[{},"strings. No Indicator bits should be set in the"]},{"entry":[{},"request. Indicator Bit 1 in the card's response will be"]},{"entry":[{},"set if this is the last element on the page. The list of"]},{"entry":[{},"elements on a page is not circular; the next request"]},{"entry":[{},"after the last element has been retrieved will return"]},{"entry":[{},"a response with a null string with Indicator Bit 3 set."]},{"entry":[{},"When the first element on the page is returned"]},{"entry":[{},"Indicator bit 2 will be set in the card's response. If"]},{"entry":[{},"the peripheral does not have a current page when"]},{"entry":[{},"this request is issued, the card will return the"]},{"entry":[{},"response with a null string with Indicator Bit 3 set."]},{"entry":["MOD_GET_","A request sent by the peripheral to get the previous"]},{"entry":["PREV_ELEMENT","element of the current page. A null string is sent by"]},{"entry":[{},"the peripheral in the request and the card returns a"]},{"entry":[{},"DDE string representing the element in the"]},{"entry":[{},"response. This DDE string will represent various"]},{"entry":[{},"element types including parameter\/items, menus,"]},{"entry":[{},"and selections. See the appendix at the end of this"]},{"entry":[{},"document for more information concerning DDE"]},{"entry":[{},"strings. No Indicator bits should be set in the"]},{"entry":[{},"request. Indicator Bit 1 in the card's response will"]},{"entry":[{},"be set if this is the last element on the page. The"]},{"entry":[{},"list of elements on a page is not circular; a previous"]},{"entry":[{},"request on the fist element will return a response"]},{"entry":[{},"with a null string with indicator Bit 3 set. When the"]},{"entry":[{},"first element on the page is returned Indicator bit 2"]},{"entry":[{},"will be set in the card's response. If the peripheral"]},{"entry":[{},"does not have a current page when this request is"]},{"entry":[{},"issued, the card will return the response with a null"]},{"entry":[{},"string with Indicator Bit 3 set."]},{"entry":["MOD_SET_","A request sent by the peripheral to set the DDE"]},{"entry":["SELECTION","string choice for a selection. A DDE string is sent"]},{"entry":[{},"by the peripheral indicating which choice is to be"]},{"entry":[{},"set for the selection and the card returns a null"]},{"entry":[{},"string in the response. See the appendix at the end"]},{"entry":[{},"of this document for more information concerning"]},{"entry":[{},"DDE strings and selection elements. No Indicator"]},{"entry":[{},"bits should be set in the request. The card"]},{"entry":[{},"may set Indicator Bit 3 in the response if the re-"]},{"entry":[{},"quested choice cannot be set or is invalid. The"]},{"entry":[{},"peripheral cannot assume the elements of the cur-"]},{"entry":[{},"rent page are still valid after sending this re-"]},{"entry":[{},"quest and the peripheral should gather all the"]},{"entry":[{},"elements of the current page after receiving the"]},{"entry":[{},"response."]},{"entry":["MOD_LOOKUP_","A request sent by the peripheral to get one of the"]},{"entry":["SELECTION","enumerated DDE string choices for a selection. A"]},{"entry":[{},"DDE string is sent by the peripheral indicating"]},{"entry":[{},"which choice is requested and the card returns a"]},{"entry":[{},"DDE string representing this item. See the appen-"]},{"entry":[{},"dix at the end of this document for more information"]},{"entry":[{},"concerning DDE strings and selection elements. No"]},{"entry":[{},"Indicator bits should be set in the request. The card"]},{"entry":[{},"may set Indicator Bit 3 in the response if the"]},{"entry":[{},"requested selection element is invalid."]},{"entry":["MOD_SET_","A request sent by the peripheral to set the"]},{"entry":["ITEM","parameter of a specified item\/parameter element of"]},{"entry":[{},"the current page. A DDE string is sent by the"]},{"entry":[{},"peripheral in the request and the card returns a null"]},{"entry":[{},"string in the response. See the appendix at the end"]},{"entry":[{},"of this document for more information concerning"]},{"entry":[{},"DDE strings. No Indicator bits should be set in the"]},{"entry":[{},"request. The card may set Indicator Bit 3 in the"]},{"entry":[{},"response if the requested page is invalid. The"]},{"entry":[{},"peripheral cannot assume the elements of the"]},{"entry":[{},"current page are still valid after sending this request"]},{"entry":[{},"and the peripheral should gather all the elements of"]},{"entry":[{},"the current page after receiving the response."]},{"entry":["MOD_GET_","For Enhanced Menus only, see section 11.11.2 and"]},{"entry":["DDE_STRING","the appendix at the end of the document for the"]},{"entry":[{},"DDE string format definition. The peripheral sends"]},{"entry":[{},"this operator as a request with a null string. The"]},{"entry":[{},"card returns the Direct Data Entry format string"]},{"entry":[{},"describing the current configuration item\/parameter."]},{"entry":[{},"The Indicator field must be set as listed below. This"]},{"entry":[{},"operator is typically issued by the peripheral when"]},{"entry":[{},"keyboard data will be entered for the parameter."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0046","num":"0045"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"DIRECT DATA ENTRY"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DDE","id=<hex number>,"]},{"entry":[{},"string","label=\u201c<localized text>\u201d"]},{"entry":[{},{},"type=<one of several data types>,"]},{"entry":[{},{},"<detailed attributes>,"]},{"entry":[{},{},"prefix=\u201c<localized text>\u201d,"]},{"entry":[{},{},"suffix=\u201c<localized text>\u201d,"]},{"entry":[{},{},"vis={1, 0},"]},{"entry":[{},{},"access={r, w}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"The parts of a DDE string are explained below:\n\n",{"@attributes":{"id":"p-0048","num":"0056"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Keywords for DDE Data Types and their Attributes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Types:","Attributes:"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["page","{ }"]},{"entry":["uint32","{ value, min, max, large-step, wrap, percent }"]},{"entry":["sint32","{ value, min, max, large-step, wrap, sign, percent }"]},{"entry":["ipaddr","{ value }"]},{"entry":["selection","{ value, index, min, max}"]},{"entry":["real32","{ value, min, max, precision, single-step, large-step, wrap,"]},{"entry":[{},"sign, percent }"]},{"entry":["user","{ value, max-length, class | allow | deny }"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The page keyword is used for sub menus. There are no detailed keywords. The page title (sub menu title) is contained in the label part of the DDE string. The peripheral will enter into sub menus (pages) by sending an  command, CMD_MENU_DATA, with the modifier, MOD_SET_NEW_PAGE, with a DDE string that contains the id of the page into which to enter.",{"@attributes":{"id":"p-0050","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DDE string","id=<hex number>"]},{"entry":[{},"sent by the"]},{"entry":[{},"peripheral"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{},"b":"32"},"Unsigned integers are useful for positive numbers and for hexadecimal numbers, which are useful for station addresses. Peripherals that do not have alpha characters on their keypads can use incremental menu commands to process this menu item. Card designers have to be aware that peripherals may use incremental menu commands instead of direct data entry for this uint type.",{"@attributes":{"id":"p-0052","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Data type and",{}]},{"entry":["Keyword","printf format","Range and comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Value","UINT32, \u201c%u\u201d","Card supplies value such that 0 <= value <="]},{"entry":[{},"e.g. value=270","2- 1, and min <= value <= max. For"]},{"entry":[{},{},"values greater than 100, the peripheral"]},{"entry":[{},{},"determines whether and how to display the"]},{"entry":[{},{},"radix depending on the current localization"]},{"entry":[{},{},"(e.g. \u201c1000\u201d for neutral or \u201c1,000\u201d for U.S."]},{"entry":[{},{},"or \u201c1.000\u201d for Europe)."]},{"entry":["Min","UINT32, \u201c%u\u201d","Card supplies min such that 0 <= min <="]},{"entry":[{},"e.g. min=0","2- 1, and min <= max."]},{"entry":["Max","UINT32, \u201c%u\u201d","Card supplies max such that 0 <= max <="]},{"entry":[{},"e.g. max=360","2- 1, and min <= max."]},{"entry":["large-step","UINT32, \u201c%u\u201d","Card supplies large-step x such that x > 0,"]},{"entry":[{},"e.g. large-","and x <= (max-min). Peripherals use x to"]},{"entry":[{},"step=30","adjust a value up or down in large"]},{"entry":[{},{},"increments. Peripherals add x to the value"]},{"entry":[{},{},"to step up or subtract x from the value to"]},{"entry":[{},{},"step down. When the max or min is"]},{"entry":[{},{},"reached or exceeded, the peripheral"]},{"entry":[{},{},"determines how to wrap to a new value that"]},{"entry":[{},{},"still meets the criteria min <= value <="]},{"entry":[{},{},"max. The default is large-step = 10 for all"]},{"entry":[{},{},"applicable data types except when using the"]},{"entry":[{},{},"uint32 type with hex format, for which the"]},{"entry":[{},{},"default is large-step = 0 \u00d7 10 (16 decimal),"]},{"entry":[{},{},"and the real32 type, for which the default is"]},{"entry":[{},{},"large-step = 10.0."]},{"entry":["Wrap","UINT32, \u201c%u\u201d","Card supplies wrap flag such that 1 = yes to"]},{"entry":[{},"e.g. wrap=0","include wrap numeric values, and 0 = no to"]},{"entry":[{},"e.g. wrap=1","not wrap numeric values then either min or"]},{"entry":[{},{},"max has been reached. The default is wrap"]},{"entry":[{},{},"= 0 (do not wrap). Peripherals may choose"]},{"entry":[{},{},"to ignore this option."]},{"entry":["format","UINT32, \u201c%u\u201d","Card supplies format as dec for decimal or"]},{"entry":[{},"e.g.","hex for hexadecimal. The format"]},{"entry":[{},"format=dec","determines how to capture numbers from"]},{"entry":[{},"e.g.","the user and how to display numbers to the"]},{"entry":[{},"format=hex","user. The default is format = dec (decimal"]},{"entry":[{},{},"format). This option is only supported for"]},{"entry":[{},{},"alphanumeric enhanced and alphanumeric"]},{"entry":[{},{},"flex menus."]},{"entry":["percent","UINT32, \u201c%u\u201d","Card supplies percent flag such that 1 = yes"]},{"entry":[{},"e.g. percent=0","to include a percent symbol, and 0 = no to"]},{"entry":[{},{},"omit a percent symbol. The percent symbol"]},{"entry":[{},{},"is ASCII code 37 (\u201c%\u201d). This flag does not"]},{"entry":[{},{},"apply to the hex format type. The default is"]},{"entry":[{},{},"percent = 0 (no percent symbol)."]},{"entry":[{},{},"Peripherals may choose to ignore this"]},{"entry":[{},{},"option."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The peripheral will set the value of the unsigned integer by sending an IIO Command, CMD_MENU_DATA, with the modifier, MOD_SET_ITEM, with a DDE string that contains the id of the element to be set and its value.",{"@attributes":{"id":"p-0054","num":"0062"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DDE string","id=<hex number>, value=<unsigned"]},{"entry":[{},"sent by the","number>"]},{"entry":[{},"peripheral"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{},"b":"32"},"Signed integers are useful for negative numbers.",{"@attributes":{"id":"p-0056","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Data type and",{}]},{"entry":["Keyword","printf format","Range and comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["value","SINT32, \u201c%d\u201d","Card supplies value such that -2<= value"]},{"entry":[{},"e.g. value=\u22125","<= 2- 1, and min <= value <= max. For"]},{"entry":[{},{},"negative values the peripheral must display"]},{"entry":[{},{},"the value with a minus sign. For values"]},{"entry":[{},{},"greater than 100, the peripheral determines"]},{"entry":[{},{},"whether and how to display the radix"]},{"entry":[{},{},"depending on the current localization (e.g."]},{"entry":[{},{},"\u201c1000\u201d for neutral or \u201c1,000\u201d for U.S. or"]},{"entry":[{},{},"\u201c1.000\u201d for Europe)."]},{"entry":["min","SINT32, \u201c%d\u201d","Card supplies min such that -2<=min <="]},{"entry":[{},"e.g. min=\u221210","2- 1, and min <= max."]},{"entry":["max","SINT32, \u201c%d\u201d","Card supplies max such that -2<=max"]},{"entry":[{},"e.g. max=+10","<= 2- 1, and min <= max."]},{"entry":["large-step","UINT32, \u201c%d\u201d","[ See uint32 type ]"]},{"entry":[{},"e.g. large-"]},{"entry":[{},"step=10"]},{"entry":["sign","UINT32, \u201c%d\u201d","Card supplies sign flag such that 1 = yes to"]},{"entry":[{},"e.g. sign=1","include a sign symbol, and 0 = no to omit a"]},{"entry":[{},{},"sign symbol. The sign symbol is ASCII"]},{"entry":[{},{},"code 43 (\u201c+\u201d) for positive sign and ASCII"]},{"entry":[{},{},"code 45 (\u201c\u2212\u201d) for negative sign. Regardless"]},{"entry":[{},{},"of sign specification, the peripheral must"]},{"entry":[{},{},"always display the negative sign symbol"]},{"entry":[{},{},"when the value being displayed is less than"]},{"entry":[{},{},"zero. So the significance of this sign"]},{"entry":[{},{},"specification is whether to display the"]},{"entry":[{},{},"positive sign symbol when the value is"]},{"entry":[{},{},"strictly positive. When the card supplies"]},{"entry":[{},{},"value=0 with sign=1, the peripheral does"]},{"entry":[{},{},"not display the positive sign symbol. The"]},{"entry":[{},{},"default is sign = 0 (no sign symbol)."]},{"entry":[{},{},"Peripherals may choose to ignore this"]},{"entry":[{},{},"option."]},{"entry":["percent","UINT32, \u201c%d\u201d","[ See uint32 type ]"]},{"entry":[{},"e.g. percent=0"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The peripheral will set the value of the signed integer by sending an IIO command CMD_MENU_DATA, with the modifier, MOD_SET_ITEM, with a DDE string that contains the id of the element to be set and its value.",{"@attributes":{"id":"p-0058","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DDE string sent","id=<hex number>, value=<signed number>"]},{"entry":[{},"by the"]},{"entry":[{},"peripheral"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"IP addresses are useful for identifying nodes, stations, hosts, devices, etc., on a network or on the Internet.",{"@attributes":{"id":"p-0060","num":"0068"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Data type and",{}]},{"entry":["Keyword","printf format","Range and comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["value","UCHAR (\u00d7 4)","Card supplies text containing all four octets"]},{"entry":[{},"\u201c%u.%u.%u.%","of the IP address, and each octet is an"]},{"entry":[{},"u\u201d","unsigned 8-bit number. Network byte order"]},{"entry":[{},"e.g.","is not an issue here because the card and"]},{"entry":[{},"value=","peripheral exchange strings that depict the"]},{"entry":[{},"15.8.26.163","order of the octets. All combinations are"]},{"entry":[{},"value=","allowed upon data entry. The card verifies"]},{"entry":[{},"015.008.026.1","each entry for validity. So, the peripheral"]},{"entry":[{},"63","must allow the user to enter \u201c0.0.0.0\u201d for an"]},{"entry":[{},{},"IP address. The peripheral must then give"]},{"entry":[{},{},"that over to the card. The card decides"]},{"entry":[{},{},"whether the entry is valid for the menu item"]},{"entry":[{},{},"at hand. The ipaddr type is useful for any"]},{"entry":[{},{},"address that resembles its format: IP"]},{"entry":[{},{},"address, subnet mask, etc."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The peripheral will set the value of the ip address by sending an IIO command, CMD_MENU_DATA, with the modifier, MOD_SET_ELEMENT, with a DDE string that contains the id of the element to be set and its value in unsigned dot notation.",{"@attributes":{"id":"p-0062","num":"0070"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DDE string sent","id=<hex number>, value=<ip address in"]},{"entry":[{},"by the","unsigned dot notation>"]},{"entry":[{},"peripheral"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Selections are useful for showing the user the options relevant for the menu item at hand. The user selects the best answer from that set of relevant options. Typically peripherals will \u201clookup\u201d the strings for all the possible index values between the mm and the max and present these strings as choices to the user.",{"@attributes":{"id":"p-0064","num":"0072"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Data type and",{}]},{"entry":["Keyword","printf format","Range and comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["value","PUCHAR,","Card supplies text as a quotized string of"]},{"entry":[{},"\u201c%s\u201d","localized text. This text corresponds to the"]},{"entry":[{},{},"string that is represented by the current"]},{"entry":[{},{},"index."]},{"entry":["index","UCHAR,","The numeric index that corresponds to the"]},{"entry":[{},"\u201c%d\u201d","currently selected value. This value must be"]},{"entry":[{},{},"a positive integer in the range between the"]},{"entry":[{},{},"min and the max listed below."]},{"entry":["min","UCHAR,","The minimum value that the index value"]},{"entry":[{},"\u201c%d\u201d","can take. This must be a positive number"]},{"entry":[{},{},"greater or equal to zero."]},{"entry":["max","UCHAR,","The maximum value that the index value"]},{"entry":[{},"\u201c%d\u201d","can take. This must be a positive number"]},{"entry":[{},{},"greater or equal to zero."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The peripheral will query the value strings for the selections with the IIO command MOD_LOOKUP_SELECTION, with a DDE string that contains the id of the selection element and the index value to query.",{"@attributes":{"id":"p-0066","num":"0074"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DDE string sent","id=<hex number>, index=<selection>"]},{"entry":[{},"by the"]},{"entry":[{},"peripheral"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The peripheral will set the value selections by sending an IIO command, MOD_SET_SELECTION, with a DDE string that contains the id of the selection element to be set and the index value.",{"@attributes":{"id":"p-0068","num":"0076"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DDE string sent","id=<hex number>, index=<selection>"]},{"entry":[{},"by the"]},{"entry":[{},"peripheral"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{},"b":"32"},"Real numbers are useful for statistics, thresholds, set points, offsets, or any numbers that map to physical space rather than logical space. They are also useful for currency. This DDE string type is only available with alphanumeric enhanced and alphanumeric flex menus.",{"@attributes":{"id":"p-0070","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Data type and",{}]},{"entry":["Keyword","printf format","Range and comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["value","FLOAT32,","Card supplies the value of the real number"]},{"entry":[")","\u201c%f\u201d","such that its absolute value is within"]},{"entry":[{},{},"range:"]},{"entry":[{},"e.g."]},{"entry":[{},"value=92.5","0.0001 <= abs (value) <="]},{"entry":[{},{},"100000.0"]},{"entry":[{},{},"The maximum integer part of the real"]},{"entry":[{},{},"number is one hundred thousand. The"]},{"entry":[{},{},"maximum fractional part of the real num-"]},{"entry":[{},{},"ber is one ten thousandth (1\/10,000),"]},{"entry":[{},{},"which is 4 decimal places. Peripherals"]},{"entry":[{},{},"only have to support 6 digits for the"]},{"entry":[{},{},"integer part, 1 character for the radix, 4"]},{"entry":[{},{},"digits for the fractional part, and 1"]},{"entry":[{},{},"character for a sign (+\/\u2212) symbol. So the"]},{"entry":[{},{},"maximum character length for a real"]},{"entry":[{},{},"number is 12 characters. When interfacing"]},{"entry":[{},{},"with the user, the peripheral must display"]},{"entry":[{},{},"the lower radix according to the current"]},{"entry":[{},{},"localization (e.g. \u201c92.5\u201d or \u201c92,5\u201d). The"]},{"entry":[{},{},"peripheral may include or omit the upper"]},{"entry":[{},{},"radix from the display. If included in the"]},{"entry":[{},{},"display, the upper radix must be localized"]},{"entry":[{},{},"(e.g. \u201c1,092.5\u201d or \u201c1.092,5\u201d)."]},{"entry":[{},{},"When peripheral and card exchange"]},{"entry":[{},{},"strings, all real numbers in the float32"]},{"entry":[{},{},"DDE string must in fixed-point format"]},{"entry":[{},{},"(not scientific or exponential format)."]},{"entry":[{},{},"They must include a period for the lower"]},{"entry":[{},{},"radix and they must omit the upper radix."]},{"entry":[{},{},"Keywords and numeric values in DDE"]},{"entry":[{},{},"strings are not localized."]},{"entry":["min","FLOAT32, \u201c%f\u201d","Card supplies min such that:"]},{"entry":[{},"e.g."]},{"entry":[{},"min=0.0"]},{"entry":[{},{},"\u2212100000.0 <= min <= value <="]},{"entry":[{},{},"max"]},{"entry":["max","FLOAT32,","Card supplies max such that:"]},{"entry":[{},"\u201c%f\u201d"]},{"entry":[{},"e.g.","min <= value <= max <="]},{"entry":[{},"max=100.0","+100000.0"]},{"entry":["precision","UINT32, \u201c%d\u201d","Card supplies precision such that 1 <="]},{"entry":[{},"e.g.","precision <= 4 to indicate the number of"]},{"entry":[{},"precision=1","decimal places to display to the user. The"]},{"entry":[{},"precision=2","peripheral must always show the specified"]},{"entry":[{},{},"number of decimal places, even if the"]},{"entry":[{},{},"fractional part of the real number is zero"]},{"entry":[{},{},"(e.g. 76.0). Precision must be consistent"]},{"entry":[{},{},"with value, min, max, single-step, and"]},{"entry":[{},{},"large-step attributes. So, if single-"]},{"entry":[{},{},"step=0.25 then precision must be greater"]},{"entry":[{},{},"than or equal to 2. Precision of 0 is not"]},{"entry":[{},{},"allowed - use the sint32 type for numbers"]},{"entry":[{},{},"that have zero precision. The precision"]},{"entry":[{},{},"attribute is required in all float32 DDE"]},{"entry":[{},{},"strings."]},{"entry":["single-step","FLOAT32,","Card supplies single-step for the"]},{"entry":[{},"\u201c%f\u201d","incremental resolution of the number. This"]},{"entry":[{},"e.g.","is used to indicate how far to increment"]},{"entry":[{},"single-","and decrement in single steps. The default"]},{"entry":[{},"step=0.1","is single-step=0.1 (one tenth)."]},{"entry":[{},"single-"]},{"entry":[{},"step=0.25"]},{"entry":[{},"single-"]},{"entry":[{},"step=1.0"]},{"entry":["large-step","FLOAT32,","[See uint32 type]"]},{"entry":[{},"\u201c%f\u201d"]},{"entry":[{},"e.g."]},{"entry":[{},"large-step="]},{"entry":[{},"0000.5000"]},{"entry":["sign","UINT32, \u201c%d\u201d","[See signed integer type -- sint32 type ]"]},{"entry":[{},"e.g. sign=0"]},{"entry":["percent","UINT32, \u201c%d\u201d","[See uint32 type]"]},{"entry":[{},"e.g. percent=1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The peripheral will set the value of the real number by sending an IIO Command, MOD_SET_ELEMENT, with a DDE string that contains the id of the element to be set and the value of the real number.",{"@attributes":{"id":"p-0072","num":"0080"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DDE string sent","id=<hex number>, value=<real number>"]},{"entry":[{},"by the"]},{"entry":[{},"peripheral"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"User text is useful for capturing names, personal identification numbers, passwords, web addresses, e-mail addresses, and so on, from the user. The user text allowed is limited by the text class or by the filter. This string type is only available with alphanumeric enhanced and alphanumeric flex menus.",{"@attributes":{"id":"p-0074","num":"0082"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Data type and",{}]},{"entry":["Keyword","printf format","Range and comments"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["value","PUCHAR,","Card supplies text as a quotized string of"]},{"entry":[{},"\u201c%s\u201d","localized text."]},{"entry":["max-","UCHAR,","Card supplies max-length of 0 to 255. The"]},{"entry":["length","\u201c%d\u201d","length does not include the null terminator."]},{"entry":[{},{},"This is the maximum number of characters"]},{"entry":[{},{},"that the card will accept as input for user"]},{"entry":[{},{},"text."]},{"entry":["allow","PUCHAR,","Card supplies allow keyword to instruct the"]},{"entry":[{},"\u201c%s\u201d","peripheral to allow only specific characters"]},{"entry":[{},"Examples:","upon data entry; not compatible with class"]},{"entry":[{},"allow=\u201c0-9a-","keyword or deny keyword. If no allow"]},{"entry":[{},"zA-Z\u201d","keyword is specified, no special restrictions"]},{"entry":[{},"allow==\u201c-+a-","are placed on user text. The filter is limited"]},{"entry":[{},"z{circumflex over (\u2009)}%$\u201d","to ASCII values in the range 1-127 (\\001 to"]},{"entry":[{},{},"\\177 octal) that are printable. The default is"]},{"entry":[{},{},"that only printable characters are"]},{"entry":[{},{},"automatically allowed."]},{"entry":["deny","PUCHAR,","Card supplies deny keyword to instruct the"]},{"entry":[{},"\u201c%s\u201d","peripheral to deny only specific characters"]},{"entry":[{},"Examples:","upon data entry; not compatible with class"]},{"entry":[{},"deny=\u201c0-9a-","keyword or allow keyword. If no deny"]},{"entry":[{},"zA-Z\u201d","keyword is specified, no special restrictions"]},{"entry":[{},"deny=\u201c-+a-","are placed on user text. The filter is limited"]},{"entry":[{},"z{circumflex over (\u2009)}%$\u201d","to ASCII values in the range 1-127 (\\001 to"]},{"entry":[{},{},"\\177 octal) that are printable. The default is"]},{"entry":[{},{},"that all non-printable characters are"]},{"entry":[{},{},"automatically denied."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The peripheral will set the value of the user strings by sending an IIO command MOD_SET_ELEMENT, with a DDE string that contains the id of the element to be set and the value string.",{"@attributes":{"id":"p-0076","num":"0084"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DDE string sent","id=<hex number>, value=\u201c<localized"]},{"entry":[{},"by the","text>\u201d"]},{"entry":[{},"peripheral"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIGS. 2A and 2B"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 6","FIG. 4"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 7A","b":["7","7","7","7","7","7","7"]}]},"DETDESC":[{},{}]}
