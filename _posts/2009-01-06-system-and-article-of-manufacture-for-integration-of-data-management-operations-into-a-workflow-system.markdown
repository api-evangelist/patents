---
title: System and article of manufacture for integration of data management operations into a workflow system
abstract: Techniques are provided for processing a workflow. A workflow including one or more data management activities is received. A workflow description is generated from the workflow that includes a description of the one or more data management activities. One or more data management operations are generated from the workflow description. The one or more data management operations are executed against one or more data management systems.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07890922&OS=07890922&RS=07890922
owner: International Business Machines Corporation
number: 07890922
owner_city: Armonk
owner_country: US
publication_date: 20090106
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","ADDITIONAL EMBODIMENT DETAILS"],"p":["This application is a continuation of and claims the benefit of \u201cINTEGRATION OF DATA MANAGEMENT OPERATIONS INTO A WORKFLOW SYSTEM\u201d, having application Ser. No. 11\/070,529, filed Mar. 1, 2005, the entire contents of which is incorporated herein by reference.","1. Field","Embodiments of the invention relate to integration of data management operations into a workflow system.","2. Description of the Related Art","Workflow management systems (WFMSs) support the modeling and execution of business processes and may also be referred to as \u201cworkflow systems\u201d. Business processes specify which piece of work of a network of pieces of work is carried out in which sequence and which resources are exploited to carry out the pieces of work. Individual pieces of work may be distributed across a multitude of different computer systems connected by some type of network.","A powerful and sophisticated workflow management system, such as the product IBM\u00ae MQSeries\u00ae Workflow (available from International Business Machines Corporation) supports the modeling of business processes as a network of activities. This network of activities, the process model, is constructed using a directed, acyclic, weighted, colored graph as a meta model. The nodes of the graph represent the activities, which define individual tasks that are to be carried out. Any other meta model, such as a hierarchical meta model, may be used for constructing process models. In general, each of the activities is associated with a piece of code that implements the appropriate task for that activity. The edges of the graph, the control links, describe a potential sequence of execution of the activities. Control links are represented as arrows; the head of the arrow describes the direction in which the flow of control is moving through the process.","The activity where the control link starts is called the source activity and the activity where the control link ends is called the target activity. An activity may be source and target activities for different control links. Activities that have no incoming control link are called start activities, as they start the process. Activities that have no outgoing control link are called end activities, as after their completion the process has ended. An activity may be a start activity as well as an end activity. An activity that has multiple outgoing control links is called a fork activity; an activity with multiple control links is called a join activity.","Different workflow languages are available, and Business Process Execution Language (BPEL) is one such workflow language. BPEL may be described as an XML-based language that allows task-sharing for a distributed computing environment using a combination of Web services. The term \u201cBPEL\u201d is sometimes also used to refer to other versions of the language, such as, Business Process Execution Language for Web Services (BPEL4WS) or BPELWS. BPEL may also be described as a standard for describing and choreographing business process activities. WebSphere\u00ae Business Integration (WBI) products (available from International Business Machines Corporation) provide an implementation for designing and executing BPEL based business processes. A component of WBI is named WebSphere\u00ae Process Choreographer (WPC) workflow system.","The term Web is used to refer to the World Wide Web, which may be described as a group of Internet servers that support documents formatted in HyperText Markup Language (HTML). A Web service (also referred to as an \u201capplication service\u201d) may be described as a service made available from a Web server that is typically invoked by a program connected to the Web.","BPEL4WS defines a notation for specifying business process behavior based on Web services. (Business Process Execution Language for Web Services Specification, Version 1.1, dated May 5, 2003, hereinafter \u201cBPEL4WS specification\u201d) The BPEL4WS specification indicates that business processes may be described as executable business processes that model actual behavior of a participant in a business interaction or as business protocols that use process descriptions that specify mutually visible message exchange behavior of each of the parties involved in the protocol, without revealing their internal behavior.","According to the BPEL4WS specification, BPEL4WS provides a language for the formal specification of business processes and business interaction protocols and defines an interoperable integration model that facilitates the expansion of automated process integration in both the intra-corporate and the business-to-business spaces. Also, the BPEL4WS specification defines activities that are supported.","Access to a data management system from within a workflow system is unnecessarily complex in conventional workflow systems. Conventional workflow systems offer one or both of the following approaches:","1. A data management operation has to be coded in a traditional programming language, for example, by writing some Java\u00ae code and exploiting Application Programming Interfaces (APIs) offered by the data management system.","2. The data management operation has to be provided via a Web service.","The WPC workflow system, for example, supports both approaches. The WPC workflow system allows implementing process activities via Java\u00ae code and allows using Web services as process activities.","When using the first approach, a WPC user has to code a Java\u00ae activity. The user has to have Java\u00ae development knowledge in addition to knowledge about Structured Query Language (SQL) and the Java\u00ae Database Connectivity (JDBC) API that allows the user to issue SQL statements from within a Java\u00ae environment. The SQL statement itself fits into a single line of code. However, issuing the SQL statement (a type of \u201cquery\u201d) via JDBC, getting an input parameter out of a WPC workflow system variable, feeding the input parameter into the query, and writing the result of the query into a WPC workflow system variable requires a large amount of code to be written and a large amount of time to perform the coding.","When using the second approach, a WPC workflow system user has to code the SQL statement and wrap the SQL statement into a Web service. Many steps and different products may be necessary to achieve this. Independent of how the user constructed the Web service, two additional activities (\u201cassign\u201d activities) may also need to be added to the business process to provide the Web service with the input needed and to deal with the results.","Both approaches are cumbersome to users, though accessing a data management system is a typical activity for a business process.","Moreover, workflows, such as those represented by BPEL, express a sequence of processing activities. Most commonly, these activities operate over a single record of data at a time. However, in an increasing number of scenarios, it is preferable to operate over sets of records (also referred to as \u201csets\u201d), rather than one record at a time. This pattern is similar to an Extract Transform Load (ETL) pattern used in Data Warehousing applications to process data. With ETL, a set of records is retrieved (\u201cextracted\u201d) from a database, processed (\u201ctransformed\u201d), and loaded into a database.","Thus, it is useful to use a workflow engine to intermix some set-oriented operations with the record-oriented operations. Most often, these set activities are really processing of information from one or more data sources (e.g., relational databases). For instance, an activity may retrieve or update information from one or more data sources as part of a database query. In conventional workflow systems, to perform a sequence of such activities, the workflow engine normally has to materialize the full set of data (i.e., retrieve all of the information from the one or more data sources) and then pass this set of data to another activity by copying the data, which performs its processing and passes the set of data to yet another activity, etc. Thus, the full set of data is copied and passed between data activities. Passing large sets by copy is not acceptable for performance reasons because it is in-efficient and is difficult to develop.","Conventional business process runtime systems have some weaknesses with respect to designing and executing data management operations. For example, conventional business process runtime systems assume a static environment, where the sets (e.g., tables) that the data management activities should go against are already known before running the business process (i.e., they are either specified at design or at deployment time).","Although for some applications, it is acceptable to assume a static data management environment, such an assumption may not be applicable for dynamic, on-demand application scenarios, where choosing the data of interest may depend on, for example, Service Level Agreements. In an on-demand application scenario, there may be data management environments in which data is stored redundantly in several places with different Quality of Service characteristics. The on-demand application may need to choose a different data source for different users, depending on the Service Level Agreements as contracted with the respective user. Choosing a data source may, for example, depend on access time, availability and\/or staleness characteristics of the respective data sources.","Thus, many on demand applications would benefit from a workflow system that directly enables postponing the decisions about which data sources to use at runtime.","Therefore, there is a need in the art for integrating data management operations with a workflow system.","Provided are a method, article of manufacture, and system for processing a workflow. A workflow including one or more data management activities is received. A workflow description is generated from the workflow that includes a description of the one or more data management activities. One or more data management operations are generated from the workflow description. The one or more data management operations are executed against one or more data management systems.","In the following description, reference is made to the accompanying drawings which form a part hereof and which illustrate several embodiments. It is understood that other embodiments may be utilized and structural and operational changes may be made without departing from the scope of the invention.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 1","FIG. 3"],"b":["100","110","120","310","120","122","130","130","140","150","150","130","150","152","130","160","160","160","160","160","160"],"i":["a ","n ","a ","n","a ","n "]},"The term activity refers to \u201cnodes\u201d of a workflow (e.g. CheckltemInStock  of ), while the term \u201coperation\u201d refers to statements that are executed against a data management system . . . (i.e., the statements in which input parameters and input set references have been replaced by corresponding values). The execution of an activity may involve several operations.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 2","b":["200","120","160","160"],"i":["a ","n "]},"The data management activities may operate on sets, and to enable this, embodiments provide set references with life cycle attributes. Thus, a data management activity may include a set reference with life cycle attributes. A set reference may be described as an indicator (e.g., pointer) to a set of data that resides in a data management system (rather than in a business process). The set reference contains information needed to access the data management system and to manage the corresponding set. By using set references, embodiments avoid passing large sets of information between activities. Also, embodiments provide life cycle management support for sets by allowing users to select life cycle attributes that determine, for example, how long a set may be available for use and when the set is to be discarded.","The data management activities include, for example, Structured Query Language (SQL) activities, materialization activities, and system command activities. Examples of the SQL activities include: select, select into, call, insert, update, delete, merge, values, values into, and Data Definition Language (DDL) operations. The DDL operations include, for example, create, alter, drop, refresh, revoke, grant, and set. The materialization activities make the content of a set reference available to the workflow system (e.g., as XML documents). Examples of system command activities include: start data management system, stop data management system, backup, restore, reorganize, and runstats.","Additionally, embodiments provide an extensibility mechanism that allows users to add new activity types. Also, each activity type may map to one or more operations of a data management system. For example, a new activity may be \u201cLoad data from remote system\u201d, and execution of this new activity results in several operations executed at a data management system (e.g., several create operations followed by a select operation).","Moreover, embodiments allow business process variables to be used as input and\/or output parameters for the data management activities. Business process variables may be described as workflow language variables (e.g., BPEL variables).","Furthermore, embodiments allow data source definitions that enable selection of a data source at run time.","Existing workflow languages do not include such data management operations, set references, or life cycle management for set references. Moreover, existing workflow languages do not provide the expanded use of business process variables as parameters for activities, as provided by embodiments (i.e., existing workflow languages often have restrictions for using business process variables (e.g., a Web service activity in BPEL can only have a single variable as input and a single variable as output). Also existing workflow languages do not enable data source selection at runtime.","By providing new data management activities and enabling creation of additional activities, embodiments integrate data management operations into a workflow system, such that the data management operations are easily invoked and enable sharing of information in the form of sets between data management systems and the workflow system.","Moreover, by extending a workflow language to include data management activities and providing set references that reference sets of data without requiring the data to be materialized, embodiments enable mixing of record oriented and set oriented activities within a single workflow. Also, embodiments enable data management activities to be specified \u201cinline\u201d as part of a workflow description (e.g., as SQL statements within the workflow description).","Returning to , in block , the workflow description editor  automatically generates a workflow description from the workflow. The workflow description includes a description of the one or more data management activities. If selected, the workflow description also includes a description of any set references and their life cycle attributes, business process variables used as input and\/or output parameters, and data source definitions.","In block , the workflow runtime system  automatically generates one or more data management operations (e.g., one or more SQL queries) from the workflow description. In block , the workflow runtime system  executes the one or more data management operations against the one or more data management systems . . . . In certain embodiments, an activity is submitted against a single data management system . . . , while different data management operations may be executed against different data management systems . . . depending on the data source definition(s) attached to the activity. In block , the results of the query are returned to the workflow runtime system .","Merely to enhance understanding of the invention, examples herein may refer to the integration of SQL operations into a BPEL based workflow system. In certain embodiments, SQL operations are integrated into a WebSphere\u00ae Process Choreographer (WPC) workflow system.","The techniques of embodiments may be extended to cover other types of data management operations and other types of sets and data management systems (e.g., XML database systems and content management systems). Also, the techniques may be extended to XQuery (which is an Extensible Markup Language (XML) query language) and collections of XML documents stored in an XML database system and to content access and manipulation operations and sets of documents stored in a document management system. With respect to the workflow system, the techniques of embodiments may be extended to other service oriented workflow systems not based on BPEL. That is, the techniques of embodiments may be used with any workflow language (e.g., Forms Definition Markup Language (FDML) or XLANG (a specification from Microsoft Corporation)).",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 3","FIG. 3"],"b":["120","310","310","320","310","310"]},"Pane  illustrates a SQL statement that is built using the workflow design time system  that allows a user to directly specify a SQL statement, which is part of the workflow description . The ItemCount and itemid links point to input\/output parameters, respectively, which are linked to business process variables. The ItemTable link points to an input set reference. When a user selects (e.g., clicks on) these links, a wizard is provided by embodiments of the workflow design time system  to update the parameters or the set references, respectively. New parameters and set references may be created by selecting the \u201cnew\u201d button . That is, new parameters and set references (e.g., input or output set references) may be mapped to business process variables (e.g., BPEL variables and\/or properties). Also, the variable=DataSource part=myDataSource statement indicates that the data source for the SQL statement is identified by the \u201cmyDataSource\u201d part of the business process variable \u201cDataSource\u201d.","To specify a particular data source to be used by the \u201cCheckltemInStock\u201d data management activity , a user selects the \u201cCheckltemInStock\u201d data management activity  and selects a \u201cdefine data source button\u201d, which results in a Data Source Definition Wizard  being displayed (). A user may then provide a data source type  (e.g., by specifying a mapping to a business process variable or to a part of a business process variable ). The user may alternatively provide inline a data source definition. Thus, a data source for an SQL activity may be specified by mapping the data source to a business process variable (e.g., a BPEL variable) or to part of a business process variable (e.g., a part of a BPEL variable).","Also, embodiments enable mapping of input set references to business process variables (e.g., BPEL variables) or to parts of business process variables (e.g., a parts of BPEL variables).  illustrates an Add or Edit An InputSetReference screen , in accordance with certain embodiments, which enables the mapping to a business process variable and part . To specify an input set reference and life cycle attributes to be used by the \u201cCheckltemInStock\u201d data management activity , a user selects the \u201cCheckltemInStock\u201d data management activity  and selects the \u201cnew\u201d button , which results in display of the Add or Edit an InputSetReference screen . In the set Add or Edit an InputSetReference screen , a user identifies a business process variable and part  and identifies life cycle attributes, such as whether cleanup  is required and at which point in time the cleanup should be performed.","The \u201cCheckltemInStock\u201d data management activity is specified using inline SQL in a workflow description. The following sample Pseudocode A illustrates the workflow description for \u201cCheckltemInStock\u201d data management activity.",{"@attributes":{"id":"p-0059","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Pseudocode A"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<invoke name=\u201cCheckItemInStock\u201d operation=\u201cnull\u201d partnerLink=\u201cnull\u201d"},{"entry":"portType=\u201cwpc:null\u201d wpc:displayName=\u201cCheckItemInStock\u201d"},{"entry":"wpc:id=\u201c6\u201d>"},{"entry":"\u2003\u2003<dataManagementActivity xsi:type=\u201ctDataManagementActivity\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<statement xsi:type=\u201ctSqlStatement\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<dataSource part=\u201cmyDataSource\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003variable=\u201cDataSource\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<body>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003SELECT count(*) INTO"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<parameter kind=\u201cout\u201d property=\u201cmyint\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003variable=\u201cItemCount\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003FROM"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<setReference cleanup=\u201cno\u201d part=\u201cmySetReference\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003preparation=\u201cno\u201d variable=\u201cSetReference\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003WHERE itemid ="},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<parameter kind=\u201cin\u201d property=\u201citemid\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003variable=\u201cInputVariable\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/body>"},{"entry":"\u2003\u2003\u2003\u2003<\/statement>"},{"entry":"\u2003\u2003<\/dataManagementActivity>"},{"entry":"\u2003\u2003<sources>"},{"entry":"\u2003\u2003\u2003\u2003<source linkName=\u201cLink1\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<transitionCondition"},{"entry":"expressionLanguage=\u201chttp:\/\/www.ibm.com\/xmlns\/prod\/Websphere\/"},{"entry":"business-process\/expression-lang\/java\/v6.0\/\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<![CDATA[return ItemCount.get(\u201cmyint\u201d) == 0;]]>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/transitionCondition>"},{"entry":"\u2003\u2003\u2003\u2003<\/source>"},{"entry":"\u2003\u2003<\/sources>"},{"entry":"<\/invoke>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In Pseudocode A, the data management activity statement element (\u201cdataManagementActivity\u201d) contains a data source definition element (\u201cdataSource\u201d) and a body element (\u201cbody\u201d).","The data source definition element refers to a BPEL variable (\u201cmyDataSource\u201d) containing the actual data source definition.","The SQL defined in the body element of the statement is executed against the data source identified by the data source definition element. In particular, the body element defines a SQL \u201cSELECT INTO\u201d statement. The SQL tokens are mixed with setReference and parameter elements. The setReference element refers to the BPEL variable \u201cSetReference\u201d containing the set reference definition that is used to determine the actual database table. The input parameter refers to the BPEL variable \u201cInputVariable\u201d containing the itemid to be used in the where clause of the SQL statement. The result of the statement is stored in variable \u201cItemCount\u201d as defined by an output parameter. Moreover, the set reference has life cycle options of cleanup=\u201cno\u201d and preparation=\u201cno\u201d, which indicates that no preparation is needed to use the set reference and the corresponding set is not deleted. The transition condition of \u201cItemCount.get(\u201cmyint\u201d)==0\u201d checks if the Web service needs to be called by checking the result of the \u201cCheckltemInStock\u201d data management activity.","The workflow runtime system  generates a data management operation (e.g., a SQL query) from Pseudocode A, which may then be executed against the data management systems . . . . The data management operation that is generated for execution depends on the values for any input parameters and input set references.","In particular, executing the \u201cCheckltemInStock\u201d activity in the workflow runtime system  includes the data management operation support component  receiving the workflow description of this activity, as well as, the context of the process. The context includes the BPEL variables and properties. The data management operation support component  first checks for input parameters and for input set reference variables and obtains the corresponding values out of the BPEL variables specified. For example, the item id is extracted from the BPEL variable \u201cInputVariable\u201d. In this example, assume that the value of the integer is 135. The name of the table used in the select query is extracted from the part \u201cmySetReference\u201d of the BPEL variable \u201cSetReference\u201d. In this example, assume that the name of the table is \u201cITEMS\u201d.","The data management operation support component  determines the data source the query should be executed against. In this example, the data source is specified by the contents of the part \u201cmyDataSource\u201d of the BPEL variable \u201cDataSource\u201d. For this example, assume that the value is the jndi name \u201cjdbc\/sample\u201d. The data management operation support component  creates a connection with the data source \u201cjdbc\/sample\u201d and executes an SQL statement in which input parameters and input set references are replaced by the values extracted from the BPEL variables. The following is an example query that is generated:",{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"SELECT COUNT(*) INTO :OUTPUTPARAMETER1 FROM \u201cITEMS\u201d"},{"entry":"WHERE ITEMID = 135"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The data management operation support component  writes the value of \u201cOUTPUTPARAMETER1\u201d into the BPEL variable \u201cItemCount\u201d.","For ease of understanding, another example of executing the first statement of the \u201cGetEuropeanOrders\u201d activity in the workflow runtime system  that is simplified is provided. In this example, the data management operation support component  in the workflow runtime system  receives the description of the activity as well as the context of the process. This context includes the BPEL variables and properties.","The data management operation support component  first checks for input parameters and for input set variables. In this example, there is an input set reference. The name of the table used in the select query is extracted from the part \u201cmySetReference\u201d of the BPEL variable \u201cSetReference_OrdersEurope\u201d. For this example, assume that the name of the table is \u201cINPUT.EUROPEANORDERS\u201d.","The data management operation support component  determines the data source the query should be executed against. In this example, the data source is specified by the contents of the part \u201cmyDataSource\u201d of the BPEL variable \u201cDataSourceVariable\u201d. For this example, assume that the value is the jndi name \u201cjdbc\/sample\u201d. The data management operation support component  creates a connection with the data source \u201cjdbc\/sample\u201d and executes the SQL statement:",{"@attributes":{"id":"p-0071","num":"0070"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SELECT OID, CID, TYPE, TOTPRICE, DATE FROM"]},{"entry":[{},"\u201cINPUT.EUROPEANORDERS\u201d WHERE ITEMID = 135"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"There is a result set reference specified. Thus, the data management operation support component  writes the result of this query into the table specified by the part \u201cmySetReference\u201d of variable \u201cResultSetReference_Europe\u201d. A life cycle management option is specified for this table. The table is to be deleted from the data management system at the end of the life time of the current process. The data management operation support component  stores this information persistently. At the end of the execution of the process the data management operation support component  is called by the workflow runtime system  to perform cleanup work.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIGS. 6A","b":["6","6","600","610","620","610","600","610","620"]},{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 7","FIG. 7","FIG. 7"],"b":["120","710","710","720","722","724","726"]},"The following sample Pseudocode B illustrates the workflow description for the GetEuropeanOrders data management activity . The GetEuropeanOrders data management activity  loads European data into a set reference stored in a BPEL variable ResultSetReference_Europe (statement ), and then performs a currency conversion from Euro to Dollar (statement ). The conversion is done via an SQL UPDATE statement. The set reference BPEL variable ResultSetReference_Europe is taken as an input set reference for the conversion statement.",{"@attributes":{"id":"p-0076","num":"0075"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Pseudocode B"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<invoke name=\u201cGetEuropeanOrders\u201d operation=\u201cnull\u201d partnerLink=\u201cnull\u201d"},{"entry":"portType=\u201cwpc:null\u201d wpc:displayName=\u201cGetEuropeanOrders\u201d"},{"entry":"wpc:id=\u201c7\u201d>"},{"entry":"\u2003\u2003<dataManagementActivity xsi:type=\u201ctDataManagementActivity\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<statement xsi:type=\u201ctSqlStatement\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<dataSource variable=\u201cDataSourceVariable\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003part=\u201cmyDataSource\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<resultSetReference"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003variable=\u201cResultSetReference_Europe\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002part=\u201cmySetReference\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002preparation=\u201cifNeeded\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002cleanup=\u201cyes\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002cleanupScope=\u201cinstance\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<body>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003SELECT OID, CID, TYPE, TOTPRICE,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003DATE FROM"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<setReference variable=\u201cSetReference_OrdersEurope\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002part=\u201cmySetReference\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002preparation=\u201cno\u201d cleanup=\u201cno\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/body>"},{"entry":"\u2003\u2003\u2003\u2003<\/statement>"},{"entry":"\u2003\u2003\u2003\u2003<statement xsi:type=\u201ctSqlStatement\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<dataSource part=\u201cmyDataSource\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003variable=\u201cDataSourceVariable\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<body>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003UPDATE"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<setReference variable=\u201cResultSetReference_Europe\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002part=\u201cmySetReference\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002preparation=\u201cno\u201d cleanup=\u201cno\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003SET TOTPRICE ="},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003BO.EURO_TO_DOLLAR(TOTPRICE)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/body>"},{"entry":"\u2003\u2003\u2003\u2003<\/statement>"},{"entry":"\u2003\u2003<\/dataManagementActivity>"},{"entry":"\u2003\u2003<sources>"},{"entry":"\u2003\u2003\u2003\u2003<source linkName=\u201cLink1\u201d \/>"},{"entry":"\u2003\u2003<\/sources>"},{"entry":"<\/invoke>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The following sample Pseudocode C illustrates the workflow description for the GetUSOrders data management activity . The GetUSOrders data management activity  loads US data into a set reference stored in BPEL variable ResultSetReference_US. The life cycle attributes of this result set reference are set in such a way that the underlying database table is only created if it does not exist (preparation=\u201cif Needed\u201d), the table will be deleted (cleanup=\u201cyes\u201d), and the deletion of the table is done at process instance end (cleanupScope=\u201cinstance\u201d).",{"@attributes":{"id":"p-0078","num":"0077"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Pseudocode C"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<invoke name=\u201cGetUSOrders\u201d operation=\u201cnull\u201d partnerLink=\u201cnull\u201d"},{"entry":"portType=\u201cwpc:null\u201d wpc:displayName=\u201cGetUSOrders\u201d wpc:id=\u201c8\u201d>"},{"entry":"\u2003\u2003<dataManagementActivity xsi:type=\u201ctDataManagementActivity\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<statement xsi:type=\u201ctSqlStatement\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<dataSource part=\u201cmyDataSource\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003variable=\u201cDataSourceVariable\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<resultSetReference variable=\u201cResultSetReference_US\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002part=\u201cmySetReference\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002preparation=\u201cifNeeded\u201d cleanup=\u201cyes\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002cleanupScope=\u201cinstance\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<body>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003SELECT OID, CID, TYPE, TOTPRICE,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003DATE FROM"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<setReference variable=\u201cSetReference_OrdersUS\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002part=\u201cmySetReference\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002preparation=\u201cno\u201d cleanup=\u201cno\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/body>"},{"entry":"\u2003\u2003\u2003\u2003<\/statement>"},{"entry":"\u2003\u2003<\/dataManagementActivity>"},{"entry":"\u2003\u2003<sources>"},{"entry":"\u2003\u2003\u2003\u2003<source linkName=\u201cLink2\u201d \/>"},{"entry":"\u2003\u2003<\/sources>"},{"entry":"<\/invoke>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The following sample Pseudocode D illustrates the workflow description for the UnionOrders data management activity . The UnionOrders data management activity  represents the union of US and converted European orders. The resulting set of data is stored as a set reference in the BPEL variable ResultSetReference_Union.",{"@attributes":{"id":"p-0080","num":"0079"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Pseudocode D"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<invoke name=\u201cUnionOrders\u201d operation=\u201cnull\u201d"},{"entry":"partnerLink=\u201cnull\u201d portType=\u201cwpc:null\u201d"},{"entry":"wpc:displayName=\u201cUnionOrders\u201d wpc:id=\u201c9\u201d>"},{"entry":"\u2003\u2003<dataManagementActivity xsi:type=\u201ctDataManagementActivity\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<statement xsi:type=\u201ctSqlStatement\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<dataSource part=\u201cmyDataSource\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003variable=\u201cDataSourceVariable\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<resultSetReference cleanup=\u201cno\u201d part=\u201cmySetReference\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002preparation=\u201cifNeeded\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002variable=\u201cResultSetReference_Union\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<body>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003SELECT OID, CID, TYPE, TOTPRICE,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003DATE FROM"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<setReference variable=\u201cResultSetReference_Europe\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002part=\u201cmySetReference\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002preparation=\u201cno\u201d cleanup=\u201cno\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003UNION ALL SELECT OID, CID, TYPE, TOTPRICE,"},{"entry":"DATE FROM"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<setReference cleanup=\u201cno\u201d part=\u201cmySetReference\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002preparation=\u201cno\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2002variable=\u201cResultSetReference_US\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/body>"},{"entry":"\u2003\u2003\u2003\u2003<\/statement>"},{"entry":"\u2003\u2003<\/dataManagementActivity>"},{"entry":"\u2003\u2003<targets>"},{"entry":"\u2003\u2003\u2003\u2003<target linkName=\u201cLink1\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003<target linkName=\u201cLink2\u201d \/>"},{"entry":"\u2003\u2003<\/targets>"},{"entry":"\u2003\u2003<sources>"},{"entry":"\u2003\u2003\u2003\u2003<source linkName=\u201cLink3\u201d \/>"},{"entry":"\u2003\u2003<\/sources>"},{"entry":"<\/invoke>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The following sample Pseudocode E illustrates the workflow description for the MaterializeOrders data management activity . The MaterializeOrders data management activity  materializes the contents of the unified order table into the process context. In the <from> element of the statement, the source of the data for the materialization is specified and the <to> element represents the materialization target. That is, the contents of set reference ResultSetReference_Union will be materialized into the BPEL variable MaterializedOrders, part myMaterializationResult.",{"@attributes":{"id":"p-0082","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Pseudocode E"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<invoke name=\u201cMaterializeOrders\u201d operation=\u201cnull\u201d partnerLink=\u201cnull\u201d"},{"entry":"portType=\u201cwpc:null\u201d wpc:displayName=\u201cMaterializeOrders\u201d"},{"entry":"wpc:id=\u201c10\u201d>"},{"entry":"\u2003\u2003<dataManagementActivity xsi:type=\u201ctDataManagementActivity\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<statement xsi:type=\u201ctMaterializationStatement\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<from part=\u201cmySetReference\u201d"},{"entry":"\u2003\u2003\u2003\u2003variable=\u201cResultSetReference_Union\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<to part=\u201cmyMaterializationResult\u201d"},{"entry":"\u2003\u2003\u2003\u2002variable=\u201cMaterializedOrders\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003<\/statement>"},{"entry":"\u2003\u2003<\/dataManagementActivity>"},{"entry":"\u2003\u2003<targets>"},{"entry":"\u2003\u2003\u2003\u2003<target linkName=\u201cLink3\u201d \/>"},{"entry":"\u2003\u2003<\/targets>"},{"entry":"<\/invoke>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"A result set reference is specified as part of the specification of the data management activity that creates the result set. To specify a result set reference, a user selects a create result set reference button,  which results in a result set references definition wizard  being displayed ().  corresponds to the result set reference used in the \u201cGetEuropeanOrders\u201d activity  (). In the result set references definition wizard , the \u201cattribute\u201d section of this panel can be used to define life cycle management options. For example, a user identifies life cycle attributes , such as whether cleanup  is required and at which point in time the cleanup should be performed. In this example, the result set will be cleaned up at the end of the process (i.e., at the end of the \u201cinstance\u201d).","The user also provides the definition  of the result set reference, e.g. by providing a data source, and the identification of an existing table to hold the result or by specifying that the result set should be generated by the data management operation support component. In this example, a data source, schema name and table name are explicitly specified.",{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIGS. 9A","b":["9","9","9","9","900","910","920","930","940","810","900","910","920","930","940"]},"Thus, for integration of data management operations into a workflow system, the data management operations are integrated as first class citizens into workflow systems for business processes. Embodiments offer the following characteristics with respect to data management operations:","1. New data management activities that consist of a declarative description of data management operations.","2. A mechanism to directly specify business process variables as input parameters for these operations.","3. A mechanism to directly specify how results of these operations are stored in business process variables.","4. A mechanism to specify a data source to be used during runtime.","5. A mechanism to define set references with life cycle attributes.","Embodiments remove the problems with the conventional approaches, such as reducing the skill set needed to implement data management activities and reducing the development time needed to do so.","An integrated system is achieved by supporting data management operations as first class citizens at three different levels: at the design time system tool , within the workflow language (used for the workflow description ), and at the workflow runtime system . The workflow design time system  is enhanced by support for specific data management activities. The workflow language is enhanced by a mechanism to specify data management activities \u201cinline\u201d as part of a workflow description, including the ability to directly use process variables as input and output parameters for activities.","The workflow runtime system  receives a workflow description . The workflow runtime system  is enhanced by a data management operation support component  that is able to execute the data management operations defined in the workflow description , including support for set references and life cycle management for the corresponding sets. The data management operation support component  accesses one or more data management systems . . . to execute the data management operations specified.","Another example is provided to enhance understanding of embodiments of the invention. In particular, in this example, information about orders is stored in a relational database system, and a business process checks a total amount of orders from a certain region. In this example, the region is an input parameter to the business process (i.e., a business process input variable). The database management operation is a SELECT query. The result of the query is stored in a variable, so that the result may be used by follow-on activities.","Embodiments provide inline SQL for workflow languages for business processes (e.g., BPEL). In case of the WPC workflow system and of SQL support, integration as a first class citizen into the workflow runtime system  means that the workflow runtime system  directly supports SQL code. Inline SQL statements allow a declarative description of data management activities (called \u201cSQL snippets\u201d or \u201cDMAs\u201d, which are similar to \u201cJava\u00ae snippets\u201d) to be included in the workflow description .","Example pseudocode for a SQL activity for a WPC workflow runtime system is shown as Pseudocode F. The text of \u201cselect count(*) into\u201d, \u201cfrom ORDERS\u201d, and \u201cwhere REGION=\u201d of Pseudocode F shows how the SQL query is specified. The elements <dataSource variable=\u201cDMA_Data_Source\u201d part=\u201cdataSource\u201d\/> specify a data source to be used. The elements <parameter kind=\u201cout\u201d property=\u201cNB_EXCEPTIONAL_ORDERS\u201d variable=\u201cParameter\u201d\/> specify an output parameter.","The elements <parameter kind=\u201cin\u201d property=\u201cMAX PRICE\u201d variable=\u201cParameter\u201d\/> specify an input parameter. Thus, business process variables may be input and output parameters and a data source may be specified via a business process variable.",{"@attributes":{"id":"p-0099","num":"0098"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Pseudocode F"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"]},{"entry":[{},"<wpc:dataManagementActivity [...]>"]},{"entry":[{},"<dataSource variable=\u201cDMA_Data_Source\u201d part=\u201cdataSource\u201d\/>"]},{"entry":[{},"<dmaStatement xsi:type=\u201cwpc:DMAStatementType\u201d>"]},{"entry":[{},"\u2003<operation type=\u201cquery\u201d xsi:type=\u201cwpc:OperationType\u201d>"]},{"entry":[{},"\u2003\u2003select count(*) into"]},{"entry":[{},"\u2003\u2003\u2003<parameter kind=\u201cout\u201d"]},{"entry":[{},"property=\u201cNB_EXCEPTIONAL_ORDERS\u201d"]},{"entry":[{},"variable=\u201cParameter\u201d \/>"]},{"entry":[{},"\u2003\u2003from ORDERS"]},{"entry":[{},"\u2003\u2003where REGION ="]},{"entry":[{},"\u2003\u2003\u2003<parameter kind=\u201cin\u201d property=\u201cMAX_PRICE\u201d"]},{"entry":[{},"\u2003\u2003\u2003variable=\u201cParameter\u201d \/>"]},{"entry":[{},"<\/operation>"]},{"entry":[{},"<\/dmaStatement>"]},{"entry":[{},"<\/wpc:dataManagementActivity>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The integrated system is able to understand both the semantics of the business process itself (e.g., how activities relate to each other) as well as the semantics of data management activities within this business process.","Embodiments provide a workflow system that supports a concept of set references that overcome the deficiencies of conventional workflow systems.","A set reference may be described as pointer to a set of data. For example, a set reference may be a table name and additional information for locating the set of data. The set reference may include, for example, information on how to access the set; meta information about the set; and set properties, such as statements to create and delete the set. A set reference may be bound to a business process variable, and may be used as input and output sets for statements. A set reference enables passing sets between activities by forwarding the set reference rather than by copying the set of data. For example, a first data management activity may create a set reference, and a second data management activity may use the set reference. The set reference supports a dynamic infrastructure (e.g., source and target sets may be changed at business process runtime).","In certain embodiments, a set reference points to a set that is accessible via a single data management system . . . (e.g., a table or a view in a relational database system). The data management system . . . may be a federated system that is able to work with sets where the corresponding records reside in different data management systems . . . ","The following pseudocode provides an example of a set reference being defined as Pseudocode G. Pseudocode G uses resultSetReference part=\u201creference\u201d variable=\u201cSelectedEmployeesSetReferenceVariable\u201d\/and setReference part=\u201creference\u201d variable=\u201cAllEmployeesSetReferenceVariable\u201d\/to define set references.",{"@attributes":{"id":"p-0105","num":"0104"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Pseudocode G"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"..."]},{"entry":[{},"<resultSetReference part=\u201creference\u201d"]},{"entry":[{},"variable=\u201cSelectedEmployeesSetReferenceVariable\u201d\/>"]},{"entry":[{},"select empno,firstnme,lastname,phoneno,sex"]},{"entry":[{},"from <setReference part=\u201creference\u201d"]},{"entry":[{},"variable=\u201cAllEmployeesSetReferenceVariable\u201d\/>"]},{"entry":[{},"where lastname like"]},{"entry":[{},"\u2003\u2003\u2018<parameter kind=\u201cin\u201d property=\u201cnamePrefix\u201d"]},{"entry":[{},"\u2003\u2003variable=\u201cInputVariable\u201d\/>\u2019"]},{"entry":[{},"..."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"A set reference may point to an existing set, as well as, represent the result of a data management activity that has not yet been executed. In the latter case, a set reference may contain meta information instructing the data management activity about the characteristics the set should obey.","Support for set references include the following workflow system capabilities:","1. Set references are supported by the workflow tools and the APIs of the workflow system. Users may directly specify and modify set references (an example of first class citizen support).","2. Set references may be specified and modified at various points in time including at design time of a business process, at deployment time of a business process, or at business process runtime.","3. Set references may be directly used as input and output parameters for data management activities.","As an example, a set reference may represent a table or a view in a relational database system. The address information contains the information needed to access the set of data (e.g., the specification of the data source (e.g., a JNDI name), a schema and a table name, and a description of how to authenticate (e.g., with the credentials of the current user who is running the business process)). The metadata information in the set reference describes the columns of the table or view.","The set reference support allows binding an existing table in a certain data source to a set reference \u201cS\u201d via a business process activity. This activity may, for example, be a registry lookup operation. S may then be used in the FROM clause of a subsequent SQL SELECT activity (i.e., S may be used as a set-valued input parameter). The result of this SQL SELECT statement may be bound to a second set reference \u201cS\u201d that again may be used in subsequent data management activities.","Set-oriented processing may be performed using a workflow language while loop over a set of objects representing rows of a table where a lookup in some data source is performed to enrich the data, a Web service is called to check for certain characteristics, and an update is performed based on this characteristics. Also, a single set-oriented SQL update operation may be provided. The set-oriented processing avoids materialization of large sets and reduces the number of accesses to the data source.","Embodiments provide life cycle management for sets created by a business process. It may be a frequent task for users to create sets for using them in certain business process activities and to drop sets as soon as they are no longer needed. Therefore, embodiments provide life cycle management extensions for set references that simplify the creation and deletion of sets. The extensions include a mechanism that creates a set automatically at a certain point in time, including at business process deployment time, at business process creation time, when a certain scope within a business process starts, or when a certain activity within a business process starts.","The extensions also include a mechanism that drops a set that has been created by the business process automatically at a certain point in time, including at the end of the activity that created the set, at the end of the scope in which the set was created, at the end of the business process, or at undeployment time. The creation and dropping may also be user managed (i.e., the set may survive the business process).","The following pseudocode provides an example of use of the life cycle management extensions as Pseudocode H. In Pseudocode H, cleanup=\u201cyes\u201d cleanupScope=\u201cprocess\u201d preparation=\u201cyes\u201d indicate that a set is to be dropped when the business process ends and that a new set is automatically created by the data management operation support component  each time the activity that contains Pseudocode H is executed.",{"@attributes":{"id":"p-0117","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Pseudocode H"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"..."]},{"entry":[{},"<resultSetReference cleanup=\u201cyes\u201d cleanupScope=\u201cprocess\u201d"]},{"entry":[{},"preparation=\u201cyes\u201d part=\u201creference\u201d"]},{"entry":[{},"variable=\u201cSelectedEmployeesSetReferenceVariable\u201d\/>"]},{"entry":[{},"select empno,firstnme,lastname,phoneno,sex"]},{"entry":[{},"from <setReference part=\u201creference\u201d"]},{"entry":[{},"variable=\u201cAllEmployeesSetReferenceVariable\u201d\/>"]},{"entry":[{},"where lastname like \u2018<parameter kind=\u201cin\u201d property=\u201cnamePrefix\u201d"]},{"entry":[{},"variable=\u201cInputVariable\u201d\/>\u2019"]},{"entry":[{},"..."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Embodiments enable integration of data operations into a workflow and enable optimization of a workflow containing data operations. Embodiments may be used with ETL and business process integration.","IBM, MQSeries, Websphere and DB2 are registered trademarks and\/or common law marks of International Business Machines Corporation in the United States and\/or foreign countries. Java is a registered trademark and\/or common law mark of Sun Microsystems in the United States and\/or foreign countries. Oracle is a registered trademark and\/or common law mark of Oracle Corporation in the United States and\/or foreign countries. Excel is a registered trademark and\/or common law mark of Microsoft Corporation in the United States and\/or foreign countries.","The described embodiments may be implemented as a method, apparatus or article of manufacture using programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof. The term \u201carticle of manufacture\u201d and \u201ccircuitry\u201d as used herein refers to a state machine, code or logic implemented in hardware logic (e.g., an integrated circuit chip, Programmable Gate Array (PGA), Application Specific Integrated Circuit (ASIC), etc.) or a computer readable medium, such as magnetic storage medium (e.g., hard disk drives, floppy disks, tape, etc.), optical storage (CD-ROMs, optical disks, etc.), volatile and non-volatile memory devices (e.g., EEPROMs, ROMs, PROMs, RAMs, DRAMs, SRAMs, firmware, programmable logic, etc.). Code in the computer readable medium is accessed and executed by a processor. When the code or logic is executed by a processor, the circuitry may include the medium including the code or logic as well as the processor that executes the code loaded from the medium. The code in which preferred embodiments are implemented may further be accessible through a transmission media or from a file server over a network. In such cases, the article of manufacture in which the code is implemented may comprise a transmission media, such as a network transmission line, wireless transmission media, signals propagating through space, radio waves, infrared signals, etc. Thus, the \u201carticle of manufacture\u201d may comprise the medium in which the code is embodied. Additionally, the \u201carticle of manufacture\u201d may comprise a combination of hardware and software components in which the code is embodied, processed, and executed. Of course, those skilled in the art will recognize that many modifications may be made to this configuration, and that the article of manufacture may comprise any information bearing medium known in the art. Additionally, the devices, adapters, etc., may be implemented in one or more integrated circuits on the adapter or on the motherboard.","Certain embodiments may be directed to a method for deploying computing infrastructure by a person or automated processing integrating computer-readable code into a computing system, wherein the code in combination with the computing system is enabled to perform the operations of the described embodiments.","The term logic may include, by way of example, software or hardware and\/or combinations of software and hardware.","The logic of  describes specific operations occurring in a particular order. In alternative embodiments, certain of the logic operations may be performed in a different order, modified or removed. Moreover, operations may be added to the above described logic and still conform to the described embodiments. Further, operations described herein may occur sequentially or certain operations may be processed in parallel, or operations described as performed by a single process may be performed by distributed processes.","The illustrated logic of  may be implemented in software, hardware, programmable and non-programmable gate array logic or in some combination of hardware, software, or gate array logic.",{"@attributes":{"id":"p-0125","num":"0124"},"figref":"FIG. 10","b":["1000","100","140","1000","1000","1002","1004","1010","1005","1004","1010","1006","1010","1004","1002","1008","1012","1002","1014","1002","1000"]},"The computer architecture  may comprise any computing device known in the art, such as a mainframe, server, personal computer, workstation, laptop, handheld computer, telephony device, network appliance, virtualization device, storage controller, etc. Any processor  and operating system  known in the art may be used.","The foregoing description of embodiments has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the embodiments to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the embodiments be limited not by this detailed description, but rather by the claims appended hereto. The above specification, examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Since many embodiments can be made without departing from the spirit and scope of the invention, the embodiments reside in the claims hereinafter appended or any subsequently-filed claims, and their equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIGS. 6A","b":["6","6"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIGS. 9A","b":["9","9","9","9"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
