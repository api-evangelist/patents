---
title: Telephony system with intelligent endpoints or intelligent switches to reduce dependency of endpoints on application server
abstract: A system and a method are disclosed for reducing interaction between a server and an endpoint while executing features on an endpoint. The endpoint, and not the application server, includes part or all of the implementation of UI logic and feature logic. The endpoint therefore does not have to rely on server's instructions for executing a feature. The endpoint also includes an endpoint determination module for determining the parts of the UI logic and feature logic implemented on the endpoint and the parts implemented on a switch or a server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09008076&OS=09008076&RS=09008076
owner: ShoreTel, Inc.
number: 09008076
owner_city: Sunnyvale
owner_country: US
publication_date: 20090331
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","System Overview","Configuration with Most or all of Feature Logic and UI Logic Located at Endpoint","Configuration with Feature Logic and UI Logic Located Partly at Endpoint and Partly at Switch","Configuration with Feature Logic and UI Logic Located Partly at Endpoint and Partly at Server","Configuration with Feature Logic and UI Logic Located Partly at Endpoint, Partly at Switch and Partly at Server","Configuration with Most of all of Feature Logic and UI Logic Located at Switch","Configuration with Feature Logic and UI Logic Located Partly at Switch and Partly at Server"],"p":["1. Field of the Invention","The present invention generally relates to Voice over Internet Protocol (VoIP) telephony systems, and more specifically, to a telephony system with distributed user interface logic and feature logic.","2. Description of the Background Art","The prior art includes a variety of distributed telephony systems. Traditional switched network systems have given way to new telephony systems that use VoIP on packet-switched networks. These VoIP systems offer the same functionality as traditional switched system such as the ability to transfer calls, put calls on hold, automated attendant functions, hunt groups, etc.","Traditionally, the VoIP phones were driven by logic and data located on a server. For example, in response to each key press on the VoIP phone, the prior art server sends an updated representation of the display or a \u201cno-op\u201d message indicating that the phone's display do not need to change in response to the key press. The prior art server therefore is actively involved in every step of the execution of feature logic and UI logic on the phone. Because of the server's active involvement in execution of application features, a momentary network glitch disrupting the connection between the server and the phone is more likely to cause a noticeable interruption of service.","Additionally, in network configurations where the phones connect to the server through a switch, a network glitch between the server and the switch affects the connections of all the phones being served by the server through the switch.","Moreover, the server's active involvement in execution of application features consumes bandwidth between the server and the switch, and the bandwidth between the switch and the phones, when the messages are passed back and forth between the server and the phones through the switch. This consumption of bandwidth limits the number of phones that can be managed by a particular server or a switch. Also, the server's active involvement in the execution of the application introduces latency into the system; in some environments, users may notice the amount of time it takes to make a round trip to the server with each key press event.","The present invention comprises an endpoint, switch or a server with an intelligent telephony module. The intelligent telephony module determines the entity in the telephony system that performs part or most of the logic for a requested application feature and communicates with that entity to perform the requested application feature.","The intelligent telephony module comprises a determination module and a communication module. The determination module determines the entities that perform part or most the feature logic and user interface (\u201cUI\u201d) logic. The determination module, through the communication module, communicates with the determined entities and requests the determined entities to perform the requested feature.","In one embodiment, the intelligent telephony module also comprises feature logic module that comprises part or most of the instructions for achieving the end result of a requested feature. In another embodiment, the intelligent telephony module also comprises a UI logic module that comprises part or most of the instructions for rendering data or other objects of an application on the endpoint.","In one embodiment, the feature logic modules present in multiple entities comprise complementary instructions for achieving the end result of the requested feature. For example, the feature logic module on an endpoint can work in tandem with a feature logic module on a switch or a server. Similarly, a feature logic module on a switch can work in tandem with a server or an endpoint. In another embodiment, the UI logic modules present in multiple entities comprise complementary instructions for rendering requested data or another object of the application on the endpoint. For example, the UI logic module on a server can work in tandem with a UI logic module on a switch or a server.","The features and advantages described herein are not all-inclusive and many additional features and advantages will be apparent to one of ordinary skill in the art in view of the figures and description. Moreover, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and not to limit the scope of the inventive subject matter.","A system and method for reducing interaction between a server and an endpoint while executing features on an endpoint is described. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the invention. It will be apparent, however, to one skilled in the art that the invention can be practiced without these specific details. In other instances, structures and devices are shown in block diagram form in order to avoid obscuring the invention. For example, the present invention is described in one embodiment below with reference to system operation and particular hardware. However, the present invention applies to any type of computing device that can receive a data and commands, and any peripheral devices providing services.","Reference in the specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure or characteristic described in connection with the embodiment is included in at least one embodiment of the invention. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment.","Some portions of the detailed descriptions that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers or the like.","Some embodiments may be described using the expression \u201ccoupled\u201d and \u201cconnected\u201d along with their derivatives. It should be understood that these terms are not intended as synonyms for each other. For example, some embodiments may be described using the term \u201cconnected\u201d to indicate that two or more elements are in direct physical or electrical contact with each other. In another example, some embodiments may be described using the term \u201ccoupled\u201d to indicate that two or more elements are in direct physical or electrical contact. The term \u201ccoupled,\u201d however, may also mean that two or more elements are not in direct contact with each other, but yet still co-operate or interact with each other. The embodiments are not limited in this context.","It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as \u201cprocessing\u201d or \u201ccomputing\u201d or \u201ccalculating\u201d or \u201cdetermining\u201d or \u201cdisplaying\u201d or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.","The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs and magnetic optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, or any type of media suitable for storing electronic instructions, each coupled to a computer system bus.","Finally, the algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general-purpose systems may be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition, the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 1","FIG. 2A-2F"],"b":["200","200","234","200","234","232","250","251"],"i":["a","b "]},"Endpoints - in these embodiments become less dependent on server  and therefore are less affected by network glitches between server  and endpoints - because endpoints - or switches -include part of feature logic or UI logic. Additionally, the reduced dependence of endpoints - on server  reduces bandwidth and processing consumption and allows server  and switches -to manage more endpoints than prior art server and prior art switches. Additionally, the reduced dependence of endpoints - on server  reduces sensitivity to network latency which improves performance of the endpoints - in the perception of the user.","The illustrated embodiment of telephony system  includes a first site A and a second site B communicatively coupled to each other through network . As used herein, a site represents a grouping of resources. One skilled in the art will note that sites A, B can be physically distinct from each other or merely topology-related groupings that are not in physically distinct locations. Additionally, the telephony system  architecture can be expanded to numerous sites and is not limited to only two sites.","The first site A includes a server , a switch , and three endpoints (analog phone , IP phone and software phone ). The switch represents a Voice over Internet Protocol (VoIP) device to which a number of endpoints can be coupled, such as analog phones , IP phones and software phones (softphones) . Switch includes intelligent switch telephony module . The intelligent switch telephony module comprises modules that enables switch to reduce dependence of endpoint ,  on server . The intelligent module is described in greater detail in .","Switch is coupled to the network . The switch is also coupled to the public switched telephone network (PSTN) trunk  via an analog or digital trunk line (e.g., a T1 or E1 interface) or a SIP trunk service provider. In the illustrated configuration, the switch provides an interface for calls originating from or terminating on the PSTN or SIP trunk . Although only a single switch is shown in , those skilled in the art will recognize that a particular site such as the first site A may include a plurality of switches.","An endpoint enables a user to carry on a phone call. Although in the illustrated embodiment the first site has three endpoints (one analog phone , one IP phone and one softphone ), in other embodiments the first site A has different numbers and types of endpoints. Examples of endpoints include a video conferencing device, a multipoint control unit (MCU), a conference bridge, an analog terminal adapter (ATA), and any other device that originates and\/or terminates a media stream. An endpoint is coupled to the switch , server , or both. Each of the endpoints can also include a display device (not shown) that is used in conjunction with the phone of the endpoint.","In one embodiment, an endpoint has a user interface to send data to and receive data from a user. The analog phone  has, for example, a Telephone User Interface (TUI) that sends data through a speaker and receives data through a microphone and a keypad. The IP phone has, for example, both a TUI and a graphical user interface (GUI) that sends data through a display device associated with the IP phone . In one embodiment, the IP phone's graphical user interface also receives data from a touch screen display device associated with the IP phone ","Additionally, the IP phone comprises intelligent endpoint telephony module . The intelligent endpoint telephony module comprises modules that enables IP phone to reduce its dependence on server . The intelligent endpoint telephony module is described in greater detail in .","Softphone  has, for example, a software application running on a computer that emulates a phone and sends data through a display device and a speaker and receives data through a microphone, a keyboard and a pointing device. The softphone  comprises intelligent softphone telephony module  that enables softphone  to reduce its dependence on server . The intelligent softphone telephony module  is similar to intelligent endpoint telephony module and described in greater detail in .","Server  is configured to implement features or functions of the telephony system  and applications made available to the end user. Server  is coupled to network  and although not shown can also be coupled to one or more endpoints, such as IP phone and softphone . Server  includes a processor. The processor can be a conventional processing device, such as a general-purpose microprocessor. Server  also includes a memory. The memory includes program instructions or functional units that in one embodiment partly implement features of the telephony system and one or more applications. Specifically, the memory includes a telephony management software (TMS) unit and a telephony application programming interface (TAPI) unit.","An application unit uses the TAPI unit to exchange data with the TMS unit. The TMS unit is able to communicate with and manage one or more switches . For example, with reference to , the TMS unit included in the server  can manage switches -. Through the TAPI unit, the TMS unit presents an application with computer-telephony integration (CTI) view of these switches -. This allows the application to manage switches -. Such switches -operate in a degraded but nonetheless useful fashion without an associated TMS unit. Server  has a user interface to send data to and receive data from a user. The user interface interacts with TMS in order to allow a user with administrative rights to manage switches -and change the configuration settings of switches -. The user can access the user interface at the server or at an endpoint (e.g., soft phone).","Additionally, server  comprises intelligent server telephony module . The intelligent server telephony module  comprises modules that enable endpoints -,  to reduce their dependence on server . The intelligent server telephony module  is described in greater detail in .","One skilled in the art will appreciate that additional networking devices (not shown) can be added to the first site , for example, if needed to support additional endpoints -, servers , switches  or other systems. For example, the first site can include a second switch and an edge router to couple the first site to the network  and to provide local area connectivity for the first and second switches -. One skilled in the art will also recognize that numerous configurations of switches  and communications links are contemplated. For example, PSTN links can be coupled to multiple switches  at several points within the topology and soft-switches can also be used.","The second site similarly includes an endpoint (IP phone ) and a switch . The configuration of the second site demonstrates that a server is not required for each site. Switch of the second site can be managed by server  that is illustrated in the first site . A call can involve more than one switch. For example, a call that originates from the PSTN or SIP trunk  and terminates on an endpoint that is communicatively coupled to switch of the second site involves two switches: switch of the first site and switch of the second site . In addition, each switch , can be managed by a different server .","In one embodiment, the network  is a partially public or a wholly public network such as the Internet. The network  can also be a private network or include one or more distinct or logical private networks (e.g., virtual private networks or wide area networks). Additionally, the communication links to and from the network  can be wire line or wireless (i.e., terrestrial- or satellite-based transceivers). In one embodiment, the network  is an IP-based wide or metropolitan area network.","The description below of embodiments in  describes one or more entities that individually or collectively implement the feature logic and UI logic for application features. The embodiments are described mostly with reference to application feature of displaying contact list. One of ordinary skill in the art will understand that contact list is one example of many application features like retrieving email when a user accesses her inbox, initializing a personal greeter, retrieving voicemail messages, replying to voicemail messages, managing voicemail messages, viewing user account configuration settings, modifying user account configuration settings, viewing call history etc.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 2A","b":["210","220","230","240"],"i":["a","a ","a "]},"Intelligent endpoint telephony module comprises endpoint feature logic module , endpoint UI logic module , endpoint determination module , endpoint communication module and endpoint storage . All these modules are communicatively coupled to each other through a communication bus. The communication bus is any kind of bus capable of transmitting data between the entities connected to the bus. The endpoint communication module is also communicatively coupled to switch communication module in intelligent switch telephony module . In one embodiment, the endpoint communication module is also communicatively coupled to server communication module  in intelligent server telephony module .","The endpoint feature logic module is a hardware, firmware, software or a blended implementation that performs the functionality of at least one application feature like retrieving a contact list when a user requests her contact list, retrieving email when a user accesses her inbox, initializing a personal greeter, retrieving voicemail messages etc. In this embodiment, the endpoint feature logic module comprises the instructions for performing the requested feature without waiting for instructions from server  or switch ","Endpoint UI logic module is a hardware, firmware, software or a blended implementation that performs the functionality of providing user interface to a user. For example, the UI logic module can comprise instructions for displaying a menu on display screen of IP phone . In one embodiment, UI logic module can also comprise instructions for displaying the dialed number or requested user contacts. In another embodiment, UI logic module can also comprise instructions for playing an audio message requesting the user for an appropriate input or providing user with requested audio information.","The endpoint determination module is a hardware, firmware, software or a blended implementation that determines the entities in telephony system  that individually or collectively implement various telephony and application features. This determination can be made in a number of ways. In one embodiment, the endpoint determination module reads a configuration file placed in endpoint storage or other storage accessible to endpoint . The configuration file includes the information about features supported by endpoints, switches, and servers. The configuration file can also include information about features that are partly supported by endpoint, partly supported by switches, or partly supported by servers. In one embodiment, the configuration file also includes information regarding what part of the implementation is supported by a particular entity. In one embodiment, the above mentioned information is stored in another format on endpoint storage . In another embodiment, the above mentioned information is hardcoded into endpoint . In yet another embodiment, endpoint attains this information from switches -and\/or server  through a description protocol like Session Description Protocol or through a repeated update message sent by server  or switches -","The endpoint communication module is a hardware, firmware, software or a blended implementation that communicates with other entities in telephony system . For example, the endpoint communication module informs the determined entities about the user's input, exchanges other data, or receives instructions to take appropriate action in response to the user input.","The endpoint storage is volatile and\/or non-volatile storage that comprises data used by various user applications and telephony features. For example storage can store a user's contacts, emails, voicemail, preferences and phone configurations for various users.","The intelligent softphone telephony module  comprises softphone feature logic module , softphone UI logic module , softphone determination module , softphone communication module  and softphone storage . All these modules are communicatively coupled to each other through a communication bus. The communication bus is any kind of bus capable of transmitting data between the entities connected to the bus. The softphone communication module  is also communicatively coupled to switch communication module in intelligent switch telephony module . In one embodiment, the softphone communication module  is also communicatively coupled to server communication module  in intelligent server telephony module .","The modules in intelligent softphone telephony module  have similar functionality as corresponding modules in intelligent endpoint telephony module . The softphone modules, however, may have a different implementation as these modules reside in a software phone running on a computer whereas the modules in intelligent endpoint telephony module reside on hardware that is tailor-made for endpoint functionality.","The intelligent switch telephony module comprises of switch communication module and switch determination module . The switch communication module is communicatively coupled to switch determination module , endpoint communication module , softphone communication module  and server communication module .","The switch determination module is a hardware, firmware, software or a blended implementation that determines the entities in telephony system  that individually or collectively implement various telephony and application features. This determination can be made in a number of ways. In one embodiment, the switch determination module reads a configuration file placed in storage accessible to switch determination module . The configuration file includes the information about features supported by endpoints, switches, and servers. The configuration file can also include information about features that are partly supported by endpoint, partly supported by switches, or partly supported by servers. In one embodiment, the configuration file also includes information regarding what part of the implementation is supported by a particular entity. In one embodiment, the above mentioned information is stored in another format in storage on switch . In another embodiment, the above mentioned information is hardcoded into switch . In yet another embodiment, switch attains this information from endpoints ,  and\/or server  through a description protocol like Session Description Protocol or through a repeated update message sent by server  or endpoints , .","The switch communication module is a hardware, firmware, software or a blended implementation that communicates with other entities in telephony system . For example, the switch communication module informs the determined entities about the user's input, exchanges other data, or receives instructions to take appropriate action in response to the user input.","The intelligent server telephony module  comprises of server communication module  and server determination module . The server communication module  is communicatively coupled to server determination module  and switch communication module . In one embodiment, the server communication module  is also communicatively coupled to endpoint communication module and softphone communication module .","The server determination module  is a hardware, firmware, software or a blended implementation that determines the entities in telephony system  that individually or collectively implement various telephony and application features. This determination can be made in a number of ways. In one embodiment, the server determination module  reads a configuration file placed in storage accessible to server determination module . The configuration file includes the information about features supported by endpoints, switches, and servers. The configuration file can also include information about features that are partly supported by endpoint, partly supported by switches, or partly supported by servers. In one embodiment, the configuration file also includes information regarding what part of the implementation is supported by a particular entity. In one embodiment, the above mentioned information is stored in another format in storage on server . In another embodiment, the above mentioned information is hardcoded into server . In yet another embodiment, server  attains this information from endpoints ,  and\/or switches -through a description protocol like Session Description Protocol or through a repeated update message sent by switches -or endpoints , .","The server communication module  is a hardware, firmware, software or a blended implementation that communicates with other entities in telephony system . For example, the server communication module  informs the determined entities about the user's input, exchanges other data, or receives instructions to take appropriate action in response to the user input.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 2A","b":["250","251","250","251","232","234","232","234","266","276","232","234","250","251","232","234"],"i":["a","a","a ","a ","a","a ","a","a "]},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 2B","b":["210","220","230","240"],"i":["a","a ","a "]},"In this embodiment, the intelligent endpoint telephony module has similar modules as described in . Moreover, the endpoint determination module , endpoint communication module and endpoint storage have the same structure and functionality as described above.","The endpoint feature logic module is a hardware, firmware, software or a blended implementation that performs part of the functionality of at least one application feature like retrieving a contact list when a user requests her contact list, retrieving email when a user accesses her inbox, initializing a personal greeter, retrieving voicemail messages etc. The endpoint feature logic module in this embodiment works in tandem with switch feature logic module to perform a requested telephony or application feature.","For example, the endpoint feature logic module can have instructions for retrieving the first ten contacts for a user from endpoint storage . In the meantime, the endpoint feature logic module requests the rest of user's contacts from switch . The endpoint feature logic module therefore does not have the instructions to retrieve all of the user's contact and the endpoint feature logic module works in tandem with switch feature logic module to retrieve all of user's contacts.","In another example, the endpoint feature logic module can have instructions for retrieving the ten most recent call history entries from endpoint storage . Call history entries comprise information about incoming and outgoing calls like dialed number or number of the caller who called the endpoint -, an owner name associated with the number, time the call was initiated, duration of the call etc. The endpoint feature logic module , in this example, retrieves the first ten call history entries and then requests the rest of the call history entries from switch . The endpoint feature logic module also has instructions for retrieving the requested call history entries from switch when the endpoint has the ten most recent call history entries but the user has requested the call history entries sorted by the caller's name. Such entries would be present on switch but endpoint - may not have the first ten entries sorted by caller's name.","Endpoint UI logic module is a hardware, firmware, software or a blended implementation that performs part of the functionality of providing user interface to a user. For example, the UI logic module can comprise instructions for displaying the dialed digits on endpoint . The UI logic module, however, waits for instructions from switch UI logic module for displaying a name and additional information corresponding to the dialed number.","Again, the modules in intelligent softphone telephony module  have similar functionality as corresponding modules in intelligent endpoint telephony module . The softphone modules, however, may have a different implementation as these modules reside in a software phone running on a computer whereas the modules in intelligent endpoint telephony module reside on hardware that is tailor-made for endpoint functionality.","The intelligent switch telephony module comprises switch feature logic module , switch UI logic module , switch communication module , switch determination module and switch storage . All these modules are communicatively coupled to each other through a communication bus. The communication bus is any kind of bus capable of transmitting data between the entities connected to the bus. The switch communication module is also communicatively coupled to endpoint communication module in intelligent endpoint telephony module , softphone communication module  in intelligent softphone telephony module  and server communication module  in intelligent server telephony module . The structure and functionality of switch communication module and switch determination module are the same as described above.","Switch feature logic module is a hardware, firmware, software or a blended implementation that performs part of the functionality of at least one application feature like retrieving a contact list when a user requests her contact list, retrieving email when a user accesses her inbox, initializing a personal greeter, retrieving voicemail messages, replying to voicemail messages, managing voicemail messages, viewing configuration settings, modifying configuration settings, etc. In this embodiment, the switch feature logic module comprises instructions for performing the requested feature in tandem with intelligent endpoint telephony module ","For example, endpoint can have limited storage that can only store up to ten contacts or ten voicemail messages for a user and the rest of the contacts or voicemail messages are stored on switch . Accordingly, the endpoint intelligent telephony module can have instructions for retrieving the first ten contacts or the first ten voice messages for a user and switch feature logic module can have instructions for retrieving rest of the contacts or voicemail messages for a user.","Switch UI logic module is a hardware, firmware, software or a blended implementation that performs part of the functionality of providing user interface to a user. For example, the endpoint UI logic module can comprise instructions for displaying a dialed phone number and the switch UI module can have instructions for displaying an entity's name and email address next to the displayed phone number. In one embodiment, the switch UI logic module can also determine whether the dialed entity has authorized the system to display the entity's email address and name with the dialed phone number.","The switch storage is volatile and\/or non-volatile storage that comprises data used by various user applications and telephony features performed by the switch. For example storage can store a user's contacts, dial tone and various other tones played on the phone and phone configurations for various user.","The intelligent server telephony module  has been described above.",{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 2B","b":["250","251","232","250","251","234","234","232","250","251"],"i":["a","a ","a","a ","a"]},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 2C","b":["210","220","230","240"],"i":["a","a ","a "]},"In this embodiment, the intelligent endpoint telephony module has same modules with same structure and functionality as described in  except that the endpoint feature logic module and endpoint UI logic module work in tandem with server feature logic module  and server UI logic module , instead of switch feature logic module and switch UI logic module , to perform a requested telephony or application feature.","The intelligent switch telephony module comprises switch communication module and switch determination module . These modules have the same structure and functionality as described above.","Intelligent server telephony module  comprises server feature logic module , server UI logic module , server determination module , server communication module  and server storage . All these modules are communicatively coupled to each other through a communication bus. The communication bus is any kind of bus capable of transmitting data between the entities connected to the bus. The server communication module  is also communicatively coupled to switch communication module in intelligent switch telephony module . In one embodiment, the server communication module  is also communicatively coupled to endpoint communication module and softphone communication module . The structure and functionality of server communication module  and server determination module  are described above.","Server feature logic module  is a hardware, firmware, software or a blended implementation that performs part of the functionality of at least one application feature like retrieving a contact list when a user requests her contact list, retrieving email when a user accesses her inbox, initializing a personal greeter, retrieving voicemail messages etc. In this embodiment, the server feature logic module  comprises instructions for performing the requested feature in tandem with intelligent endpoint telephony module ","For example, the endpoint intelligent telephony module can have instructions for retrieving the first ten contacts for a user and server feature logic module  can have instructions for retrieving rest of the contacts for a user.","In another example, the endpoint intelligent telephony module can have instructions for retrieving a first block of user account configuration data and server feature logic module  can have instructions for retrieving the rest of the user configuration data. User configuration data includes information about a user's account like a forwarding phone number where the phone calls can be forwarded if the user does not attend the call on endpoints -, phone rings that should be played when the endpoints - receive a call from a particular number, feature functions associated with shortcut buttons like changing the forwarding number when user selects a particular key on endpoints -.","Server UI logic module  is a hardware, firmware, software or a blended implementation that performs part of the functionality of providing user interface to a user. For example, the endpoint UI logic module can comprise instructions for displaying a dialed phone number and the server UI module  can have instructions for displaying an entity's name and email address next to the displayed phone number. In one embodiment, the server UI logic module  can also determine whether the dialed entity has authorized the system to display the entity's email address and name with the dialed phone number.","The server storage  is volatile and\/or non-volatile storage that comprises data used by various user applications and telephony features performed by the server. For example storage  can store a user's contacts and phone configurations for various users.",{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 2C","b":["250","251","234","250","251","234","234","232"],"i":["a","a","a "]},{"@attributes":{"id":"p-0089","num":"0088"},"figref":"FIG. 2D","b":["210","220","230","240"],"i":["a","a ","a "]},"In this embodiment, the intelligent endpoint telephony module has the same module as described above. Intelligent switch telephony module has the same modules as described above in reference to . Intelligent server telephony module  has the same modules as described above in reference to . The determination modules , , ,  and communication modules , , ,  in the intelligent telephony modules , , ,  have similar structure and functionality as described above.","The feature logic modules , , ,  have similar structure and functionality except that endpoint feature logic module , switch feature logic module and server feature logic module  work in tandem to perform a requested application or telephony feature.","For example, endpoint can have limited storage that can only store up to ten contacts for a user, switch can have limited storage that can only store up to a hundred contacts and the rest of the contacts for the user are stored on server . Even though server  has adequate storage to store all the contacts for a user, it is advantageous to store the contacts closer to the user on endpoint and switch . This storage configuration reduces the affect of network glitches between server  and switch as explained above.","Accordingly, the endpoint feature logic module can have instructions for retrieving the first ten contacts for a user, the switch feature logic module can have instructions for retrieving the next hundred contacts for the user, and the server feature logic module  can have instructions for retrieving the rest of the contacts for the user. The three feature logic modules , ,  therefore work in tandem to retrieve all of the contacts for the user. The endpoint feature logic module can retrieve the first ten contacts and request the rest from the switch feature logic module . The switch feature logic module can retrieve the next hundred and request the rest of contacts from server feature logic module . The server feature logic module can then retrieve the rest of the contacts for the user.","Similarly, the UI logic modules , , ,  have similar structure and functionality as described above except that endpoint UI logic module , switch UI logic module and server UI logic module  work in tandem to perform a UI feature.","For example, endpoint can have limited storage to store up to ten contacts or ten voicemail messages in endpoint storage , switch can store up to hundred contacts or hundred voicemail messages, and server  can store the rest of the contacts or voicemail messages. When the user requests all her contacts or all her voicemail messages, the endpoint UI logic module instructs the endpoint to display the ten contacts or play the first ten voicemail messages on endpoint and wait for switch UI logic module to update endpoint storage with the next ten contacts or voicemail messages. Switch UI logic module fetches the hundred contacts or hundred most recent voicemail messages from switch storage , updates endpoint storage with next ten contacts or next ten voicemail messages at a time and instructs endpoint UI logic module to display the updated ten contacts or play the updated voicemail messages. After fetching the hundred contacts or hundred voicemail messages, switch UI logic module waits for server UI logic module  to fetch the next hundred contacts or voicemail messages and update switch storage with the next hundred contacts or next hundred voicemail messages. This process continues until endpoint UI logic module has displayed all the user contacts or played all the voicemail messages.",{"@attributes":{"id":"p-0096","num":"0095"},"figref":"FIG. 2D","b":["250","251","232","234","250","251","234","210","230","234","232"],"i":["a","a ","a","a ","a","a "]},{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 2E","b":["210","220","230","240"],"i":["a","a ","a "]},"In this embodiment, the intelligent telephony modules , , ,  include their respective determination modules , , ,  and communication modules , , , . These modules have been described above.","The intelligent switch telephony module also comprise switch feature logic module and switch UI logic module . These modules have been described above as well. In this embodiment, however, these modules have all or most of the logic for performing an application or a telephony feature.","For example, in response to a user request for her contacts, the endpoint determination module determines that the feature is performed by switch and forwards a request to switch communication module through endpoint communication module . The endpoint communication module forwards the request to switch feature logic module and the switch feature logic module retrieves all of the requested contacts from switch storage or some other storage accessible to switch feature logic module . The switch feature logic module then transmits the retrieved contacts to endpoint ","The switch UI logic module then directs the endpoint to display the contacts in a particular manner.","In another example, in response to a user's request for updating the user account configuration data, the endpoint determination module determines that the feature is performed by switch , and endpoint communication module forwards the request to switch feature logic module . The switch UI logic module then directs the endpoint to display the configuration data and transmit back any updates, and switch feature logic module applies the received updates to the user's account configuration data.",{"@attributes":{"id":"p-0103","num":"0102"},"figref":"FIG. 2E","b":["232","250","251","234","234","232"],"i":["a ","a","a "]},{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 2F","b":["210","220","230","240"],"i":["a","a ","a "]},"In this embodiment, the intelligent telephony modules , , ,  include their respective determination modules , , ,  and communication modules , , , . These modules have been described above.","The intelligent switch telephony module and intelligent server telephony module  also include their respective feature logic modules ,  and UI logic modules , . These modules have similar structure and similar functionality as described in  except feature logic modules ,  work in tandem with each other and not with a feature logic module in intelligent endpoint telephony module . Similarly, the UI logic modules ,  work in tandem with each other but not with a UI logic module in intelligent endpoint telephony module ","For example, in response to a user request for her contacts, the endpoint determination module  determines that the feature is performed by switch and server . The determination module  forwards the request to switch communication module  through endpoint communication module . The endpoint communication module forwards the request to switch determination module . The switch determination module determines that switch feature logic module can retrieve the first hundred contacts and forwards the request for first hundred contacts to switch feature logic module . The switch determination module also determines that the request for rest of the contacts can be handled by server  and forwards a request to server communication module  through switch communication module . Server communication module  forwards the request to server determination module  which determines that server feature logic module  can handle the request. Server determination module  forwards the request to server feature logic module  and server feature logic module  retrieves the requested contacts and transmits the contacts to endpoint directly or through switch ","The switch UI logic module can instruct endpoint to display in a particular manner the first hundred contacts retrieved and transmitted by switch feature logic module . The server UI logic module  can instruct endpoint to display the rest of the contacts in another manner.",{"@attributes":{"id":"p-0109","num":"0108"},"figref":"FIG. 2F","b":["232","234","250","251","234","232","234","232","234","250","232"],"i":["a ","a","a","a ","a ","a. "]},"Method Overview",{"@attributes":{"id":"p-0110","num":"0109"},"figref":"FIG. 3","b":["302","304","306","307","308"]},"As discussed above, the prior art solution relies on the server to execute all the logic and instruct the endpoint to take appropriate action. The endpoint therefore requires a constant connection to the server for instructions on every step and any glitches in the network delays the endpoint's response to the user. The claimed invention distributes the feature logic across various entities in the distributed network and integrates intelligent modules in the entities to determine which entity performs a particular part of the requested feature and to determine methods of performing feature logic and user logic in tandem.",{"@attributes":{"id":"p-0112","num":"0111"},"figref":["FIG. 4","FIG. 4"],"b":["250","232","250","230"],"i":["a ","a ","b ","b "]},"The user of endpoint accesses  a feature like accessing user contacts through the endpoint's user interface. The endpoint determination module in endpoint next determines  if endpoint feature logic module has instructions for retrieving the contacts and endpoint UI logic module has instructions for displaying the contacts. If the modules have the required instructions, endpoint executes  the UI logic and feature logic itself.","If endpoint is not capable of executing the UI logic or the feature logic, endpoint determination module determines  if switch can execute the UI logic and feature logic. If switch feature logic module can execute the feature logic and switch UI logic module has instructions for executing UI logic, switch executes the logic and directs  endpoint to take appropriate action.","If switch cannot execute the UI logic or feature logic, endpoint determination module determines  if endpoint and switch or server  include complementary implementations of user logic or feature logic. If yes, the endpoint executes  its part and the server  or switch execute their part and direct the endpoint to take appropriate action. For example, a user may request a list of hundred contacts and endpoint have only ten contacts in endpoint storage . The endpoint in this case will display the first ten contacts and request the other contacts from server  or switch . Server  or switch then retrieve the requested contacts from their respective storage, transmit the requested contacts to endpoint and direct the endpoint to display the transmitted contacts. In one embodiment, server  or switch transmit the requested contact and do not direct endpoint to display the contacts. Endpoint in such an embodiment displays the received contacts without any directions from server  or switch ","If endpoint  does not include a complementary implementation of user logic or feature logic, the endpoint determination module determines  if server  and switch include complementary implementations of user logic or feature logic. If yes, switch and server  collectively direct  endpoint to take appropriate actions. For example, in one embodiment, switch may have the first ten contacts for a user and server  may have additional contacts for the user. In such an embodiment, the endpoint determination module requests contacts through endpoint communication module from switch . The switch feature logic module retrieves and transmits through switch communication module the first ten requested contacts to endpoint . Switch UI logic module directs the endpoint to display the first ten contacts and switch determination module or endpoint determination module forwards the request for rest of the contacts to server . Server feature logic module  then retrieves and transmits the additional contacts to endpoint through server communication module . The server UI logic module then directs endpoint to display the additional contacts. In one embodiment, endpoint displays the contacts on receiving the contacts and does not wait for directions from switch or server  before displaying the contacts.","If switch and endpoint do not include complementary parts of the implementation, endpoint determination module determines  if server  can execute the UI logic and feature logic. If yes, server feature logic module  and server UI logic module  directs  endpoint to take appropriate action.","If server  cannot execute the UI logic or feature logic, server  directs  endpoint to display an error message informing the user that the requested feature is not supported. In one embodiment, the endpoint determination module determines that server  cannot execute the UI logic or feature logic and endpoint displays an error message without any directions from server .","The illustrated method of  therefore beneficially attempts to execute the UI logic and feature logic at endpoints -, . If the logic can be performed at endpoints -, , the network glitches are least likely to affect the endpoints' response to user's selection because endpoints -,  do not wait for instructions from switches -or server  before performing the UI logic or feature logic. If the logic cannot be performed on endpoints -, , the illustrated method beneficially attempts to perform the logic at switches -and avoid any service interruptions due to network glitches between server  and switches -or server  and endpoints -, . A network glitch between server  and endpoints -,  is more likely than network glitch between the endpoints and their corresponding switches because a switch is more likely to be present on the same site as the endpoint and therefore the communication between the switch and the endpoints is unaffected by glitches in network connecting two sites.","The illustrated method of  also beneficially reduces the overhead per endpoint -,  for switches -. Because the endpoints -, , instead of switches -, perform at least a part of the UI logic or feature logic, switches -do not have to allocate resources for performing that logic. Switches -can therefore allocate lesser resources per endpoint and support more endpoints than previously possible.","The illustrated method of  includes decision boxes , , , , and . Even though the boxes are illustrated in a particular sequence in , one of ordinary skill in the art will know that the decision boxes may be implemented in another sequence without departing from the scope of the invention.",{"@attributes":{"id":"p-0122","num":"0121"},"figref":["FIG. 5","FIG. 5"],"b":["250","232","250","232"],"i":["a ","a ","b ","b "]},"The user accesses  application data through the user interface on endpoint . For example, the user may request a list of emails through user interface on endpoints ","Upon receiving the request, the endpoint determination module in endpoint determines  if endpoint has the requested email data. If yes, endpoint displays  the data to the user. In one embodiment, endpoint may have an initial chunk of the requested email data but not all of the requested data. For example, endpoint may have the first hundred emails in storage and endpoint may display these first hundred emails to the user.","Endpoint feature logic module then checks  if the displayed data is all of the requested data or the last chunk of requested data. If not, endpoint feature logic module checks  if it has the next chunk of data. If yes, endpoint UI logic module directs endpoint to displays  the next chunk. If not, endpoint feature logic module checks  switch for the next chunk of data. If switch has  the requested data, endpoint feature logic module retrieves  the data from switch . If switch does not have the requested data, endpoint feature logic module then checks  if server  has the requested data. If not, endpoint UI logic module directs endpoint to display  an error informing the user that requested data is not available. If server  has the requested data, endpoint feature logic module retrieves  the data. Endpoint then displays  the retrieved data to the user. Endpoint feature logic module next checks  if the displayed data was the last chunk of requested data. If not, steps  to  are repeated until all the requested data is displayed to the user. Once endpoint displays the last chunk of requested data, the user request is complete .","The illustrated method of  therefore beneficially searches for the retrieved data on endpoints -,  before retrieving the data from switches -or server . If the requested data is present on endpoints -, endpoints -retrieve the requested data from their memory and display the requested data to the user. Because endpoints -do not retrieve data from server  or switches -, network glitches do not affect the endpoints' response to user request. If the requested data is not available on endpoints -, , endpoints -,  retrieve the data from switches -. In one embodiment, the more frequently accessed data is preferably located on switches -instead of server  to avoid any service interruptions to user because of any network glitches between server  and switches -or server  and endpoints -, .",{"@attributes":{"id":"p-0127","num":"0126"},"figref":"FIG. 5","b":["234","232","252","251","234","232","250","251"],"i":["a","b ","a","b","a","b ","a","b"]},{"@attributes":{"id":"p-0128","num":"0127"},"figref":"FIG. 6","b":["250","251","232","250","251","232","250","251","602","234","234","250","251","250","251","250","251","234","250","251"],"i":["a","b","a","b ","a","b","a","b","a","b","a","b","a","b","a","b","a","b"]},"After receiving the application request, server  determines  the data that should be updated on endpoints -, . In one embodiment, server  uses the version number of the application data to determine the new application data or changed application data. Server  then prepares  and transmits  to endpoints -,  an update package with new application data or the changed application data. On receiving the update, endpoints -,  apply  the received update to their application data."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention has other advantages and features which will be more readily apparent from the following detailed description of the invention and the appended claims, when taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2D"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2E"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2F"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
