---
title: Validating an XML document
abstract: At least one XML document to be validated is parsed, and XML data in the at least one XML document is represented as data objects in at least one data object model in a memory. At least one rule document is parsed and a rule object model is created in the memory. At least part of the data objects are extracted from the at least one data object model and at least part of rule objects are extracted from the rule object model. Validation is performed in a corresponding execution context for the extracted at least part of the data objects based upon the extracted at least part of the rule objects.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09146908&OS=09146908&RS=09146908
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09146908
owner_city: Armonk
owner_country: US
publication_date: 20090722
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority to and claims the benefit of Chinese Patent Application Serial No. 200810134072.X titled \u201cMETHOD AND SYSTEM FOR VALIDATING XML DOCUMENT,\u201d which was filed in the China Patent Office on Jul. 24, 2008, and which is incorporated herein by reference in its entirety.","The present invention relates to computer document processing technology, and particularly relates to a method and system for validating XML documents.","Standard Generalized Markup Language (SGML) is an information management standard adopted by the International Organization for Standardization (ISO) for providing platform- and application software independent documents. In a document, format, index and links are maintained. SGML provides a mechanism similar to a grammar for defining document structure and tags. The tags are used for representing format of different documents.","Extensible Markup Language (XML) is a standard language suggested by W3C. It is a condensed format of SGML. XML provides more flexibility for web developers and designers to create customized marks, organize and represent information. XML is used to exchange documents and data for Service-Oriented Architecture (SOA) and Web services. One of the advantages of XML as a format for data exchange is the standardization of validation technology.","Many XML application developers expect that there is a method to guarantee that all XML instances comply with some specific rules, such as guaranteed validation processing. Thus, many people directly seek help from schema language, e.g. DTD, W3C XML Schema (WXS) and RELAX NG. The effort may be performed by applying some rules to XML instances.","Usually, validation technology includes a grammar based validation method. As an alternative, Schematron is a structural validation language. Schematron allows to directly express rules without the need to create a whole grammar base. Tree patterns, defined as XPath expressions, are used to make assertions, and provide user-centric reports about XML documents. Expressing validation rules using patterns is often easier than defining the same rule using a content model. Tree patterns are collected together to form a Schematron schema. Schematron is a useful tool for other schema languages. Schematron is a useful tool to apply rules for an XML document or validate with rules. Schematron is flexible, and may be used to express different rules. Its expressing capability may be more suitable than other schema languages (e.g., DTD, W3C XML Schema (WXS), and RELAX NG).","Efforts were made by the industry and academia to implement Schematron.  shows a widely used and referenced Schematron implementation method. One may refer to http:\/\/www.schematron.com, which is a typical implementation method with open source software, and is frequently used by various projects. Schematron uses XML Stylesheet Language For Transformation (XSLT), and defines a schema language which, when transformed through a meta-style sheet (i.e. a style sheet which generates other style sheets), produces XSLT validation document.  shows the process.","The web site http:\/\/www.ldodds.com\/papers\/schematron_xsltuk.html also introduced Schematron and other implementations based on XSLT.","Furthermore, the Community-driven Systems Management in Open Source (COSMOS) project aims to provide inter-operable tools for system management. The COSMOS Resource Modeling sub-project aims to provide support for building a common model to represent the information being shared in a system management scenario. The project is using SML and Schematron as the XML schema language to define this common model. It uses the XSLT based approach and skeleton1-5.xsl (http:\/\/xml.ascc.net\/schematron\/1.5\/) reference implementation to extract the Schematron from the schema.","The above examples are all based on an XSLT approach. According to embodiments of the present invention, a new method and system for validating an XML document is provided. The method comprises parsing at least one XML document to be validated, and representing XML data in the at least one XML document as data objects in at least one data object model in a memory; parsing at least one rule document and creating a rule object model comprising rule objects in the memory; extracting at least part of the data objects from the at least one data object model and extracting at least part of the rule objects from the rule object model; and performing validation in a corresponding execution context for the extracted at least part of the data objects based upon the extracted at least part of the rule objects.","According to another embodiment of the present invention, a system for validating a XML document is provided. The system comprises a memory; a data parsing module configured to parse at least one XML document to be validated and to represent XML data in the at least one XML document as data objects in at least one data object model in the memory; a rule parsing module configured to parse at least one rule document and create a rule object model comprising rule objects in the memory; an extracting module configured to extract at least part of the data objects from the at least one data object model and extract at least part of the rule objects from the rule object model; and a validation module configured to perform validation in a corresponding execution context for the extracted at least part of the data objects based upon the extracted at least part of the rule objects.","According to another embodiment of the present invention, the at least one rule document comprises at least one Schematron document, and the rule objects in the rule object model maintain a hierarchical relationship corresponding to elements in the at least one Schematron document. Each element in the at least one XML document is mapped to a data object in the at least one data object model, the data objects maintain a hierarchical relationship corresponding to elements in the at least one XML document to be validated.","Where, at least part of rule objects are extracted from the rule object model according to predefined rule extraction criteria. At least part of data objects are extracted from the data object model according to predefined data extraction criteria.","According to a further embodiment of the present invention, the method further comprises: generating an execution context for at least one rule object of the extracted at least part of the rule objects, registering the execution context to a context registry, and performing validation for the at least one rule object in the execution context. An execution context for one rule object of the extracted at least part of the rule objects may be searched from a context registry, and validation may be performed for the one rule object in the execution context.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 1","FIG. 1"],"b":["10","20"]},"The XML document validation process with Schematron is divided into two procedures. The first procedure is transforming a Schematron rule document into an intermediate document, i.e. Validator.xslt document  by executing Schematron.xslt document  in an XSLT engine . The second procedure is executing the Validator.xslt document  in the XSLT engine  to perform validation for XML document  to generate a final validation report .","A performance issue will be caused by the two rounds of XSLT transformation. A Schematron schema is transformed into an equivalent XSLT document, and is commonly implemented as a meta-style sheet, called skeleton. This skeleton is applied to the Schematron schema and the resulting XSLT is in turn applied to the XML instance document. Because there are two rounds of transformations based on XSLT in the validation process, the performance often becomes a critical issue especially in some environments requiring real-time processing, such as registry and repository with a large number of concurrent operations by end users and applications.","Such an XSLT based validation method lacks shareable rule context. The contexts of each rule are not shareable, so that many nodes are traversed more than once in the validation process. It is also another critical issue for performance.","It is difficult to achieve fail-fast validation with Schematron. Fail-fast refers to a lightweight form of fault tolerance, where an application or system service terminates itself immediately upon encountering an error. Schematron validation based on XSLT transformation makes it difficult to achieve fail-fast implementation due to the nature of XSLT.","Such an XSLT based method has matching problems generated by XSLT. Such problems usually exist in XSLT based implementations. For example, when in the same pattern, some rule context scopes overlap with each other, it will cause more than one rule to be satisfied and get triggered. Using an XSLT based implementation, each rule is represented as a template; but for XSLT 1.0, if multiple templates are matched at the same time, only one with the highest priority will be called, with the others being ignored. XSLT 2.0 has the feature to do \u201cmatch-next\u201d, but still cannot completely solve the problem. This defect makes a gap between the Schematron specification and XSLT capability.","Such an XSLT based method makes it difficult to support partial validation with fine grained assertions in a Schematron document. Using an XSLT approach, the smallest unit of the rule container to be selected in a Schematron document is a \u201cphase\u201d element, where users or applications could not select a finer grained unit, such as a rule or an assertion, for validation. It may cause a problem when there is a requirement to validate XML documents with only a subset of a phase, for example where a user selected rules or assertions, and rules or assertions for a specific version or a section of a standards specification such as WS-I BP, etc., let alone the other advanced features for more flexible validation are used.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2","b":"10"},"At step S, parse at least one rule document and create a rule object model. The rule object model may be created and stored in memory, or may be created and stored with other technology of hardware and\/or virtual software convenient for access.","At step S, extract at least part of data objects from the data object model. The data object extraction criteria may be predefined, and data objects may be automatically extracted according to the criteria. The data object model may be provided to a user via a user interface. The user may select data objects from the data object model. User defined functions may also be used for extracting data objects.","At step S, extract at least part of rule objects from the rule object model. The rule object extraction criteria may be predefined, and rule objects may be automatically extracted according to the criteria. The rule object model may be provided to a user via a user interface. The user may select rule objects from the rule object model. User defined functions may also be used for extracting rule objects.","At step S, perform validation in a corresponding execution context for the at least part of data objects and the at least part of rule objects. The execution context may be predefined, or generated according to a rule object and a data object to be validated. A context registry may be maintained for storing execution contexts for validation. An execution context for an extracted rule object may be searched from the context registry, and validation for the rule object may be performed in the execution context.","According to one embodiment of the present invention, for an XML instance document, validation may be performed using all rules or part of the rules; and all or part of the data in the XML instance document may be validated using all of the rules or part of the rules. After data objects to be validated and rule objects are determined, the validation process executes the rule objects for the data objects to be validated in the corresponding execution context.","According to another embodiment of the present invention, the method further includes: generating an execution context for at least one of the extracted rule objects, and registering the execution context to a context registry, and performing validation for the at least one rule object in the execution context.","According to a further embodiment of the present invention, the data object model and the rule object model may be created in memory. The rule document is a Schematron document, and rule objects in the rule object model maintain a hierarchical relationship corresponding to elements in the Schematron document.","According to a further embodiment of the present invention, the method further includes stopping validation in response to a fail-fast rule being triggered.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 3","FIG. 3"],"b":"101"},{"@attributes":{"id":"p-0039","num":"0038"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"<employees xmlns=\u201chttp:\/\/example.ibm.com\/employee\u201d>"},{"entry":"\u2003<employee serialNumber=\u201cSOADC913247\u201d sex=\u201cFemale\u201d title=\u201cMr\u201d"},{"entry":"\u2003\u2003deptId=\u201cSOADC\u201d>"},{"entry":"\u2003\u2003<firstName>Chuan<\/firstName>"},{"entry":"\u2003\u2003<lastName>WEN<\/lastName>"},{"entry":"\u2003\u2003<assets>"},{"entry":"\u2003\u2003\u2003<asset assetNumber=\u201cP2PQH402\u201d capitalizedDate=\u201c2008-04-10\u201d"},{"entry":"\u2003\u2003\u2003\u2003status=\u201cactive\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<complianceInfo>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<check date=\u201c2008-01-10\u201d standard=\u201cSec300\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003status=\u201cpassed\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<check date=\u201c2008-02-18\u201d standard=\u201cSec400\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003status=\u201cfailed\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<check date=\u201c2008-03-22\u201d standard=\u201cSec800\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003status=\u201cfailed\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003<\/complianceInfo>"},{"entry":"\u2003\u2003\u2003\u2003<items>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<item partNum=\u201c001-AA\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<productName>PC<\/productName>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<quantity>1<\/quantity>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<price>13000.80<\/price>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/item>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<item partNum=\u201c002-BB\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<productName>keyboard<\/productName>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<quantity>1<\/quantity>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<price>288.88<\/price>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/item>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<item partNum=\u201c003-CC\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<productName>Monitor<\/productName>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<quantity>2<\/quantity>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<price>2000<\/price>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/item>"},{"entry":"\u2003\u2003\u2003\u2003<\/items>"},{"entry":"\u2003\u2003\u2003<\/asset>"},{"entry":"\u2003\u2003\u2003<asset assetNumber=\u201cA22J7602\u201d capitalizedDate=\u201c2008-03-22\u201d"},{"entry":"\u2003\u2003\u2003\u2003status=\u201cunused\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<unusedInfo reason=\u201cLowerPerformance\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<detail>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003The performance of this assset is very lower!"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/detail>"},{"entry":"\u2003\u2003\u2003\u2003<\/unusedInfo>"},{"entry":"\u2003\u2003\u2003<\/asset>"},{"entry":"\u2003\u2003<\/assets>"},{"entry":"\u2003<\/employee>"},{"entry":"<\/employees>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The data in the above XML instance includes an employee with family name \u201cWEN,\u201d given name \u201cChuan,\u201d employee number \u201cSOADC913247,\u201d sex \u201cFemale,\u201d and title \u201cMr.\u201d There are some assets information under the name of this employee.","Schematron document  is for storing rules for validating the above XML document. Schematron language allows for expressing rules directly to make sure that all XML instances will follow specific rules. If rules are to be applied to XML document contents or used for checking the document, Schematron may be used. For example, different authors submit documents to a company for publishing a technical document. Editors want to check the submitted documents with a set of rules to make sure that they comply with editing requirements and may be correctly processed by publishing tools.","In Schematron documents, declarations are used for defining various XML vocabularies and may be shared with various XML based applications. The constraints rules include XML Schema-based validation which is strictly a check for format and correctness, but also includes complex application logic for multiple XML documents. For example, the following Schematron document may be used to express the rules to validate the example XML document shown above.",{"@attributes":{"id":"p-0043","num":"0042"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"315pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d ?>"},{"entry":"<schema xmlns=\u201chttp:\/\/purl.oclc.org\/dsdl\/schematron\u201d>"},{"entry":"\u2003<title>Employee and Asset<\/title>"},{"entry":"\u2003<ns uri=\u201chttp:\/\/example.ibm.com\/employee\u201d prefix=\u201cem\u201d \/>"},{"entry":"\u2003<pattern name=\u201cBasic validation\u201d>"},{"entry":"\u2003\u2003<rule context=\u201c\/em:employees\/em:employee\u201d>"},{"entry":"\u2003\u2003\u2003<assert"},{"entry":"\u2003\u2003\u2003\u2003test=\u201c(@sex=\u2018Male\u2019 and @title=\u2018Mr\u2019) or (@sex=\u2018Female\u2019 and (@title=\u2018Mrs\u2019"},{"entry":"or @title=\u2018Miss\u2019))\u201d>"},{"entry":"\u2003\u2003\u2003\u2003The value of title does not match the value of sex."},{"entry":"\u2003\u2003\u2003<\/assert>"},{"entry":"\u2003\u2003\u2003<assert test=\u201c@serialNumber and @deptId\u201d>"},{"entry":"\u2003\u2003\u2003\u2003Both serialNumber and deptId must be present."},{"entry":"\u2003\u2003\u2003<\/assert>"},{"entry":"\u2003\u2003\u2003<report test=\u201cnot(starts-with(@serialNumber,@deptId))\u201d>"},{"entry":"\u2003\u2003\u2003\u2003The serialNumber must starts with the deptId."},{"entry":"\u2003\u2003\u2003<\/report>"},{"entry":"\u2003\u2003<\/rule>"},{"entry":"\u2003<\/pattern>"},{"entry":"\u2003<pattern name=\u201cAssets count validation\u201d>"},{"entry":"\u2003\u2003<rule context=\u201c\/em:employees\/em:employee\/em:assets\u201d>"},{"entry":"\u2003\u2003\u2003<assert test=\u201ccount(em:asset[@status=\u2018active\u2019]) >= 1\u201d>"},{"entry":"\u2003\u2003\u2003\u2003Each employee should have at least one asset which status is active."},{"entry":"\u2003\u2003\u2003<\/assert>"},{"entry":"\u2003\u2003\u2003<report test=\u201ccount(em:asset) > 10\u201d>"},{"entry":"\u2003\u2003\u2003\u2003Each employee should have at most ten assets."},{"entry":"\u2003\u2003\u2003<\/report>"},{"entry":"\u2003\u2003<\/rule>"},{"entry":"\u2003<\/pattern>"},{"entry":"\u2003<pattern name=\u201cAsset price validation\u201d>"},{"entry":"\u2003\u2003<rule"},{"entry":"context=\u201c\/em:employees\/em:employee\/em:assets\/em:asset[@status=\u2018active\u2019]\/em:items\u201d>"},{"entry":"\u2003\u2003\u2003<assert test=\u201cem:item\u201d>"},{"entry":"\u2003\u2003\u2003\u2003Each asset which status is active should have at least one item."},{"entry":"\u2003\u2003\u2003<\/assert>"},{"entry":"\u2003\u2003\u2003<report"},{"entry":"\u2003\u2003\u2003\u2003test=\u201csum(em:item\/em:price\/text( )) > 10000\u201d>"},{"entry":"\u2003\u2003\u2003\u2003For each employee, the sum of price of all the active assets can't be greater"},{"entry":"than 10000."},{"entry":"\u2003\u2003\u2003<\/report>"},{"entry":"\u2003\u2003<\/rule>"},{"entry":"\u2003<\/pattern>"},{"entry":"\u2003<pattern name=\u201cAsset advanced validation\u201d>"},{"entry":"\u2003\u2003<rule context=\u201c\/em:employees\/em:employee\/em:assets\/em:asset[@status=\u2018active\u2019]\u201d>"},{"entry":"\u2003\u2003\u2003<assert test=\u201cem:complianceInfo\u201d>"},{"entry":"\u2003\u2003\u2003\u2003Each active asset must include the compliance check information."},{"entry":"\u2003\u2003\u2003<\/assert>"},{"entry":"\u2003\u2003<\/rule>"},{"entry":"\u2003\u2003<rule"},{"entry":"context=\u201c\/em:employees\/em:employee\/em:assets\/em:asset[@status=\u2018active\u2019]\/em:complianceInfo\/em:check\u201d>"},{"entry":"\u2003\u2003\u2003<report test=\u201c@standard=\u2018Sec300\u2019 and not(@status=\u2018passed\u2019)\u201d>"},{"entry":"\u2003\u2003\u2003\u2003If the check standard is \u2018Sec300\u2019, corresponding status must be \u2018passed\u2019."},{"entry":"\u2003\u2003\u2003<\/report>"},{"entry":"\u2003\u2003\u2003<report test=\u201c@standard=\u2018Sec400\u2019 and not(@status=\u2018passed\u2019 or"},{"entry":"@status=\u2018uncertain\u2019)\u201d>"},{"entry":"\u2003\u2003\u2003\u2003If the check standard is \u2018Sec400\u2019, corresponding status should be \u2018passed\u2019 or"},{"entry":"\u2018uncertain\u2019."},{"entry":"\u2003\u2003\u2003<\/report>"},{"entry":"\u2003\u2003\u2003<report test=\u201c@standard=\u2018Sec800\u2019 and @status=\u2018failed\u2019\u201d>"},{"entry":"\u2003\u2003\u2003\u2003If the check standard is \u2018Sec800\u2019, and corresponding status is present, the"},{"entry":"status should be not \u2018failed\u2019."},{"entry":"\u2003\u2003\u2003<\/report>"},{"entry":"\u2003\u2003<\/rule>"},{"entry":"\u2003\u2003<rule"},{"entry":"context=\u201c\/em:employees\/em:employee\/em:assets\/em:asset[@status=\u2018unused\u2019]\u201d>"},{"entry":"\u2003\u2003\u2003<assert test=\u201cem:unusedInfo\u201d>"},{"entry":"\u2003\u2003\u2003\u2003The unused assets must include the unused information."},{"entry":"\u2003\u2003\u2003<\/assert>"},{"entry":"\u2003\u2003\u2003<assert test=\u201cem:unusedInfo\/@reason!=\u201d or em:unusedInfo\/detail\/text( )!=\u201c\u201d>"},{"entry":"\u2003\u2003\u2003\u2003Asset[serial number: <value-of select=\u201c.\/@assetNumber\u201d\/>] is unused, but"},{"entry":"has not unused reason or detail."},{"entry":"\u2003\u2003\u2003<\/assert>"},{"entry":"\u2003\u2003<\/rule>"},{"entry":"\u2003<\/pattern>"},{"entry":"<\/schema>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The above Schematron document includes rules for validating the above XML document, e.g. the assertion \u201c(@sex=\u2018Male\u2019 and @title=\u2018Mr\u2019) or (@sex=\u2018Female\u2019 and (@title=\u2018Mrs\u2019 or @title=\u2018Miss\u2019))\u201d for validating the title of WEN Chuan in the above XML document is correct or not. If the title is not correct, then output \u201cThe value of title does not match the value of sex.\u201d","A validation engine  performs the structure and content constraints validation for the target XML object model by using a rule object model. The validation engine  may include some or all of the following modules. For example, a user defined function  or an output generator registry  may be included or may not be included.","An XML Parser  is used to parse the XML document , and may be implemented by using different implementation languages (for example, Java, C#, etc). XML Parser may be implemented as codes for reading a document and parsing its contents. The XML parser  reads the XML document , provides programmatic access to its XML data, and consequently determines how this data may be accessed or retrieved. Typically, it may be a Document Object Model (DOM) Parser, Streaming API for XML (SAX) Parser, etc.","The XML Parser  parses at least one of XML document , XML document  and\/or XML document  to be validated, and expresses the XML data as at least one XML data object model. Every element in the XML document is mapped to a data object in the data object model, and the data objects keep hierarchical relationship corresponding to elements in the XML document to be validated.","The XML Parser  may parse the XML document  to be validated in memory, and store the XML data object model  in memory. Thus, matching may be performed by using data object model in memory to do refined matching. Validation for part of the XML document  may be performed according to user's selection or predefinition. In other words, validation for part of objects in XML data object model  may be performed.","The XML data object model , may be a document object model (DOM) in which an XML document is usually modeled as a node-labeled tree. Each element in the document is mapped to a sub tree in the tree, which root node is labeled with the tag of the element.","A rule parser  parses at least one rule document , e.g. the Schematron document , Schematron document  and\/or Schematron document  in , and creates a rule object model . The rule object model may be created in memory. The created rule object model  may be stored in memory.","The rule parser  is used to parse the constraint rules using the extended Schematron language. These constraint rules may be formed as an XML document so that they may be parsed by any XML parser. According to one embodiment of the present invention, the Rule parser  is based on the Document Object Model Application Programming Interface (DOM API) to parse the constraint rules document into the rule object model  in memory.","In a further embodiment of the present invention, the rule document may be a Schematron document. The rule objects in the rule object model  maintain a hierarchical relationship corresponding to elements in the Schematron document. The rule parser  parses the Schematron document according to its grammar, and creates a corresponding rule object model in memory. The Schematron document may be an XML document by its nature. The Schematron document may be first parsed with an XML DOM processing mechanism, and then memory objects may be created according to element names in the document. For example, if a parsed XML original name is rule, then a corresponding rule object model may be created. Because the elements in the Schematron document have a hierarchical relationship, the corresponding rule object model in memory will also maintain the corresponding hierarchical relationship.","For example, the rule object model in  may be created from the following Schematron document.",{"@attributes":{"id":"p-0054","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"315pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Schematron document:"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"315pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d ?>"},{"entry":"<schema xmlns=\u201chttp:\/\/purl.oclc.org\/dsdl\/schematron\u201d>"},{"entry":"\u2003<title>Employee and Asset<\/title>"},{"entry":"\u2003<ns uri=\u201chttp:\/\/example.ibm.com\/employee\u201d prefix=\u201cem\u201d \/>"},{"entry":"\u2003<pattern name=\u201cBasic validation\u201d>"},{"entry":"\u2003\u2003<rule context=\u201c\/em:employees\/em:employee\u201d>"},{"entry":"\u2003\u2003\u2003<assert test=\u201c(@sex=\u2018Male\u2019 and @title=\u2018Mr\u2019) or (@sex=\u2018Female\u2019 and"},{"entry":"\u2003\u2003\u2003\u2003(@title=\u2018Mrs\u2019 or @title=\u2018Miss\u2019))\u201d>"},{"entry":"\u2003\u2003\u2003\u2003The value of title does not match the value of sex."},{"entry":"\u2003\u2003\u2003<\/assert>"},{"entry":"\u2003\u2003\u2003<assert test=\u201c@serialNumber and @deptId\u201d>"},{"entry":"\u2003\u2003\u2003\u2003Both serialNumber and deptId must be present."},{"entry":"\u2003\u2003\u2003<\/assert>"},{"entry":"\u2003\u2003\u2003<report test=\u201cnot(starts-with(@serialNumber,@deptId))\u201d>"},{"entry":"\u2003\u2003\u2003\u2003The serialNumber must starts with the deptId."},{"entry":"\u2003\u2003\u2003<\/report>"},{"entry":"\u2003\u2003<\/rule>"},{"entry":"\u2003<\/pattern>"},{"entry":"\u2003<pattern name=\u201cAssets count validation\u201d>"},{"entry":"\u2003\u2003<rule context=\u201c\/em:employees\/em:employee\/em:assets\u201d>"},{"entry":"\u2003\u2003\u2003<assert test=\u201ccount(em:asset[@status=\u2018active\u2019]) >= 1\u201d>"},{"entry":"\u2003\u2003\u2003\u2003Each employee should have at least one asset which status is active."},{"entry":"\u2003\u2003\u2003<\/assert>"},{"entry":"\u2003\u2003\u2003<report test=\u201ccount(em:asset) > 10\u201d>"},{"entry":"\u2003\u2003\u2003\u2003Each employee should have at most ten assets."},{"entry":"\u2003\u2003\u2003<\/report>"},{"entry":"\u2003\u2003<\/rule>"},{"entry":"\u2003<\/pattern>"},{"entry":"\u2003<pattern name=\u201cAsset price validation\u201d>"},{"entry":"\u2003\u2003<rule"},{"entry":"context=\u201c\/em:employees\/em:employee\/em:assets\/em:asset[@status=\u2018active\u2019]\/em:items\u201d>"},{"entry":"\u2003\u2003\u2003<assert test=\u201cem:item\u201d>"},{"entry":"\u2003\u2003\u2003\u2003Each asset which status is active should have at least one item."},{"entry":"\u2003\u2003\u2003<\/assert>"},{"entry":"\u2003\u2003\u2003<report"},{"entry":"\u2003\u2003\u2003\u2003test=\u201csum(em:item\/em:price\/text( )) > 10000\u201d>"},{"entry":"\u2003\u2003\u2003\u2003For each employee, the sum of price of all the active assets can't be greater"},{"entry":"than 10000."},{"entry":"\u2003\u2003\u2003<\/report>"},{"entry":"\u2003\u2003<\/rule>"},{"entry":"\u2003<\/pattern>"},{"entry":"\u2003<pattern name=\u201cAsset advanced validation\u201d>"},{"entry":"\u2003\u2003<rule context=\u201c\/em:employees\/em:employee\/em:assets\/em:asset[@status=\u2018active\u2019]\u201d>"},{"entry":"\u2003\u2003\u2003<assert test=\u201cem:complianceInfo\u201d>"},{"entry":"\u2003\u2003\u2003\u2003Each active asset must include the compliance check information."},{"entry":"\u2003\u2003\u2003<\/assert>"},{"entry":"\u2003\u2003<\/rule>"},{"entry":"\u2003\u2003<rule"},{"entry":"context=\u201c\/em:employees\/em:employee\/em:assets\/em:asset[@status=\u2018active\u2019]\/em:complianceInfo\/em:check\u201d>"},{"entry":"\u2003\u2003\u2003<report test=\u201c@standard=\u2018Sec300\u2019 and not(@status=\u2018passed\u2019)\u201d>"},{"entry":"\u2003\u2003\u2003\u2003If the check standard is \u2018Sec300\u2019, corresponding status must be \u2018passed\u2019."},{"entry":"\u2003\u2003\u2003<\/report>"},{"entry":"\u2003\u2003\u2003<report test=\u201c@standard=\u2018Sec400\u2019 and not(@status=\u2018passed\u2019 or"},{"entry":"@status=\u2018uncertain\u2019)\u201d>"},{"entry":"\u2003\u2003\u2003\u2003If the check standard is \u2018Sec400\u2019, corresponding status should be \u2018passed\u2019 or"},{"entry":"\u2018uncertain\u2019."},{"entry":"\u2003\u2003\u2003<\/report>"},{"entry":"\u2003\u2003\u2003<report test=\u201c@standard=\u2018Sec800\u2019 and @status=\u2018failed\u2019\u201d>"},{"entry":"\u2003\u2003\u2003\u2003If the check standard is \u2018Sec800\u2019, and corresponding status is present, the"},{"entry":"status should be not \u2018failed\u2019."},{"entry":"\u2003\u2003\u2003<\/report>"},{"entry":"\u2003\u2003<\/rule>"},{"entry":"\u2003\u2003<rule"},{"entry":"context=\u201c\/em:employees\/em:employee\/em:assets\/em:asset[@status=\u2018unused\u2019]\u201d>"},{"entry":"\u2003\u2003\u2003<assert test=\u201cem:unusedInfo\u201d>"},{"entry":"\u2003\u2003\u2003\u2003The unused assets must include the unused information."},{"entry":"\u2003\u2003\u2003<\/assert>"},{"entry":"\u2003\u2003\u2003<assert test=\u201cem:unusedInfo\/@reason!=\u201d or em:unusedInfo\/detail\/text( )!=\u201c\u201d>"},{"entry":"\u2003\u2003\u2003\u2003Asset[serial number: <value-of select=\u201c.\/@assetNumber\u201d\/>] is unused, but"},{"entry":"has not unused reason or detail."},{"entry":"\u2003\u2003\u2003<\/assert>"},{"entry":"\u2003\u2003<\/rule>"},{"entry":"\u2003<\/pattern>"},{"entry":"<\/schema>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The object in the rule object model maintains a corresponding hierarchical relationship with elements in the above Schematron document. For example, the object, schema Schema(id=35), in line  of  corresponds to the elements starting from line  of the Schematron document, <schema xmlns=\u201chttp:\/\/purl.oclc.org\/dsdl\/schematron\u201d>. The object in line  of , [] Pattern (id=79), corresponds to the element, <pattern name=\u201cBasic validation\u201d>, starting from line  of the Schematron document. The object in line  of , [] Rule(id=95), corresponds to the element, <rule context=\u201c\/em:employees\/em:employee\u201d>, starting from line  of the Schematron document. The object in line  of , [] Assertion(id=109), corresponds to the element starting from line  of the Schematron document (e.g., <assert test=\u201c(@sex=\u2018Male\u2019 and @title=\u2018Mr\u2019) or (@sex=\u2018Female\u2019 and (@title=\u2018Mrs\u2019 or @title=\u2018Miss\u2019))\u201d> The value of title does not match the value of sex. <\/assert>).","The rule object model  may represent an in-memory model of rules, and may be created by the rule parser . The core elements include a context element, a rule logic expression, and validation output, etc.","An XML data extractor  extracts nodes of XML document object model tree. Xpath is a widely used language for addressing parts of an XML document to extract a data object. Xpath may be used as a stand-alone query language for XML, and may also be used in a host language such as XQuery and XSLT. For example, an XPath query includes a location path and an output expression. The location path is a sequence of location steps that specify the path from the document root to a desired element. The output expression specifies the portions or functions of a matching element that form the results.","A user interact module for data extracting, i.e. a user interface , allows the user to select elements to be validated from a target XML document. Samples of such data may be elements of the same type, a sub tree of the whole DOM tree, or a set of elements filtered using XPath pattern, etc. Such information for data selection and\/or selected data elements may be passed to a rule selection module  for identifying the fine grained units, such as rules or assertions, for partial validation.","The rule selection module  interacts with an end user\/application (e.g., via the user interface ) for selecting rules to be used for validation. The information for rule selection may be generated by a user, e.g. a user selection of the rules\/assertions to be used directly from UI, or may be automatically generated using the information of data selection from the user interface  for data extraction. Additionally, the information for rule selection is passed to the rule parser  for generating a rule object model to be used for validation.","A rule context populator  is for populating a rule execution context  of each rule. These contexts may be shared by multiple rules which have the related execution scope.","The rule execution context  provides a concrete execution scope of each rule applied to a XML instance document. These rule execution contexts may be marked as hierarchical and shareable. For example, in , context A, B, C, and D are examples of rule execution contexts that apply separately for different rules. In , the context A is \u201cpo:order\u201d meaning all order elements under the root node. All rules of the rule set A are evaluated under this context (all order elements). Then the populated context A may be registered into a context registry  of this validation process.","The context B is \u201c.[@orderStatus=\u2018Paid\u2019]\u201d, meaning those order elements that have a \u201cpaid\u201d status. The scope of context B may be evaluated based on the scope of the context A instead of the root element of DOM tree. The scope of context C also may be evaluated based on the scope of the context B which denotes paid orders rather than all of the orders. The context A and the context B may both be extracted from the context registry of this validation process.","The rules under context A may be triggered under their execution context (all the order elements). When the Context B is populated, if there is no context hierarchy, these elements may be determine form a root node instead of from already populated order elements. According to one embodiment of the present invention, the context B population may be based on the achieved order elements (context A) instead of the whole root node, to expedite the extracting process.","A rule matcher  is used to evaluate the assertions of each rule under the current rule execution context. If the evaluation is false, the rule will be triggered. For example, the above rule (as following) describes that the sex and title of an employee must be consistent, the employee must have a serialNumber and department identifier (Id) and the serial number must start with the department Id.",{"@attributes":{"id":"p-0065","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<rule context=\u201c\/em:employees\/em:employee\u201d>"]},{"entry":[{},"\u2003\u2003<assert"]},{"entry":[{},"\u2003\u2003\u2003test=\u201c(@sex=\u2018Male\u2019 and @title=\u2018Mr\u2019) or"]},{"entry":[{},"(@sex=\u2018Female\u2019 and (@title=\u2018Mrs\u2019 or @title=\u2018Miss\u2019))\u201d>"]},{"entry":[{},"\u2003\u2003\u2003The value of title does not match the value of sex."]},{"entry":[{},"\u2003\u2003<\/assert>"]},{"entry":[{},"\u2003\u2003<assert test=\u201c@serialNumber and @deptId\u201d>"]},{"entry":[{},"\u2003\u2003\u2003Both serialNumber and deptId must be present."]},{"entry":[{},"\u2003\u2003<\/assert>"]},{"entry":[{},"\u2003\u2003\u2002........."]},{"entry":[{},"<\/rule>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Then, when these assertions are to be matched, the rule matcher  will obtain DOM elements from the XML instance document based on an Xpath expression, e.g., the context attribute of an element rule \u201c\/em:employees\/em:employee.\u201d Execution of the Xpath expression in the XML instance may obtain the following element.",{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002<employee serialNumber=\u201cSOADC913247\u201d"]},{"entry":[{},"\u2002sex=\u201cFeMale\u201d title=\u201cMr\u201d"]},{"entry":[{},"\u2003deptId=\u201cSOADC\u201d>"]},{"entry":[{},"\u2002"]},{"entry":[{},"<\/employee>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Then, match the first assertion, execute the attribute value\u201c(@sex=\u2018Male\u2019 and @title=\u2018Mr\u2019) or (@sex=\u2018Female\u2019 and (@title=\u2018Mrs\u2019 or @title=\u2018Miss\u2019))\u201d on the above obtained DOM element. If the returned value is false, then the assertion meets the condition and will be triggered with \u201cThe value of title does not match the value of sex\u201d as a validation result output. When matching the second assertion, then execute test attribute value \u201c@serialNumber and @deptId.\u201d The returned value is true, thus the assertion does not meet the condition and will not be triggered.","According to one embodiment of the present invention, validation may be performed for the whole XML instance document with all or part of the rules, or validation may be performed for part of the XML instance document with all or part of the rules. After data objects to be validated and rule objects are determined, the validation process may be similar to the above process, e.g., for the data objects to be validated, to execute the rule objects in a certain execution context.","Regarding the user defined function , except for the native XPath function, users may extend their customized function to implement a special requirement. The user defined function  is used to help extract data from XML document, and also help populate the rule execution context and evaluate the assertions of the rule.","An output generator registry  includes different output generators that may be customized by users based on their requirements.","A user-defined output generator  is for output defined by a user, and is registered into the output generator registry  to help generate the validation report.","The validation report  is the final execution result of the constraints rules applied to the XML document. The result may be generated according to the user-defined output.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 6","b":"201"},"At step , populate the target object model. An XML parser may be used to parse XML documents based on the W3C DOM standard, represent XML data as an object tree in memory, and provide an object-oriented interface to access XML data object in the object tree.","At step , extract the elements, e.g., an XML data object, to be validated using user-defined data extracting criteria. The user may select the elements to be validated from a target XML document according to user-defined data extracting criteria. For example, some elements may be extracted which have a same type from a whole DOM tree, etc.","At step , determine the constraints semantics, e.g., determine rules for validation. Based on the above achieved XML data instance document, determine the real constraints semantics. For example, peoples' first names and last names must be alphanumeric and cannot start with a digit.","At step , express the constraints using XML data extracting language, e.g., XPath, etc., to form a Schematron document. These constraints semantics may be expressed using XML data extracting language, e.g. XPath 1.0. For example, a constraint about \u201cCan contain only alphanumeric and can only start with an alphabet\u201d may be expressed as the following XPath statement:\n\n","At step , parse the Schematron document to populate the rules object model. In addition to step , this step parses the constraints rules document according to related different Schematron version parser, and then populates the rules object model in memory which may be used to evaluate the XML instance document.","At step , iterate to parse the Schematron document. If these constraints are expressed as multiple separated rules or these rules are based on different Schematron versions, then it may repeat the execution of step .","At step , select the necessary rules. If a user just needs part of the rules of the rules object model, the unused rules objects may be filtered out from the entire parsed rules object model. This step may help reduce the number of rules which may be triggered so that the execution performance may be improved. For example, if one Schematron rule document contains the WSDL elements related rules and the XSD elements related rules, and the XML instance document only contains the WSDL elements, then the XSD related rules of the Schematron document need not be triggered and thus may be filtered out. The filter rules may be based on the business semantics or defined by a user.","At step , populate the consolidated rules object model. Based on step  and step , a consolidated rules object model including the appropriate rules may be obtained.","At step , populate the rule execution context. Each rule has its execution context. This step is to help construct the context of rules and maintain the context hierarchy. To populate the rule execution context, it is first determined whether the corresponding context for the rule exists in a rule context registry; if yes, it is directly extracted for use; otherwise, the context is calculated and registered into the context registry.","A detailed procedure may be based upon the following method. Context CA, CB, CC and CD correspond to the context of a rule set A, B, C and D. For example, context CA may be expressed as \u201c\/em:employees\/em:employee\/em:assets\u201d, representing all the assets information under an employee element. Then, rule set A may be executed for all assets information in the context. The context may also be registered to the context registry for reuse.","Context CB may be expressed as:","\u201c\/em:employees\/em:employee\/em:assets\/em:asset[@status=\u2018active\u2019]\u201d, representing all the assets information with active status under an employee element. Context CD may be expressed as \u201c\/em:employees\/em:employee\/em:assets\/em:asset[@status=\u2018unused\u2019],\u201d representing all the assets information with unused status under an employee element. The elements in context CB and CD may be based on one subset of the context CA. Then, the context CA in the registry may be used for calculating the context CB and CD.","Context CC may be expressed as:","\u201c\/em:employees\/em:employee\/em:assets\/em:asset[@status=\u2018active\u2019]\/em:complianceInfo\/em:check\u201d, representing all the assets security checking information with active status under an employee element. The elements in context CC may be based on one subset of the context CB. Then, the context CB in the registry may be used for calculating the context CC.","At step , extract rule execution context from the context registry. If the rule execution context has already been populated, it may be extracted from the rules execution context registry.","At step , register the populated rule execution context. If the rule execution context is populated for the first time, the populated execution context may be registered into the context registry for sharing and reuse.","At step , perform the rules which conformed to the fact. Based on the populated context from step , this step is to perform the concrete rules which conformed to the fact. When a policy is triggered, the corresponding output module will be triggered.","At step , if one rule needing fail-fast mechanism is fired (e.g., triggered), then this execution process exits.","At step , generate the validation execution output. According to step , this step is to generate the validation execution output according to a user-defined output format.","According to a further embodiment of the present invention, a system for validating an XML document is provided and includes a memory. The system includes a data parsing module configured to parse at least one XML document to be validated, and to represent XML data in the document as at least one data object model in the memory; a rule parsing module configured to parse at least one rule document and create a rule object model in the memory; an extracting module configured to extract at least part of the data objects from the data object model and extract at least part of the rule objects from the rule object model; and a validation module configured to perform validation in a corresponding context for the at least part of data objects based upon the extracted at least part of rule objects.","According to an embodiment, the rule document is a Schematron document, and rule objects in the rule object model maintain a hierarchical relationship corresponding to elements in the Schematron document.","According to an embodiment, each element in the XML document is mapped to a data object in the data object model, and the data objects maintain a hierarchical relationship corresponding to elements in the XML document to be validated.","According to an embodiment, the extracting module is configured to extract at least part of rule objects from the rule object model according to predefined rule extraction criteria.","According to an embodiment, the extracting module is configured to extract at least part of data objects from the data object model according to predefined data extraction criteria.","According to a further embodiment, the system may further comprise an execution context generating module configured to generate an execution context for at least one rule object of the extracted rule object and register the execution context to a context registry, and the validation module is configured to perform validation for the at least one rule object in the execution context.","According to yet another embodiment, the system may further include a searching module configured to search an execution context for one rule object of the extracted rule objects from a context registry, and the validation module is configured to perform validation for the one rule object in the execution context.","According to an embodiment, the extracting module is configured to extract at least part of the rule objects from the rule object model and at least part of the data objects from the data object model according to a predefined function.","According to an embodiment, the execution context generating module is configured to generate the execution context for at least one rule object according to a predefined function.","According to an embodiment, the validation module is configured to stop validation in response to a fail-fast rule being triggered.","According to embodiments of the present invention, the method and system is provided for high performance and flexible Schematron based XML validation. One embodiment of the invention leverages data extracting and context sharing. One step execution to avoid the two transformations based on XSLT may be utilized, so that performance may be improved. The context of rules is shareable, so that the rule expressions may be read easily, and the execution scope of a rule may be reduced. Then the performance of rule execution may be improved. In one embodiment of the invention, the shareable rule execution context is the concrete execution scope of each rule applied to the XML instance document. These rule execution contexts may be marked as hierarchical and shareable.","According to an embodiment of the invention, based on an in-memory rule object model and extended validation engine, the fail-fast Schematron validation with high performance may be achieved. The foundational XML data extracting and XML parser may be used to implement the fail-fast mechanism. The XSLT based implementation continues to execute the transformation process in spite of the real execution situation.","According to an embodiment of the invention, a rule execution engine is optimized with sharable context and accurate rule matching.","According to an embodiment of the invention, a flexible mechanism is provided for partial validation by leveraging an in-memory rule object model and XML data model for data and rule extracting to use user-defined target XML elements set and fine grained units in Schematron document (rule and assertion). For example, a legacy system includes one previous Schematron compliant with version 1.5, while the newly-created Schematron document which uses the ISO Schematron version leverages the legacy Schematron 1.5 rules. In this situation, the hybrid Schematron versions may work together. It may impose a challenge to accommodate with the hybrid Schematron rules which use different Schematron versions for XSLT based Schematron implementation.","Flexible validation may be provided using selected fine grained units of Schematron document. If a user just needs part of the rules object model, the unused rules objects may be filtered out from the entire parsed rules object model. This step may help reduce the rules that will be triggered so that the execution performance may be improved. For example, if one Schematron rule document includes WSDL elements related rules and XSD elements related rules, and the XML instance document only contains the WSDL elements, the XSD related rules of the Schematron document may be filtered out. The filter rules may be based on the business semantics or may be defined by a user.","The present invention also provides a storage media, which comprises instructions for carrying out the method according to the invention.","While the invention has been illustrated and described by referring specifically to the preferred embodiments, those skilled in the art will understand that various changes may be made thereto both in form and detail without departing from the spirit and scope of the invention.","As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electromagnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the present invention are described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer-readable medium that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable medium produce an article of manufacture including instruction means which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","A data processing system suitable for storing and\/or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code, bulk storage, and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.","Input\/output or I\/O devices (including but not limited to keyboards, displays, pointing devices, etc.) can be coupled to the system either directly or through intervening I\/O controllers.","Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems, cable modems and Ethernet cards are just a few of the currently available types of network adapters.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art based upon the present description without departing from the scope and spirit of the invention. The embodiment was chosen and described to explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as suitable for a particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
