---
title: Systems and methods for unified remote control access
abstract: A first computing device is connected to a second computing device over a conventional communication network or other switching device or network using a predetermined communications protocol or a unified protocol. The unified protocol enables remote control of a display device by abstracting out differences in protocols, thereby eliminating the need to develop different interfaces between systems. By implementing the system as COM objects, other available protocols can be dynamically integrated. Upon connection of the first computing device to the second computing device, the screen of the second computing device is displayed on the screen of the first computing device. The first computing device is capable of watching or monitoring the second computing device, or the first computing device can control the second computing device. The first computing device can switch between the watching/monitoring mode and the controlling mode in a reversible or toggleable manner.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06928464&OS=06928464&RS=06928464
owner: Microsoft Corporation
number: 06928464
owner_city: Redmond
owner_country: US
publication_date: 20010430
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This invention relates in general to support systems performed by connected computers. More particularly, this invention relates to the access and control of connected computer systems by hiding the details of a particular implementation to allow technology-specific components to plug in.","Supporting software products can be a frustrating experience for all involved: the customer, the product support technician and the software developer. Presently, placing a call to the \u201cTechnical Support\u201d department of a software development company typically involves a seemingly endless navigation through telephone menus, and, at times, a very long wait to talk to a technician. Then, a customer explains what he sees, and a technician tells the customer what to do and then asks, \u201cNow what do you see?\u201d This process is prone to communication mishaps and miscommunications. Frequently, some critical miscommunication will occur and the entire series of events will have to be repeated.","Similar situations exist in training scenarios. Firstly, physically gathering trainer and trainee in the same physical location can be costly and time-consuming, especially for multi-site companies. Secondly, once a training session is initiated, typically the screen of the trainer's computer is enlarged and projected for the trainees to see. The trainer lectures and points with a laser pointer, for example, and the trainee follows as best he can, trying to keep both the trainer's screen and his own screen in sight at all times. Frequently, the trainee gets lost or strikes the wrong keys or misses a critical navigation and the trainee's screen is no longer the same as the trainer's displayed screen. The session is stopped while the mistake is determined and corrected. If a number of trainees are participating in the session, the other trainees are also typically delayed.","Furthermore, network administrators often are informed of system problems or need to make routine adjustments. Frequently, the administrator must physically travel to the user's desktop to see the malfunction in progress or to make changes directly to the user's system or desktop. Since many companies have several locations or are spread out over an extended physical plant, a considerable amount of time is typically spent in physically transporting personnel to the required location.","Each of these scenarios translates into major expense for businesses. It strains credulity to imagine a company that never needs to train employees. A majority of businesses today have networked computer systems using a number of different commercial software systems and \u201chelp desks\u201d are to be found in more and more businesses. In particular, software development companies find product support to be a major expense. As software becomes more and more complex, expenses will increase, and customer and technician frustration will mount.","Remote control technology exists for connecting to and controlling a user's desktop from a remote location. Current remote control technology, however, is not capable of transferring control of a desktop or computing device back and forth between remote users while maintaining a common desktop between the users regardless of underlying platforms. Current remote control technology does not permit a reversible connection in which a mirror image of one user's computing device is displayed on the computing device of another and in which control of one's computing device is transferred to the second user.","Currently, each remote control technology uses its own platform with its own operating system, remote control software and protocol. Examples include Terminal Services\u00ae for the Windows\u00ae 2000 server, the NetMeeting\u00ae remote control used in Win9x and Windows\u00ae 2000 Pro and Symantec's PCAnywhere\u00ae. Accordingly, different interfaces must be developed for each different operating system and protocol, requiring developers to write code specific to a particular protocol or interface.","Thus, a need exists for an interactive system that overcomes the drawbacks of the prior art and allows a user to remotely access and control the desktop of another user without the necessity of developing a different interface for each protocol and operating system.","In the present invention, a first computing device is connected to a second computing device over a communication network or other switching device or network using a communications protocol. Upon connection of the first computing device to the second computing device, the screen of the second computing device is displayed on the screen of the first computing device. The first computing device is capable of watching or monitoring the second computing device, or the first computing device can control the second computing device. The first computing device can switch between the watching mode and controlling mode in a reversible or toggleable manner.","The present invention is directed to abstracting out the differences in communication protocols and providing a unified standard for connecting one computing device to another. The present invention determines the type of platform being controlled and uses the appropriate remote control interface to control it. Thus the user has a common \u201cremote desktopping\u201d experience without regard to the user's workstation platform. The present invention can also be adapted to receive (via for example, a plug-in) new interfaces and protocols and automatically operate with the new interfaces and protocols. The present invention provides an advantage of eliminating the need for a developer to write code specific to a particular protocol or interface. In accordance with the present invention, application code can be written to a single unified interface.","Overview",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","b":["20","22","30","40","45","20","30","40","45","30","30","20"]},"In the present invention, a first computing device  is connected to a second computing device  or a server  using an interface (e.g., a network interface implemented in software) over a conventional communication network or other switching device or network  using a communications protocol. The interface is preferably implemented in software and can reside in a server , the network , in a computing device ,  or be standalone. Although  shows the first computing device  connected to the same network as the second computer device  it is understood that the present invention encompasses also an environment in which the first and second computing devices are personal computers (PCs) connected to the Internet or devices on different networks connected via the Internet.","After the first computing device  is connected to the second computing device , the screen contents of the second computing device  are displayed at the first computing device . The first computing device  can then watch or monitor the second computing device  or the first computing device  can control the second computing device . The first computing device  can switch between the watching\/monitoring mode and controlling mode in a reversible or toggleable manner. It is contemplated that the present invention can also be used to interconnect a computing device (e.g., device  or ) with a server , and that access and control is reversibly provided in a similar manner, if desired.","A communications protocol is used to transfer data and other information between the computing devices. A computing device requests a connection with another computing device. The request contains the communications protocol that is desired. If the communications protocol is known (e.g., stored in a library at a server or a computing device), then that communications protocol is used in the subsequent connection and communication. The library can store a plurality of predetermined protocols, and the library can be modified to add, delete or change stored protocols.","In accordance with the present invention, the interface determines the type of platform being controlled and uses the appropriate remote control protocol to control it. For example, a first plug-in implements remote desktopping when the first plug-in remote control is available. The first plug-in interacts with the associated application programming interface in order to manage the state of the server with respect to remote control. A second plug-in implements remote desktopping when the first plug-in remote control is unavailable. The present invention also provides the ability for third parties to plug-in the third-party's remote desktopping technology on the server and the client. Thus the present invention is adapted to receive (via, for example, plug-in) new protocols and to automatically operate with the new protocols.","Additionally, the implementation of the disclosed invention may be wrapped by a COM (Component Object Model) layer, allowing any language which supports COM to access the functions, thus enabling traditional development environments such as Visual Basic, C\/C++, etc. to use the present invention. It is additionally contemplated that any standardized component interface abstraction layer can be used in accordance with the present invention to provide a modular, pluggable, standardized abstraction layer. Exemplary implementations include, but are not limited to, Java and CORBA. Thus, the use of component technology enables additional protocols or interfaces to be plugged in dynamically without recompiling the application on the client or on the server.","The foregoing and other aspects of the present invention will become apparent from the following detailed description of the invention when considered in conjunction with the accompanying drawings.","Computing Environment","As described above,  illustrates a high level example of a distributed computing environment in which the invention may be implemented. Each of the clients and servers are described in further detail below.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2","b":["40","40","60","62","64","66","40","68","70","72"]},"The client  runs an operating system that supports multiple applications. The operating system is preferably a multitasking operating system that allows simultaneous execution of multiple applications. The operating system employs a graphical user interface windowing environment that presents the applications or documents in specially delineated areas of the display screen called \u201cwindows.\u201d One preferred operating system is a Windows\u00ae brand operating system sold by Microsoft Corporation, such as Windows\u00ae 95 or Windows\u00ae NT or other derivative versions of Windows\u00ae. It is noted, however, that other operating systems that provide windowing environments may be employed, such as the Macintosh operating system from Apple Computer, Inc. and the OS\/2 operating system from IBM.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3","b":["100","100","100","100"]},"The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like.","The invention may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment, program modules and other data may be located in both local and remote computer storage media including memory storage devices.","With reference to , an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Each server and client can incorporate the computer  in the environment . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus (also known as Mezzanine bus).","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as ROM  and RAM . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk , such as a CD-ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media, discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . In addition to the monitor, computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in FIG. . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Accessing A First Device From A Second Device","In accordance with the present invention, the interface determines the type of platform being controlled and uses the appropriate remote control protocol to control it. For example, when used with the Terminal Services\u00ae Remote Desktop Protocol (TSRDP) Plug-In and the NetMeeting\u00ae Plug-In, the TSRDP may implement remote desktopping when Terminal Services\u00ae remote control is available. The TSRDP Plug-In interacts with the Terminal Services\u00ae application programming interface in order to manage the state of the server with respect to remote control. The NetMeeting\u00ae Plug-In then implements remote desktopping when Terminal Services\u00ae is unavailable. The present invention also provides the ability for third parties to plug-in the third-party's remote desktopping technology on the server and the client. Thus the present invention is adapted to receive (via, for example, plug-in) new protocols and to automatically operate with the new protocols.","As described above with respect to , after the first computing device  is connected to the second computing device  (or server , although the example described herein is directed to the two computing devices , ) via an interface (e.g., a network interface implemented in software and residing in a server , the network , in a computing device , , or standing alone), a server , and a network , for example, the screen contents of the second computing device  are displayed at the first computing device . The first computing device  can then watch or monitor the second computing device , or the first computing device  can control the second computing device . The first computing device  can switch between the watching\/monitoring mode and controlling mode in a reversible or toggleable manner.","Examples of well known computing devices include but are not limited to personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, or desktops. Although  depicts the first  and second computing devices  as clients on the same network, , the first  and second computing devices  can be connected to different networks and establish a connection through the Internet. Likewise, the first  and second computing devices  can be PCs communicating via the Internet. Likewise, one computing device could be a PC connected to the Internet and the other device could be a networked desktop, also connected to the Internet. These examples are given by way of illustration and should not be construed to limit the invention to only these environments.","More particularly, in the case where the first computing device  is to communicate with the second computing device , the second computing device  sends a request to the network or other interface  to initiate a connection with the first computing device  using whatever messaging system the second computing device  supports. The request includes identification of a desired communications protocol. Interface  ascertains which protocol is required and automatically uses (plugs-in) that protocol. For example, if TSRDP and NetMeeting\u00ae are being used in accordance with the present invention, the TSRDP Plug-In manages server  and devices ,  when Terminal Services\u00ae remote control is available, the NetMeeting\u00ae Plug-In manages server  and devices ,  when Terminal Services\u00ae is unavailable and a third-party's plug-in manages server  and devices ,  when the third-party's remote control is used. In a preferred embodiment the plug-ability of the interface  is achieved using a COM interface, although it should be understood that any appropriate implementing technology including but not limited to Java or CORBA could be used without violating the spirit and scope of the invention.","The interface  forwards the request for connection to the first computing device . This request for connection initiates a session using either the desired communication protocol if it is known by the first computing device, server, or network or, if it is not known, a legacy protocol that has been previously generated and stored in a memory Applications that have been inherited from languages, platforms, and techniques earlier than current technology are called legacy applications. Many companies are migrating their legacy applications to new technologies that utilize open or standard programming interfaces, making it easier to update applications without having to rewrite them entirely and will allow use of the applications on any operating system. A session is defined as the period in which the second computing device  is available for connection by the first computing device . A session remains active even after the calling application exits. The first computing device  receives the request and establishes a connection to the second device . Preferably, before the connection is established, both the first computing device  and the second computing device  are authenticated using authentication procedures that are well known in the art.","Upon connection of the first computing device  to the second computing device  the screen contents (e.g., a screen shot) of the second computing device  are displayed on the display of the first computing device . The first computing device  is capable of displaying the screen contents of a second computing device  or the first computing device  is capable of displaying the screen contents of the second computing device  and controlling the second computing device  in a reversible connection. By \u201creversible connection\u201d it is meant that the first computing device  can merely \u201clisten\u201d, which means to watch or monitor the second computing device  (e.g., while the user of the second computing device  works on his computing device), or the first computing device  can enter \u201ccontrol\u201d mode, in which the first computing device  acts upon and controls the second computing device , as well. The first computing device  can switch from \u201clisten\u201d to \u201ccontrol\u201d mode in a reversible or toggleable manner.","If the first computing device  is in listen mode and wishes to enter into control mode, the first computing device  sends a request to enter into control mode to the second computing device . Upon receiving permission from the second computing device  the first computing device  enters control mode. Upon completion of the requested operation, the first computing device  relinquishes control and terminates the session.","According to another aspect of the invention, first computing device  and second computing device  are connected to server  via an interface such as a network interface implemented in software and residing in a server . In accordance with this aspect of the present invention, server  may send display information to first computing device  and second computing device . Subsequently, first computing device  may request contents of the display of the second computing device , and monitoring and control thereof.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 4","FIG. 1","FIG. 1"],"b":["200","45","1","40","30","20"]},"At step , the first computing device receives the request and subsequently requests a connection to the second device at step . Optionally, before the connection is established, both the first computing device and the second computing device are authenticated at step  using conventional authentication procedures.","After authentication, the first computing device connects to the second computing device using a communications protocol, at step . A unified communications protocol is retrieved from a memory or storage device and used in the connection if the desired communications protocol from the request is unknown. If the desired communications protocol is known (e.g., it is stored in a library of predetermined protocols), then the connection is made using the desired communications protocol.","Upon connection of the first computing device to the second computing device at step , the screen contents or display of the second computing device are displayed on the screen of the first computing device at step . At this point, at step , the first computing device enters its desired mode (e.g., a \u201clisten\u201d mode).","The first computing device is capable of displaying or controlling the second computing device in a reversible connection. By \u201creversible connection\u201d it is meant that the first computing device can \u201clisten\u201d (i.e., watch or monitor while the user of the second computing device works on his computing device) or the first computing device can enter \u201ccontrol\u201d mode in which the first computing device acts upon and controls the second computing device. The first computing device can switch from \u201clisten\u201d to \u201ccontrol\u201d mode in a reversible or toggleable manner.","If the first computing device is in listen mode (e.g., at step  in ) and then seeks to enter into control mode, at step , the first computing device sends a request to enter into control mode to the second computing device. The second computing device grants permission at step . Upon receiving permission from the second computing device, the first computing device enters control mode at step . If permission is not granted to switch modes, the first computing device remains in the initial mode (e.g., in this case, the listen mode). Moreover, if the first computing device did not request a mode switch, processing remains at step  until termination at step .","In control mode, the first computing device is capable of controlling the second computing device. Optionally, the user of the second computing device is able to see what the first computing device is doing or alternately, the screen of the second computing device is blanked. The first computing device can then transfer control of the second computing device to another user, if desired. Upon completion of the requested operation, the first computing device relinquishes control at step  and terminates the session, or optionally, returns to the initial mode (e.g., in this case, the listen mode).","Thus it is seen that the present invention includes an interactive system that builds on and expands upon available remote desktop and messaging systems technology to provide messaging and access to and control of a computing device such as an end-user desktop, for example, from any remote site.","The systems and methods of the present invention can be embodied in an interactive \u201chelp desk\u201d system. In accordance with the present invention, the help desk would be able to view and\/or control the client system. According to another aspect of the invention, the remote control of the second device is passed from one device to another (e.g., one help desk technician passes the remote control from his computing device to another help desk technician's computing device).","More particularly, in an embodiment of the invention incorporated into a help desk scenario, a client (e.g., device  in ) sends a message to the help desk (e.g., device ) requesting assistance. The message is sent using whatever messaging system the client has. Basic information about the client device  can be sent along with the request for help message. A help ticket or request is generated and a message is routed to a technician at the help desk or technician's desktop. After preferred authentication procedures are completed, authenticating both client and technician, the technician requests a connection to the client's device  (i.e., the client desktop). Upon receiving permission, a connection is established between the two desktops using either a predetermined communications protocol or a unified protocol, described further below.","In accordance with the present invention, the help desk technician at his desktop (e.g., device ) is able to view and\/or control the client system at the client desktop (e.g., device ). After the connection is made, the technician's desktop  mirrors the desktop of the client . The technician can now observe exactly what is happening on the client's desktop . The technician at desktop  can request permission to control the client's desktop . When permission to control the client's desktop  is received, the technician can then perform the desired functions. Upon completion, control is returned to the client's desktop . The help session is then ended.","Moreover, the systems and methods of the present invention can be embodied in a teaching scenario, whereby a remote teacher and student could interact and both teacher and student would experience substantially identical desktops. In this embodiment, control is transferred between the computing devices of the teacher and the student.","Furthermore, the systems and methods of the present invention can be embodied in network administration, whereby a network administrator could implement changes on a remote desktop from the administrator's location, eliminating the necessity of traveling to the client location.","As another example, a user can send a message requesting assistance to a technical support department of a software development company. Upon receipt of the message, the support technician can request permission to control the desktop of the user requesting assistance. Upon receipt of permission to access the desktop, the connection is established. Upon connection to the requested party, the desktop of the user can be displayed upon the desktop of the support technician and optionally, controlled by the support technician.","Multiple different modes of control are contemplated in accordance with the present invention. One mode is the control mode, in which what is happening on a first device (e.g., desktop ) is also performed and displayed on another device (e.g., desktop ). In another type of control mode, desktop  is blanked, so that desktop  cannot view what desktop  is doing to desktop . In a listen mode, control is retained by desktop  and desktop  (e.g., the technician's desktop) mirrors what is happening on desktop .","According to another aspect of the invention, the remote control of the second device is passed from one system to another (e.g., a technician at desktop  passing control of desktop  to another technician on desktop  for additional assistance).","Protocol Unification","The communication protocol used between the two computing devices can be a standard communication protocol such as those used by Microsoft's NetMeeting\u00ae or Terminal Services\u00ae or Symantec's PCAnywhere\u00ae or another communication protocol, now existing or one developed in the future. Known protocols are stored in a storage device or memory, such as a protocol library residing on a server. The protocol library can be modified to add, delete, or change protocols residing therein.","In accordance with the present invention, the computing device receiving a connection request determines the type of platform being controlled (i.e., determines the communications protocol to be used) and uses that protocol in communications, enabling users to have a common \u201cremote desktopping\u201d experience without regard to the user's workstation platform. This objective is achieved by integrating current technologies and enabling third-party technologies to be plugged-in.","COM (Component Object Model) is technology developed to enable one piece of software to communicate with another piece of software using a vtable (virtual function table) to define methods. In COM, all interfaces have unique identifiers. The interfaces define the functionality and the objects, once instantiated, define functionality. The implementation of the disclosed invention may be wrapped by a COM layer, allowing any language which supports COM to access the functions, thus enabling traditional development environments such as Visual Basic, C\/C++, etc. to use the present invention. Additionally, the use of component technology enables additional protocols or interfaces to be plugged in dynamically without recompiling the application on the client or on the server. Using COM, objects (or classes) and their methods and associated data are compiled into binary executable modules, with a dynamic link library or EXE file name suffix.","In a preferred embodiment the plug-ability of the interface is achieved using a COM interface, although it should be understood that any appropriate implementing technology including but not limited to Java or CORBA could be used without violating the spirit and scope of the invention.","Alternately, if the communication protocol to be used is not recognized by the system (i.e., the communication protocol is not stored as a predetermined protocol in the protocol library), then the system retrieves a unified protocol for use in the subsequent communications. The unified protocol can be stored in a predetermined protocol library or another memory or storage device.","A unified protocol is created by abstracting common elements out of the protocol(s) that are desirably used by the computing devices, and then generating a protocol using the common elements.  is a schematic diagram showing an exemplary abstracted protocol (protocol C), and the protocols A and B from which common elements were extracted, in accordance with the present invention. In , a record  of protocol A comprises three fields: an identification field, a machine type field, and a user id field. A record  of protocol B comprises four fields: an identification field, a user id field, a password field, and a data field. Protocol C represents the unified protocol. Protocol C is generated by extracting the common elements from protocols A and B and inserting them into a new record  with any additional fields needed to communicate. In this manner, if a first computing device is designed to run on a platform supporting protocol A and a second computing device is designed to run on a platform supporting protocol B, the two computing devices can still communicate with each other using a unified protocol comprising protocol A and B's common elements. Thus, systems running different operating systems and protocols can communicate with each other without the need for a unique interface to be developed for each different combination of operating system and protocol ahead of time and off-line.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 6","FIG. 4"],"b":["400","210"]},"At step , the computing device (referred to in this example as the first computing device) determines if the protocol is one of the predetermined protocol(s) stored in a library of protocols. If so, then that protocol is used to establish the connection, at step , and communication proceeds. However, if the protocol is not one of the predetermined protocols stored in the library, then a unified protocol is retrieved at step , by abstracting common elements out of the protocol(s) that are desirably used by the computing devices and using the common elements in a newly created protocol. This unified protocol may be generated and incorporated into the invention by a developer having knowledge of the characteristics of the unrecognized protocol. Similarly, in an alternate embodiment, a third-party, e.g., the designer of the unrecognized protocol, provides information to be incorporated into the infrastructure of the interface of the invention by differentiating between and providing information about what is common and what is unique about the communication protocol relative to the interface of the invention. In yet another alternate embodiment, the unified protocol may be generated by a module specially created to extract common elements out of the unrecognized protocol, in which case, the computing device receiving the connection request acts as a protocol generator as well as an element extractor. After retrieving the previously generated or received unified protocol, the unified protocol is then used to establish the connection between the two devices, and communication proceeds.","Thus, the present invention abstracts out the differences in communication protocols and provides a unified standard for connecting one computing device to another. According to one aspect of the present invention, a single remote control interface is provided in a computing device that is requested to connect by and to another computing device. The remote control interface extracts elements that are common to communication protocols, such as identification and user id, discards the other non-common elements, and generates a new, common \u201cunified\u201d protocol based on the common elements. In this manner, remote control capability is provided for systems running different operating systems and protocols, eliminating the need to develop different interfaces for the various operating systems and protocols. Hence, the present invention provides an advantage of eliminating the need for a developer to write code specific to a particular protocol or interface. Thus, in accordance with the present invention, application code can be written to a single unified interface.","The various techniques described herein may be implemented with hardware or software or, where appropriate, with a combination of both. Thus, the methods and apparatus of the present invention, or certain aspects or portions thereof, may take the form of program code (i.e., instructions) embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other machine-readable storage medium, wherein, when the program code is loaded into and executed by a machine, such as a computer, the machine becomes an apparatus for practicing the invention. One or more programs are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system. However, the program(s) can be implemented in assembly or machine language, if desired. In any case, the language may be a compiled or interpreted language, and combined with hardware implementations.","The methods and apparatus of the present invention may also be embodied in the form of program code that is transmitted over some transmission medium, such as over electrical wiring or cabling, through fiber optics, or via any other form of transmission, wherein, when the program code is received and loaded into and executed by a machine, such as an EPROM, a gate array, a programmable logic device (PLD), a client computer, a video recorder or the like, the machine becomes an apparatus for practicing the invention. When implemented on a general-purpose processor, the program code combines with the processor to provide a unique apparatus that operates to perform the versioning functionality of the present invention.","It is noted that the foregoing examples have been provided merely for the purpose of explanation and are in no way to be construed as limiting of the present invention. While the invention has been described with reference to various embodiments, it is understood that the words which have been used herein are words of description and illustration, rather than words of limitations. Further, although the invention has been described herein with reference to particular means, materials and embodiments, the invention is not intended to be limited to the particulars disclosed herein; rather, the invention extends to all functionally equivalent structures, methods and uses, such as are within the scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing summary, as well as the following detailed description of preferred embodiments, is better understood when read in conjunction with the appended drawings. For the purpose of illustrating the invention, there is shown in the drawings exemplary constructions of the invention; however, the invention is not limited to the specific methods and instrumentalities disclosed. In the drawings:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
