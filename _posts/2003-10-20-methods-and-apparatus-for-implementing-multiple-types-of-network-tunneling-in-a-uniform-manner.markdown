---
title: Methods and apparatus for implementing multiple types of network tunneling in a uniform manner
abstract: A uniform method for implementing multiple tunneling protocols in a switch or router is disclosed. The method is based on the realization that although the tunneling protocols are very different, they do share a similar overall structure which can be exploited to create a unified method of dealing with multiple protocols. By using similar data structures to implement multiple protocols, the invention makes data management and programming simple and, therefore, cost effective. According to the invention, all tunneling protocols are abstracted as the mapping of input L2 or L3 streams with output L2 or L3 streams. Mapping is provided by a finite set of tunnel interfaces. The tunnel interfaces map the input streams to output interfaces. As traffic streams flow through these interfaces, they are processed according to defined attributes of these interfaces.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07680943&OS=07680943&RS=07680943
owner: Transwitch Corporation
number: 07680943
owner_city: Shelton
owner_country: US
publication_date: 20031020
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","BRIEF DESCRIPTION OF THE APPENDIX","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Field of the Invention","The invention relates to datacommunications. More particularly, the invention relates to methods and apparatus for tunneling different types of data packets over different types of networks.","2. State of the Art","Tunneling is a process whereby a data packet is encapsulated in another packet before traversing a network. There are two primary uses for tunneling. One use is to transport one type of packet over a network designed for another type of packet, e.g. Ethernet over ATM. Another application for tunneling is referred to as Virtual Private Networking, a process whereby a secure encrypted (or non-secure) connection is created across a public network through the use of tunneling.","Currently there are a wide variety of tunneling protocols. Some are platform and\/or network dependent. Among the most popular protocols are: IP (Internet Protocol) over IP, IP over MPLS (multiprotocol label switching), Ethernet over MPLS, and L2TP (layer two tunneling protocol).","A Virtual Private Network (VPN) consists of two or more nodes connected by \u201cvirtual links\u201d, i.e. tunnels, through a public network such as the Internet. From the point of view of the nodes, the tunnel operates as a point to point link and the tunneling protocol operates as a link layer protocol.","By definition, a tunnel exists between two nodes. One node is referred to as the entry node and the other is referred to as the exit node. A tunnel is unidirectional. Bi-directional tunneling is achieved by pairing two tunnels. These are referred to as the \u201cdirect tunnel\u201d and the \u201creverse tunnel\u201d. The two tunnels may traverse different nodes in the network or the tunnels may be symmetrical, i.e. traverse the same nodes in both directions.","Generally speaking, the tunneling process involves the processing of headers attached to data packets. For example, at the entry node one or more tunnel headers are pre-pended to the data packet. As the packet traverses the tunnel, intermediate nodes in the tunnel process the packet according to the tunneling protocol. For example, in IP over IP tunneling, intermediate nodes perform IP header processing and IP packet forwarding. In an MPLS tunnel, intermediate nodes perform MPLS label processing and MPLS packet forwarding. At the exit node, destination node processing is performed. For example, in an IP over IP tunnel, the exit node reassembles IP packet fragments and processes the reassembled packets according to their original (inner) headers. The processing of headers or other packet information is performed with the aid of a database. The header information is used as a key to lookup a matching entry in the database to yield an output port. The following is a more detailed explanation of how IP, MPLS, and L2TP tunneling operate.","IP over IP Tunneling","Each node in an IP tunnel maintains a \u201cForwarding Information Base\u201d (FIB) which contains a plurality of entries. Each entry includes an IP address of a host or an IP prefix of one or more networks as well as information about the \u201cNext Hop Routers\u201d through which the destination host or network can be reached. (As used herein, the term router is meant to include switches as well as routers.) The Next Hop information consists of an IP address of the Next Hop router, the IP interface on which the Next Hop Router is reachable, and possibly more information such as a Layer  address. The FIB entries are typically built based on routing information disseminated dynamically by IP Routing Protocols. However, entries can also be built based on information statically configured into the router. Some routers may have multiple FIB.","IP packet forwarding is performed hop by hop. Each router in the tunnel uses the FIB information to find the best possible Next Hop router to forward an IP packet on its way to the final destination. The identity of the best possible Next Hop Router for forwarding an IP packet is determined by comparing the packet's destination IP address with the IP addresses and prefixes in the FIB. The FIB entry having the IP address or prefix which matches or most closely matches the destination IP address of the packet identifies the best possible Next Hop router. This comparison is referred to as the Longest Prefix Match. The Longest Prefix Match yields an output \u201cIP interface\u201d which is used to forward the packet.","The \u201cIP interface\u201d (IF) is an abstraction of the IP functions on a physical or logical port of a router or switch. It leads to the identification of the egress port through the binding relation with the Layer 2 interface and performs the needed IP functions to pass the packet through the port. The IF is usually configured by the router operator with information which is relevant to the IP protocol processing performed by the router.","Each router used in IP over IP tunneling also maintains an \u201cIP Tunnel Interface\u201d (TIF) for each tunnel serviced by the router. The TIF is an abstraction of IP over IP tunnel functions on a physical or logical port of a router. It identifies the entry and exit nodes for the tunnel. Usually, it is configured by the router operator.","Tunnels may be static or dynamic. A static tunnel uses the same set of routers and takes the same route through the network all the time. A dynamic tunnel can take different routes through the network based on network conditions or tunnel programming. Most IP tunnels are dynamic and use the best route available based on network congestion or time of day.","When a packet reaches its final destination, the exit node router strips the tunnel header(s) from the packet. The remaining inner header is an IP header, and therefore, the packet is passed to an IP processing engine which performs an IP lookup on the inner IP header, i.e. the IP destination address. This lookup may yield an outgoing interface, if the packet is to be forwarded, or may indicate local consumption, if the router itself is the final destination. The router itself may be the final destination when the packet contains command\/control information.","MPLS Tunneling","The key concept in MPLS tunneling is identifying and marking packets with labels and forwarding them to a router which then uses the labels to forward the packets through the network. The labels are created and assigned to packets by a Label Distribution Protocol (LDP) based upon the information gathered from existing routing protocols or some other method.","An MPLS tunnel includes a plurality of interconnected Label Switch Routers (LSRs). At least some of the LSRs are coupled to Label Edge Routers (LERs). An MPLS tunnel is also referred to as a Label Switched Path (LSP) from an input LER through LSRs to an output LER. When a packet arrives at an LER, the LER extracts the datagram (the data portion of a packet) and the routing information from the packet and assigns a label to the datagram based on routing information. The datagram with the label is then sent to an LSR based on the label. The LSR which receives the datagram forwards it on through the network based on the label.","An LSP is a set of LSRs that packets belonging to a certain FEC (forwarding equivalence class) travel in order to reach their destination. Each LER in an MPLS tunnel (LSP) has an Incoming Label Map (ILM). The ILM specifies the action to take when a labeled packet is received. Each entry defines an incoming label, a label operation, and a link to a Next Hop Label Forwarding Entry (NHLFE). The ILM is built based on label distribution information disseminated by a Label Distribution Protocol (LDP) engine.","Each LER in the MPLS tunnel (LSP) has an FEC-to-NHLFE Map (FTN). The FTN specifies the action to take when an unlabeled packet is received. Each entry in the FTN defines a set of characteristics used to categorize the packet, and a link to an NHLFE. The FTN is also built based on information disseminated by a Label Distribution Protocol (LDP) engine.","An NHLFE specifies \u201chow to\u201d forward a packet. It defines an outgoing label, a label operation, a next hop IP address, and an output interface. It may also specify an MPLS label stack. The label stack identifies a series of labels to push on a labeled packet in the process of forwarding the packet on an LSP segment. The NHLFE is built based on label distribution information disseminated by a Label Distribution Protocol (LDP) engine.","Simple label forwarding is realized by pointing an ILM entry to an NHLFE, and applying a label swap. This is referred to as the MPLS label swapping\/forwarding function. An LSP is originated by pointing an FTN entry to a NHLFE, and applying a label push. This is referred to as the LSP entry function. An LSP is terminated by not pointing an ILM entry to any NHLFE, and applying a label pop at input. Terminating the LSP does not guarantee that the packet will be consumed by the local node. The packet is forwarded using the exposed label or IP header. The collection of ILMs and related NHLFEs are collectively called the MPLS Label Information Base or LIB.","L2TP Tunneling","The L2TP (layer two tunneling protocol) is an extension to PPP (point-to-point protocol) that enables ISPs to operate Virtual Private Networks (VPNs). L2TP works with UDP (user datagram protocol) and IP drivers. L2TP uses a \u201ctunnel list\u201d which is analogous to an MPLS LIB. When a packet is received front a PPP link, part of the PPP header is stripped off and replaced with an L2TP header which includes tunnel and session IDs. The packet is sent to an L2TP tunnel by writing to a UDP driver with IP interface data and the end point IP address. At the end of the tunnel, data is read from a UDP port. The tunnel ID, session ID, and packet flags are extracted. The data is then formatted and written to a PPP link associated with the session. L2TP provides a \u201cone hop\u201d virtual PPP link which spans a multi-hop IP path.","From the foregoing it will be appreciated that the different tunneling protocols process packets in very different ways. State of the art routers which are intended to support different types of tunneling have separate processing engines for each supported tunneling protocol. Depending on the number of tunneling protocols to be implemented, the router may not be cost effective from the perspective of resources, design time and maintainability.","It is therefore an object of the invention to implement multiple tunneling protocols in a switch or router.","It is also an object of the invention to implement multiple tunneling protocols in a switch or router in a cost effective way.","It is another object of the invention to implement multiple tunneling protocols in a switch or router using the fewest possible resources.","It is still another object of the invention to implement multiple tunneling protocols in a switch or router with efficient design time.","It is also an object of the invention to implement multiple tunneling protocols in a switch or router which is easy to maintain.","Another object of the invention is to implement multiple tunneling protocols in a switch or router using a single general processing engine.","In accord with these objects which will be discussed in detail below, the present invention provides a uniform method for implementing multiple tunneling protocols in a switch or router. The invention is based on the realization that although the tunneling protocols are very different, they do share a similar overall structure which can be exploited to create a unified method of dealing with multiple protocols. By using similar data structures to implement multiple protocols, the invention makes data management and programming simple and, therefore, cost effective.","According to the invention, all tunneling protocols are abstracted as the mapping of input L2 or L3 streams with output L2 or L3 streams. An L2 or L3 interface is an abstraction of a physical or logical port in a router. According to the invention, mapping is provided by a finite set of tunnel interfaces. Each tunnel interface is a logical entity that is characterized by a set of tunnel specific attributes; these attributes include, for example, the parameters identifying tunnel end points. At the tunnel origination or termination point in the network, incoming streams arriving on an input port are mapped to tunnel interfaces. The tunnel interfaces, in turn, map the streams to output interfaces. As traffic streams flow through these interfaces, they are processed according to defined attributes of these interfaces. The interface attributes are tunnel end-point specific (i.e., start or end of a tunnel). Mapping is performed by using context data in an arriving packet as a search key to a database.","At tunnel origination, e.g., the tunnel entry-point node, for all types of tunnels considered by this invention, a first database lookup identifies a tunnel interface appropriate for the packet processing. Once the tunnel interface is selected, the processing continues according to information associated with the tunnel interface. In the case where the tunnel is layered over IP, there are two options. In the first option, the output interface information is cached. Caching the output interface information requires a refresh, in case forwarding information base updating results in changing the path to a different next hop router. In the second option, a second database lookup is employed, on an FIB associated with the tunnel interface, to find the best choice for the outgoing IP interface. In cases where applicable and necessary, IP segmentation and re-assembly of packets is performed to meet the MTU (maximum transmission unit) requirements of the interface.","At tunnel termination, e.g., the tunnel exit-point node, for all types of tunnels considered by this invention, a first database lookup identifies the end of the tunnel and an interface associated with the type of processing of the inner header remaining after tunnel header decapsulation. The inner header of the packet, and a database associated with the interface identified by the first database lookup may be used to perform a second lookup, yielding the outgoing interface for the packet.","The methods of the invention provide similar structuring of processing engines for all supported tunneling protocols. For example, for each supported protocol, the invention provides an input interface, an output interface, an information base, a mapping tunnel interface and a mapping information base.","The invention also provides an API for programming the host processor of a router or switch to perform the methods of the invention.","Additional objects and advantages of the invention will become apparent to those skilled in the art upon reference to the detailed description taken in conjunction with the provided figures.","The attached CDROM appendix includes a source code description of an API useful for implementing the methods of the invention.","Referring now to , input and output streams are mapped to tunnel interfaces as relational sets. More particularly, input L2 streams iL-iLare treated separately from input L3 streams iL-iL. Separate sets of tunnel interfaces T-Tm are provided for the L2 and L3 traffic. Output L2 streams eL-eLare treated separately from output L3 streams eL-eL. However, as seen in , streams that enter the router as L2 may exit as L3 streams and vice versa. As shown in , input L2 streams are mapped to tunnel interfaces T by forwarding function fand input L3 streams are mapped to tunnel interfaces T by forwarding function f. L2 tunnel interfaces are mapped to L2 output interfaces eL-eLby forwarding function fand L3 tunnel interfaces are mapped to L3 output streams by forwarding function f. Forwarding function fmaps input L2 streams from their tunnel interface to an output L3 stream and forwarding function fmaps input L3 streams from their tunnel interface to an output L2 interface.","The relationship of the streams and interfaces shown in  can be described as a relationship between sets as defined by the forwarding functions. For example:\n\n","The mapping (forwarding function) is performed with the aid of context data that a packet (unit of traffic in a stream) carries or is associated with and database information which is configured and updated by a local host.","Turning now to , the tunnel origination processing according to the invention is illustrated with respect to input and output L2 and L3 interfaces, tunnel interfaces, associated databases, and forwarding functions (data base lookups). As an IP packet arrives from an IP interface , its destination address is retrieved and used as search key by the forwarding function IP forwarding Lookup  to find the longest prefix match in the forwarding information base FIB . The forwarding information base lookup yields a particular tunnel interface, e.g. IP in IP tunnel interface  or MPLS tunnel interface . The tunnel interface points to either an L3 interface  or an L2 interface .","In the case of IP in IP tunneling, an IP header (the tunnel header) is constructed based on information held in the tunnel interface . The IP header is prepended to the packet by the encapsulation engine . If the IP output information is cached, the tunnel interface  will provide the information pointing to output interface , and the packet will be forwarded directly to that interface. If output interface caching is not used, the tunnel interface  provides an association with an FIB. This FIB can be an FIB  specific to this interface, or it can be the FIB  used by all IP interfaces . The L3 processing employs an IP lookup mechanism  to search this FIB. The IP header information from the tunnel header is used in this search. This lookup yields the output interface  to which the packet is forwarded.","In the case of IP over MPLS, an MPLS header (tunnel header) is prepended to the packet based on information held in the tunnel interface . The tunnel interface  provides the Output Label, or a stack of Output Labels, that are stored in this header by the encapsulation engine . The resulting packets are then forwarded to the L2 Interface .","When packets arrive at PPP interface , the PPP context information is used as a search key by the PPP forwarding lookup  into the TSIB (tunnel session information base) . This yields an L2TP tunnel interface  which points to an L3 output interface .","In the case of L2TP tunneling, a set of headers, collectively called the L2TP header, is created based on information from the L2TP tunnel interface  and are prepended to the packet by the encapsulation engine . If the L3 (IP) or L2 output interface information is cached, the L2TP tunnel interface  will provide the information pointing to that output interface . If output interface caching is not used, the L2TP tunnel interface  provides an association to the FIB , which the L3 forwarding engine IP lookup  will search. The L2TP interface may have its own FIB  or there may be only one FIB  in the entire system.","When Ethernet packets arrive at the Ethernet interface , the Ethernet MAC and\/or VLAN tag is retrieved and used as search key by the Ethernet forwarding lookup  to search the switching information base SIB . This points to an MPLS tunnel interface  which points to an L2 interface . The MPLS tunnel interface  provides the Output Label or a Stack of Labels, which are filled out in the MPLS header prepended to the packet by the encapsulation engine . The resulting packets are forwarded to the output L2 Interface .","As shown in , the tunnel interfaces are marked \u201cIP in IP Tunnel Interface\u201d, \u201cMPLS Tunnel Interface\u201d (for IP), \u201cL2TP Tunnel Interface\u201d, and \u201cMPLS Tunnel Interface\u201d (for Ethernet). these are just the \u201ctype\u201d of interfaces, but for each type, there can be many interfaces, for example many \u201cIP in IP\u201d, or many \u201cMPLS\u201d interfaces.",{"@attributes":{"id":"p-0053","num":"0058"},"figref":"FIG. 3"},"The input interface  is the terminus of all IP tunnels and L2TP tunnels. The IP forwarding lookup  uses the received packet header information to perform an IP lookup of the FIB  which yields the tunnel termination interface  or . If the packet exits the tunnel through the IP in IP tunnel interface , the IP tunnel header is dropped, exposing the inner IP header. The inner IP header is processed by the decapsulation engine . The Tunnel interface  is associated with its own FIB , or a single system FIB . A second IP lookup  is performed on this FIB, which yields an L3, or L2 output interface  on which the packet is forwarded","In the case of L2TP tunnels, the IP forwarding lookup  searches the FIB  (if a separate FIB is provided or FIB  if a single FIB is shared with other lookup functions), which yields the L2TP tunnel termination interface , and an indication of the L2TP tunnel termination processing type. The IP header and UDP header are dropped by the decapsulation engine, exposing the L2TP header. Tunnel ID and Session ID information from this header is used to perform a second lookup , on the L2TP information data base  which yields the PPP output interface  to which the packet is forwarded.","The interface  is the terminus of all MPLS tunnels. The decapsulation engine  uses the incoming packet's label information to perform a first (MPLS) lookup  on the LIB  associated with the MPLS input interface . This yields one of the following:","a virtual connection (VC) ID, and its attached Ethernet interface ,","a virtual LAN ID, or a destination MAC address, and the attached Ethernet interface , or","an IP interface .","For Ethernet over MPLS, after popping the MPLS label, the inner Ethernet header is exposed. The Ethernet interface  has an associated data base SIB  (or , if there is only one SIB in the system). The information from the Ethernet header is used for a second, Ethernet, lookup which is performed on this data base  or . This yields the output interface  to which the packet is forwarded.","For IP over MPLS tunnels, after popping the MPLS label, the inner IP header is exposed. The information in the IP header is used for a second, IP lookup . This is performed on the FIB  associated with the IP interface  (or  if there is only one FIB in the system) which points to L3 or L2 output interface .","From the foregoing, it will be appreciated that the methods described thus far enable the implementation of four different kinds of tunnels using similar data structures for each.  and  illustrate the corresponding data structures.","As shown in , for Tunnel Origination (Tunnel Entry) processing, the invention provides for each protocol an \u201cinput interface\u201d, an \u201cinput information database\u201d, a \u201cmapping transmit interface\u201d, a \u201cmapping information database\u201d, and an \u201coutput interface\u201d. The \u201cmapping transmit interface\u201d is the transmit side of the tunnel interface.","In the case of IP over IP tunnel origination, the input interface is an IP interface, the input information database is an FIB, the mapping transmit interface is an IP in IP transmit tunnel interface, the mapping information database is optional and may be an FIB, and the output interface is an IP or L2 interface.","In the case of L2TP tunnel origination, the input interface is a PPP interface, the input information database is a TSIB, the mapping transmit interface is an L2TP transmit tunnel interface, the mapping information database is optional and may be an FIB, and the output interface is an IP or L2 interface.","In the case of IP over MPLS tunnel origination, the input interface is an IP interface, the input information database is an FIB, the mapping transmit interface is an MPLS transmit tunnel interface, there is no mapping information database, and the output interface is an L2 interface.","In the case of Ethernet over MPLS tunnel origination, the input interface is an Ethernet interface, the input information database is an SIB, the mapping transmit interface is an MPLS transmit tunnel interface, there is no mapping information database, and the output interface is an L2 interface.","As shown in , for Tunnel Termination (Tunnel Exit) processing, the invention provides for each protocol an \u201cinput interface\u201d, an \u201cinput information database\u201d, a \u201cmapping receive interface\u201d, a \u201cmapping information database\u201d and an \u201coutput interface\u201d. The \u201cmapping receive interface\u201d is the receive side of the tunnel interface.","In the case of IP over IP tunnel termination, the input interface is an IP interface, the input information database is an FIB, the mapping receive interface is an IP in IP receive tunnel interface, the mapping information database is an FIB, and the output interface is an IP or L2 interface.","In the case of L2TP tunnel termination, the input interface is an IP interface, the input information database is an FIB, the mapping receive interface is an L2TP receive tunnel interface, the mapping information database is a TSIB, and the output interface is a PPP interface.","In the case of IP over MPLS tunnel termination, the input interface is an MPLS interface, the input information database is an LIB, the mapping receive interface is an IP interface, the mapping information database is an FIB, and the output interface is an IP or L2 interface.","In the case of Ethernet over MPLS tunnel termination, the input interface is an MPLS interface, the input-information database is an LIB, the mapping receive interface is an Ethernet interface, the mapping information database is an SIB, and the output interface is an Ethernet interface.","According to the present implementation of the invention, tunnel interfaces are of two types. One type is referred to as a \u201ctransmit\u201d interface, which is associated with entering the tunnel. The other is referred to as a \u201creceive\u201d tunnel interface, which is associated with exiting the tunnel. Each \u201cend\u201d of a tunnel will use at least a transmit tunnel interface (entry in tunnel), or a receive tunnel interface (exit from tunnel). Bidirectional tunnels will have both types of interface at each end.","The transmit tunnel interface is characterized by the following parameters: tunneling protocol, encapsulation header field values, such as local source address, remote destination address, hop limit, and tunnel MTU (for IP in IP, or L2TP), or MPLS output label(s), L2TP header fields.","According to the illustrated embodiment, four protocols are supported: IP in IP (where IP can be either IPv4 or IPv6), IP over MPLS, Ethernet over MPLS, and L2TP. For IP in IP (IPv4 and IPv6) and L2TP the local source address is the address of tunnel entry node, the remote destination address is the address of the tunnel exit node, and the hop limit is the number of hops or \u201ctime to live\u201d set in the tunnel header. The tunnel MTU is the parent interface MTU less the tunnel header size.","The \u201creceive\u201d tunnel interface requires fewer parameters. The invention provides similar structuring of Tunnel Interfaces (receive interfaces and transmit interfaces) and similar logical linking between data structures used for input packet processing. The receive interface yields the structure used for IP lookup (FIB) or MPLS label mapping (LIB), or L2TP-Tunnel and Session ID mapping (TSIB)), and similar logical linking between data structures used for output packet processing. The transmit interface provides the information about the encapsulation of the packet, tunnel IF header source and destination addresses, or MPLS Labels, or L2TP IP source and destination addresses.","Turning now to the Appendix, the tunnel transmit interface is characterized by the following basic parameters:","Tunneling protocol\u2014the tunneling protocol can be IPv4 in IPv4, IPv6 in IPv6, GRE, etc., . . .","Local source address\u2014address of tunnel-entry node","Remote destination address\u2014address of tunnel-exit node","Hop limit\u2014the number of hops or time to live set in the tunnel header","Tunnel MTU\u2014the parent interface MTU less the tunnel header size.","IPv4 tunnel interface attributes are illustrated at lines - of the Appendix and IPv6 tunnel interface attributes are illustrated at lines - of the Appendix. IPv4 source and destination address definitions are illustrated at lines - and IPv6 source and destination address definitions are illustrated at lines - of the Appendix. The function to set IP source and destination address is illustrated at lines - of the Appendix.","A tunnel interface for MPLS tunneling can be created only if a layer 2 interface exists, with at least one child layer 3 interface. For MPLS tunnels, the transmit interface holds the MPLS encapsulation information\u2014label stack, and actions to be performed. The MPLS receive interface is associated with an LIB. It receives MPLS packets and helps locate the LIB used for Input Label Match. An MPLS tunnel interface is a logical interface on which MPLS packets are received and transmitted. MPLS tunnel interface attributes are illustrated at lines -. A function to set MPLS tunnel label stacks on a set of interfaces is illustrated at lines -.","L2TP tunnel interface attributes are illustrated at lines - of the Appendix. A function to set L2TP tunnel interface attributes is illustrated at lines -.","A function to associate an information base with a tunnel interface is illustrated at lines - of the Appendix.","Error codes are illustrated at lines - of the Appendix.","There have been described and illustrated herein a uniform method for implementing multiple tunneling protocols. While particular embodiments of the invention have been described, it is not intended that the invention be limited thereto, as it is intended that the invention be as broad in scope as the art will allow and that the specification be read likewise. It will therefore be appreciated by those skilled in the art that yet other modifications could be made to the provided invention without deviating from its spirit and scope as so claimed."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
