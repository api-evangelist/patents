---
title: Systems and methods of assisted strategy design
abstract: In an embodiment, a computer system performs a method of modifying a decision algorithm, such as an algorithm for assigning credit limits or other credit terms, via a graphical user interface. The system displays a graphical representation of a decision tree comprising a plurality of decision nodes. The decision nodes are associated with respective conditions, and at least a portion of the decision nodes are associated with an outcome to be assigned to an individual matching the associated respective conditions in accordance with the decision tree. The system receives a selection of a decision node and selects a parameter to be used to construct subnodes of the selected decision node, and constructs the subnodes. The system calculates an outcome for each subnode, and it updates the graphical representation of the decision tree to include the plurality of subnodes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08930262&OS=08930262&RS=08930262
owner: Experian Technology Ltd.
number: 08930262
owner_city: Nottingham
owner_country: GB
publication_date: 20111101
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","SUMMARY"],"p":["This application claims priority to U.S. Provisional Patent Application No. 61\/409,220 filed on Nov. 2, 2010 and entitled ASSISTED DESIGN ENVIRONMENT. The above-identified application is hereby incorporated by reference as if set forth herein in its entirety.","The disclosure herein relates to assisted strategy design, and in particular, systems and methods of automation and assistance in the creation and design of process flows and decision trees.","Many areas of business employ process flows, decision algorithms and related systems in order to conduct business in an automated fashion. For example, a credit card issuing company may employ numerous decision algorithms in order to determine whether to offer a credit card applicant a new line of credit and what credit limit to offer that applicant. Typically, such process and design algorithms are encoded in software written by software programmers. Such code may be difficult to modify by anyone other than the programmer who originally wrote the software.","However, in today's world, rapid modification of such decision and process algorithms may be required by businesses in order to remain competitive and up-to-date. The individuals with the greatest knowledge of how to modify these algorithms may not be the same as those people who designed and programmed the automated software. Accordingly, such hard-coded algorithms remain difficult or even impossible to modify, and can often be insufficient for today's business needs.","Accordingly, embodiments disclosed herein include systems and methods for assisting and automating the design of process workflows, decision algorithms, and such other business processes as may be useful to companies and such entities. Various embodiments as disclosed herein may include graphical user interfaces and\/or other user interfaces that may be easily manipulated without requiring extensive knowledge of computer software or computer programming. Additionally, embodiments disclosed herein enable individuals designing such process flows and decision algorithms to easily test and deploy those processes and algorithms.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1","b":"101"},"The system may also include one or more production servers . These servers may be used to perform business-related tasks such as implementing the various processes and algorithms designed on the manager computer . In an embodiment, manager computer  deploys process flows, algorithms, and other such business processes to the production server  via a network communication protocol. The production server  may in turn transmit one or more reports to the manager computer  on a periodic basis, upon request, or at any other appropriate time. A manager on the manager computer may review the reports received from the production server  and use the information contained in the report to update and improve the process flows, algorithms, and so on.","Both the manager computer  and the production server  may retrieve data from a number of data sources. For example, the manager computer  and\/or the production server  may retrieve credit data from a credit data repository . The manager computer and\/or the production server may further retrieve benchmark data from data repository  which may be, for example, historical data about previous individuals and\/or accounts. Additionally, monitoring data may be retrieved and\/or stored in repository . Additional data sources and\/or any subset of these described data sources may be employed by the system.","In an embodiment, the manager computer may have access to different data sources than the production server. This may be useful, for example, in ensuring that the manager computer does not unintentionally modify data used by the production server which could introduce data errors and possible down times in the system.","In various embodiments, some or all of the data sources may be read-only sources. For example, the credit data repository  and the benchmark data repository  may be read-only, or may be writable only by particular users with appropriate access rights. Additionally, in various embodiments, the data repositories may be maintained on separate storage devices, they may be combined on a single storage device, and\/or they may be distributed among multiple storage devices, such as in a cloud data storage system.","Production server  may further communicate, via a network , with any number of third-party users . Such third-party users may wish to take advantage of the various process flows, algorithms, and the like implemented by production server . Such third-party users  may include users, consumers, business entities, business partners, and further automated services, for example.","As one example, where the production server implements process flows for determining appropriate credit limits for current and\/or potential customers of a credit lender, the third-party users  may be, for example, credit card applicants, loan approval officers, or other individuals interested in retrieving credit card application information.","The embodiments described herein relate to assisted strategy design software used to develop credit risk management process flows. In particular, the embodiments described herein relate to development software, operated on a computing system, for developing a strategy for analysis of information associated with credit applicants in order to determine to whom credit should be extended, how much credit should be extended, and so on. These embodiments illustrate one example of generating a decision process for offering credit cards to consumers. However, the development software may be used to enable development of other process flows, decision algorithms, and the like, for use in other decision-making tasks. For example, the software may be used to determine appropriate terms and features to the offer for a mobile phone service. The software may also be used to determine parameters for a loan, such as interest rates, loan repayment periods, and down payments, among other things. The software may similarly be used to optimize parameters for automobile loans, consumer loans, and the like. Additionally, the software may be used to develop terms for an insurance contract. The software may further be used in marketing campaigns, for example, to determine appropriate advertisements or offers to present to particular customers. Many other uses for the systems and methods described herein may be contemplated.","Additionally, embodiments of the systems and methods described herein may be operated via software executed on a computing system. The disclosed systems and methods may alternately be embodied in computing hardware, such as read-only memory or specialized microprocessors.","Example System Architecture",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 17","FIG. 17"],"b":["1701","1702","1703","1704","1701","1703","1701","1702","101","102","1701","1701"]},"The network  may include any communication network or combination of communication networks, such as one or more of the Internet, LANs, WANs, MANs, etc., for example. In the embodiment of , the computing device  includes a computing system having one or more computing devices (e.g., computers). The computing device  may include, for example, a single computing device, a computer server, a smart storage unit, or a combination of one or more computing devices and\/or computer servers. Depending on the embodiment, the components illustrated in the computing device  may be distributed amongst multiple devices, such as via a local area or other network connection. In other embodiments the computing device  may include fewer and\/or additional components that are illustrated in .","The exemplary computing device  may be a general purpose computer using one or more microprocessors, such as, for example, an Intel\u00ae Pentium\u00ae processor, an Intel\u00ae Pentium\u00ae II processor, an Intel\u00ae Pentium\u00ae Pro processor, an Intel\u00ae Pentium\u00ae IV processor, an Intel\u00ae Pentium\u00ae D processor, an Intel\u00ae Core\u2122 processor, an xx86 processor, an 8051 processor, a MIPS processor, a Power PC processor, a SPARC processor, an Alpha processor, and so forth. The computer may run a variety of operating systems that perform standard operating system functions such as, for example, opening, reading, writing, and closing a file. It is recognized that other operating systems may be used, such as, for example, Microsoft\u00ae Windows\u00ae 3.X, Microsoft\u00ae Windows 98, Microsoft\u00ae Windows\u00ae 2000, Microsoft\u00ae Windows\u00ae NT, Microsoft\u00ae Windows\u00ae CE, Microsoft\u00ae Windows\u00ae ME, Microsoft\u00ae Windows\u00ae XP, Windows\u00ae 7, Palm Pilot OS, Apple\u00ae MacOS\u00ae, Disk Operating System (DOS), UNIX, IRIX, Solaris, SunOS, FreeBSD, Linux\u00ae, or IBM\u00ae OS\/2\u00ae operating systems. In other embodiments, the computing device  may be controlled by a proprietary operating system. Conventional operating systems control and schedule computer processes for execution, perform memory management, provide file system, networking, I\/O services, and provide a user interface, such as a graphical user interface (\u201cGUI\u201d), among other things.","The computing device  includes one or more central processing units (\u201cCPU\u201d) , which may each include one or more conventional or proprietary microprocessor(s). The computing device  may further include one or more memories , such as random access memory (\u201cRAM\u201d), for temporary storage of information, read only memory (\u201cROM\u201d) for permanent storage of information, and\/or a mass storage device , such as a hard drive, diskette, or optical media storage device. The memory  may store software code, or instructions, for execution by the processor  in order to cause the computing device to perform certain operations, such as gathering sensor-related data, processing the data with statistical and\/or predictive models, formatting data for user devices or other presentation, transmitting data, or other operations described or used herein.","The methods described and claimed herein may be performed by any suitable computing device, such as the computing device . The methods may be executed on such suitable computing devices in response to execution of software instructions or other executable code read from a non-transitory tangible computer readable medium or computer storage device. A computer readable medium is a data storage device that can store data that is readable by a computer system. Examples of computer readable mediums include read-only memory, random-access memory, other volatile or non-volatile memory devices, CD-ROMs, magnetic tape, flash drives, and optical data storage devices.","The exemplary computing device  may include one or more input\/output (I\/O) devices and interfaces , such as a keyboard, trackball, mouse, drawing tablet, joystick, game controller, touchscreen (e.g., capacitive or resistive touchscreen), touchpad, accelerometer, and\/or printer, for example. The computing device  may also include one or more multimedia devices , such as a display device (also referred to herein as a display screen), which may also be one of the I\/O devices  in the case of a touchscreen, for example. Display devices may include LCD, OLED, or other thin screen display surfaces, a monitor, television, projector, or any other device that visually depicts user interfaces and data to viewers. The computing device  may also include one or more multimedia devices, such as speakers, video cards, graphics accelerators, and microphones, for example.","In the embodiment of , the I\/O devices and interfaces  provides a communication interface to various external devices via the network . For example, the computing device  may be electronically coupled to the network  via a wired, wireless, or combination of wired and wireless, communication link(s). The network  may allow communication with various other computing devices and\/or other electronic devices via wired or wireless communication links.","In the embodiment of , the computing device  may include various modules described in further detail below. Each of these modules is discussed in further detail below. In general, the word \u201cmodule,\u201d as used herein, refers to logic embodied in hardware or firmware, or to a collection of software instructions, possibly having entry and exit points, written in any programming language, such as, for example, Java, Python, Perl, Lua, C, C++, C#, Objective C, etc. A software module may be compiled and linked into an executable program, installed in a dynamic link library, or may be written in an interpreted programming language such as, for example, BASIC, Perl, or Python. Software modules may be callable from other modules or from themselves, and\/or may be invoked in response to detected events or interrupts. Software modules configured for execution on computing devices may be provided on a computer readable medium, such as a compact disc, digital video disc, flash drive, or any other tangible medium. Such software code may be stored, partially or fully, on a memory device of the executing computing device, such as the computing device , for execution by the computing device. Hardware modules may be comprised of connected logic units, such as gates and flip-flops, and\/or may be comprised of programmable units, such as programmable gate arrays or processors. The modules described herein are typically implemented as software modules, but may be implemented in hardware, firmware and\/or software. Generally, the modules described herein refer to logical modules that may be combined with other modules or divided into sub-modules despite their physical organization or storage.","Example Modules","In the embodiment of , the computing device  includes three modules, namely, a process flow module  that provides a user interface for building process flows, a decision tree module  that provides a user interface for managing decision trees, and an decision tree modification module  that provides algorithms for automatically assisting in modifying decision trees, such as proposing best outcomes and splitting\/growing decision trees. In other embodiments, the modules may be distributed across multiple devices, and may be controlled and\/or operated by multiple different entities. These modules are configured to perform methods as described throughout this specification. In various embodiments, fewer or additional modules may be included within a computing system.","In an embodiment, process flow module  provides one or more user interfaces for building and modifying process flows. The module may, among other things, display user interfaces such as those shown in . Additionally, it may provide interfaces enabling a user to modify aspects of a process flow, such as the order of steps. It may also present reports, such as that shown in .","In an embodiment, decision tree module  provides one or more user interfaces for managing decision trees. The module may, among other things, display user interfaces such as those shown in . It may be invoked by selecting a step from a process flow during the invocation of module , and it may further invoke decision tree modification module .","In an embodiment, decision tree modification module  provides one or more algorithms for automatically assisting in modifying decision trees. The module, may, among other things, perform \u201cnext best split\u201d and \u201cgrow\u201d computations as shown in , and perform computations to propose best outcomes for a decision tree or part of it as shown in .","Any of the above modules, and other modules, may embody the various systems and methods disclosed, as well as additional systems and methods. The modules described here are particularly pertinent to manager computer  of , and other modules may be included on the production server , such as a process flow execution module configured to perform methods such as that shown in , a decision tree module configured to execute decision trees such as that shown in , and a monitoring module configured to store monitoring data.","The computing device  may be configured to acquire user data and other external data such as third-party data. The various modules and\/or other modules may comprise software alone, hardware alone, or a combination of software and hardware. The device may be especially adapted to communicate using a variety of network or communications protocols in order to communicate with external data sources such as data repositories, network servers, online services, telecommunication services, distributed computing systems, and so on. Some of these protocols may include standard network protocols, such as HTTP, FTP, SNMP, or the like. The device may further include hardware drivers, such as USB, FireWire, Thunderbolt (Light Peak), or serial communications drivers, for example to communicate with devices in direct communication with the system.","The computing device  may be configured to transmit, or initiate transmission of, data such as user interfaces, data reports, application programming interface data, or the like, to requesting entities, such as external user , that have registered interest with the system. In one embodiment, the device provides the data in an unformatted data structure, such as in an XML, CSV, TXT, or other spreadsheet, text, or web accessible data structure. In other embodiments, the device provides information in user interfaces, such as user interfaces that are configured for rendering by a web browser, mobile device, tablet device, or other device or application, for display to users. A variety of different presentations may be provided. In some embodiments, the requesting entities may indicate presentation preferences or configurations (e.g., data formats and\/or types of information), and the device may transmit data based on the indicated preferences or configurations. The presentation format may also be determined based on the type of device being used by the user.","In an embodiment, any or all of the modules described above and\/or other modules are configured to act in real-time. Thus, when data is received by the modules, the modules process that data as soon as practicable or necessary to provide users with timely information. In order to achieve this, specialized hardware may be used to gain efficiency, and executable code may be designed to minimize latency or computation time. In an embodiment, the modules, possibly with other modules of the system, are executed within a real-time operating system, to enhance the responsiveness of the system.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 2","b":["201","203","204"]},"Several of the tools are depicted in . For example, Solution Explorer  provides options for steps or components of the process flow as it is being built. Satellite View  enables the user to easily view the contents of the main pane . Palette  provides further for constructing process flows and decision algorithms. Gallery  enables a user to select personal, regional and\/or global templates. In this example, a card origination template is selected from the global gallery to quickly create a basic process flow. Templates can range from very simple templates that include sections of business logic, for example, to complete strategies and associated configuration.","In an embodiment, the user may create and\/or modify a process flow being designed by manipulating the user interface, and in particular, design pane . For example,  illustrates a process flow  that was generated from a template design. In this particular embodiment, process flow  illustrates a template card origination process that includes multiple processes, or steps, arranged in the design pane . Any or all of the steps may be customizable by the user, for example, by drag-and-drop operations and\/or other input to the user interface.","Design pane  may further be used to design decision algorithms as described subsequently in the specification. In an embodiment, the particular tools shown in tool bars  and\/or  may automatically be modified to provide appropriate tools for the particular task being performed in design pane .","In an embodiment, the development software advantageously allows for storage of outcome data at various stages in the flow of the process. For example, a user may wish to store output data that is generated by the \u201cpolicy, rules, and decisions\u201d step of process flow . Storing outcome data at various steps of the process flow allows for the stored data to be later accessed and analyzed for improving the decisioning process at each of the various steps so that the user is not required to modify the process based only on an end result.","In an embodiment, the ability to toggle storage of outcome data associated with any process of a process flow may be accomplished with a user interface interaction such as a command in a pop-up menu associated with a particular process, such as is depicted in the example of . When a user interacts with \u201cpolicy, rules, and decisions\u201d step  of process flow , a menu may be displayed. The interaction may be, for example, right-clicking on the particular step. In other embodiments, other interactions may be used, and forms of input other than a pop-up menu may be employed.","In the example of , process step  has been right-clicked so that menu  has been displayed. One of the options of menu  is \u201ctoggle monitoring\u201d  which can be selected to enable or disable storage of outcome data at the particular process step . Thus, storage of outcome data at multiple steps of the process flow may be easily initiated and stopped. In one embodiment, the monitoring data is saved in an unstructured form which reduces the impact on the data storage structures and host applications. Furthermore, the monitoring data that is stored by the monitoring process is accessible to the development software such as in updating process flow parameters after testing a process flow for a period of time.","In an embodiment, the storage of data for monitoring is performed by a computing system different from the computing system operating the design software. For example, with respect to , the design software may operate on manager computer , while the storage of data for monitoring is done by production server . Thus, when the \u201ctoggle monitoring\u201d option  is selected, the manager computer  may send an instruction to production server  to enable or disable monitoring. The instruction may then be sent to the production server  upon occurrence of an event, such as the user saving the process flow being designed, or the user requesting that the process flow be deployed for production. Alternatively, the instruction may be sent in real time so that monitoring may be started or stopped without significant delay.","In an embodiment, the particular data that is stored may be formatted in accordance with the particular nature of the step associated with the monitoring. For example, should the user enable monitoring for the policy, rules, and decisions step , the system may store the following data records:",{"@attributes":{"id":"p-0058","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Decision\/Policy Rules Monitoring Data"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Monitoring ID","Unique ID of the Decision Setter component"]},{"entry":["Number of fired categories","The number of rows in the following table:-"]},{"entry":["Category ID","Index to the Decision Category"]},{"entry":["Number of rules fired","The number of rows in the following table:-"]},{"entry":["Fired rule ID","Index to the fired rule"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Should the user enable monitoring on the \u201crisk score card\u201d step, the system may store the following data records:",{"@attributes":{"id":"p-0060","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Scorecard Monitoring Data"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Monitoring ID","Unique ID of the Scorecard component"]},{"entry":["Intermediate Score","Score value, prior to any final transformation"]},{"entry":["Final Score","Final score value, after any final transformation"]},{"entry":["Score index","Graded score value"]},{"entry":["Number of scoring","The number of rows in the following table:-"]},{"entry":["elements",{}]},{"entry":["Element id","Sequence number of the element"]},{"entry":["Outcome ID","Outcome ID (within element)"]},{"entry":["Characteristic value","(for univariate scoring) Data value for the"]},{"entry":[{},"scored element"]},{"entry":["Characteristic x-value","(for bi-variate scoring) Data value for the x-"]},{"entry":[{},"axis element"]},{"entry":["Characteristic y-value","(for bi-variate scoring) Data value for the y-"]},{"entry":[{},"axis element"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Other appropriate data may be stored for any of the other steps that may be included in a process flow. In an embodiment, the particular data required to be stored for a step may change as the user modifies parameters associated with that particular step. For example, the user may add additional entries into a risk scorecard which may necessitate the storage of further data records if monitoring is enabled for the risk scorecard step. Accordingly, in an embodiment, the system stores data records in a format such that future records may be added without requiring modification to existing stored data. In doing so, the system advantageously does not require rebuilding of previous data that has been stored, despite the format change. Thus, although in previous systems it may have been a complex and costly process to enable monitoring, and valuable data may simply have been discarded, the present system provides the flexibility to simply turn on monitoring in order to secure monitoring data without requiring manual modification of the data store. In an alternate embodiment, the system modifies the data formats and records, and it converts previously stored data to conform to the new formats and records that are required.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 4","FIG. 4","FIG. 1","FIG. 1","FIG. 4"],"b":["102","101"]},"At block , a process flow step is identified. For example, upon initiating execution of a process flow, the first step in the process flow is identified. Alternatively, any step of a process flow may be otherwise manually or automatically selected.","At block , data is retrieved in accordance with the process flow step identified. The data may be retrieved from internal and\/or external data sources such as the credit data repository , the benchmark data repository , and\/or the monitoring data repository  shown in . The particular data to be retrieved may be identified based on data associated with the process flow step.","At block , the retrieved data is processed according to instructions associated with the process flow step, identified at block . Such data analysis may include executing decision algorithms specified by the creator of the process flow. Other data processing may include data aggregation, summarization, selection, calculation, and the like. The result of processing the data at block  may include output data resulting from the processing, and\/or modifications to the retrieved data.","At block , the process flow step is reviewed to determine if monitoring has been enabled on the particular step. If monitoring has been enabled on that step, then, at block , data is stored, in accordance with the process flow step and any output generated at block . In an embodiment, data is temporarily stored in a first storage location at block , and then all of the temporarily stored data is moved to a second storage location after completion of all steps, so that bulk data transfer efficiencies may be realized. Otherwise, execution proceeds to block  where the next process flow step or steps are identified, based on data associated with the current process flow step. Once those next process flow steps are identified, then the operations of  may be repeated on those steps until the process flow has been fully executed.","As an example of the operations of  in an embodiment, consider the \u201cSet Credit Limit\u201d step of the process flow shown in . At block , the \u201cSet Credit Limit\u201d step would be identified. At block , any data for the \u201cSet Credit Limit\u201d step would be retrieved. This data may include, for example, credit data about a particular individual, and it may include data computed during the performance of a previous step of the process flow.","At block , this data is processed, for example with a decision tree associated with the \u201cSet Credit Limit\u201d step. The decision tree may be internally stored, for example, in a form shown in . Based on the decision tree or other processing, one or more outputs are calculated. The outputs may be, for example, credit limits determined to be appropriate for the individual based on the credit data and other data from block .","At block , it is determined whether monitoring is enabled on the \u201cSet Credit Limit\u201d step. If it is, then at block , the calculated outputs are stored, along with possibly other information such as the information retrieved at block . At block , any next steps associated with the \u201cSet Credit Limit\u201d step are identified. In the example of , the next step would be the \u201cManual Underwriting Required\u201d determination. That next step would then be identified to be performed.","In an embodiment, the development software further includes monitoring functionality that includes a suite of reports for various business problems. The monitoring functionality may be configured to suit each client's solution, run automatically against the data at regular intervals, identify issues in any part of a strategy represented by a process flow, and\/or provide reports that are defined and reviewed in the same software user interface as shown in, for example, .","Some examples of reports that may be generated include: an acceptance rate report, a referral analysis report, a score discrimination report, a terms of business comparison report, an advanced management report, and so on. An example of one such report is shown in . The report shown in  is a sample Bad Debt Rate report which includes both a tabular and a graphical view of the performance of a strategy represented by a process flow. This sample report displays higher bad debt rates than expected in the top score band, indicating that perhaps limits that are too high are extended to parts of this population. In one embodiment, the charts can be drilled into from the software user interface, as the data used to generate this report is available for analysis and further improvement of the process flow. Reports such as that shown in  may aid a user in determining that there is a problem and\/or a possible enhancement to a process flow. For example, reports may be generated based on stored monitoring data, as discussed above, and using preconfigured report styles such as templates, in order to provide insight into the effectiveness of a strategy represented by a process flow.","In an embodiment, the software enables users to create decision algorithms such as decision trees. Such decision trees may be used as part or all of a step of a process flow. For example, the step of setting a credit limit shown in process flow  of  may involve a decision tree for determining appropriate credit limits for an individual being processed according to the process flow.","In other embodiments, decision algorithms may be embodied in forms other than a decision tree, such as a Boolean expression, a class set, a matrix, a segmentation tree, a test group set, a treatment table, and\/or any other form of decision algorithm, as well as any combination of the above.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 6","FIG. 1"],"b":["102","101"]},"The tree shown in  includes a number of nodes. At the top of the tree is node  labeled \u201crisk score bands.\u201d When this decision tree is executed for a particular individual, the risk score for that individual may be identified at this node. Node  has three sub-nodes , , and  representing various categories of risk scores. The individual's particular risk score would be compared to these three nodes so that an appropriate action may be taken. For example, if the individual's risk score is under 500 then node  would be applied. Accordingly, output  would be applied to the individual so that a $1,000 credit limit would be given. Similarly, if the user's risk score is between 500 and 650, then node  would be applied and the user would receive a $2,000 credit limit as shown in output .","Nodes  and  may be called \u201cleaf nodes\u201d because, when they are reached, no further decision need be made and an output may be immediately determined. In contrast, node  is not a leaf node because further decision is required at that point. If the individual's risk score is over 650, then execution must proceed to node  where the individual's revolver score may be retrieved. Based on the revolver score, various credit limits may be granted to the user as shown in nodes  and outputs .","The risk score and revolver score described here are metrics calculated about individuals based on personal information. For example, the risk score may be a credit score or other metric of credit risk, and the revolver score may be a measure of the individual's use of revolving credit. Other metrics and scores may be included in a decision tree. Additionally, non-numeric data may be included in a decision tree. For example, an individual's marital status may be included in the tree.","In an embodiment, each node on a decision tree may include several parameters. A node may be associated with a data parameter, such as the risk score or revolver score. A node may further be associated with a condition, such as a set or range of values, or other logical test. The condition and\/or the associated data parameter may be used to determine whether a particular individual falls within the scope of a node. Additionally, a node may be associated with one or more outcomes. Nodes may also be associated with one or more subnodes or children nodes, indicating further conditions to be tested with respect to an individual who falls within the scope of the node.","In an embodiment, the design software enables manipulation of a decision tree such as that shown in , and performs various processes (discussed herein) in order to assist the user in developing, extending, and\/or otherwise optimizing the decision tree. Such manipulation may be done by interaction with a graphical user interface or other interface. In alternate embodiments, such manipulation may be done by keyboard, text commands, and\/or computer-readable files or instructions.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 7","FIG. 1","FIG. 7","FIG. 2","FIG. 7","FIG. 2"],"b":["101","201","209","209"]},"Each of the nodes of the decision tree being created is depicted in a tree of nodes . The nodes may be expanded or collapsed using buttons , thereby enabling ease of viewing and modification of the decision tree.","In an embodiment, the nodes of the decision tree are applied to a benchmark data set in order to provide sample statistics and\/or other information. For example, column  displays the number of cases in the benchmark data set that correspond with each of the nodes . Column  displays the average credit limit for individuals associated with particular nodes . Additional information may be included in various columns and shown on the user interface.","In an embodiment, the outcomes associated with each node of the decision tree may be shown in column . Although in  the outcomes shown were simple credit limits, the outcomes shown in column  are named entities which may be associated with numerous parameters, as described subsequently with respect to .","The benchmark data set information shown in column  and  may be useful to the user in refining the decision tree. In the sample data shown in , the node labeled \u201c751-900\u201d  has more cases than any of the other leaf nodes. Thus, one way to possibly improve on the segmentation among the leaf nodes would be to further subdivide the \u201c751-900\u201d score band node. The development software advantageously makes the further segmentation easy to implement by analyzing monitoring data, benchmark data, and\/or other data, and providing suggested segmentation changes.",{"@attributes":{"id":"p-0085","num":"0084"},"figref":["FIG. 8","FIG. 7"],"b":"704"},"The interface includes a table with columns for names of outcomes , colors of outcomes , whether or not the outcome is active , and a treatment for the outcome . The treatment may include a specification of how an individual should be treated given a particular outcome. For example, as shown in , if the outcome determined for a particular individual is \u201cMax Gold\u201d then the individual will be offered a $4,000 credit limit.","The interface may enable a user to add, modify, and\/or remove particular outcomes. Additionally, the treatment may include other related and relevant information such as credit card, contract terms, interest rates, penalty rates, and the like. The interface may provide options for creating, modifying, and otherwise managing various treatments for outcomes.","In an embodiment, decision trees such as that shown in  may be modified either automatically or manually. The software may provide various tools for automatically modifying a decision tree and\/or assisting the user in determining how to modify a decision tree.",{"@attributes":{"id":"p-0089","num":"0088"},"figref":"FIG. 9","b":["705","901","902","903","904"]},"The \u201cnext best split\u201d option  enables the user to initiate analysis of outcome data by the development software, in order to develop a proposed further segmentation of the selected node, in an embodiment. The user may be provided with the option to indicate a quantity of additional subnodes into which the selected node should be segmented, or the user may simply use a default number of subnodes. Additionally, the user may be able to select one or more data parameters to be analyzed or optimized. Once these and\/or other options are selected, the development software performs an analysis and returns a proposed further segmentation.","In one embodiment, the analysis is performed using data that was used in creating a report, monitoring data, and\/or benchmark data. Other data may be used, and\/or a combination of data may be used, in various embodiments. In some situations, simulated or modeled data may be used in the analysis.",{"@attributes":{"id":"p-0092","num":"0091"},"figref":["FIG. 10","FIG. 1"],"b":"101"},"At block , a selection of a leaf node or other node for splitting is received. The selection may be made, for example, by the user clicking on the particular node to be split. In an embodiment, if the user selects a node that is not a leaf node, then the system may, in some embodiments, remove any children of the selected node prior to performing the next best split analysis.","At block , the parameters for potential splits are identified. These parameters may include, for example, a number of subnodes to create, one or more parameters to be analyzed and\/or optimized, one or more factors on which the splitting should be performed, a set of parameters on which splitting is to be permitted, and so on.","Then, a set of splits, with associated subnodes, is calculated at block . A \u201csplit,\u201d as used here, refers to an identified parameter associated with individuals that is to be used to categorize those individuals within the decision tree. The splits and subnodes may be calculated using statistical algorithms, artificial intelligence algorithms, heuristic calculations, optimization algorithms, and the like. The calculation should result in one or more sets of new leaf nodes to be proposed for addition as children to the selected node. Additionally, appropriate values for the conditions of each of the leaf nodes may be calculated. For example, the calculation may determine that a split based on the marital status parameter is appropriate. Thus, it may propose adding three new subnodes, one representing a status of \u201csingle,\u201d one representing a status of \u201cmarried,\u201d and one representing a status of \u201cdivorced.\u201d In some cases, the calculation may determine that it is preferable to bundle one or more of the categories together, for example creating a new subnode representing the statuses of \u201csingle\/divorced.\u201d","In addition to calculating the conditions for the new subnodes created by the next best split algorithm, a set of correlations may also be calculated. The correlations may indicate, for example, how optimal a particular split is or how strongly the particular split correlates with a desired factor. Such correlations may be used by the user to assess which of the splits is best. Alternately, in an embodiment, the user is not asked to review the proposed splits, and the system automatically selects the best split based on a correlation value calculated at block .","In the case where the user is queried for inputs, the system displays the potential splits, and associated values and correlations, at block . Such a display may be made in a user interface such as that shown in .","At block , the user may select one of the potential splits automatically generated by the software. Alternately, the user may wish to modify parameters to the next best split algorithm, in which case the process may return to block  or .","At block , the new leaf nodes calculated by the next best split algorithm and optionally selected by the user at block  may be merged into the existing decision tree. Thus, the decision tree may be expanded upon completion of the next best split algorithm.","At block , the software may optionally automatically propose outcomes for the new leaf nodes calculated by the next best split algorithm. A procedure for proposing best outcomes for these new nodes is shown, for example, with reference to . The user may then accept and\/or modify the automatically proposed outcomes for each of the new nodes. Alternately, the system may not calculate outcomes for the new nodes generated by the next best split algorithm, but instead may simply assign each of those new nodes a default outcome or no outcome.","At block , the software optionally continues to split the newly created subnodes. This is used for example, in the \u201cgrow\u201d option  of . If such an option is enabled, then the system may perform calculations such as determining whether further splitting of subnodes is advantageous and\/or determining which subnodes to split, based on various metrics and calculations. If the optional block  is performed, then execution again proceeds to block  to further perform the next best split algorithm on the subnode(s) selected at block .","The assisted design techniques of the development software as so described herein allow a predictive strength analysis of multiple attributes. For example, a particular segment or node may be selected for splitting and\/or growing of the decision tree, for example by selecting the \u201cnext best split\u201d option  or the \u201cgrow\u201d option  of , in order to cause the development software to determine a number of characteristics that could be used in segmentation which are better predictors of characteristics, such as bad debts. Thus, the automated features of the embodiments described herein are advantageously more effective than manual analysis and creation of decision trees.","Once the decision tree has been augmented based on any of the various mechanisms described herein, the decision tree and\/or process flow may be updated and sent to be used in a production environment automatically. For example, manager computer  shown in  may apply the next best split algorithm or a grow procedure to an existing decision tree and then send the updated decision tree and\/or process flow to production server , simply by clicking an appropriate button or otherwise interacting with a user interface on manager computer . The new process flow and\/or decision tree may then replace on existing process flow being used in production or it may be used as a challenger strategy to run against a chosen random population of future decisions.",{"@attributes":{"id":"p-0104","num":"0103"},"figref":["FIG. 11","FIG. 11","FIG. 2","FIG. 11","FIG. 10"],"b":["201","1004"]},"The interface of  may display various parameters  that were applied to the next best split algorithm. Additionally, the interface may display a table  of the resulting proposed splits. Column  of the table may show each of the parameters or attributes suggested by the algorithm as a potential candidate for splitting. For example, as shown in , the revolver score card score  has been recommended by the next best split algorithm as a potential candidate for splitting.","Clicking the expansion interface element  may display the proposed new nodes calculated by the next best split algorithm. In the example shown in , the algorithm has proposed splitting the \u201crevolver scorecard score\u201d attribute into three leaf node categories: scores of under 780 , scores between 780 and 800  and other scores .","Table  may include further information that may assist the user in evaluating the various proposed splits. For example, column  displays a predictive ranking indicating the quality of each of the various proposed splits. In the example shown in , column  indicates that the \u201crevolver scorecard score\u201d split is better than either the \u201cmarital status\u201d split or the \u201cmonthly disposable income\u201d split.","Column  displays the number of records that fall into each of the proposed subnodes for the split. For example, subnode  would be associated with 2,195 records, subnode  would be associated with 1,355 records, and subnode  would be associated with 4,860 records. The information may be useful to a user in evaluating the quality and\/or usefulness of a particular proposed split.","Column  displays a calculated statistic or correlation indicating the quality of the splits. Statistical measures such as GINI, Chi-square, Omega-square, and so on, can be included to illustrate the improvement in predictive strength over the original segmentation. In an embodiment, multiple statistical measures can be displayed to the user as additional columns of data.",{"@attributes":{"id":"p-0110","num":"0109"},"figref":["FIG. 12","FIG. 12","FIG. 7","FIG. 11","FIG. 12","FIG. 12"],"b":["705","1104","705","1201","1202","1203"],"i":"a "},"In an embodiment, the user can merge the proposed splits into the existing decision tree with a single click or other command so that the proposed split automatically becomes part of the decision tree. Thus, the user can generate and\/or add to existing decision trees or other structures through a tree-building process that is automated, with the flexibility to allow user customization where desired.","In another embodiment, the system automatically adds proposed split nodes to the tree without requiring further user interaction, thereby further increasing the automation of the software.",{"@attributes":{"id":"p-0113","num":"0112"},"figref":["FIG. 13","FIG. 9","FIG. 10"],"b":["903","1301"]},"The \u201cnext best split\u201d and \u201cgrow\u201d options provide automated and assisted mechanisms for increasing the number of nodes in a decision tree, thereby improving the granularity and prediction power of the decision tree. However, the decision tree must also be able to determine appropriate outcomes for any particular leaf node. Accordingly, embodiments of the software provide functionality for automatically proposing outcomes for leaf nodes on the decision tree.",{"@attributes":{"id":"p-0115","num":"0114"},"figref":["FIG. 14","FIG. 1"],"b":"101"},"At block , a selection of leaf nodes is received. The leaf nodes may be selected by the user, for example, by clicking on individual nodes and\/or by clicking on a common parent to a set of nodes. Additionally and\/or alternatively, the leaf nodes may be automatically selected when they are created, for example, by a next best split or grow operation. This may be the case, for example, where optional block  of  is performed.","At block , allocation rules and constraints are received to be used in automatically proposing outcomes. The allocation rules and constraints may include, for example, one or more parameters to the optimized or analyzed, and one or more parameters, associated with either particular outcomes or with the overall outcome, that are to be satisfied, optimized, or otherwise considered by the algorithm. Additionally, the allocation rules and constraints may include a selection of one or more algorithms to be used to calculate parameters such as forecast or prediction parameters. For example, if a user wishes to optimize or constrain a parameter of \u201cpredicted future spending,\u201d the user may be given the option to select an algorithm or formula for calculating predicted future spending. In an embodiment, the user may be able to specify a custom algorithm or formula by providing executable instructions or mathematical formulas to the user interface.","At block , a set of outcomes for the selected leaf nodes is calculated. The calculation may be performed using artificial intelligence, optimization, statistical and\/or heuristic algorithms based on the allocation rules and constraints received at block  and\/or data such as benchmark data, monitoring data, and\/or other data.","Once the proposed outcomes have been calculated, they may optionally be proposed to the user at block . This may be done, for example, by showing the user an appropriate user interface, such as a preview of the proposed outcomes on the decision tree. At block , user input is received indicating whether the proposed outcomes are acceptable and\/or indicating modifications to the proposed outcomes or the rules and constraints.","At block , the software automatically applies the proposed outcomes, optionally with any user modifications made at block , to the decision tree. In an embodiment where blocks  and  are not performed, the outcomes may be automatically applied to the tree once they have been calculated.",{"@attributes":{"id":"p-0121","num":"0120"},"figref":["FIG. 15","FIG. 1","FIG. 15","FIG. 9"],"b":["201","904"]},"The user may be able to select parameters to be optimized, such as the sum of credit limits . The user may further be able to indicate whether to maximize, minimize, or perform some other analysis of the measured parameter, at input element .","Additionally, the user may be able to specify a set of constraints on the best outcomes calculation using table . As shown there, the user may specify, for example, a maximum bad debt amount in column  and\/or a maximum credit limit amount , for the overall calculation and\/or for particular outcomes.","Additionally, the user may be able to specify which outcomes may be applied to the selected leaf nodes, using column . Thus, as shown in the example of , the best outcomes calculation will attempt to maximize the sum of credit limits while ensuring that the \u201coverall bad debts\u201d total value remains under $10 million and the \u201coverall credit limits\u201d total value remains under $80 million.","Radio buttons  enable the user to choose whether the \u201cpropose best outcomes\u201d calculation assigns outcomes to all of the selected nodes or only nodes that currently have no outcome assigned. Thus, the user may be able to use the algorithm to improve upon an existing assignment of outcomes to nodes, or the user may be able to use the calculation with respect to newly created nodes, such as nodes generated by the next best split algorithm.",{"@attributes":{"id":"p-0126","num":"0125"},"figref":["FIG. 16","FIG. 14","FIG. 2"],"b":["1404","201"]},"The outcomes assigned by the \u201cpropose best outcomes\u201d calculation may be shown in column . In an embodiment, the outcomes that have been changed and\/or added by the algorithm may be highlighted so that they may be easily found by the user. Additionally, informational statistics, such as the sum of credit limits for each of the nodes, may be shown in column , and the sum of bad debt for each of the nodes may be shown in column . These and other statistics that may be included may assist the user in evaluating whether any changes are required to the proposed outcome and\/or to the overall decision tree.","In an embodiment, the user is easily able to view previous values by hovering a mouse cursor over an appropriate portion of the user interface and\/or any other appropriate user interaction, as shown by box .","The interface may further include a summary table  of information about the proposed best outcomes. For example, the table may display the sum of credit limits for each of the outcomes in column , and the sum of bad debts for each of the outcomes in column . This information further enables the user to evaluate the assignment of outcome on the decision tree.","Buttons  allow the user to apply the proposed outcome to the existing tree and\/or to modify or cancel the proposed best outcomes. If the user wishes to apply the proposed best outcomes, then the decision tree is automatically updated with the proposed best outcomes as calculated.","Depending on the embodiment, the systems and methods described with reference to the flowcharts and block diagrams, as well as any other methods discussed herein, may include fewer or additional blocks and\/or the blocks may be performed or arranged in a different order than is illustrated. Software code configured for execution on a computing device in order to perform the methods may be provided on a computer readable medium, such as a compact disc, digital video disc, flash drive, hard drive, memory device or any other tangible medium. Such software code may be stored, partially or fully, on a memory of a computing device, such as the computing systems - of  and\/or other computing devices illustrated in the Figures, in order to perform the respective methods. For ease of explanation, the methods have been described herein as performed by the various modules, such as may be executed on the computing systems -, which should be interpreted to include any one or more of the computing devices noted above and\/or any other suitable computing device.","Conditional language, such as, among others, \u201ccan,\u201d \u201ccould,\u201d \u201cmight,\u201d or \u201cmay,\u201d unless specifically stated otherwise, or otherwise understood within the context as used, is generally intended to convey that certain embodiments include, while other embodiments do not include, certain features, elements and\/or steps. Thus, such conditional language is not generally intended to imply that features, elements and\/or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding, with or without user input or prompting, whether these features, elements and\/or steps are included or are to be performed in any particular embodiment.","Any process descriptions, elements, or blocks in the flow diagrams described herein and\/or depicted in the attached figures should be understood as potentially representing modules, segments, or portions of code which include one or more executable instructions for implementing specific logical functions or steps in the process. Alternate implementations are included within the scope of the embodiments described herein in which elements or functions may be deleted, executed out of order from that shown or discussed, including substantially concurrently or in reverse order, depending on the functionality involved, as would be understood by those skilled in the art.","All of the methods and processes described above may be embodied in, and partially or fully automated via, software code modules executed by one or more general purpose computers. For example, the methods described herein may be performed by the computing devices described herein and\/or any other suitable computing device. The methods may be executed on the computing devices in response to execution of software instructions or other executable code read from a tangible computer readable medium. A tangible computer readable medium is a data storage device that can store data that is readable by a computer system. Examples of computer readable mediums include read-only memory, random-access memory, other volatile or non-volatile memory devices, CD-ROMs, magnetic tape, flash drives, and optical data storage devices.","It should be emphasized that many variations and modifications may be made to the above-described embodiments, the elements of which are to be understood as being among other acceptable examples. All such modifications and variations are intended to be included herein within the scope of this disclosure. The foregoing description details certain embodiments of the invention. It will be appreciated, however, that no matter how detailed the foregoing appears in text, the invention can be practiced in many ways. As is also stated above, it should be noted that the use of particular terminology when describing certain features or aspects of the invention should not be taken to imply that the terminology is being re-defined herein to be restricted to including any specific characteristics of the features or aspects of the invention with which that terminology is associated. The scope of the invention should therefore be construed in accordance with the appended claims and any equivalents thereof."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 17"}]},"DETDESC":[{},{}]}
