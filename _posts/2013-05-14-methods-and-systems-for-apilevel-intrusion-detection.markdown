---
title: Methods and systems for API-level intrusion detection
abstract: This disclosure generally relates to computer security, and more particularly to methods and systems for application programming interface (API)-level intrusion detection. In some embodiments, a computer-readable medium is disclosed, storing instructions for: receiving an API call for a service at an API sandbox module; parsing the API call to extract at least one of: an API call name; and or one or more API call parameters; generating a copy of the at least one of: the API call name and or the one or more API call parameters; determining, via an intrusion detection rules execution engine, whether the API call violates one or more security rules obtained from a security rules object, using the copy of the at least one of: the API call name and or the one or more API call parameters; and providing an indication of whether the API call violates the one or more security rules.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08990942&OS=08990942&RS=08990942
owner: Wipro Limited
number: 08990942
owner_city: Bangalore
owner_country: IN
publication_date: 20130514
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["PRIORITY CLAIM","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This disclosure claims priority under 35 U.S.C. \u00a7119 to: India Application No. 712\/CHE\/2013, filed Feb. 18, 2013, and entitled \u201cMETHODS AND SYSTEMS FOR API-LEVEL INTRUSION DETECTION.\u201d The aforementioned application is incorporated herein by reference in its entirety.","This disclosure generally relates to computer security, and more particularly to methods and systems for API-level intrusion detection.","Web services may be protected from intrusions (e.g., denial-of-service attacks, malware, etc.) using intrusion detection systems (IDS). Intrusion detection systems typically operate on individual Internet Protocol (IP) data packets, and are generally network-based (NIDS) or host-based (HIDS). A NIDS scans network packets at the router-level, and logs information on suspicious packets into a log file. A HIDS monitors a single computer system's state, memory, and packets received at its network interface for violations of that host's security policies. IDS systems' executions are commonly categorized as Behavior-Based or Anomaly-Based. IDS implementations and products may be designed anywhere from software-only to completely embedded hardware\/appliance boxes. Recent advances in IDS have focused on Application level IDS, where the IDS rules are neither at the host nor at the network, instead the IDS rules are coded along with the Application. The benefits of Application level IDS includes the fact that an Application developer can usually tell what is\/are the right usage, and likewise what is\/are the wrong usage of the Application, and hence the latter (i.e., the wrong usage) are best captured at the Application programming level.","In one embodiment, a non-transitory computer-readable medium is disclosed, storing computer-executable instructions for: receiving an application programming interface (API) call for a service at an API sandbox module; parsing the API call to extract at least one of: an API call name; and or one or more API call parameters; generating a copy of the at least one of: the API call name and or the one or more API call parameters; providing, to an intrusion detection rules execution engine, the copy of the at least one of: the API call name and or the one or more API call parameters; determining, via the intrusion detection rules execution engine, whether the API call is in violation of one or more security rules obtained from a security rules object; and providing an indication of whether the API call is in violation of the one or more security rules. In another embodiment, a non-transitory computer-readable medium is disclosed, storing intrusion detection rules at an SDK, with the SDK capturing the API calls and executing the intrusion detection rules, wherein the selection of specific APIs and selection of specific calling Applications for intrusion rules execution may be customized with a user interface, and wherein the security rules for the intrusion detection may also be customized with a user interface. In another embodiment the SDK may be co-located at an enterprise level software gateway tunneling all selected API calls from\/to within the enterprise prior to\/from transmittal external to the enterprise unto the Internet.","It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention, as claimed.","Exemplary embodiments are described with reference to the accompanying drawings. Wherever convenient, the same reference numbers are used throughout the drawings to refer to the same or like parts. While examples and features of disclosed principles are described herein, modifications, adaptations, and other implementations are possible without departing from the spirit and scope of the disclosed embodiments. It is intended that the following detailed description be considered as exemplary only, with the true scope and spirit being indicated by the following claims.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 1","FIG. 1"],"b":["102","102","104","103","102","102","103","105","103","110","110","110","110"],"i":["a","k","n","t","a","b","a","k","n","t","a ","a","b","a","b ","a","k","n","t","k ","n "]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 2","FIG. 3"],"b":"201"},"In some embodiments, the local copy created by the API sandbox may be provided via a T-Tap output (see ) to a rules execution engine (see ). The T-Tap and API sandbox ensure that the data and local API copy being operated on (e.g., by the rules execution engine, dashboard UI, etc.) are not accessible to modules on the other side of the API sandbox, and other modules or data \u201coutside\u201d the API sandbox may not become involved in processes executed \u201cwithin\u201d the API sandbox. The rules execution engine may obtain data upon which to operate from a data expiry unit (see ). For example, the data expiry unit may store the API call names and API call parameters (e.g., input variables, source IP address, destination IP address, user ID, etc.) up to a time period beyond which the storage is freed and new data are stored on a FIFO (first in first out) basis. The data expiry unit may be implemented as a relational database, file (e.g., CSV, text file, etc.), object stored in memory, etc. The rules execution engine may obtain security rules for processing the API call from a security rules file, object, or database, etc. (see ). The security rules may be modified through a graphical user interface (GUI) like a security rules UI (see ). The results of the security rules processing of the API calls may be reported (see ) or displayed via a graphical user interface dashboard\/output (see ).",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3","b":["301","311","101","102","302","312","104"]},"In some embodiments implementing IP re-routing, the intrusion detection system architecture (see ) may be implemented in a separate monitoring server . An API call  generated by the user device  may first be directed to the IP address of the monitoring server . API calls may be renamed lexically at the source to ensure that the calls first go to a security check process (e.g., implemented as a dynamic-link library (DLL)), for intercept and security check, prior to being forwarded to the web application server for user request processing. Upon receiving the API call from the user device, the monitoring server may perform a security check for the API call, determine whether the API call can be forwarded to the application server  implementing the web application service, and determine the IP address of such application server . Once the monitoring server determines that the API call can be forwarded, the monitoring server may forward the API call (see ) to the IP address corresponding to the application server.","In some embodiments implementing lexical re-routing, the user device  may provide the API call  directly to the application server , but the API call  may be intercepted by a security check process (e.g., implemented as a dynamic-link library (DLL)) rather than the web application service process executing on the application server . Upon receiving the API call from the user device, the security check or intrusion monitoring or intrusion detection process may perform a security check for the API call, determine whether the API call can be forwarded to the web application service process, and determine the API name corresponding to such application service process. Once the monitoring process determines that the API call can be forwarded, the monitoring process may forward the API call (see ) to the web application service process executing on the application server.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 4","FIG. 3","FIG. 2"],"b":["401","402","403","404","402","405","406","407","408"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIGS. 5A-C","FIG. 5A"],"b":["101","501","102","104","102","502"]},{"@attributes":{"id":"p-0024","num":"0023"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"POST \/rest\/n_apiname HTTP\/1.1"]},{"entry":[{},"Host: www.webservice1.com"]},{"entry":[{},"Content-Type: application\/x-www-form-urlencoded"]},{"entry":[{},"Content-Length: 46"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Api_key=213456543&param1=aedc3r4&param2=md8945"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In some embodiments, although the API call is ultimately intended to be provided to the application server , the API call may be directed to a monitoring server  instead (see ). For example, in the API call above, \u201cwww.webservice1.com\u201d may point to monitoring server  rather than application server . In alternate embodiments, the API call may be addressed to the application server itself (that is, in the example above, \u201cwww.webservice1.com\u201d may point to application server  itself), but the application server may be configured to execute an intrusion detection module (e.g., via a DLL) that intercepts the API call before the API call is read by a web service application executing on the application server. For example, this may be achieved by the application server  parsing the API call to extract the name of the API call (which, in the example above, may be considered \u201cn_apiname\u201d), and using the API call name to determine whether the API call should be passed to the intrusion detection module. In the example above, the presence of the \u201cn_\u201d modifier before the rest of the API call name may be the trigger for intercepting the API call and passing it to the intrusion detection module. It is to be understood that although the disclosure hereinafter may refer to a monitoring server, the monitoring server  may be implemented as a standalone server, or as a process or application executing on the application server , or in any other configuration. In some embodiments, whether the API call is directed to a monitoring server  or to an intrusion detection module executing on the application server , rather than directed to the application server, may not be discoverable based on the API call template employed by a user, user device, or developer of the application executing on the user device.","In some embodiments, the monitoring server  may obtain the API call from the user device (see ). The monitoring server may generate a local copy of the API call (see ). For example, the local copying may be non-invasive, in that no processing (beyond temporary storage of the original version of the API call and creation of the local copy) may be performed using the original version of the API call, and all further processing for intrusion detection may be performed on the local copy of the API call (see, e.g., , T-Tap output ). The monitoring server may parse the copy of the API call and extract the API name and API call parameters (see ). For example, if the monitoring server utilizes PHP commands, the monitoring server may utilize the standard GET request ($_GET[\u2018param\u2019]) to extract the API call parameters from the API call. Using the API call name and\/or API call parameters as inputs to a database query (e.g., using PHP\/SQL commands such as SELECT), the monitoring server may identify and obtain the security rule(s) to apply to the API call for intrusion detection (see -). In some embodiments, a user interface may be provided via which a security administrator may select options such as, without limitation: which API call names should be analyzed for intrusion detection; which application developers develop applications whose API calls are to be analyzed for intrusion detection; which security rules should apply to any particular set of API calls (e.g., grouped by application developer, application type, application usage, web application service provider, client(s) of the monitoring server administrator, etc.), or the like. It is to be understood that any combinations of application develop, application, API call and\/or other parameters may be selected by the security administrator, and settings\/rules for which API calls are to be analyzed for intrusion detection may be based on such combinations of parameters. An example of PHP\/SQL commands to obtain the security rules using the API call name as a lookup variable is provided below:",{"@attributes":{"id":"p-0027","num":"0026"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?PHP"]},{"entry":[{},"header(\u2018Content-Type:text\/plain\u2019);"]},{"entry":[{},"mysql_connect(\u201cwww.webservice1.com\u201d,$DBserver,$pass);"]},{"entry":[{},"mysql_select_db(\u201cRULES.SQL\u201d);"]},{"entry":[{},"$query=\u201dSELECT rule_id rule_expression FROM"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"SecurityRulesTable WHERE api_name = $apiname\u201d;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"$result=mysql_query($query);"]},{"entry":[{},"mysql_close(\u201cRULES.SQL\u201d);"]},{"entry":[{},"?>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In some embodiments, the security rules may be stored in a file (e.g., a CSV, text file, etc.), as an object in memory, a hash table, etc. In some embodiments, the security rules may be stored in a secure database, and may be accessed only by the monitoring server, or the intrusion detection module executing on the application server. In particular, in some embodiments, the application server, application developer, user device and user all may not have access to the security rules. Similarly, the security rules in some embodiments may only be modified by an administrator with appropriate security credentials for accessing the secure database. A security rule may define one or more tests to be performed on the API call, and may provide one or more recommended actions depending on the outcome of the one or more tests. An example of a security rule is provided in pseudo-code below:",{"@attributes":{"id":"p-0029","num":"0028"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RULE FrequencyTest {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IF numrequests($api_name)>50 OVER time(01:00:00)"]},{"entry":[{},"THEN { setAPIstate(\u201cHOLD\u201d);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"createUIobject(last_request($api_name))"]},{"entry":[{},"createReport(last_request($api_name))"]},{"entry":[{},"addQueue(last_request($api_name), priority(3))"]},{"entry":[{},"doSecurityRule(DoS_Attack($api_name))}"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In this example security rule called \u201cFrequencyTest,\u201d if the number of API calls of the name stored in the variable \u2018$api_name\u2019 received in the last hour exceeds fifty, the monitoring server is to proactively place a hold on the API call, and request the security administrator for authorization to allow the API call to be forwarded to the application server. Specifically, the monitoring server is to create a user interface object as well as a report based on the last API call request received, and place the request for administrator authorization in a queue. The security rule also calls for another security rule called \u201cDoS_Attack\u201d to be run on the API calls of the name stored in the variable \u2018$api_name\u2019. Three additional examples of security rules, implemented using Visual Basic (VB) code, are provided below. In a first example, assuming an API call is made by the user device to send an SMS message to a large number of recipients, a security rule implemented in VB code may test for the presence of blacklisted keywords in the SMS message.",{"@attributes":{"id":"p-0031","num":"0030"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Sub BlackListed_Keyword_Check_for_SMSPayload( )"]},{"entry":[{},"Dim BadWord As String"]},{"entry":[{},"Dim i As Integer"]},{"entry":[{},"Dim SMSPayload As String"]},{"entry":[{},"Sheets(\u201cKeyword Blacklist\u201d).Activate"]},{"entry":[{},"Range(\u201cC4\u201d).Select"]},{"entry":[{},"i = 0"]},{"entry":[{},"Do Until IsEmpty(ActiveCell.Value)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BadWord = Trim(ActiveCell.Value)"]},{"entry":[{},"Sheets(\u201cSMS Log\u201d).Activate"]},{"entry":[{},"Range(\u201cE3\u201d).Select"]},{"entry":[{},"Do Until IsEmpty(ActiveCell.Value)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SMSPayload = Trim(ActiveCell.Value)"]},{"entry":[{},"\u2032 MsgBox BadWord"]},{"entry":[{},"\u2032 MsgBox SMSPayload"]},{"entry":[{},"\u2032 MsgBox (InStr(SMSPayload, BadWord))"]},{"entry":[{},"If InStr(SMSPayload, BadWord) > 0 Then"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2032 MsgBox \u201cFound the badword\u201d"]},{"entry":[{},"ActiveCell.Interior.Color ="]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RGB(255, 0, 0)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If ActiveCell.Interior.Color <>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RGB(255, 0, 0) Then ActiveCell.Interior.Color ="]},{"entry":[{},"RGB(0, 255, 0)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2032 Else: MsgBox \u201cIts already red"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"and flagged from a prev match skip it\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End If"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2032 End If"]},{"entry":[{},"ActiveCell.Offset(1, 0).Select"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Loop"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"i = i + 1"]},{"entry":[{},"Sheets(\u201cKeyword Blacklist\u201d).Activate"]},{"entry":[{},"Range(\u201cC4\u201d).Select"]},{"entry":[{},"ActiveCell.Offset(i, 0).Select"]},{"entry":[{},"Loop"]},{"entry":[{},"Sheets(\u201cSMS Log\u201d).Activate"]},{"entry":[{},"Range(\u201cE3\u201d).Select"]},{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In a second example, a security rule implemented in VB code may check a message sent via Wireless Application Protocol (WAP), e.g., to a mobile phone, to determine whether it engages in a phishing scam (e.g., whether it contains a link to a website hosting known malware).",{"@attributes":{"id":"p-0033","num":"0032"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Sub Phishing_URL_Check_for_WAPPush( )"]},{"entry":[{},"Dim BadWord As String"]},{"entry":[{},"Dim i As Integer"]},{"entry":[{},"Dim WAPPushURL As String"]},{"entry":[{},"Sheets(\u201cPhishing URL List\u201d).Activate"]},{"entry":[{},"Range(\u201cC4\u201d).Select"]},{"entry":[{},"i = 0"]},{"entry":[{},"Do Until IsEmpty(ActiveCell.Value)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BadWord = Trim(ActiveCell.Value)"]},{"entry":[{},"Sheets(\u201cWAP Push Log\u201d).Activate"]},{"entry":[{},"Range(\u201cE3\u201d).Select"]},{"entry":[{},"Do Until IsEmpty(ActiveCell.Value)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"WAPPushURL = Trim(ActiveCell.Value)"]},{"entry":[{},"\u2032 MsgBox BadWord"]},{"entry":[{},"\u2032 MsgBox SMSPayload"]},{"entry":[{},"\u2032 MsgBox (InStr(SMSPayload, BadWord))"]},{"entry":[{},"If InStr(WAPPushURL, BadWord) > 0 Then"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2032 MsgBox \u201cFound the badword\u201d"]},{"entry":[{},"ActiveCell.Interior.Color ="]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RGB(255, 0, 0)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If ActiveCell.Interior.Color <>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RGB(255, 0, 0) Then ActiveCell.Interior.Color ="]},{"entry":[{},"RGB(0, 255, 0)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2032 Else: MsgBox \u201cIts already red"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"and flagged from a prev match skip it\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End If"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2032 End If"]},{"entry":[{},"ActiveCell.Offset(1, 0).Select"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Loop"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"i = i + 1"]},{"entry":[{},"Sheets(\u201cPhishing URL List\u201d).Activate"]},{"entry":[{},"Range(\u201cC4\u201d).Select"]},{"entry":[{},"ActiveCell.Offset(i, 0).Select"]},{"entry":[{},"Loop"]},{"entry":[{},"Sheets(\u201cWAP Push Log\u201d).Activate"]},{"entry":[{},"Range(\u201cE3\u201d).Select"]},{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In a third example, a security rule implemented in VB code may check whether a large number of API calls are originating from a single location, or if there is a high density of API calls originating from a relatively small area (e.g., which may be indicative of misuse of the API call).",{"@attributes":{"id":"p-0035","num":"0034"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Sub Location_Log_Analysis_Step( )"},{"entry":"\u2032 Macro1 Macro"},{"entry":"\u2032 Location Log Analysis all Steps"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Range(\u201cB4:H21\u201d).Select"]},{"entry":[{},"ActiveWorkbook.Worksheets(\u201cLocal Log Dashboard"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Analysis\u201d).Sort.SortFields.Clear"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ActiveWorkbook.Worksheets(\u201cLocal Log Dashboard"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Analysis\u201d).Sort.SortFields.Add "]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Key:=Range(\u201cD4:D21\u201d), SortOn:=xlSortOnValues,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Order:=xlAscending, "]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DataOption:=xlSortNormal"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ActiveWorkbook.Worksheets(\u201cLocal Log Dashboard"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Analysis\u201d).Sort.SortFields.Add "]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Key:=Range(\u201cH4:H21\u201d), SortOn:=xlSortOnValues,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Order:=xlAscending, "]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DataOption:=xlSortNormal"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"With ActiveWorkbook.Worksheets(\u201cLocal Log"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Dashboard Analysis\u201d).Sort"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".SetRange Range(\u201cB4:H21\u201d)"]},{"entry":[{},".Header = xlGuess"]},{"entry":[{},".MatchCase = False"]},{"entry":[{},".Orientation = xlTopToBottom"]},{"entry":[{},".SortMethod = xlPinYin"]},{"entry":[{},".Apply"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},"Range(\u201cG25\u201d).Select"]},{"entry":[{},"Range(\u201cI2\u201d).Select"]},{"entry":[{},"With Selection"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".HorizontalAlignment = xlGeneral"]},{"entry":[{},".VerticalAlignment = xlCenter"]},{"entry":[{},".WrapText = False"]},{"entry":[{},".Orientation = 0"]},{"entry":[{},".AddIndent = False"]},{"entry":[{},".ShrinkToFit = False"]},{"entry":[{},".ReadingOrder = xlContext"]},{"entry":[{},".MergeCells = False"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},"ActiveCell.FormulaR1C1 = \u201cTally\u201d"]},{"entry":[{},"Range(\u201cI4\u201d).Select"]},{"entry":[{},"ActiveCell.FormulaR1C1 = \u201c1\u201d"]},{"entry":[{},"Range(\u201cI5\u201d).Select"]},{"entry":[{},"ActiveCell.FormulaR1C1 = "]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u201c=IF(AND((RC[\u22125]=R[\u22121]C[\u22125]),(RC[\u22121]=R[\u22121]C[\u2212"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"1])),1+R[\u22121]C,1)\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Range(\u201cI5\u201d).Select"]},{"entry":[{},"Selection.AutoFill Destination:=Range(\u201cI5:I6\u201d),"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Type:=xlFillDefault"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Range(\u201cI5:I6\u201d).Select"]},{"entry":[{},"Selection.AutoFill Destination:=Range(\u201cI5:I21\u201d),"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Type:=xlFillDefault"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Range(\u201cI5:I21\u201d).Select"]},{"entry":[{},"With Selection"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".HorizontalAlignment = xlCenter"]},{"entry":[{},".VerticalAlignment = xlBottom"]},{"entry":[{},".WrapText = False"]},{"entry":[{},".Orientation = 0"]},{"entry":[{},".AddIndent = False"]},{"entry":[{},".IndentLevel = 0"]},{"entry":[{},".ShrinkToFit = False"]},{"entry":[{},".ReadingOrder = xlContext"]},{"entry":[{},".MergeCells = False"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},"Range(\u201cI4\u201d).Select"]},{"entry":[{},"With Selection"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".HorizontalAlignment = xlCenter"]},{"entry":[{},".VerticalAlignment = xlBottom"]},{"entry":[{},".WrapText = False"]},{"entry":[{},".Orientation = 0"]},{"entry":[{},".AddIndent = False"]},{"entry":[{},".IndentLevel = 0"]},{"entry":[{},".ShrinkToFit = False"]},{"entry":[{},".ReadingOrder = xlContext"]},{"entry":[{},".MergeCells = False"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End With"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Range(\u201cJ2\u201d).Select"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"With Selection"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".HorizontalAlignment = xlGeneral"]},{"entry":[{},".VerticalAlignment = xlCenter"]},{"entry":[{},".WrapText = False"]},{"entry":[{},".Orientation = 0"]},{"entry":[{},".AddIndent = False"]},{"entry":[{},".ShrinkToFit = False"]},{"entry":[{},".ReadingOrder = xlContext"]},{"entry":[{},".MergeCells = False"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},"ActiveCell.FormulaR1C1 = \u201cReset\u201d"]},{"entry":[{},"Range(\u201cJ4:J21\u201d).Select"]},{"entry":[{},"With Selection"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".HorizontalAlignment = xlCenter"]},{"entry":[{},".VerticalAlignment = xlBottom"]},{"entry":[{},".WrapText = False"]},{"entry":[{},".Orientation = 0"]},{"entry":[{},".AddIndent = False"]},{"entry":[{},".IndentLevel = 0"]},{"entry":[{},".ShrinkToFit = False"]},{"entry":[{},".ReadingOrder = xlContext"]},{"entry":[{},".MergeCells = False"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},"Range(\u201cJ4\u201d).Select"]},{"entry":[{},"ActiveCell.FormulaR1C1 = \u201c0\u201d"]},{"entry":[{},"Range(\u201cJ5\u201d).Select"]},{"entry":[{},"ActiveCell.FormulaR1C1 = \u201c=IF\u201d"]},{"entry":[{},"Range(\u201cJ5\u201d).Select"]},{"entry":[{},"ActiveCell.FormulaR1C1 = \u201c=IF(RC[\u22121]>R[\u22121]C[\u2212"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"1],0,1)\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Range(\u201cJ5\u201d).Select"]},{"entry":[{},"Selection.AutoFill Destination:=Range(\u201cJ5:J21\u201d),"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Type:=xlFillDefault"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Range(\u201cJ5:J21\u201d).Select"]},{"entry":[{},"Application.Width = 1080"]},{"entry":[{},"Application.Height = 609.75"]},{"entry":[{},"Range(\u201cK2\u201d).Select"]},{"entry":[{},"With Selection"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".HorizontalAlignment = xlGeneral"]},{"entry":[{},".VerticalAlignment = xlCenter"]},{"entry":[{},".WrapText = False"]},{"entry":[{},".Orientation = 0"]},{"entry":[{},".AddIndent = False"]},{"entry":[{},".ShrinkToFit = False"]},{"entry":[{},".ReadingOrder = xlContext"]},{"entry":[{},".MergeCells = False"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End With"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Range(\u201cK2\u201d).Select"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ActiveCell.FormulaR1C1 = \u201cInterval\u201d"]},{"entry":[{},"Range(\u201cK2:K21\u201d).Select"]},{"entry":[{},"With Selection"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".HorizontalAlignment = xlCenter"]},{"entry":[{},".WrapText = False"]},{"entry":[{},".Orientation = 0"]},{"entry":[{},".AddIndent = False"]},{"entry":[{},".IndentLevel = 0"]},{"entry":[{},".ShrinkToFit = False"]},{"entry":[{},".ReadingOrder = xlContext"]},{"entry":[{},".MergeCells = False"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},"Selection.NumberFormat = \u201cGeneral\u201d"]},{"entry":[{},"Range(\u201cK10\u201d).Select"]},{"entry":[{},"ActiveCell.FormulaR1C1 = "]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u201c=MAX(R[\u22126]C[\u22129]:R[\u22121]C[\u22129])\u2212MIN(R[\u22126]C[\u2212"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"9]:R[\u22121]C[\u22129])\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Range(\u201cK14\u201d).Select"]},{"entry":[{},"ActiveCell.FormulaR1C1 = \u201c \u201d"]},{"entry":[{},"Range(\u201cK15\u201d).Select"]},{"entry":[{},"ActiveCell.FormulaR1C1 = "]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u201c=MAX(R[\u22123]C[\u22129]:R[\u22121]C[\u22129])\u2212MIN(R[\u22123]C[\u2212"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"9]:R[\u22121]C[\u22129])\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Range(\u201cK16\u201d).Select"]},{"entry":[{},"ActiveWorkbook.Save"]},{"entry":[{},"Range(\u201cB4:H9\u201d).Select"]},{"entry":[{},"With Selection.Interior"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".Pattern = xlSolid"]},{"entry":[{},".PatternColorIndex = xlAutomatic"]},{"entry":[{},".Color = 255"]},{"entry":[{},".TintAndShade = 0"]},{"entry":[{},".PatternTintAndShade = 0"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},"Range(\u201cB12:H14\u201d).Select"]},{"entry":[{},"With Selection.Interior"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".Pattern = xlSolid"]},{"entry":[{},".PatternColorIndex = xlAutomatic"]},{"entry":[{},".Color = 65535"]},{"entry":[{},".TintAndShade = 0"]},{"entry":[{},".PatternTintAndShade = 0"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"It is to be understood that the above rules are only examples, and a wide variety of rules operating in various contexts on any combination of API call names, API call parameters, and other variables are contemplated.","In some embodiments, the monitoring server may apply the security rules obtained from a security file, object, or database to the API call. For example, the monitoring server may select a security rule (see ), and parse the security rule to extract the security test to apply to the API call (see ). Upon identifying the requirements of the test, the monitoring server may obtain the necessary information and apply the test to the information (e.g., API call name, API call parameters, call frequency, call locations, etc.) (see ). The monitoring server may determine whether the test is passed (see ). If the test is passed, the monitoring server may check to see if additional security rules need to be applied (see ), and may apply those additional security rules. If all the security rules have been passed, the monitoring server may determine that the API call can be re-routed to the application server or application process and may initiate API call re-routing accordingly (see ).","In some embodiments, if a test of a security rule is not passed (see , option \u201cNo\u201d), the monitoring server may determine the next actions to take. With reference to , in some embodiments, the monitoring server may determine whether the security rule requires the monitoring server to proactively block the API call (see ). If the monitoring server determines that the API call should be proactively blocked, the monitoring server may delete the original version of the API call, so that it cannot be forwarded to the application server or application process (see ). The monitoring server may also determine whether the API call should be brought to the attention of the security administrator (see ). If the monitoring server determines that the API call should be reported to the security administrator, the monitoring server may generate (or update, if one has already been created for the API call) a report and\/or a dashboard UI object for presentation via a graphical user interface to the security administrator (see ). The monitoring server may determine whether there are additional security rules to process for the API call (see ), and process any such security rules in a manner like that described above.","In some embodiments, once all required security rules have been processed, if the API call has already been proactively blocked (see ), the monitoring server may determine that no further action is required, and end processing for the current API call (e.g., the monitoring server may move on to processing another API call). If the monitoring server determines that the security administrator can grant authorization to re-route the API call to the application server or process (see ), the monitoring server may determine a queue priority value for the report and\/or dashboard UI object (e.g., to determine a position within a report queue for the API call) (see ). The monitoring server may insert the report and\/or dashboard UI object into the report queue according to the priority value assigned to the report and\/or dashboard UI object (see ). For example, the priority value may be determined based on instructions included in the security rule, and\/or a timestamp associated with the API call. In some embodiments, the reporting to the security administrator may be necessary to authorize the re-routing of the API call (see ). In such cases, the monitoring server may wait for the security administrator to respond (see ). If the security administrator does not provide the authorization (see , option \u201cNo\u201d), the monitoring server may delete the original version of the API call to prevent it from being re-routed to the application server or process (see ). In some embodiments, the reporting to the security administrator may be needed only for reporting purposes, and not necessary to authorize the re-routing of the API call (see , option \u201cNo\u201d). In such cases, the monitoring server may initiate the API call re-routing (see ).","With reference to , in some embodiments, the monitoring server may re-route the API call to the application server (e.g., in the case of IP re-routing) or the application process (e.g., in the case of lexical re-routing). The monitoring server may determine whether to perform IP or lexical re-routing (see ). The monitoring server may determine this based on the format of the API call obtained from the user device. If the API call was addressed to the monitoring server, then the monitoring server may determine that IP re-routing is required. If the API call name includes a trigger for passing the API call to another process (e.g., an application process), then the monitoring server may determine that lexical re-routing is required. If IP re-routing is required, the monitoring server may obtain the IP address from the original API call or from the local copy (see ). The monitoring server may determine a new IP address (e.g., that of the application server) for re-routing the API call (see ). For example, the monitoring server may utilize a lookup table using the IP address from the original API call as a lookup variable. The monitoring server may create a new API call using the new IP address (see ). An example new API call is provided below:",{"@attributes":{"id":"p-0041","num":"0040"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"POST \/rest\/n_apiname HTTP\/1.1"]},{"entry":[{},"Host: www.webservice.com"]},{"entry":[{},"Content-Type: application\/x-www-form-urlencoded"]},{"entry":[{},"Content-Length: 46"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Api_key=213456543&param1=aedc3r4&param2=md8945"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In this example, the URL \u201cwww.webservice.com\u201d may point to the new IP address (e.g., of the application server), and the new API call may be otherwise unchanged from the original API call. The monitoring server may provide the new API call to the application server (see ).","In some embodiments, if lexical re-routing is required, the monitoring server may obtain the API call name from the original API call or from the local copy (see ). The monitoring server may determine a new API call name (e.g., that of a service provided by the application server) for re-routing the API call (see ). For example, the monitoring server may utilize a lookup table using the API call name from the original API call as a lookup variable. The monitoring server may create a new API call using the new API call name (see ). An example new API call is provided below:",{"@attributes":{"id":"p-0044","num":"0043"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"POST \/rest\/apiname HTTP\/1.1"]},{"entry":[{},"Host: www.webservice1.com"]},{"entry":[{},"Content-Type: application\/x-www-form-urlencoded"]},{"entry":[{},"Content-Length: 46"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Api_key=213456543&param1=aedc3r4&param2=md8945"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In this example, the API name \u201capiname\u201d may point to the application service of the application server, and the new API call may be otherwise unchanged from the original API call. The monitoring server may provide the new API call to the application service (process) of the application server (see ). In some embodiments, both IP and lexical re-routing may be simultaneously performed, whereas in alternative embodiments, only one or the other may be performed.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIGS. 6A-C","FIG. 6A"],"b":["601","602","610","611","612","613","614","615","616","617","618","619"]},"The above examples are for the purposes of illustration only and not to be construed as limiting. Overall, any and all capability extension that can be supported as a middleware can be incorporated to the SDK design herein. Such middleware capabilities include the following additional technical features and solutions: (1) failover and\/or failsafe design extensions, (2) QoS accelerators, (3) Monetization and revenue generators, (4) Framework applications support, and (5) API mashups.","As non-limiting examples, with reference to , in some embodiments, the IDS may provide a UI depicting API usage statistics (see \u201c(1) Example dashboard output\u201d). The API may be identified by an API key that may be manually entered by a user or selected from a dropdown list, etc., and usage statistics may be plotted for user-selectable dates between a start date and end date. The user may be able to plot multiple variables simultaneously (e.g., number of requests vs. date, and average response time vs. date). The UI may provide curve-fitting and other statistical analysis capabilities, and the results may be exported into other (portable) formats.","As another example, in some embodiments, the IDS may provide a UI depicting incidences of security threats, and analysis regarding their source and intended destinations (see \u201c(2) Example threat incidence output\u201d). For example, the UI may include one or more charts depicting such variables like the most-frequent source IP addresses for the threats, the most-frequent source port numbers for the threats, the most-frequent destination IP addresses for the threats and the most-frequent destination port numbers for the threats. The manner of depiction (e.g., pie chart, bar graph, scatter plot, etc.) may be modified using graphical user interface (GUI) elements associated with a frame within which the graphics are depicted. The variables (e.g., source IP address, source port number, destination IP address, destination port number) using which the analysis is performed may be varied using GUI elements associated with a frame within which the graphics are depicted. In addition, in some embodiments, summaries may be provided listing the most significant variables (e.g., obtained using independent or principal component analysis, etc.), and the incidences of threat depending on the values of these variables (e.g., use of an IPv6 address at the source of the threats, or use of IPv4 address at the source of the threat, etc.). In addition, any relationship between two or more variables can be plotted in a frame within the UI (e.g., the variables may be selected using a dropdown menu, or by manual entry by a user).","With reference to , in some embodiments, the IDS may provide a UI depicting statistics or analysis related to a specific application (e.g., identifying attacks attempted on mobile device users using messages sent via Wireless Application Protocol (WAP)). For example, the user may select a type of parameter (e.g., SMS, MMS, location, etc.), a type of analysis (e.g., use stats, analytics, performance monitoring, compliance audit, security intrusions, etc.), and a type of threat (e.g., denial of service, malware infection, profanity, etc.). Based on the parameters selected, the UI may provide a display specific to the selected options. In some embodiments, the UI may also allow a user to drill down into a detailed view of the data (e.g., zoomed, 3D render, etc.), and delegate or escalate a view to another security administrator. The user may use graphical tools to annotate an analysis, save an annotated analysis (or open a previously created analysis), and engage in communications with other security administrators (e.g., via chat, mail, text, etc.).","Additional illustrative embodiments are listed below. In some embodiments, a non-transitory computer-readable medium is disclosed, storing computer-executable API-level intrusion detection instructions for: receiving an application programming interface (API) call for a service at an API sandbox module; parsing the API call to extract at least one of: an API call name; and one or more API call parameters; generating a copy of the at least one of: the API call name and the one or more API call parameters; providing, to an intrusion detection rules execution engine, the copy of the at least one of: the API call name and the one or more API call parameters; determining, via the intrusion detection rules execution engine, whether the API call is in violation of one or more security rules obtained from a security rules object; and providing an indication of whether the API call is in violation of the one or more security rules. In some embodiments, the medium may be further storing instructions for: determining that the API call is not in violation of the one or more security rules; generating at least one of: a new API call name; and a new API call address, after determining that the API call is not in violation of the one or more security rules; wherein the generated at least one of: the new API call name; and the new API call address is the indication of whether the API call is in violation of the one or more security rules; generating a new API call for the service using the generated at least one of: the new API call name; and the new API call address; and providing the generated new API call for the service. In some embodiments, the medium may be further storing instructions for: generating at least one of: a new API call name; and a new API call address, regardless of whether the API call is in violation of the one or more security rules; generating a new API call for the service using the generated at least one of: the new API call name; and the new API call address; and providing the generated new API call for the service. In some embodiments, the medium may be further storing instructions for: determining that the API call is in violation of the one or more security rules; and providing the indication of whether the API call is in violation of the one or more security rules via a user interface dashboard. In some embodiments, the medium may be further storing instructions for: determining that the API call is in violation of the one or more security rules; providing the indication of whether the API call is in violation of the one or more security rules via a user interface dashboard; obtaining user authorization input via the user interface dashboard; if the user authorization input authorizes API call re-routing, generating at least one of: a new API call name; and a new API call address, generating a new API call for the service using the generated at least one of: the new API call name; and the new API call address, and providing the generated new API call for the service; and if the user authorization input does not authorize API call re-routing, rejecting the API call for the service. In some embodiments, the service may be a web application service. In some embodiments, determining whether the API call is in violation of the one or more security rules may include determining whether the copy of the at least one of: the API call name and the one or more API call parameters matches a parameter in the one or more security rules. In some embodiments, the new API call name may be generated, by extracting a string subset of the copy of the API call name. In some embodiments, an API call address for the generated new API call may be the same as an API call address for the API call for the service received at the API sandbox module. In some embodiments, the new API call address may be generated, by providing the copy of the API call name as input to a lookup table. In some embodiments, an API call name for the generated new API call is the same as an API call name for the API call for the service received at the API sandbox module. In some embodiments, the intrusion detection rules execution engine may be of one of the following types: forward-chained; backward-chained; and rule priority based execution ordering. In some embodiments, the security rules object may include one or more security rules configured to detect malware. In some embodiments, the security rules object may include one or more security rules configured to detect application-level misuse. In some embodiments, the security rules object may include one or more security rules specifically applicable to the copy of the API call name. In some embodiments, the security rules object may be configurable via a user interface dashboard. In some embodiments, configuration of the security rules object via the user interface dashboard may be performed substantially in real-time with determining whether the API call is in violation of the one or more security rules. In some embodiments, the security rules object may be configured to be inaccessible to application developers, end-users, and a provider of the service. In some embodiments, the security rules object is used for all API calls for the service received at the API sandbox module. In some embodiments, the medium may be further storing instructions for: determining whether to provide, to the intrusion detection rules execution engine, the copy of the at least one of: the API call name and the one or more API call parameters, based on one or more user selections of application developers whose applications' API calls are to be analyzed for intrusion detection. In some embodiments, the medium may be further storing instructions for: determining whether to provide, to the intrusion detection rules execution engine, the copy of the at least one of: the API call name and the one or more API call parameters, based on one or more user selections of API call names of API calls to be analyzed for intrusion detection. In some embodiments, the API sandbox module may be co-located at an enterprise software gateway, and be configured for: receiving API calls for all the user selected developers and user selected API name references; and processing the API calls for application specific intrusion detection.","In some embodiments, an API-level intrusion detection method is disclosed, comprising: receiving an application programming interface (API) call for a service at an API sandbox module; parsing the API call to extract at least one of: an API call name; and one or more API call parameters; generating a copy of the at least one of: the API call name and the one or more API call parameters; providing, to an intrusion detection rules execution engine, the copy of the at least one of: the API call name and the one or more API call parameters; determining, via the intrusion detection rules execution engine, whether the API call is in violation of one or more security rules obtained from a security rules object; and providing an indication of whether the API call is in violation of the one or more security rules. In some embodiments, the method may further comprise: determining that the API call is not in violation of the one or more security rules; generating at least one of: a new API call name; and a new API call address, after determining that the API call is not in violation of the one or more security rules; wherein the generated at least one of: the new API call name; and the new API call address is the indication of whether the API call is in violation of the one or more security rules; generating a new API call for the service using the generated at least one of: the new API call name; and the new API call address; and providing the generated new API call for the service. In some embodiments, the method may further comprise: generating at least one of: a new API call name; and a new API call address, regardless of whether the API call is in violation of the one or more security rules; generating a new API call for the service using the generated at least one of: the new API call name; and the new API call address; and providing the generated new API call for the service. In some embodiments, the method may further comprise: determining that the API call is in violation of the one or more security rules; and providing the indication of whether the API call is in violation of the one or more security rules via a user interface dashboard. In some embodiments, the method may further comprise: determining that the API call is in violation of the one or more security rules; providing the indication of whether the API call is in violation of the one or more security rules via a user interface dashboard; obtaining user authorization input via the user interface dashboard; if the user authorization input authorizes API call re-routing, generating at least one of: a new API call name; and a new API call address, generating a new API call for the service using the generated at least one of: the new API call name; and the new API call address, and providing the generated new API call for the service; and if the user authorization input does not authorize API call re-routing, rejecting the API call for the service. In some embodiments, the service may be a web application service. In some embodiments, determining whether the API call is in violation of the one or more security rules may include determining whether the copy of the at least one of: the API call name and the one or more API call parameters matches a parameter in the one or more security rules. In some embodiments, the new API call name may be generated, by extracting a string subset of the copy of the API call name. In some embodiments, an API call address for the generated new API call may be the same as an API call address for the API call for the service received at the API sandbox module. In some embodiments, the new API call address may be generated, by providing the copy of the API call name as input to a lookup table. In some embodiments, an API call name for the generated new API call is the same as an API call name for the API call for the service received at the API sandbox module. In some embodiments, the intrusion detection rules execution engine may be of one of the following types: forward-chained; backward-chained; and rule priority based execution ordering. In some embodiments, the security rules object may include one or more security rules configured to detect malware. In some embodiments, the security rules object may include one or more security rules configured to detect application-level misuse. In some embodiments, the security rules object may include one or more security rules specifically applicable to the copy of the API call name. In some embodiments, the security rules object may be configurable via a user interface dashboard. In some embodiments, configuration of the security rules object via the user interface dashboard may be performed substantially in real-time with determining whether the API call is in violation of the one or more security rules. In some embodiments, the security rules object may be configured to be inaccessible to application developers, end-users, and a provider of the service. In some embodiments, the security rules object is used for all API calls for the service received at the API sandbox module. In some embodiments, the method may further comprise: determining whether to provide, to the intrusion detection rules execution engine, the copy of the at least one of: the API call name and the one or more API call parameters, based on one or more user selections of application developers whose applications' API calls are to be analyzed for intrusion detection. In some embodiments, the method may further comprise: determining whether to provide, to the intrusion detection rules execution engine, the copy of the at least one of: the API call name and the one or more API call parameters, based on one or more user selections of API call names of API calls to be analyzed for intrusion detection. In some embodiments, the API sandbox module may be co-located at an enterprise software gateway, and be configured for: receiving API calls for all the user selected developers and user selected API name references; and processing the API calls for application specific intrusion detection.","In some embodiments, an API-level intrusion detection system is disclosed, comprising: one or more hardware processors; and one or more memory devices disposed in communication with the one or more hardware processors, and storing instructions executable by the one or more hardware processors for: receiving an application programming interface (API) call for a service at an API sandbox module; parsing the API call to extract at least one of: an API call name; and one or more API call parameters; generating a copy of the at least one of: the API call name and the one or more API call parameters; providing, to an intrusion detection rules execution engine, the copy of the at least one of: the API call name and the one or more API call parameters; determining, via the intrusion detection rules execution engine, whether the API call is in violation of one or more security rules obtained from a security rules object; and providing an indication of whether the API call is in violation of the one or more security rules. In some embodiments, the one or more memory devices may be further storing instructions for: determining that the API call is not in violation of the one or more security rules; generating at least one of: a new API call name; and a new API call address, after determining that the API call is not in violation of the one or more security rules; wherein the generated at least one of: the new API call name; and the new API call address is the indication of whether the API call is in violation of the one or more security rules; generating a new API call for the service using the generated at least one of: the new API call name; and the new API call address; and providing the generated new API call for the service. In some embodiments, the one or more memory devices may be further storing instructions for: generating at least one of: a new API call name; and a new API call address, regardless of whether the API call is in violation of the one or more security rules; generating a new API call for the service using the generated at least one of: the new API call name; and the new API call address; and providing the generated new API call for the service. In some embodiments, the one or more memory devices may be further storing instructions for: determining that the API call is in violation of the one or more security rules; and providing the indication of whether the API call is in violation of the one or more security rules via a user interface dashboard. In some embodiments, the one or more memory devices may be further storing instructions for: determining that the API call is in violation of the one or more security rules; providing the indication of whether the API call is in violation of the one or more security rules via a user interface dashboard; obtaining user authorization input via the user interface dashboard; if the user authorization input authorizes API call re-routing, generating at least one of: a new API call name; and a new API call address, generating a new API call for the service using the generated at least one of: the new API call name; and the new API call address, and providing the generated new API call for the service; and if the user authorization input does not authorize API call re-routing, rejecting the API call for the service. In some embodiments, the service may be a web application service. In some embodiments, determining whether the API call is in violation of the one or more security rules may include determining whether the copy of the at least one of: the API call name and the one or more API call parameters matches a parameter in the one or more security rules. In some embodiments, the new API call name may be generated, by extracting a string subset of the copy of the API call name. In some embodiments, an API call address for the generated new API call may be the same as an API call address for the API call for the service received at the API sandbox module. In some embodiments, the new API call address may be generated, by providing the copy of the API call name as input to a lookup table. In some embodiments, an API call name for the generated new API call is the same as an API call name for the API call for the service received at the API sandbox module. In some embodiments, the intrusion detection rules execution engine may be of one of the following types: forward-chained; backward-chained; and rule priority based execution ordering. In some embodiments, the security rules object may include one or more security rules configured to detect malware. In some embodiments, the security rules object may include one or more security rules configured to detect application-level misuse. In some embodiments, the security rules object may include one or more security rules specifically applicable to the copy of the API call name. In some embodiments, the security rules object may be configurable via a user interface dashboard. In some embodiments, configuration of the security rules object via the user interface dashboard may be performed substantially in real-time with determining whether the API call is in violation of the one or more security rules. In some embodiments, the security rules object may be configured to be inaccessible to application developers, end-users, and a provider of the service. In some embodiments, the security rules object is used for all API calls for the service received at the API sandbox module. In some embodiments, the one or more memory devices may be further storing instructions for: determining whether to provide, to the intrusion detection rules execution engine, the copy of the at least one of: the API call name and the one or more API call parameters, based on one or more user selections of application developers whose applications' API calls are to be analyzed for intrusion detection. In some embodiments, the one or more memory devices may be further storing instructions for: determining whether to provide, to the intrusion detection rules execution engine, the copy of the at least one of: the API call name and the one or more API call parameters, based on one or more user selections of API call names of API calls to be analyzed for intrusion detection. In some embodiments, the API sandbox module may be co-located at an enterprise software gateway, and be configured for: receiving API calls for all the user selected developers and user selected API name references; and processing the API calls for application specific intrusion detection.","Computer System",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 7","b":["701","102","103","104","701","702","702","702"]},"Processor  may be disposed in communication with one or more input\/output (I\/O) devices via I\/O interface . The I\/O interface  may employ communication protocols\/methods such as, without limitation, audio, analog, digital, monoaural, RCA, stereo, IEEE-1394, serial bus, universal serial bus (USB), infrared, PS\/2, BNC, coaxial, component, composite, digital visual interface (DVI), high-definition multimedia interface (HDMI), RF antennas, S-Video, VGA, IEEE 802.n\/b\/g\/n\/x, Bluetooth, cellular (e.g., code-division multiple access (CDMA), high-speed packet access (HSPA+), global system for mobile communications (GSM), long-term evolution (LTE), WiMax, or the like), etc.","Using the I\/O interface , the computer system  may communicate with one or more I\/O devices. For example, the input device  may be an antenna, keyboard, mouse, joystick, (infrared) remote control, camera, card reader, fax machine, dongle, biometric reader, microphone, touch screen, touchpad, trackball, sensor (e.g., accelerometer, light sensor, GPS, gyroscope, proximity sensor, or the like), stylus, scanner, storage device, transceiver, video device\/source, visors, etc. Output device  may be a printer, fax machine, video display (e.g., cathode ray tube (CRT), liquid crystal display (LCD), light-emitting diode (LED), plasma, or the like), audio speaker, etc. In some embodiments, a transceiver  may be disposed in connection with the processor . The transceiver may facilitate various types of wireless transmission or reception. For example, the transceiver may include an antenna operatively connected to a transceiver chip (e.g., Texas Instruments WiLink WL1283, Broadcom BCM4750IUB8, Infineon Technologies X-Gold 618-PMB9800, or the like), providing IEEE 802.11a\/b\/g\/n, Bluetooth, FM, global positioning system (GPS), 2G\/3G HSDPA\/HSUPA communications, etc.","In some embodiments, the processor  may be disposed in communication with a communication network  via a network interface . The network interface  may communicate with the communication network . The network interface may employ connection protocols including, without limitation, direct connect, Ethernet (e.g., twisted pair 10\/100\/1000 Base T), transmission control protocol\/internet protocol (TCP\/IP), token ring, IEEE 802.11a\/b\/g\/n\/x, etc. The communication network  may include, without limitation, a direct interconnection, local area network (LAN), wide area network (WAN), wireless network (e.g., using Wireless Application Protocol), the Internet, etc. Using the network interface  and the communication network , the computer system  may communicate with devices , , and . These devices may include, without limitation, personal computer(s), server(s), fax machines, printers, scanners, various mobile devices such as cellular telephones, smartphones (e.g., Apple iPhone, Blackberry, Android-based phones, etc.), tablet computers, eBook readers (Amazon Kindle, Nook, etc.), laptop computers, notebooks, gaming consoles (Microsoft Xbox, Nintendo DS, Sony PlayStation, etc.), or the like. In some embodiments, the computer system  may itself embody one or more of these devices.","In some embodiments, the processor  may be disposed in communication with one or more memory devices (e.g., RAM , ROM , etc.) via a storage interface . The storage interface may connect to memory devices including, without limitation, memory drives, removable disc drives, etc., employing connection protocols such as serial advanced technology attachment (SATA), integrated drive electronics (IDE), IEEE-1394, universal serial bus (USB), fiber channel, small computer systems interface (SCSI), etc. The memory drives may further include a drum, magnetic disc drive, magneto-optical drive, optical drive, redundant array of independent discs (RAID), solid-state memory devices, solid-state drives, etc.","The memory devices may store a collection of program or database components, including, without limitation, an operating system , user interface application , web browser , mail server , mail client , user\/application data  (e.g., any data variables or data records discussed in this disclosure), etc. The operating system  may facilitate resource management and operation of the computer system . Examples of operating systems include, without limitation, Apple Macintosh OS X, Unix, Unix-like system distributions (e.g., Berkeley Software Distribution (BSD), FreeBSD, NetBSD, OpenBSD, etc.), Linux distributions (e.g., Red Hat, Ubuntu, Kubuntu, etc.), IBM OS\/2, Microsoft Windows (XP, Vista\/7\/8, etc.), Apple iOS, Google Android, Blackberry OS, or the like. User interface  may facilitate display, execution, interaction, manipulation, or operation of program components through textual or graphical facilities. For example, user interfaces may provide computer interaction interface elements on a display system operatively connected to the computer system , such as cursors, icons, check boxes, menus, scrollers, windows, widgets, etc. Graphical user interfaces (GUIs) may be employed, including, without limitation, Apple Macintosh operating systems' Aqua, IBM OS\/2, Microsoft Windows (e.g., Aero, Metro, etc.), Unix X-Windows, web interface libraries (e.g., ActiveX, Java, Javascript, AJAX, HTML, Adobe Flash, etc.), or the like.","In some embodiments, the computer system  may implement a web browser  stored program component. The web browser may be a hypertext viewing application, such as Microsoft Internet Explorer, Google Chrome, Mozilla Firefox, Apple Safari, etc. Secure web browsing may be provided using HTTPS (secure hypertext transport protocol), secure sockets layer (SSL), Transport Layer Security (TLS), etc. Web browsers may utilize facilities such as AJAX, DHTML, Adobe Flash, JavaScript, Java, application programming interfaces (APIs), etc. In some embodiments, the computer system  may implement a mail server  stored program component. The mail server may be an Internet mail server such as Microsoft Exchange, or the like. The mail server may utilize facilities such as ASP, ActiveX, ANSI C++\/C#, Microsoft .NET, CGI scripts, Java, JavaScript, PERL, PHP, Python, WebObjects, etc. The mail server may utilize communication protocols such as internet message access protocol (IMAP), messaging application programming interface (MAPI), Microsoft Exchange, post office protocol (POP), simple mail transfer protocol (SMTP), or the like. In some embodiments, the computer system  may implement a mail client  stored program component. The mail client may be a mail viewing application, such as Apple Mail, Microsoft Entourage, Microsoft Outlook, Mozilla Thunderbird, etc.","In some embodiments, computer system  may store user\/application data , such as the data, variables, records, etc. (e.g., security rules file\/object\/DB, reports, dashboard UI objects, report queue, etc.) as described in this disclosure. Such databases may be implemented as fault-tolerant, relational, scalable, secure databases such as Oracle or Sybase. Alternatively, such databases may be implemented using standardized data structures, such as an array, hash, linked list, struct, structured text file (e.g., XML), table, or as object-oriented databases (e.g., using ObjectStore, Poet, Zope, etc.). Such databases may be consolidated or distributed, sometimes among the various computer systems discussed above in this disclosure. It is to be understood that the structure and operation of the any computer or database component may be combined, consolidated, or distributed in any working combination.","The specification has described methods and systems for API-level intrusion detection. The illustrated steps are set out to explain the exemplary embodiments shown, and it should be anticipated that ongoing technological development will change the manner in which particular functions are performed. These examples are presented herein for purposes of illustration, and not limitation. Further, the boundaries of the functional building blocks have been arbitrarily defined herein for the convenience of the description. Alternative boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed. Alternatives (including equivalents, extensions, variations, deviations, etc., of those described herein) will be apparent to persons skilled in the relevant art(s) based on the teachings contained herein. Such alternatives fall within the scope and spirit of the disclosed embodiments.","Furthermore, one or more computer-readable storage mediums may be utilized in implementing embodiments consistent with the present disclosure. A computer-readable storage medium refers to any type of physical memory on which information or data readable by a processor may be stored. Thus, a computer-readable storage medium may store instructions for execution by one or more processors, including instructions for causing the processor(s) to perform steps or stages consistent with the embodiments described herein. The term \u201ccomputer-readable medium\u201d should be understood to include tangible items and exclude carrier waves and transient signals, i.e., be non-transitory. Examples include random access memory (RAM), read-only memory (ROM), volatile memory, nonvolatile memory, hard drives, CD ROMs, DVDs, flash drives, disks, and any other known physical storage media.","It is intended that the disclosure and examples be considered as exemplary only, with a true scope and spirit of disclosed embodiments being indicated by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute a part of this disclosure, illustrate exemplary embodiments and, together with the description, serve to explain the disclosed principles.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 5A-C"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIGS. 6A-C"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
