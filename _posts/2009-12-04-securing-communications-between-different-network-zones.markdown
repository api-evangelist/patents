---
title: Securing communications between different network zones
abstract: In an embodiment, a method is provided for communicating a protocol request at a network zone. In this method, the protocol request is received from a computing device and this protocol request is encapsulated in a different protocol. The protocol request is then transmitted to a different network zone by way of the different protocol. A message is then accessed from the different network zone by way of the different protocol, and this message includes a protocol response to the protocol request. The protocol response is extracted from the message and transmitted to the computing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08701180&OS=08701180&RS=08701180
owner: SAP AG
number: 08701180
owner_city: Walldorf
owner_country: DE
publication_date: 20091204
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["The present disclosure relates generally to computer network communication. In an embodiment, the disclosure relates to securing communication between different network zones.","Many Web applications hosted on a server (e.g., Web server) are accessible to the public by way of the Internet and also accessible privately by way of an intranet. To protect private data stored on the server, the server may employ firewalls or reverse proxies to block certain Hypertext Transfer Protocol (HTTP) requests used to attack the server. In general, HTTP is used to request and transmit data (e.g., Webpages and Webpage components) over the Internet or other computer networks. However, HTTP is an open standard protocol with well-known security leaks. As a result, an intruder can use such security leaks to access private data stored on a server that uses HTTP to access both private and public data.","The description that follows includes illustrative systems, methods, techniques, instruction sequences, and computing machine program products that embody illustrative embodiments of the present invention. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide an understanding of various embodiments of the inventive subject matter. It will be evident, however, to those skilled in the art that embodiments of the inventive subject matter may be practiced without these specific details. In general, well-known instruction instances, protocols, structures and techniques have not been shown in detail.","The embodiments described herein provide various techniques for securing communication between different network zones. Messages can be communicated between different network zones. For example, in one embodiment, systems located at different network zones can communicate by way of HTTP messages. As explained in more detail below, some of these network zones that use HTTP for communication can be secured by encapsulating the HTTP messages in non-HTTP protocols. As an example,  depicts a block diagram of a system , consistent with one example embodiment, for securing communication between different network zones. In this example, the system  includes three network zones , , and  that are separated by firewalls  and \u2032. A \u201cnetwork zone,\u201d as used herein, refers to a physical or logical sub-network. A sub-network may refer to networked computing devices that have a common, designated IP address routing prefix. An example of a network zone is a domain, which is a collection of network nodes under the control of one or more entities that present a common routing policy. The firewalls  and \u2032 can be used to decouple one network zone from another network zone. For example, the firewall  is configured to decouple the network zone  from the network zone . Similarly, the firewall \u2032 is configured to decouple the network zone  from the network zone .","At the system , the network zone  is prevented from directly communicating with the network zone  through use of a common protocol, such as HTTP. In particular, embodiments of the present invention provide for a protocol switch between network zones , , and . Here, in one embodiment, the network zone  receives HTTP messages from the network zone  through the firewall . However, network zone  cannot directly communicate with network zone  through HTTP. Instead, as will be explained in more detail below, the HTTP messages received from the network zone  are communicated to the network zone  by way of a non-HTTP protocol. As a result, any access of resources (data and applications) at the network zone  does not use the same protocol as used for accessing resources at the network zone . This protocol \u201cswitch\u201d may, for example, prevent an intruder from applying the same HTTP security leak used to access network zone  to access network zone . As a result, this protocol \u201cswitch\u201d may result in more secure communication between, for example, the network zone  and network zone .",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2","b":["200","200","202","208","204","208","210","208","202","208","210","210"]},"In the system , the Web server  is configured as a low secure network zone while the application server  is configured as a high secure network zone. For example, an organization may set up some Web applications at the Web server  that are accessible by way of the organization's internal network (e.g., intranet and local area network). Additionally, these same Web applications are also exposed to the Internet  for external access by client computing device . The organization may set up the different network zones  and  to prevent, for example, an intruder from accessing resources stored at the application server  using HTTP.","In particular, both the application server  and the Web server  are safeguarded by several firewalls  and \u2032, which decouple the high secure network zone from the low secure network zone and decouple the low secure zone from the Internet . The client computing device  is prevented from directly communicating with the application server  through the use of, for example, HTTP. Instead, embodiments of the present invention provide for a protocol \u201cswitch\u201d between the Web server  and the application server . For example, the Web server  receives HTTP messages from the client computing device  through the firewall . As explained in more detail below, the Web server  then communicates the received HTTP messages to the application server  by way of a non-HTTP protocol. Vice versa, in one embodiment, HTTP messages transmitted from the application server  to the Web server  may be transmitted by way of the same non-HTTP protocol.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 3","FIG. 2","FIG. 3"],"b":["300","300","300","300","208","210","300"]},"In should be appreciated that the architecture of a server can be separated into different areas or layers (e.g., a presentation layer, integration layer, business layer, persistence layer, and connectivity layer). Embodiments of the present invention may be implemented at a connectivity layer  of the server architecture. In general, the connectivity layer provides the functionality to connect a server, as embodied in computing device , to a network infrastructure. In the example depicted in , the connectivity layer  includes an Internet communication management module , a task handler module , and an Internet communication framework (ICF) module . The ICF module  may include an ICF controller module , an ICF manager module , and an HTTP request handler module .","In general, the Internet communication management module  is configured to receive a request message, such as an HTTP request, from a client. An \u201cHTTP request,\u201d refers to an HTTP message asking for information. Examples of HTTP requests include \u201cGET,\u201d \u201cPOST,\u201d or other requests. The Internet communication management module  is configured to identify whether the resource identified by the Uniform Resource Locator (URL) is realized in, for example, an ABAP stack or a Java stack of an application server. If the application is identified as an ABAP application, for example, the Internet communication management module  forwards the HTTP request to a task handler module .","The ICF module  generally handles communication to and from other computing devices by way of HTTP, Hypertext Transfer Protocol Secure (HTTPS), Simple Mail Transfer Protocol (SMTP), and\/or other communication protocols. For example, at a Netweaver ABAP Application Server, the ICF module  can be a part of a communication layer that provides client and server side communication on top of the HTTP\/HTTPS\/SMTP protocol. Upon receipt of the HTTP request, the task handler module  starts the ICF controller module , which transmits the HTTP request to the ICF manager module .","In one embodiment, as explained in more detail below, the ICF manager module  is configured to communicate HTTP messages to a different network zone by way of a non-HTTP protocol. The HTTP request handler module  then handles the HTTP request by transmitting the HTTP request to an application. The application may, for example, gather the requested data and transmit it back to the client through the ICF module  as a response. As explained in more detail below, this response may be an HTTP response or an HTTP response encapsulated in a non-HTTP protocol. An \u201cHTTP response,\u201d as used herein, refers to an HTTP message generated in response to an HTTP request. An HTTP response may, for example, include the resource that was requested by the HTTP request. If the HTTP response is encapsulated in a non-HTTP protocol, another ICF module associated with a different network zone can be configured to extract the HTTP response from the non-HTTP message and forward the HTTP response to the client by way of HTTP. Given that embodiments of the invention may be embodied in the ICF module , the implementation of a \u201cswitch\u201d (encapsulation and extraction) between protocols may not, for example, affect existing protocols (e.g., HTTP) supported by the ICF module . Rather, the implementation of the \u201cswitch\u201d may include the addition of a different protocol (e.g., non-HTTP protocol) layer to the existing protocol layer.","It should be appreciated that in other embodiments, the computing device  may include fewer, more, or different modules apart from those shown in . For example, in an alternate embodiment, other standalone libraries and applications may be used to execute HTTP services by way of non-HTTP protocol. Examples of such libraries and applications include SAP Java connector, remote function call (RFC) library, and SAP business connector.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 4","FIG. 3","FIG. 2","FIG. 4"],"b":["400","400","307","208","402","404"]},"In general, encapsulation is the carrying of a datagram within another datagram. In other words, encapsulation is the inclusion of one data structure within another structure. In some examples, encapsulation may be the tunneling of payload (e.g., protocol request), which is formatted in a particular protocol, along a different protocol. For example, an HTTP request may be encapsulated in a non-HTTP message. In another example, a file transfer protocol (FTP) request may be encapsulated in a non-FTP message. In yet another example, a simple mail transfer protocol (SMTP) request may be encapsulated in a non-SMTP message. The various protocols that may be used in the communication and encryption of messages include HTTP, FTP, SMTP, remote function call (RFC), remote procedure call (RPC), SAP proprietary Diag channel (SAPGUI lib), file handling protocols (e.g., ABAP open dataset statements), and other protocols.","At , the protocol request is then transmitted to a different network zone (e.g., a high secure zone) by way of the different protocol. After transmission of the protocol request, a message may be accessed at  from this different network zone by way of the different protocol. As used herein, \u201caccessing\u201d a message includes, but is not limited to, receiving the message or reading the message from a storage medium. In one embodiment, as depicted in , the message in the different protocol encapsulates a protocol response to the protocol request, and this protocol response is extracted (or decapsulated) from the message at . Alternatively, in another embodiment, the protocol request may not be encapsulated in a different protocol, as explained in more detail below. It should be appreciated that a \u201cresponse\u201d may also be referred to as a \u201cprotocol response,\u201d and therefore, the terms \u201cresponse\u201d and \u201cprotocol response\u201d may be used interchangeably. Additionally, it should be noted that the protocol response and the corresponding protocol request are formatted using the same protocol. This protocol response is then transmitted at  to, for example, a client by way of HTTP, which was originally used to communicate the protocol request.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 5","FIG. 3","FIG. 2","FIG. 5"],"b":["500","500","307","210","502","504","506"]},"In one embodiment, the protocol response is received from the application and then encapsulated at  in the \u201cparticular\u201d protocol. The protocol response is then transmitted at  to the different network zone (e.g., a low secure network zone) by way of the \u201cparticular\u201d protocol. In an alternate embodiment, the protocol response may not be encapsulated in a different protocol or the \u201cparticular\u201d protocol. Instead, the protocol response is directly transmitted to this different network zone.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 6A","b":["600","604","606","600","602","604","606","150","150","602","604","606","602"]},"In the example system , some Web applications that are accessible by the intranet  are subject to a different security level than those applications that are accessible from the Internet . For example, these Web applications may be employment recruiting applications that allow employees of the organization to apply for job vacancies internally through the intranet  and also for external applicants to apply for the same job vacancies through the Internet . The demilitarized network zone  is created between the Internet  and the intranet  to prevent, for example, an intruder from using HTTP to directly access resources at the intranet .","The firewall  separating the Internet  from the demilitarized network zone  is configured to allow only HTTP messages to and from the demilitarized network zone . On the other hand, the firewall \u2032 separating the demilitarized network zone  from the intranet  is configured to allow only FTP messages to and from the intranet . Generally, FTP is a standard network protocol used to exchange and manipulate files over a computer network. As a result, the systems connected to the Internet  are prevented from directly communicating with the intranet  through the use of HTTP.","In particular, an HTTP request  is received from the Internet  at the demilitarized network zone . As an example, the HTTP request  may be a request to retrieve information about a particular job posting, which is stored at the intranet . Given that the demilitarized network zone  can only communicate with the intranet  by way of FTP, the HTTP request  is encapsulated and transmitted to the intranet  by way of FTP. As an example, the encapsulation may involve the opening of an FTP channel from the demilitarized network zone  to the intranet . The HTTP request may then be copied from the demilitarized network zone  to a shared hard drive or other shared storage mediums at the intranet  with the use of the FTP command \u201cPUT.\u201d It should be appreciated that the system  may include a shared disk file system, which is a file system that is shared by multiple computing devices (e.g., computing devices in a storage area network). In a shared disk file system, multiple computing devices can simultaneously read data from and write data to the same file system with shared memory, shared hard drive, or other shared storage mediums. Here, communication between the demilitarized network zone  (a low secure network zone) and the intranet  (a high secure network zone) is handled through a shared disk file system. Particularly, in one embodiment, the HTTP request  can be transmitted to the intranet  by writing the HTTP request  (e.g., as a file) to the shared disk file system by way of FTP. It should be noted that the HTTP request  or other HTTP messages can be serialized into a variety of different file formats. As an example, the requests and responses may be serialized into a binary file. In another example, the requests and responses may be serialized into an extensible markup language (XML) file.","An ICF module at the intranet  can be configured to check the shared disk file system (or shared storage medium) at regular intervals for receipt of the HTTP request . After the HTTP request  is copied to the intranet , the FTP connection may be closed or terminated.","An application at the intranet  that processes the HTTP request  can retrieve the information about the particular job posting and include such information in an HTTP response . In one embodiment, this HTTP response  may be encapsulated and transmitted to the demilitarized network zone  by way of FTP. As an example, the encapsulation may involve the opening of another FTP channel from the intranet  to the demilitarized network zone . In a shared disk file system, the HTTP response  may be copied from the intranet  to a shared hard drive or other shared storage mediums at the demilitarized network zone  with the use of the FTP command \u201cPUT.\u201d Particularly, in one embodiment, an ICF module at the intranet  can write the HTTP response  to the shared disk file system using FTP. Another ICF module at the demilitarized network zone  can receive this HTTP response  from the intranet  by reading the HTTP response  from the shared disk file system using FTP. In other words, a system at the demilitarized network zone  can be configured to check this shared hard drive at regular intervals for the receipt of the HTTP response , which is later transmitted to a requester of the information by way of the Internet .",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 6B","b":["680","604","606","600","602","604","682","606","602","604","150","606","602","604","602","606","606"]},"The firewall  separating the Internet  from the demilitarized network zone  is configured to allow only HTTP messages to and from the demilitarized network zone . Here, a shared hard drive or another shared storage medium is located in the secure network zone . In this alternate embodiment, an ICF module can copy the HTTP request  from the demilitarized network zone  to the shared storage medium at the secure network zone . This shared storage medium may be a part of a shared disk file system, which is discussed above, and may be mounted in a file server (e.g., \\\\<host>\\>directory>) that is shared between systems located in the demilitarized network zone  and the intranet . This file server can be secured by user and\/or password authentication.","In the embodiment of , communication between the demilitarized network zone  and the intranet  is handled through a shared disk file system. Particularly, the HTTP request  can be transmitted to the secure network zone  by writing the HTTP request  to the shared storage medium at the secure network zone . As an example, the HTTP request  can be transmitted to the secure network zone  by writing the HTTP request  (e.g., as a binary or XML file) to the shared disk file system by way of a file handling protocol (e.g., ABAP open dataset statement). An ICF module at the intranet  can be configured to check the shared storage medium located at the secure network zone  at regular intervals for receipt of the HTTP request .","An application at the intranet  that processes the HTTP request  can generate an HTTP response . In one embodiment, this HTTP response  may be encapsulated and transmitted to the secure network zone  by way of the same file handling protocol. In a shared disk file system, the HTTP response  may be copied from the intranet  to the shared storage medium at the secure network zone . Particularly, in one embodiment, an ICF module at the intranet  can write the HTTP response  (e.g., as a binary or XML file) to the shared disk file system using an ABAP open dataset statement. Another ICF module at the demilitarized network zone  can access this HTTP response  from the secure network zone  by reading the HTTP response  from the shared disk file system using, for example, ABAP open dataset statement. That is, a system at the demilitarized network zone  can be configured to check this shared storage medium located at the secure network zone  at regular intervals for the receipt of the HTTP response .",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 7","FIG. 3","FIG. 2","FIG. 7"],"b":["700","700","307","208","704","706","708"]},"Before the HTTP is transmitted, the ICF module at  checks whether the HTTP request should be transferred to the high secure network zone by way of HTTP or by way of a non-HTTP protocol, such as RFC. It should be noted that in some circumstances, the Web server may be configured to communicate with the high secure network zone directly by way of HTTP. If HTTP is used, the ICF module at  directly transmits the HTTP request with logon data to the high secure network zone by way of HTTP.","On the other hand, at , the HTTP request and logon data may be encapsulated and transmitted to the high secure network zone by way of RFC, in accordance with an alternate embodiment. Here, communication from a low secure network zone (e.g., demilitarized network zone) to the high secure network zone uses RFC instead of HTTP to access resources at the high secure network zone. RFC communication may require the usage of certain application programming interfaces in a particular order, such as RfcOpen including connection parameters, RfcCall including calling function module parameters, and RfcReceive including returning parameters of the function module. Accordingly, an intruder could possibly overtake control of some resources at the low secure network zone using HTTP, but he may not attack the systems residing at the high secure network zone using the same HTTP intrusion pattern. For example, the same HTTP intrusion pattern may not be used because an RFC module's IP address and port cannot be discovered by accessing and executing the RFC module.","After transmission of the HTTP request, the ICF module waits for and receives an HTTP response to the HTTP request at . In this example, the HTTP response may be a message confirming the sale of the item selected by a user. The ICF module then checks whether the original HTTP request was transmitted by way of RFC at . If the HTTP request is not transmitted by way of RFC, then the ICF module simply receives the HTTP response at .","However, if the original HTTP request was transmitted by way of RFC, then the ICF module extracts the HTTP response from the RFC parameters and transmits the HTTP response to the Web browser confirming the sale. In particular, the ICF module at  waits for RFC response of asynchronous RFC from the high secure network zone and retrieves the HTTP response and session state from the RFC parameters. It should be appreciated given HTTP communication is processed asynchronously, the RFC type \u201casynchronous RFC with response\u201d can be used. Identification is then made at  of whether the session is stateful. In other words, a check can be made at  to determine whether the remote session should be kept alive. It should be noted that in stateful communication, all user activities in a session are performed in a single context (role area). As a result, for example, if the session is stateful, then all HTTP requests and responses are handled within a single session. If the session is not stateful, then the HTTP requests and responses are communicated over different sessions with different logons. In the example of , if the session is not stateful, then the RFC connection is closed at  after the HTTP response is transmitted from the high secure network zone.","The use of RFC to communicate HTTP messages may, for example, facilitate shortcomings of HTTP session management regarding HTTP stateful session handling. It should be noted that HTTP is a stateless protocol, and the stateless nature of HTTP may result in orphaned sessions, which may result in memory consumption (memory leak), additional system overload, and resource degradation. Given that RFC communication is stateful, RFC sessions are tightly coupled to the initiator of the sessions. Accordingly, abnormal termination of the initiator session also results in the termination of its RFC sessions and therefore, may not cause any orphaned sessions. Still referring to , the ICF module then analyzes the HTTP response at  and may then reuse the HTTP client object at  for the same session, if applicable.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 8","FIG. 3","FIG. 2","FIG. 8"],"b":["800","800","307","210","802","806","804"]},"At , a determination is made as to all the different HTTP services that are to be called to process the HTTP request. In addition, a determination is made at  whether logon is required. If logon is required, then it is processed at . It should be appreciated that there can be two different embodiments for applying the logon procedure. In one embodiment using an HTTP based logon, the RFC logon procedure is not applied. Instead, the required HTTP authentication procedure is applied. Therefore, all maintained logon information in HTTP destination (including an X509 client certificate) is transferred to the high secure network zone as RFC function module parameter in order to process the HTTP authentication accordingly. Furthermore, a Secure Network Communication (SNC) variant for a secure RFC communication can be used, if necessary. In an alternate embodiment, the maintained HTTP logon procedures may be replaced by RFC logon methods.","Still referring to , the ICF module at the high secure network zone processes the authorization checks for relevant HTTP services, if necessary, at , and the relevant HTTP services (e.g., ABAP applications) are executed at  to process the HTTP request. The ICF module then receives an HTTP response to the HTTP request and checks whether the original HTTP request was received by way of RFC at . If the HTTP request was not received by way of RFC, then the ICF module directly transmits the HTTP response at  to the low secure network zone. On the other hand, if the HTTP request was originally received by way of RFC, then the ICF module encapsulates the HTTP response and transmits the HTTP response and additional information, such as the HTTP session state, by way of RFC at .","After transmission of the HTTP response, the ICF module then determines whether the remote session is to be kept alive. Here, the ICF module checks whether the session is stateful . If the session is not stateful, then the session is terminated at . However, if the session is stateful, then the ICF module waits at  for the next HTTP request. Upon receipt of the next HTTP request, then the ICF module identifies again whether the HTTP request is received by way of RFC at .",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 9","b":"300"},"The machine is capable of executing a set of instructions (sequential or otherwise) that specify actions to be taken by that machine. Further, while only a single machine is illustrated, the term \u201cmachine\u201d shall also be taken to include any collection of machines that individually or jointly execute a set (or multiple sets) of instructions to perform any one or more of the methodologies discussed herein.","The example of the computing device  includes a processor  (e.g., a central processing unit (CPU), a graphics processing unit (GPU) or both), a main memory  (e.g., random access memory (a type of volatile memory)), and static memory  (e.g., static random access memory (a type of volatile memory)), which communicate with each other via bus . The computing device  may further include video display unit  (e.g., a plasma display, a liquid crystal display (LCD) or a cathode ray tube (CRT)). The computing device  also includes an alphanumeric input device  (e.g., a keyboard), a user interface (UI) navigation device  (e.g., a mouse), a disk drive unit , a signal generation device  (e.g., a speaker), and a network interface device .","The disk drive unit  (a type of non-volatile memory storage) includes a machine-readable medium  on which is stored one or more sets of data structures and instructions  (e.g., software) embodying or utilized by any one or more of the methodologies or functions described herein. The data structures and instructions  may also reside, completely or at least partially, within the main memory  and\/or within the processor  during execution thereof by computing device , with the main memory  and processor  also constituting machine-readable, tangible media.","The data structures and instructions  may further be transmitted or received over a computer network  via network interface device  utilizing any one of a number of well-known transfer protocols (e.g., HTTP).","Certain embodiments are described herein as including logic or a number of components, modules, or mechanisms. Modules may constitute either software modules (e.g., code embodied on a machine-readable medium or in a transmission signal) or hardware modules. A hardware module is a tangible unit capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments, one or more computer systems (e.g., the computing device ) or one or more hardware modules of a computer system (e.g., a processor  or a group of processors) may be configured by software (e.g., an application or application portion) as a hardware module that operates to perform certain operations as described herein.","In various embodiments, a hardware module may be implemented mechanically or electronically. For example, a hardware module may comprise dedicated circuitry or logic that is permanently configured (e.g., as a special-purpose processor, such as a field programmable gate array (FPGA) or an application-specific integrated circuit (ASIC)) to perform certain operations. A hardware module may also comprise programmable logic or circuitry (e.g., as encompassed within a general-purpose processor  or other programmable processor) that is temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a hardware module mechanically, in dedicated and permanently configured circuitry, or in temporarily configured circuitry (e.g., configured by software) may be driven by cost and time considerations.","Accordingly, the term \u201chardware module\u201d should be understood to encompass a tangible entity, be that an entity that is physically constructed, permanently configured (e.g., hardwired) or temporarily configured (e.g., programmed) to operate in a certain manner and\/or to perform certain operations described herein. Considering embodiments in which hardware modules are temporarily configured (e.g., programmed), each of the hardware modules need not be configured or instantiated at any one instance in time. For example, where the hardware modules comprise a general-purpose processor  configured using software, the general-purpose processor  may be configured as respective different hardware modules at different times. Software may accordingly configure a processor , for example, to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.","Modules can provide information to, and receive information from, other hardware modules. For example, the described hardware modules may be regarded as being communicatively coupled. Where multiples of such hardware modules exist contemporaneously, communications may be achieved through signal transmission (e.g., over appropriate circuits and buses) that connect the hardware modules. In embodiments in which multiple hardware modules are configured or instantiated at different times, communications between such hardware modules may be achieved, for example, through the storage and retrieval of information in memory structures to which the multiple hardware modules have access. For example, one hardware module may perform an operation, and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware module may then, at a later time, access the memory device to retrieve and process the stored output. Hardware modules may also initiate communications with input or output devices, and can operate on a resource (e.g., a collection of information).","The various operations of example methods described herein may be performed, at least partially, by one or more processors  that are temporarily configured (e.g., by software) or permanently configured to perform the relevant operations. Whether temporarily or permanently configured, such processors  may constitute processor-implemented modules that operate to perform one or more operations or functions. The modules referred to herein may, in some example embodiments, comprise processor-implemented modules.","Similarly, the methods described herein may be at least partially processor-implemented. For example, at least some of the operations of a method may be performed by one or more processors  or processor-implemented modules. The performance of certain of the operations may be distributed among the one or more processors , not only residing within a single machine, but deployed across a number of machines. In some example embodiments, the processor or processors  may be located in a single location (e.g., within a home environment, an office environment or as a server farm), while in other embodiments the processors  may be distributed across a number of locations.","While the embodiment(s) are described with reference to various implementations and exploitations, it will be understood that these embodiments are illustrative and that the scope of the embodiment(s) are not limited to them. In general, techniques securing communications may be implemented with facilities consistent with any hardware system or systems defined herein. Many variations, modifications, additions, and improvements are possible.","Plural instances may be provided for components, operations or structures described herein as a single instance. Finally, boundaries between various components, operations, and data stores are somewhat arbitrary, and particular operations are illustrated in the context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within the scope of the embodiment(s). In general, structures and functionality presented as separate components in the exemplary configurations may be implemented as a combined structure or component. Similarly, structures and functionality presented as a single component may be implemented as separate components. These and other variations, modifications, additions, and improvements fall within the scope of the embodiment(s)."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":["The present disclosure is illustrated by way of example and not limitation in the figures of the accompanying drawings, in which like references indicate similar elements and in which:",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
