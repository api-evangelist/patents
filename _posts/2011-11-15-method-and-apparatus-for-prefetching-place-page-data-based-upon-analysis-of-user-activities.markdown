---
title: Method and apparatus for pre-fetching place page data based upon analysis of user activities
abstract: A computer-implemented method and system for pre-fetching label and place page data from a remote, backend mapping system, and subsequently displaying the pre-fetched data, is disclosed. User activity data generated by execution of an application on the mobile device may be analyzed to determine geographic locations that indicate places the user is likely to be in the future. The user activity data may be analyzed at either the frontend or the backend to determine these geographic locations. Label and place page data corresponding to the geographic locations may then be retrieved from the mapping system and stored in a cache memory of the mobile computing device. The label and place page data may describe map features and include plain text, a data feed, or a URL. During periods of reduced connectivity to the mapping system, the mobile device may retrieve the stored label and place page data from the cache memory.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09275374&OS=09275374&RS=09275374
owner: GOOGLE INC.
number: 09275374
owner_city: Mountain View
owner_country: US
publication_date: 20111115
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF TECHNOLOGY","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present disclosure relates generally to pre-fetching label and place page data for subsequent display on a mobile computing device, wherein the label and place page data is pre-fetched based upon an analysis of data generated by an application executing on a client computing device and the generated data includes an indication of a geographic location.","The background description provided herein is for the purpose of generally presenting the context of the disclosure. Work of the presently named inventors, to the extent it is described in this background section, as well as aspects of the description that may not otherwise qualify as prior art at the time of filing, are neither expressly nor impliedly admitted as prior art against the present disclosure.","Many mobile computing devices such as cellular phones, tablet computers, notebooks, etc., incorporate global positioning system (GPS) applications and related hardware. When actuated on the device, the GPS applications may communicate with a GPS transmitter or other GPS hardware on the device and a backend application server to provide a digital map of an area around the device's current position to a user, as well as label data and place page data that describes features illustrated within the map.","However there may be circumstances when the mobile computing device is in an area with limited network, cellular, or other communication access with the backend application server. Intermittent communication with backend components of the mapping system may limit or otherwise precludes, immediate, real time access to such data, potentially adversely affecting the user's experience.","Features and advantages described in this summary and the following detailed description are not all-inclusive. Additional features and advantages may be apparent to one of ordinary skill in the art in view of the drawings, specification, and claims hereof. Additionally, other embodiments may omit one or more (or all) of the features and advantages described in this summary.","In accordance with this disclosure, a computer-implemented method may pre-fetch label and place page data from a remote mapping system for subsequent display on a client computing device. The method may comprise analyzing user activity data to determine geographic location data, wherein the user activity data includes data generated by execution of an application at the client computing device and the user activity data includes the geographic location data. The method may further comprise receiving the geographic location data at the remote mapping system, wherein the remote mapping system includes vector data specifying geometric shapes for map features to be rendered on the client computing device and further includes label and place page data describing each map feature, the label and place page data including one or more of plain text, a data feed, and a URL, and both the vector data and the label and place page data correspond to the geographic location data. Still further, the method may comprise matching the geographic location data to label and place page data, sending the matched label and place page data to the client computing device, storing the matched label and place page data in a cache memory of the client computing device, and subsequently retrieving the matched label and place page data from the cache memory of the client computing device without further communication between the remote mapping system and the client computing device.","The application may include one or more of a mapping application, a web browser, a trip planning application, an e-mail application, and a social networking application. User activity data may include one or more of a history file corresponding to a log of mapping application searches, web page requests, locations, flight information, e-mail discussions, and social networking profile information. Geographic location data may include one or more of a city name, an address, an airport code, or global positioning system coordinates.","The method may further comprise determining if the matched geographic location data is relevant, wherein relevant geographic location data includes a number of geographic location indications above a threshold. Receiving the geographic location data may include receiving relevant geographic location data at the remote mapping system. Matching the geographic location data to the label and place page data may include matching the relevant geographic location data to the label and place page data.","In further embodiments, a computer-implemented method for pre-fetching label and place page data from a remote mapping system for subsequent display on a client computing device during conditions of no connectivity between the remote mapping system and the client computing device may be described. The method may comprise periodically analyzing user activity data at the client computing device to determine geographic location data corresponding to the user activity data, wherein the user activity data includes data generated by execution of an application at the client computing device. The user activity data may indicate the geographic location data and the application may include one or more of a mapping application, a web browser, a trip planning application, an e-mail application, and a social networking application. The user activity data may include one or more of a history file corresponding to a log of mapping application searches, web page requests, locations, flight information, e-mail discussions, and social networking profile information, and the determined geographic location data may include one or more of a city name, an address, an airport code, or global positioning system coordinates. The method may further comprise sending the determined geographic location data to the remote mapping system and receiving label and place page data corresponding to the determined geographic location data at the client computing device. The label and place page data may describe graphic map features and include one or more of plain text, a data feed, and a URL. Still further, the method may comprise storing the corresponding label and place page data in a cache memory of the client computing device, and subsequently retrieving the corresponding label and place page data from the cache memory of the client computing device without further communication between the remote mapping system and the client computing device.","The method described herein may also match the determined geographic location data to the corresponding label and place page data stored within a data repository of the remote mapping system. Furthermore, the method may determine if the corresponding geographic location data is relevant, wherein relevant geographic location data includes a number of geographic location indications above a threshold. The method may also send relevant geographic location data from the client computing device to the remote mapping system and the remote mapping system may match the relevant geographic location data to the corresponding label and place page data.","In still further embodiments, a client computing device may comprise a processor and a memory storing an application and instructions for execution by the processor. The instructions may include using the processor to periodically cause user activity data to be sent to a remote mapping system via a network connection, wherein the user activity data indicates a geographic location and includes data generated by execution of the application using the processor. The client computing device may also include a transceiver for receiving label and place page data from the remote mapping system via the network connection, a cache memory to store the label and place page data received by the transceiver, and a mapping module including instructions to cause the processor to display the received label and place page data from the cache memory without further communication between the remote mapping system and the client computing device.","In still further embodiments, a client computing device may comprise a processor and a memory storing an application and instructions for execution by the processor, the instructions for using the processor to analyze user activity data to determine geographic location data, wherein the user activity data includes data generated by execution of an application at the client computing device and the user activity data includes geographic location data. The device may also include a transceiver for sending a request for label and place page data to a remote mapping system and to receive label and place page data in response to the request. The request may include the determined geographic location data and the remote mapping system may include vector data specifying geometric shapes for map features to be rendered on the client computing device. Label and place page data at the remote mapping system may describe each map feature and include one or more of plain text, a data feed, and a URL. Both the vector data and the label and place page data may correspond to the geographic location data. A cache memory may store the requested label and place page data received by the transceiver and a mapping module may include instructions to cause the processor to display the received label and place page data from the cache memory without further communication between the remote mapping system and the client computing device.","In still further embodiment, a tangible computer readable medium may store instructions that are adapted for execution on a processor of a mobile computing device. The instructions, when executed, may cause the processor to analyze user activity data to determine geographic location data, wherein the user activity data includes data generated by execution of an application at the mobile computing device and the user activity data includes geographic location data. The instructions may also cause the processor to receive the geographic location data at the remote mapping system, wherein the remote mapping system includes vector data specifying geometric shapes for map features to be rendered on the mobile computing device and further includes label and place page data describing each map feature, the label and place page data including one or more of plain text, a data feed, and a URL, and both the vector data and the label and place page data correspond to the geographic location data. Furthermore, the instructions may cause the processor to match the geographic location data to label and place page data, send the matched label and place page data to the mobile computing device, store the matched label and place page data in a cache memory of the mobile computing device, and subsequently retrieve the matched label and place page data from the cache memory of the mobile computing device without further communication between the remote mapping system and the mobile computing device.","In still further embodiments, a tangible computer readable medium may store instructions adapted for execution on a processor of a mobile computing device. The instructions, when executed, may cause the processor to periodically analyze user activity data at the mobile computing device to determine geographic location data corresponding to the user activity data. The instructions, when executed, may further cause the processor to send the determined geographic location data to the remote mapping system, receive label and place page data corresponding to the determined geographic location data at the mobile computing device (the label and place page data describing graphic map features and including one or more of plain text, a data feed, and a URL), store the corresponding label and place page data in a cache memory of the mobile computing device, and subsequently retrieve the corresponding label and place page data from the cache memory of the mobile computing device without further communication between the remote mapping system and the client computing device.","The figures depict a preferred embodiment for purposes of illustration only. One skilled in the art may readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein.","Embodiments of systems and methods for efficiently transferring place page data that is logically linked to map data from a place page data server to a client device are discussed below. To render a map image in a web browser or another application, the client device may request map data from the map server via a communication network, and the map server in response may provide vector data that describes map content as well as label and place page data that describes features of the rendered vector data. More particularly, vector data may specify various geometric shapes (e.g., using mathematical descriptions) for map features and indicate how these shapes should be positioned for rendering various map features such as roads, buildings, parks, bodies of water, etc. on the client computing device. Label and place page data may describe each map feature using text, graphics, web pages, etc. The map server also may specify which visual styles the client device should apply to various vector-based descriptions of map elements.","Graphical data to render a map image on a mobile computing device is relatively data (and thus memory) intensive. Label and place page data may be separately pre-fetched or pre-downloaded via a network connection before it is requested by the user so that this place page data is available independent of all, or some of, the memory burden of accompanying map tile data. For example, data associated with the digital map may include label data for the various buildings, roads, and other graphic elements of the map. Other data may include place page data that provides detailed information about various buildings, businesses, points of interest, or other graphic elements of the map. Label and place page data may be requested separately from or in conjunction with the graphic elements of a map from a label and place page data server via a network connection between a mobile computing device and the server. This label and place page data may then be selected from the server and stored in a cache memory of the mobile computing device. The label and place page data may then be available at times of low connectivity between the mobile device and the server when graphic elements corresponding to the cached label and place page data are displayed at the mobile device.","As described below, user activity at the mobile computing device may be analyzed to determine locations from where the user spends most of his\/her time, searches the user has performed via mapping applications and web browsers, trips the user has planned, e-mail content, etc. For example, the place page data may be requested from the server for cache storage based on logs and other files that track user actions with applications executing on the mobile computing device. The data may be pre-fetched to the mobile device, either at the request of the mobile device or pushed to the mobile device by a backend server.","The user activity analysis may identify one or more predetermined geographical locations for which the user is possibly or likely to desire information in the future, such as to view map data, as well as to view information regarding locations proximate the user's location, such as label data and\/or place page data. Once the data is pre-downloaded and stored in the memory of the mobile device, the mobile device may quickly present the data without having to obtain data in real time from a backend label and place page server. Pre-fetching the data may reduce display rendering latency and lead to a better user experience. The analysis may be performed at the backend or at the mobile device and may consider all, or portions of, data related to the user's online activity.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 1A","FIG. 1A"],"b":["100","102","102","104","106","108","106","102","102","106","110","112","114","115","100","114","114","102","114","106"]},"A mapping system server , which may be in the form of one or more servers, may send and receive map tile data  from a map tile data repository , and label and place page data  from a label and place page data repository  that corresponds to geographical features of the map tile data . In some embodiments, the mapping system  and the system server  may send computer-executable instructions and data to allow the mapping module  to render a digital map in a display component  of the client device . Generally speaking, user activity data  may be analyzed to determine geographical locations at which the user is likely to request data from the mapping server  in the future. The user activity data  may be collected from a variety of other applications and modules executing on the client device  or in communication with the device  (e.g., a web browser, a user activity tracking module, a trip planning module, an email module, etc.) and stored in a user activity data repository . The data  may include a web browsing history, e-mail text, a calendar appointment for travel, etc. The data  may be analyzed at the client device  or sent to a backend user activity system  for analysis to determine likely future geographic locations for the user from the generated data. Label and place page data  may then be pre-fetched for those locations and stored in a cache memory  of the client device memory  for possible display to a user during a period of low connectivity to the mapping system  or at any other time.","The mapping system  may generate each map tile with label and place page data  according to a vector graphics format. The client device  (e.g., a mobile phone, tablet computer, etc.) may locally generate a raster image for each tile from the vector data corresponding to each map tile. In an embodiment, the system  retrieves the requested data from various servers. For example, the mapping system server  may include a processor and a computer-readable memory that stores a map controller in the form of computer instructions, for example, that may be executable on the processor directly (e.g., as compiled code) or indirectly (e.g., as a script interpreted by another application executing on the processor ). The computer-readable memory may include volatile memory to store computer instructions and data on which the computer instructions operate at runtime (e.g., Random Access Memory or RAM) and, in an embodiment, persistent memory such as a hard disk, for example. In an embodiment, the map controller includes a dynamic feature controller that generates vector data for various map elements that are provided as map content to the client device . As used herein, a map feature (or simply feature) may correspond to an individual map element such as a building or an aggregation of several map elements such as several buildings, a park, and several pedestrian paths of a college campus. In general, a map feature may be described using vector data. Label and place page data  may include data that describes these map tile features including textual information, images, web content that describes map tile features (i.e., businesses, landmarks, etc.), etc.","In some embodiments, the mapping module  receives vector data that specifies graphical characteristics of map features as well as label and place page data  that describes these features. Vector data specifies the map features as geometric shapes using mathematical descriptions of points and paths connecting the points. For example, rather than specifying each pixel that makes up a raster image of a line segment, vector data may specify the two endpoints of the line segment and indicate that the two endpoints are connected by a straight line. The mapping module  then may apply label and place page data  as appropriate to the specified line segment, so that the line segment is displayed with a particular title, description, etc. As another example, the vector data may specify the contour of a building, and the corresponding label and place page data  may specify the name, description, web page, contact information, address, etc., of the building. In other words, rather than receiving raster images from the map server , the mapping module  may receive instructions for drawing a map image on an output device  of the client computing device  and execute the instructions to generate a raster map image. In some cases, however, vector data also may include raster images as certain component elements that cannot be easily represented in a vector format.","For simplicity, the client device  is illustrated with a single processor . However, the client device  in other embodiments may include additional processing units (not shown) such as a graphics processing unit (GPU) configured to facilitate image rendering on the output device , for example. Further, the mapping module  may utilize a library of graphics functions for efficiently generating a map image as well as label and place page data . For example, the memory  may store a plugin, such as an OpenGL\u00ae or Direct3D\u00ae library, having functions for rendering graphics which various applications executing on the client , including the mapping module , may access via an application programming interface (API). In another embodiment, the memory  stores a plugin particularly suitable for browser applications, such as WebGL\u00ae, for example. Also, in some embodiments, the memory  stores additional software components that facilitate efficient rendering of images and label and place page data  via the output device . For example, the memory  may store an Adobe\u00ae Flash\u00ae plugin or an O3D plugin.","Now referring to , a map controller  may include various functions and operate as a module in the memory of the client computing device  or in the server  of , for example, or the various functions may be split among the client computing device  and the server , as described above. According to an embodiment, the map controller  is implemented as a set of instructions that are stored on a computer-readable medium and executable on one or more processors. For example, referring back to , the map controller  and its various functions may be distributed among the memories ,  and processors , .","According to an embodiment, the map controller  includes a label and place page controller , a dynamic feature controller , a map tile generator , and a map request processor . The map request processor  may be configured to process requests from client devices, such as the client device , for map data  and label and place page data  corresponding to specified geographic regions. Each request may correspond to a single electronic message or a series of electronic messages, depending on the scenario and\/or embodiment. For example, the map request processor  may receive a request for map data corresponding to a two-mile-wide region centered at latitude 41\u00b0 52\u2032 43\u2033 and longitude \u221287\u00b0 38\u2032 11\u2033. The request may also indicate a zoom level for which map data is being requested. Still further, the request may indicate that map data is being requested for rendering a transit map. The request in this case may include a map type indication field set to the appropriate value. Further, the map request processor  may receive a request for label and place page data  corresponding to the requested map data. Depending on the scenario, the map request processor  may receive a request for map data and a request for label and place page data  in a single electronic message, e.g., a single HTTP message, or separately in respective electronic messages.","After the map request processor  receives a request for map data and\/or label and place page data  from a client device, the map controller  provides appropriate data to the client device via one or more electronic messages. In an embodiment, the map tile generator  generates map data as a set of map tile descriptors, such that each map tile descriptor describes a map tile, i.e., a portion of a map image of a certain size (e.g., 256 by 256 pixels). The size of a geographic region represented by an individual map tile depends on the zoom level with which the map tile is associated, so that a single map tile at a lower zoom level illustrates a larger geographic area than a single map tile at a higher zoom level. The map tile generator  may generate each map tile descriptor according to a vector graphics format, and a client device, such as the client device  of , may locally generate a raster image for each tile. In an embodiment, the map tile generator  retrieves the requested data from a map database such as the map database  illustrated in , for example.","When providing map data to a client device, the map controller  may separate map content  from label and place page data . In some cases, the map controller  may provide vector data that describes map content without providing the corresponding label and place page data  to the client device at the same time (if, for example, the client device already has the necessary label and place page data) or, conversely, may provide label and place page data  without providing the vector data for graphical map content to which the label and place page data  applies (for rendering a geographic region at a more detailed zoom level and using label and place page data  that was sent with a previous request for the geographic region at a different zoom level, for example). Further, in some scenarios, the map controller  provides vector data and label and place page data  at the same time (e.g., in a same electronic message or a series of electronic messages).","The dynamic feature controller  may be communicatively coupled to the map tile generator  and configured to determine which map elements are associated with the requested map data and generate vector-based descriptions of these map elements. For example, the dynamic feature controller  may determine that, in response to a request for map data corresponding to zoom level Zi for a certain geographic region, vector descriptors corresponding to interstate highways, large bodies of water, etc. must be generated, whereas in response to another request for map data corresponding to zoom level Zj for the same geographic region, additional vector data corresponding to local roads and buildings must be generated. Further, in some cases, the dynamic feature controller  generates different sets of vector data for different map types. For example, a terrain map may include map elements that are not included in a basic map for the same geographic region and zoom level.","The label and place page controller  may be communicatively coupled to the other components of the map controller  as well as a user activity system  (). When the map request processor  receives a request for map data and queries the map data repository  for map tile data , the label and place page controller  queries the label and place page data repository  for label and place page data  that corresponds to the geographical area of the requested map tile data . As with the map tile data , the amount of label and place page data corresponding to the requested map data  may depend on the zoom level with which the map tile is associated. For example, a single map tile at a lower zoom level illustrates a larger geographic area and, thus, corresponds to more label and place pace data  than a single map tile at a higher zoom level. In some embodiments, the label and place page controller  may query the label and place page data repository  for only the data  that is visible at the zoom level of the requested map data . In other embodiments, the label and place page controller  may query the repository  for more data  that corresponds to other zoom levels than would be visible at the zoom level of the requested map data . The label and place page controller  may then insert the retrieved label and place page data  in the vector containing the requested map tile data  or may send the data  separately from the map tile data . The client device, such as the client device  of , may locally generate a raster image for each tile including the data  or may provide a link to the data  in the image.","In some embodiments, the user activity system  () may include a user activity system server  that includes a module  to receive and analyze user activity data  for pre-fetching label and place page data  for later display at the client device . For example, the user activity data repository  may receive and store data from a variety of other modules and applications executing on the client device  or in communication with the device  (e.g., a web browser, a user activity tracking module, a trip planning module, an email module, etc.). The client device  may then forward the data  to the user activity system  for analysis. Furthermore, the client device  may periodically forward a web browser history, e-mail text including geographic locations, travel documents, or other data generated or received by applications executing on the client device  to the user activity system . Where the user activity data  is received by the user activity system , the module  may analyze the data  to determine any geographic locations at which the user will likely request data in the future. The user activity system module  may then forward that geographic location data to the mapping system and the label and place page controller  to retrieve label and place page data  corresponding to the geographic locations determined from the user activity data . When the received data  is analyzed at the backend by the module  to determine likely future geographic locations for the user, the label and place page controller  may execute instructions to push the label and place page data  from the label and place page data repository  to the cache memory  of the client device . When the data  is analyzed at the front end, a module on the client device (e.g., the mapping module, etc.) may implement the functions of the label and place page controller  and pull the label and place page data  from the label and place page data repository  to the cache memory  of the client device .","In some embodiments, the user activity server  may store the user activity data  in one or more data repositories. For example, the user activity data  may include the user's location , browser search history data , e-mail and other message data , trip planning data , or other data  indicating geographical locations the user is planning to visit or is likely to visit. The module  may include computer-executable instructions to analyze the data stored in the data repositories , , , , and , as described herein. Analysis of the user activity data  by the module  may determine location data that the user activity system server  may send to the mapping system  and the label and place page controller .",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 2","b":["200","200","202","204","117","118","119","120","202","202","200","202","202","200","202","204","200","204","204","204","204","204","1","118","204","106","204","204","204","1","204","120","204","204","120","204","202","204","202","200"],"i":["a","a ","a ","a ","b","a ","a","b ","b","c ","a "]},"The label and place page data , may include various groups of information that describe characteristics of the features  within a map tile . In some embodiments, the information , includes listing information for businesses, points of interest, shopping centers, parks, etc., that are graphically represented within the map tile . The information , may also include specifications and other information describing the history of the object, physical specifications, etc. For example, the information , may include several features that include an icon, location, and data , for businesses, points of interest, etc., within the map tile . Label and place page data , may include text, photos, and other data to render a web page including information from various web resources that describes a particular listing represented by a feature , such as an icon or other graphic item, within the map tile .",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 3","b":["300","100","120","124","106","300","140","126","102","140","125","114","114","125","130","132","134","136","138","129","140","126","302","102","302","300","114","300","140","126","129","128","102","125","126","302","114","302","300","114","129","300","126","140"]},"The data  may include any type of history, log, or other data produced by an application  executing on the client device . In some embodiments, the data  includes web search history data  from a web browser application, trip plan data  from a trip planning application, location-related e-mail data  from an e-mail application, social networking data  indicating a geographic location (e.g., a hometown location, a favorite places data entry, etc.), or other data , etc. Of course, one or more of the backend user activity system module  and the front end user activity module  may monitor any application  executing on the client device  for data that indicates a geographic location and that could be used to pre-fetch label and place page data  from the repository  for cache storage and subsequent display on the client device  executing the application . Each of the various sets of user activity data , , , , , may include data  that indicates a geographic location (i.e., user activity location data ).",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 4","FIG. 4","FIGS. 1A"],"b":["400","119","124","102","400","108","102","400","100","119","400","129","140","106","400","102","110","100","119","302","102","106","119","1","2","3","400"]},"At block , the method  may retrieve or receive user activity data  from one or more applications  executing on a client computing device . The activity data  retrieved from the applications  may include a history file corresponding to a log of web page requests, locations, flight information, e-mail discussions, social networking profile information, etc. E-mail, instant messaging, or social networking conversations may be logged along with electronic purchase receipts and other data related to mapping and web-based activities the user completes using the client device . In some embodiments, the user activity data  may be retrieved from the client device  in response to a request from the user activity system . In further embodiments, the client device  may periodically send the user activity data  to backend components . Furthermore, the user activity system  may retrieve\/receive the user activity data  from other sources such as another computing device linked to the mapping system  via a web services account that is common to a user of both the client computing device  and the other device.","At block , the method  may analyze the user activity data  sent or retrieved from the client computing device  at block . In some embodiments, the method  may send the user activity data  to a local module (e.g., the user activity module ) or a remote user activity system  via a network connection. For example, a user activity server  may receive or retrieve the data  and the module  may parse the data  to discover user activity location data . The module  may include one or more computer-executable instructions to parse the data  to identify or determine user activity location data  from the user activity data . The user activity location data  determined from the user activity data  may include a city name, an address, an airport code, GPS coordinates or any other information indicating a geographic location.","If, at block , the user activity location data  is relevant enough to warrant pre-fetching label and place page data, then the module  or module  may send the location data  to a mapping system  at block . In some embodiments, location data  determined from the data  may be sent to the mapping system  as a request for label and place page data  corresponding to the location data . Block  may include one or more computer-executable instructions to analyze the user activity data  to determine if any discovered user activity location data  is relevant enough to continue pre-fetching label and place page data for storage in a cache . For example, the module  or module  may only determine one instance of user activity location data  from the user activity data  that indicates \u201cBoston\u201d as a geographic location. Only one indication may not warrant any further action by the system  to cache label and place page data. However, more indications of particular user activity location data  from more user activity data  may, collectively, reach a threshold amount to warrant executing further instructions to cache the label and place page data corresponding to those geographic locations.","The module  or module  may also include computer-executable instructions to store the user activity location data  within one or more data repositories. For example, the module  or module  may analyze a web search history , determine user activity location data  within the history , and store that determined data within a repository . If the determined user activity location data  meets or exceeds a threshold amount, then the amount of user activity location data  may warrant executing further instructions to retrieve and cache label and place page corresponding to the location data .","The user activity data  or the determined user activity location data  may also include timestamp information and the module may include computer-executable instructions to determine a threshold time period for which the determination of user activity location data  would warrant caching the data. For example, if the module  or module  determined three user activity location data  indications for \u201cBoston\u201d within a time period of a week, the module may determine that one or more thresholds have been exceeded and execute further instructions to retrieve and cache label and place page data corresponding to Boston. In contrast, if the module  determined three user activity location data  indications for \u201cBoston\u201d within a time period of a year, the module  or module  may determine that one or more thresholds have not been exceeded and return to block . Of course, block  and  may perform statistical and other analyses of the user activity data  to determine whether to proceed to the next block or continue retrieving user activity data .","If, after the analysis of block  and , the method  may determine that the user activity location data  is relevant enough to warrant caching label and place page data at a client computing device  and execute block . At block , the method  may send location data  determined from the user activity data  at block  and  to the mapping system . Block  may send the location data  to the mapping system  as a request for label and place page data  corresponding to the data . In some embodiments, the user activity system  may send the location data  to the mapping system server  for processing by the module ","At block , the module  may execute instructions to match the received location data  to label and place page data . In some embodiments, block  includes instructions to match the received user activity location data  to label and place page data  that corresponds to an analysis result  sent to the mapping system  by the user activity module  executing on the client device . In further embodiments, block  includes instructions to match the received user activity location data  to label and place page data  that corresponds to an analysis result  sent to the mapping system  by the user activity system  executing as a backend component .","At block , the module  may execute instructions to send the label and place page data retrieved at block  to a client computing device . In some embodiments, block  includes instructions to cause the mapping system  to send label and place page data  to the client device . As discussed above, because the map tile data is relatively data intensive compared to the label and place page data , block  might initially send label and place page data  to the computing device . Later, map tile data  may be retrieved and the label and place page data may be layered onto the map tile data  and graphically displayed together. The method  may also send the retrieved label and place page data  to a mapping module  executing on the client computing device .","At block , the client computing device , mapping module , or user activity module  that received the label and place page data , may execute instructions to store the received data within a cache memory . The mapping module  may then use the cached label and place page data  for display on the client computing device  from the cache  during periods of low or no connectivity between the client computing device  and the backend components .",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 5","FIG. 1A","FIG. 1B","FIGS. 2 and 3","FIG. 4"],"b":["500","501","501","102","500","500","100"]},"As shown in , the computing device  includes a processor  that is coupled to an interconnection bus . The processor  includes a register set or register space , which is depicted in  as being entirely on-chip, but which could alternatively be located entirely or partially off-chip and directly coupled to the processor  via dedicated electrical connections and\/or via the interconnection bus . The processor  may be any suitable processor, processing unit or microprocessor. Although not shown in , the computing device  may be a multi-processor device and, thus, may include one or more additional processors that are identical or similar to the processor  and that are communicatively coupled to the interconnection bus .","The processor  of  is coupled to a chipset , which includes a memory controller  and a peripheral input\/output (I\/O) controller . As is well known, a chipset typically provides I\/O and memory management functions as well as a plurality of general purpose and\/or special purpose registers, timers, etc. that are accessible or used by one or more processors coupled to the chipset . The memory controller  performs functions that enable the processor  (or processors if there are multiple processors) to access a system memory  and a mass storage memory .","The system memory  may include any desired type of volatile and\/or non-volatile memory such as, for example, static random access memory (SRAM), dynamic random access memory (DRAM), flash memory, read-only memory (ROM), etc. The mass storage memory  may include any desired type of mass storage device. For example, if the computing device  is used to implement a mapping application  having an API  and a user activity module  (including instructions as described by the method  of ), the mass storage memory  may include a hard disk drive, an optical drive, a tape storage device, a solid-state memory (e.g., a flash memory, a RAM memory, etc.), a magnetic memory (e.g., a hard drive), or any other memory suitable for mass storage. As used herein, the terms module, block, function, operation, procedure, routine, step, and method refer to tangible computer program logic or tangible computer executable instructions that provide the specified functionality to the computing device  and the mobile mapping system . Thus, a module, block, function, operation, procedure, routine, step, and method can be implemented in hardware, firmware, and\/or software. In one embodiment, program modules and routines (e.g., the mapping application , the API , the user activity module , etc.) are stored in mass storage memory , loaded into system memory , and executed by a processor  or can be provided from computer program products that are stored in tangible computer-readable storage mediums (e.g. RAM, hard disk, optical\/magnetic media, etc.). Mass storage  may also include cache memory  storing pre-fetched label and place page data and other data for use by the mapping application  and user activity module .","The peripheral I\/O controller  performs functions that enable the processor  to communicate with peripheral input\/output (I\/O) devices  and , a network interface , a cellular network transceiver , a local network transceiver , and a GPS transceiver  (via the network interface ) via a peripheral I\/O bus . The I\/O devices  and  may be any desired type of I\/O device such as, for example, a keyboard, a display (e.g., a liquid crystal display (LCD), a cathode ray tube (CRT) display, etc.), a navigation device (e.g., a mouse, a trackball, a capacitive touch pad, a joystick, etc.), etc. The I\/O devices  and  may be used with the mapping application  and user activity module  to receive GPS data from the GPS transceiver , send the GPS data to the backend components of the system , render (e.g., create a raster image from map tile data received in a vector format), and display maps and user interfaces as described in relation to the figures. A cellular telephone transceiver  may be resident with the local network transceiver . The local network transceiver  may include support for a Wi-Fi network, Bluetooth, Infrared, or other wireless data transmission protocols. In other embodiments, one element may simultaneously support each of the various wireless protocols employed by the computing device . For example, a software-defined radio may be able to support multiple protocols via downloadable instructions. In operation, the computing device  may be able to periodically poll for visible wireless network transmitters (both cellular and local network) on a periodic basis. Such polling may be possible even while normal wireless traffic is being supported on the computing device . The network interface  may be, for example, an Ethernet device, an asynchronous transfer mode (ATM) device, an 802.11 wireless interface device, a DSL modem, a cable modem, a cellular modem, etc., that enables the system  for pre-fetching label and page data to communicate with another computer system having at least the elements described in relation to the system .","While the memory controller  and the I\/O controller  are depicted in  as separate functional blocks within the chipset , the functions performed by these blocks may be integrated within a single integrated circuit or may be implemented using two or more separate integrated circuits. The mobile mapping system  may also implement the mapping application  and user activity module  on remote computing devices  and . The remote computing devices  and  may communicate with the computing device  over an Ethernet or other type of link . For example, the computing device  may receive label and place page data created by an application executing on a remote computing device , . In some embodiments, the mapping application  and\/or the user activity module  may be retrieved by the computing device  from a cloud computing server  via the Internet . When using the cloud computing server , the retrieved mapping application  and\/or the user activity module  may be programmatically linked with the computing device . The mapping application  and\/or the user activity module  may be a Java\u00ae applet executing within a Java\u00ae Virtual Machine (JVM) environment resident in the computing device  or the remote computing devices , . The mapping application  and\/or the user activity module  may also be \u201cplug-ins\u201d adapted to execute in a web-browser located on the computing devices , , and . In some embodiments, the mapping application  and\/or the user activity module  may communicate with back end components  such as the mapping system  and user activity system  via the Internet .","Using the systems and procedures described above, the system for pre-fetching label and place page data  may retrieve and analyze data generated by an application executing on a client computing device that indicates a geographic location. For web-based user activity, a browser history or other data may be parsed to determine likely locations for pre-fetching label and place page data. Similarly, local application data indicating trip planning or other location-based activities may be stored at the mobile device, forwarded to a remote user activity system or a local user activity module, and used by a mapping system to provide locations to pre-fetch label and place page data. Of course, the systems described herein may present a user with a user interface from which the user is able to opt-out of any of the user activity data gathering and pre-fetching methods described herein.","The system  may include but is not limited to any combination of a LAN, a MAN, a WAN, a mobile, a wired or wireless network, a private network, or a virtual private network. Moreover, while only three remote computing devices  and  are illustrated in  to simplify and clarify the description, it is understood that any number of client computers are supported and can be in communication within the system .","Additionally, certain embodiments are described herein as including logic or a number of components, modules, or mechanisms. Modules may constitute either software modules (e.g., code embodied on a machine-readable medium or in a transmission signal, wherein the code is executed by a processor) or hardware modules. A hardware module is tangible unit capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments, one or more computer systems (e.g., a standalone, client or server computer system) or one or more hardware modules of a computer system (e.g., a processor or a group of processors) may be configured by software (e.g., an application or application portion) as a hardware module that operates to perform certain operations as described herein.","In various embodiments, a hardware module may be implemented mechanically or electronically. For example, a hardware module may comprise dedicated circuitry or logic that is permanently configured (e.g., as a special-purpose processor, such as a field programmable gate array (FPGA) or an application-specific integrated circuit (ASIC)) to perform certain operations. A hardware module may also comprise programmable logic or circuitry (e.g., as encompassed within a general-purpose processor or other programmable processor) that is temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a hardware module mechanically, in dedicated and permanently configured circuitry, or in temporarily configured circuitry (e.g., configured by software) may be driven by cost and time considerations.","Accordingly, the term \u201chardware module\u201d should be understood to encompass a tangible entity, be that an entity that is physically constructed, permanently configured (e.g., hardwired), or temporarily configured (e.g., programmed) to operate in a certain manner or to perform certain operations described herein. As used herein, \u201chardware-implemented module\u201d refers to a hardware module. Considering embodiments in which hardware modules are temporarily configured (e.g., programmed), each of the hardware modules need not be configured or instantiated at any one instance in time. For example, where the hardware modules comprise a general-purpose processor configured using software, the general-purpose processor may be configured as respective different hardware modules at different times. Software may accordingly configure a processor, for example, to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.","Hardware modules can provide information to, and receive information from, other hardware modules. Accordingly, the described hardware modules may be regarded as being communicatively coupled. Where multiple of such hardware modules exist contemporaneously, communications may be achieved through signal transmission (e.g., over appropriate circuits and buses) that connect the hardware modules. In embodiments in which multiple hardware modules are configured or instantiated at different times, communications between such hardware modules may be achieved, for example, through the storage and retrieval of information in memory structures to which the multiple hardware modules have access. For example, one hardware module may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware module may then, at a later time, access the memory device to retrieve and process the stored output. Hardware modules may also initiate communications with input or output devices, and can operate on a resource (e.g., a collection of information).","The various operations of example methods described herein may be performed, at least partially, by one or more processors that are temporarily configured (e.g., by software) or permanently configured to perform the relevant operations. Whether temporarily or permanently configured, such processors may constitute processor-implemented modules that operate to perform one or more operations or functions. The modules referred to herein may, in some example embodiments, comprise processor-implemented modules.","Similarly, the methods or routines described herein may be at least partially processor-implemented. For example, at least some of the operations of a method may be performed by one or processors or processor-implemented hardware modules. The performance of certain of the operations may be distributed among the one or more processors, not only residing within a single machine, but deployed across a number of machines. In some example embodiments, the processor or processors may be located in a single location (e.g., within a home environment, an office environment or as a server farm), while in other embodiments the processors may be distributed across a number of locations.","The one or more processors may also operate to support performance of the relevant operations in a \u201ccloud computing\u201d environment or as a \u201csoftware as a service\u201d (SaaS). For example, at least some of the operations may be performed by a group of computers (as examples of machines including processors), these operations being accessible via a network (e.g., the Internet) and via one or more appropriate interfaces (e.g., application program interfaces (APIs).)","The performance of certain of the operations may be distributed among the one or more processors, not only residing within a single machine, but deployed across a number of machines. In some example embodiments, the one or more processors or processor-implemented modules may be located in a single geographic location (e.g., within a home environment, an office environment, or a server farm). In other example embodiments, the one or more processors or processor-implemented modules may be distributed across a number of geographic locations.","Some portions of this specification are presented in terms of algorithms or symbolic representations of operations on data stored as bits or binary digital signals within a machine memory (e.g., a computer memory). These algorithms or symbolic representations are examples of techniques used by those of ordinary skill in the data processing arts to convey the substance of their work to others skilled in the art. As used herein, an \u201calgorithm\u201d is a self-consistent sequence of operations or similar processing leading to a desired result. In this context, algorithms and operations involve physical manipulation of physical quantities. Typically, but not necessarily, such quantities may take the form of electrical, magnetic, or optical signals capable of being stored, accessed, transferred, combined, compared, or otherwise manipulated by a machine. It is convenient at times, principally for reasons of common usage, to refer to such signals using words such as \u201cdata,\u201d \u201ccontent,\u201d \u201cbits,\u201d \u201cvalues,\u201d \u201celements,\u201d \u201csymbols,\u201d \u201ccharacters,\u201d \u201cterms,\u201d \u201cnumbers.\u201d \u201cnumerals,\u201d or the like. These words, however, are merely convenient labels and are to be associated with appropriate physical quantities.","Unless specifically stated otherwise, discussions herein using words such as \u201cprocessing,\u201d \u201ccomputing,\u201d \u201ccalculating,\u201d \u201cdetermining,\u201d \u201cpresenting,\u201d \u201cdisplaying,\u201d or the like may refer to actions or processes of a machine (e.g., a computer) that manipulates or transforms data represented as physical (e.g., electronic, magnetic, or optical) quantities within one or more memories (e.g., volatile memory, non-volatile memory, or a combination thereof), registers, or other machine components that receive, store, transmit, or display information.","As used herein any reference to \u201csome embodiments\u201d or \u201can embodiment\u201d means that a particular element, feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase \u201cin some embodiments\u201d in various places in the specification are not necessarily all referring to the same embodiment.","Some embodiments may be described using the expression \u201ccoupled\u201d and \u201cconnected\u201d along with their derivatives. For example, some embodiments may be described using the term \u201ccoupled\u201d to indicate that two or more elements are in direct physical or electrical contact. The term \u201ccoupled,\u201d however, may also mean that two or more elements are not in direct contact with each other, but yet still co-operate or interact with each other. The embodiments are not limited in this context.","Further, the figures depict preferred embodiments of a system for pre-fetching label and place page data for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein","Upon reading this disclosure, those of skill in the art will appreciate still additional alternative structural and functional designs for a system and a process for pre-fetching place page data based upon analysis of data generated by applications executing on a client computing device that indicate future user activities through the disclosed principles herein. Thus, while particular embodiments and applications have been illustrated and described, it is to be understood that the disclosed embodiments are not limited to the precise construction and components disclosed herein. Various modifications, changes and variations, which will be apparent to those skilled in the art, may be made in the arrangement, operation and details of the method and apparatus disclosed herein without departing from the spirit and scope defined in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
