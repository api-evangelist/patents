---
title: Systems and methods for detecting unintentional information disclosure
abstract: A method for detecting unintentional information disclosure. The method may include: 1) identifying at least one data access Application Programming Interface (API) programmed to provide access to sensitive information located on a computing device, 2) monitoring attempts to use the data access API, 3) while monitoring attempts to use the data access API, detecting an attempt by an application to access the sensitive information through the data access API, 4) in response to detecting the attempt to access the sensitive information, tracking the sensitive information accessed by the application, 5) detecting an attempt to leak the sensitive information outside of the computing device, and 6) in response to detecting the attempt to leak the sensitive information outside of the computing device, performing a security action.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08671455&OS=08671455&RS=08671455
owner: Symantec Corporation
number: 08671455
owner_city: Mountain View
owner_country: US
publication_date: 20110922
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["Today, smartphones are as popular for use as communication tools as they are for creating, managing, and interacting with digital information. Smartphones are used, by consumers and business users alike, to communicate via phone call, text message, email, and video conference. Smartphones are also used to manage calendars and contact lists, view and create documents, browse the Internet, record video and audio, take photographs, and make purchases. Consequently, consumers and businesses are increasingly using smartphones to store sensitive information.","Knowing this, unscrupulous developers have begun creating applications that can steal sensitive information from a smartphone without the knowledge or permission of the user of the smartphone. These malicious programs may end up being readily available, usually for free, through popular application store services, where individuals seeking to enhance the functionality of their smartphones may inadvertently download and install them. Such malicious programs may also infect legitimate programs installed on a user's device. And, in some situations, a user may install a legitimate program and may be unaware that the program is designed to access and share sensitive information.","Smartphone systems may implement a variety of technologies to protect sensitive information from malicious programs or from legitimate programs that may access personal information without a user's knowledge. For example, some systems may implement a permission-based scheme where an application must request, before the application can be installed, permission to access sensitive information.","Unfortunately, such permission-based schemes may inadequately protect sensitive information from unintentional disclosure, because once a user grants permission to an application to access sensitive information, the application may use the sensitive information however it likes. An unscrupulous developer may take advantage of this ability by creating an application that requires access to some sensitive information to provide a useful service to the user, but that also steals the user's sensitive information. Furthermore, some users may simply not read or understand what permissions an application is requesting and\/or understand the implication of granting certain permissions. Accordingly, the instant disclosure addresses a need for systems and methods that protect sensitive information from unintentional and\/or malicious disclosure.","As will be described in greater detail below, the instant disclosure generally relates to systems and methods for detecting unintentional information disclosure. In one example, a computer-implemented method for detecting unintentional information disclosure may include: 1) identifying at least one data access Application Programming Interface (API) programmed to provide access to sensitive information located on a computing device, 2) monitoring attempts to use the data access API, 3) while monitoring attempts to use the data access API, detecting an attempt, by an application, to access the sensitive information through the data access API, 4) in response to detecting the attempt to access the sensitive information, tracking the sensitive information accessed by the application, 5) detecting an attempt to leak the sensitive information outside of the computing device, and 6) in response to detecting the attempt to leak the sensitive information outside of the computing device, performing a security action.","In some embodiments, the method may further include: 1) identifying at least one data transfer API programmed to send information outside of the computing device, 2) determining whether the application has access to the data transfer API to determine whether the sensitive information should be tracked, 3) determining that the sensitive information should be tracked because the application can access the data transfer API. The method may detect the attempt to leak the sensitive information outside of the computing device by detecting an attempt, by the application, to leak the sensitive information by using the data transfer API.","In various embodiments, the method may track the sensitive information accessed by the application by applying a sensitive-information label to the sensitive information to distinguish between the sensitive information and other information used by the application.","In some embodiments, the method may detect an attempt to leak the sensitive information outside of the computing device by: 1) first monitoring attempts, by the application, to send information outside of the computing device, and 2) while monitoring attempts, by the application, to send information outside of the computing device, detecting the attempt to leak the sensitive information outside of the computing device by identifying the sensitive-information label applied to the sensitive information.","In certain embodiments, the method may further include applying the sensitive-information label to at least one additional instance of the sensitive information. In some embodiments, the additional instance of the sensitive information may include a variable to which the sensitive information has been assigned, a file to which the sensitive information has been stored, and\/or an inter-process communication in which the sensitive information has been communicated.","In one embodiment, the method may apply the label to the sensitive information during the attempt, by the application, to access the sensitive information. In various embodiments, the method may apply the sensitive-information label to the sensitive information by storing, in a predetermined memory location, the sensitive-information label and\/or a reference to the sensitive information.","In certain embodiments, the method may perform the security action by logging the attempt to leak the sensitive information outside of the computing device, notifying a user of the computing device of the attempt to leak the sensitive information outside of the computing device, notifying a third party of the attempt to leak the sensitive information outside of the computing device, and\/or preventing the attempt to leak the sensitive information outside of the computing device.","In at least one embodiment, the method may identify the data access API by determining that one or more applications can use the data access API in order to determine whether to monitor attempts to use the data access API and may monitor attempts to use the data access API in response to determining that one or more applications can use the data access API.","In various embodiments, the data access API may include an account access API, a browser-bookmark access API, a browser-history access API, a calendar access API, a camera access API, a contact access API, a location access API, a message access API, an external-storage access API, a microphone access API, and\/or a phone-call access API. In some embodiments, the data transfer API may include a message transfer API, a network transfer API, and\/or a phone-call transfer API.","In one embodiment, a system for implementing the above-described method may include 1) an identification module programmed to identify at least one data access API programmed to provide access to sensitive information located on the system, 2) a monitoring module programmed to monitor attempts to use the data access API, 3) an access-attempt-detection module programmed to detect an attempt, by an application, to access the sensitive information through the data access API, 4) a tracking module programmed to track, in response to detecting the attempt to access the sensitive information, the sensitive information accessed by the application, 5) a leak-detection module programmed to detect an attempt to leak the sensitive information outside of the system, 6) a security module programmed to perform, in response to detecting the attempt to leak the sensitive information outside of the system, a security action, and 7) at least one processor configured to execute the identification module, the monitoring module, the access-attempt-detection module, the tracking module, the leak-detection module, and the security module.","In some examples, the above-described method may be encoded as computer-readable instructions on a computer-readable-storage medium. For example, a computer-readable-storage medium may include one or more computer-executable instructions that, when executed by at least one processor of a computing device, may cause the computing device to: 1) identify at least one data access API programmed to provide access to sensitive information located on the computing device, 2) monitor attempts to use the data access API, 3) while monitoring attempts to use the data access API, detect an attempt, by an application, to access the sensitive information through the data access API, 4) in response to detecting the attempt to access the sensitive information, track the sensitive information accessed by the application, 5) detect an attempt to leak the sensitive information outside of the computing device, and 6) in response to detecting the attempt to leak the sensitive information outside of the computing device, perform a security action.","As will be explained in greater detail below, the systems and methods disclosed herein may protect a user's sensitive information located on a device (e.g., a smartphone, a tablet pc, etc.) by tracking, in real-time, the sensitive information as it is used by applications running on the device and by detecting malicious applications that attempt to steal the user's sensitive information without the user's knowledge and\/or permission, while also minimizing the use of system resources.","Features from any of the above-mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments, features, and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.","Throughout the drawings, identical reference characters and descriptions indicate similar, but not necessarily identical, elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms, specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However, the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather, the instant disclosure covers all modifications, equivalents, and alternatives falling within the scope of the appended claims.","The following will provide, with reference to , detailed descriptions of exemplary systems for detecting unintentional information disclosure. Detailed descriptions of corresponding computer-implemented methods will also be provided in connection with . In addition, detailed descriptions of an exemplary computing system and network architecture capable of implementing one or more of the embodiments described herein will be provided in connection with , respectively.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1","b":["100","100","102","100","104","100","106"]},"In addition, and as will be described in greater detail below, exemplary system  may include an access-attempt-detection module  programmed to detect an attempt, by an application, to access the sensitive information through the data access API. Exemplary system  may also include a tracking module  programmed to track, in response to detecting the attempt to access the sensitive information, the sensitive information accessed by the application.","Exemplary system  may also include a leak-detection module  programmed to detect an attempt to leak the sensitive information. Exemplary system  may further include a security module  programmed to perform, in response to detecting the attempt to leak the sensitive information, a security action. Although illustrated as separate elements, one or more of modules  in  may represent portions of a single module or application.","In certain embodiments, one or more of modules  in  may represent one or more software applications or programs that, when executed by a computing device, may cause the computing device to perform one or more tasks. For example, and as will be described in greater detail below, one or more of modules  may represent software modules stored and configured to run on one or more computing devices, such as the devices illustrated in  (e.g., computing device  and\/or server ), computing system  in , and\/or portions of exemplary network architecture  in . One or more of modules  in  may also represent all or portions of one or more special-purpose computers configured to perform one or more tasks.","As illustrated in , exemplary system  may also include one or more databases, such as database . For example, and as will be explained in greater detail below, exemplary system  may include data-access API information  that may include information used to identify data access APIs programmed to provide access to sensitive information. Exemplary system  may also include data-transfer API information  that may include information used to identify data transfer APIs programmed to send information outside of exemplary system . Exemplary system  may further include sensitive-information labels  that may include information used to track sensitive information (e.g., sensitive-information labels and\/or references to sensitive information).","Database  may represent portions of a single database or computing device or a plurality of databases or computing devices. For example, database  may represent a portion of computing device  or server  in , computing system  in , and\/or portions of exemplary network architecture  in . Alternatively, database  in  may represent one or more physically separate devices capable of being accessed by a computing device, such as server  in , computing system  in , and\/or portions of exemplary network architecture  in .","Exemplary system  in  may be implemented in a variety of ways. For example, all or a portion of exemplary system  may represent portions of exemplary system  in . As shown in , system  may include a computing device  in communication with a server  via a network .","Computing device  generally represents any type or form of computing device capable of reading computer-executable instructions. Examples of computing device  include, without limitation, smartphones, laptops, desktops, servers, cellular phones, personal digital assistants (PDAs), multimedia players, embedded systems, combinations of one or more of the same, exemplary computing system  in , or any other suitable computing device.","As illustrated in , computing device  may include identification module , monitoring module , access-attempt-detection module , tracking module , and leak-detection module . Modules - may protect computing device  from unintentional leaking of sensitive data. Computing device  may also include data-access API information , data-transfer API information , and sensitive-information labels .","In addition, and as will be described in greater detail below, computing device  may include a data-access API  programmed to provide access to sensitive information (e.g., sensitive information ) located on computing device  and a data-transfer API  programmed to send information outside of computing device . Computing device  may also include sensitive information  (e.g., sensitive information belonging to a user of computing device ).","Computing device  may further include applications  and . Applications  and  generally represent any type of application capable of being executed on computing device . For example, applications  and  may comprise third-party applications that have been installed on computing device  by the user of computing device .","Server  generally represents any type or form of computing device that is capable of reading computer-executable instructions and performing one or more of the server-side operations described herein. Examples of server  include, without limitation, application servers and database servers configured to provide various database services and\/or run certain software applications. As illustrated in , server  may include security module  and may provide one or more security functions for computing device . While security module  is shown on server , in some embodiments security module  may be located on computing device .","Network  generally represents any medium or architecture capable of facilitating communication or data transfer. Examples of network  include, without limitation, an intranet, a wide area network (WAN), a local area network (LAN), a personal area network (PAN), the Internet, power line communications (PLC), a cellular network (e.g., a GSM Network), exemplary network architecture  in , or the like. Network  may facilitate communication or data transfer using wireless or wired connections. In one embodiment, network  may facilitate communication between computing device  and server .",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 3","FIG. 3","FIG. 3","FIG. 1","FIG. 2","FIG. 4","FIG. 5"],"b":["300","100","200","410","500"]},"At step , one or more of the system described herein may identify at least one data access API programmed to provide access to sensitive information located on a computing device. For example, identification module  may identify data-access API , which may be programmed to provide access to sensitive information  located on computing device .","As used herein, the phrase \u201csensitive information\u201d may refer to any information that a user and\/or company would not want sent outside of the computing device without knowledge and\/or permission of the user and\/or company. Examples of sensitive information may include, without limitation, a name, a phone number, a device identifier, an email address, a contact, a browser history, a browser cookie, a phone history, a message history, location information (e.g., global positioning system information), financial information (e.g., credit card numbers, bank account numbers, etc.), confidential information, privileged information, personal information (e.g., a social security number, a driver's license number, etc.), sensitive corporate information (e.g., intellectual property, customer lists, product roadmaps, etc.), and\/or any other type of sensitive information.","As used herein, the phrase \u201coutside a computing device\u201d may refer to any location external to and\/or apart from a computing device. For example, if data is exposed outside a computing device, the data may be transferred to a removable hard drive attached to the computing device, the data may be transferred over a network to which the computing device is connected, the data may be displayed or otherwise provided on an input\/output device connected to the computing device, and\/or the data may be exposed in any other manner.","Identification module  may identify data-access API  in a variety of ways. For example, in one embodiment, identification module  may identify data-access API  based on information contained within data-access API information . For example, data-access API information  may be a database that identifies all APIs on a device that are capable of accessing sensitive information, and identification module  may query the database to identify data-access API . In other embodiments, identification module  may identify data-access API  by scanning the computing device for APIs capable of accessing sensitive information, by being notified by another module or system that the data access API is capable of accessing sensitive information, and\/or in any other suitable manner.","As used herein the phrase \u201cdata access API\u201d may refer to any code, interface, or other mechanism that an application may use to access sensitive information located on a computing device. For example, a data access API may be a file that includes a set of rules and\/or specifications that software applications may use to access data. Examples of data access APIs may include, without limitation, an account-access API programmed to provide access to account information, a browser-bookmark access API programmed to provide access to browser bookmarks, a browser-history access API programmed to provide access to browsing histories, a calendar access API programmed to provide access to calendar events, a camera access API programmed to provide access to a camera sensor, a contact access API programmed to provide access to contact lists, a location access API programmed to provide access to location information (e.g., the GPS location of the computing device), a message access API programmed to provide access to messages sent to or received by the computing device (e.g., text messages or email messages), an external-storage access API programmed to provide access to an external storage device (e.g., a memory card), an internal-storage API programmed to provide access to local memory, a log access API programmed to provide access to system logs, a microphone access API programmed to provide access to a microphone sensor, a phone-call access API programmed to provide access to phone-call information, an inter-process communication API programmed to allow two applications (e.g., applications  and ) to exchange information, a third-party-application API programmed to provide access to third-party-application information, a data-access API with permission requirements, and\/or any other data access API programmed to allow direct or indirect access to sensitive information .","In some embodiments, identification module  may determine, as part of identifying data-access API , that one or more applications can use data-access API  in order to determine whether to monitor attempts to use data-access API  in step . For example, identification module  may determine that monitoring module  should monitor data-access API  because application  and\/or application  can use data-access API . Alternatively, identification module  may determine that monitoring module  should not monitor data-access API  because there are no applications that can use data-access API .","In at least one embodiment, identification module  may determine that application  can use data-access API  by determining that application  has been granted permission to request and\/or receive sensitive information  using data-access API . For example, identification module  may determine that the user of computing device  previously granted permission (either implicitly or explicitly) to application  to use data-access API  when the user installed application  on computing device .","At step , one or more of the systems described herein may monitor attempts to use the data access API. For example, monitoring module  may monitor attempts to use data-access API .","Step  may be performed in a variety of ways. For example, in one embodiment, monitoring module  may monitor attempts to use data-access API  by monitoring data-access API  as data-access API  is invoked by applications, such as application  and\/or application . In another example, monitoring module  may monitor attempts to use data-access API  by monitoring one or more applications that have been granted permission to access data-access API .","In yet another example, monitoring module  may conserve system resources on computing device  by only monitoring attempts to use data-access API 212 in response to identification module  having determined that one or more applications can use data-access API  (as described above).","At step , one or more of the systems described herein may detect an attempt, by an application, to access the sensitive information through the data access API. The attempt may be detected while monitoring attempts to use the data access API. For example, access-attempt-detection module  may detect an attempt, by application , to access sensitive information  through data-access API  while monitoring attempts to use data-access API .","Access-attempt-detection module  may detect the attempt to access sensitive information  through data-access API  in a variety of ways. For example, access-attempt-detection module  may detect the attempt by detecting a request, received from application  using data-access API , for sensitive information . In another example, access-attempt-detection module  may detect the attempt by detecting that data-access API  has been invoked.","At step , one or more of the systems described herein may, in response to detecting the attempt to access the sensitive information, track the sensitive information accessed by the application. For example, tracking module  may track sensitive information  accessed by application .","Tracking module  may track sensitive information  in a variety of ways. For example, tracking module  may track sensitive information  as sensitive information  propagates through computing device  by tracking variables to which sensitive information  is assigned. Additionally or alternatively, tracking module  may track files, registers or memory locations to which sensitive information  is stored. Tracking module  may also track inter-process communications in which sensitive information  is communicated.","In certain embodiments, tracking module  may track sensitive information  by applying a sensitive-information label to sensitive information  to distinguish between sensitive information  and other information used by application . For example, tracking module  may apply a sensitive-information label to one or more variables assigned to sensitive information . Tracking module  may additionally or alternatively apply a sensitive-information label to files, registers and\/or memory locations to which sensitive information  has been stored. Tracking module  may also apply a sensitive-information label to inter-process communications in which sensitive information  has been communicated.","In some embodiments, tracking module  may apply the sensitive-information label to sensitive information  by storing, in a predetermined memory location, the sensitive-information label and\/or a reference to the sensitive information. For example, tracking module  may store the sensitive-information label in database . Thus, the sensitive-information label may be stored apart from sensitive information  and\/or in a memory location unrelated to the memory location where sensitive information  is stored.","In various embodiments, the sensitive-information label may indicate that sensitive information  is sensitive information, and\/or contain information about the use of sensitive information  by application . For example, the sensitive-information label may indicate a type (e.g., confidential information, personal information, etc.) of sensitive information , may indicate that data-access API  was used to access sensitive information , and\/or may indicate any other information useful in tracking sensitive information .","In certain embodiments, tracking module  may track sensitive information  by applying the sensitive-information label to an additional instance of sensitive information . In some embodiments, the additional instance of sensitive information  may include a variable to which sensitive information  has been assigned, a file to which sensitive information  has been stored, and\/or an inter-process communication in which sensitive information  has been communicated. For example, if application  assigns sensitive information  to a variable x (e.g., variable x=sensitive information ), tracking module  may apply the sensitive-information label to variable x. Similarly, if application  writes sensitive information  to a file y, tracking module  may apply the sensitive-information label to file y.","In some embodiments, tracking module  may apply the sensitive-information label to sensitive information  during the attempt, by application , to access sensitive information . For example, tracking module  may apply the sensitive-information label to sensitive information  when application  requests sensitive information , when data-access API sends sensitive information , and\/or when application  receives sensitive information .","In various embodiments, tracking module  may first determine whether sensitive information  should be tracked before tracking sensitive information . For example, if application  cannot leak sensitive information  outside of computing device , either directly or indirectly, tracking module  may not track the use of sensitive information  by application .","In one embodiment, identification module  may determine whether sensitive information  should be tracked by identifying at least one data transfer API programmed to send information outside of the computing device. For example, identification module  may identify data-transfer API . Identification module  may identify data-transfer API  in a variety of ways. For example, identification module  may identify data-transfer API  based on information contained within data-transfer API information . Examples of data-transfer API  include, without limitation, a message transfer API programmed to allow an application to send messages outside of computing device , a network transfer API programmed to allow an application to send information outside of computing device  over a network (e.g., network ), a phone-call transfer API programmed to allow an application to make phone calls, an external-storage access API programmed to allow an application to write information to an external-storage device, an internal-storage API programmed to allow an application to write information to internal storage, and\/or any other means of directly or indirectly sending information outside of computing device .","After identification module  identifies data-transfer API , tracking module  may determine whether the application has access to data-transfer API  to determine whether sensitive information  should be tracked. In at least one embodiment, tracking module  may determine that sensitive information  should be tracked because application  can directly or indirectly access data-transfer API . For example, tracking module  may determine whether application  has access to data-transfer API  by determining that application  has permission to send information using data-transfer API . As another example, tracking module  may determine that application  may not have access to data-transfer API  directly but may have access to data-transfer API  indirectly by determining that application  is capable of sending data to another application (e.g., application ) that has access to data-transfer API .","At step , one or more of the systems described herein may detect an attempt to leak the sensitive information outside of the computing device. For example, leak-detection module  may detect an attempt to leak sensitive information  outside of computing device .","Step  may be performed in a variety of ways. For example, leak-detection module  may detect an attempt to leak sensitive information  outside of computing device  by 1) monitoring attempts by application  to send information outside of computing device , and 2) by determining that the information comprises sensitive information . Leak-detection module  may monitor attempts by application  to send information outside of computing device  by monitoring application  and\/or by monitoring attempts by application  to send information outside of computing device  using data-transfer API .","In at least embodiment, leak-detection module  may detect the attempt to leak sensitive information  by: 1) monitoring attempts, by application , to send information outside of computing device , and 2) while monitoring attempts, by application , to send information outside of computing device , detecting the attempt to leak sensitive information  outside of computing device  by identifying the sensitive-information label that was applied to sensitive information  as part of step .","At step , one or more of the systems described herein may, in response to detecting the attempt to leak the sensitive information outside of the computing device, perform a security action. For example, security module  may perform a security action with respect to sensitive information .","Security module  may perform the security action in a variety of ways. For example, security module  may perform the security action by logging the attempt to leak sensitive information  outside of computing device . In the log, security module  may identify the application that attempted to leak sensitive information , how the application accessed or used sensitive information , and\/or the destination to which the application attempted to leak sensitive information . Security module  may also store the log to a log file, a database, and\/or to a memory location on computing device . Security module  may further send the log to server , to an administrator, and\/or to any other destination.","In one embodiment, security module  may perform the security action by notifying a user of computing device  of the attempt to leak sensitive information  outside of computing device . For example, security module  may present a notification, to the user of computing device , indicating that the attempt to leak sensitive information  was detected. Security module  may also enable the user of computing device  to prevent the leak of sensitive information  (e.g., by querying the user about whether to allow the information to be transmitted outside of computing device ).","In another embodiment, security module  may perform the security action by notifying a third party of the attempt to leak sensitive information  outside of computing device . For example, security module  may notify an operating system provider, a security vendor, an application store provider, and\/or a cellular provider about the attempt to leak sensitive information .","In some embodiments, security module  may perform the security action by preventing the attempt to leak sensitive information  outside of computing device . For example, security module  may prevent the attempt, by application , to leak sensitive information  by quarantining application , by removing application  from computing device , by preventing application  from sending any information outside of computing device , and\/or by preventing application  from sending any information outside of computing device  that comprises sensitive information . Upon completion of step , exemplary method  in  may terminate.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 4","b":["410","410","410"]},"Computing system  broadly represents any single or multi-processor computing device or system capable of executing computer-readable instructions. Examples of computing system  include, without limitation, workstations, laptops, client-side terminals, servers, distributed computing systems, handheld devices, or any other computing system or device. In its most basic configuration, computing system  may include at least one processor  and a system memory .","Processor  generally represents any type or form of processing unit capable of processing data or interpreting and executing instructions. In certain embodiments, processor  may receive instructions from a software application or module. These instructions may cause processor  to perform the functions of one or more of the exemplary embodiments described and\/or illustrated herein.","System memory  generally represents any type or form of volatile or non-volatile storage device or medium capable of storing data and\/or other computer-readable instructions. Examples of system memory  include, without limitation, random access memory (RAM), read only memory (ROM), flash memory, or any other suitable memory device. Although not required, in certain embodiments computing system  may include both a volatile memory unit (such as, for example, system memory ) and a non-volatile storage device (such as, for example, primary storage device , as described in detail below). In one example, one or more of modules  from  may be loaded into system memory .","In certain embodiments, exemplary computing system  may also include one or more components or elements in addition to processor  and system memory . For example, as illustrated in , computing system  may include a memory controller , an Input\/Output (I\/O) controller , and a communication interface , each of which may be interconnected via a communication infrastructure . Communication infrastructure  generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure  include, without limitation, a communication bus (such as an ISA, PCI, PCIe, or similar bus) and a network.","Memory controller  generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example, in certain embodiments memory controller  may control communication between processor , system memory , and I\/O controller  via communication infrastructure .","I\/O controller  generally represents any type or form of module capable of coordinating and\/or controlling the input and output functions of a computing device. For example, in certain embodiments I\/O controller  may control or facilitate transfer of data between one or more elements of computing system , such as processor , system memory , communication interface , display adapter , input interface , and storage interface .","Communication interface  broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system  and one or more additional devices. For example, in certain embodiments communication interface  may facilitate communication between computing system  and a private or public network including additional computing systems. Examples of communication interface  include, without limitation, a wired network interface (such as a network interface card), a wireless network interface (such as a wireless network interface card), a modem, and any other suitable interface. In at least one embodiment, communication interface  may provide a direct connection to a remote server via a direct link to a network, such as the Internet. Communication interface  may also indirectly provide such a connection through, for example, a local area network (such as an Ethernet network), a personal area network, a telephone or cable network, a cellular telephone connection, a satellite data connection, or any other suitable connection.","In certain embodiments, communication interface  may also represent a host adapter configured to facilitate communication between computing system  and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include, without limitation, SCSI host adapters, USB host adapters, IEEE 1394 host adapters, SATA and eSATA host adapters, ATA and PATA host adapters, Fibre Channel interface adapters, Ethernet adapters, or the like. Communication interface  may also allow computing system  to engage in distributed or remote computing. For example, communication interface  may receive instructions from a remote device or send instructions to a remote device for execution.","As illustrated in , computing system  may also include at least one display device  coupled to communication infrastructure  via a display adapter . Display device  generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly, display adapter  generally represents any type or form of device configured to forward graphics, text, and other data from communication infrastructure  (or from a frame buffer, as known in the art) for display on display device .","As illustrated in , exemplary computing system  may also include at least one input device  coupled to communication infrastructure  via an input interface . Input device  generally represents any type or form of input device capable of providing input, either computer or human generated, to exemplary computing system . Examples of input device  include, without limitation, a keyboard, a pointing device, a speech recognition device, or any other input device.","As illustrated in , exemplary computing system  may also include a primary storage device  and a backup storage device  coupled to communication infrastructure  via a storage interface . Storage devices  and  generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions. For example, storage devices  and  may be a magnetic disk drive (e.g., a so-called hard drive), a solid state drive, a floppy disk drive, a magnetic tape drive, an optical disk drive, a flash drive, or the like. Storage interface  generally represents any type or form of interface or device for transferring data between storage devices  and  and other components of computing system . In one example, database  from  may be stored in primary storage device .","In certain embodiments, storage devices  and  may be configured to read from and\/or write to a removable storage unit configured to store computer software, data, or other computer-readable information. Examples of suitable removable storage units include, without limitation, a floppy disk, a magnetic tape, an optical disk, a flash memory device, or the like. Storage devices  and  may also include other similar structures or devices for allowing computer software, data, or other computer-readable instructions to be loaded into computing system . For example, storage devices  and  may be configured to read and write software, data, or other computer-readable information. Storage devices  and  may also be a part of computing system  or may be a separate device accessed through other interface systems.","Many other devices or subsystems may be connected to computing system . Conversely, all of the components and devices illustrated in  need not be present to practice the embodiments described and\/or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system  may also employ any number of software, firmware, and\/or hardware configurations. For example, one or more of the exemplary embodiments disclosed herein may be encoded as a computer program (also referred to as computer software, software applications, computer-readable instructions, or computer control logic) on a computer-readable-storage medium. The phrase \u201ccomputer-readable-storage medium\u201d generally refers to any form of device, carrier, or medium capable of storing or carrying computer-readable instructions. Examples of computer-readable-storage media include, without limitation, transmission-type media, such as carrier waves, and physical media, such as magnetic-storage media (e.g., hard disk drives and floppy disks), optical-storage media (e.g., CD- or DVD-ROMs), electronic-storage media (e.g., solid-state drives and flash media), and other distribution systems.","The computer-readable-storage medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer-readable-storage medium may then be stored in system memory  and\/or various portions of storage devices  and . When executed by processor , a computer program loaded into computing system  may cause processor  to perform and\/or be a means for performing the functions of one or more of the exemplary embodiments described and\/or illustrated herein. Additionally or alternatively, one or more of the exemplary embodiments described and\/or illustrated herein may be implemented in firmware and\/or hardware. For example, computing system  may be configured as an application specific integrated circuit (ASIC) adapted to implement one or more of the exemplary embodiments disclosed herein.",{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 5","b":["500","510","520","530","540","545","550","500","500"]},"Client systems , , and  generally represent any type or form of computing device or system, such as exemplary computing system  in . Similarly, servers  and  generally represent computing devices or systems, such as application servers or database servers, configured to provide various database services and\/or run certain software applications. Network  generally represents any telecommunication or computer network including, for example, an intranet, a wide area network (WAN), a local area network (LAN), a personal area network (PAN), or the Internet. In one example, client systems , , and\/or  and\/or servers  and\/or  may include all or a portion of system  from .","As illustrated in , one or more storage devices ()-(N) may be directly attached to server . Similarly, one or more storage devices ()-(N) may be directly attached to server . Storage devices ()-(N) and storage devices ()-(N) generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions. In certain embodiments, storage devices ()-(N) and storage devices ()-(N) may represent network-attached storage (NAS) devices configured to communicate with servers  and  using various protocols, such as NFS, SMB, or CIFS.","Servers  and  may also be connected to a storage area network (SAN) fabric . SAN fabric  generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric  may facilitate communication between servers  and  and a plurality of storage devices ()-(N) and\/or an intelligent storage array . SAN fabric  may also facilitate, via network  and servers  and , communication between client systems , , and  and storage devices ()-(N) and\/or intelligent storage array  in such a manner that devices ()-(N) and array  appear as locally attached devices to client systems , , and . As with storage devices ()-(N) and storage devices ()-(N), storage devices ()-(N) and intelligent storage array  generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions.","In certain embodiments, and with reference to exemplary computing system  of , a communication interface, such as communication interface  in , may be used to provide connectivity between each client system , , and  and network . Client systems , , and  may be able to access information on server  or  using, for example, a web browser or other client software. Such software may allow client systems , , and  to access data hosted by server , server , storage devices ()-(N), storage devices ()-(N), storage devices ()-(N), or intelligent storage array . Although  depicts the use of a network (such as the Internet) for exchanging data, the embodiments described and\/or illustrated herein are not limited to the Internet or any particular network-based environment.","In at least one embodiment, all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server , server , storage devices ()-(N), storage devices ()-(N), storage devices ()-(N), intelligent storage array , or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program, stored in server , run by server , and distributed to client systems , , and  over network .","As detailed above, computing system  and\/or one or more components of network architecture  may perform and\/or be a means for performing, either alone or in combination with other elements, one or more steps of an exemplary method for detecting unintentional information disclosure.","While the foregoing disclosure sets forth various embodiments using specific block diagrams, flowcharts, and examples, each block diagram component, flowchart step, operation, and\/or component described and\/or illustrated herein may be implemented, individually and\/or collectively, using a wide range of hardware, software, or firmware (or any combination thereof) configurations. In addition, any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.","In some examples, all or a portion of exemplary system  in  may represent portions of a cloud-computing or network-based environment. Cloud-computing environments may provide various services and applications via the Internet. These cloud-based services (e.g., software as a service, platform as a service, infrastructure as a service, etc.) may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud-based computing environment.","The process parameters and sequence of steps described and\/or illustrated herein are given by way of example only and can be varied as desired. For example, while the steps illustrated and\/or described herein may be shown or discussed in a particular order, these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and\/or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.","While various embodiments have been described and\/or illustrated herein in the context of fully functional computing systems, one or more of these exemplary embodiments may be distributed as a program product in a variety of forms, regardless of the particular type of computer-readable-storage media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script, batch, or other executable files that may be stored on a computer-readable storage medium or in a computing system. In some embodiments, these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.","In addition, one or more of the modules described herein may transform data, physical devices, and\/or representations of physical devices from one form to another. For example, one or more of the modules recited herein may transform information about how an application uses sensitive information into a sensitive-information label for tracking the sensitive information.","The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.","Unless otherwise noted, the terms \u201ca\u201d or \u201can,\u201d as used in the specification and claims, are to be construed as meaning \u201cat least one of.\u201d In addition, for ease of use, the words \u201cincluding\u201d and \u201chaving,\u201d as used in the specification and claims, are interchangeable with and have the same meaning as the word \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate a number of exemplary embodiments and are a part of the specification. Together with the following description, these drawings demonstrate and explain various principles of the instant disclosure.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
