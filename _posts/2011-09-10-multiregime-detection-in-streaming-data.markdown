---
title: Multi-regime detection in streaming data
abstract: Systems and methods for multi-regime detection in streaming data are disclosed. An example method includes generating vectors for each sample of the streaming data. The method also includes inducing mean independence of the vectors to find an embedded data trajectory. The method also includes comparing the embedded data trajectory with known data trajectories. The method also includes issuing an alert if the embedded data trajectory corresponds to a known data trajectory indicating an anomaly in the streaming data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08620987&OS=08620987&RS=08620987
owner: Hewlett-Packard Development Company, L.P.
number: 08620987
owner_city: Houston
owner_country: US
publication_date: 20110910
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["Sensors are commonly used to collect data in real-time. This data is also referred to as time series data, streaming data, and\/or data streams, and represents a substantially continuous flow of data. For example, modern industrial facilities often have multiple sensors to gather a wide variety of data types for monitoring the state or condition of various operations at the facility. The streaming data may be analyzed to detect \u201cevents\u201d and thus warn of impending failures.","By way of illustration, the oil and gas industry often equips oil and gas wells with thousands of sensors and gauges to measure flow rates, pressure, and temperature, among other parameters. Any variations in flow rate, pressure and\/or temperature may indicate an issue that needs to be addressed in order to avoid a partial or even complete shutdown of the oil well, which can lead to lost productivity and lower profit margins.","But data collected from these sensors can be \u201cnoisy,\u201d the data often does not have a constant amplitude, and the data can be plagued by shifts in the mean. These aspects of the data make it difficult to accurately model the data stream and extract relevant events. In addition, quickly detecting changes can be difficult in a real-time or \u201conline\u201d environment, due to the reliance on intensive mathematical analysis which can take significant time to compute. In addition, frequency domain approaches often use a window of data to estimate spectral features. But waiting to gather enough data to populate a window to analyze can result in delays detecting events. Other techniques extract time domain features from the time series and make decisions based on statistical models. But these models often have to be manually \u201chand-crafted\u201d based on the type of data stream, and thus can fail if the type of data stream changes.","Detecting different regimes in streaming data can be used to issue an alert in advance of an event so that corrective action can be taken before the event leads to a disruption. While analyzing the streaming data on the macro-level (e.g., flow rate), there are a number of underlying factors within a typical data stream which can be detected even earlier. For example, there are a number of underlying factors that can induce tremendous variability in the data stream and can be detected before producing varying flow regimes. These factors may include, but are not limited to, fluid composition, oil viscosity, compressibility, and specific gravity. Any change in these factors may produce a change in flow regime and thus may indicate a potential problem with the oil well. Of course, data streams are not limited to the oil and gas industry and the techniques described herein have application in a wide variety of fields.","The systems and methods described herein enable multi-regime detection in streaming data. In an example, the time series is represented in the phase space using a modified embedding technique, which is invariant to translation and scale. The embedding function is referred to herein as a \u201cmodified embedding\u201d because the representation is not an embedding in the strict mathematical sense. Incoming trajectory segments from the data stream are compared to an embedded training set in a modified embedding space. The comparison is made in the sense of a similarity measure that compares points in the trajectory at corresponding times. The comparison may use cross-correntropy, which can be thought of as a generalized correlation function. Cross-correntropy enables the time structure of trajectories which sit on a sphere in the modified embedding space to be fully exploited, resulting in shorter detector reaction times.","Accordingly, the systems and methods disclosed herein can be used in online, multi-regime, and\/or non-stationary environments for fast and early detection of changes in regime. The embedding function provides translation invariance and scale invariance. The techniques can also be applied to non-linear oscillations.","Before continuing, it is noted that as used herein, the terms \u201cincludes\u201d and \u201cincluding\u201d mean, but is not limited to, \u201cincludes\u201d or \u201cincluding\u201d and \u201cincludes at least\u201d or \u201cincluding at least.\u201d The term \u201cbased on\u201d means \u201cbased on\u201d and \u201cbased at least in part on.\u201d",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["100","100","110"]},"In an example, the computing device  may receive streaming data from one or more source , such as sensors -. For purposes of illustration, the sensors shown in  are used to gather flow rate data from oil well(s). However, it is noted that data streams are not limited to use in the oil and gas industry, and can include other sources. Other sources of streaming data may include weather data, vehicle traffic, network traffic for a data center, electricity for a smart grid, water measurements for a treatment facility, and even vitality data for a person or biological system, to name only a few examples of streaming data.","There is no limit to the type or amount of data that may be provided by a source. In addition, the content may include unprocessed or \u201craw\u201d data, or the content may undergo at least some level of processing. For example, data may be filtered prior to executing the operations described herein to reduce noise injected into the data stream which is not representative of actual data from the sensor(s).","The data stream may be accessed for online data processing by a computing device  configured as a server computer with computer-readable storage . Program code  executing on the computing device  may analyze the streaming data and issue alerts, e.g., indicative of a change in regime in the data stream. Program code  may also include interfaces to application programming interfaces (APIs) and related support infrastructure, including hosted monitoring services  which can be used to provide the alerts  to a facility operator or other customer based on the change in regime so that additional monitoring and\/or corrective action can be taken in a timely manner.","Although, it is noted that the operations described herein may be executed by program code  residing on a server device, other computing devices may also be implemented. Other computing devices may include, but are not limited to a personal computer, a tablet or other mobile device. In an example, mobile devices used on-site by an end-user  such as a facility operator may be implemented in conjunction with a \u201cback-end\u201d computer system having more processing capability, such as the server computer , or a plurality of server components in a data center or \u201ccloud computing\u201d environment.","The system  may also include a communication network , such as a local area network (LAN) and\/or wide area network (WAN). In one example, the network  includes the Internet or other mobile communications network (e.g., a 3G or 4G mobile device network). Network  may also provide greater accessibility for use in distributed environments, for example, where more than one source is providing the streaming data. The various sensor(s) and computing device(s) may be provided on the network  via a communication connection, such as via an Internet service provider (ISP). In this regard, access may be provided directly via the network , or via an agent, such as another network. Such an implementation may be particularly desirable where an operator is responsible for monitoring multiple, geographically distributed production sites, for example, in the oil and gas or other industries.","As mentioned above, the program code  may be executed by any suitable computing device to analyze data stream. In addition, the program code may analyze one or more than one data stream. The operations described herein are not limited to any specific implementation with any particular type of program code. In an example, the program code may be implemented in machine-readable instructions (such as but not limited to, software or firmware). The machine-readable instructions may be stored on a non-transient computer readable medium and are executable by one or more processor to perform the operations described herein. It is noted, however, that the components shown herein are provided only for purposes of illustration of an example operating environment, and are not intended to limit implementation to any particular system.","The program code executes the function of the architecture of machine readable instructions as self-contained modules. These modules can be integrated within a self-standing tool, or may be implemented as agents that run on top of an existing program code. Operations performed by executing the program code can be understood with reference to .",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2","b":["200","210","210"]},"For each data stream sample, a vector is created  with elements that are linear combinations of time delayed samples. The last vector element is subtracted  from the other vector elements to induce mean independence. The result is an embedded data trajectory (X) . The embedded data trajectory (X)  is compared with data trajectories representing various regimes of interest -, generated using a training set.","Each regime (i) has an associated embedded training set (Y), where CE is the sample cross-correntropy between arguments. The regime with the largest cross-correntropy between the streaming data trajectory (X) and the embedded regime training set (Y) is selected at . It can be seen by visual inspection that the example embedded data trajectory  shown in  is a closest fit with the known data trajectory ","Once the data trajectory is found, a decision is made  whether to issue an alert. For purposes of illustration, the data trajectory for Regime  may represent normal or expected flow regimes, and Regime  through Regime n indicate various types of potential problems that warrants further monitoring or closer inspection. In the example above, where the streaming data  was found to correspond to Regime , then no alert needs to be issued because Regime  is considered normal or expected flow regimes. But if analysis indicates that streaming data  has changed to one of the other Regimes -then an alert may be issued based on the particular regime.","Having generally described the operating environment and execution of example program code, attention is now drawn to  for a more detailed explanation of processing which may be implemented by the program code during execution of the modified embedding for multi-regime detection in non-stationary, streaming data.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 3","b":["300","310","320"],"br":{},"in-line-formulae":[{},{}],"i":["x","=[x",", x",", . . . , x"],"sup":"(n)","sub":["n","n\u2212\u03c4","n\u22122m\u03c4"]},"In the above equation, m is the embedding dimension and r is the time delay. The limit set of the trajectories (the attractor) is embedded in the manifold created by the xvalues.","The time delay may be determined by finding the first time lag that produces a local minima in a dependence measure between x and x, such as autocorrelation or mutual information. The selection of \u03c4 is flexible and chosen such that the components of xvalues are not correlated. After the time-delay, \u03c4 is fixed, and the embedding dimension m is estimated by algorithms such as GrassbergerProcaccia, which approximates the correlation dimension. Time delay embedding  () preserves dynamical invariants such as entropy, dimensional, and Lyapunov exponents, which are used to analyze the underlying physical system.","In the case of regime detection, the properties of the system are of less concern than changes in the reconstructed trajectories produced by noise, amplitude scaling, and shifting means in the input streaming data. The data can be normalized, but if the data is time varying, these normalizations are implemented online in the test set. Instead of these preprocessing approaches (that are normally ad-hoc), the systems and methods described include invariance to these aspects directly in the embedding framework, with the advantage of fast online operation and also of a sound mathematical foundation. The program code operates with a modified embedding space in which the points x and ax+b are indistinguishable, where a is a scaling factor, and b is the translation.","Symbolic dynamics are used to provide accurate representations of reconstructed attractors. In particular, encoding time delay embedding vectors  () into symbols based on order patterns provides translation invariance. In an m-dimensional space, each point maps to one of m! order patterns. In applications, information loss is substantial due to this encoding. For example, the Lorenz attractor which unfolds in 3-dimensions, has only 6-order patterns. A variant of the order patterns may be used instead, referred to herein as \u201cdifference patterns\u201d  (). A difference pattern, \u0394x(n), at time n, is given by:\n\n\u0394]\n","In the above equation, every component of x(n) is subtracted by the last component. The last component of \u0394x(n) is always zero, and so it can be removed. Therefore, the original (2m+1)-dimensional point in the reconstructed phase space is mapped to a 2m-dimensional space. This is analogous to establishing a quantitative order pattern with the x component as a zero reference point. The translation invariance in the space of order patterns can be found by letting y=x\u2212b, be a translated time series, as follows:",{"@attributes":{"id":"p-0036","num":"0035"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mi":"y","mrow":{"mo":["(",")"],"mi":"n"}}},{"mo":["[","]"],"mrow":{"mrow":[{"msub":[{"mi":["y","n"]},{"mi":"y","mrow":{"mi":"n","mo":"-","mrow":{"mn":"2","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mi":["m","\u03c4"]}}}],"mo":"-"},{"msub":[{"mi":"y","mrow":{"mi":"n","mo":"-","mrow":{"mrow":{"mo":["(",")"],"mrow":{"mrow":{"mn":"2","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"m"},"mo":"-","mn":"1"}},"mo":"\u2062","mi":"\u03c4"}}},{"mi":"y","mrow":{"mi":"n","mo":"-","mrow":{"mn":"2","mo":["\u2062","\u2062","\u2062"],"mi":["m","\u03c4"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}],"mo":"-"}],"mo":[",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mo":["[","\u2062","]"],"mrow":{"mrow":{"mrow":[{"mo":["(",")"],"mrow":{"msub":{"mi":["x","n"]},"mo":"-","mi":"b"}},{"mo":["(",")"],"mrow":{"msub":{"mi":"x","mrow":{"mi":"n","mo":"-","mrow":{"mn":"2","mo":["\u2062","\u2062","\u2062"],"mi":["m","\u03c4"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}},"mo":"-","mi":"b"}}],"mo":"-"},"mo":",","mi":"\u2026"},"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mo":["[","\u2062","]"],"mrow":{"mrow":{"msub":[{"mi":["x","n"]},{"mi":"x","mrow":{"mi":"n","mo":"-","mrow":{"mn":"2","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mi":["m","\u03c4"]}}}],"mo":"-"},"mo":",","mi":"\u2026"},"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mi":"x","mrow":{"mo":["(",")"],"mi":"n"}}}}}}]}}}},"Translating the time series does not alter the difference pattern, similarly to the differencing operation applied to non-stationary time series. However, this representation is no longer an embedding because it is not invertible.","To achieve scale invariance, the \u0394x(n) vectors are normalized  () by their Euclidean norms to yield:",{"@attributes":{"id":"p-0039","num":"0038"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mover":{"mi":"x","mo":"^"},"mrow":{"mo":["(",")"],"mi":"n"}}},"mo":"=","mfrac":{"mrow":[{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mi":"x","mrow":{"mo":["(",")"],"mi":"n"}}},{"mo":["\uf605","\uf606"],"mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mi":"x","mrow":{"mo":["(",")"],"mi":"n"}}}}]}}}}},"These new vectors are the projections of the \u0394x(n) onto the unit sphere in 2m-dimensional space. Consider a translated and scaled time series y=ax\u2212b. First, the difference pattern  is created as follows:",{"@attributes":{"id":"p-0041","num":"0040"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mi":"y","mrow":{"mo":["(",")"],"mi":"n"}}},{"mo":["[","]"],"mrow":{"mrow":{"msub":[{"mi":["ax","n"]},{"mi":"ax","mrow":{"mi":"n","mo":"-","mrow":{"mn":"2","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"mi":["m","\u03c4"]}}}],"mo":"-"},"mo":",","mi":"\u2026"}}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mi":["a","\u0394"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"msup":{"mi":"x","mrow":{"mo":["(",")"],"mi":"n"}}}}}}]}}}},"Translation invariance still holds, but the scaling factors out of the difference pattern and \u201cdisappears\u201d when normalized , as follows:",{"@attributes":{"id":"p-0043","num":"0042"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mover":{"mi":"y","mo":"^"},"mrow":{"mo":["(",")"],"mi":"n"}}},"mo":["=","\u2062"],"mi":{},"mfrac":{"mrow":[{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mi":"y","mrow":{"mo":["(",")"],"mi":"n"}}},{"mo":["\uf605","\uf606"],"mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mi":"y","mrow":{"mo":["(",")"],"mi":"n"}}}}]}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mfrac":{"mrow":[{"mi":["a","\u0394"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"msup":{"mi":"x","mrow":{"mo":["(",")"],"mi":"n"}}},{"mi":"a","mo":"\u2062","mrow":{"mo":["\uf605","\uf606"],"mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mi":"x","mrow":{"mo":["(",")"],"mi":"n"}}}}}]}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mover":{"mi":"x","mo":"^"},"mrow":{"mo":["(",")"],"mi":"n"}}}}}}]}}}},"The trajectories in the modified embedding space are on the surface of a sphere. The Eucidean distance can be replaced with the geodesic length on the sphere, to obtain a better depiction of the distance between points. All modified embedding space points are unit vectors, so the dot product between two points is the cosine of the angle between them. The geodesic length is therefore the arc cosine of the dot product.","Effectively, this operation projects the trajectories onto the unit sphere and loses some of the distance information that was present in the difference pattern attractor. In particular, all points on a line extending from the origin map to the same point on the sphere. The modified embedding is, however, a useful depiction of the time evolution of the system. The regime detection used here takes advantage of the time structure of the trajectories, rather than using static distance information.","Consider discrete random processes {X:n\u03b5 N} and {Y:n\u03b5 N}, where Nand Nare time index sets. Then the cross-correntropy function  () can be expressed as:\n\n()=()]\n","In the above equation, E is the expectation operator over the random processes, and k is a continuous positive definite kernel function. The correntropy function is a similarity measure between time series that induces the correntropy metric. Applying the Gaussian kernel, the cross-correntropy function takes the following form:\n\n()=(\u2225x\u2225)]\n","In the above equation, \u03c3 is the Gaussian bandwidth. Selection of the the kernel bandwidth may vary based on design considerations. In an example, the range 0.5<\u03c3<1.5 has been determined to worked well on a unit sphere with maximum geodesic distance of \u03c0.","For regime detection, trajectory segments of length N are considered, which are finite realizations of the random process. The expected value is replaced by the sample mean. The cross-correntropy between trajectory segments has the following range:\n\n0<()=(\u2225\u2225]\n","Consider the streaming time series at time n. In the modified embedding space, the trajectory segment formed from the previous N points is:\n\n\u0394]\n","Similarly, the length N trajectory segment ending at time n in the training set is given by:\n\n\u0394]\n","The sample correntropy between these two trajectories is represented as follows:",{"@attributes":{"id":"p-0053","num":"0052"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mover":{"mi":"v","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mi":"\u0394","mo":"\u2062","mover":{"mi":"x","mo":"^"}},{"mi":"\u0394","mo":"\u2062","mover":{"mi":"y","mo":"^"}}],"mo":","}}},{"mfrac":{"mn":"1","mi":"N"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":[{"mi":"i","mo":"=","mn":"0"},{"mi":"N","mo":"-","mn":"1"}]},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":{"mi":["G","\u03c3"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mo":["\uf605","\uf606"],"mrow":{"mrow":[{"mi":"\u0394","mo":"\u2062","msup":{"mover":{"mi":"x","mo":"^"},"mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":"n","mn":"1"},"mo":"-","mi":"i"}}}},{"mi":"\u0394","mo":"\u2062","msup":{"mover":{"mi":"y","mo":"^"},"mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":"n","mn":"2"},"mo":"-","mi":"i"}}}}],"mo":"-"}}}}}}],"mo":"="}}}},"In online streaming, the sample correntropy is determined for all length N trajectory segments in the training set  (). If a training segment \u0394y^ exists, such that v^(\u0394x^, \u0394y^) is about 1, then the current sample xis assigned to the desired regime  (). The processing can be repeated in real-time as streaming data arrives  ().","As noted above, the trajectories in the modified embedding space are on the surface of a sphere. Therefore, the Euclidian distance in the sample correntropy can be replaced with the geodesic length on the sphere to obtain a better depiction of the distance between points. All modified embedding space points are unit vectors, and thus the dot product between two points is the cosine of the angle therebetween. The geodesic length is therefore the arc cosine of the dot product, and can be represented as follows:",{"@attributes":{"id":"p-0056","num":"0055"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mover":{"mi":"v","mo":"^"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mi":"\u0394","mo":"\u2062","mover":{"mi":"x","mo":"^"}},{"mi":"\u0394","mo":"\u2062","mover":{"mi":"y","mo":"^"}}],"mo":","}}},{"mfrac":{"mn":"1","mi":"N"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":[{"mi":"i","mo":"=","mn":"0"},{"mi":"N","mo":"-","mn":"1"}]},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":{"mi":["G","\u03c3"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"acos","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mo":["\u2329","\u232a"],"mrow":{"mrow":[{"mi":"\u0394","mo":"\u2062","msup":{"mover":{"mi":"x","mo":"^"},"mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":"n","mn":"1"},"mo":"-","mi":"i"}}}},{"mi":"\u0394","mo":"\u2062","msup":{"mover":{"mi":"y","mo":"^"},"mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":"n","mn":"2"},"mo":"-","mi":"i"}}}}],"mo":","}}}}}}}}],"mo":"="}}}},"The method of regime detection discussed above and based on cross-correntropy in the scale and translation invariant modified embedding space can be described by Algorithm 1 as follows:",{"@attributes":{"id":"p-0058","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Algorithm 1 On-line regime detection in the modified embedding"},{"entry":"space with cross-correntropy"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003","I. Embed training set y"]},{"entry":[{},"Given a discrete time series {y : 1 \u2266 n\u2266 L}"]},{"entry":[{},"Select a time delay \u03c4, and embedding dimension m"]},{"entry":[{},"for i = (m \u2212 1 )\u03c4 + 1 to L do"]},{"entry":[{},"\u2003y= [y\u00b7 y \u00b7 . . . \u00b7 y]"]},{"entry":[{},"\u2003\u0394y= [y \u2212 y \u00b7 . . . \u00b7 y \u2212 y]"]},{"entry":[{},"\u2003\n\n"]},{"entry":[{},"end for"]},{"entry":[{},"II. Regime detection of streaming data x at time n"]},{"entry":[{},"Set desired trajectory length to N"]},{"entry":[{},"Set Gaussian kernel bandwidth \u03c3"]},{"entry":[{},"Set threshold \u03b5 on cross-correntropy"]},{"entry":[{},"x= [x \u00b7 x \u00b7 . . . \u00b7 x]"]},{"entry":[{},"\u0394x= [x \u2212 x \u00b7 . . . \u00b7 x \u2212 x]"]},{"entry":[{},{"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mi":"\u0394","mo":"\u2062","msup":{"mover":{"mi":"x","mo":"^"},"mrow":{"mo":["(",")"],"msub":{"mi":"n","mn":"1"}}}},"mo":"=","mfrac":{"mrow":[{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mi":"x","mrow":{"mo":["(",")"],"msub":{"mi":"n","mn":"1"}}}},{"mo":["\uf605","\uf606"],"mrow":{"mi":"\u0394","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mi":"x","mrow":{"mo":["(",")"],"msub":{"mi":"n","mn":"1"}}}}}]}}}}}]},{"entry":[{},"for j = (m \u2212 1)\u03c4 + N to L do"]},{"entry":[{},"\u2003\n\n"]},{"entry":[{},"end for"]},{"entry":[{},"if max p > \u03b5 then"]},{"entry":[{},"\u2003Sample x is in the desired regime"]},{"entry":[{},"end if"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"For simplicity, only single regime detection is shown. Further training sets can be added to the embedding space for detection in multiple regimes, and incoming trajectory segments are compared with the training sets of all regimes. The regime that produces the highest correntropy is selected as the best fit.","Algorithm 1, described above, was tested using a single regime of quasi-periodic oscillations produced from a chaotic regime, commonly observed in the gas and oil industry. Performance was compared with a standard time delay embedding technique. The embedding parameters and detection procedures remained the same in each case. The segment length was chosen as N=10, and the kernel bandwidth was set to \u03c3=0.9.","The Algorithm was implemented using an example training data set.  is a plot  showing the example training data set, using real data that has been mean-centered. The total training set length is 2500 samples. From the training set data, mutual information was used to select a time delay of 3 and applying the GrassbergerProcaccia technique revealed that the correlation dimension is 1.8. An embedding dimension of 4 successfully identified the attractor in this example. Results from a first test case are shown in ",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 5","FIG. 4"],"i":"a ","b":["500","510","500","510","502","512","503","513","501","511"]},"It is noted that the standard embedding technique (plot ) worked in this case because the training set () and the test data were similar in mean and scale. But when the test set was scaled, and sections of the test set were translated, as shown in , the standard embedding technique did not perform as well as the modified embedding technique implemented by Algorithm 1.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 5","i":["b ","a","b","c","d. "],"b":["520","530","520","530","522","523","532","531","531","531","531"]},"Accordingly, Algorithm 1 is able to detect changes in regime quickly, even before periodicity is otherwise evident. The reaction time can be characterized as the number of missed detections following the onset of a regime.  is a plot  showing detection (o) using Algorithm  following onset of an oscillation regime. It can be seen that detection occurs in this example after just four data points (x) in the oscillation. The techniques described above and implemented in an example by Algorithm 1 can also be used to detect oscillations by identifying a strong spectral component at the fundamental frequency.","It is also noted that in an online setting, at least one period of the oscillations must elapse to have meaning in the frequency domain, which is too much delay in some applications. But using the techniques described herein, the segment length (N) provides the user with control over the reaction time. The reaction time is determined from the transition to the second oscillatory regime. The tradeoff between reaction time and error rate can be seen in Table 1.",{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Length N","Reaction Time","Error Rate"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["2","5","3.7%"]},{"entry":["4","8","2.5%"]},{"entry":["6","17","2.1%"]},{"entry":["8","17","1.7%"]},{"entry":["10","21","1.9%"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"It can be seen in Table 1, that for the N values tested, all reaction times were less than the average oscillation period of about 30 samples.","Before continuing, it should be noted that the examples described above are provided for purposes of illustration, and are not intended to be limiting. Other devices and\/or device configurations may be utilized to carry out the operations described herein.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 7","b":"700"},"Operation  includes generating vectors for each sample of the streaming data. Operation  includes inducing mean independence of the vectors to find an embedded data trajectory. Operation  includes comparing the embedded data trajectory with known data trajectories. Operation  includes issuing an alert if the embedded data trajectory corresponds to a known data trajectory indicating an anomaly in the streaming data.","In an example, the known data trajectories represent different regimes of interest. Each regime may have an associated embedded training set. The known data trajectories may be generated using training data.","In another example, comparing the embedded data trajectory with known data trajectories is by evaluating cross-correntropy between arguments. The regime with the largest cross-correntropy between the embedded data trajectory and the known data trajectories may be selected as the best fit.","The operations shown and described herein are provided to illustrate example implementations. It is noted that the operations are not limited to the ordering shown. Still other operations may also be implemented.","Further operations may include creating the embedded data trajectory with elements that are linear combinations of time delayed samples, and subtracting a last vector element from other vector elements to induce mean independence of the vectors.","Still further operations may include determining embedding parameters, converting time delay embedding into difference patterns, and normalizing the difference patterns.","The operations may be implemented at least in part using an end-user interface (e.g., web-based interface). In an example, the end-user is able to make predetermined selections, and the operations described above are implemented on a back-end device to present results to a user. The user can then make further selections. It is also noted that various of the operations described herein may be automated or partially automated.","It is noted that the examples shown and described are provided for purposes of illustration and are not intended to be limiting. Still other examples are also contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5","i":"a "},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5","i":"b "},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
