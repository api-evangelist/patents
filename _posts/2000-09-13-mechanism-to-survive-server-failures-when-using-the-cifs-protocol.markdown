---
title: Mechanism to survive server failures when using the CIFS protocol
abstract: The invention provides a method and system for re-establishing sessions between a server and its clients following a failure of the server, planned reboot of the server, or takeover by another server. At critical points within a server/client session, state is saved so as to be reliable and consistent. Upon reboot of the system, state is restored using that which was saved; returning the server to its pre-crash state and preserving sessions that were in progress prior to the reboot. Additionally, state saved by a first sever prior to failure or elective shutdown can be transferred to a second server in a takeover configuration also preserving sessions in progress.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07296073&OS=07296073&RS=07296073
owner: Network Appliance, Inc.
number: 07296073
owner_city: Sunnyvale
owner_country: US
publication_date: 20000913
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT","GENERALITY OF THE INVENTION","ALTERNATE EMBODIMENTS"],"p":["1. Field of the Invention","This invention relates to transparent recovery of server failures and elective reboots while maintaining consistent data using the CIFS Filesystem protocol.","2. Related Art","The Common Internet File system (CIFS) protocol is defined by Microsoft. It enables collaboration on the internet by defining a remote file access protocol that allows applications to share data on local disks and network file servers. CIFS incorporates the same high-performance, multi-user read and write operations, locking, and file-sharing semantics that are the backbone of today's sophisticated enterprise computer networks. With CIFS, users with different platforms and computers can share files without having to install new software.","CIFS generally runs over TCP\/IP, and uses the SMB (Server Message Block) protocol found in Microsoft Windows\u00ae for file and printer access; therefore, CIFS will allow all PC applications, not just Web browsers, to open and share files across the Internet.","With CIFS, both the client and the server maintain state about filenames, file contents, directories, and various other aspects of the files and directories; thus CIFS is a \u201cstateful\u201d protocol. File content is cached via a cooperative process between client and server code, and this is where problems can occur. The state survives only as long as the session between the server and the client survives, and this session survives only as long as the underlying network connection (generally TCP\/IP) survives.","When a server that is currently supporting one or more sessions fails or has to be purposefully rebooted, all sessions being supported are lost. CIFS has no protocol for re-establishment of a session after such a fatal error, or for synchronization of the client\/server state to the pre-crash state. CIFS does support fault tolerance in the face of network and server failures where some CIFS clients can restore connections and reopen files that were open prior to interruption, however, any data that was currently being edited that had not been saved is lost. As a result, a server failure is regarded as a catastrophic event in the CIFS world.","Accordingly, it would be advantageous to provide a technique that addresses reestablishing server client sessions that were utilizing CIFS after a server failure or elective reboot so that operation resumes where it ended prior to server unavailability.","The invention includes a method and system for re-establishing sessions between a server and clients that were using the CIFS protocol. Two types of situations may occur. The first type occurs when a system administrator purposefully reboots the server or a purposeful takeover occurs in a clustered configuration. For these elective reboots of a server a series of tasks are performed; (1) the server stops accepting incoming CIFS requests, (2) the server completes processing of active CIFS requests, (3) all active CIFS state and networking state is captured in non-volatile storage (CIFS data structures are static at this point), (4) the server is rebooted, (5) state is rebuilt for the rebooted machine from that which was saved in non-volatile storage; in a takeover configuration state is made available through transmission or some form of non-uniform memory access, and (6) incoming CIFS requests are once again accepted and operation resumes.","The second type occurs when the server reboots without warning or there is an unplanned takeover due to server failure. These unplanned occurrences require the following tasks be performed; (1) state is saved persistently at predetermined intervals to non-volatile storage, (2) when the system crashes and reboots or is taken over, state is restored from the non-volatile storage, or in a takeover configuration, state is made available through transmission to a subsequent machine or through some form of non-uniform memory access, (3) operations that were in progress resume at the steps they were at prior to the crash, (4) new CIFS requests are now accepted. All of the preceding is transparent to the clients and no data are lost.","In the following description, a preferred embodiment of the invention is described with regard to preferred process steps and data structures. Embodiment of the invention can be implemented using general purpose processors or special purpose processors operating under program control, or other circuits, adapted to particular process steps and data structures described herein. Implementation of the process steps and data structures described herein would not require undue experimentation or further investigation.","Lexicography","The following terms refer to or relate to aspects of the invention as described below. The descriptions of general meanings of these terms are not intended to be limiting, only illustrative.\n\n","As noted above, these descriptions of general meanings of these terms are not intended to be limiting, only illustrative. Other and further applications of the invention, including extensions of these terms and concepts, would be clear to those of ordinary skill in the art after perusing this application. These other and further applications are part of the scope and spirit of the invention, and would be clear to those of ordinary skill in the art, without further invention or undue experimentation.","System Elements",{"@attributes":{"id":"p-0020","num":"0026"},"figref":"FIG. 1"},"A preferred embodiment of the system  can include a client device , a client communication link , a communications network , a first server , a second server , a server communications link , an interconnect , and a mass storage .","The client device  includes a processor, memory, mass storage (not shown but understood by one skilled in the art). Typically, the client device  is associated with a user.","The client communication link  couples the client device  to the communications network . In a preferred embodiment, the communications network  includes an Internet, intranet, extranet, virtual private network, enterprise network, or another form of communication network.","The first server  includes a processor, a main memory (not shown but understood by one skilled in the art), and a first non-volatile storage . In a preferred embodiment the first server  and the client device  are separate devices, however, there is no requirement in any embodiment that they be separate devices. In a preferred embodiment, the first non-volatile storage  includes any electronic storage medium capable of retaining state without power or by some auxiliary power source (such as; non-volatile random access memory, magnetic and optical drives).","The second server  includes a processor, a main memory (not shown but understood by one skilled in the art), and a second non-volatile storage . In a preferred embodiment the second server  and the client device  are separate devices, however, there is no requirement in any embodiment that they be separate devices. In a preferred embodiment, the first non-volatile storage  includes any electronic storage medium capable of retaining state without power or by some auxiliary power source (such as; non-volatile random access memory, magnetic and optical drives).","Additionally, the invention is applicable to both a standalone server and a server cluster; however, the second server  is used only in applications of the invention where the functions of the first server  are to be taken over by the second server . There is no requirement in any embodiment that the second server  be present in non-takeover applications of the invention.","A server communications link  couples the first server  and the second server  to the communication network .","An interconnect  couples the first server  to the second server  providing bi-directional communication between the two servers.","The mass storage  is coupled to both the first server  and the second server . In a preferred embodiment the mass storage  includes magnetic and optical disk arrays, and other devices capable of storing relatively large amounts of data.","Method of Operation\u2014Elective Takeover and Elective Reboot",{"@attributes":{"id":"p-0030","num":"0036"},"figref":"FIG. 2","b":["200","200","201","200","203","140"]},"A \u201cflag active\u2019 decision procedure  determines whether the first server  is rebooting following an elective reboot. If the \u2018flag active\u2019 decision procedure  determines that the first server  has been subjected to a reboot, the file server elective reboot\/takeover process  continues to a \u2018restore state\u2019 procedure .","A \u2018receive CIFS requests\u2019 procedure  allows user requests to be received by the first server .","A \u2018process CIFS requests\u2019 procedure  allows the first server  to respond to requests from the client device  by providing access to data contained in the mass storage .","An \u2018initiate elective process?\u2019 procedure  determines whether the system is to be purposely taken offline (e.g. by the systems operator for maintenance purposes). If the \u2018initiate elective process?\u2019 procedure  determines that an elective shutdown has not been initiated, the file server elective reboot\/takeover process  continues to the \u2018receive CIFS requests\u2019 procedure .","An \u2018ignore CIFS requests\u2019 procedure  causes the server device  to ignore all incoming CIFS requests from the client device . This is perceived by the client device  as a network delay and will not by itself terminate the session. The client device  will resubmit CIFS requests until accepted or until the session is timed out (approximately 45\u201360 seconds from receipt of the first rejection by the client device ) which ever comes first. The invention enables acceptance of CIFS requests prior to a session timing out.","A \u2018drain CIFS requests\u2019 procedure  ensures that all currently active CIFS requests are processed to completion.","An \u2018elective takeover?\u2019 decision procedure  determines whether an elective takeover has been selected by the systems operator. If the \u2018elective takeover\u2019 decision procedure  determines that an elective take over has been selected by the systems operator the file server elective reboot\/takeover process  continues to an \u2018elective takeover Save State\u2019 procedure\u2019 .","An \u2018elective reboot save state\u2019 procedure  causes the current state of the first server  to be stored in the first non-volatile storage . This includes the setting of the flag value to indicate a planned reboot of the first server .","A \u2018shut down system\u2019 procedure  causes the first server  to be shut down. The file server elective reboot\/takeover process  terminates through an \u201cend\u201d terminal .","An \u2018elective takeover save state\u2019 procedure  causes the current state of the first server  to be stored in the first non-volatile storage  and the second non-volatile storage .","A \u2018takeover server restore state\u2019 procedure  allows the state of the first server  stored in the first non-volatile storage  to be transferred via the interconnect  and reconstituted on the second server device  or procured from the second non-volatile storage . At this point the second server  is supporting the sessions that were active on the first server  prior to elective takeover and CIFS processing within these sessions continues. The file server elective reboot\/takeover process  terminates through an \u201cend\u201d terminal .","A \u2018restore state\u2019 procedure  allows the state of the first server  to be reconstituted to the state it was in prior to an elective reboot or non-elective reboot from the state stored in the first non-volatile storage . This can include re-establishing the CIFS session that was in progress just prior to the reboot, which can include processing the uncompleted portion of an uncompleted CIFC request. The file server elective reboot\/takeover process  continues to a \u2018receive CIFS requests\u2019 procedure .","Method of Operation\u2014Non-Elective Reboot.",{"@attributes":{"id":"p-0043","num":"0049"},"figref":"FIG. 3","b":["300","300","301","300","303","140"]},"A \u201cflag active\u2019 decision procedure  determines whether an non-elective reboot has occurred. If the \u2018flag active\u2019 decision procedure  determines that the a non-elective reboot has occurred, the file server non-elective reboot process  continues to the \u2018resume normal operation\u2019 procedure .","A \u2018restore state\u2019 procedure  allows the first server  to reconstitute the state it was in prior to the non-elective reboot by copying state from that stored in the first non-volatile storage  or second non-volatile storage .","A \u2018resume normal operation\u2019 procedure  allows the first server  to once again accept and process CIFS requests and perform all functions it was executing prior to the non-elective reboot. This can include re-establishing the CIFS session that was in progress just prior to the reboot, which can include processing the uncompleted portion of an uncompleted CIFC request.","The file server non-elective reboot process  terminates through an \u201cend\u201d terminal .","Method of Operation\u2014Non-Elective Takeover.",{"@attributes":{"id":"p-0048","num":"0054"},"figref":"FIG. 4","b":["4","400","401","400","403","140"]},"A \u2018receive CIFS requests\u2019 procedure  allows user requests to be received by the first server .","A \u2018process CIFS requests\u2019 procedure  allows the first server  to respond to requests from the client device  by providing access to data contained in the mass storage .","A \u2018save state\u2019 procedure  allows the state of the first server  to be saved to the first non-volatile storage  and the second non-volatile storage . In a preferred embodiment, reliably state saving in anticipation of a system failure may be performed at any one of a plurality of specific points within the processing of CIFS requests. For clarity in the description of this method of operation, \u2018save state\u2019 procedure  is indicated only once. The specific points for saving state are further discussed within this application.","A \u2018filer1 failure\u2019 decision procedure  determines whether the first server  has failed in some way. In a preferred embodiment, failure of the first server  would be detected by the second server . If the \u2018filer1 failure\u2019 decision procedure  determines that the first server  has not failed, the file server non-elective takeover process  continues to the \u2018receive CIFS requests\u2019 procedure .","A \u2018restore state\u2019 procedure  allows the state of the First server  prior to failure to be reconstitute on the second server  by copying state from that stored in the first non-volatile storage  or second non-volatile storage .","A \u2018filer2 takeover\u2019 procedure  completes the process by allowing the second filer  to resume processing of CIFS request where the first server  stopped. This includes re-establishing the CIFS session that was in progress when the first server  failed, which can include processing the uncompleted portion of an uncompleted CIFC request.","The file server non-elective takeover process  terminates through an \u201cend\u201d terminal .","Method of Operation\u2014Automatic State Saving",{"@attributes":{"id":"p-0056","num":"0062"},"figref":"FIG. 5"},"The saved state must always be in a consistent state. Automatic state saving must occur at specified points within a session of communication between the first server  and the client device  to ensure that the saved state is consistent.","POINT 1: State is saved prior to TCP acknowledging an incoming CIFS request. If the system fails prior to this, then the effect is as if the packet was never received, and retransmission by the client device  occurs. If the system fails after the acknowledgment is sent, then the system has a record that the request came in and it will be processed when state is restored.","POINT 2: State is saved prior to CIFS starting a SMB command. If the system fails prior to this, TCP will redeliver the TCP message to CIFS. If the system fails after this, the saved state indicates that the first server  started work on a CIFS operation. (Some single CIFS commands are composite operations: e.g. open, read, and close. In such cases, saving state is required before each component operation).","POINT 3: State is saved when a CIFS operation completes. If the system fails prior to this, the same CIFS operation is repeated creating the same result. If the system fails after this, the reply is sent again and TCP treats it as a duplicate.","POINT 4: State is saved after TCP acknowledges the reply. If the system fails prior to this, then the reply never happened and will be sent again. If the system fails after the acknowledgment but before the acknowledgment is saved, then we will duplicate the acknowledgment and normal TCP handling will process that without any problems. If the system fails after the save has occurred the acknowledgment will not be repeated.","These four points illustrate where state may be saved in a consistent manner, however, there are other points where state may be reliably saved and these points would be obvious to one skilled in the art.","The invention has general applicability to various fields of use, not necessarily related to the services described above. For example, these fields of use can include one or more of, or some combination of, the following:\n\n","Other and further applications of the invention, in its most general form, will be clear to those skilled in the art after perusal of this application, and are within the scope and spirit of the invention.","Although preferred embodiments are disclosed herein, many variations are possible which remain within the concept, scope, and spirit of the invention, and these variations would become clear to those skilled in the art after perusal of this application."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
