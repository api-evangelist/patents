---
title: Information processing apparatus and session management method
abstract: An information processing apparatus is provided, in which information processing apparatus communicates with a terminal connected to a network by using an HTTP protocol and performs processes requested by the terminal, and the information processing apparatus includes: a cookie information setting part for setting a predetermined string, as cookie information, in an HTTP response corresponding to a first HTTP request sent from the terminal; and a cookie information determining part for determining whether a second HTTP request includes the predetermined string as cookie information, wherein the second HTTP request is sent from the terminal after the first HTTP request is sent and indicates a start of a session between the terminal and the information processing apparatus.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07395338&OS=07395338&RS=07395338
owner: Ricoh Company, Ltd.
number: 07395338
owner_city: Tokyo
owner_country: JP
publication_date: 20040414
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Field of the Invention","The present invention relates to an information processing apparatus and a session management method. More particularly, the present invention relates to an information processing apparatus for communicating with a terminal connected via a network by using an HTTP protocol, and a session management method used in the information processing apparatus.","2. Description of the Related Art","As Web technology became more advanced recently, users can use various services via a Web page displayed on a Web browser. Communications between a Web server that provides the Web page and a client including the Web browser are generally performed by an HTTP (Hypertext Transfer Protocol)","The HTTP protocol is a session-less protocol in which communications between the Web server and the client end after an HTTP response is transmitted in response to an HTTP request. Therefore, a mechanism for keeping continuity of the session is necessary in a Web application that provides the Web page. There are several methods for keeping the continuity of the session: a method for using \u201ccookie\u201d function, a method for including an ID in a URL for managing the session uniquely, and a method for embedding an ID for managing the session in HTML data (Web page) and the like.","In these methods, the method for using the cookie function is realized by processes shown in , for example.  is a sequence chart for explaining the method for performing session management by using the cookie function.","The client  sends, to a Web server , an HTTP request (to be referred to as \u201crequest\u201d hereinafter) for requesting use of a predetermined service in step S. Then, the Web server  sends, to the client , a Web page (to be referred to as \u201clogin page\u201d hereinafter) for the user to input a user ID and a password in step S.","After the user name and the password are input on the login page, the client  sends a request to the Web server  to log in to the Web server  in step S. Then, the Web server  performs user authentication and the like, and generates a session object for managing information on the session for the client  in step S (start of session), and starts processes using the session object in step S. The Web server  sends an HTTP response to the client  in which the HTTP response includes cookie information including the session ID and the Web page for providing the predetermined service. Then, the client  stores the session ID included in the cookie information in step S.","After that, since any request sent from the client includes the session ID in the cookie information (step S), the Web server  can continue the session between the client and the Web server  by using the session object already generated (steps S-S).","However, the above-mentioned method using the cookie function can be used only when the cookie function is enabled in the Web browser used in the client . Recently, many users set the cookie function disabled from the point of view of security.","When the cookie function is set to be disabled in the Web browser, the session ID sent from the Web server as cookie information is not stored in the client . Therefore, any request sent from the client after that does not include any session ID. Therefore, the Web server determines that any session is not started yet for the client so that the Web server performs initial processes to start a session.","The above-mentioned case is described with reference to figures.  is a sequence chart for explaining a case where the cookie function is set disabled in the client.","In , the processes from the step S to step S are the same as those of steps S-S of . That is, a session for the client  starts in step S, and a response in which a session ID is included in cookie information is sent to the client  from the Web server .","However, in , since the cookie function is disabled in the client , the session ID is not stored in the client .","Therefore, any request sent from the client  to the Web server  hereinafter does not include any session ID (step S). As a result, although the Web server  generates a session object for the client  in step S, the Web server  generates a session object again in step S. For generating a session object, it is necessary to keep a certain amount of memory area. Therefore, there is a possibility in that the Web server  uses up all memory areas if the Web server  continues to generate the session object repeatedly for the same client, so that the system down may occur.","An object of the present invention is to provide an information processing apparatus that can determine whether the cookie function is enabled or not in the client when starting a session for a client.","The above-mentioned object is achieved by an information processing apparatus that communicates with a terminal connected to a network by using an HTTP protocol and performs processes requested by the terminal, the information processing apparatus including; a cookie information setting part for setting a predetermined string, as cookie information, in an HTTP response corresponding to a first HTTP request sent from the terminal; and a cookie information determining part for determining whether a second HTTP request includes the predetermined string as cookie information, wherein the second HTTP request is sent from the terminal after the first HTTP request is sent and indicates a start of a session between the terminal and the information processing apparatus.","According to the information processing apparatus, the information processing apparatus sends the predetermined string to the terminal as cookie information in response to the first HTTP request that is sent before the second HTTP request that indicates a start of a session. Thus, when the information processing apparatus receives the second HTTP request, that is, when a session is started, the information processing apparatus determines whether the predetermine string is included in the second HTTP request, so that the information processing apparatus can determine whether a cookie function is enabled or not in the terminal.","In the following, embodiments of the present invention are described with reference to figures. In the embodiments, an image forming apparatus is described as an example of an information processing apparatus.  is a block diagram of an image processing system according to an embodiment of the present invention. The image processing system  of  includes an image forming apparatus , a terminal , a terminal , and a terminal (the terminals are collectively called \u201cterminal \u201d hereinafter) that are connected to a network  such as an intranet or the Internet and the like.","The image forming apparatus  prints document data and sends a facsimile, for example, in response to a request from the terminal . In addition, the image forming apparatus  has a function of a Web server, so that when the image forming apparatus  receives a request for sending various information on the image forming apparatus  from the terminal , the image forming apparatus  returns a Web page for displaying requested information to the terminal .",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 4","FIG. 4"],"b":["10","203","204","202","201","106","107","108","109","200","101","102","103","104"]},"The engine control board  controls each function of the image forming apparatus  such as the plotter engine  and the scanner engine  and the like. In addition, the engine control board  provides the functions of the engine control board  to the OS  and the like via the engine I\/F (interface).","The OS  is an operating system such as the UNIX, and executes various application software, in parallel as processes, such as the copy application  and the fax application  and the like.","Each of the system management service , the network service , the memory management service , the operation panel management service  and the engine control service  provides its functions to upper applications such as the copy application  and the like via APIs (Application Programming Interfaces). That is, the system management service  provides functions for system management. The network service  provides functions for network communications. The memory management service  provides functions for memory management. The operation panel management service  provides functions on the operation panel of the image forming apparatus . The engine management service  provides functions for controlling the plotter engine  and the scanner engine  via the engine control board .","The copy application  is an application for copy, and the fax application  is an application for facsimile. The printer application  is an application for printing including page description language (PDL), PCL and post script (PS). The information providing application  performs processes for generating a Web page for displaying information requested from the terminal .","In , the information providing application  and the network service  realize functions of the Web server in the image forming apparatus .  shows an example of a functional configuration example of the image forming apparatus  for operating the image forming apparatus as a Web server. That is,  shows a detailed configuration realized by the network service  and the information providing application  in .","As shown in , the function of the Web server in the image forming apparatus  includes a httpd , Web applications , and (collectively called \u201cWeb applications \u201d), a session management library  and a session management table .","The httpd  is a daemon program for controlling communications between the terminal  and the image forming apparatus  by using an HTTP protocol. The Web applications  are modules for performing processes corresponding to an HTTP request sent from the terminal , and includes a plurality of Web applications such as the Web applications , and according to each function. The session management library  is a function group for performing processes for keeping continuity of a session (a series of sequences between the terminal  and the image forming apparatus ). The session management table  is a table for managing information on the session.","The terminal  includes a Web browser  for requesting the image forming apparatus  to send a Web page, and displaying the Web page sent from the image forming apparatus  according to the request.","Next, the session management library  is described.  shows a functional configuration example of the session management library . As shown in , the session management library  includes a cookie status check function , a session object obtaining function , a Web application data setting function , and a session object discard function  and the like.","The cookie status check function  determines whether the cookie function is enabled or disabled in the terminal  on the basis of an HTTP request from the terminal . The session object obtaining function  generates or obtains a session object. The Web application data setting function  is a function for setting data designated by an argument into the session object. The session object discard function  is a function for discarding of the session object, that is, for clearing memory area.","In the following, a process procedure in the image forming apparatus  for managing a session between the image forming apparatus  and the terminal  is described. The image forming apparatus  of this embodiment performs session management by using the cookie function.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 7"},"In step S, the Web browser  of the terminal  sends an HTTP request (to be referred to as simply \u201crequest\u201d) for requesting the image forming apparatus  to provide a predetermined service. Then, the httpd  receives the request, and a Web application corresponding to the request is called in step S.","In step S, the Web application generates an HTTP response (to be referred to as simply \u201cresponse\u201d hereinafter) including a Web page (to be referred to as \u201clogin page\u201d hereinafter) for inputting a user ID and a password. At this time, the Web application sets a predetermined string (to be refereed to as \u201ccookie status check information\u201d hereinafter) into a header called \u201cSet-Cookie:\u201d in the response. The cookie status check information is not limited to a particular string. For example, the cookie status check information may be a string \u201cCookieOnOffFlag\u201d. In addition, the Web application outputs the generated response to the httpd  in steps S.","In step S, the httpd  sends, to the terminal , the response including the login page and the cookie status check information. Then, the Web browser  stores the cookie status check information in a predetermined file, and displays a login page.","When the user inputs a user ID and a password on the login page, the Web browser  sends a request to the image forming apparatus  to perform login in step S. Since the cookie function is enabled in the terminal , the Web browser  sets the cookie status check information stored in the header \u201cCookie:\u201d in the request in step S.","In step S, the httpd  that receives the request calls the Web application corresponding to the request. For checking whether the cookie function is enabled or not in the terminal , the Web application calls the cookie status check function  in the session management library  by specifying information in the request from the terminal  as an argument in step S. The cookie status check function  determines whether the cookie function is enabled by checking whether the request includes the cookie status check information in step S. Then, the cookie status check function sends the check result to the Web application in step S.","Then, when the cookie status check information is included in the request, the cookie status check function  determines that the cookie function is enabled in the terminal . When the cookie status check information is not included in the request, the cookie status check function  determines that the cookie function is disabled in the terminal .","That is, when the cookie function is enabled in the terminal , there is a high probability that the terminal  sends back the cookie status check information. When the cookie function is disabled in the terminal , there is a low probability that the terminal  sends back the cookie status check information.","In step S, the Web application checks that the cookie function is enabled in the terminal , so that the Web application requests the session object obtaining function  in the session management library  to generate a session object. The session object obtaining function  generates the session object (that is, a session is started), and registers a record corresponding to the generated session object in the session management table (that is, keeps a memory area for storing information on the session) in step S. Further, the session object obtaining function  outputs the generated session object to the Web application in step S.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 8","FIG. 8"],"b":["14","20","14"]},"In step S, the Web application  performs processes requested by the terminal . At this time, the Web application  obtains information from the session object and sets information to the session object as necessary by using the Web application setting function  and the like.","In step S, in the same way as the step S, the Web application  generates a response including a Web page, and sets cookie status check information and the session ID into the response as cookie information, and outputs the response to the httpd  in step S.","In step S, the httpd  sends a response to the terminal . Then, the Web browser  of the terminal  stores the cookie status check information and the session ID, and displays the Web page included in the response.","Further, when data is input on the displayed Web page, the Web browser  of the terminal  sends a request to the image forming apparatus  in step S, in which the request includes the cookie status check information and the session ID stored in step S.","In step S, the httpd  calls a Web application corresponding to the request. Then, in step S, the Web application calls the cookie status check function  in the session management library  in the same way as step S so as to check whether the cookie function is enabled or not in the source of the request (terminal ) (steps S, S).","In step S, when it is checked that the cookie function is enabled in the terminal, the Web application requests the session object obtaining function  to obtain a session object corresponding to the session ID included in the request. The session object obtaining function  does not generate a new session object this time, but outputs the session object already generated in step S to the Web application (steps S, S).","In step S, the Web application performs processes corresponding to the request. Further, the Web application generates a response including the cookie status check information and a Web page as the process result in step S, and outputs the generated response to the httpd  in step S.","In step S, the httpd  sends the response to the terminal . Then, the Web browser  of the terminal  stores the cookie status check information and displays the Web page included in the response.","After that, although not shown in figures, each time when a request is sent from the terminal , processes described in steps S-S are repeated. That is, the cookie status check information and the session ID are exchanged between the terminal  and the image forming apparatus , so that continuity of a session between the image forming apparatus  and the terminal is kept.","Next, a case where the cookie function is disabled in the terminal  is described.  is a sequence chart for explaining session management in the Web server when the cookie function is disabled in the terminal according to the first embodiment.","The processes of steps S-S are the same as those of steps S-S in . That is, the image forming apparatus  sends a response including the cookie status check information and the login page to the terminal . However, in , since the cookie function is disabled in the terminal , the cookie status check information included in the response is not stored in the terminal  as a cookie.","Therefore, in step S corresponding to step S in , the request sent by the Web browser  to the image forming apparatus  does not include the cookie status check information. In step S, when the httpd  that receives the request calls the Web application , the Web application checks whether the cookie function is enabled in the terminal  by using the cookie status check function  in the session management library  in the same way as steps S-S (steps S-S).","In step S, after the Web application checks that the cookie function is disabled in the terminal , the Web application generates a Web page (referred to as \u201ccookie use request page\u201d) for requesting the terminal  to enable a cookie function to the httpd  in step S.","In step S, when the httpd  sends the cookie use request page to the terminal , the Web browser  displays the cookie use request page.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 10","FIG. 10"],"b":["211","20","10","211"]},"As mentioned above, according to the image forming apparatus  of the first embodiment, the image forming apparatus  sends an HTTP response including the cookie status check information in response to an HTTP request from the terminal  before a session is started (before a session object is generated). Thus, the image forming apparatus  can determine whether the cookie function in the terminal  is enabled or not by checking whether an HTTP request sent from the terminal  for starting a session includes the cookie status check information.","Therefore, when the cookie function is disabled in the terminal , the image forming apparatus  does not generate unnecessary session objects so that memory consumption in the image forming apparatus  can be decreased.","Next, a second embodiment of the present invention is described. In the second embodiment, instead of the Web application, the httpd  sets the cookie status check information into a response. Also in the second embodiment, two cases where the cookie function is disabled and enabled in the terminal  are described.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 11","FIG. 11","FIG. 7"]},"In , each Web application sets the cookie status check information into the header in the response (steps S, S, S). On the other hand, in the case shown in , the httpd  performs the processes corresponding to the steps S, S and S (steps S, S, and S). However, from the view point of the terminal , there is no difference between the methods of  and . Therefore, the request for starting a session from the terminal  includes the cookie status check information in the same way as the first embodiment. In addition, in the same way as the first embodiment, the image forming apparatus  can keep continuity of a session between the image forming apparatus  and the terminal .","Next, a case where the cookie function is disabled in the terminal  is described.  is a sequence chart for explaining a procedure of session management in the Web server according to the second embodiment in the case where the cookie function is disabled in the terminal. The procedure in  is almost the same as that shown in . Thus, only different points are described.","The different points between  and  are the same as the different points between  and . That is, in , each Web application sets the cookie status check information into the header in the response (steps S and S). On the other hand, in the case shown in , the httpd  performs the processes corresponding to the steps S and S (steps S and S).","However, from the view point of the terminal , there is no difference between the methods of  and . Therefore, in the same way as the first embodiment, the image forming apparatus  can determine that the cookie function is disabled in the terminal  by checking that the cookie status check information is not included in a request from the terminal  for starting a session. Thus, the image forming apparatus  can send a cookie use request page  to the terminal .","As mentioned above, according to the image forming apparatus  of the second embodiment, since the httpd  sets the cookie status check information into the response from each Web application , it is unnecessary to provide the cookie status check information setting function in each Web application . Therefore, a work load for a developer who develops a new Web application  can be decreased.","Alternatively, each Web application  may include a common function for outputting an HTTP response to the httpd , in which the common function performs the setting process of the cookie status check information. As a result, effects same as the second embodiment can be obtained.","In addition, although the image forming apparatus  is described as an example of the information processing apparatus, by implementing functions of the present invention in a general computer, same effects can be obtained by the computer.","As mentioned above, according to the image forming apparatus , the image forming apparatus  can determine whether the cookie function is enabled or not in the terminal at the time when a session between the terminal and the image forming apparatus is started.","The present invention is not limited to the specifically disclosed embodiments, and variations and modifications may be made without departing from the scope of the present invention.","The present application contains subject matter related to Japanese patent application No.2003-110540, filed in the JPO on Apr. 15, 2003, the entire contents of which being incorporated herein by reference."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Other objects, features and advantages of the present invention will become more apparent from the following detailed description when read in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
