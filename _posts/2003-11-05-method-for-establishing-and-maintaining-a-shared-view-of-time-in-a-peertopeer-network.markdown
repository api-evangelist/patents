---
title: Method for establishing and maintaining a shared view of time in a peer-to-peer network
abstract: A shared concept of time, called “graph time,” is agreed upon by all nodes within a graph. Each node maintains its own local delta representative of a difference in the node's system clock and graph time. Upon connecting to a neighbor node in a graph, a node is sent graph time as perceived by the neighbor node. In accordance with an embodiment, the node assumes that the lag time in receiving the graph time from the neighbor node is one-half of the lag time between the request for the connection and the receipt of the graph time. Graph time as sent by the neighbor node is added to one-half of the total delay and the sum is subtracted from the node's system time to calculate the delta for the node requesting connection.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07689720&OS=07689720&RS=07689720
owner: Microsoft Corporation
number: 07689720
owner_city: Redmond
owner_country: US
publication_date: 20031105
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention pertains generally to computer networks and, more particularly, to peer-to-peer computer networks.","Enabling group communication is a popular application of computer networks. Groups of people use computer networks to share every kind of digital data from simple text and static images to encoded audio and video and more specialized data that enables real-time collaboration and multi-player games.","In general, a node is an application on a peer-to-peer network, typically identified by an Internet Protocol (IP) address, a port, and a name. A graph is an interconnection of such nodes on a peer-to-peer network. A peer-to-peer network is a simple, small type of network in which each node has the ability for equivalent capabilities and responsibilities. Each node can be a server and each can be a client at the same time. This differs from a client-server architecture in which some computers are dedicated to serving others.","In a peer-to-peer network, there are many time-based events. For many events, it is preferred that all nodes connected to the network share a common view of time. Such concepts as data lifetime, membership lifetime, graph partition detection, and graph partition recovery all hinge upon the fact that the nodes in the peer-to-peer network have a common concept of time among themselves.","As one example of a problem that may occur if nodes do not have a common concept of time can be found in data expiration. It is convenient if data across the network expires for each node at approximately the same time. In general, for distributed networks such as a peer-to-peer network, data will be pushed to the graph and will be removed from each node based upon an expiration time. If the expiration times are not approximately the same, then the data may exist on some nodes, and may be expired on others. This phenomenon may cause a number of problems, such as synchronization issues between the nodes.","One method for handling common time between nodes is use of Network Time Protocol (NTP). NTP is a protocol that can synchronize clocks on local computers with radio or atomic clocks on the Internet. While this system works well for its intended purpose, constantly synchronizing all nodes on a graph can be an expensive process. In addition, not all nodes may be connected to the Internet, and thus may not be able to take advantage of NTP, or a node may not be configured to synchronize with an NTP server.","The following presents a simplified summary of some embodiments of the invention in order to provide a basic understanding of the invention. This summary is not an extensive overview of the invention. It is not intended to identify key\/critical elements of the invention or to delineate the scope of the invention. Its sole purpose is to present some embodiments of the invention in a simplified form as a prelude to the more detailed description that is presented later.","In accordance with an embodiment, a shared concept of time, called \u201cgraph time,\u201d is agreed upon by all nodes within a graph. Each node maintains its own delta representative of a difference in the node's system clock and graph time. Upon connecting to a neighbor node in a graph, a node is sent graph time as perceived by the neighbor node. In accordance with an embodiment, the node assumes that the lag time in receiving the graph time from the neighbor node is one-half of the lag time between the request for the connection and the receipt of the graph time. Graph time as sent by the neighbor node is added to one-half of the total delay and the sum is subtracted from the node's system time to calculate the delta for the node requesting connection.","In accordance with an embodiment, if a node's delta has never been set, it uses the calculated value as its new delta. However, in accordance with an embodiment, if the node's delta has been set in the past, it uses a weighted average of its current calculated delta and the previously calculated deltas.","In accordance with an embodiment, a shift factor is utilized to minimize the delta for all nodes in a graph. In this manner, the average of the delta values for each of the nodes is minimized. In accordance with an embodiment, in order to provide this decrease in delta, during a shifting period, the calculated delta is decreased by a fraction of the time between the present connection and the previous connection, divided by the shift period. If the time between connections is greater than the shift period, then the delta is set to zero.","Other features of the invention will become apparent from the following detailed description when taken in conjunction with the drawings, in which:","Prior to proceeding with a description of the various embodiments of the invention, a description of a computer and networking environment in which the various embodiments of the invention may be practiced is now provided. Although not required, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, programs include routines, objects, components, data structures and the like that perform particular tasks or implement particular abstract data types. The term \u201cprogram\u201d as used herein may connote a single program module or multiple program modules acting in concert. The terms \u201ccomputer\u201d and \u201ccomputing device\u201d as used herein include any device that electronically executes one or more programs, such as personal computers (PCs), hand-held devices, multi-processor systems, microprocessor-based programmable consumer electronics, network PCs, minicomputers, tablet PCs, laptop computers, consumer appliances having a microprocessor or microcontroller, routers, gateways, hubs and the like. The invention may also be employed in distributed computing environments, where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, programs may be located in both local and remote memory storage devices.","Referring now to the drawings, in which like reference numerals represent like parts throughout the several views, an example of a computer networking environment suitable for incorporating aspects of the invention is described with reference to . The example computer networking environment includes several computers  communicating with one another over a network , represented by a cloud. The network  may include many well-known components, such as routers, gateways, hubs, etc. and allows the computers  to communicate via wired and\/or wireless media. When interacting with one another over the network , one or more of the computers  may act as clients, servers or peers with respect to other computers . Accordingly, the various embodiments of the invention may be practiced on clients, servers, peers or combinations thereof, even though specific examples contained herein may not refer to all of these types of computers.","Referring to , an example of a basic configuration for the computer  on which aspects of the invention described herein may be implemented is shown. In its most basic configuration, the computer  typically includes at least one processing unit  and memory . The processing unit  executes instructions to carry out tasks in accordance with various embodiments of the invention. In carrying out such tasks, the processing unit  may transmit electronic signals to other parts of the computer  and to devices outside of the computer  to cause some result. Depending on the exact configuration and type of the computer , the memory  may be volatile (such as RAM), non-volatile (such as ROM or flash memory) or some combination of the two. This most basic configuration is illustrated in  by dashed line .","The computer  may also have additional features\/functionality. For example, computer  may also include additional storage (removable  and\/or non-removable ) including, but not limited to, magnetic or optical disks or tape. Computer storage media includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information, including computer-executable instructions, data structures, program modules, or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory, CD-ROM, digital versatile disk (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by the computer . Any such computer storage media may be part of computer .","The computer  preferably also contains communications connections  that allow the device to communicate with other devices such as remote computers . A communication connection is an example of a communication medium. Communication media typically embody computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. By way of example, and not limitation, the term \u201ccommunication media\u201d includes wireless media such as acoustic, RF, infrared and other wireless media. The term \u201ccomputer-readable medium\u201d as used herein includes both computer storage media and communication media.","The computer  may also have input devices  such as a keyboard\/keypad, mouse, pen, voice input device, touch input device, etc. Output devices  such as a display , speakers, a printer, etc. may also be included. All these devices are well known in the art and need not be described at length here.","In the description that follows, the invention will be described with reference to acts and symbolic representations of operations that are performed by one or more computing devices, unless indicated otherwise. As such, it will be understood that such acts and operations, which are at times referred to as being computer-executed, include the manipulation by the processing unit of the computer of electrical signals representing data in a structured form. This manipulation transforms the data or maintains it at locations in the memory system of the computer, which reconfigures or otherwise alters the operation of the computer in a manner well understood by those skilled in the art. The data structures where data is maintained are physical locations of the memory that have particular properties defined by the format of the data. However, while the invention is being described in the foregoing context, it is not meant to be limiting as those of skill in the art will appreciate that various of the acts and operation described hereinafter may also be implemented in hardware.","In an embodiment of the invention, joining a peer-to-peer (P2P) communications group includes joining a graph of connected peers or nodes. Each node may be, for example, an application running on a computer (e.g., the computer ).  illustrates an example peer-to-peer (P2P) graph suitable for incorporating aspects of the invention. Each node or peer , , , , , ,  may communicate with any other peer , , , , , ,  in the peer-to-peer graph  either directly or indirectly. For example, peer  may communicate with peer  directly, but in order to communicate with peer , data first propagates through peer  and then peer . Peer  may communicate with peer  directly, alternatively, peer  may communicate indirectly with peer  via peer  and then peer .","A single computer may enable more than one peer, for example, peer , peer  and peer  may interact with the computer network  from the same computer . A single peer may be enabled by more than one computer, for example, peer  may interact with the computer network  from a distributed computing environment including several computers . Peer-to-peer connections are independent of an underlying data transport mechanism, for example, the connection between peer  and peer  may be implemented utilizing Transmission Control Protocol (TCP) and Internet Protocol Version 4 (IPv4), the connection between peer  and peer  may be implemented utilizing TCP and Internet Protocol Version 6 (IPv6), and the connection between peer  and peer  may be ultimately implemented as a copy of one memory location to another within the same computer . Each peer , , , , , ,  may participate in more than one peer-to-peer graph (not shown in ).",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 4","FIG. 3"],"b":["102","400","400","300","400","302","314","102","400","102"]},"The node  includes a graph time module  associated therewith. Alternatively, the graph time module  may be a component of an operating system of the computer , or may reside as a separate program on the computer  or on a separate computer.","The graph time module  and\/or the node  are configured to communicate with a system clock  for the computer . The system clock  may maintain time for the computer , may be implemented in hardware or software, and may reside separately from the computer  or as part of the node .","The system clock  for each node  in the graph  maintains its own time. In accordance with an embodiment of the invention, the system clocks  may maintain time in Universal Coordinated Time (UTC). As is known, UTC is the same as Greenwich Mean Time (GMT), and is the mean solar time of the meridian of Greenwich, England, used as the basis for calculating standard time throughout the world. As an example, the system clocks  associated with each node or peer - may maintain time expressed as a 64 bit number, where each unit represents 100 nanoseconds relative to GMT.","Although each system clock  utilizes the same system for maintaining time, most likely in any given peer-to-peer network, such as the graph , the system clocks  for the nodes or peers - are not synchronized. In the example shown in , the number in parenthesis for each peer - represents the numerical equivalent of minutes for the system clock  associated with the respective peer, with the time of day not being relevant to this example. In the graph , the time variation between the peers - is 15 minutes, with the greatest variation being between the peer , showing a time of 100, and the peer , showing a time of 115. As stated above in the Background section of this disclosure, this time variance may cause problems in operation of the infrastructure of the graph .","In accordance with an embodiment of the present invention, a concept of graph time is defined wherein the nodes or peers - have a shared concept of time that is agreed upon by all nodes  within the graph . As further described below, each node - maintains its own delta representative of a difference in the node's time kept by its system clock  and graph time.","In accordance with an embodiment, graph time is initialized by the node  which creates the graph . Graph time is set according to the system clock  of the node . As an example, for the graph  in , it is assumed that the node  initialized the graph , and thus at the snapshot of time shown in , the graph time is 101.","In accordance with an embodiment of the invention, the other nodes -,  and  share the concept of graph time with the node  by maintaining a local delta  () that is a calculated value that represents the difference between the particular node's time kept via its system clock  and the agreed-upon graph time. The delta  is calculated by the graph time module , as is further described below.","Therefore, each node  stores its delta  which is used to convert between graph time (\u201cgraph_time\u201d) and the time maintained in the system clock  of the node (\u201csystem_time\u201d), such that:\n\ngraph_time=system_time\u2212delta\n","As can be understood, the delta may be negative or positive, depending on where the system time for the node  is relative to graph time.","In accordance with an embodiment of the invention, the local delta  for a node  is set or adjusted each time a new outgoing connection is formed. The delta  may be calculated at other times, such as on an interval, but calculation at connection time works particularly well in that it requires very little additional overhead for the graph .","Typically, when forming a connection, a connect message  () is sent from the connecting node  and a welcome message  is received by the node  requesting the connection. The welcome message  typically is sent by the node to which the connecting node  is trying to connect, in the embodiment shown in , a neighbor node . The neighbor node  generically represents a node to which the node  requests a connection and, as with the node , may for example be any of the nodes - in the graph . In accordance with an embodiment of the invention, the neighbor node  sends its perceived graph time  along with the welcome message .","In accordance with an embodiment of the invention, the node  that is requesting a connection calculates its delta by using the perceived graph time  sent by the neighbor node  in the connection attempt. However, because the perceived graph time  represents the graph time perceived by the neighbor node  when the welcome message  was queued to be sent by the neighbor node, and there is some lag between that queue time and the actual receipt of the perceived graph time  by the node , the node  is not exactly certain of the perceived graph time  relative to its own system time. In other words, the node  is not certain of the exact latency of the connection with the neighbor node , and cannot determine exactly how long it has been since the neighbor node  has created the perceived graph time .","In accordance with an embodiment of the invention, to account for the unknown latency, an assumption is made that the latency is one half of the time between the request for the connection and the receipt of the graph time. The node  tracks the time in which it queues its connect message  (system_CONNECT), and then the local system time at which the welcome message  is processed (system_WELCOME). Because the difference in these two times represents a round trip between the node  and the neighbor node , in accordance with an embodiment, it is assumed that one-half of that period is the amount of time that it took from the queuing of the welcome message to the processing of the welcome message (system_WELCOME time). Using this information, a delta value (\u201cneighbor_delta\u201d) may be calculated using the perceived graph time (\u201cgraph_time\u201d) of the neighbor node , the system time of the node  (\u201csystem_time\u201d), and the delay in the round trip between requesting the connection and processing the welcome message  as follows:\n\nneighbor_delta=system_time\u2212(graph_time+\u00bddelay)\n\nwhere delay=system_WELCOME\u2212system_CONNECT\n","The calculation above calculates a \u201cneighbor_delta\u201d because the delta is calculated based upon the perception of the graph time of the neighbor node .","The neighbor_delta may be calculated at the time of the processing of the welcome message  (i.e., at system_WELCOME). As such, system_time at that instance is equal to system_WELCOME, and the formula for calculating neighbor_delta may be rewritten as follows:\n\nneighbor_delta=system_WELCOME\u2212((system_WELCOME\u2212system_CONNECT)\/2+graph_time)\n",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 6","b":["400","600","400","500","602","400","502","504"]},"At step , the graph time module  calculates the neighbor_delta as described above. If this connection attempt is a first connection attempt by the node , then in accordance with an embodiment of the invention, step  branches to step  where the neighbor_delta is set as the local delta for the node  (i.e., it is stored as the delta ). If this is not the first connection attempt, then step  branches to step , where a weighted average of the current local delta  and the neighbor_delta is used to calculate the new local delta.","The weighted average of step  above may be calculated by many different methods. In one embodiment, calculation of the weighted average takes into account the fact that a local delta already exists for the node , and that the neighbor_delta is calculated based upon the perceived graph time of a single neighbor node . Thus, the existing local delta is be given a heavier weighting than the neighbor_delta. As one example of how to perform such a weighted average, the following formula may be used:\n\nnew local delta=old local delta*((1)\/)+neighbor_delta*(1))\n","X is some weighting constant, such as in the range from 4-16. If the weighting constant is too small, the neighbor_delta will be weighted too heavily, and if too large will not have much effect on the new local delta value. Thus, a weighting from 4-16, or even more preferably 4-8 is typically considered to be a good value. The value of 4-8 works particularly well in that most graphs, such as the graph , the number of neighbors is typically 3-4, and if the value is 4, then the new local delta will generally include neighbor_delta information from each of its neighbors, and with 8 will take the last 8 connections into account, which increases the likelihood that connections with each of its neighbors will be utilized in averaging. Other values may be used in accordance with a particular graph or a desired result.","Thus, in accordance with the method described above, local deltas  are calculated for each of the peers, such as the peers -. A representation of local deltas  for the nodes - is shown in . In this example, the peer  initiated the graph , and the deltas for the other peers were calculated from that peer. In the example shown, the deltas exactly represent the difference between the snapshot of time shown in  and deltas that would be calculated from that exact snapshot. However, because the delta values are calculated by connections with neighbors and there may be distances between those neighbors and the initiating node (in this example, the node ), there may be some variance, especially as the nodes that are farther away from the initiating node . However, in practice, the inventors have found that the variance across a graph  even with a large number of peers is typically less than 10 seconds, which is sufficient for most operations of a graph .","As an example of how the graph time can be beneficial, creation, modification, and expiration times of shared data in the graph  may be set in accordance with graph time. An application may set the expiration time by calculating when the data should expire in terms of its own system time, and then convert it to normalized graph time by utilizing the graph time module . To this end, an application programming interface  () may be provided on the graph time module  for a node  or other application to access for utilizing graph time.","When the expiration time of the data is reached, each node  having the data stored therewith removes the shared data from its cache or other data store. If the nodes  do not have a shared concept of time through the use of graph time as described herein, each node  would expire the data at different times, which could cause each node to have a different view of the shared data. As such, problems may occur, such as inaccurate synchronization between the nodes.","As can be seen in , the delta values in the example given range from (\u22121) to 14. As described above, the delta values may be negative or positive based upon the system time of a particular node  relative to graph time. However, in accordance with an embodiment of the invention, a process is provided through which local deltas are shifted so that the average local delta approaches zero. In accordance with an embodiment of the invention, a shifting factor is provided that shifts the deltas over time toward zero. The shifting factor may be determined, for example, based upon the length between new outgoing connections for a node . As an example, a shifting period may be defined which serves as the denominator in a fraction. The numerator for the fraction is the length between new outgoing connections. The fraction represents the amount by which the local delta will be decreased when it is calculated so that the average of the local deltas decreases toward zero.","For example, a modified algorithm may utilize the methods shown in . Beginning at step , a determination is made if the time since the last connection is greater than a shift period, e.g., one day. If so, then a shifted_delta is set to zero at step . If not, a new shifted_delta is calculated at step . This new shifted_delta may be calculated, for example, by using the following formula:\n\nshifted_delta=local_delta*((shift_period\u2212(system_time\u2212last_set))\/shift_period)\n\nwherein the shift_period is the time period defined above (e.g., one day), the system_time is the current connection time in which the shifted_delta is being calculated, and the last_set is the previous connection time.\n","The local_delta in the formula above may be calculated using a number of different factors, but typically is the local delta  last calculated for the node . In accordance with an embodiment, if the local delta has never been calculated for the node  (i.e., in the example above, upon first connection), then the local_delta in the shifting formula above may be calculated using the neighbor_delta calculation above, and the last_set time may be set to system_time. Thus, in such a case, the shifted_delta is equal to the neighbor_delta.","If local delta has been set in the past, then the local delta may be calculated using a weighting average as follows:\n\nlocal_delta=shifted_delta*((1)\/)+neighbor_delta*(1))\n","The shifting factor described above is advantageous in that it minimizes the delta for each of the nodes  in a graph (e.g., the graph ). This feature assures that the graph time remains close to Universal Coordinated Time (UTC), and prevents drifting of the graph time away from UTC. An example of the deltas after shifting has occurred in an ideal graph  is shown in . The example shows an perfect shift of the deltas of , and in reality, a shift may not be so flawless. As can be seen in the example, none of the peers - has a delta that is greater than the absolute value of 9, whereas before the deltas were as large as 15. If one or more of the nodes - began to have a delta value that shifted, then the shifting factor or shifted_delta equation above would work to maintain the delta close to a smaller value.","The use of the terms \u201ca\u201d and \u201can\u201d and \u201cthe\u201d and similar referents in the context of describing the invention (especially in the context of the following claims) are to be construed to cover both the singular and the plural, unless otherwise indicated herein or clearly contradicted by context. The terms \u201ccomprising,\u201d \u201chaving,\u201d \u201cincluding,\u201d and \u201ccontaining\u201d are to be construed as open-ended terms (i.e., meaning \u201cincluding, but not limited to,\u201d) unless otherwise noted. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range, unless otherwise indicated herein, and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples, or exemplary language (e.g., \u201csuch as\u201d) provided herein, is intended merely to better illuminate embodiments of the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non-claimed element as essential to the practice of the invention.","Preferred embodiments of this invention are described herein, including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate, and the inventors intend for the invention to be practiced otherwise than as specifically described herein. Accordingly, this invention includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover, any combination of the above-described elements in all possible variations thereof is encompassed by the invention unless otherwise indicated herein or otherwise clearly contradicted by context."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 7","FIG. 3"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 9","FIG. 3"]}]},"DETDESC":[{},{}]}
