---
title: Virtual path restoration scheme using fast dynamic mesh restoration in an optical network
abstract: A method for restoring a virtual path, provisioned between a source and a target node, in a mesh zoned optical network is described. The method, in one embodiment, broadcasts or floods restore path requests in the network to expedite the identification of an alternate route and minimize the service disruption for failed virtual path. The flooding of requests is controlled to ensure efficient performance of the network yet guaranteeing minimum restoration time to allow critical telecommunication related traffic to flow through the network with virtually no interruption. The constant update of nodal topology by each node allows a fast identification of alternate physical path for failed virtual path.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07301895&OS=07301895&RS=07301895
owner: Cisco Technology, Inc.
number: 07301895
owner_city: San Jose
owner_country: US
publication_date: 20060201
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present patent application is a continuation of U.S. patent application Ser. No. 09\/750,668, filed on Dec. 29, 2000, entitled \u201cVIRTUAL PATH RESTORATION SCHEME USING FAST DYNAMIC MESH RESTORATION IN AN OPTICAL NETWORK\u201d (which is a Continuation-in-Part of patent application Ser. No. 09\/232,397, filed Jan. 15, 1999, now U.S. Pat. No. 6,856,627, entitled \u201cA METHOD FOR ROUTING INFORMATION OVER A NETWORK,\u201d having A. N. Saleh, H. M. Zadikian, Z. Baghdasarian, and V. Parsi as inventors), which is incorporated by reference herein in its entirety and for all purposes. This application is assigned to Cisco Technology, Inc., the assignee of the present invention, and is hereby incorporated by reference, in its entirety and for all purposes.","This application is also related to following applications:\n\n","Above mentioned applications are assigned to Cisco Technology, Inc., the assignee of the present invention, and are hereby incorporated by reference, in its entirety and for all purposes.","1. Field of the Invention","This invention relates to the field of information networks, and more particularly relates to a protocol for configuring and restoring routes over a network.","2. Description of the Related Art","Today's networks carry vast amounts of information. High bandwidth applications supported by these networks include streaming video, streaming audio, and large aggregations of voice traffic. In the future, these bandwidth demands are certain to increase. To meet such demands, an increasingly popular alternative is the use of lightwave communications carried over fiber-optic cables. The use of lightwave communications provides several benefits, including high bandwidth, ease of installation, and capacity for future growth.","Optical infrastructures are capable of transmission speeds in the gigabit range, which helps address the ever-increasing need for bandwidth mentioned above. Such infrastructures employ various topologies, including ring and mesh topologies. In order to provide fault protection, ring topologies normally reserve a large portion (e.g. 50% or more) of the network's available bandwidth for use in restoring failed circuits. However, ring topologies are capable of quickly restoring failed circuits. This capability is important in providing reliable service to customers, and is particularly important in telephony applications, where a failure can result in alarms, dropped calls, and, ultimately, customer dissatisfaction and lost revenue. In a similar vein, because of bandwidth demands, protocol overhead related to provisioning, restoration, and other functions should be kept to a minimum in order to make the maximum amount of bandwidth available for use by customers.","An alternative to the ring topology, the mesh topology reduces the amount of bandwidth needed for protection. The mesh topology is a point-to-point topology, with each node in the network connected to one or more other nodes. Because a circuit may be routed through various combinations of the network's nodes and over the various links which connect them, excess capacity through a given node or over a given link can serve to protect several circuits. However, the restoration of a circuit following a failure in a mesh topology can consume a relatively large amount of time.","In one embodiment, the present invention reduces the time and resources required to restore a failed virtual path in a mesh optical network by broadcasting or \u2018constrained flooding\u2019 of restore path request packets in the network. This carefully controlled \u2018flooding\u2019 of restore path request packets quickly identifies multiple alternate paths for failed virtual path thus allowing network to guarantee fast restoration time required for many telecommunication related connections.","In another embodiment, in case of a link port failure, the restoration is localized to the node where link port failure occurred. If a link port failure occurs between two adjacent nodes then localization is effected through restoration by the two adjacent nodes without the resource utilization of any other node or the network","The foregoing is a summary and thus contains, by necessity, simplifications, generalizations and omissions of detail; consequently, those skilled in the art will appreciate that the summary is illustrative only and is not intended to be in any way limiting. Other aspects, inventive features, and advantages of the present invention, as defined solely by the claims, will become apparent in the non-limiting detailed description set forth below.","The use of the same reference symbols in different drawings indicates similar or identical items.","The following is intended to provide a detailed description of an example of the invention and should not be taken to be limiting of the invention itself. Rather, any number of variations may fall within the scope of the invention which is defined in the claims following the description.","Network Architecture","To limit the size of the topology database used by some protocols, and to limit the scope of broadcast packets (e.g., packets used for restoration), the nodes of a network can be divided into logical groups, referred to herein as \u201czones.\u201d The use of zones provides several benefits. Networks employing zones can be implemented in several different ways, some of which can be implemented concurrently.",{"@attributes":{"id":"p-0032","num":"0033"},"figref":["FIG. 1","FIG. 1"],"b":["100","101","104","0","4","111","117","121","126","131","136","141","147","101","104","1","4","100","0","1","3","1","7","2","2","2","4","3","4","3","5","4","1","4","2","113","117","122","124","134","135","141","142","100","101","104"]},"Another example of the use of zone boundaries is in the provisioning and restoration of circuits within the network. Zone boundaries can be used to limit the flow of information generated by certain nodes during such provisioning and restoration. For example, a node can act as a proxy node for the source or destination node. In the event of a failure in the network affecting the circuit between the two nodes, the proxy node can perform source or destination node related functions. In the case of a failure, a node at the boundary of the zone, in which the failure has occurred, acts as a proxy for the source (or destination) node in the other zone. This avoids the need to involve the portion of the network circuit lying outside of the zone experiencing a failure, which would be expected to remain unchanged.","Another example of localized restoration is the use of the nodes where the physical port failure between two adjacent nodes has occurred. Upon discovering port failure, the two adjacent nodes restore the virtual path without the involvement of any other node or the network as long as there are sufficient ports available to restore failed link.","Initialization of Network Nodes","Once a network topology has been defined, the user can configure one or more end-to-end communication connections that can span multiple nodes and zones, an operation that is referred to herein as provisioning. Each set of physical connections that are provisioned creates an end-to-end communication connection between the two end nodes that supports a virtual point-to-point link (referred to herein as a virtual path or VP). Each link comprises a plurality of physical port between two adjacent nodes. The resulting VP has an associated capacity and an operational state, among other attributes.","VPs are also assigned a class of service, which determines their relative priority for restoration within the network. This class of service (CoS) is used during failure recovery procedures to determine which VPs are to be restored first and what restoration scheme is associated with it.","With each VP is associated the notion of a Physical Instance. The first time that a VP is set up, the VP is assigned a Physical Instance of 1. Whenever a fully set up path for a VP has to be changed because of some failure, the Physical Instance is incremented by 1. The source node of VP maintains a field referred to as Physical Instance Identifier. This field is preferably included in restoration related and other configuration packets. Only the source node should be provided the ability to update this parameter of a VP. The first path of any VP that is successfully provisioned (as seen by the Source node) will typically have a Physical Instance identifier of 1. All future Path related messages (Restore_I, Restore_Path and like) will preferably have the correct value of this identifier. If a new path is selected for this VP, the source node of the VP, which originates Restore Path Request packets, will increment this identifier by 1. As will be discussed subsequently, several Physical Instances of the same VP may temporarily exist in the network at any given time due to the distributed nature of path selection (and multiple failures) during dynamic restoration. Embodiments of the present invention ensures that only one instance survives.","Failure Detection, Propagation, and Restoration","Failure Detection and Propagation","In networks, failures are typically detected using the mechanisms provided by the underlying physical network. For example, when using a SONET network, a fiber cut on a given link results in a loss of signal (LOS) condition at the nodes connected by that link. The LOS condition propagates an Alarm Indication Signal (AIS) and Remote Defect Indication (RDI), and generates a LOS defect locally. The defect is upgraded to a failure 2.5 seconds later, which causes an alarm to be sent to the Operations System (OS) (per Bellcore's recommendations in GR-253 (GR-253: Synchronous Optical Network (SONET) Transport Systems, Common Generic Criteria, Issue 2 [Bellcore, December 1995], included herein by reference, in its entirety and for all purposes)). Preferably, when using SONET, the handling of the LOS condition follows Bellcore's recommendations in GR-253, which allows nodes to inter-operate, and co-exist, with other network equipment (NE) in the same network. A path restoration protocol is invoked as soon as the LOS defect is detected by the line card, which occurs 3 ms following the failure (a requirement under GR-253).","Under GR-253, downstream is in the direction of the failure, and upstream is opposite in direction to the failure. A defect in the direction from the source to the destination would therefore cause an AIS to be propagated upstream and an RDI to be propagated downstream. The arrival of the AIS at the node upstream from the failure causes the upstream node to send a similar alarm to its upstream neighbor and for that node to send an AIS to its own upstream neighbor. This continues from node to node until the AIS finally reaches the source node of the affected VP, or a proxy node if the source node is located in a different zone. Under GR-253, each node is allowed a maximum of 125 microseconds to forward the AIS upstream, which quickly propagates failures toward the source (or proxy) node.","Once a node detects a failure on one of its links, either through a local LOS defect or a received AIS indication, the node scans its VP table looking for entries for VPs that include the failed link and analyzes the mode of failure.","Failure Modes:","There can be many virtual path-related failure modes in a network depending upon the location of link failure in that network. Virtual path failure modes can be characterized as follows:","Neighbor or Link mode: In this mode, the failure occurs at any physical port of a link between two adjacent nodes. The scope of the notification and restoration messages is preferably limited to the two adjacent nodes that discover the failure. Restoration, in this case, is relatively fast because the restoration does not involve the resource of any other node in the network (including proxy or source node). The inter-nodal physical path traversed by the VP also does not change.","Path mode: In this mode, path failures are much more broader than a physical port breakdown. This may include a failure of entire optical link or a node. The source and destination of the affected VPs are notified and potentially the entire network is involved in the restoration. This mode may involve more messaging and longer restoration time than the Link mode. However, it depends on the CoS of the VP that how fast the path will be restored. Restoration here will most likely change the path traversed by the VP.","Failure Restoration:",{"@attributes":{"id":"p-0044","num":"0045"},"figref":"FIG. 2","b":["200","210","220","230","240","260","250"]},"Neighbor or Link mode restoration:  is a flow diagram of steps performed in response to the failure of a port on a link between two adjacent neighbor nodes. Link mode notification and restoration is achieved by means of exchanging a Restore Span packet. The Link mode failure messages may be likened to SONET APS except for the fact that the contents of link mode messages are much richer and thus gives more flexibility and resilience to multiple failures during the restoration procedure.","Once a node detects a failure on one of its active ports (step ), either through a local loss of signal defect or a received error indication, the node scans the VP table (step ) and checks to see if the port is in use by a VP (step ). Further action depends upon the type of VP i.e. the associated CoS. If the port is not assigned to any VP, no action is taken and the node proceeds to next VP in the table (step ). If the failed port is used by a VP, which requires restoration then the node that detected the failure, determines if the failure is physical port failure (step ). If the failure is not local, the node initiates path restoration by initiating a Restore_I request (step ).","If the failure is a physical port failure, the node first determines if extra ports are available within the same link (step ). If extra ports are not available then the node initiates path restoration request (step ). Once an extra physical port is identified, the node initiates a Restore Span request (step ), switches the port (step ) and logs event in node database (step ).",{"@attributes":{"id":"p-0048","num":"0049"},"figref":"FIG. 3B","b":["320","325","330","335","340","345"]},"The Restore Span requests are preferably generated by the master node and replied to by the slave node on the link. This allows traffic from one or more ports to be switched to other unused ports on the same link. One advantage of using this procedure is that the process only involves two nodes and preserves the resources of other nodes in the network (including source and destination). After receiving a Restore Span packet, the slave node responses with a Restore Span response packet.",{"@attributes":{"id":"p-0050","num":"0051"},"figref":"FIG. 3C","b":["350","355"]},"If the failure is more serious than just a simple port failure i.e. an entire link is down (and no port is active) then the failure affects all the traffic on failed link. In this case, the network goes into path mode restoration.","Path mode restoration: If local Link mode restoration fails or entire link is down then the node which discovers the failure creates and sends out a Restore_I packet. Restore_I packets are path messages in that they are sent down the same path as the VP that traversed the failed link.",{"@attributes":{"id":"p-0053","num":"0054"},"figref":"FIG. 3D","b":["360","365","370","375","380","385"]},"Initiating Restore_I Request: The node that discovers the failure transmits Restore_I packets both upstream and downstream. The source of the VP only transmits them downstream. After transmitting packet, the source node immediately starts restoration process. The destination node sends packets upstream and after sending these packets, the node starts a timer for acknowledgement and retransmission.","The intermediate or tandem node attempt to send packets in both directions, even in the case that there is no transmission path in one of the directions. Restore_I packet transmissions are reliable and preferably are acknowledged by the receiving node (the neighbor of the initiating node). A timer is started for each Restore_I request that is sent. The request is resent periodically until a response is received or a threshold for the number of unacknowledged packets sent is reached. In either case, if an acknowledgment is received or the threshold is reached, then all resources associated with the VP are released. In the case of multiple port failure in the same VP, even if Restore_I messages are sent out regarding the failure of the first port in a VP, upon subsequent failures, similar procedure is carried out.  illustrates a format of the Restore_I message.","Receiving Restore_I Request:","Upon receiving a Restore_I packet, certain tests are performed. A node should examine the VP ID and return a NAK (with a reason code of NULL_VP) if this VP doesn't exist at the node. For VP with a lower CoS, the state of the VP and Path is changed to DOWN. When source node of a lower CoS VP receives a Restore_I packet, then the source node will generate an alarm. For VPs with a CoS requiring Dynamic Mesh Restoration, if the receiving node is a tandem node, then the current Physical Instance (PI) of the VP at the node is compared to the PI in the Restore_I packet. If the stored PI at the node is higher than the one in the Restore_I packet, then a NAK (STALE_MSG) is returned (to the sending node). Otherwise, the Restore_I packet is accepted for processing. The state of the VP is changed to DOWN, if the state is not already set in that state. The Restore_I packet is then forwarded in the same direction as the incoming packet. A timer is initiated for retransmission and after certain predefined threshold times retransmissions, all the resources of VP are released.","If the receiving node is the Source node of the VP, the source node starts restoration and the state of path is set to RESTORING. If the receiving node is the destination node then all the resources associated with the VP are released and the node waits for messages from the Source to arrive. In all the cases (except when a NAK has to be returned), an ACK is returned to the node sending the packet.","Receiving a Restore_I Response:","If the receiving node has already responded to Restore_I packet then responses to subsequent Restore_I packets are ignored if the Physical Instance of the VP in the response is lower than the node's current Physical Instance for that VP. For valid responses, the appropriate timer and retransmissions are stopped. If receiving node is tandem node and the response is positive and responses to all the packets sent out for that VP have been received, then the resources allocated to the VP are released.","For negative responses, the reason code is examined and if the number of retries is below a given threshold, the sending node resends the Restore_I packet. If this threshold has been exceeded, resources associated with the VP are released. Similarly, if the reason code is STALE_MSG (possibly because the responding node has already participated in the set up of a new restoration path for the VP and thus has a higher Physical Instance now), resources for the VP are released without any retransmissions.","Initiating Path Restoration:","Processing by Source\/Proxy Node:","When the node receiving Restore_I packet is the source or proxy node of the VP then the node acknowledges the request packet and the VP is placed on a list of VPs to be restored. The state of VP is set to RESTORING and the node starts restoration process.",{"@attributes":{"id":"p-0062","num":"0063"},"figref":"FIG. 4A","b":["400","405","410","415","420","425","430"]},"Next, the source or proxy node sends a Restore Path Request packet (RPR) to all eligible neighbors (i.e., a node adjacent to the given node) in order to restore the given VP. Neighbor eligibility is determined by the state of the neighbor, available link bandwidth, current zone topology, location of the target node, and other parameters.","The Restore Path Packet:",{"@attributes":{"id":"p-0064","num":"0065"},"figref":"FIG. 4B","b":["440","445","450","455","460","465","470","475"]},"The Processing of Received RPRs by Tandem Node","Due to the way RPR messages are forwarded by tandem nodes and the unconditional and periodic retransmission of such messages by origin nodes, multiple instances of the same request and even multiple copies of each instance, circulating in the network at any given time is not uncommon. To minimize the amount of broadcast traffic generated by the protocol and aid tandem nodes in allocating bandwidth fairly for competing RPRs, tandem nodes preferably executes a sequence such as that described subsequently.","The term \u201csame instance,\u201d as used herein, refers to messages that carry the same VP ID, origin node ID and hop-count, and are received from the same tandem node (usually, the same input link, assuming only one link between nodes). Any two messages that meet the above criteria are guaranteed to have been sent by the same origin node, over the same link, to restore the same VP, and to have traversed the same path. The terms \u201ccopy of an instance,\u201d or more simply \u201ccopy\u201d are used herein to refer to a retransmission of a given instance. Normally, tandem nodes select the first instance they receive because in most, but not all cases, as the first RPR received normally represents the quickest path to the origin node. To keep track of all the requests, the node maintains RPR related information in a Restore Path Request Entry data structure.","The Restore-Path Request Entry (RPRE) is a data structure that maintains information about a specific instance of a RPR packet. Tandem nodes use the structure to store information about the request, which helps them identify and reject other instances of the request, and allows them to correlate received responses with forwarded requests. Table 1 lists an example of the fields that are preferably present in an RPRE. Other path relevant information can also be added to the structure.",{"@attributes":{"id":"p-0068","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"RPR Fields"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Field","Usage"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Origin Node","The node ID of the node that originated"]},{"entry":[{},"this request. This is either the source"]},{"entry":[{},"node of the VP or a proxy node."]},{"entry":["Target Node","Node ID of the target node of the"]},{"entry":[{},"restore path request. This is either the"]},{"entry":[{},"destination node of the VP or a proxy"]},{"entry":[{},"node."]},{"entry":["Received From","The neighbor from which we received this"]},{"entry":[{},"message."]},{"entry":["First Sequence Number","Sequence number of the first received"]},{"entry":[{},"copy of the corresponding restore-path"]},{"entry":[{},"request."]},{"entry":["Last Sequence Number","Sequence number of the last received"]},{"entry":[{},"copy of the corresponding restore-path"]},{"entry":[{},"request."]},{"entry":["Bandwidth","Requested bandwidth."]},{"entry":["QoS","Requested QoS."]},{"entry":["Timer","Used by the node to timeout the RPR."]},{"entry":["T-Bit","Set to 1 when a Terminate indicator is"]},{"entry":[{},"received from any of the neighbors."]},{"entry":["Pending Replies","Number of the neighbors that haven't"]},{"entry":[{},"acknowledged this message yet."]},{"entry":["Sent To","A list of all neighbors that received a"]},{"entry":[{},"copy of this message. Each entry contains"]},{"entry":[{},"the following information about the"]},{"entry":[{},"neighbor:"]},{"entry":[{},"AckReceived: Indicates if a response has"]},{"entry":[{},"been received from this neighbor."]},{"entry":[{},"F-Bit: Set to 1 when Flush indicator from"]},{"entry":[{},"this neighbor."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"When an RPR packet arrives at a tandem node, a decision is made as to which neighbor should receive a copy of the packet. The choice of neighbors is related to variables such as link capacity and distance. Specifically, a particular neighbor is selected to receive a copy of the packet if:\n\n",{"@attributes":{"id":"p-0070","num":"0074"},"figref":"FIG. 5"},"Processing of RPRs begins at step , in which the target node's ID is compared to the local node's ID. If the local node's ID is equal to the target node's ID, the local node is the target of the RPR and must process the RPR as such. This is illustrated in  as step  and is the subject of the flow diagram illustrated in . If the local node is not the target node, the RPR's HOP_COUNT is compared to MAX_HOP in order to determine if the HOP_COUNT has exceeded or will exceed the maximum number of hops allowable (step ). If this is the case, a negative acknowledgment (NAK) with a Flush indicator is then sent back to the originating node (step ). If the HOP_COUNT is still within acceptable limits, the node then determines whether this is the first instance of the RPR having been received (step ). If this is the case, a Restore-Path Request Entry (RPRE) is created for the request (step ). This is done by creating the RPRE and setting the RPRE's fields, including starting a time-to-live (TTL) or deletion timer, in the following manner:\n\n","The ID of the input link is then added to the path in the RPRE (e.g., Path[PathIndex++]=LinkID) (step ). Next, the local node determines whether the target node is a direct neighbor (step ). If the target node is not a direct neighbor of the local node, a copy of the (modified) RPR is sent to all eligible neighbors (step ). The PendingReplies and SentTo Fields of the corresponding RPRE are also updated. If the target node is a direct neighbor of the local node, the RPR is sent only to the target node (step ). In either case, the RPRE corresponding to the given RPR is then updated (step ).","If this is not the first instance of the RPR received by the node, the node then attempts to determine whether this might be a different instance of the RPR (step ). A request is considered to be a different instance if the RPR:\n\n","If this is simply a different instance of the RPR, and another instance of the same RPR has been processed, and accepted, by this node, a NAK Wrong Instance is sent to the originating neighbor (step ). The response follows the reverse of the path carried in the packet. No broadcasting is therefore necessary in such a case. If a similar instance of the RPR has been processed and accepted by this node (step ), the node then determines whether a Terminate NAK has been received for this RPR (step ). If a Terminate NAK has been received for this RPR, the RPR is rejected by sending a Terminate response to the originating neighbor (step ). If a Terminate NAK was not received for this RPR, the new sequence number is recorded (step ) and a copy of the RPR is forwarded to all eligible neighbors that have not sent a Flush response to the local node for the same instance of this RPR (step ). This may include nodes that weren't previously considered by this node due to conflicts with other VPs, but does not include nodes from which a Flush response has already been received for the same instance of this RPR. The node then saves the number of sent requests in the PendingReplies field of the corresponding RPRE. The term \u201celigible neighbors\u201d refers to all adjacent nodes that are connected through links that meet the link-eligibility requirements previously described. Preferably, bandwidth is allocated only once for each request so that subsequent transmissions of the request do not consume any bandwidth.","Note that the bandwidth allocated for a given RPR is released differently depending on the type of response received by the node and the setting of the Flush and Terminate indicators in its header. Table 2 shows the action taken by a tandem node upon receiving a restore path response from a neighbor.",{"@attributes":{"id":"p-0076","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Actions taken by a tandem node upon receiving an RPR."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Received",{}]},{"entry":["Response","Flush","Terminate","Sequence"]},{"entry":["Type","Indicator?","Indicator?","Number","Action"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["X","X","X","Not Valid","Ignore response"]},{"entry":["Negative","No","No","1 = Last","Ignore response"]},{"entry":["Negative","X","No","=Last","Release bandwidth"]},{"entry":[{},{},{},{},"allocated for the"]},{"entry":[{},{},{},{},"VP on the link on"]},{"entry":[{},{},{},{},"which the response"]},{"entry":[{},{},{},{},"was received."]},{"entry":["Negative","Yes","No","Valid","Release bandwidth"]},{"entry":[{},{},{},{},"allocated for the"]},{"entry":[{},{},{},{},"VP on the link on"]},{"entry":[{},{},{},{},"which the response"]},{"entry":[{},{},{},{},"was received."]},{"entry":["Negative","X","Yes","Valid","Release all"]},{"entry":[{},{},{},{},"bandwidth allocated"]},{"entry":[{},{},{},{},"for the VP."]},{"entry":["Positive","X","X","Valid","Commit bandwidth"]},{"entry":[{},{},{},{},"allocated for the"]},{"entry":[{},{},{},{},"VP on the link the"]},{"entry":[{},{},{},{},"response was"]},{"entry":[{},{},{},{},"received on; release"]},{"entry":[{},{},{},{},"all other bandwidth."]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0077","num":"0091"},"figref":"FIG. 6","b":["600","605","610","605"]},"If the VP specified in the RPR terminates at this node (i.e. this node is indeed the target node), the target node determines whether an RPRE exists for the RPR received (step ). If an RPRE already exists for this RPR, the existing RPRE is updated (e.g., the RPRE's LastSequenceNumber field is updated) (step ) and the RPRE deletion timer is restarted (step ). If no RPRE exists for this RPR in the target node (i.e., if this is the first copy of the instance received), an RPRE is created (step ). Pertinent information from the RPR is copied into the RPRE (step ), the bandwidth requested in the RPR is allocated on the input link by the target node (step ) and an RPRE deletion timer is started (step ). In either case, once the RPRE is either updated or created, a checksum is computed for the RPR (step ) and written into the checksum field of the RPR (step ). The RPR is then returned as a positive response to the origin node (step ). The local (target) node then initiates its own matrix configuration. It will be noted that the RPRE created is not strictly necessary but helps to ensure that the processing of RPRs is consistent across nodes.","The Processing of Received RPR Responses by the Origination Node:",{"@attributes":{"id":"p-0079","num":"0093"},"figref":["FIGS. 7 and 8","FIG. 7"],"b":["700","705","710","705"]},"If the sending node is listed in the RPRE, the RPR sequence number is analyzed to determine its validity (step ). As with the previous steps, if the RPR contains an invalid sequence number (e.g., doesn't fall between FirstSequenceNumber and LastSequence Number, inclusive), the RPR response is ignored (step ). If the RPR sequence number is valid, the receiving node determines whether Flush or Terminate in the RPR response (step ). If neither of these is specified, the RPR response sequence number is compared to that stored in the last sequence field of the RPR (step ). If the RPR response sequence number does not match that found in the last sequence field of the RPRE, the RPR response is again ignored (step ). If the RPR response sequence number matches that found in the RPRE, or a Flush or Terminate was specified in the RPR, the input link on which the RPR response was received is compared to that listed in the RPR response path field (e.g., Response.Path[Response.PathIndex]==InputLinkID) (step ). If the input link is consistent with information in the RPR, the next hop information in the RPR is checked for consistency (e.g., Response.Path[Response.PathIndex+1]==RPRE.ReceivedFrom) (step ). If either of the proceeding two tests are failed, the RPR response is again ignored (step ).","If a Terminate was specified in the RPR response (step ), the bandwidth on all links over which the RPR was forwarded is freed (step ) and the Terminate and Flush bits from the RPR response are saved in the RPRE (step ). If a Terminate was not specified in the RPR response, bandwidth is freed only on the input link (i.e., the link from which the response was received) (step ). The Terminate and Flush bits are saved in the RPRE (step ), and the Flush bit of the RPR is cleared (step ). If a Terminate was not specified in the RPR, the Pending Replies field in the RPRE is decremented (step ). If this field remains non-zero after being decremented, the process completes. If Pending Replies is equal to zero at this point, or a Terminate was not specified in the RPR, the RPR is sent to the node specified in the RPR's Received From field (i.e. the node that sent the corresponding request) (step ). Next, the bandwidth allocated on the link to the node specified in the RPR's Received From field is released (step ), and an RPR deletion timer is started (step ).",{"@attributes":{"id":"p-0082","num":"0096"},"figref":"FIG. 8","b":["800","810","820","810","830","810","840","850","860","870","880"]},"With regard to matrix configuration, the protocol pipelines such activity with the forwarding of RPRs in order to minimize the impact of matrix configuration overhead on the time required for restoration. While the response is making its way from node N to node N, node N is busy configuring its matrix. In most cases, by the time the response reaches the origin node, all nodes along the path have already configured their matrices.","The Terminate indicator prevents \u201cbad\u201d instances of an RPR from circulating around the network for extended periods of time. The indicator is propagated all the way back to the originating node and prevents the originating node, and all other nodes along the path, from sending or forwarding other copies of the corresponding RPR instance.","Terminating RPR Packets are processed as follows. The RPR continues along the path until one or more of the following four conditions are encountered:\n\n","Further optimizations of the protocol can easily be envisioned by one of skill in the art and are intended to be within the scope of this specification. For example, in one embodiment, a mechanism is defined to further reduce the amount of broadcast traffic generated for any given VP. In order to prevent an upstream neighbor from sending the same instance of an RPR every T milliseconds, a tandem node can immediately return a no-commit positive response to that neighbor, which prevents the neighbor from sending further copies of the instance. The response simply acknowledges the receipt of the request, and doesn't commit the sender to any of the requested resources. Preferably, however, the sender (of the positive response) periodically transmits the acknowledged request until a valid response is received from its downstream neighbor(s). This mechanism implements a piece-wise, or hop-by-hop, acknowledgment strategy that limits the scope of retransmitted packets to a region that gets progressively smaller as the packet gets closer to its target node.","Optimizations","However, it is prudent to provide some optimizations for the efficient handling of errors. Communication protocols often handle link errors by starting a timer after every transmission and, if a valid response isn't received within the timeout period, the message is retransmitted. If a response isn't received after a certain number of retransmission, the sender generates a local error and disables the connection. The timeout period is usually a configurable parameter, but in some cases the timeout period is computed dynamically, and continuously, by the two end points. The simplest form of this uses some multiple of the average round trip time as a timeout period, while others use complex mathematical formulas to determine this value. Depending on the distance between the two nodes, the speed of link that connects them, and the latency of the equipment along the path, the timeout period can range anywhere from millisecond to seconds.","The above strategy of handling link errors can be improved upon, however, the fast restoration times required dictate that 2-way, end-to-end communication be carried out in less than 50 ms. A limitation of the above-described solution is the time wasted while waiting for an acknowledgment to come back from the receiving node. A safe timeout period for a 2000 mile span, for instance, can be 35 ms or more, in which case there is not enough time for a retransmission in case of an error.","This problem is addressed in one embodiment by taking advantage of the multiple communication channels (i.e. OC-48's) that exist between nodes to:\n\n","Preferably, the amount of packets sent is carefully controlled that the broadcast does not create congestion in the network. The link efficiency is improved further by using small packets during the restoration procedure. The present invention can be practiced on a network node\/element such as that described below.",{"@attributes":{"id":"p-0091","num":"0111"},"figref":["FIG. 9","FIG. 9"],"b":["900","910","1","912","1","912","1","910","1","912","1","910","1","912","1"]},"One or more of client terminals ()-(N) and\/or one or more of servers ()-(N) may be, for example, a computer system of any appropriate design, in general, including a mainframe, a mini-computer or a personal computer system. Such a computer system typically includes a system unit having a system processor and associated volatile and non-volatile memory, one or more display monitors and keyboards, one or more diskette drives, one or more fixed disk storage devices and one or more printers. These computer systems are typically information handling systems, which are designed to provide computing power to one or more users, either locally or remotely. Such a computer system may also include one or a plurality of I\/O devices (i.e. peripheral devices) which are coupled to the system processor and which perform specialized functions. Examples of I\/O devices include modems, sound and video devices and specialized communication devices. Mass storage devices such as hard disks, CD-ROM drives and magneto-optical drives may also be provided either as an integrated or peripheral device. One such exemplary computer system discussed in terms of client terminals ()-(N) is shown in detail in .",{"@attributes":{"id":"p-0093","num":"0113"},"figref":"FIG. 10","b":["1000","912","1","1000","1012","1000","1014","1016","1018","1020","1022","1024","1026","1028","1030","1032","1033","1034","1036","1038","1040","1042","1046","1012","1028","1047","1012","1030","1048","1012"]},"Bus  allows data communication between central processor  and system memory , which may include both read only memory (ROM) or flash memory (neither shown), and random access memory (RAM) (not shown), as previously noted. The RAM is generally the main memory into which the operating system and application programs are loaded and typically affords at least 16 megabytes of memory space. The ROM or flash memory may contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components. Applications resident with host computer system  are generally stored on and accessed via a computer readable medium, such as a hard disk drive (e.g., fixed disk ), an optical drive (e.g., CD-ROM drive ), floppy disk unit  or other storage medium. Additionally, applications may be in the form of electronic signals modulated in accordance with the application and data communication technology when accessed via network modem  or interface .","Storage interface , as with the other storage interfaces of host computer system , may connect to a standard computer readable medium for storage and\/or retrieval of information, such as a fixed disk drive . Fixed disk drive  may be a part of host computer system  or may be separate and accessed through other interface systems. Many other devices can be connected such as a mouse  connected to bus  via serial port , a modem  connected to bus  via serial port  and a network interface  connected directly to bus . Modem  may provide a direct connection to a remote server via a telephone link or to the Internet via an internet service provider (ISP). Network interface  may provide a direct connection to a remote server via a direct network link to the Internet via a POP (point of presence).","Many other devices or subsystems (not shown) may be connected in a similar manner. Conversely, it is not necessary for all of the devices shown in  to be present to practice the present invention. The devices and subsystems may be interconnected in different ways from that shown in . The operation of a computer system such as that shown in  is readily known in the art and is not discussed in detail in this application. Code to implement the present invention may be operably disposed or stored in computer-readable storage media such as one or more of system memory , fixed disk , CD-ROM , or floppy disk .","It will be noted that the variable identifier \u201cN\u201d is used in several instances in  to more simply designate the final element (e.g., servers ()-(N) and client terminals ()-(N)) of a series of related or similar elements (e.g., servers and client terminals). The repeated use of such variable identifiers is not meant to imply a correlation between the sizes of such series of elements, although such correlation may exist. The use of such variable identifiers does not require that each series of elements have the same number of elements as another series delimited by the same variable identifier. Rather, in each instance of use, the variable identified by \u201cN\u201d may hold the same or a different value than other instances of the same variable identifier.","Moreover, regarding the signals described herein, those skilled in the art will recognize that a signal may be directly transmitted from a first block to a second block, or a signal may be modified (e.g., amplified, attenuated, delayed, latched, buffered, inverted, filtered or otherwise modified) between the blocks. Although the signals of the above described embodiment are characterized as transmitted from one block to the next, other embodiments of the present invention may include modified signals in place of such directly transmitted signals as long as the informational and\/or functional aspect of the signal is transmitted between blocks. To some extent, a signal input at a second block may be conceptualized as a second signal derived from a first signal output from a first block due to physical limitations of the circuitry involved (e.g., there will inevitably be some attenuation and delay). Therefore, as used herein, a second signal derived from a first signal includes the first signal or any modifications to the first signal, whether due to circuit limitations or due to passage through other circuit elements which do not change the informational and\/or final functional aspect of the first signal.","The foregoing described embodiment wherein the different components are contained within different other components (e.g., the various elements shown as components of host computer system ). It is to be understood that such depicted architectures are merely exemplary, and that in fact many other architectures can be implemented which achieve the same functionality. In an abstract, but still definite sense, any arrangement of components to achieve the same functionality is effectively \u201cassociated\u201d such that the desired functionality is achieved. Hence, any two components herein combined to achieve a particular functionality can be seen as \u201cassociated with\u201d each other such that the desired functionality is achieved, irrespective of architectures or intermedial components. Likewise, any two components so associated can also be viewed as being \u201coperably connected\u201d, or \u201coperably coupled\u201d, to each other to achieve the desired functionality.",{"@attributes":{"id":"p-0100","num":"0120"},"figref":["FIG. 11","FIG. 11","FIG. 11"],"b":["1000","1110","1120","1130","11100","1110","1120","1130","1000","1047","1000","1100"]},"While particular embodiments of the present invention have been shown and described, it will be obvious to those skilled in the art that, based upon the teachings herein, changes and modifications may be made without departing from this invention and its broader aspects and, therefore, the appended claims are to encompass within their scope all such changes and modifications as are within the true spirit and scope of this invention. Furthermore, it is to be understood that the invention is solely defined by the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention may be better understood, and numerous objects, features, and advantages made apparent to those skilled in the art by referencing the accompanying drawings.",{"@attributes":{"id":"p-0015","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0018"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0018","num":"0019"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0019","num":"0020"},"figref":"FIG. 3C"},{"@attributes":{"id":"p-0020","num":"0021"},"figref":"FIG. 3D"},{"@attributes":{"id":"p-0021","num":"0022"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0022","num":"0023"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0023","num":"0024"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0025"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0025","num":"0026"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0026","num":"0027"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0027","num":"0028"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0028","num":"0029"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0029","num":"0030"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
