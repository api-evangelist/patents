---
title: System and method for recording and displaying a graphical path in a video game
abstract: A system and method for recording and displaying a graphical path in a video game is provided. Upon initiation of a time-trial run, the player views a color-coded previous game path that dynamically changes color based upon a current elapsed time associated with the time-trial run, elapsed times associated with the previous game path, and character states associated with the previous game path. The previous game path may include, but is not limited to, a “best time” path, a “worst time” path, and an “average time” path. In one embodiment of the invention, the player may gauge game progress as measured against the “best time” path as displayed via a series of path markers, and subsequently varies player character input controls to optimize performance against a player character associated with the “best time” path.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08133115&OS=08133115&RS=08133115
owner: Sony Computer Entertainment America LLC
number: 08133115
owner_city: Foster City
owner_country: US
publication_date: 20031022
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE DRAWINGS"],"p":["1. Field of the Invention","This invention relates generally to computer-generated images and more particularly to a system and method for recording and displaying a graphical path in a video game.","2. Description of the Background Art","One appealing aspect of video games is competition. Presently video game developers develop games that capitalize upon the competitive nature of many game players by recording aspects of a previous \u201cbest game\u201d run, and then allowing subsequent game players access to \u201cbest game\u201d run data. That is, subsequent players may compete against performances of previous players. The \u201cbest game\u201d run may be, for example, based upon a fastest time, most points accumulated, a most efficient use of player character energy reserves, or any combinations of these attributes.","In such video games, a player character associated with a previous \u201cbest game\u201d run may be simultaneously displayed with a current player character on a graphical display. Thus, a current player may observe a position of the player character associated with the previous \u201cbest game\u201d run, and directly compete with this \u201cbest\u201d character. Although the current player may observe a single position of the \u201cbest\u201d character at any given time, the current player does not observe data associated with a path of the \u201cbest\u201d character. A current player character with access to path data associated with a previous \u201cbest game\u201d run may be able to use the path data during game play.","It would be advantageous to implement a system and method for recording and dynamically displaying a graphical path associated with a previous game run, such as a previous \u201cbest game\u201d run, thereby allowing a subsequent player of the video game to base competitive game decisions upon a previous game graphical path, and other data associated with the previous game graphical path.","In accordance with embodiments of the present invention, a system and method is disclosed to record and display a graphical path in a video game. The method comprises initiating a current video game session, retrieving graphical path data associated with a previous game run, displaying the graphical path data as a string of path markers, and determining a color for each path marker of the string of path markers based upon an elapsed time of the current video game session, an elapsed time associated with the path marker, and a character state associated with the path marker.","In one embodiment of the present invention, the method comprises selecting a color cfor a path marker if an elapsed time associated with the path marker is greater than an elapsed time of the current video game session. In a further embodiment of the invention, the method comprises selecting a color for each path marker with an elapsed time less than or equal to the elapsed time of the current video game session, based upon a character state associated with the path marker. The character states may comprise an \u201con the ground\u201d state, an \u201cairborne\u201d state, and a \u201ccrashed\u201d state.","In another embodiment of the present invention, the method generates a current graphical path data associated with the current video game session, and stores the current graphical path data as \u201cbest time\u201d run graphical path data if a total elapsed time of the current video game session is less than a total elapsed time associated with a previous \u201cbest time\u201d run.","In a further embodiment of the present invention, the method generates graphical path data including path markers spaced apart by a predetermined player character travel distance. For example, when a player character travels a predetermined distance s from a previous path marker, a new path marker is generated.","A system of the present invention comprises a memory configured to store game instructions, a data cache configured to store graphical path data associated with a current video game session and one or more previous game runs, a processor configured to retrieve the graphical path data associated with a selected previous game run and to execute the game instructions for generating a string of path markers associated with the selected previous game run, and a display device configured to display the string of path markers. In a further embodiment, the processor is configured to determine a color for a path marker of the string of path markers based upon an elapsed time of the current video game session, an elapsed time associated with the path marker, and a character state associated with the path marker.","In further embodiments of the present invention, the graphical path data may be associated with previous game runs, including, but not limited to, previous \u201cbest time\u201d runs, previous \u201cworst time\u201d runs, previous \u201caverage time\u201d runs, and selectively chosen runs associated with a current game player or other game players.","In a video game, a game player maneuvers a player character through a game environment from a starting point to an end point. For example, the player character traverses a racecourse in a time trial mode. Video game software records a path of the player character as it moves from the starting point to the end point. The path is recorded as a series of points represented by (x,y,z) Cartesian coordinates, for example. The game software also records a total time that it takes the player character to arrive at the end point, and an elapsed time to each point in the path. For example, the elapsed time may be measured from an initial starting time associated with the starting point. The game software may also record other data at each point along the player character's path including, but not limited to, a magnitude and a direction of each force acting on the player character, an instantaneous energy consumption by the player character, a total energy consumption by the player character, and a player character travel state. In one embodiment of the present invention, the player character travel state may indicate that the character is \u201cairborne,\u201d \u201con the ground,\u201d or \u201ccrashed.\u201d Other player character states may be utilized in further embodiments.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","100","110","112","111","113","114","116","118","120","122","124","126","100","128","132","134","136","146","116","100","100","100"]},"A user of the system  provides instructions via the controller interface  to the CPU . For example, the user may instruct the CPU  to store certain game information on the memory card  or may instruct a character in a game to perform some specified action. Other devices may be connected to the system  via the USB interface  and the IEEE 1394 interface .","The CPU , the VPU , the GPU  and the IOP  communicate via a system bus . The CPU  communicates with the main memory  via a dedicated bus , and with the data cache  via a dedicated bus . The VPU  and the GPU  may also communicate via a dedicated bus . The CPU  executes programs stored in the OS ROM  and the main memory . The main memory  may contain pre-stored programs and may also contain programs transferred via the IOP  from a CD-ROM, a DVD-ROM or other optical disc (not shown) using the optical disc control unit . The IOP  controls data exchanges between the CPU , the VPU , the GPU  and other devices of the system , such as the controller interface . The SPU  executes instructions to produce sound signals that are output on an audio device (not shown). Alternative embodiments may provide different communication paths between the various components.","In one embodiment of the present invention, the CPU  stores and retrieves data associated with previous paths or runs (such as a \u201cbest time\u201d run) in the data cache . The data cache  is discussed further below in conjunction with . For example, the CPU  may retrieve data associated with a \u201cbest time\u201d path generated by a developer of the game software and permanently stored on a game disc. The CPU  may instruct the optical disc control unit  to read the game disc. Thus, players may test themselves against the \u201cbest time\u201d and learn an efficient path through the game environment. In addition, a player's \u201cbest time\u201d path or any other paths may be stored on the memory card , such as a removable flash card. The player then has an option, upon initiation of a new game session, of either racing against a \u201cbest time\u201d path as stored on the memory card , or any other recorded path to compete against.","When the player begins a new run of a racecourse, the game software retrieves recorded data associated with a selected previous run, and then displays the data on a game screen as the character moves through the game environment, allowing the player character to race against the previous run. The GPU  executes drawing instructions from the CPU  and the VPU  to produce images for display on a display device (not shown). Typically, the VPU  transforms objects from three-dimensional coordinates to two-dimensional coordinates, and sends the two-dimensional coordinates to the GPU .","In one embodiment of the present invention, the game software displays the data associated with the previous run, such as previous run data, as a string of dynamically changing colored path markers situated in the game environment. In another embodiment of the present invention, the string of colored path markers displays a game developer's \u201cbest time\u201d path through the game environment. In a further embodiment, the string of colored path markers displays a previous run path through the game environment by one game player from a group of game players.","In one embodiment of the present invention, a path marker's color conveys information. For example, when the player selects a racecourse, the game software retrieves recorded data associated with a \u201cbest time\u201d path before the current player character begins a time trial run, and displays a string of path markers. Each path marker of the string of path markers is initially a color c. In one embodiment of the present invention, the color cis gray. However, any color may represent the color c. In this embodiment, a path marker colored gray indicates that a player character associated with the \u201cbest time\u201d run (hereinafter referred to as the \u201cbest time\u201d player character) has not yet reached the path marker's position at a given elapsed time. Thus at any given elapsed time during game play, if the current player character is ahead of the \u201cbest time\u201d player character, then the current player observes a string of path markers colored gray that represent the \u201cbest time\u201d path.","However, if the current player character is behind the \u201cbest time\u201d player character at any given elapsed time, then the current player observes path markers of a different color. For example, a path marker may change from the color cto a color cwhen the \u201cbest time\u201d player character is positioned at the path marker and is traveling on the ground. In addition, a path marker may change from the color cto a color cwhen the \u201cbest time\u201d player character is positioned at the path marker and is traveling in the air. Finally, a path marker may change from the color cto a color cwhen the \u201cbest time\u201d player character is positioned at the path marker and is crashed. In exemplary embodiments of the present invention, the color cis green, the color cis blue, and the color cis red. The scope of the present invention covers other colors for the above-described path markers. Further, other colored path markers may represent alternate player character states, such as an energy level, an applied force magnitude, and an applied force direction, for example.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 2","FIG. 1"],"b":["111","111","210","220","210","210","220","210","210","210","220","210","220","111"],"sub":["x","y","z"]},"In an exemplary \u201cbest time\u201d embodiment of the present invention, the CPU  () executes the video game software. In this embodiment of the invention, the previous sub-cache  is a \u201cbest time\u201d sub-cache . The CPU  generates and records path markers based upon a distance a player character travels. For example, upon initiation of a time-trial run, when a \u201cbest time\u201d path does not yet exist, the CPU  executes video game instructions that determine when a player character has traveled a predefined distance s from a starting point. The CPU  then generates a path marker 1 associated with the distance s, and may store the following data associated with the path marker 1 in the \u201cbest time\u201d sub-cache  (): (x,y,z) coordinates of the path marker 1, an elapsed time t at the path marker 1, a player character state at the path marker 1, a player character speed at the path marker 1, net resultant forces (Fx,Fy,Fz) acting on the player character at the path marker 1, and an instantaneous work performed by the player character at the path marker 1. According to exemplary embodiments of the present invention, the player character state may indicate whether the player character is on the ground, in the air, or crashed at the path marker 1. Alternative embodiments may comprise additional or different states.","As the player character proceeds along the time-trial run for the above example, the CPU  repeats the above-described process of generating and storing data associated with new path markers in the \u201cbest time\u201d sub-cache . Preferably, each new path marker is located at a predefined player character travel distance s from a previous path marker position.","Continuing with the above example in one embodiment of the present invention, if the player character crashes before the player character travels the predefined distance s measured from the previous path marker, then the CPU  generates a path marker at or near the crash site, and stores the data associated with the crash site path marker in the \u201cbest time\u201d sub-cache .","In an alternate embodiment of the present invention, the CPU  generates and stores data associated with new path markers in the \u201cbest time\u201d sub-cache , where new path markers are separated by a predefined time interval.","In one embodiment, if the player decides to repeat the time-trial run, the CPU  retrieves the data from the \u201cbest time\u201d sub-cache , and displays a string of path markers on the display device (not shown). The string of path markers indicates the player character's path recorded during the \u201cbest time\u201d run. In one embodiment of the present invention, the \u201cbest time\u201d path markers initially have a color c. As the current player character initiates the repeat time-trial run, the CPU  generates and records current path markers and data associated with the current path markers to the current sub-cache .","Further, during the repeat time-trial run the CPU  compares a current elapsed time with an elapsed time t retrieved from the \u201cbest time\u201d sub-cache . For each \u201cbest time\u201d path marker with an associated elapsed time t that is less than the current elapsed time, the CPU  changes the \u201cbest time\u201d path marker color based upon the \u201cbest time\u201d player character state associated with the \u201cbest time\u201d path marker. For example, if the \u201cbest time\u201d player character state indicates that the \u201cbest time\u201d player character is on the ground at a given path marker, then the CPU  instructs the GPU  to change the color of the given path marker from cto c. Similarly, if the \u201cbest time\u201d player character state indicates that the \u201cbest time\u201d player character is in the air at the given path marker, then the CPU  instructs the GPU  to change the color of the given path marker from cto c. Finally, if the \u201cbest time\u201d player character state indicates that the \u201cbest time\u201d player character crashed at the given path marker, then the CPU  instructs the GPU  to change the color of the given path marker from cto c.","At the end of the repeat time-trial run, the CPU  compares an elapsed time t associated with the marker m from the current sub-cache  (also referred to as a total elapsed time) with an elapsed time t associated with the marker n from the \u201cbest time\u201d sub-cache  (also referred to as a \u201cbest time\u201d total elapsed time). If the total elapsed time from the repeat time-trial run is less than the \u201cbest time\u201d total elapsed time, then the CPU  overwrites data of the \u201cbest time\u201d sub-cache  with data of the current sub-cache . Thus, data from the repeat time-trial run is now stored in the \u201cbest time\u201d sub-cache . Subsequently, data generated from subsequent time-trial runs and stored in the current sub-cache  are compared to data stored in the \u201cbest time\u201d sub-cache .","In an alternate embodiment, data associated with a \u201cbest time\u201d run may already be stored or predetermined in the \u201cbest time\u201d sub-cache  prior to initiation of the time-trial run. In this embodiment, upon initiation of the time trail run, the CPU  retrieves the data from the \u201cbest time\u201d sub cache  and displays a string of path markers on the display device (not shown) that indicate a path of a \u201cbest time\u201d player character.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 3A","FIG. 3A","FIG. 3A"],"b":["310","310","310","310","310"],"sub":"0"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 3B","FIG. 3A"],"sub":["1 ","1","1"],"b":["310","310"]},"In one embodiment of the present invention, the CPU  () instructs the GPU  () to change the color of each path marker 1-13 from cto another color, dependent upon a \u201cbest time\u201d player character state associated with each path marker, if the elapsed time t associated with each respective path marker is less than or equal to the elapsed time t. For example, in the  embodiment, path markers 1-3 have elapsed times t that are less than or equal to the elapsed time t, and the \u201cbest time\u201d player character states associated with path markers 1-3 indicate that the \u201cbest time\u201d player character is traveling on the ground. Therefore, the GPU  changes color of the path markers 1-3 from a color cto a color c. Consequently, the path markers 4-13 with elapsed times t greater than the elapsed time tremain unchanged. In an alternate embodiment, the path markers 1-3 disappear from the display device (not shown), if the player character  is past the path markers 1-3.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 3C","FIG. 3A"],"sub":["2 ","2","2","2","2","2 ","0 ","1","2 ","0 ","2","1 ","2 "],"b":["310","310","114","114"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 3D","FIG. 3A","FIGS. 3A-3D"],"sub":["3 ","3","3","3","3 ","0 ","1","3 ","0 ","2","3 ","0 ","3","1","2","3 ","3 "],"b":["310","310","114","114","114"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 3E","FIG. 3E"],"sub":["4 ","4","1 ","1 ","1 ","4","0 ","4 ","4"]},"In operation, the present invention allows a player to view a color-coded \u201cbest time\u201d path that dynamically changes color dependent upon (1) a current elapsed time t associated with a current time-trial run as compared to elapsed times recorded in a \u201cbest time\u201d run and (2) \u201cbest time\u201d player character states. Thus, the player can quickly gauge game progress as measured against a \u201cbest time\u201d, and subsequently optimize variations on player character input controls as determined by viewing the \u201cbest time\u201d player character state via color-coded path markers.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 4","FIG. 1","FIG. 1","FIG. 1"],"b":["405","100","120","112"]},"In step , the player decides whether to race against a previous run via inputs to the controller interface . If, in step , the player decides to race against the previous run, then the CPU  retrieves previous run path data from the memory card  () or the previous sub-cache  (). In one embodiment of the invention, the previous run is a \u201cbest time\u201d run. Then, in step , the CPU  instructs the GPU  () to display the previous run path data, including path markers representing the previous run path, on a display device (not shown). In one embodiment of the present invention, the path markers initially have a color c.","In step , the player initiates game play in a time-trial mode, and the CPU  instructs the GPU  to dynamically change graphical content of the path markers as a player character traverses a course associated with the selected time-trial event. In one embodiment of the present invention, the graphical content of the path markers includes path marker coloration. For example, the CPU  compares an elapsed time of the time-trial event with elapsed times associated with the previous run path markers, and changes colors of those previous run path markers with elapsed times less than or equal to the elapsed time of the present time-trial event. According to one embodiment, the color of a given path marker changes from the color cto a color cif a player character associated with the previous run event (i.e., the previous run player character) is in contact with the ground at the given path marker. In another embodiment, the color of a given path marker changes from the color cto a color cif the previous run player character is airborne at the given path marker. In yet a further embodiment, the color of a given path marker changes from the color cto a color cif the previous run player character crashed at the given path marker.","In addition, the CPU  stores path data associated with the present time-trial event in the current sub-cache  (). The path data comprises (x,y,z) position of time-trial event path markers, elapsed time at each time-trial event path marker, player character state at each time-trial event path marker, and other data important to graphical path characterization. Path data may comprise other or different attributes depending on the nature of the game.","In step , the CPU  compares a total elapsed time of the completed time-trial event with a total elapsed time of the previous run event. In step , the CPU  records data associated with the completed event as previous run path data in the previous sub-cache . In one embodiment in which the previous run event is a \u201cbest time\u201d event, if the CPU  determines that the total elapsed time of the completed time-trial event is less than the total elapsed time of the \u201cbest time\u201d event, then the CPU  transfers the path data of the completed time-trial event from the current sub-cache  to the previous sub-cache , overwriting any \u201cbest time\u201d data stored in the previous sub-cache . Alternatively, the current run data may be stored as a previous run data in any of a plurality of previous \u201cnon-best time\u201d sub-caches (not shown). Finally, the player decides whether to race again in step . If the player decides to race again, then the method continues at step . However, if the player decides to not race again, the method is complete.","Referring back to step , in another embodiment of the present invention the player may instruct the CPU  to store the path data of the completed time-trial event on the memory card  () to be retrieved at a later time when the player reloads the video game for another session. Finally, referring back to step , if the player decides not to race against a previous run event, then in step  the player initiates and completes game play in a time-trial mode, and the CPU  stores path data collected during the time-trial event in the previous sub-cache . The method then continues at step .","The present invention has been described above with reference to exemplary embodiments. Other embodiments will be apparent to those skilled in the art in light of this disclosure. For example, the CPU  may store and retrieve data from \u201cnon-best time\u201d sub-caches associated with \u201cnon-best time\u201d game paths, including, but not limited to, \u201cworst time\u201d paths associated with a current player or any player, \u201caverage time\u201d paths associated with a current player or any player, a previous path of a current player selected from one or more previous paths, or a previous path of another player selected from one or more of the other player's previous paths. The game software then displays the data stored in the \u201cnon-best time\u201d sub-caches as a string of dynamically changing colored path markers in which each path marker's color conveys information. In one embodiment of the invention, if a current player chooses to race against a \u201cworst time\u201d path, data stored in the \u201cworst time\u201d sub-cache is overwritten with data from the current player's game run if the total elapsed game time associated with the current player's game run is greater than the total elapsed time stored in the \u201cworst time\u201d sub-cache. In other embodiments of the invention, a current player selectively chooses whether to save data associated with a completed current game run in any of the sub-caches. For example, a current player may selectively choose not to allow data associated with a completed current game run to be compiled with the data stored in an \u201caverage time\u201d sub-cache.","The present invention may readily be implemented using configurations other than those described in the preferred embodiments above. In addition, the present invention may be utilized in any type of racing game such as, but not limited to, car racing, horse jumping, air racing, etc., and any type of non-racing video game, such as action and adventure video games, for example. Therefore, these and other variations upon the preferred embodiments are intended to be covered by the present invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 3B","FIG. 3A"],"sub":"1 "},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 3C","FIG. 3A"],"sub":"2 "},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 3D","FIG. 3A"],"sub":"3 "},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3E","sub":"4 "},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
