---
title: Method and apparatus for integration of URL into standard file systems
abstract: Embodiments of the present invention are directed to a method and apparatus for integration of URL's into standard file systems of a local computer. In one embodiment of the present invention, the file system (e.g., a Uniform File System (UFS)) of a local computer is integrated with an Internet protocol, such as the Hyper Text Transport Protocol (HTTP). Once the protocol has been integrated into the file system of the local computer, applications running on local computer can access any Web based documents under that protocol. Thus, the local applications (and/or users) can access these Web based documents (and/or files) as if they are local files even though the documents are actually located on the Internet (and away from the local computer). In a further embodiment, the applications (and/or users) are able to access these Web based documents by utilizing a relating apparatus that relates the applications (and/or users) to their corresponding Web based documents.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07448032&OS=07448032&RS=07448032
owner: Sun Microsystems, Inc.
number: 07448032
owner_city: Santa Clara
owner_country: US
publication_date: 20020522
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","The present invention relates to the field of computer file processing and, in particular, to a method and apparatus for integrating Uniform Resource Locators (URL's) into standard file systems.","Portions of the disclosure of this patent document contain material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office file or records, but otherwise reserves all copyright rights whatsoever.","Sun, Sun Microsystems, the Sun logo, Solaris and all Java-based trademarks and logos are trademarks or registered trademarks of Sun Microsystems, Inc., in the United States and other countries. All SPARC trademarks are used under license and are trademarks of SPARC International, Inc., in the United States and other countries. Products bearing SPARC trademarks are based upon an architecture developed by Sun Microsystems, Inc.","2. Background Art","To access files on the Internet, currently one needs the aid of a browser software to navigate from one file to another. The browser is able to navigate the Internet by using Uniform (or previously Universal) Resource Locators (URL's) and certain Internet protocols, such as Hyper Text Transport Protocol (HTTP), File Transfer Protocol (FTP) or possibly others to come. URL's are strings that specify the location of files on the Internet. URL's can appear in a browser's bookmarks or they can be quoted from messages or documents viewed by the browser. Shown below are examples of a HTTP URL and a FTP URL:\n\n","There are times when a file on the Internet needs to be accessed by an application stored on the local computer without the necessity to download such file into the local computer. For example, there may not be enough persistent storage space (e.g., space in a disk drive, a memory stick, a tape drive, etc.) in the local computer to download all the needed files. Currently, the use of the browser as an intermediary is necessary before the application on the local computer is able to access the file on the Internet.","The use of the browser as an intermediary has certain disadvantages. For example, before the browser can properly function as an intermediary, it must be configured to recognize the common extension on the file and associate some applications to it (for example the browser needs to recognize .pdf is associated with an acroread application). However, certain extensions on the file cannot be configured to be recognized by the browser and certain applications stored on the browser cannot be configured onto the browser.","Accordingly, it would be advantageous and desirable to provide a method and system that allows a file on the Internet to be accessed by an application stored on the local computer without the use of the browser as an intermediary and without downloading the file into a persistent storage of the local computer. The persistent storage is referred to here as a storage on the local computer that can be used to permanently store a file into the local computer.","Embodiments of the present invention are directed to a method and apparatus for integration of Uniform Resource Locators (URL's) into standard file systems of a local computer. In one embodiment of the present invention, the file system (e.g., a Uniform File System (UFS)) of a local computer is integrated with a Web Protocol, such as the Hyper Text Transport Protocol (HTTP), File Transfer Protocol (FTP), etc.","In an embodiment of the present invention, a computer system includes a public network and a Uniform Resource Locator (URL). A local file system is connected with the URL via the public network. The URL is connected with said local file system without using a browser as an intermediary. A standard file system protocol is configured within the local file system. An Internet protocol is encapsulated within said standard file system protocol. The computer system also contains persistent storage for permanently storing downloaded files within the local file system. The URL is treated as a local file in the encapsulated local file system without actually downloading the URL into the persistent storage.","A caching mechanism may also be implemented within the computer system. The caching mechanism allows users on the computer system to access and share cached files in a confidential manner.","In a further embodiment, users (and\/or applications within the computer system) are able to access the files on the Internet by utilizing a relating (or connecting) apparatus that relates (or connects) the applications (and\/or users) to their corresponding Internet based files.","A more complete understanding of the present invention will be afforded to those skill in the art, as well as a realization of additional advantages and objects thereof, by a consideration of the following detailed description of the embodiment. Reference will be made to the appended sheets of drawings, which will first be described briefly.","In the following description, numerous specific details are set forth to provide a more thorough description of embodiments of the invention. It is apparent, however, to one skilled in the art, that the invention may be practiced without these specific details. In other instances, well known features have not been described in detail so as not to obscure the invention.","Embodiments of the present invention are directed to a method and apparatus for integration of URL's into standard file systems of a local computer. In one embodiment of the present invention, the file system (e.g., a Uniform File System (UFS)) of a local computer is integrated with an Internet protocol, such as the Hyper Text Transport Protocol (HTTP), File Transfer Protocol (FTP), etc. Once the protocol has been integrated into the file system of the local computer, applications running on the local computer can access any Web based documents (or files) under that protocol. Thus, the local applications can access these Web based documents (or files) as if they are local files even though the documents are actually located on the Internet (and away from the local computer).","Multi-Tier Application Architecture","An embodiment of the invention can be implemented within a multi-tier application architecture computer system.","In the multi-tier application architecture, computers can be categorized as two types: servers and clients. Computers that provide data, software and services to other computers are servers; computers that are used to connect users to those data, software and services are clients. In operation, a client communicates, for example, requests to a server for data, software and services, and the server responds to the requests. The server's response may entail communication with a file management system for the storage and retrieval of files.","The multi-tier architecture includes at least a file tier that includes a file server; an application tier that includes an application server and application logic (i.e., software application programs, functions, etc.); and a client tier. The application server responds to application requests received from the client. The application server forwards file requests to the file (or database) server.",{"@attributes":{"id":"p-0037","num":"0038"},"figref":"FIG. 1","b":"100"},"Other functionality may be provided by an application server  in application tier . The apportionment of functionality between client tier  and application tier  is dependent upon whether a \u201cthin client\u201d or a \u201cthick client\u201d topology is desired. In a thin client topology, the client tier  (i.e., the end user's computer) is used primarily to display output and obtain input while the computing takes place in other tiers. A thick client topology, on the other hand, uses a more conventional, general purpose computer which has processing, memory, and file storage abilities. File (or database) tier  contains the data or files accessed by the application logic in application tier . File (or database) server  manages the file and\/or its structure, as well as the operations that can be performed on the file and\/or its structure.","Application server  can include applications such as a corporation's scheduling, accounting, personnel and payroll applications. Application server  manages requests for the applications that are stored therein. Application server  can also manage the storage and dissemination of production versions of application logic. File server  manages the database(s) that manage files (or data) for applications. For example, file server  responds to requests to access the scheduling, accounting, personnel and payroll application files.","Connection  is used to transmit data between client tier  and application tier , and may also be used to transfer the application logic to client tier . The client tier can communicate with the application tier via, for example, a Remote Method Invocator (RMI) application programming interface (API) available from Sun Microsystems\u2122. The RMI API provides the ability to invoke methods (or software modules) that reside on another computer system. Parameters are packaged and unpackaged for transmittal to and from the client tier. Connection  between application server  and file server  represents the transmission of requests for data and the responses to such requests from applications that reside in application server .","Elements of the client tier, the application tier and the file tier (e.g., client , application server  and file server ) may execute within a single computer. However, in a typical system, elements of the client tier, the application tier and the file (or database) tier may execute within separate computers interconnected over an internal network such as a LAN (local area network) or WAN (wide area network).","One embodiment of the invention is used as part of a thin client architecture system.  shows an example of a thin client topology called a virtual desktop system architecture. The virtual desktop system architecture provides a re-partitioning of functionality between a central server installation  and end user client hardware . At the user client end, all functionality is eliminated except that which generates output to the user (e.g., display and speakers) and takes input from the user (e.g., mouse and keyboard) or other peripherals with which the user may interact (e.g., scanners, cameras, removable storage, etc.). The output is provided to a terminal referred to here as a \u201cHuman Interface Device\u201d (HID). The HID is capable of receiving and displaying the data. All computing services are done by the central server installation  and the computing services are done independently of the destination of the data being generated.","The computing services are not tied to a specific computer, but may be distributed over one or more traditional desktop systems, such as described in connection with , or with traditional servers. One computer may have one or more services and a service may be implemented by one or more computers. The services are provided to HID's and the services are under the control of a common authority or manager. In , the services are provided by computers , , and .","The computer system (providing the services) can connect directly to the HID's through the interconnect fabric. It is also possible for the service producer to be a proxy for another device providing the computational service, such as a file server computer in a three-tier architecture, where the proxy computer might only generate queries and execute user interface code.","The interconnect fabric can comprise any of multiple, suitable communication paths for carrying data between the services and the HID's. In one embodiment the interconnect fabric is a local area network implemented as an intranet or Ethernet network. Any other local network may also be utilized. The invention also contemplates the use of wide area networks, the Internet, the World Wide Web, and others. The interconnect fabric may be implemented with a physical medium, such as a wire or fiber optic cable, or it may be implemented in a wireless environment.","In general, the Internet is referred to as an unstructured network system that uses Hyper Text Transfer Protocol (HTTP) as its transaction protocol. An internal network, also known as intranet, comprises a network system within an enterprise. The intranet within an enterprise is typically separated from the Internet by a firewall. Basically, a firewall is a barrier to keep destructive services on the public Internet away from the intranet.","The internal network  (e.g., the intranet) provides actively managed, low-latency, high-bandwidth communication between the HID and the services being accessed. One embodiment contemplates a single-level, switched network with cooperative (as opposed to competing) network traffic. Dedicated or shared communication interconnects may be used in the present invention.","The HID is the means by which users access the computational services provided by the services.  illustrates HID's ,  and . Each HID comprises a display , a keyboard , a mouse , and audio speakers . The HID includes the electronics needed to interface these devices to the internal network  and to transmit to and receive data from the services.","A block diagram of an example embodiment of the HID is illustrated in . The components of the HID are coupled internally to a PCI bus . Network control block  communicates to the internal network, such as an Ethernet or intranet, through line . An audio codec  receives audio data on interface  and is coupled to network control block . USB data communication is provided on lines  to a USB controller . The HID further comprises an embedded processor  such as a Sun Microsystems Sparc2ep with coupled flash memory  and DRAM . The USB controller , the network control block  and the embedded processor  are all coupled to the PCI bus . A video controller , also coupled to the PCI bus , can include an ATI RagePro+ frame buffer controller, which provides SVGA output on the line . NTSC data is provided in and out of the video controller through video decoder  and encoder , respectively. A smartcard interface  may also be coupled to the video controller .","Alternatively, the HID can comprise a single chip implementation, as illustrated in . The single chip includes the necessary processing capability implemented via CPU  and graphics renderer . Chip memory  is provided along with video controller\/interface . An internal bus (USB) controller  is provided to permit communication to a mouse, a keyboard and other local devices attached to the HID. A sound controller  and an interconnect interface  are also provided. The video interface shares memory  with the CPU  and graphics renderer . The software used in this embodiment may reside locally in on-volatile memory or it can be loaded through the interconnection interface when the device is powered.","Encapsulation of Internet Protocols","In some internal network computer systems (e.g., thin client architectures) much of a user's data and computation is maintained and performed at a remote location away from the client using a server. When all of the data or computation necessary for a user's task is handled by a server, the user may easily interact with the system at different locations with an enterprise using different clients via the internal network. However, some applications require or prefer some data or computation to be handled at the client. In either case, prior art methods require the use of a browser to act as an intermediary before applications stored on the local system (i.e., clients and\/or servers within an enterprise) are able to access files not locally stored on the local system. The browser is able to locate and access files on the Internet by the use of Uniform (or previously Universal) Resource Locators (URL's). URL's are strings that specify the locations of objects (e.g., files) on the Internet. A URL can appear as a HTTP URL and\/or a File Transfer Protocol (FTP) URL shown respectively below:\n\n",{"@attributes":{"id":"p-0053","num":"0056"},"figref":["FIG. 6","FIG. 6"],"b":["1630","1620","1610","1620","1610","1640","1610","1630","1600","1610","1600"]},"Referring now to the example flowchart shown in , a local file system  is provided to the local computer  (step ). A standard file system protocol or protocols  are then provided to the local file system  (step ). An Internet protocol or protocols  are then encapsulated into the file system  (e.g., into the standard file system protocol(s) ) (step ). The local file system  is then connected with a public network (e.g., the Internet or the Web) step ). A URL or URL's are then provided to the local file system  via the public network without the use of a browser (step ). The URL or URL's are then treated by the local file system  as a standard file or files  in the local file system , even though the URL or URL's have not been downloaded into the persistence storage of the local file system  (step ).","In another embodiment (referring now to ), a file system  of a local client  is encapsulated with Internet protocols  (e.g., HTTP or FTP). This encapsulation allows URL's A on the Internet (under the encapsulated Internet protocols) to be treated as if they are regular files B stored in the client . Thus, files A on the Internet  (and away from the client ) can now be accessed by an application  on the client  without using the browser  as an intermediary.","In a further embodiment (referring now to ), Internet protocols  are encapsulated into the file system A (e.g., a network file system\u2014NFS) of a server  within an intranet . The encapsulated file system A is now called the Web Filesystem. Once the server's file system A has been encapsulated and becomes the Web Filesystem, files A on the Internet  (such as \u201chttp:\u201d or \u201cftp:\u201d files) could be accessed by the server  as if they were local B to the server . In yet a further embodiment, the server  is configured to export files (e.g., B) in its Web Filesystem A to a plurality of clients (A, B, and C) via the intranet . Each of the clients (e.g., client A) is configured to treat the files (e.g., B) in the Web Filesystem A as if the files (e.g. A) are in the local file system B for that client (e.g., A). Because the files (e.g., files B) are shared by the clients (A, B, and C) through intranet  using NFS protocols (such as tcp\/ip or UDP), the files (e.g., files B and C) are secured from the destructive forces outside the intranet . Accordingly, for example, a HTTP URL (e.g., a file in A):\n\n","In one embodiment, the server comprises a Web Filesystem (Webfs) server so that the local Operating Environment of each of the clients connected with the Webfs server becomes a Webfs client for receiving services from Webfs server. The services include allowing the user to access the files on the Web Filesystem as if the files were local to the Webfs client. In a further embodiment, a caching mechanism is implemented on the Webfs client.","Referring now to the example flowchart shown in , a local server file system A is provided to the local server  (step ). A standard file system protocol or protocols are then provided to the local server file system A (step ). An Internet protocol or protocols are then encapsulated into the server file system A (e.g., into the standard file system protocol(s)) (step ). The local server file system A is then connected with a public network  (e.g., the Internet or the Web) step ). A URL or URL's A are then provided to the local server file system A via the public network  without the use of a browser (step ). The URL or URL's A are then treated by the local server file system A as a standard file or files B in the local server file system A, even though the URL or URL's A have not been downloaded into the persistence storage of the local server  (step ). The local server  is then connected with a client B via a local network  (e.g., the intranet). The URL or URL's A are then provided to the client B via the local network  (step ). The URL or URL's A are then treated as a local file or files C of the client B (step ).","Directory and Listing of File System","When Internet files are made accessible by the local machine, the notion of directory and listing on the local machine needs to be developed. In one embodiment of the present invention, tree structures of a directory and files are developed. Tree structures are necessary to allow applications (or users) on the local machine to locate a directory and to list the files and subdirectories therein.","Typically, URL's on the Internet has an organized directory structure, but this structure often does not have a listing capability (i.e., it cannot list files and subdirectories under the main directory). Thus, a user (or an application) on the local machine cannot use the directory structure on the Internet to determine which files and sub-directory exits below the main directory. In one embodiment of the present invention, a Webfs locator (or relator) in the local machine is developed and used to relate an application (or a user) on the local machine to its corresponding file on the Webfs.","Thus, according to the example flowchart shown in  (which is similar to the examples shown in  and\/or , with the addition that) a user is related to its corresponding URL or URL's (in step ) after the URL or URL's have been provided to the local file system (in step ).","In one embodiment, when a file is accessed on the Internet following a user operation, the caching mechanism (implemented) on a Webfs client will put that file into its local caching (non-persistent) memory. This causes some portion of the Internet (the file(s) recently accessed) to have a local existence. The local computer standard directory listing command (\u201cls\u201d) could then be used to view Internet (or web) file (or document) that has this local existence. Accordingly, the local caching mechanism will have a directory structure that maps to the Internet (web) in a way that is meaningful to users. Thus, according to the example flowchart shown in  (which is similar to the chart shown in , with the addition that) a directory list command is used (in step ) to relate a user to its corresponding URL or URL's (in step ) after the URL('s) have been provided to the local file system (in step ).","In yet a further embodiment, the caching mechanism comprises a webfscache. All Internet files retrieved by a user are first placed into the webfscache and tagged with that user's identification (e.g, user id or UserA or uid1). The webfscache has a directory structure that is closely matched with the local file system (e.g., the Webfs in the Webfs server). The webfscache may also comprise bookkeeping information (such as how long a locally cached copy of the Internet based file is valid, how long a locally cached copy is to be kept, etc.).","The user (User A or uid1) is only shown the files available on the Web Filesystem (Webfs) and is not aware if any of such files has been cached. User A can browse Webfs to look for files on the Internet (URL's) already accessed before. When the user (e.g., User A) wants to use a file that has been cached, it (e.g., User A) uses the file as if it was a local file. In another embodiment, a second user (e.g., User B or umd2) on a second Webfs client is also connected to the Webfs server. If that second user (e.g., User B) wants to access the same file, then both users (e.g., User A and User B) will share the cached file copy, but the Webfs server will not make the sharing apparent (except that the second user, using the cached copy of the first user, will see a faster response). In yet another embodiment, the cached files are stored in a read only Webfs.","A typical user session (having a list command (\u201cls\u201d) that relates a cached file) is shown below:",{"@attributes":{"id":"p-0067","num":"0074"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"$ cd \/"},{"entry":"$ ls www.sun.com"},{"entry":"$ \u2003\u2003(\u201cls\u201d cannot relate to the file in \u201cwww.sun.com\u201d because it has not"},{"entry":"\u2009\u2002\u2003\u2003been cached)"},{"entry":"$ wc www.sun.com\/awebdocument (the file is accessed on the Webfs by"},{"entry":"\u2002\u2009a command)"},{"entry":"$ \u201cwww.sun.com\/awebdocument\u201d (this is the command output)"},{"entry":"$ ls www.sun.com (user runs \u201cls\u201d again)"},{"entry":"$ \u201cwww.sun.com\/awebdocument\u201d (document now exits and is related)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},"In a further embodiment, the above session can be carried out in a graphical user interface (GUI) based environment. For example, instead of using the above \u201cwc\u201d and command line operations, the present embodiment may allow a user to select or \u201cpull down\u201d a menu on a terminal screen of the machine. Upon selection, the menu provides the user with an accessing dialog box, wherein the user can type the name or path of a Internet file to be accessed.","Accordingly, in the example flowchart shown in  (which is similar to the chart shown in  with the addition that), a URL or URL's are cached (in ) after the URL('s) have been provided to the local file system (in step ). The cached URL('s) are then related to a corresponding user using a list command \u201cls\u201d (in step ). In addition, once the URL('s) have been cached, a second user is allowed access to the cached URL or URL's (in step ).","In another embodiment, the confidentiality between users of the Webfs should be maintained. For example, if UserA wants to access a file that he already accessed before by a Webfs command, such as a \u201cwc\u201d command, the file can be shown to UserA following a \u201cls\u201d command (executed by User A). However, if UserB uses an \u201cls\u201d command on the same directory, UserB would not see the file. However, if UserB tries to access the same file by executing a \u201cwc\u201d command or any other command, then the cached copy is provided to userB by the caching mechanism.","In one embodiment, the confidentiality function can be implemented by storing or caching files under a local file system structure (such as \/tmp\/webcache). When a file (such as www.sun.com\/awebdocument) is accessed by a user (e.g., uid1), Webfs would retrieve all or a portion of the file from the Internet, and would place a local copy of the file into a location (such as \/tmp\/webcache) hidden from all users. For example the file (www.sun.com\/awebdocument) can be placed in the hidden location as shown below:\n\n","Accordingly, in the example flowchart shown in  (which is similar to the chart shown in  with the addition that), a URL or URL's are cached (in ) after the URL('s) have been provided to the local file system (in step ). The cached URL('s) are then related to a corresponding user using a list command \u201cis\u201d (in step ). In addition, once the URL('s) have been cached, a second user is allowed access to the cached URL or URL's (in step ). However, the actual location of the cached URL('s) are hidden from both users (in Step ). Thus, the confidentiality between the users is maintained because the users will not know where the URL('s) are from and that the URL('s) are being shared (in step ).","Having thus described embodiments of the present invention, it should be apparent to those skilled in the art that certain advantages of the within system have been achieved. It should also be appreciated that various modifications, adaptations, and alternative embodiments thereof may be made within the scope and spirit of the present invention. For example, the file systems on a server connected with a client via an intranet have been illustrated, but it should be apparent that the inventive concepts described above would be equally applicable to other types of network systems. The invention is further supported by the following examples."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The drawings illustrate the design and utility of embodiments of the invention. The components in the drawings are not necessarily to scale; instead, emphasis is placed upon illustrating the principles underlying the embodiment. Moreover, features, aspects and advantages of the present invention will become better understood with regard to the following description, appended claims and accompanying drawings where:",{"@attributes":{"id":"p-0017","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0023"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0024"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0025"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0025","num":"0026"},"figref":["FIG. 9","FIG. 6"]},{"@attributes":{"id":"p-0026","num":"0027"},"figref":["FIG. 10","FIG. 8"]},{"@attributes":{"id":"p-0027","num":"0028"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0028","num":"0029"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0029","num":"0030"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0030","num":"0031"},"figref":"FIG. 14"}]},"DETDESC":[{},{}]}
