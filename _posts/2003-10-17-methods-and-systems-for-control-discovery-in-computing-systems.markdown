---
title: Methods and systems for control discovery in computing systems
abstract: Techniques are provided for generically controlling one or more resources associated with at least one computing system. In one aspect of the invention, the technique comprises evaluating one or more performance metrics associated with the one or more resources given one or more configurations of the one or more resources. The technique then causes a change in the one or more configurations of the one or more resources based on the performance metric evaluating step. The one or more performance metrics and the one or more configurations are expressed in generic formats.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07565655&OS=07565655&RS=07565655
owner: International Business Machines Corporation
number: 07565655
owner_city: Armonk
owner_country: US
publication_date: 20031017
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["The present invention relates to computing systems, and, more particularly, to techniques for control discovery in such computing systems.","Enterprise level software, especially middleware, has tens to hundreds of configuration parameters. As one example, the DB2 Universal Database Server from IBM Corporation (Armonk, N.Y.) has approximately 40 performance related configuration parameters (e.g., bufferpool sizes, time delay for writing commits, maximum number of database applications). The problem of configuring and tuning these parameters compounds when operating systems and additional middleware products like HyperText Transfer Protocol (HTTP) Servers and Web Applications Servers are needed to provide a complete system.","These challenges are well recognized, as evidenced by efforts to address them such as IBM Corporation's autonomic computing initiative that is developing self-managing systems. In particular, addressing self-configuration and self-optimization often depends on subtleties in the workload and system configuration.","This motivates the need for a generic approach that discovers the performance impact of configuration parameters by interacting with a target system.","The present invention provides techniques for generically controlling one or more resources associated with at least one computing system.","In one aspect of the invention, the technique comprises evaluating one or more performance metrics associated with the one or more resources given one or more configurations of the one or more resources. The technique then causes a change in the one or more configurations of the one or more resources based on the performance metric evaluating step. The one or more performance metrics and the one or more configurations are expressed in generic formats.","The one or more resources may be real resources and\/or virtual resources. The step\/operation of evaluating the one or more generically-expressed performance metrics may further comprise determining whether one or more performance goals are being met based on the one or more generically-expressed performance metrics.","The technique may further comprise the step\/operation of obtaining the one or more generically-expressed performance metrics from a probe. The probe may measure performance of the one or more resources in the context of a particular workload. The particular workload may be a current workload. The technique may further comprise the step\/operation of obtaining the one or more generically-expressed performance metrics via one or more measurements of at least a part of an end user performance experience. The technique may further comprise the step\/operation of obtaining the one or more generically-expressed configurations associated with the one or more resources prior to changing a configuration. Also, the one or more obtained, generically-expressed configurations may be categorized.","The step\/operation of causing a change in the one or more generically-expressed configurations may further comprise building a model for use in determining changes in the one or more generically-expressed configurations. The model building step may comprise using at least one of a previous performance history and a previous configuration. The model building step may further comprise obtaining performance samples associated with the one or more resources and their one or more current configurations. The step\/operation of causing a change in the one or more generically-expressed configurations may further comprise instructing the one or more resources to change one or more configurations associated therewith.","The technique may further comprise the step\/operation of storing the one or more changed, generically-expressed configurations. Further, the one or more performance metrics and the one or more configurations may be expressed in generic formats in accordance with one or more common generic interfaces. A common generic interface may comprise a Common Interface Model (CIM).","Thus, advantageously, the present invention may provide a generic, online approach to optimizing resource configurations in a closed loop system. For example, the approach may use abstract models such as CIMs to discover metrics and configuration parameters and then modify those configuration parameters using the abstract models.","In another aspect of the invention, a method of providing a service for generically controlling one or more resources associated with at least one computing system comprises a service provider deploying a system operative to: (i) evaluate one or more performance metrics associated with the one or more resources given one or more configurations of the one or more resources; and (ii) cause a change in the one or more configurations of the one or more resources based on the performance metric evaluating step; wherein the one or more performance metrics and the one or more configurations are expressed in generic formats.","These and other objects, features and advantages of the present invention will become apparent from the following detailed description of illustrative embodiments thereof, which is to be read in connection with the accompanying drawings.","It is to be understood that the present invention is not limited to any particular computing system environment. Rather, the invention is more generally applicable to any computing system environment in which it would be desirable to discover the performance impact of configuration parameters associated with one or more computing systems being monitored and controlled.","As used herein, the term \u201cconfiguration\u201d generally refers to settings of parameters that are needed for the operation of a system. This may typically include parameters that take numerical values (e.g., memory pool size, number of threads), and\/or categorical values (e.g., query processing parallelism on\/off), and\/or connections to other resources (e.g., an index for a table in a database). These parameters can include the definition of the system and its' operation or tuning.","For convenience of reference, the remainder of the detailed description will be divided into the following sections: (1.0) Illustrative Generic Control System; (2.0) Illustrative Generic Control Methodologies; (3.0) Illustrative System Processes; (4.0) Illustrative Computer System; and (5.0) Service Provider.","1.0 Illustrative Generic Control System",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1"},"As shown in , environment  comprises user workload ; control domain  including computing system -A which itself includes resource -A and resource -B, computing system -B which itself includes resource -C and resource -D, resource translators -A, -B, -C and -D, and common interface ; probe ; probe translator ; common interface ; and autotune controller  including coordinator , control logic , probe interface , common interface , resource interface , control interface  and data repository . It is to be understood that the invention is not limited to any particular number of control domains, resources, computing systems, probes or controllers. Also, the invention is not limited to the use of an \u201cautotune\u201d controller.","It is to be appreciated that the components shown in , other than the resources being controlled, may be generally referred to herein as a \u201cgeneric control system.\u201d","The components of environment  interact and operate as follows.","Some form of user work (e.g., user workload ) is being done by one or more resources on one or more systems (e.g., resources -A through -D on systems -A and -B). Examples of resources may include computing resources associated with a company payroll system, an airline reservation system workload, or a stock trading system. Also, the resources may be real and\/or virtual resources. By way of example only, a virtual resource may be a virtual memory size or virtual thread as realized by software program, while a real resource may be the actual memory itself.","Workloads may include tasks that the particular systems perform. For example, workload coming from a user could be a transaction (such as placing an order in an e-commerce site) that has to be processed by a database. Thus, in such an example, the resources could be database objects which consume\/occupy some physically constrained resource such as memory, disk space, etc. Examples of such resources in a database are bufferpools and tablespaces.","The time it takes to complete some unit of user work is measured by probe  either in measuring the actual user work or submitting some sample user work itself. Probe  reports the system performance through probe translator  that interprets the specific probe performance information and sends it in a generic format to controller .","Thus, examples of the performance reported via probe  may include response time to a query or transaction rate. This data may be genericized through a virtualization layer, and could be apparent to the controller as a tag-value pair. The controller could have a goal, which could be connected with the performance metric, e.g., maximize (such as throughput) or minimize (e.g. response time). Hence, the controller would not need to know the details of the particular performance metric, other than that it wants to maximize or minimize it.","It is to be appreciated that rather than a probe, other methods of determining at least some part of the end-user performance experience may be employed. For example, direct measurements of user transactions may be obtained, genericized, and then sent to controller .","The generic format being discussed here is the format of the data. So, for example, the response time may be the number of milliseconds stored in 32 bits as an integer, or it may be stored as seconds in 64 bits as a floating point number. The term generic is used here to show that the formatting does not have to be done the same way among different control systems, but within the same control system (or sets of common control systems) it should be presented to the control in the same format. Therefore, the approach provides flexibility and the system is not locked into one way of formatting the data.","Each resource that is being monitored for performance or controlled also has a resource translator (e.g., -A through -D) that can control the resource and express that control in a generic fashion common to all of the other controlled resources on this system or other systems within control domain .","For example, DB2 (IBM Corporation) has a specific way to modify the number of bufferpool page cleaner agents which is different from Oracle (Redwood Shores, Calif.), and both of which are different from Sybase (Dublin, Calif.). While all of these database managers have bufferpool page cleaner agents they have different controls that are specific to each database manager. So, the resource translator converts that database manager's specific format to a generic format so controller  can change the number of bufferpool agents without having to know if the database manager is DB2, Oracle or Sybase.","By way of further example, the specific expression of the number of bufferpool agents in a database is typically through an application programming interface (API) provided by the system\/resource, or through an administrator's console or a specific scripting for a command line interface. The specific expression could be generically expressed through the virtualization layer\/common interface (such as CIM) in approximately the following manner:\n\n","Controller  receives the input from probe  (via common interfaces  and ) and resources -A through -D (via common interfaces  and ) in a generic format. Probe interface  translates the generic information from probe  and expresses it in a controller-specific format. Probe interface  is thus the component of the controller that interfaces with probe , and keeps the history of the probe data in data repository . Resource interface  translates the generic information from the resources and expresses it in a controller-specific format. Resource interface  is thus the component of the controller that interfaces with all of the resources to be monitored and adjusted. The history of this data is also kept in data repository . Probe interface  and resource interface  may be jointly considered a \u201ccontroller translator.\u201d","Thus, controller  may be considered another resource that understands a specific format for data and commands. Resource interface  also changes that specific format to a generic format that the other resource translators within the control domain understand.","Controller  then coordinates (via coordinator ) the information from probe  and resources -A through -D and gives the information to control logic  to determine what changes should be made to the controlled resources. Control logic  makes those resource tuning decisions and requests the changes back through the generic interface (,  and ) to resource translators -A through -D which changes the settings on the specific resource. That is, resource interface  translates data from any controller-specific format to a generic format and passes the generically-expressed data through the common interface to the resource translators, which then respectively translate the data to resource-specific formats for use in changing resource configurations.","An example of control logic  in operation may be in the minimization of a response time (performance metric) for an e-commerce site, using the well-known Nelder-Mead, or direct search approach, see W.H. Press et al., \u201cNumerical Recipes in C: The Art of Scientific Computing,\u201d Cambridge University Press, 2nd edition, January 1993, the disclosure of which is incorporated by reference herein. The optimizing control logic would look at the performance metric. The optimizing control looks at several past measurements of the performance metric at different buffer pool settings, and moves in a direction (of bufferpool sizes in a multi-dimensional space) that is anticipated to further optimize the performance metric.","Control interface  is used for control of the controller, and may normally be used by some human operator or some higher level controller. Data repository  keeps a copy (for some period of time) of the data collected by the controller in a persistent manner.","The following portion of the detailed description explains illustrative methodologies that provide a generic, online approach to optimizing resource configurations in a closed loop system, such as in environment  described above in the context of . The term \u201conline\u201d generally refers to the controlled resource or system being turned on, connected and able to be changed while running (by contrast, an \u201coff-line\u201d approach would be having to turn off the resource connection to the user workloads, or put the resource in a maintenance mode). Further, the illustrative approach may use abstract models such as the Common Information Models (CIMs) to discover metrics and configuration parameters and then modify those configuration parameters using the abstract models. However, the invention is not limited to such models. The methodologies will be described with reference to the components of .","2.0 Illustrative Generic Control Methodologies",{"@attributes":{"id":"p-0043","num":"0046"},"figref":["FIGS. 2A through 2F","FIG. 2A","FIG. 2A","FIGS. 2B through 2F"],"b":"200"},"Control logic  within controller  gets a performance report (step  of ) from probe  through the common interface ( and ). If this is the first performance report (step  of ) then control logic  requests (through generic resource interface  using the common interface  and  which is interpreted by that resource's translator ) a list of performance metrics from all resources (step  of ). Each resource  returns through their translator  a list of performance metrics to control logic . Control logic  then queries each performance metric for every resource within control domain  (step  of ). Thus, control logic  has the overall system performance from probe  and each monitored resource  in the system.","Control logic  then compares the system and\/or individual resource performance (step  of ) to the performance goal(s) set by the administer (step  of ) and logs the performance goal(s) and metrics (step  of ). If the performance goals are being met (step  of ) then control logic  may wait for some period of time or immediately request another performance report (step  of ). If the goals are not being met then control logic  will determine a new configuration (step  of ) for any set of resources needing a change in configuration parameters to improve overall system performance.","If this is the first configuration change (step  of ) then control logic  requests (through generic resource interface  using the common interface  and  which is interpreted by that resource's translator ) a list of configuration parameters from all resources (step  of ). Each resource  returns through their translator  a list of configuration parameters to control logic . Generic resource interface  then groups (categorizes) the configuration parameters into like kinds (step  of ). For example, all memory configuration parameters may be grouped together.","Then, control logic  determines which configuration parameters on which resources need to be modified (step  of ). If this is the first time a change is being made to the resource parameters or if control logic  has determined that the previous model used to make configuration changes is no longer valid (step  of ) then control logic  uses the previous performance history and previous configurations to build a new model of the system (step  of ). Once the model is built, the model is used to determine the configuration settings for any or all of the generically controlled resources (step  of ).","Control logic  then causes the resources to change configuration (step  of ). That is, the resources are told by control logic  to update their configuration parameters through generic resource interface  using the common interface  and  which is interpreted by each resource's translator  (step ). Once all of the changes are made, the new configuration is kept (logged) to build new models in the future (step ).","3.0 Illustrative System Processes","3.1 Model Building","The generic control system of the invention uses a model of the system performance to determine which changes should be made in the resource configuration. There are many ways to build these performance models; the following is just one example.",{"@attributes":{"id":"p-0050","num":"0053"},"figref":["FIG. 3","FIG. 1"],"b":["300","108","108","106","106","310","320","330","340","350","360","370","380"]},"3.2 Evaluate Performance Goals",{"@attributes":{"id":"p-0051","num":"0054"},"figref":"FIG. 4","b":["400","410","420","430","440"]},"3.3 Build Resource Translators",{"@attributes":{"id":"p-0052","num":"0055"},"figref":"FIG. 5","b":["500","510"]},"The resources within the system that need to be monitored are identified (step ) as well as the resources in the system that will be controlled (step ). They do not have to be the same resources but they can be the same. Once those resources are identified, a resource translator (e.g.,  of ) for each resource is created to interpret the specific format and configuration parameters of those resources to the generic interface that was established for the generic control system (step ). A translator is also built for probe  and controller . Each translator is then added to the generic control system (step ).","4.0 Illustrative Computer System",{"@attributes":{"id":"p-0054","num":"0057"},"figref":["FIG. 6","FIGS. 1 through 5","FIG. 6"],"b":["120","114","116","112","118","128","110","106","108"]},"Further, it is to be understood that the individual components\/steps may be implemented on one such computer system, or more preferably, on more than one such computer system. In the case of an implementation on a distributed system, the individual computer systems and\/or devices may be connected via a suitable network, e.g., the Internet or World Wide Web. However, the system may be realized via private or local networks. The invention is not limited to any particular network.","As shown, the computer system  may be implemented in accordance with a processor , a memory , I\/O devices , and a network interface , coupled via a computer bus  or alternate connection arrangement.","It is to be appreciated that the term \u201cprocessor\u201d as used herein is intended to include any processing device, such as, for example, one that includes a CPU (central processing unit) and\/or other processing circuitry. It is also to be understood that the term \u201cprocessor\u201d may refer to more than one processing device and that various elements associated with a processing device may be shared by other processing devices.","The term \u201cmemory\u201d as used herein is intended to include memory associated with a processor or CPU, such as, for example, RAM, ROM, a fixed memory device (e.g., hard drive), a removable memory device (e.g., diskette), flash memory, etc.","In addition, the phrase \u201cinput\/output devices\u201d or \u201cI\/O devices\u201d as used herein is intended to include, for example, one or more input devices (e.g., keyboard, mouse, etc.) for entering data to the processing unit, and\/or one or more output devices (e.g., speaker, display, etc.) for presenting results associated with the processing unit.","Still further, the phrase \u201cnetwork interface\u201d as used herein is intended to include, for example, one or more transceivers to permit the computer system to communicate with another computer system via an appropriate communications protocol.","Accordingly, software components including instructions or code for performing the methodologies described herein may be stored in one or more of the associated memory devices (e.g., ROM, fixed or removable memory) and, when ready to be utilized, loaded in part or in whole (e.g., into RAM) and executed by a CPU.","5.0 Service Provider","It is to be further appreciated that the present invention also comprises techniques for providing generic control services.","By way of example, a service provider agrees (e.g., via a service level agreement or some informal agreement or arrangement) with a service customer or client to provide generic control services. That is, by way of one example only, the service provider may host the customer's web site and associated applications (e.g., e-commerce applications). Then, in accordance with terms of the contract between the service provider and the service customer, the service provider provides generic control services which may comprise one or more of the methodologies of the invention described herein. By way of example, this may include automatically controlling one ore more resources so as to optimize performance of such resources to the benefit of the service customer.","Although illustrative embodiments of the present invention have been described herein with reference to the accompanying drawings, it is to be understood that the invention is not limited to those precise embodiments, and that various other changes and modifications may be made by one skilled in the art without departing from the scope or spirit of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 2A through 2F"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
