---
title: Job management apparatus, job management system, job management method, and storage medium storing program
abstract: In the past, a computer that processes data and an output apparatus that receives the processed data and outputs the same have managed the data differently. Therefore, it has been difficult to correctly grasp job information. According to this invention, logs are obtained from both of a computer that processes data and an output apparatus that outputs the processed data and merged to be managed. Therefore, job information can be managed collectively and correctly.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07420696&OS=07420696&RS=07420696
owner: Canon Kabushiki Kaisha
number: 07420696
owner_city: Tokyo
owner_country: JP
publication_date: 20030410
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS","First Embodiment","Second Embodiment","Third Embodiment","Fourth Embodiment","OTHER EMBODIMENTS"],"p":["1. Field of the Invention","The present invention relates to a peripheral apparatus connected to a network, such as a printer, a scanner, a facsimile machine, a copier and a multifunction peripheral (MFP), and to a computer and a network system which manage such apparatus.","2. Related Background Art","Conventionally, there have been developed job management methods for image processing apparatus that obtain and manage many pieces of job information. For appropriate job management (job account), it is required to obtain information on a job performed in a peripheral apparatus. A conventional method for obtaining job information is as follows. That is, a spooler in a client computer stores data received from a driver and sequentially sends the data to a transmission section in the client computer. The transmission section in the client computer receives print data from the spooler and, if a printer is ready for operation, transmits job data to the device in accordance with a job transfer scheme implemented in the device. Well-known job data transfer schemes are the LPD protocol prescribed in RFC 1179 and Printer Job Language prescribed by the Hewlett-Packard Company in the United States. With Printer Job Language, a port monitor can obtain information including the number of pages concerning a completed job through two-way communication with the device. Of course, a closed proprietary job management method of a printer supplier may be used.","On the other hand, there has been devised a system that allows job information to be transmitted from a peripheral apparatus to a client computer in accordance with the job management method described above, thereby managing a job name or job ID.","In addition, there has been developed a technique of merging, for display, a job in a print server with job information in a host computer based on a job ID generated in a client in a printing system.","However, if the job information is obtained from one of the client which issues a job and the printing apparatus when the client and the printing apparatus obtain different job information, there arises a problem in that job information cannot be totally grasped.","For example, from the job information obtained in accordance with a job management method of the client computer, the document name managed in the client computer can be obtained, while the number of pages of sheets to be ejected cannot be obtained. On the other hand, from the job information obtained in accordance with a job management method of the printing apparatus, the number of pages of sheets to be ejected can be correctly obtained, while information including the document name cannot be obtained in many cases. In such cases, if the document name is essential and needs to be obtained from the job information, the job management method of the client computer has to be adopted. Then, it becomes impossible to obtain correctly the number of pages of sheets to be ejected.","In addition, an old document name, which is job identification information that can be supported by the client, cannot be supported by the printer because of the limit of the number of characters of the document name. Therefore, there is a problem in that, if the old document name is used as a key, the job log cannot be correctly managed.","The present invention has been devised in view of such circumstances. An object of this invention is to totally and correctly grasp information on a job of a computer and a peripheral apparatus.","Furthermore, in order to more correctly grasp utilization of a peripheral apparatus, another object of this invention is to provide a system that realizes correct obtainment of job information by obtaining job information from both a client computer and an image forming apparatus.","In order to attain at least one of the objects, this invention provides the following measures.","This invention provides a job management apparatus for managing a job which is subject to a data processing in a data processing apparatus and can be output from an image forming apparatus, comprising: first obtaining means for obtaining job information processed in the data processing apparatus; second obtaining means for obtaining job information provided by the image forming apparatus processing the job; and managing means for managing the job information obtained by the first obtaining means and the job information obtained by the second obtaining means by combining the two pieces of job information in accordance with one piece of job identification information.","Other features and advantageous of the present invention will be apparent from the following description taken in conjunction with the accompanying drawings, in which like reference characters designate the same or similar parts throughout thereof.","Now, an embodiment of this invention will be described in detail below with reference to the drawings.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 18","FIG. 18"],"b":["1807","1809","1807","1808","100","1809"]},"The client computer shown in  performs printing in the following manner. That is, an application  calls an application programming interface (API), thereby manipulating a GDI  of an OS, which is a subsystem for processing graphics rendering. A printer driver  converts a request from the GDI  into a format suitable for a target printer and transmits this to a spooler .","In the client computer , a job account client  hooks (monitors and recognizes) a GDI call from the application . The job account client  counts APIs for which a page break or paper ejection is conducted, thereby obtaining the number of ejected sheets or number of pages for a job issued by the application. The job information thus obtained is referred to as a hook log.","In addition, the job account client  previously defines a protocol with the printer driver and communicates therewith, whereby it can receive job information from the printer driver in the client computer. The job information thus obtained is referred to as a driver log.","In addition, the job account client  regularly monitors the spooler and, if there is a spooled job, obtains information on the job via the API, thereby obtaining the number of ejected sheets or number of pages for the job. The job information thus obtained is referred to as an API log.","In addition, the job account client  defines a protocol with the transmission section and communicates therewith, thereby obtaining the total number of pages of ejected sheets returned from the printer. The job information thus obtained is referred to as a transmission section log.","Besides, in the case of a printer storing job information therein, for example, in the case of the printer , which is a preferred example of the image forming apparatus, a job account server defines a protocol with the printer and communicates with the printer, thereby obtaining the job information therefrom. The job information thus obtained is referred to as an apparatus log. The apparatus log is stored in a RAM or HDD in the printer. However, in many cases, the information including a document name transmitted from the transmission section cannot be entirely stored because of the limited storage capacity. Here, besides the printer, the image forming apparatus may be a facsimile machine, copier, copy system incorporating printer and scanner features, which is a kind of copier, or combined machine thereof.","The job account client  assigns priorities to the hook log, the driver log, the API log, the transmission section log and the apparatus log and transmits any of the logs to the job account server.","In response to a request from a person who wants viewing, the job account server  selects a job log and conducts accumulation processing for each unit period, each device, each job issuer or the like.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 1","FIG. 18"]},"Reference numeral  denotes a client computer constituted by a typical PC or workstation. When the client computer  is instructed by an application  to perform printing, it transmits print data to any of printers ,  and  via a transmission section . A job account client , which is a software module that is executed by a CPU in the client computer, collects logs concerning various printing processings and transmits the collected logs to a job account server  via a job log transmitting section . In this transmission, the job log transmitting section, which is a part of the job account client, may control a transmitting section provided by an OS to transmit the logs to a job log receiving section.","In the client computer , when a print instruction is issued to the application , the application  conducts GDI call for rendering in the same manner described with reference to . A hook section , which is incorporated in the job account client , hooks the GDI calls and accumulates information on each call including a call parameter and the number of times thereof. A history created based on the information is referred to as a hook log .  shows an example of the hook log . The hook section  possibly changes the document name according to a prescribed criterion. The document name and the changing processing will be described later.","A printer driver  converts, in accordance with a print setting, the GDI call into print data capable of being interpreted by the printer and transmits the same to a spooler . At the same time, it extracts print information from the converted data and transmits the same, as a driver log , to the job account client .","The job account client  continuously monitors the spooler  for jobs. If any log is found, the job account client  issues an API prescribed for the OS, obtains print information, and obtains the same as an API log .","The transmitting section  communicates, via the network, with any or the printers ,  and , which is specified by the application and, if the printer is ready for operation, transmits the print data thereto. Here, for example, if a command of the Printer Job Language prescribed by the HP Company is used, the number of pages of ejected sheets for the print job can be obtained after all the sheets for the job is completely ejected in the printer . The transmitting section (port monitor)  transmits the job information including the number of pages received from the printer  to the job account client . A print log created based on the information is referred to as a transmission section log .","In this way, the job account client  (obtaining means) obtains four logs, that is, the hook log, the driver log, the API log and the transmission section log, which are created for one print job. However, the four logs cannot always be obtained. For example, if the application directly transmits the print data to the spooler , the hook log  and the driver log  cannot be obtained. If any protocol is not prescribed between the printer driver  and the job account client , the driver log  cannot be obtained. If there is not provided a capability of notifying the transmitting section of the number of pages of ejected sheets, which is implemented in the printer , the information on the number of pages of ejected sheets in the transmission section log  cannot be obtained. However, since the logs are obtained in plural steps involved in the job, even if a log cannot be obtained in a step, the jobs can be obtained with an increased probability as a whole.","The printer  interprets the job transmitted from the transmitting section  and performs printing. The printer  interprets the job transmitted from the transmitting section  and performs printing. Upon completion of printing, they transmit the number of ejected sheets back to the transmitting section . The printer  interprets the job transmitted from the transmitting section  and performs printing. Upon completion of printing, it stores the job information in a HDD  described later.","A job log merging section  merges the hook log, the driver log, the API log and the transmission section log and transmits them to a job log transmitting section . The merging processing will be described later. The job log transmitting section  transmits the job logs to a job log receiving section  in the job account server .",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 2","FIG. 1","FIG. 2","FIG. 1"],"b":["201","202","203","102","103","104","105","107","118","205","202","201","204","205","206","207","107","117","208"]},"Essentially, the job account server  is constructed the same in terms of hardware. In the job account server , the HDD stores a job log merging section , a job log recording section , the job log receiving section  and a job log accumulating section . Besides, the job log receiving section  controls the communication section .",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 3","FIG. 1","FIG. 3"],"b":["305","301","302","303","304"]},"The operating system and programs for communication control or engine control are loaded into the RAM  for execution. Reference numeral  denotes an engine unit of this apparatus, which performs printing or image read-in under the control of the controller. Reference numeral  denotes a communication unit, which controls network communication. It can communicate with the client computer or the server computer as described with reference to . Reference numeral  denotes a user manipulation input\/output unit, which allows setting by a user in an interactive manner. Reference numeral  denotes a system bus, which constitutes a data path interconnecting the components described above.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 4","FIG. 1"],"b":["121","41","42","203","43","203","44","203","45"]},{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 5","FIG. 1","FIG. 2"],"b":["50","51","52","53","54","50","62","121","62"]},{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 6","FIG. 18","FIG. 1"],"b":["60","62","61","60","61","60","42","41","203","62","101","121","101","121"]},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 7","b":"101"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 8"},"For example, if 2-up duplex printing is performed when the number of logical pages is , the number of physical pages is 2. Furthermore, since the physical pages are printed onto both sides of the sheet of paper, one sheet of paper is ejected. The first and second logical pages are printed onto a front surface of the sheet, and the third and fourth logical pages are printed onto a rear surface of the sheet.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 10","b":"108"},"The hook log, the driver log, the API log and the transmission section log all have regions in which flag information indicating whether the job is processed or not and information indicating the type of the log are recorded.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 11","FIG. 11","FIGS. 1 and 18","FIG. 11"],"b":["116","116","116"]},"In step S, the job log merging section  determines whether there is a transmission section log having a processed flag not turned into YES (see ), that is, a transmission section log not processed. If there is a transmission section log not processed, the process continues to step S. In step S, the job log merging section  copies the transmission section log determined to be not-processed in step S into another temporary storage region and names the copy a \u201clog A\u201d. In step S, the job log merging section  obtains the JobId from the log A. In step S, the job log merging section  searches the hook log, the driver log and the API log, thereby determining whether there is a log not subject to merging, that is, a log not processed in the logs associated with the JobId obtained in step S based on the JobId. If it is determined that there is no log not processed in step S, the process ends. If the job log merging section  determines that there is a log not processed in step S, the process continues to step S. In this step, the job log merging section  searches the hook log, the driver log and the API log, thereby determining whether there is a log having the same JobId as the JobId (conveniently assumed to be \u201cN\u201d, here) for which the log is determined as not-processed in step S based on the JobId, and if any, names the log a \u201clog B\u201d. If a log having the same JobId as N is not found in the hook log, the driver log and the API log in step S, the process continues to step S. If a log having the same JobId as N is found in the hook log, the driver log and the API log in step S, the process continues to step S. Here, in step S, the \u201cN\u201d may be assigned to the smallest JobId in those included in the log A not processed.","In step S, the job log merging section  determines, for items in the log associated with the JobId N of the log A specified in step S (job information included in each log obtained for the JobId N), whether there is an item which is included in the log B and not included in the log A. If it is determined that there is no item which is included in the log B and not included in the log A for the items in the log associated with the JobId N in step S, the job log merging section  performs the processing of step S. If it is determined that the log B has an item not included in the log A in step S, the process continues to step S. In this step, the job log merging section  adds the item in the log B which is not included in the log A to the items of the log A of the JobId N, thereby providing merge data of the log A. Then, the processed flag of the log created by adding the item of the log B to the log A (referred to as merge log, hereinafter) is turned into YES, and the process continues to step S. Then, \u201cmerge\u201d is entered to the item of type of the merge log. Successively merging the logs shown in  with the transmission section log in accordance with the process shown in  provides the merge log shown in . As shown, the merge log comprises the hook log, the driver log, the API log and the transmission section log.  shows an example o the merge log according to an embodiment of this invention.","In step S, which follows step S, if it is determined that processing of all the JobIds involved in the log A is completed, the process ends. Normally, every time the merge processing is completed, the job log merging section  transmits the merge log to the log transmitting section  after the process shown in . The log transmitting section  transmits the log to the job log receiving section  at regular intervals or in response to a request from the job log receiving section.","Next, an operation of the job account server  will be described. The job log receiving section  receives and accumulates the jobs transmitted from the job log transmitting section . In addition, the job log receiving section  regularly polls the printer  and, if there is job information which it has not obtained, obtains the job information. This job information is referred to as an apparatus log. The apparatus log is stored in the RAM  or HDD . However, it is undesirable that the information including a document name transmitted from the transmission section  is entirely stored because of the limited storage capacity. The available document name is composed of up to 8 characters herein.  shows an example of the apparatus log.  shows an example of the apparatus log resulting when the hook section  is inactive. The apparatus log shown in  includes the actual number of pages of ejected sheets, the actual number of ejected sheets, the model name, the start time of processing in the printer, and the output time such as the end time of ejection.","The job log merging section , which is a preferred example of the managing means according to this invention and serves also as first and second obtaining means, obtains a merge log  transmitted from the job account client through the job log receiving section  and obtains an apparatus log . Then, the job log merging section  merges the logs for management. A procedure of merging the logs will be described later. The job log recording section  receives the job logs from the apparatus job log merging section  and stores the logs in the HD  or the like. The job log accumulating section  conducts accumulation processing, such as finding the number of pages to be printed for each unit period and finding the number of pages printed for each owner.","An ID generating section  issues an ID for uniquely identifying the client computer . Here, in response to a request from the hook section , the ID generating section issues a string of four characters each of which can be selected from 26 characters of a to z, the string being sequentially changed to uniquely identify a client, for example, aaaa, aaab, . . . , zzzy, zzzz. A new document name is created by combining a host and a job ID, herein. However, the job account server may unifiedly issue a new document name (described later) which is uniquely identified in whole of the system.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 15","FIG. 15"],"b":["103","1501","103","1502","103","1502","103","1504","1503","101","1503","103","126","1504"]},"In step S, the hook section  combines the client ID determined to be already-obtained in step S or client Id obtained in step S and the in-client JobID created in step , thereby producing a new document name, which is an example of new identification information which is uniquely determined in the printing system. In step S, the hook section  stores the original document name passed from the application in an item \u201coriginal document name\u201d of the hook log. In step S, the old document name is replaced with the new document name created in step S. As a result, the document name passed to the GDI is the new document name. It is preferred that the new document name is used in all the following processings in the printer driver , the spooler , the transmission section  and the printer .","The reason why the new document name is created is that it is difficult to use the JobID as it is as a key for the merge processing when the job information obtained from the printing apparatus is to be merged. For example, since part of the specification of the job management method is not opened, an account server developed by A company often cannot obtain a JobID from a printer developed by B company. In other words, if the job information is obtained from a printer designed for an unexpected job management method, the job ID is not included in the job information in many cases, and thus, the job information cannot be used by merging. However, the document name created by the OS or application in the client computer and transmitted to the printer can be obtained as job information in many cases.","Thus, it is contemplated that, instead of the job ID, the document name, which can be managed in the client and can be provided to the printer as a key for the job information instead of the JobID, is used as the identification information. However, using the original document name as it is causes a problem. In general, the OS or application of the client can manage a document name composed of more than 8 characters. The general OSs can provide a document name composed of up to 255 characters. However, the printer can manage a document name composed of up to 8 characters, as described above. In addition, generally, the document name available in the job management method is composed of up to 8 characters. Thus, when the OS or application of the client provides document names composed of more than 8 characters, even if the document names are different from each other in the client, they seems to be the same to the printer. Thus, the printer has jobs with the same document name at the same time, creating confusion. Therefore, the account server issues a host ID and the host ID is combined with the document name issued by the client. This provides a new document name that is composed of up to 8 characters, managed by the account server and uniquely determined in the printing system including the client computer and the printer. And, this new document name can be used for identifying the job instead of the job ID. Once the new document name is created in the client, the document name can be used as a job identifier in the printer, the client and the account server.",{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 16","FIG. 16"],"b":"123"},"In step S, the job log merging section  searches for a merge log not processed, and if any, the process continues to step S. In step S, the job log merging section  determines whether the printer has an apparatus log or not, and if the printer has an apparatus log, the process continues to step S. Otherwise, the process continues to step S. In step S, the apparatus job log merging section  determines whether there is an apparatus log which is not processed and has the same document name as that of the merge log in step S. If it is determined that there is such an apparatus log, the process continues to step S. If it is determined that there is not the same apparatus log as the merge log in step S, the process ends. In step S, the apparatus job log merging section  replaces the number of pages of ejected sheets and the number of ejected sheets of the merge log with those of the apparatus log or adds the number of pages of ejected sheets and the number of ejected sheets of the apparatus log to the merge log.",{"@attributes":{"id":"p-0086","num":"0085"},"figref":["FIG. 13","FIGS. 12 and 13"],"b":["1605","123"]},"In step S, the apparatus job log merging section  deletes the original document name of the merge log. The resulting log is the final log. Applying this to the apparatus logs shown in  provides the final log shown in . In step S, the apparatus job log merging section  transmits the final log to the job log recording section .","As described above, according to this invention, job information including a more precise document name and more accurate information on the number of ejected sheets can be obtained, and thus, more adequate job accounting can be conducted. That is, since this invention provides a mechanism that conducts merging based on a single piece of identification information in the printing system managed by the account server, the possibility of managing different jobs as a same job by mistake in managing job information, counting the number of printed sheets or ejected sheets or the like is eliminated, and thus, adequate job accounting can be conducted.","The following description will be made primarily about differences from the first embodiment.  illustrates an example of the merge processing in the job log merging section  according to an embodiment of this invention. In the following, referring to the flowchart in , an operation of the job log merging section  will be described. The job log merging section  receives the logs and records the contents in the HDD or the like in the client computer. Then, the process described below is activated at regular intervals. In step S, the job log merging section  searches for a transmission section log not processed. If there is a transmission section log not processed, the process continues to step S. If it is determined that there is no log not processed in step S, the process ends. In step S, the job log merging section  copies the content of the transmission section log and names the copy a \u201clog A\u201d. At this point, the processed flag of the transmission section log is turned into \u201cYES\u201d. In step S, the job log merging section  extracts a JobId from the log A. Then, in step S, the job log merging section  determines whether a JobID not subject to merging and time determination processing is included in the JobIDs associated with the log A obtained in step S.","If it is determined in step S that there is no JobID not processed, the process ends. If the job log merging section  determines that there is job information associated with the JobId not processed in step S, the process continues to step S. In step S and the following steps, the JobID having the smallest number in the JobIDs determined to be not-processed in step S is assigned a name \u201cN\u201d. In step S, the job log merging section  searches the hook log, the driver log, the API log and the transmission section log for a log having the same JobID as the JobID N and, if any, names the log \u201clog B\u201d. If the job log merging section  determines that there is not a log having the same JobId as N in step S, the JobID N is marked as processed in step S, and the process continues to determination processing for another JobID not processed (step S). If the job log merging section  determines that there is a log having the same JobId as N in step S, the process continues to step S and the following steps for merging.","In step S and the following steps, processings are performed on an entry of job information having the JobID N. In step S, it is determined whether the start time of the log B is earlier than the start time of the log A. If the start time of the log B is earlier than the start time of the log A, the process continues to step S. Otherwise, the process continues to step S. In step S, the job log merging section  overwrites the start time of the log A with the start time of the log B, and then, the process continues to step S.","In step S, the job log merging section  determines whether the end time of the log B is later than the end time of the log A. If it is determined that the end time of the log B is later than the end time of the log A, the process continues to step S. Otherwise, the process continues to step S. In step S, the job log merging section  overwrites the end time of the log A with the end time of the log B, and then, the process continues to step S. In step S, the job log merging section  determines whether the log B includes an item not included in the log A. If it is determined that the log B includes an item not included in the log A, the process continues to step S. Otherwise, the process continues to step S. In step S, the job log merging section  adds the item of the log B not included in the log A to the log A. At this point, the processed flag of the log B is turned into \u201cYES\u201d. In addition, the type is set to \u201cmerge\u201d. Subjecting the logs shown in  to the process shown in  provides the log shown in . As shown, the log includes items of the hook log, the driver log, the API log and the transmission section log, in which the start time is of the hook log and the end time is of the transmission section log. Thus, the throughput from the generation of one job to the completion of the processing, that is, from the print instruction input to the application to the completion of paper ejection, can be grasped. After the process shown in , the job log merging section  transmits the merge log to the log transmitting section . The job log transmitting section  regularly transmits the log (merge job information) to the job log receiving section .","This process eliminates the need of arranging, in chronological order of processing data, the order of merging the logs that can be obtained in image processing and output processing. As described above, the new document name can be used for merging, instead of the JobID.","As described above, in the client apparatus that processes a job that requires a plurality of data processings, the job log merging section  which is a preferred example of determining means according to this invention and obtains a plurality of pieces of job information obtained in the plurality of data processings for one job can determine the earliest start time in the start time information included in the plurality of pieces of job information. In addition, if the job log merging section  is controlled to overwrite the end time with the latest one as in the process described above, the merge log is to retain the latest end time, and thus the latest end time can be determined.","According to another example of this embodiment, the hook log, the driver log, the API log and the transmission section log associated with one job ID are arranged in an order regarding the item thereof concerning time. Then, merging is conducted in this order. The item concerning time needs to be subject to an overwrite merge processing in the arrangement order.",{"@attributes":{"id":"p-0096","num":"0095"},"figref":["FIG. 20","FIG. 20","FIG. 15"],"b":["123","123","123"]},"In step S, the job log merging section  searches a merge log that is obtained from the client computer and not processed, and if any, the process continues to step S. Otherwise, the process ends. In step S, the job log merging section  determines whether the printer has an apparatus log or not, and if the printer has an apparatus log, the process continues to step S. Otherwise, the process continues to step S. In step S, for apparatus logs obtained from the printer, the job log merging section  determines whether there is an apparatus log which is not processed and has the same document name as that of the merge log in step S. If it is determined that there is such an apparatus log, the process continues to step S. If it is determined that there is not such an apparatus log, the process ends. In step S, the job log merging section  adds the number of pages of ejected sheets and the number of ejected sheets of the apparatus log to the merge log. In step S, the job log merging section  interchanges the document name and the original document name. Applying this processing to the apparatus logs in  results in the document name \u201c2001 annual report\u201d and the original document name \u201cabcd0001\u201d.",{"@attributes":{"id":"p-0098","num":"0097"},"figref":["FIG. 17","FIGS. 12 and 13","FIG. 17"],"b":["2006","2007","2008","2009","2008","2009","2010","2011","2010"]},{"@attributes":{"id":"p-0099","num":"0098"},"figref":["FIG. 21","FIG. 21","FIG. 21"],"b":["2011","124","123","123","43","42","205","121","123"]},"Preferably, the job log merging section  obtains the number of logical pages from the client and obtains the actual number of ejected sheets and the number of pages of ejected sheets from the printer. Here, the number of ejected sheets indicates how many sheets have been ejected, and the number of pages of ejected sheets indicates how many physical pages have been ejected.","That is, the job log merging section  obtains a plurality of pieces of job information resulting from a plurality of data processings for one job and can determine the earliest start time and the latest end time among start times and end times indicated by entries of start time information and end time information, respectively, which are included in the hook log, the driver log, the API log and the apparatus log resulting from the plurality of processings for one job which the job log merging section  has obtained. Then, the time information is merged and stored as merge job information as described above.","As described above, according to this invention, more precise print start time and print end time can be obtained, and thus, more adequate job accounting can be conducted.","The following description will be made primarily about differences from the first embodiment.  shows the transmission section  in  with a function of adding a customer name. A transmission section  operates the same as the transmission section  in . When the transmission section  creates a transmission section log, a customer name adding section  displays a user interface shown in  to prompt a user to enter a customer name. Reference numeral  denotes a dialog window. Reference numeral  denotes a text box into which the user can enter an arbitrary character string. In this drawing, \u201cABC design office\u201d is entered, for example.","Then, there is provided the transmission section log  additionally including the customer name, as shown in .","The following processings are the same as in the first embodiment.","Thus, the final log as shown in  is provided. If job logs are accumulated for each customer name, costs can be adequately distributed among the customers.","This embodiment can be applied to the second embodiment.","Of course, besides the customer name, any other information can be added to the job log.","As described above, according to this invention, since a function of adding arbitrary information to the job log is provided, flexible job accounting can be conducted.","This invention is effective even if the printer has no apparatus log. If a unique document name is provided, the hook log, the driver log and the API log can be merged.","Besides, some OSs do not assure that the JobId they issue is unique. In such cases, the determination processing in step S in  is replaced with a processing of determining whether the JobID is unique or not, and if it is determined not to be unique, the document name is changed. In addition, in the above-described embodiments, the JobID of the transmission section log is used in steps S and S. However, the merge processing can be conducted based on the JobID of another log (hook log, driver log or API log), of course.","As described above, according to the embodiment, the job information obtained from the client computer and the job information obtained from the printer are merged to be managed. Therefore, for example, the client computer can obtain the number of physical pages and the number of logical pages, and the printer can obtain the actual number of ejected sheets and the actual number of pages of ejected sheets in response to completion of actual printing. These pieces of information are managed by merging so that they can be compared with each other. Therefore, when an error, such as a paper jam, occurs in the printer and the number of ejected sheets does not correspond with the number of physical pages on the client computer side, the history of the job (for example, the job was adequately processed in the driver, but a jam error occurred in the printer) can be grasped. Furthermore, even if a different data processing is performed for each job, for example, even if the print processing is started with PDL data for a job and data is directly transmitted to the spooler for another job, since the job information is obtained in a plurality of steps, a more accurate log can be obtained.","The processings in the flowcharts in the drawings (, , ,  and the like) of this invention and the modules shown in  are implemented by each computer according to a program externally installed. This invention can be applied to a case where a group of information including a program is supplied to the client computer from a storage medium, such as a CD-ROM, a flash memory and a FD, or from an external storage medium via a network.","Of course, the objects of this invention can also be attained in such a manner that a storage medium storing a program code of software for implementing the functions described in the embodiments is supplied to the system or apparatus, or the program code is downloaded into the system or apparatus from an external server (not shown), and the computer (or CPU or MPU) in the system or apparatus reads the program code and executes the same.","In this case, the program code read from the storage medium, such as the job account server program and job account client program, implements the novel functions according to this invention by itself, and the storage medium storing the program code is included in this invention. The storage medium for supplying the program code may be a floppy disk, a hard disk, an optical disk, a magneto-optical disk, a DVD, a CD-ROM, a magnetic tape, a nonvolatile memory card, a ROM and an EEPROM.","In addition, it goes without saying that this invention can be applied not only to a case where executing the program code read by the computer can implement the functions described in the above embodiments but also to a case where the OS (operating system) running on the computer or the like performs part or whole of the actual processings based on an instruction from the program code, whereby the functions described in the above embodiments are implemented. Furthermore, it goes without saying that this invention can be applied to a case where the program code transmitted from a predetermined external server (not shown) via a network or read from a storage medium is loaded into a feature expansion board inserted into the computer or a memory provided in a feature expansion unit connected to the computer, and then, the feature expansion board or the CPU or the like provided in the feature expansion unit performs part or whole of the actual processings based on an instruction from the program code, whereby the functions described in the above embodiments are implemented.","As described above, according to an aspect of this invention, since the job information is obtained from both the peripheral apparatus and the computer, the utilization of the peripheral apparatus can be correctly known. Since the job information is obtained from both the client computer and the image forming apparatus, the job information can be correctly grasped.","Furthermore, since arbitrary information can be added to the job information, highly flexible job accounting can be conducted."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 19","b":"116"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 20","b":"123"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 25"}]},"DETDESC":[{},{}]}
