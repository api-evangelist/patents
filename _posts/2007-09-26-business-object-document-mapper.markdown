---
title: Business object document mapper
abstract: In accordance with an embodiment, an architecture for directly interfacing Business Object Documents (BODs) may include a BOD mapper which employs the BOD for input and output. A model object definable by class is created corresponding to the data contained in the BOD. System logic for the local domain is provided with communication with the BOD mapper through a BOD mapper application programming interface. The logic operates on the model object and a mapping configuration is provided for relating elements of the BOD to the model object. An addressing element communicates with the BOD mapper to define the mapping configuration for the BODs operated on by the BOD Mapper for input/output and mapping for a map call and parsing for a list call is accomplished for the contents from the BOD to the model object as defined by the BOD mapping configuration.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07873679&OS=07873679&RS=07873679
owner: The Boeing Company
number: 07873679
owner_city: Chicago
owner_country: US
publication_date: 20070926
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["REFERENCE TO RELATED APPLICATIONS","COPYRIGHT NOTICE","FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority of U.S. Provisional Application Ser. No. 60\/939,338 filed on May 21, 2007 having the same title as the present application the entirety of which is incorporated herein by reference.","Certain software programs or routines disclosed in this application are subject to copyright protection and all rights thereto are specifically reserved. No dedication to the public of those copyrights is intended or made by such disclosure in this specification.","This invention relates generally to computer communications, and more particularly to improved communications axing encapsulated message passing in various applications.","The Open Applications Group Integration Specification (OAGIS) Business Object Document (BOD) standard is a method for formatting messages that are encapsulated for transport using an eXtensible Markup Language (XML) format. These messages, or BODs, may be used to send and receive various types of data between participating software systems. Although the use of XML has many benefits, the process of encapsulating a message in the XML format may require the creation of a large amount of code to convert the message data into a format that can be interpreted by a software system. For instance, if a particular BOD contains 25-30 different fields. The corresponding code to transform the contents of that BOD could easily exceed many thousands of lines of code. Such transformation code may be expensive to create, maintain, and use. Therefore, there remains a need in the art for an improved system and method for transforming BOD messages.","In one or more exemplary embodiments an architecture to reduce the complexities related to producing and consuming OAGIS BODs is disclosed. Such architecture eliminates the need to write verbose, error prone, and hard to manage code by parsing the BOD and then mapping its contents to a model object defined by the interacting software system or, conversely mapping the contents of a model object in the interacting software system to a representative BOD. The architecture eliminates the need for interfacing systems to change code when an OAGIS BOD is modified. For the embodiments disclosed herein the interfacing system architecture provides a specific mapping function generally referred to as the BOD Mapper.","According to one embodiment, an architecture may include a Business Object Document (BOD) mapper employing a BOD as input and output data files that conform to an Open Applications Group Integration Specification (OAGIS) standard. A model object definable by class corresponding to the data contained in the BOD allows system logic for a local domain to communicate with the BOD mapper through a BOD mapper application programming interface (API) adapted to operate on the model object. A mapping configuration relates elements of the BOD to the model object and an addressing element communicates with the BOD mapper to define the mapping configuration for the BOD to be operated on by the BOD Mapper.","According to another embodiment, a method for interfacing of Business Object Documents (BOD) to a local domain may be accomplished by providing a BOD mapper which employs an OAGIS BOD for input and output. A model object is created corresponding to the data contained in the BOD which is definable by class. System logic is provided for the local domain which communicates with the BOD mapper through a BOD mapper application programming interface and operates on at least one model object to provide a mapping configuration for relating elements of the BOD to the model object. An addressing element is provided to communicate with the BOD mapper to define the mapping configuration, for the BODs operated on by the BOD Mapper for input\/output. Mapping for a map call and parsing for a parse call is accomplished on the contents from the BOD to the model object defined by the BOD mapping configuration.","According to yet another embodiment, a method implemented in Java to process OAGIS Business Object Documents (BODs) may include creating a plurality of Java model objects that allow for the storage of data contained in each BOD and creating a BOD mapping configuration file for each mapped BOD. How the contents of the BOD should be mapped to the Java model object is determined and an application programming interface (API) written in Java is supplied that the interfacing system calls. Mapping for a map call and parsing for a parse call is then accomplished on the BOD contents based on the BOD mapping configuration. For the exemplary embodiment a mapBod Java method, a mapBodCriteria Java method and a mapResponseBod Java method, a parseBod Java method, a parseBodCriteria Java method and a parseResponseBod Java method are all defined in the BodMapper Java class.","The OAGIS Business Object Document (BOD) standard requires the involved system to have a high level of knowledge about the way a message is constructed. This requires that the same set of code be written to parse and map each BOD that the software system consumes and\/or receives. In addition the code that is required to parse and map the XML in a BOD is extremely verbose and hard to maintain.","It is therefore desirable to provide an architecture to abstract all fee complexities related to producing and consuming OAGIS BODs. It is further desirable that such architecture eliminates the need to write verbose, error prone, and hard to manage code by parsing the BOD and then mapping its contents to a model object defined by the interacting software system. It is also desirable that the architecture eliminates the need for interfacing systems to change code when an OAGIS BOD is modified. For the embodiments disclosed herein the interfacing system architecture provides a specific mapping function generally referred to as the BOD Mapper. The BOD Mapper and the architecture may be implemented using a standard Java\u2122 based framework, where Java\u2122 is a trademark of Sun Microsystems, Inc., of Santa Clara, Calif., that reduces the effort required, to send and receive messages, while conforming to the OAGIS BOD standard. Using a standard framework shields the interfacing system from the complexities involved in parsing a BOD's XML and allows the software system to easily map a BOD's contents to a Java (model) object that is previously defined. While the examples provided for the embodiments are implemented using Java, no limitation to Java code for embodiments of the present invention is required or implied. For the Java embodiment disclosed herein the BOD Mapper utilizes one open source library, xmlbeans, available via a free license from the Apache Software Foundation, of Forest Hill, Md.","The interfacing system may first create one or more Java classes that incorporate the data contained in the BOD. The interfacing system then employs a BOD mapping configuration file providing metadata defining the mapping for each mapped BOD. This mapping directs fee BOD Mapper how the contents of fee BOD should be mapped to the Java class written by the interfacing system. The specific required elements are the model class that will be mapped to the defined BODs, the structure of the request BOD, the structure of the response BOD and how the contents of the BOD fields relate to the model object (<property>, <collection>, <component>, <subclass>). Table 1 provides an exemplary format for the configuration elements.",{"@attributes":{"id":"p-0017","num":"0016"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Configuration Mapping"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"I. class"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"a.","name - the fully qualified name of the model object"]},{"entry":[{},"b.","request-bod"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["i.","name - the name of the static constant that represents the"]},{"entry":[{},"BOD."]},{"entry":["ii.","taskName - the name of the static constant that represents"]},{"entry":[{},"the task to be used.."]},{"entry":["iii.","class - the fully qualified name of the request bod"]},{"entry":["iv.","dataArea - the fully qualified name of the oagis data area"]},{"entry":["v.","verb"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"1.","name - the name of the verb within the bod"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"a.","the name represents the name used to"]},{"entry":[{},{},"retrieve\/set this verb on the BOD (e.g. \u2018get\u2019"]},{"entry":[{},{},"relates to bod.getGet( ))"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"2.","class - the fully qualified name of the oagis verb"]},{"entry":[{},"3.","select-expression - "]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"a.","name - a unique name assigned to this"]},{"entry":[{},{},"select-expression"]},{"entry":[{},"b.","node - the name of the node that will be"]},{"entry":[{},{},"mapped\/parsed when responding to a"]},{"entry":[{},{},"request containing this select-expression."]},{"entry":[{},"c.","value - contains the value of the selection"]},{"entry":[{},{},"expression. {0, 1, . . . } notation must be used"]},{"entry":[{},{},"to substitute dynamic parameters at runtime."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["vi.","noun"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1.","A noun can contain multiple sub nodes."]},{"entry":[{},"2.","name - the name of the noun within the bod"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"a.","the name represents the name used to"]},{"entry":[{},{},"retrieve\/set this noun on the bod"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"3.","class - the fully qualified name of the oagis noun"]},{"entry":[{},"4.","node"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"a.","node (continuous)"]},{"entry":[{},"b.","name - the name of the node within the"]},{"entry":[{},{},"noun"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"i.","the name represents the name used"]},{"entry":[{},{},"to retrieve\/set this node on the noun"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"c.","class - the fully qualified name of the oagis"]},{"entry":[{},{},"node"]},{"entry":[{},"d.","modelRoot (true\/false) - indicates that this"]},{"entry":[{},{},"node represents the model object as"]},{"entry":[{},{},"opposed to the noun (default)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"i.","The attribute is only valid if the node"]},{"entry":[{},{},"is a \u2018root\u2019 node, meaning that it's"]},{"entry":[{},{},"parent is the noun definition."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["vii.","transfer"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1.","The presence of this element instructs the BOD"]},{"entry":[{},{},"Mapper to transfer attachments to the local path"]},{"entry":[{},{},"when parsing a bod."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"a.","The transfer will only occur if the BOD can"]},{"entry":[{},{},"contain attachments and only if there are"]},{"entry":[{},{},"attachments contained in the bod."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"2.","path - the path that will be used to transfer"]},{"entry":[{},{},"attachments"]},{"entry":[{},"3.","pathVariable - the name of the system variable that"]},{"entry":[{},{},"defines the path that will be used to transfer"]},{"entry":[{},{},"attachments"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"c.","response-bod"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["i.","name"]},{"entry":["ii.","class"]},{"entry":["iii.","dataArea"]},{"entry":["iv.","verb"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1.","name"]},{"entry":[{},"2.","class"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["v.","noun-ref"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1.","Allows you to reference the noun that was defined in"]},{"entry":[{},{},"the request-bod."]},{"entry":[{},"2.","name"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"d.","property"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["i.","name the name of the model property"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1.","correlates with the getter\/setter name on the model"]},{"entry":[{},{},"object"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["ii.","bodName - the name of the BOD property"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1.","correlates with the getter\/setter name on the noun or"]},{"entry":[{},{},"node that this property is associated with"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["iii.","noun - the name of the noun that this property should be"]},{"entry":[{},"mapped to"]},{"entry":["iv.","node - the name of the node that this property should be"]},{"entry":[{},"mapped to"]},{"entry":["v.","type - defines the type that should be used, the BOD Mapper"]},{"entry":[{},"defines the following types: (format: typeValue \u2192"]},{"entry":[{},"(modelType, bodType))"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1.","string \u2192 (String, SchemaString) (default)"]},{"entry":[{},"2.","date \u2192 (Timestamp, ShemaDateTime|ShemaDate)"]},{"entry":[{},"3.","boolean \u2192 (boolean, SchemaBoolean)"]},{"entry":[{},"4.","data \u2192 (byte[ ], EmbeddedData)"]},{"entry":[{},"5.","long \u2192 (long, SchemaLong)"]},{"entry":[{},"6.","status \u2192 (String, Status)"]},{"entry":[{},"7.","name \u2192 (String, Name)"]},{"entry":[{},"8.","float \u2192 (float, SchemaFloat)"]},{"entry":[{},"9.","int \u2192 (int, SchemaInteger)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["vi.","fileName - (true\/false) denotes that this property within the"]},{"entry":[{},"mapped model object represents an attachment's file name."]},{"entry":[{},"This is useful when the mapped model object is mapped to"]},{"entry":[{},"an instance of an OAGIS Attachment."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"e.","component"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["i.","name - the name of the component within the model object"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"1.","relates to the name on the getter\/setter"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ii.","class - the fully qualified name of the model component"]},{"entry":[{},"object"]},{"entry":["iii.","property (see property above)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"f.","collection"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["i.","name - the name of the collection within the model object"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1.","relates to the name of the getter\/setter for this"]},{"entry":[{},{},"collection"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ii.","node - the name of the node that this collection should be"]},{"entry":[{},"mapped to"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1.","The node attribute is optional within a collection"]},{"entry":[{},{},"when the collection contains a property and that"]},{"entry":[{},{},"property is mapped to a node."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["iii.","noun - the name of the noun that this collection should be"]},{"entry":[{},"mapped"]},{"entry":["iv.","class - the fully qualified name of the model element class"]},{"entry":[{},"that is stored within the defined collection."]},{"entry":["v.","adder - the name of the method that should be used to add a"]},{"entry":[{},"new element to this collection."]},{"entry":["vi.","property (see property above)"]},{"entry":["vii.","collection - a collection can define a sub collection allowing"]},{"entry":[{},"the mapping of a collection that is contained by the main"]},{"entry":[{},"collection's model element (see collection above)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"g.","subclass - represents a sub class of the main model class and can"]},{"entry":[{},{},"map all the same types of fields as the main model class."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"right"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["i.","node - the name of the node that this sub class represents(if"]},{"entry":[{},"the node attribute is not supplied then the properties of the"]},{"entry":[{},"defined subclass will be mapped\/parsed to and from the root"]},{"entry":[{},"noun.)"]},{"entry":["ii.","class - the fully qualified name of the sub class"]},{"entry":["iii.","property (see property above)"]},{"entry":["iv.","collection (see collection above)"]},{"entry":["v.","component (see component above)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"The BOD Mapper provides several Java methods that the interfacing system may call. In one exemplary embodiment, there are four basic methods within the BOD Mapper. A BusinessObjectDocument mapBod (Object model) provides mapping of a model object or collection of model objects to a request BOD and the BOD's type is dictated by the BOD mapping for the supplied model's class. BusinessObjectDocument mapResponseBod (Object model, BusinessObjectDocument requestBod) provides mapping of the model object or collection of model objects to a response BOD based on the supplied request BOD where the BOD's type is dictated by the BOD mapping for the supplied model's class. List parseBod (Class modelClass, BusinessObjectDocument requestBod) which parses the contents of the supplied request BOD into a list of model objects. The BOD mapping that is used to parse the contents is based on the model class that is supplied. Finally, List parseResponseBod (Class modelClass, BusinessObjectDocument responseBod) parses the contents of the supplied response BOD into a list of model objects. The BOD mapping that is used to parse the contents is based on the model class that is supplied. Examples of mapBod and parseBod are provided in the OrderService example discussed subsequently herein for the first embodiment. The mapResponseBod and parseResponseBod methods provide identical functions except they map and parse the response BOD as opposed to the initial request BOD.","Additionally, in alternative embodiments, the BOD Mapper provides a mapBodCriteria Java method defined in the BodMapper Java class and a parseBodCriteria Java method defined in the BodMapper Java class. As an exemplary embodiment, mapBodCriteria: public static BusinessObjectDocument mapBodCriteria (String selectExpressionName, String[ ] selectExpressionParams, Class modelClass) maps the select expression associated with the supplied name to the configured BOD associated with the supplied model class. The select expression parameters will be used to populate the parameters defined in the BOD Mapper XML file for the supplied model class. (e.g. {0}, {1}) The select expression parameters will be populated in ascending order with the parameters defined in the select expressions value in the BOD Mapper xml. Similarly, parseBodCriteria: public static String paresBodCtiteria (Class modelClass, BusinessObjectDocument requestBod) parses the select expression contained in the supplied BOD. The BOD Mapper then parses or maps (depending on the method called) the contents to or from the BOD defined in the selected configuration.","As shown for the exemplary embodiment in , BOD Mapper  is driven through a BOD Mapper API  by generalized system logic  in a local domain . The desired model objects , shown representatively as two types; model object type A and model object type B are constructs generated by the software logic to represent the domain model, e.g. the data displayed, maintained or otherwise operated on and the persistence of that data. The OAGIS BODs  presented to the BOD Mapper are also shown representatively in  as two types; BOD type A and BOD type B . As described previously, a mapping configuration  is established and provided for use by the BOD Mapper for each BOD type, BOD Type A Mapping Configuration and BOD Type B Mapping Configuration are accessed by the BOD Mapper for information corresponding to the two exemplary BOD types. A bodmapper.cfg.xml file  provides the BOD Mapper the location and names of the BOD mappings. Using the mapping configurations, the BOD(s) presented to the BOD Mapper are provided through the system as corresponding Model object(s) using the internal functions of the BOD Mapper, Map BOD , Parse BOD , Map Response BOD  and Parse Response BOD .","Embodiments of the present invention may be used to provide various services including retail purchasing and vehicle maintenance. As an example of the implementation of the system elements described, a model for a wedding registry with the associated BOD , object models  and interfacing system logic  is provided as shown in . In the example a standard form BOD  with an order for two items is placed; a wide screen television and a DVD player. The BOD incorporates the item number, names of the items, descriptive data including price and capabilities. The order number as well as registry number and type are also defined in the BOD. As an example for order number 1065648 placed by a user having ID  on Mar. 7, 2007. A first item has item number 121, for a 40\u2033 LCD Wide Screen TV priced at $1599.99 and characterized as a LCD Wide Screen TV with 1080 pixels resolution and 6000:1 contrast ratio. A second item has item number 548, a DVD Player priced at $199.99 and characterized as a DVD Player that up-converts to 1080 pixel resolution. A gift registry is identified as having registry number 487-W and a registry type characterized as \u201cWedding\u201d. The exemplary BOD is shown in Table 2.",{"@attributes":{"id":"p-0022","num":"0021"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003<?xml version=\u201c1.0\u201d encoding=\u201cutf-8\u201d ?>"},{"entry":{"u":"-"}},{"entry":"\u2003\u2003xmlns:eg=\u201chttp:\/\/xmlns.path.to.ns\/example\/\u201d"},{"entry":"\u2003\u2003xmlns:xsi=\u201chttp:\/\/www.w3.org\/2001\/XMLSchema-instance\u201d>"},{"entry":"\u2003<oa:Update \/>"},{"entry":{"u":"-"}},{"entry":"\u2003\u2003<eg:OrderNum>1065648<\/eg:OrderNum>"},{"entry":"\u2003\u2003<eg:UserId>45<\/eg:UserId>"},{"entry":"\u2003\u2003<eg:OrderDate>2007-03-07T01:01:01-05:00<\/eg:OrderDate>"},{"entry":{"u":"-"}},{"entry":"\u2003\u2003\u2003\u2003<eg:ItemNum>121<\/eg:ItemNum>"},{"entry":"\u2003\u2003\u2003\u2003<eg:ItemName>40\u201d LCD Wide Screen TV<\/eg:ItemName>"},{"entry":"\u2003\u2003\u2003\u2003\u2009<eg:ItemPrice>1599.99<\/eg:ItemPrice>"},{"entry":"\u2003\u2003\u2003\u2003<eg:ItemDesc>LCD Wide Screen TV, 1080p, 6000:1 contrast"},{"entry":"\u2003\u2003ratio<\/eg:ItemDesc>"},{"entry":"\u2003\u2003<\/eg:Item>"},{"entry":{"u":"-"}},{"entry":"\u2003\u2003\u2003\u2003<eg:ItemNum>548<\/eg:ItemNum>"},{"entry":"\u2003\u2003\u2003\u2003<eg:ItemName>DVD Player<\/eg:ItemName>"},{"entry":"\u2003\u2003\u2003\u2003<eg:ItemPrice>199.99<\/eg:ItemPrice>"},{"entry":"\u2003\u2003\u2003\u2003<eg:ItemDesc>DVD Player that upconverts to"},{"entry":"\u2003\u2003\u2003\u20031080p<\/eg:ItemDesc>"},{"entry":"\u2003\u2002\u2009<\/eg:Item>"},{"entry":{"u":"-"}},{"entry":"\u2003\u2003\u2003\u2003<eg:RegistryNumber>487-W<\/eg:RegistryNumber>"},{"entry":"\u2003\u2003\u2003\u2003<eg:RegistryType>Wedding<\/eg:RegistryType>"},{"entry":"\u2003\u2002\u2009<\/eg:GiftRegistry>"},{"entry":"\u2003<\/eg:Order>"},{"entry":"<\/PlaceOrder>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The BOD configuration mapping file  structured as previously defined for this example corresponding to the BOD of Table 1 for the example domain in  is defined in Table 3.",{"@attributes":{"id":"p-0024","num":"0023"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"<bod-mapping xmlns=\u201chttp:\/\/boeing.com\/bod\/mapper\u201d>"},{"entry":"\u2003<class name=\u201ccom.boeing.bod.mapper.example.Order\u201d ...>"},{"entry":"\u2003\u2003\u2003<request-bod name=\u201cPlaceOrder\u201d ... >"},{"entry":"\u2003\u2003\u2003\u2003\u2003<verb name=\u201cupdate\u201d ... \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<noun name=\u201corder\u201d ... >"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<node name=\u201citem\u201d ... \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<node name=\u201cgiftRegistry\u201d ... \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/noun>"},{"entry":"\u2003\u2003\u2003<\/request-bod>"},{"entry":"\u2003\u2003\u2003<response-bod name=\u201cPlaceOrder\u201d ... >"},{"entry":"\u2003\u2003\u2003\u2003\u2003<verb name=\u201cacknowledge\u201d ... \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<noun-ref name=\u201corder\u201d \/>"},{"entry":"\u2003\u2003\u2003<\/response-bod>"},{"entry":"\u2003\u2003\u2003<property name=\u201corderNumber\u201d bodName=\u201corderNum\u201d"},{"entry":"type=\u201clong\u201d \/>"},{"entry":"\u2003\u2003\u2003<property name=\u201corderUserId\u201d bodName=\u201cuserId\u201d\/>"},{"entry":"\u2003\u2003\u2003<property name=\u201corderDate\u201d bodName=\u201corderDate\u201d"},{"entry":"type=\u201cdate\u201d \/>"},{"entry":"\u2003\u2003\u2003<collection name=\u201citems\u201d node=\u201citem\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003class=\u201ccom.boeing.bod.mapper.example.Item\u201d"},{"entry":"adder=\u201caddItem\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<property name=\u201citemNumber\u201d bodName=\u201citemNum\u201d"},{"entry":"type=\u201clong\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<property name=\u201cname\u201d bodName=\u201citemName\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<property name=\u201cprice\u201d bodName=\u201citemPrice\u201d"},{"entry":"type=\u201cdouble\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<property name=\u201cdescription\u201d bodName=\u201citemDesc\u201d\/>"},{"entry":"\u2003\u2003\u2003<\/collection>"},{"entry":"\u2003\u2003\u2003<subclass node=\u201cgiftRegistry\u201d"},{"entry":"class=\u201ccom.boeing.bod.mapper.example.GiftRegistryOrder\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<property name=\u201cregistryNum\u201d"},{"entry":"bodName=\u201cregistryNumber\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<property name=\u201cregistryType\u201d"},{"entry":"bodName=\u201cregistryType\u201d\/>"},{"entry":"\u2003\u2003\u2003<\/subclass>"},{"entry":"\u2003<\/class>"},{"entry":"<\/bod-mapping>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The class shown in Table 3 represents the primary Java model object definition that is supplied by the interfacing system. All properties that are to be mapped\/parsed to the BOD are listed here. For the embodiment shown, the property name and the bodName can be different. Additionally, the \u2018type\u2019 defaults to a string if not defined. Each property is required to have a getter\/setter in the associated model class that matches the \u2018name\u2019 defined. In the example, to support the \u2018orderNumber\u2019 property the Order class must define String getOrderNumber( ); void setOrderNumber (longorderNumber).","An order may contain many purchased items, for each item the Item class is represented as an association with the Order class. Additionally, the \u2018node\u2019 attribute defines how this association should be mapped within the BOD xml and the \u2018adder\u2019 attribute declares that BOD Mapper  should use the \u2018addItem\u2019 method on the Order class to add a specific Item to the Order when parsing from a BOD.","In the exemplary embodiment shown in the table, the Subclass represents an order placed for a gift registry. The GiftRegistryOrder must derive from the Order class and the \u2018node\u2019 attribute indicates that the specific properties defined by the GiftRegistryOrder class should be mapped to a specific node within the BOD xml.","The model objects  for the example which ultimately provide the data from the BOD through the BOD Mapper to the using system include an order object , an item object and a gift registry order object . These objects correspond to the elements of the BOD. An exemplary order object is provided in Table 4.",{"@attributes":{"id":"p-0029","num":"0028"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Package com.boeing.bod.mapper.example.model;"]},{"entry":[{},"import java.sql.Timestamp;"]},{"entry":[{},"import java.util.Set;"]},{"entry":[{},"import java.util.HashSet;"]},{"entry":[{},"\/**"]},{"entry":[{},"\u2009* Order.java"]},{"entry":[{},"*\/"]},{"entry":[{},"public class Order {"]},{"entry":[{},"\u2003\u2003private long orderNumber;"]},{"entry":[{},"\u2003\u2003private String orderUserId;"]},{"entry":[{},"\u2003\u2003private Timestamp orderDate;"]},{"entry":[{},"\u2003\u2003private Set<Item> items = new HashSet<Item>( );"]},{"entry":[{},"\u2003\u2003public Order( ) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003\/\/generate random order number"]},{"entry":[{},"\u2003\u2003\u2003\u2003this.orderNumber = (long)Math.random( );"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public Set<Item> getItems( ) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003return items;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public void setItems(Set<Item> items) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003this.items = items;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public void addItem(Item item) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003if(item != null) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003this.items.add(item);"]},{"entry":[{},"\u2003\u2003\u2003\u2003}"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public Timestamp getOrderDate( ) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003return orderDate;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public void setOrderDate(Timestamp orderDate) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003this.orderDate = orderDate;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003\u2003public long getOrderNumber( ) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003return orderNumber;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public void setOrderNumber(long orderNumber) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003this.orderNumber = orderNumber;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public String getOrderUserId( ) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003return orderUserId;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public void setOrderUserId(String orderUserId) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003this.orderUserId = orderUserId;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003\/* Business methods specific to the domain *\/"]},{"entry":[{},"\u2003\u2003public void processOrder( ) { }"]},{"entry":[{},"\u2003\u2003public void cancelOrder( ) { }"]},{"entry":[{},"\u2003\u2003public void chargeOrderToUser( ) { }"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The Order class sets a random order number for the object. As described herein for the exemplary code, each property defined in the order placed by the BOD must have a corresponding getter\/setter that communicates the name of the property mapped in the BOD mapping configuration file. For the example shown, the property \u201cString orderUserID\u201d is mapped using the property <property name=\u201corderUserid\u201d bodName=\u201cuserId\u201d\/>. The Set<Item> and setItems commands correspond to the \u201citems\u201d collection mapped in the BOD mapping configuration file as <collection name=\u201citems\u201d node=\u201citems\u201d class=\u201ccom.boeing.bod.mapper.example.Item\u201d adder=\u201caddItem\u201d. Similarly, the addItem command corresponds to the method name that was declared by the \u201cadder\u201d attribute on the collection within the BOD Mapping configuration file as collection names=\u201citems\u201d node=\u201citems\u201d class=\u201ccom.boeing.bod.mapper.example.Item\u201d adder=\u201caddItem\u201d.","The getOrderDate and setOrderDate commands correspond to the \u201corderDate\u201d property mapped in the BOD Mapping Configuration file <property name=\u201corderDate\u201d bodName=\u201corderDate\u201d type=\u201cdate\u201d\/>. The getOrderNumber and setOrderNumber commands correspond to the \u201corderNumber\u201d property mapped in the BOD mapping configuration file as <property name=\u201corderNumber\u201d bodName=\u201corderNum\u201d type=\u201clong\u201d\/>. Finally, the getOrderUserId and setOrderUserId commands correspond to the \u2018orderUserId\u2019 property mapped in the BOD mapping configuration file <property name=\u201corderUserId\u201d bodName=\u201cuserId\u201d\/>. Business methods specific to the domain are then accomplished by the object. Exemplary of such methods in the code of Table 4 are \u201cprocessOrder\u201d, \u201ccancelOrder\u201d or \u201cchargeOrderToUser\u201d, the functions of which are self explanatory based on the titles.","The Item object is similarly structured and is provided in example form in Table 5.",{"@attributes":{"id":"p-0033","num":"0032"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"package com.boeing.bod.mapper.example.model;"},{"entry":"\/**"},{"entry":"\u2009* Item.java"},{"entry":"\u2009*"},{"entry":"\u2009* A simple model object written in java that the interfacing system would"},{"entry":"\u2009* define to match their specific business domain."},{"entry":"* @version 1.0"},{"entry":"\u2009* @since 5.0"},{"entry":"\u2009*\/"},{"entry":"public class Item {"},{"entry":"\u2003\u2003private long itemNumber;"},{"entry":"\u2003\u2003private String name;"},{"entry":"\u2003\u2003private double price;"},{"entry":"\u2003\u2003private String description;"},{"entry":"\u2003\u2003public String getDescription( ) {"},{"entry":"\u2003\u2003\u2003\u2003return description;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public void setDescription(String description) {"},{"entry":"\u2003\u2003\u2003\u2003this.description = description;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public long getItemNumber( ) {"},{"entry":"\u2003\u2003\u2003\u2003return itemNumber;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public void setItemNumber(long itemNumber) {"},{"entry":"\u2003\u2003\u2003\u2003this.itemNumber = itemNumber;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public String getName( ) {"},{"entry":"\u2003\u2003\u2003\u2003return name;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public void setName(String name) {"},{"entry":"\u2003\u2003\u2003\u2003this.name = name;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public double getPrice( ) {"},{"entry":"\u2003\u2003\u2003\u2003return price;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public void setPrice(double price) {"},{"entry":"\u2003\u2003\u2003\u2003this.price = price;"},{"entry":"\u2003\u2003}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The commands getDescription and setDescription correspond to the \u2018itemNumber\u2019 property mapped in the BOD mapping configuration file <property name=\u201cdescription\u201d bodName=\u201citemDesc\u201d\/>. The getItemNumber and setItemNumber commands Corresponds to the \u2018itemNumber\u2019 property mapped in the BOD mapping configuration file <property name=\u201citemNumber\u201d bodName=\u201citemNum\u201d type=\u201clong\u201d\/>. The getName and setName commands correspond to the \u2018name\u2019 property mapped in the BOD mapping configuration file <property name=\u201cname\u201d bodName=\u201citemName\u201d\/>. While the getPrice and setPrice commands correspond to the \u2018price\u2019 property mapped in the BOD mapping configuration file <property name=\u201cprice\u201d bodName=\u201citemPrice\u201d type=\u201cdouble\u201d\/>.","The final object, the GiftRegisteryOrder object, is shown in example form in Table 6. As a feature of the invention shown in the exemplary embodiment, the GiftRegistryOrder class is an \u201cextension\u201d of the Order class. Public class GiftRegistryOrder extends Order by a Java extension concept with the \u201c<subclass>\u201d configuration.",{"@attributes":{"id":"p-0036","num":"0035"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 6"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"package com.boeing.bod.mapper.example.model;"},{"entry":"\/**"},{"entry":"\u2009* GiftRegistryOrder.java"},{"entry":"\u2009*"},{"entry":"\u2009* A simple model object written in java that the interfacing system would"},{"entry":"\u2009* define to match their specific business domain."},{"entry":"\u2009* @since 5.0"},{"entry":"\u2009*\/"},{"entry":"public class GiftRegistryOrder extends Order {"},{"entry":"\u2003\u2003private String registryNum;"},{"entry":"\u2003\u2003private String registryType;"},{"entry":"\u2003\u2003public GiftRegistryOrder( ) {"},{"entry":"\u2003\u2003\u2003\u2003super( );"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003public String getRegistryNum( ) {"},{"entry":"\u2003\u2003\u2003\u2003return registryNum;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public void setRegistryNum(String registryNum) {"},{"entry":"\u2003\u2003\u2003\u2003this.registryNum = registryNum;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public String getRegistryType( ) {"},{"entry":"\u2003\u2003\u2003\u2003return registryType;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public void setRegistryType(String registryType) {"},{"entry":"\u2003\u2003\u2003\u2003this.registryType = registryType;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003\/* Business methods specific to the domain *\/"},{"entry":"\u2003\u2003public void markItemsAsPurchasedOnRegistry( ) { }"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"For this object, the getRegistryNum and setRegistryNum commands correspond to the \u2018registryNum\u2019 property mapped in the BOD mapping configuration file <property name=\u201cregistryNum\u201d bodName=\u201cregistryNumber\u201d\/>. The getRegistryType and returnRegistryType commands correspond to the \u2018registryType\u2019 property mapped in the BOD mapping configuration file <property name=\u201cregistryType\u201d bodName=\u201cregistryType\u201d\/>.","The addressing element to connect the BOD Mapper with the model objects, bodmapper.cfg.xml , provides the location of the exemplary configuration mapping file for the example is shown in Table 7.",{"@attributes":{"id":"p-0039","num":"0038"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 7"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<?xml version=\u201c1.0\u201d encoding=\u201dUTF-8\u201d ?>"]},{"entry":[{},{"u":"-"}]},{"entry":[{},"configuration\u201c>"]},{"entry":[{},"\u2003\u2002 <mappings>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003<mapping path=\u201dOrder.bm.xml\u201c \/>"]},{"entry":[{},"\u2003\u2009<\/mappings>"]},{"entry":[{},"\u2002\u2009<\/bod-mapper-config>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The BOD of Table 2 is mapped with this simple code to the configuration mapping file Order.bm.xml of Table 3. With the configuration mapping file, objects and addressing element in place, the system logic can then process the BOD information as required. Examples of processes conducted in the present example are an ordering system and an ordering service wherein the ordering system places an order via an order service.","Java code for the ordering system for the example is shown in Table 8. The ordering system relies on the conversion of data from the BOD by the BOD Mapper into the format of the various objects as defined above. This data is then recognizable to those business methods which are specific to the domain of the example.",{"@attributes":{"id":"p-0042","num":"0041"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 8"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"package com.boeing.bod.mapper.example;"},{"entry":"import java.sql.Timestamp;"},{"entry":"import com.boeing.bod.mapper.example.model.GiftRegistryOrder;"},{"entry":"import com.boeing.bod.mapper.example.model.Item;"},{"entry":"\/**"},{"entry":"\u2009* OrderingSystem.java"},{"entry":"* @version 1.0"},{"entry":"\u2009* @since 5.0"},{"entry":"\u2009*\/"},{"entry":"public class OrderingSystem {"},{"entry":"\u2003\u2003public static void main(String[ ] args) {"},{"entry":"\u2003\u2003\u2003\u2003\/\/place an example order"},{"entry":"\u2003\u2003\u2003\u2003new OrderingSystem( ).placeExampleOrder( );"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003\/**"},{"entry":"\u2003\u2003\u2009* Place an example order via the <code>OrderService<\/code>"},{"entry":"\u2003\u2003\u2009*\/"},{"entry":"\u2003\u2003public void placeExampleOrder( ) {"},{"entry":"\u2003\u2003\u2003\u2003GiftRegistryOrder exampleOrder = new GiftRegistryOrder( );"},{"entry":"\u2003\u2003\u2003\u2003exampleOrder.setOrderUserId(\u201c45\u201d);"},{"entry":"\u2003\u2003\u2003\u2003exampleOrder.setOrderDate(new"},{"entry":"Timestamp(System.currentTimeMillis( )));"},{"entry":"\u2003\u2003\u2003\u2003exampleOrder.setRegistryNum(\u201c487-W\u201d);"},{"entry":"\u2003\u2003\u2003\u2003exampleOrder.setRegistryType(\u201cWedding\u201d);"},{"entry":"\u2003\u2003\u2003\u2003Item tvItem = new Item( );"},{"entry":"\u2003\u2003\u2003\u2003tvItem.setItemNumber(I21);"},{"entry":"\u2003\u2003\u2003\u2003tvItem.setName(\u201c40\\\u201d LCD Wide Screen TV\u201d);"},{"entry":"\u2003\u2003\u2003\u2003tvItem.setPrice(1599.99);"},{"entry":"\u2003\u2003\u2003\u2003tvItem.setDescription(\u201cLCD Wide Screen TV, 1080p, 6000:1"},{"entry":"contrast ratio\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\/\/add the tv to the order"},{"entry":"\u2003\u2003\u2003\u2003exampleOrder.addItem(tvItem);"},{"entry":"\u2003\u2003\u2003\u2003Item dvdPlayerItem = new Item( );"},{"entry":"\u2003\u2003\u2003\u2003dvdPlayerItem.setItemNumber(548);"},{"entry":"\u2003\u2003\u2003\u2003dvdPlayerItem.setName(\u201cDVD Player\u201d);"},{"entry":"\u2003\u2003\u2003\u2003dvdPlayerItem.setPrice(199.99);"},{"entry":"\u2003\u2003\u2003\u2003dvdPlayerItem.setDescription(\u201cDVD Player that upconverts to"},{"entry":"1080p\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\/\/add the dvd player to the order"},{"entry":"\u2003\u2003\u2003\u2003exampleOrder.addItem(dvdPlayerItem);"},{"entry":"\u2003\u2003\u2003\u2003\/\/place the order via the ordering service"},{"entry":"\u2003\u2003\u2003\u2003new OrderService( ).sendOrder(exampleOrder);"},{"entry":"\u2003\u2003}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The Ordering Service process is provided by example Java code in Table 9. This example shows how tire BOD Mapper API  would be used to both map and parse an instance of Order to and from the \u2018PlaceOrder\u2019 BOD.",{"@attributes":{"id":"p-0044","num":"0043"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 9"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"package com.boeing.bod.mapper.example;"},{"entry":"import java.util.List;"},{"entry":"import com.boeing.bod.mapper.example.model.Order;"},{"entry":"import com.boeing.bod.mapper.BodMapper;"},{"entry":"import com.boeing.oagis.oa.BusinessObjectDocument;"},{"entry":"\/**"},{"entry":"\u2009* OrderService.java"},{"entry":"\u2009* @version 1.0"},{"entry":"\u2009* @since 5.0"},{"entry":"\u2009*\/"},{"entry":"public class OrderService {"},{"entry":"\u2003\u2003public void processOrder(BusinessObjectDocument bod) {"},{"entry":"\u2003\u2003\u2003\u2003List<Order> orders = BodMapper.parseBod(Order.class, bod);"},{"entry":"\u2003\u2003\u2003\u2003for(Order order : orders) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003order.processOrder( );"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public void sendOrder(Order order) {"},{"entry":"\u2003\u2003\u2003\u2003BusinessObjectDocument bod = BodMapper.mapBod(order);"},{"entry":"\u2003\u2003\u2003\u2003sendBod(bod);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public void sendBod(BusinessObjectDocument bod) {"},{"entry":"\u2003\u2003\u2003\u2003\/\/send the bod via some bod service or messaging system"},{"entry":"\u2003\u2003}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In this example the OrderService would both send and receive order requests, via sendOrder and processOrder respectively. The processOrder command processes an incoming order BOD by parsing the BOD into the proper format with the BOD Mapper and then processing the order itself. A BusinessObjectDocument is simply an object that represents the corresponding BOD XML as a Java class. The details of this implementation are not included in the BOD Mapper nor is it specific to its domain. The result provided by the inventive embodiment is simply an interface that should be viewed as the XML itself. The BOD represents the received place order BOD. There could be multiple <eg:Order> nodes contained in the BOD, thus the call to parseBod will return a List of all Orders.","The sendOrder command sends the supplied Order by first mapping it to the appropriate BOD (as configured in the BOD mapping configuration) and then sending the BOD via the interlacing system's messaging system. Finally, the sendBOD command is implemented by the interfacing system since the BOD Mapper is not a full messaging system solution, but simply a mechanism for translating an OAGIS BOD to and from a system model. This example demonstrates the flexibility and power of the inventive system. The ability for the BOD Mapper to transition the OAGIS BOD into an object which is then recognizable and directly operable by the domain processing the BOD greatly simplifies the interface programming requirements.","As an additional example embodiment, a BOD Mapper as disclosed is used on a system architected as a \u201csystem of systems\u201d solution which requires each individual sub-system to communicate with each other via OAGIS Business Object Documents (BOD). For the references in this example, the OAGIS BOD is simply a message that is defined in XML that complies with the OAGIS BOD standard. These BODs are sent between sub-systems via an Application Integration Manager (AIM) Gateway. The AIM Gateway acts as the main message bus between each sub-system, handling all the necessary routing and delivery of the BOD.","Communications on this interface between the AIM Gateway and each sub-system is enhanced by the BOD Mapper capabilities. The BOD Mapper simplifies this interface by mapping the contents of a model object, written by the sub-system, to a BOD for transmission to another sub-system. An exemplary use is for communications in a Sustainment Data System (SDS) environment wherein the BOD Mapper may be used to easily integrate SDS related services for maintaining aircraft, trucks, automobiles, motorcycles, tanks, ships, hovercraft, submarines and other vehicles, weapons system, or other complex, devices. The term aircraft is meant to include any aerospace vehicle, including a spacecraft, an airplane, and a helicopter. The phrase weapon system can include any mobile or fixed weaponry requiring periodic inspection and\/or maintenance. Further, a suitable weapon system may be mounted on, towed by, contained in, or associated with any of the vehicles described, above. The example shown in  and described herein is a brief description of elements of an aircraft discrepancy tracking system communicating over the gateway with the BOD Mapper simplifying the interface requirements on the Gateway. Submission of a discrepancy on an aircraft is accomplished via a BOD .","An example BOD for the discrepancy information transfer is shown in Table 10. In the code an example aircraft type, a Boeing F\/A 18 Hornet has two discrepancies which are being submitted for an aft wing and a generator. The code provides all of the necessary data for the BOD including originator information, a discrepancy number, occurrence date, model numbers, part numbers and serial numbers.",{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 10"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cutf-8\u201d?>"},{"entry":"<SubmitDiscrepancy xmlns:oa=\u201chttp:\/\/www.openapplications.org\/oagis\u201d"},{"entry":"\u2003\u2003\u2003\u2003xmlns:eg=\u201chttp:\/\/xmlns.path.to.ns\/example\/\u201d"},{"entry":"\u2003\u2003\u2003\u2003xmlns:xsi=\u201chttp:\/\/www.w3.org\/2001\/XMLSchema-instance\u201d>"},{"entry":"\u2003\u2003<oa:Update \/>"},{"entry":"\u2003\u2003<eg:Discrepancy>"},{"entry":"\u2003\u2003\u2003\u2003<eg:DiscrepancyNum>1065648<\/eg:DiscrepancyNum>"},{"entry":"\u2003\u2003\u2003\u2003<eg:OriginatorUserId>45<\/eg:OriginatorUserId>"},{"entry":"\u2003\u2003\u2003\u2003<eg:DateOccurred>2007-03-07T01:01:01-05:00"},{"entry":"\u2003\u2003\u2003\u2003<\/eg:DateOccurred>"},{"entry":"\u2003\u2003\u2003\u2003<eg:Aircraft>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<eg:Model>F\/A-18E\/F Super Hornet<\/eg:Model>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<eg:TailNumber>05-12345<\/eg:TailNumber>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<eg:SerialNumber>8445-878<\/eg:SerialNumber>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<eg:Part>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<eg:PartNum>121<\/eg:PartNum>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<eg:PartName>Aft Wing<\/eg:PartName>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<eg:PartSerial>45647-545<\/eg:PartSerial>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/eg:Part>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<eg:Part>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<eg:PartNum>122<\/eg:PartNum>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<eg:PartName>Generator<\/eg:PartName>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<eg:PartSerial>45647-546<\/eg:PartSerial>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/eg:Part>"},{"entry":"\u2003\u2003\u2003\u2003<\/eg:Aircraft>"},{"entry":"\u2003\u2003<\/eg:Discrepancy>"},{"entry":"<\/SubmitDiscrepancy>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Table 11 provides the exemplary configuration, mapping for the example to provide the primary java model object, definition that is supplied by the interfacing system",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 11"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cUTF-8\u201d?>"},{"entry":"\u2003\u2003\u2003<bod-mapping xmlns=\u201chttp:\/\/boeing.com\/bod\/mapper\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<class name=\u201ccom.boeing.bod.mapper.example.-"},{"entry":"\u2003\u2003\u2003\u2003Discrepancy\u201d ...>"},{"entry":"\u2003\u2003\u2003\u2003<request-bod name=\u201cSubmitDiscrepancy\u201d ... >"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<verb name=\u201cupdate\u201d ... \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<noun name=\u201c\u201d ... >"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<node name=\u201cpart\u201d ... \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<node name=\u201caircraft\u201d ... \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/noun>"},{"entry":"\u2003\u2003\u2003\u2003<\/request-bod>"},{"entry":"\u2003\u2003\u2003\u2003<response-bod name=\u201cSubmitDiscrepancy\u201d ... >"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<verb name=\u201cacknowledge\u201d ... \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<noun-ref name=\u201cdiscrepancy\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003<\/response-bod>"},{"entry":"\u2003\u2003\u2003\u2003<property name=\u201cdiscrepancyNumber\u201d"},{"entry":"\u2003\u2003\u2003\u2003bodName=\u201cdiscrepancyNum\u201d type=\u201clong\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003<property name=\u201coriginatorUserId\u201d bodName=\u201cuserId\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003<property name=\u201cdateOccurred\u201d bodName=\u201cdateOccurred\u201d"},{"entry":"type=\u201cdate\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003<subclass node=\u201caircraft\u201d"},{"entry":"class=\u201ccom.boeing.bod.mapper.example.AircraftDiscrepancy\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<property name=\u201cmodel\u201d bodName=\u201cmodel\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<property name=\u201ctailNumber\u201d bodName=\u201ctailNumber\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<property name=\u201cserialNumber\u201d bodName=\u201cserialNumber"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<collection name=\u201cparts\u201d node=\u201cpart\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003class=\u201ccom.boeing.bod.mapper.example.Part\u201d"},{"entry":"adder=\u201caddPart\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<property name=\u201cpartNumber\u201d bodName=\u201cPartNum\u201d"},{"entry":"type=\u201clong\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<property name=\u201cname\u201d bodName=\u201cPartName\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003<property name=\u201cserialNumber\u201d"},{"entry":"bodName=\u201cPartSerial\u201d \/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/collection>"},{"entry":"\u2003\u2003\u2003\u2003<\/subclass>"},{"entry":"\u2003\u2003<\/class>"},{"entry":"<\/bod-mapping>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"All properties that, should be mapped\/parsed to the BOD are listed. As in the prior example, the property name and the bodName can be different. The \u2018type\u2019 defaults to a string if not defined. Each property is required to have a getter\/setter in the associated model class that matches the \u2018name\u2019 defined. e.g. the Discrepancy class must have the following defined to support the \u2018discrepancyNumber\u2019 property: Siring getDiscrepancyNumber( ) and void setDiserepancyNumber (long discrepancyNumber). If the discrepancy involves a particular aircraft a subclass that represents a discrepancy specific to an aircraft is provided. The AircraftDiscrepancy must derive from the Discrepancy class. The \u2018node\u2019 attribute indicates that, the specific properties defined by tire AircraftDiscrepancy class should be mapped to a specific node within the BOD xml. An aircraft discrepancy may contain many parts involved in the discrepancy. The Part class is represented as an association with the AircraftDiscrepancy class. The \u2018node\u2019 attribute defines how this association should be mapped within the BOD xml. The \u2018adder\u2019 attribute declares that the BOD mapper should use the \u2018addPart\u2019 method on the AircraftDiscrepancy class to add a specific Part to the AircraftDiscrepancy when parsing from a BOD.","The model objects which provide the data relating to the BOD through the configuration mapping for this example include a discrepancy origination , an aircraft description for the aircraft on which the discrepancies exist and a part description for use in conjunction with the discrepancy definition. Table 12 provides an example of the discrepancy object.",{"@attributes":{"id":"p-0055","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 12"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"package com.boeing.bod.mapper.example.model;"},{"entry":"import java.sql.Timestamp;"},{"entry":"\/**"},{"entry":"* Discrepancy.java"},{"entry":"\u2009* @version 1.0"},{"entry":"* @since 5.0"},{"entry":"\u2009*\/"},{"entry":"public class Discrepancy {"},{"entry":"\u2003\u2003private long discrepancyNumber;"},{"entry":"\u2003\u2003private String originatorUserId;"},{"entry":"\u2003\u2003\u2003\u2003private Timestamp dateOccurred;"},{"entry":"\u2003\u2003public Discrepancy( ) {"},{"entry":"\u2003\u2003\u2003\u2003\/\/generate random discrepancy number"},{"entry":"\u2003\u2003\u2003\u2003this.discrepancyNumber = (long)Math.random( );"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public Timestamp getDateOccurred( ) {"},{"entry":"\u2003\u2003\u2003\u2003return dateOccurred;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public void setDateOccurred(Timestamp dateOccurred) {"},{"entry":"\u2003\u2003\u2003\u2003this.dateOccurred = dateOccurred;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public long getDiscrepancyNumber( ) {"},{"entry":"\u2003\u2003\u2003\u2003return discrepancyNumber;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public void setDiscrepancyNumber(long discrepancyNumber) {"},{"entry":"\u2003\u2003\u2003\u2003this.discrepancyNumber = discrepancyNumber;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public String getOriginatorUserId( ) {"},{"entry":"\u2003\u2003\u2003\u2003return originatorUserId;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public void setOriginatorUserId(String originatorUserId) {"},{"entry":"\u2003\u2003\u2003\u2003this.originatorUserId = originatorUserId;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003\/* Business methods specific to the domain *\/"},{"entry":"\u2003\u2003public void processDiscrepancy( ) { }"},{"entry":"\u2003\u2003public void cancelDiscrepancy( ) { }"},{"entry":"\u2003\u2003public void closeDiscrepancy( ) { }"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Each property defined in Discrepancy must have a corresponding getter\/setter that corresponds with the name of the property mapped in the BOD mapping configuration file. For instance the property String originatorUserId must be mapped via the following property <property name=\u201coriginatorUserId\u201d bodName=\u201cuserId\u201d\/> in Discrepancy.bm.xml. getDateOccurred corresponds to the \u2018dateOccurred\u2019 property mapped in the BOD mapping configuration file <property name=\u201cdateOccurred\u201d bodName=\u201cdateOccurred\u201d type=\u201cdate\u201d. Similarly, getDiscrepancy corresponds to the \u2018discrepancyNumber\u2019 property mapped in the BOD mapping configuration file<property name=\u201cdiscrepancyNumber\u201d bodName=\u201cdiscrepancyNum\u201d type=\u201clong\u201d\/>. Finally, getOriginatorID corresponds to the \u2018originatorUserId\u2019 property mapped in the BOD mapping configuration file<property name=\u201coriginatorUserId\u201d bodName=\u201cuserId\u201d\/>.","The object for the aircraft discrepancy extends the discrepancy object with additional data. An example of this object is shown in Table 13.",{"@attributes":{"id":"p-0058","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 13"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"import java.util.HashSet;"]},{"entry":[{},"import java.util.Set;"]},{"entry":[{},"\/**"]},{"entry":[{},"\u2009* AircraftDiscrepancy.java"]},{"entry":[{},"\u2002* @version 1.0"]},{"entry":[{},"\u2009* @since 5.0"]},{"entry":[{},"\u2009*\/"]},{"entry":[{},"public class AircraftDiscrepancy extends Discrepancy {"]},{"entry":[{},"\u2003\u2003private String model;"]},{"entry":[{},"\u2003\u2003private String tailNumber;"]},{"entry":[{},"\u2003\u2003private String serialNumber;"]},{"entry":[{},"\u2003\u2003private Set<Part> parts = new HashSet<Part>( );"]},{"entry":[{},"\u2003\u2003public AircraftDiscrepancy( ) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003super( );"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003\u2003\u2003public Set<Part> getParts( ) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003return parts;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public void setParts(Set<Part> parts) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003this.parts = parts;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public void addPart(Part part) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003if(part != null) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003this.parts.add(part);"]},{"entry":[{},"\u2003\u2003\u2003\u2003}"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public String getModel( ) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003return model;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public void setModel(String model) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003this.model = model;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public String getTailNumber( ) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003return tailNumber;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public void setTailNumber(String tailNumber) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003this.tailNumber = tailNumber;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public String getSerialNumber( ) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003return serialNumber;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public void setSerialNumber(String serialNumber) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003this.serialNumber = serialNumber;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003\/* Business methods specific to the domain *\/"]},{"entry":[{},"\u2003\u2003public void repairAircraft( ) { }"]},{"entry":[{},"}"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In Table 13, public class AircraftDiscrepancy extends Discrepancy and includes Set<Parts> which corresponds to the \u2018parts\u2019 collection mapped in the BOD mapping configuration file including <collection name=\u201cparts\u201d node=\u201cparts\u201d class=\u201ccom.boeing.bod.mapper.example.Part\u201d adder=\u201caddPart\u201d>. Similarly, addPart corresponds to the method name that was declared by the \u2018adder\u2019 attribute on the collection within the BOD mapping configuration file. <collection name=\u201cparts\u201d node=\u201cparts\u201d class=\u201ccom.boeing.bod.mapper.example.Part\u201d adder=\u201caddPart\u201d>. The class getModel corresponds to the \u2018model\u2019 property mapped in the BOD mapping configuration file <property name=\u201cmodel\u201d bodName=\u201caircraftModel\u201d\/>. Similarly, getTailNumber corresponds to the \u2018tailNumber\u2019 property mapped in the BOD mapping configuration file <property name=\u201ctailNumber\u201d bodName=\u201ctailNumber\u201d\/< and getSerialNumber corresponds to the \u2018serialNumber\u2019 property mapped in the BOD mapping configuration file <property name=\u201cserialNumber\u201d bodName=\u201cserialNumber\u201d\/>\/. The instructions specific to the domain can then operate on the data provided through translation of the BOD for required function definition such as repairing the aircraft.","The final object for part definition is shown in Table 14.",{"@attributes":{"id":"p-0061","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 14"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"package com.boeing.bod.mapper.example.model;"]},{"entry":[{},"\/**"]},{"entry":[{},"\u2009* Part.java"]},{"entry":[{},"\u2009*"]},{"entry":[{},"\u2002* @version 1.0"]},{"entry":[{},"\u2009* @since 5.0"]},{"entry":[{},"\u2009*\/"]},{"entry":[{},"public class Part {"]},{"entry":[{},"\u2003\u2003private long partNumber;"]},{"entry":[{},"\u2003\u2003private String name;"]},{"entry":[{},"\u2003\u2003private String serialNumber;"]},{"entry":[{},"\u2003\u2003public long getPartNumber( ) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003return partNumber;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public void setPartNumber(long partNumber) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003this.partNumber = partNumber;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public String getName( ) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003return name;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public void setName(String name) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003this.name = name;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public String getSerialNumber( ) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003return serialNumber;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003public void setSerialNumber(String serialNumber) {"]},{"entry":[{},"\u2003\u2003\u2003\u2003this.serialNumber = serialNumber;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"}"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In Table 14 getPartNumber corresponds to the \u2018partNumber\u2019 property mapped in the BOD mapping configuration file <property name=\u201cpartNumber\u201d bodName=\u201cpart Number\u201d type=\u201clong\u201d\/>, while getName corresponds to the \u2018name\u2019 property mapped in the BOD mapping configuration file <property name=\u201cname\u201d bodName=\u201cpart Name\u201d\/> and getSerialNumber corresponds to the \u2018serialNumber\u2019 property mapped in the BOD mapping configuration file <property name=\u201cserialNumber\u201d bodName=\u201cpartSerial\u201d\/>.","The local domain employs two local processes, DiscrepancySystem and DiscrepancyService. The example demonstrates how the BOD mapper API would be used to both map and parse an instance of Discrepancy to and from the \u2018SubmitDiscrepancy\u2019 bod. In this example the DiscrepancyService would both send and receive discrepancy submission requests, via sendDiscrepancy and processDiscrepancy respectively.","An incoming discrepancy BOD is processed by parsing the BOD into the proper format with the BOD mapper and then processing the discrepancy itself. A Business Object Document is simply an object that represents the corresponding BOD XML. The details of this implementation are not included in the BOD mapper nor is it specific to its domain. This is simply an interface that should be viewed as the xml itself. Example code to submit an example discrepancy via the DiscrepancyService is shown in Table 15.",{"@attributes":{"id":"p-0065","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 15"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"package com.boeing.bod.mapper.example;"},{"entry":"import java.sql.Timestamp;"},{"entry":"import com.boeing.bod.mapper.example.model.AircraftDiscrepancy;"},{"entry":"import com.boeing.bod.mapper.example.model.Part;"},{"entry":"\/**"},{"entry":"\u2009* DiscrepancySystem.java"},{"entry":"\u2002*"},{"entry":"\u2009* @version 1.0"},{"entry":"\u2009* @since 5.0"},{"entry":"\u2009*\/"},{"entry":"public class DiscrepancySystem {"},{"entry":"\u2003\u2003public static void main(String[ ] args) {"},{"entry":"\u2003\u2003\u2003\u2003\/\/place an example discrepancy"},{"entry":"\u2003\u2003\u2003\u2003new DiscrepancySystem( ).submitExampleDiscrepancy( );"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public void submitExampleDiscrepancy( ) {"},{"entry":"\u2003\u2003\u2003\u2003AircraftDiscrepancy exampleDiscrepancy = new"},{"entry":"AircraftDiscrepancy( );"},{"entry":"\u2003\u2003\u2003\u2003exampleDiscrepancy.setDiscrepancyNumber(1065648);"},{"entry":"\u2003\u2003\u2003\u2003exampleDiscrepancy.setOriginatorUserId(\u201c45\u201d);"},{"entry":"\u2003\u2003\u2003\u2003exampleDiscrepancy.setDateOccurred(new"},{"entry":"Timestamp(System.currentTimeMillis( )));"},{"entry":"\u2003\u2003\u2003\u2003exampleDiscrepancy.setModel(\u201cF\/A-18E\/F Super Hornet\u201d);"},{"entry":"\u2003\u2003\u2003\u2003exampleDiscrepancy.setTailNumber(\u201c05-12345\u201d);"},{"entry":"\u2003\u2003\u2003\u2003exampleDiscrepancy.setSerialNumber(\u201c8445-878\u201d);"},{"entry":"\u2003\u2003\u2003\u2003Part wingPart = new Part( );"},{"entry":"\u2003\u2003\u2003\u2003wingPart.setPartNumber(121);"},{"entry":"\u2003\u2003\u2003\u2003wingPart.setName(\u201cAft Wing\u201d);"},{"entry":"\u2003\u2003\u2003\u2003wingPart.setSerialNumber(\u201c45647-545\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\/\/add the wing part to the discrepancy"},{"entry":"\u2003\u2003\u2003\u2003exampleDiscrepancy.addPart(wingPart);"},{"entry":"\u2003\u2003\u2003\u2003Part generatorPart = new Part( );"},{"entry":"\u2003\u2003\u2003\u2003generatorPart.setPartNumber(122);"},{"entry":"\u2003\u2003\u2003\u2003generatorPart.setName(\u201cGenerator\u201d);"},{"entry":"\u2003\u2003\u2003\u2003generatorPart.setSerialNumber(\u201c45647-546\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\/\/add the generator part to the discrepancy"},{"entry":"\u2003\u2003\u2003\u2003exampleDiscrepancy.addPart(generatorPart);"},{"entry":"\u2003\u2003\u2003\u2003\/\/submit the discrepancy via the discrepancy service"},{"entry":"\u2003\u2003\u2003\u2003new DiscrepancyService( ).sendDiscrepancy"},{"entry":"\u2003\u2003\u2003\u2003(exampleDiscrepancy);"},{"entry":"\u2003\u2003}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The DiscrepancyService class is demonstrated in Table 16 which demonstrates how the BOD mapper API would be used to both map and parse an instance of Discrepancy to and from the \u2018SubmitDiscrepancy\u2019 bod. In this example the DiscrepancyService would both send and receive discrepancy submission requests, via sendDiscrepancy and processDiscrepancy respectively.",{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 16"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"import com.boeing.oagis.oa.BusinessObjectDocument;"},{"entry":"\/**"},{"entry":"\u2009* DiscrepancyService.java"},{"entry":"* @version 1.0"},{"entry":"\u2009* @since 5.0"},{"entry":"\u2009*\/"},{"entry":"public class DiscrepancyService {"},{"entry":"\u2003\u2003public void processDiscrepancy(BusinessObjectDocument bod) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003List<Discrepancy> discrepancies ="},{"entry":"BodMapper.parseBod(Discrepancy.class, bod);"},{"entry":"\u2003\u2003\u2003\u2003for(Discrepancy discrepancy : discrepancies) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003discrepancy.processDiscrepancy( );"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public void sendDiscrepancy(Discrepancy discrepancy) {"},{"entry":"\u2003\u2003\u2003\u2003BusinessObjectDocument bod = BodMapper.-"},{"entry":"\u2003\u2003\u2003\u2003mapBod(discrepancy);"},{"entry":"\u2003\u2003\u2003\u2003sendBod(bod);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003public void sendBod(BusinessObjectDocument bod) {"},{"entry":"\u2003\u2003\u2003\u2003\/\/send the bod via some bod service or messaging system"},{"entry":"\u2003\u2003}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"There could be multiple <eg:Discrepancy> nodes contained in the BOD, thus the call to parseBod will return a List of all Discrepancies, sendDiscrepancy (Discrepancy discrepancy) sends the supplied Discrepancy by first mapping it to the appropriate BOD (as configured in the BOD mapping configuration) and then sending the BOD via the interfacing system's messaging system. The sendBod command is not implemented by the interfacing system since the BOD mapper is not a full messaging system solution, but simply a mechanism for translating to and from a system model.","Having now described the invention in detail as required by the patent statutes, those skilled in the art will recognize modifications and substitutions to tire specific embodiments disclosed herein. Such modifications are within the scope and intent of the present invention as defined in the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWING FIGURES","p":["These and other features and advantages of the present invention will be better understood by reference to the following detailed description when considered in connection with the accompanying drawings wherein:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
