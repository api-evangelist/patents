---
title: Applet permissions manager
abstract: Disclosed are novel methods and apparatus for providing a permissions manager capable of assisting an applet, for example, in determination and/or grant of the permissions required for an operation. In an embodiment, an apparatus for managing permissions is disclosed. The apparatus includes a software application, a permissions manager coupled to the software application and receiving a request sent by the software application, and a programming environment coupled to the permissions manager. The request may indicate a permission, which may be requested by the permissions manager. The permissions manager may access the programming environment to determine a required permission corresponding to the permission and to determine how to grant the required permission.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06993665&OS=06993665&RS=06993665
owner: Sun Microsystems, Inc.
number: 06993665
owner_city: Santa Clara
owner_country: US
publication_date: 20020501
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["COPYRIGHT NOTICE","FIELD OF INVENTION","BACKGROUND OF INVENTION","SUMMARY OF INVENTION","DETAILED DESCRIPTION"],"p":["A portion of the disclosure of this patent document contains material, which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever. The following notice applies to the software and data as described below and in the drawings hereto: Copyright\u00a9 2002, Sun Microsystems, Inc., All Rights Reserved.","The present invention generally relates to the field of applets. More specifically, an embodiment of the present invention provides an applet permissions manager to assist in determination and\/or grant of the permissions required for an operation.","As computers become more commonplace in everyday life, so do the demands on the functionality they provide. As such, computer programs are increasingly growing in size resulting in program bloat, data corruption, and \u201cspaghetti\u201d code. A very popular solution to these problems is provided through applets. An applet is generally a small part of an application that can be distributed economically. For example, an applet may display a document on a computer screen, spell-check a document, or play a sound file. Programs written in the Java language are often organized into applets. Applets can be interpreted at run-time, in part, because of their relatively small size.","When developing applets (in Java for example) which requires special permissions such as reading or writing from the client's hard drive, it is necessary to make special requests to a browser's proprietary security application programming interface (API). Different types and brands of browsers often require different requests and use different names for the types of permissions included with the requests.","In addition to different interfaces, browsers generally require that the request for the privilege and the actual use of that privilege be made on the current call stack. For example, a Java method which reads from a client's hard drive needs also be the method which makes the request for the permission from the browser. In many instances, the Java classes that run as part of an applet in a browser may also need to run in other environments (e.g., stand-alone and as part of a Java servlet on a web server). Since the browser APIs may not exist in these environments, classes which use them may not compile correctly. Furthermore, there may be no need to use these APIs in any case. Accordingly, the present solutions pose a number of shortcomings, which hinder the efficient growth and\/or utilization of implementations utilizing applet-type solutions.","The present invention, which may be implemented utilizing a general-purpose digital computer, in some embodiments, includes novel methods and apparatus to provide a permissions manager capable of assisting an applet in determination and\/or grant of the permissions required for an operation. In an embodiment, an apparatus for managing permissions is disclosed. The apparatus includes a software application, a permissions manager coupled to the software application and receiving a request sent by the software application, and a programming environment coupled to the permissions manager. The request may indicate a permission, which may be requested by the permissions manager. The permissions manager may access the programming environment to determine a required permission corresponding to the permission and to determine how to grant the required permission.","In another embodiment, a method of managing permissions is disclosed. The method includes: receiving a request from a software application, the request indicating a permission; requesting the permission; accessing a programming environment to determine a required permission corresponding to the permission; accessing the programming environment to determine how to grant the required permission; and granting the required permission.","In the following description, numerous details are set forth. It will be apparent, however, to one skilled in the art that embodiments of the invention may be practiced without these specific details. In other instances, well-known structures, devices, and techniques have not been shown in detail, in order to avoid obscuring the understanding of the description. The description is thus to be regarded as illustrative instead of limiting.","Reference in the specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least an embodiment of the invention. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment.","In addition, select embodiments of the present invention include various operations, which are described herein. The operations of the embodiments of the present invention may be performed by hardware components or may be embodied in machine-executable instructions, which may be in turn utilized to cause a general-purpose or special-purpose processor, or logic circuits programmed with the instructions to perform the operations. Alternatively, the operations may be performed by a combination of hardware and software.","Moreover, embodiments of the present invention may be provided as computer program products, which may include machine-readable medium having stored thereon instructions used to program a computer (or other electronic devices) to perform a process according to embodiments of the present invention. The machine-readable medium may include, but is not limited to, floppy diskettes, optical disks, compact disc-read only memories (CD-ROMs), and magneto-optical disks, read-only memories (ROMs), random-access memories (RAMs), erasable programmable ROMs (EPROMs), electrically EPROMs (EEPROMs), magnetic or optical cards, flash memory, or other types of media or machine-readable medium suitable for storing electronic instructions and\/or data.","Additionally, embodiments of the present invention may be downloaded as a computer program product, wherein the program may be transferred from a remote computer (e.g., a server) to a requesting computer (e.g., a client) by way of data signals embodied in a carrier wave or other propagation medium via a communication link (e.g., a modem or network connection). Accordingly, herein, a carrier wave shall be regarded as comprising a machine-readable medium.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","b":["100","100","102","104","106","108","110","112","114","118","116","100","100","120"]},"In an embodiment, the computer system  includes a Sun Microsystems computer utilizing a SPARC microprocessor available from several vendors (including Sun Microsystems of Palo Alto, Calif.). Those with ordinary skill in the art understand, however, that any type of computer system may be utilized to embody the present invention, including those made by Hewlett Packard of Palo Alto, Calif., and IBM-compatible personal computers utilizing Intel microprocessor, which are available from several vendors (including IBM of Armonk, N.Y.). In addition, instead of a single processor, two or more processors (whether on a single chip or on separate chips) can be utilized to provide speedup in operations. It is further envisioned that the processor  may be a complex instruction set computer (CISC) microprocessor, a reduced instruction set computing (RISC) microprocessor, a very long instruction word (VLIW) microprocessor, a processor implementing a combination of instruction sets, and the like.","The network interface  provides communication capability with other computer systems on a same local network, on a different network connected via modems and the like to the present network, or to other computers across the Internet. In various embodiments, the network interface  can be implemented utilizing technologies including, but not limited to, Ethernet, Fast Ethernet, wide-area network (WAN), leased line (such as T1, T3, optical carrier 3 (OC3), and the like), analog modem, digital subscriber line (DSL and its varieties such as high bit-rate DSL (RDSL), integrated services digital network DSL (IDSL), and the like), cellular, time division multiplexing (TDM), universal serial bus (USB and its varieties such as USB II), asynchronous transfer mode (ATM), satellite, cable modem, and\/or FireWire.","Moreover, the computer system  may utilize operating systems such as Solaris, Windows (and its varieties such as CE, NT, 2000, XP, ME, and the like), HP-UX, IBM-AIX, PALM, UNIX, Berkeley software distribution (BSD) UNIX, Linux, Apple UNIX (AUX), and the like. Also, it is envisioned that in certain embodiments, the computer system  is a general purpose computer capable of running any number of applications such as those available from companies including Oracle, Siebel, Unisys, Microsoft, and the like.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2","b":["200","200","202","204","202","204"]},"The object , in an embodiment, may request performance of a task by, for example, the permissions manger . The permissions manager  may then determine which permissions are required to accomplish the task and\/or how to get those permissions granted. The object  may also specify to the permissions manager  to invoke a method once the permissions are granted, in accordance with another embodiment of the present invention.","Hence, the object  does not have to know about local browser settings, for example. It is envisioned that the embodiments of the present invention are not limited to requesting permissions from a user of a browser. For example, the permissions manger  may be part of an applet and\/or a servlet. It is envisioned that a browser specific class may be utilized to make the appropriate calls. In general, objects are defined by creating classes. The classes may act as templates that instruct a compiler on how to construct an actual object. In one embodiment, it is envisioned that if the permissions manager  determines that it is not running through a browser, it may make the call directly to the appropriate class. Accordingly, no other classes are bound to run in a browser (thereby providing more flexibility, for example).","The permissions manager  can further be coupled to an applet environment . In one embodiment, the applet environment  may be implemented as an object that is aware of the current state of the browser used (if any). The permissions manager , for example, may work with the applet environment  to determine any permissions required and\/or have the required permissions granted. In another embodiment, the permissions manager  can interrogate a method provided by the object  for specific information which may assist the permissions manager  in requesting the appropriate permissions. The specific information may include input\/output streams and\/or there types. For example, a file input stream may indicate that permission may need to be requested for writing to a local file (e.g., a hard drive or other types of storage such as those discussed with respect to ). Similarly, a network stream may indicate that the permissions manager  may need to request permission for network access. Alternatively, in an embodiment, the object  may provide such detailed information to the permissions manager  through, for example, a parameter list passed by the object .",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 3","FIG. 2","FIG. 2","FIG. 2"],"b":["300","300","302","302","202","304","304","202","306","306","204"]},"A step  determines the permission(s) required, for example, for invocation of the method specified in the step . A step  determines how to grant the required permission (which is determined in the step ). In a step , the required permission is granted. A step  invokes the specified method (from the step ). In a step , the results of the request made in the steps  are returned to the element that invokes the step . It is envisioned that the steps , , , , , and\/or  may be preformed by the permissions manger  of  in various embodiments.","Accordingly, in one embodiment, an applet environment component is disclosed which may be a Java class that knows how to request special privileges from a browser which that applet is running in. The applet environment component determines which browser and operating system is running by, for example, examining the environment properties of the browser's Java virtual machine (JVM). In other words, the applet environment component may provide an interface which a Java class may invoke to make a privilege request. In Java, for example, the applet environment component may invoke the privilege request by utilizing the following command line:\n\nboolean invokeprivilege (string privilege, Hashtable params, PrivilegeRequest obj)\n","The privilege parameter can specify the privilege to request in a browser neutral form. The params parameter can be a hash table, which includes parameters to send to the PrivilegeRequest callback. The obj parameter can be a Java object which is invoked after the privilege request has been made.","In an embodiment, the PrivilegeRequest may be another Java interface which is implemented by the class which calls the applet environment (e.g., by calling AppletEnv.invokePrivilege( )). The interface, in turn, may define the following method:\n\nboolean privilegeCallback (Hashtable params)\n","Once the privilege has been granted, the applet environment may call the invokePrivilege method to call obj.privilegeCallback, which can then perform whatever operations it needs to with the extended privileges. Moreover, the object does not have live inside the applet. In one embodiment, the object may live anywhere and the permissions manager may decide whether to handle applet type permissions.","Therefore, the problems that are being solved by at least one embodiment of the present invention include: first, an object does not need to know the details associated with a special access; and, second, if the object did know the details, at every point the object needs do that act, the same segment of code needs to be duplicated for that point. The duplication of the same segment of code in various locations will pose at least three problems in itself: first, if that code needs to be changed, it involves changing every occurrence of the code (i.e., upgradeability and\/or maintenance issues). Second, when one wants to do distributed processing, it is beneficial to have the code centralized. Third, the distributed coding will also enable centralize security management which will make security enforcement a lot easier. Furthermore, the duplication of the same segment of code posses a problem because those calls to request the permissions will have to be on the current call stack in Java.","In further embodiments, novel methods and apparatus are disclosed to provide a Java component which may hide from the Java class requesting the privileges the browser-specific API classes as well as specific types of browser security requests. Such an abstraction permits the Java class to be easily reused in other runtime environments.","Additionally, in another embodiment, the techniques of the present invention may be applied to sharable content object reference model (SCORM) implementations including, for example, courseware applications. In the SCORM context, the embodiments of the present invention may be utilized to save a user's progress through a course for example. This can be especially useful when a user does not have access to a learning management system (LMS). An LMS generally includes solutions for cataloging, course registration, provision of a course, tracking (for example, by managers), and accounting. Such an LMS is typically a large software system, which can easily cost over $100,000. In most cases, an LMS is too costly for one user or cannot be run locally on a client's system, which may lack the necessary local resources.","Moreover, it is envisioned that, in an embodiment, the user's progress through the course may be tracked by utilizing the content structure format (CSF) hierarchy of blocks and sharable content objects (SCOs) defining the structure of a given course in accordance with the SCORM standard. The SCORM standard is hereby incorporated herein by reference for all purposes. Further information regarding the SCORM standard may be found by reference to www.adlnet.org.","The foregoing description has been directed to specific embodiments. It will be apparent to those with ordinary skill in the art that modifications may be made to the described embodiments, with the attainment of all or some of the advantages. For example, the techniques of the present invention may be applied to computer-based and\/or electronic gaming technologies. Therefore, it is the object of the appended claims to cover all such variations and modifications as come within the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":["The present invention may be better understood and its numerous objects, features, and advantages made apparent to those skilled in the art by reference to the accompanying drawings in which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1","b":"100"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2","b":"200"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3","b":"300"},"The use of the same reference symbols in different drawings indicates similar or identical items."]},"DETDESC":[{},{}]}
