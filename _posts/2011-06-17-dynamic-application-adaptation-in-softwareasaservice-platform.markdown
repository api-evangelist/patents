---
title: Dynamic application adaptation in software-as-a-service platform
abstract: Dynamic application adaptation in software-as-a-service platform, in one aspect, may receive an access permission associated with a published shared data management data object in the software-as-a-service platform having shared data management and a plurality of applications deployed, look up one or more rules associated with one or more features of an application deployed on the software-as-a-service platform, based on the received access permission, and activate or deactivate said one or more features associated with said plurality of applications based on said one or more rules.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08635673&OS=08635673&RS=08635673
owner: International Business Machines Corporation
number: 08635673
owner_city: Armonk
owner_country: US
publication_date: 20110617
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["The present application relates generally to computers and applications, and more particularly to dynamic application adaptation in software-as-a-service platform.","In many entities still, in-house IT applications are poorly integrated, for example, with disparate applications running on their own, even when there are commonalities in the data those applications use. In such cases, data updated by one application is usually imported to another application manually. For instance, an IT administrator may have to manually access data updated or used by one application and load on to another application.","Take for example, local or municipal government's IT applications used to support service delivery for the municipalities. Those applications are typically aligned directly to the departmental structure, with application(s) covering only the tasks associated with a single department. However, services offered and provided to citizens often involve the work of many departments. Consider, for example, a parcel that has been recently renovated by its owners. The parcel owner applies for a building permit from the Building department. After the work has been completed and the Certificate of Occupancy has been issued, the Assessor's office must update the parcel details to reflect the renovations and initiate a parcel reassessment. The newly assessed value has to be updated in the tax system for calculation of the property tax liability. Finally, the property tax payments collected by the tax department are directly entered into the tax system, and must later be updated in and reconciled with the accounts of the Finance department's General Ledger. This example describes the complex interactions between four departments as part of the administration for parcel management services including the renovations, assessment and property tax processes.","In many cases, the departments all use distinct, nonintegrated, custom software programs to aid in their work. Additionally, departments may also use paper-based records and manual record-keeping. Municipalities may choose to pay for pair-wise integration between software applications or purchase preintegrated software packages, especially for departments that share information frequently. Departments such as Police and Justice, Assessment and Tax, Personnel and Finance rely heavily on the sharing of information that is central to their work. The Police department must notify the Justice department of arrest and investigation details as input to current and future court cases. The Assessment department must periodically give the Tax department the tax roll, a listing of all taxable parcels, their current assessment values, and valid exemptions. The Personnel department (and\/or individual departments) maintains information on employee pay rates, raises, benefits, and work hours. These factors are used to calculate semi-monthly pay to produce payroll checks.","Although municipalities have the choice to pay for integration between independent applications, the cost is usually prohibitive. Additionally, the association of IT applications to a single specific department can be a limiting factor for service offerings. The applications are not flexible to adapt to new needs, therefore the only way currently to have this information reflected in multiple department software is through constant manual transmission and inputting.","A method and a system for dynamic application adaptation in software-as-a-service platform may be provided. The method, in one aspect, may include receiving an access permission associated with a published shared data management data object in the software-as-a-service platform having shared data management and a plurality of applications deployed. The method may also include looking up one or more rules associated with one or more features of an application deployed on the software-as-a-service platform, based on the received access permission. The method may further include activating or deactivating said one or more features associated with said plurality of applications based on said one or more rules.","A system for dynamic application adaptation in software-as-a-service platform, in one aspect, may include a permission adaptation harness module operable to execute on a processor and receive an access permission associated with a published shared data management data object in the software-as-a-service platform having shared data management and a plurality of applications deployed. The permission adaptation harness module may be further operable to look up one or more rules associated with one or more features of an application deployed on the software-as-a-service platform, based on the received access permission, and further activate or deactivate said one or more features associated with said plurality of applications based on said one or more rules.","A computer readable storage medium storing a program of instructions executable by a machine to perform one or more methods described herein also may be provided.","Further features as well as the structure and operation of various embodiments are described in detail below with reference to the accompanying drawings. In the drawings, like reference numbers indicate identical or functionally similar elements.","Shared data management (SDM) enables platform-mediated data sharing among applications, for example, in Software-as-a-Service platform. Software-as-a-Service or SaaS refers to providing the use of software or application as a service on demand, for instance, by subscription, e.g., in a \u201cpay-as-you-go\u201d model. A customer or a user subscribes for the use of a software application, for instance, as needed by the customer. Typically, an application being provided as a service is resident in a remote platform which a customer may access via a network (e.g., the Internet via a browser or the like interface). The remote platform may include a number of different applications. For instance, a provider of SaaS provides a computing platform and resources for running applications. The applications need not have been developed by the provider, but may have been deployed and set up on the platform by independent software vendors. SDM provides a common database system, a common data object schema or model, and logic or algorithms for enabling those applications to share data. SDM is described in detail in co-owned U.S. patent application Ser. No. 13\/051,303 entitled, \u201cShared Data Management in Software-As-A-Service Platform\u201d and filed on Mar. 18, 2011, which application is incorporated herein by reference in its entirety. SDM may function as a data marketplace or data broker for dynamic data trading, and enable data trade among applications. Data trade herein refers to offers and requests specified by applications. Applications may offer to update data (e.g., shared objects and attributes); Applications may request read access to the data (e.g., shared objects and attributes). Co-owned U.S. patent application Ser. No. 13\/163,274 entitled, \u201cOpen Data Marketplace for Municipal Services\u201d and filed on Jun. 17, 2011 describes data marketplace, co-owned U.S. patent application Ser. No. 13\/163,373 entitled, \u201cEnforcing Data Sharing Policy through Shared Data Management\u201d and filed on Jun. 17, 2011 describes enforcing data sharing. Those applications are incorporated herein by reference in their entirety.","In data trades, applications may offer to update specific attributes of shared objects. In one aspect, update offers are optional. An SDM administrator may accept or reject an update offer. Also in data trades, application may request read access to specific attributes of shared objects. Read requests may be designated by the applications as optional or mandatory. If a mandatory read request is denied, the application may not be able to perform its basic functionality. For example, a tax application may not be able to perform computing a tax amount, if it does not have read access to assed value of a land parcel. An optional read request may be granted or denied by an SMD administrator, for instance, based on business requirements. If an optional read request is denied, the application should continue to operate but may be with reduced functionality. In one embodiment of the present disclosure, applications are enabled to adapt to permission changes gracefully.","Applications may interact with SDM in different modes, e.g., permissions related interactions and data interactions. There may be permissions related interactions in which an application may send data trade (e.g., offers to update data and\/or requests to read data) to SDM, e.g., when the application is added to a subscription set, and in which the application may receive notifications of permissions granted or denied. During normal operations of applications, permission related interactions may include sending permission change notifications to the applications in response to an administrator of SDM changing permissions, and the applications receiving the notifications. Data interactions with SDM may occur during normal operations of the applications and may include the applications reading and\/or updating data managed by SDM.","Permission changes to data access may potentially affect all parts of applications running on a SaaS platform, such as the presentation layer, program logic and persistence layer. As an example, consider a presentation layer that includes a web page and a field on the page that allows a user to update attribute value of an object. If an update offer for that attribute is not accepted, that web page should be presented to the user with that field disabled. As another example, if a read access request is denied for optional attribute, that attribute should not be displayed on the presentation layer, for instance, on a web page. In addition, program logic that handles the data associated with the denied permission may need to be changed. Further, in persistence layer, database access patterns may have to change based on granted or denied permission. For instance, if an update offer is accepted, an application may continue to update the data also in its own database, but the data should always be read from the SDM. Other applications accessing that data should also read from SDM for data coherency.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","b":["106","108","110","112","112","104","114","116","104","104","104","102","102","106","102","104","106","102","108","104","108","106","114"]},"In one aspect, SDM permissions may be associated with application features. For example, SDM  may manage a parcel object, e.g., a data object having information about a land parcel, which may have attributes pertaining to liens on land parcels. An application may have a functional component or a module having to do with liens, for example, referred to as a lien module. The lien module of the application may be enabled or disabled dynamically based on the application's permission to access the parcel object or its one or more attributes managed by SDM . In one embodiment of the present disclosure, the permission adaptation harness module  may be made aware of attribute bundles (data objects and one or more of attributes of the data objects) associated with the features or functional modules of the application. In one aspect, rules or the like specification may associate granted permissions with enabling of the features in the application. Rules may be specified in formats such as extended markup language (XML), database table, and\/or others. The permission adaptation harness module  may activate or deactivate application features based on grated permissions from SDM  dynamically.","In another aspect, users may perform what-if scenarios, for instance to determine or visualize how an application may behave differently based on different permission scenarios. Different what-if scenarios may be tested, for instance, by changing the rules and\/or permissions.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2"},"A SaaS platform administrator may publish the SDM data model managed. The data model includes data objects and their attributes managed in SDM . Applications , , , developed with offers and requests on the published SDM data model may be registered to the SaaS platform . In addition, the SaaS platform administrator may add new applications to a catalog of applications  on the SaaS platform . The catalog of applications  may include a list of applications that are registered to the SaaS platform. When an application is registered to a SaaS platform, it shows up in the application catalog or service catalog . The end users of the SaaS platform browse the catalog and subscribe one or more applications from the catalog. The subscribed applications will show up in the end user's subscription set. A portal  shows various services available in the SaaS platform\u2014including (1) the application catalog so that a user can browse available services in the platform and subscribe one or more; (2) the subscribed application set of the user; (3) the user interface of each of the subscribed application; (4) the account page or administrative page where the user can edit the account information and\/or other information; (5) the customer service page; and (6) other service pages. The services and pages displayed in the portal may differ from one user to another, depending on their roles, e.g., end-user or administrator. For example, the end-user will not see the SDM editor, which is used by the administrator to grant or deny permissions for offers and requests.","Administrators of systems that own the data published in the data model may grant or deny permissions to data trade requests, for instance, via a shared data editor . A workspace staging area  may be provided in which the administrator when changing permissions, may invoke one or more working copies of the applications  that may be affected by the changed permissions. The working copies of applications are applications (app , . . . , app N), but with the current data trade permission setting. The administrator makes changes to the permission setting in the Shared Data Editor. However the administrator does not fully see in the editor how the changes affect the applications, for instance, in their presentation layer, business logic, and persistence logic. Before making the changes permanent, the administrator may deploy the applications in the working staging area which is not shown to the end-users, and review the effect of the changes in the applications. Once the administrator confirms that the applications are working properly with the permission changes, the administrator may make the changes permanent and the applications may be deployed to the portal  which is viewed by the end-users. Using the workspace staging area , the administrator may perform \u201cwhat-if\u201d analysis by investigating the modified presentation layer (e.g., user interface) and functionality upon changed permissions. The workspace or staging area  is a temporary place where applications and other services are shown; all the services work as if they are functioning in the portal. The difference is that the staging area is shown only to the administrator, but not to the end-users; the end-users do not usually recognize the existence of the staging area.","From the results of the what-if analysis performed in the workspace stage area , the administrator may select and commit a working copy of an application to a subscription set in a SaaS platform portal . The selected and committed copy of an application is deployed for a customer and shown in the SaaS portal  with the configured presentation layer and functionality.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3","b":["302","304","306","308","310"]},"In one embodiment of the present disclosure, a SaaS platform provides a \u201cshared services\u201d. It provides \u201cmulti-tenancy\u201d capability. Multiple tenants can share the SaaS platform, and its hardware infrastructure and applications deployed on the platform, without recognizing the existence of other tenants because the platform provides a level of \u201cisolation\u201d. In an example of a SaaS platform for the municipal governments, a SaaS platform set up for a state of New York can be shared by multiple municipalities, i.e., tenants, e.g., town of New Castle, city of Cohoes, village of Mamaroneck, county of Westchester, etc. There is one \u201cSaaS platform administrator\u201d for the entire platform. This system administrator manages the applications registered to the platform and enlists them in the application\/service catalog of the platform. In addition, each tenant has one administrator, referred to as a \u201ccustomer administrator\u201d, or an \u201cSDM administrator\u201d. In this setup, each tenant has an SDM setting. There may be only one physical SDM system, but it can be logically shared by multiple tenants. Each tenant has a different \u201capplication subscription set\u201d and so data trade permission setting. An SDM administrator (also referred to as a customer administrator) for each tenant may make changes to the data trade permissions in the Shared Data Editor.","At , whenever changing permission, a customer administrator may invoke one or more working copies of the applications that may be affected by the changed permissions. At , a customer administrator may perform \u201cwhat-if\u201d analysis by investigating the modified presentation layer (e.g., user interface) and functionality upon changed permissions. The steps  to  may be repeated with different permissions.","At , a customer administrator may select and commit a working copy of an application to the subscription set. An application catalog shows all or subsets of applications registered to a SaaS platform and accepted by its administrator. A subscription set is a collection of applications from the catalog subscribed by a tenant in the platform. A SDM administrator or customer administrator or tenant administrator sees the subscription set of the administrator's municipality in the Shared Data Editor, and manages the data trade permission setting among the applications in the administrator's subscription set.","At , the selected and committed copy of the application is deployed for a customer and shown in the SaaS portal with the configure user interface and functionality. The configure user interface and functionality include the application presentation layer and\/or program logic adapted to the permission change.","As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages, a scripting language such as Perl, VBS or similar languages, and\/or functional languages such as Lisp and ML and logic-oriented languages such as Prolog. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the present invention are described with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","The flowchart and block diagrams in the figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","The systems and methodologies of the present disclosure may be carried out or executed in a computer system that includes a processing unit, which houses one or more processors and\/or cores, memory and other systems components (not shown expressly in the drawing) that implement a computer processing system, or computer that may execute a computer program product. The computer program product may comprise media, for example a hard disk, a compact storage medium such as a compact disc, or other storage devices, which may be read by the processing unit by any techniques known or will be known to the skilled artisan for providing the computer program product to the processing system for execution.","The computer program product may comprise all the respective features enabling the implementation of the methodology described herein, and which\u2014when loaded in a computer system\u2014is able to carry out the methods. Computer program, software program, program, or software, in the present context means any expression, in any language, code or notation, of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following: (a) conversion to another language, code or notation; and\/or (b) reproduction in a different material form.","The computer processing system that carries out the system and method of the present disclosure may also include a display device such as a monitor or display screen for presenting output displays and providing a display through which the user may input data and interact with the processing system, for instance, in cooperation with input devices such as the keyboard and mouse device or pointing device. The computer processing system may be also connected or coupled to one or more peripheral devices such as the printer, scanner, speaker, and any other devices, directly or via remote connections. The computer processing system may be connected or coupled to one or more other processing systems such as a server, other remote computer processing system, network storage devices, via any one or more of a local Ethernet, WAN connection, Internet, etc. or via any other networking methodologies that connect different computing systems and allow them to communicate with one another. The various functionalities and modules of the systems and methods of the present disclosure may be implemented or carried out distributedly on different processing systems or on any single platform, for instance, accessing data stored locally or distributedly on the network.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements, if any, in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.","Various aspects of the present disclosure may be embodied as a program, software, or computer instructions embodied in a computer or machine usable or readable medium, which causes the computer or machine to perform the steps of the method when executed on the computer, processor, and\/or machine. A program storage device readable by a machine, tangibly embodying a program of instructions executable by the machine to perform various functionalities and methods described in the present disclosure is also provided.","The system and method of the present disclosure may be implemented and run on a general-purpose computer or special-purpose computer system. The computer system may be any type of known or will be known systems and may typically include a processor, memory device, a storage device, input\/output devices, internal buses, and\/or a communications interface for communicating with other computer systems in conjunction with communication hardware and software, etc.","The terms \u201ccomputer system\u201d and \u201ccomputer network\u201d as may be used in the present application may include a variety of combinations of fixed and\/or portable computer hardware, software, peripherals, and storage devices. The computer system may include a plurality of individual components that are networked or otherwise linked to perform collaboratively, or may include one or more stand-alone components. The hardware and software components of the computer system of the present application may include and may be included within fixed and portable devices such as desktop, laptop, and\/or server. A module may be a component of a device, software, program, or system that implements some \u201cfunctionality\u201d, which can be embodied as software, hardware, firmware, electronic circuitry, or etc.","The embodiments described above are illustrative examples and it should not be construed that the present invention is limited to these particular embodiments. Thus, various changes and modifications may be effected by one skilled in the art without departing from the spirit or scope of the invention as defined in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
