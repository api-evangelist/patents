---
title: Parallel processing for multiple instance real-time monitoring
abstract: Systems and methods are disclosed for analyzing network traffic data to generate complex statistics associated with the network traffic in real-time through parallel processing and data pipelining. In one implementation, a system includes a processor and a memory. The memory stores instructions that cause the processor to generate a plurality of program instances, wherein a first program instance observes the network traffic and uses a plurality of execution threads to distribute portions of the network traffic to additional program instances tasked with generating statistics associated with the network traffic. In other embodiments, a plurality of additional execution threads to the first program instance are tasked with generating the statistics. In either case, the generated statistics are placed into a data pipeline organized into time intervals of generated statistics, wherein the computation of higher-order statistics are computed as the lower-order time intervals are processed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08547975&OS=08547975&RS=08547975
owner: Verisign, Inc.
number: 08547975
owner_city: Dulles
owner_country: US
publication_date: 20110628
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DESCRIPTION OF THE EMBODIMENTS"],"p":["This disclosure is generally directed to systems and methods for analyzing network traffic data. More specifically, this disclosure is directed to systems and methods for monitoring, processing, and generating real-time statistics for very high and sustained network traffic through parallel processing.","Companies collect statistics associated with network traffic to observe, among other things, how well the company's network services are performing. This helps the companies identify and diagnose service problems, such as those that may result from hardware failures, software defects, or network service attacks. Thus, determining anomalies and the causes of anomalies in network traffic may enable networks to function more efficiently. For example, being able to detect sudden increases or decreases in network traffic and determining who or what is responsible for the sudden changes can help ensure that information is exchanged efficiently across networks. Companies may also wish to keep official statistics for network functions, particularly companies associated with Internet services. Thus, companies seek high-performance network traffic monitoring systems capable of producing detailed and accurate statistics regarding their network traffic.","Nevertheless, existing systems for real-time monitoring of network traffic suffer from several disadvantages. For example, existing systems generally utilize multiple network interface packet capture processes, resulting in the use of significant processing resources that rapidly increase with each additional packet capture process. Further, the complexity of any generated statistics tends to result in a proportional trade-off in both timeliness and processing resources.","Thus, existing systems for monitoring network traffic tend to focus on high performance at the expense of depth of analysis or, alternatively, attempt to provide a detailed analysis but do so at the expense of time and resources. Accordingly, no system currently exists that provides a sufficient combination of high-performance and in-depth analyses. The speed and amount of network data, meanwhile, continue to increase. Thus, a need exists for a system able to provide meaningful analyses in real-time.","Systems and methods consistent with disclosed embodiments analyze network traffic data. Specifically, different embodiments monitor, process, and generate real-time statistics for very high and sustained network traffic though parallel processing and data pipelining.","According to some embodiments, the systems and methods may generate statistics associated with passively observed network traffic. Network data packets associated with observed network traffic may be routed to particular program instances based on routing rules and properties associated with the data packets. The routed data packets may be processed through a series of buffers and queues to avoid dropped packets before being picked up by the program instances. The program instances may generate statistics associated with the routed network packets. Finally, the generated statistics may be placed into the data pipeline. Other embodiments may employ additional execution threads of a single program instance to generate the statistics, rather than multiple program instances.","In other embodiments, the network data packets may be load balanced by routing the network data packets according to program instance capacity, rather than routing rules and network packet properties. In such an embodiment, a backend program instance may coalesce the generated statistics before placing the combined statistics into a data pipeline.","Consistent with other disclosed embodiments, computer-readable storage devices may store program instructions that are executable by one or more processors to implement any of the methods, disclosed herein.","Additional objects and advantages of disclosed embodiments will be set forth in part in the description which follows, and in part will be obvious from the description, or may be learned by practice of the disclosed embodiments. The objects and advantages of the disclosed embodiments will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims.","It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the disclosed embodiments, as claimed.","The following detailed description refers to the accompanying drawings. Whenever possible, the same reference numbers are used in the drawing and the following description to refer to the same or similar parts. While several exemplary embodiments and features of the invention are described herein, modifications, adaptations, and other implementations are possible, without departing from the spirit and scope of the invention. Instead, the proper scope of the invention is defined by the appended claims.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1","b":["100","120","122","123","121","120","120","120","130","130","120","115"]},"Processor  may include one or more known processing devices, such as a microprocessor from the Pentium\u2122 or Xeon\u2122 family manufactured by Intel\u2122, the Turion\u2122 family manufactured by AMD\u2122, or any of various processors manufactured by Sun Microsystems. Memory  may include one or more storage devices configured to store information used by processor  to perform certain functions related to disclosed embodiments. Storage  may include a volatile or non-volatile, magnetic, semiconductor, tape, optical, removable, nonremovable, or other type of storage device or computer-readable medium.","In some embodiments, memory  may include one or more network data collection and analysis programs or subprograms  loaded from storage  or elsewhere that, when executed by network data analyzer server , perform various procedures, operations, or processes consistent with disclosed embodiments. In one embodiment, memory  may include a network data collection and analysis program  that monitors network traffic associated with network traffic through network device ; performs packet capture (PCAP) functions, logs data associated with the network traffic; processes the stored data associated with network traffic; computes statistics associated with the network traffic; reports the network traffic statistics; and an integrative support program that links the other programs, allowing them to use a common data storage, provides a common user interface, performs basic bookkeeping tasks, and provides user guidance and help.","Methods, systems, and articles of manufacture consistent with disclosed embodiments are not limited to separate programs or computers configured to perform dedicated tasks. For example, memory  may be configured with a network data collection and analysis programs  that performs several functions when executed by processor . For example, memory  may include a single program  that performs the functions of the network data analyzer server , or program  could comprise multiple programs. Moreover, processor  may execute one or more programs located remotely from network data analyzer server . For example, network data analyzer server  may access one or more remote programs that, when executed, perform functions related to disclosed embodiments.","Memory  may also be configured with an operating system (not shown) that performs several functions well known in the art when executed by network data analyzer server . By way of example, the operating system may be Microsoft Windows\u2122, Unix\u2122, Linux\u2122, Solaris\u2122, or some other operating system. The choice of operating system, and even the use of an operating system, is not critical to any embodiment.","Network data analyzer server  may include one or more I\/O devices (not shown) that allow data to be received and\/or transmitted by network data analyzer server . I\/O devices may also include one or more digital and\/or analog communication input\/output devices that allow network data analyzer server  to communicate with other machines and devices, such as Central\/Remote Relay . Central\/Remote Relay  may include one or more files or databases that store information and are accessed and\/or managed through network data analyzer server . By way of example, the databases may be Oracle\u2122 databases, Sybase\u2122 databases or other relational databases, or non-relational databases, such as Hadoop sequence files, HBase or Cassandra. The databases or other files may include, for example, data and information related to the source and destination of a network request, the data contained in the request, etc. Systems and methods of disclosed embodiments, however, are not limited to separate databases.","Network data analyzer server  may receive data from external machines and devices and output data to external machines and devices via I\/O devices. The configuration and number of input and\/or output devices incorporated in I\/O devices may vary as appropriate for certain embodiments. Network data analyzer server  may be standalone, or it may be part of a subsystem, which may, in turn, be part of a larger system, such as the Central\/Remote Relay .",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1","b":["120","124","120","124","120","124","120","124"]},"One or more network devices  may be communicatively connected to Network . Network  may include the Internet. Network devices  may be network load balancers, network routers, switches, computers, servers, laptops, mainframes, or other network devices. Network device(s)  may observe traffic associated with one or more network site(s), one or more network site silos, and\/or one or more network services. For example, in a hierarchical network of nodes comprising network sites and associated silos, network devices  may be placed at any node of the hierarchy such that all network traffic for all nodes below that hierarchical level are observed. One or more additional network devices  may also be communicatively connected to Network . Network devices  may be network load balancers, network routers, switches, computers, servers, laptops, mainframes, or other devices capable of communicating via a network. Network devices  may generate the observed network traffic.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 2A","b":["124","207","1"]},"In one embodiment, Packet Interface  is the main thread which creates other application threads, such as the below-discussed Parse\/Routing Thread , Message Queue Threads ()-(), and Reporting Thread. Packet Interface  also reads and orders network data packets associated with a network data stream using a packet capture library, such as PCAP, and places the ordered packets in shared memory, such as packet buffers queue , for subsequent processing by other threads.","Parse\/Routing Thread  fetches the data packets from the shared memory (packet buffer queues ) and parses them so that it may identify particular properties of the data packets, such as the source and destination IP addresses, transport layer ports, Top-Level Domains (TLD), or any other feature of a network data packet. Parse\/Routing Thread  next breaks up the network data stream by filtering the data packets according to filtering\/routing rules and determined packet properties. The filtering\/routing rules may be based directly upon the determined packet properties, such as the destination IP address, or indirectly from the determined packet properties using, for example, regular expression pattern matching. Parse\/Routing Thread  may break up the data stream according to the filtering\/routing rules by, for example, associating the data packets with one or more listener instance ()-(1) tasked with computing statistics for a particular packet property or properties. For example, all data packets associated with a destination IP by the filtering\/routing rules may be routed to a listener instance or instances tasked with computing statistics associated with that destination IP. Once associated with a listener instance, the filtered data packets may be placed on the appropriate shared memories, such as amortized blocking queues ()-().","Accordingly, the network data stream need only be observed by a single listening instance, which reduces the computation load on the network data analyzer . Further, because the network data stream is divided among listener instances ()-(1) according to the filtering\/routing rules, the computation of statistics is highly parallel and does not require the network data stream be copied, as often found in existing systems, further reducing the computational load on network data analyzer .","Message Queue Threads ()-() fetch the routed packets from amortized blocking queues ()-() and place the routed packets on memory shared with the associated listener instances ()-(1), such as listener message queues ()-(). Listener instances ()-(1) subsequently pick up the data packets from the shared memory and compute statistics according to its defined purpose. As further described below, the computed statistics are then placed by listener instances ()-(1) into a data pipeline.","A Reporting Thread (not pictured) may periodically obtain reporting information and publishes them to, for example, Central\/Remote Relay . Reporting information may include the number of packets read from the interface, the number of packets dropped by kernel, the number of packets routed to each listener instance tasked with computing statistics for the routed packets, the number of packets discarded due to queue overflows, and\/or heartbeat messages indicating availability.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 2B","b":["124","207","2","207","203","207","2","207","207","2","207"],"i":["n+","n+","n+"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 3","FIG. 3","FIG. 3"]},"Thus, the data-pipeline prioritizes speed over space by not copying data from one time interval to another. When a time interval is expired, its memory is returned to the memory pool. Additionally, once a data block is merged into a higher order time interval, the associated memory is returned. Thus, if there are six ten second intervals that make up a minute, all six data blocks associated with the ten second intervals are not necessarily retained for a full minute.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 4","b":["120","400","400","124","400"]},"At step , network data packets associated with a network data stream may be observed. In one embodiment, the monitoring may be accomplished on a dedicated to port mirroring\/monitoring, such as a SPAN port and utilizing PCAP. As indicated above, PCAP consists of an application programming interface for capturing network traffic. At step , the observed network data packets may be routed based on properties associated with the data packets. Properties associated with the data packets may include, for example, source or destination Internet Protocol (IP) addresses, Top-Level Domain, port, type of DNS query, or any other feature of a packet. At step , the routed network data packets may be processed. At step , statistics associated with the routed network packets may be generated. The generated statistics may indicate, for example, the number of successful and\/or unsuccessful requests to a particular server within the observed network. At step , the generated statistics may be placed into the data pipeline, such as the data pipeline depicted in .",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 5","FIG. 4"],"b":["410","501","502","503","504","203","202"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 6","FIG. 4"],"b":["420","601","602","603","604","207","2","207","205","1","205","204","1","204"],"i":["n+","n","n"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 7","FIG. 4"],"b":["430","701","204","1","204","702","206","1","206","207","2","207"],"i":["n","n","n+"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 8","FIG. 5"],"b":["440","801","207","1","207","206","1","206","802","800","207","1","207","2","207"],"i":["n+","n","n+"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 9","FIG. 3","FIG. 4"],"b":["450","901","902","903"]},"The foregoing descriptions have been presented for purposes of illustration and description. They are not exhaustive and do not limit the disclosed embodiments to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practicing the disclosed embodiments. For example, the described implementation includes software, but the disclosed embodiments may be implemented as a combination of hardware and software or in firmware. Examples of hardware include computing or processing systems, including personal computers, servers, laptops, mainframes, micro-processors, and the like. Additionally, although disclosed aspects are described as being stored in a memory on a computer, one skilled in the art will appreciate that these aspects can also be stored on other types of computer-readable storage media, such as secondary storage devices, like hard disks, floppy disks, a CD-ROM, USB media, DVD, or other forms of RAM or ROM.","Computer programs based on the written description and disclosed methods are within the skill of an experienced developer. The various programs or program modules can be created using any of the techniques known to one skilled in the art or can be designed in connection with existing software. For example, program sections or program modules can be designed in or by means of .Net Framework, .Net Compact Framework (and related languages, such as Visual Basic, C, etc.), XML, Java, C++, JavaScript, HTML, HTML\/AJAX, Flex, Silverlight, or any other now known or later created programming language. One or more of such software sections or modules can be integrated into a computer system.","Other embodiments will be apparent to those skilled in the art from consideration of the specification and practice of the embodiments disclosed herein. The recitations in the claims are to be interpreted broadly based on the language employed in the claims and not limited to examples described in the present specification or during the prosecution of the application, which examples are to be construed non-exclusive. Further, the steps of the disclosed methods may be modified in any manner, including by reordering steps and\/or inserting or deleting steps. It is intended, therefore, that the specification and examples be considered as exemplary only, with a true scope and spirit being indicated by the following claims and their full scope equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate several embodiments and together with the description, serve to explain the principles of the disclosed embodiments. In the drawings:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
