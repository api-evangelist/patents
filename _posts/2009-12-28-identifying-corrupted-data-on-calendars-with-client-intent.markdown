---
title: Identifying corrupted data on calendars with client intent
abstract: Identification of corrupted event data may be provided. Calendar events, such as appointments and meetings, may be created and copied to a plurality of attendee calendars. Changes to the event may be logged and, if the change results from a user interaction with a user interface, a user intent identifier may be associated with the log entry. Other changes that do not result from direct user interaction may not be associated with the user intent identifier. Event corruption detection may identify out-of-sync properties between two calendar events associated with the same meeting and, if the out-of-sync property is not associated with the user intent identifier, the properties may be updated to match each other.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08392365&OS=08392365&RS=08392365
owner: Microsoft Corporation
number: 08392365
owner_city: Redmond
owner_country: US
publication_date: 20091228
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Related U.S. patent application Ser. No. 12\/647,934, filed Dec. 28, 2009, and entitled \u201cCalendar Repair Assistant,\u201d assigned to the assignee of the present application, is hereby incorporated by reference.","Related U.S. patent application Ser. No. 12\/647,944, filed Dec. 28, 2009, and entitled \u201cRepairing Calendars with Standard Meeting Messages,\u201d assigned to the assignee of the present application, is hereby incorporated by reference.","Calendar repair is a process for updating meeting properties using a standardized message. In some situations, different copies of meeting events may be either inconsistent between organizers and attendees or contain corrupted data. Once bad meetings are identified, a mechanism is needed to repair the inconsistencies and\/or corruptions. Conventional systems do not leverage existing calendar processing workflow and use direct-write access to each event. This causes problems because this can actually cause the sort of corruption of the event that the repair is meant to correct. Further, inconsistent or corrupted properties may be copied from one calendar to another.","Calendar repair using standardized messages may be provided. This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter. Nor is this Summary intended to be used to limit the claimed subject matter's scope.","Identification of corrupted event data may be provided. Calendar events, such as appointments and meetings, may be created and copied to a plurality of attendee calendars. Changes to the event may be logged and, if the change results from a user interaction with a user interface, a user intent identifier may be associated with the log entry. Other changes that do not result from direct user interaction may not be associated with the user intent identifier. Event corruption detection may identify out-of-sync properties between two calendar events associated with the same meeting and, if the out-of-sync property is not associated with the user intent identifier, the properties may be updated to match each other.","Both the foregoing general description and the following detailed description provide examples and are explanatory only. Accordingly, the foregoing general description and the following detailed description should not be considered to be restrictive. Further, features or variations may be provided in addition to those set forth herein. For example, embodiments may be directed to various feature combinations and sub-combinations described in the detailed description.","The following detailed description refers to the accompanying drawings. Wherever possible, the same reference numbers are used in the drawings and the following description to refer to the same or similar elements. While embodiments of the invention may be described, modifications, adaptations, and other implementations are possible. For example, substitutions, additions, or modifications may be made to the elements illustrated in the drawings, and the methods described herein may be modified by substituting, reordering, or adding stages to the disclosed methods. Accordingly, the following detailed description does not limit the invention. Instead, the proper scope of the invention is defined by the appended claims.","The repair of calendar entries allows a server to correct inconsistencies between multiple copies of a single event. Determining when these inconsistencies should be corrected may benefit from providing additional intent data when a change to an event is made. By recording when a user makes a deliberate change to their copy of the event, as opposed to when a change is introduced by accident and\/or by an automated process, differing properties can exist in copies of the same event while allowing an automatic repair process to correct corrupted properties.","Any calendar client software that modifies calendar items may save a special piece of user intent metadata together with the calendar item. This metadata may identify that the change is being done as a result of a user interaction with their calendar client. This metadata may be referred to as \u201cclient intent\u201d. The client intent may be stored as a property on the calendar item and may be available on the calendar item in any calendar folder. The client intent metadata may also be persisted as part of other copies of the event.","For meeting series and exceptions, deletions of individual instances may be recorded on the master\/organizer event. The server may compare this event against previous versions of the recurrence to determine which instance was deleted. Responses, changes in time, and changes in location for exception copies of the event in the series may be recorded on the exception copy itself. A save operation on the event copy may reset the value of the intent, meaning that the intent on each snapshot of the meeting in an event log should reflect the action the user took at that moment. That is, while an initial change to the event may be intentional and may be associated with client intent metadata, a later change to the same property by an automated process may be recorded without the client intent metadata. The changed property of the event copy may thus be flagged as changed without intent during a later repair operation.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 1","FIG. 4"],"b":["100","110","120","130","140","150","120","130","140","150","120","110","120","130","140","150"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 2","FIG. 5"],"b":["200","200","500","200","200","205","210","110"]},"Method  may then advance to stage  where computing device  may create copies of the first event on calendars associated with each of a plurality of attendees of the event. For example, a meeting request message may be sent, such as by an e-mail, to each of a plurality of users. Each user may accept or reject the meeting request in an e-mail\/communication application. Upon acceptance of the meeting request, the application may create an event on the user's calendar, in an integrated calendar functionality of the communication application and\/or in a separate calendar application. The application may copy properties from the organizer's event, such as start time, end time, duration, and\/or location to create the attendee's event.","From stage , method  may advance to stage  where computing device  may receive a change to at least one of the events. For example, the start time property of one of the user's events may be changed, such as from 9:30 AM to 10:30 AM. The change may be to the organizer's event and\/or one of the plurality of attendee events. Event changes may comprise, for example, deleting a meeting and\/or an instance of a recurring meeting, changing an attendee's response status, changing the start time, end time, and\/or duration of the meeting, changing the location of the meeting, and\/or changing the subject of the meeting.","After receiving the event change at stage , method  may advance to stage  where computing device  may create an entry in a changelog recording the change to the event. For example, the entry may comprise an identifier for the event and details of the old and new values for the changed property. The changelog may be associated with the copy of the event being changed, and may record all changes to that copy of the event. Consistent with embodiments of the invention, the changelog may be associated with each of the copies of the event and\/or the organizer copy of the event and may record all changes to any copy of the event. That is, a single changelog may be used to track changes made to any copy of the event for a given appointment and\/or meeting.","From stage , method  may advance to stage  where computing device  may determine whether the change to the event was intentional. For example, the event change may result from a direct user interaction with a user interface (e.g., a \u201cdelete event\u201d menu item, a keyboard input for changing the value of an event property, and\/or a drag and drop event in a calendar application to move the event from one time to another). A non-intentional change, by contrast, may result from another application accessing the event, such as a calendar synchronization between the calendar application and a mobile device. Several external protocols may be operative to allow changing of an event's properties without user interaction, such as Exchange\u00ae ActiveSync, Exchange\u00ae Web Services, Messaging Application Programming Interface (MAPI), and\/or Collaboration Data Objects (CDO).","If, at stage , computing device  determines that the change did result from an intentional user interaction, method  may advance to stage  where computing device  may add a user intent identifier to the record of the event change in the change log. For example, server  may add metadata comprising text, binary data, and\/or a hexadecimal value or values that identifies the change as resulting from a user's selection of a user interface element. The user intent metadata may comprise several pieces of data including, but not limited to, an identity of the user making the change, whether the user is an attendee, an organizer, and\/or a delegate to the user with access to the user's calendar, a response status, a time the change was made, a new value of the property, and\/or a prior value of the property. Method  may then end at stage .","If computing device  determines, at stage , that the change did not result from an intentional user interaction, method  may advance to stage  where computing device  may determine whether the change to the event may impact the user's attendance at the event. For example, a non-intentional change may modify an attendee event's start time from 9:30 AM to 10:30 AM. This change, or similar changes such as a duration change that may indicate a user is available for another meeting, and\/or a location change, may cause the attendee to miss the meeting, and\/or arrive late or early for the meeting.","From stage , method  may advance to stage  where computing device  may update the changed event property. For example, where the change is made to an attendee's copy of the event, server  may revert the out-of-sync property to match a value from the corresponding property of the organizer's event. If the change is made to the organizer's event, however, the property value may be propagated to the copies of the events associated with the attendees. Consistent with embodiments of the invention, server  may request confirmation from the organizer before propagating the change and\/or revert the property's value to match that of the corresponding property from one of the attendees' copies of the event. Method  may then end at stage .",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3A","b":["300","310","320","330","310","320","300","330","300"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3B","b":["350","360","370","360","350","370","350"]},"Consistent with embodiments of the invention, method  may be invoked by server  to compare the events of first calendar  with the events of second calendar . For example, first meeting  may comprise a start time property of 9:30 AM while copy of the first meeting  may comprise a corresponding start time property of 11:30 AM. Since first meeting  is associated with the organizer of the event, and the start time property may be considered to be critical to attendance, the start time of 9:30 AM may be used to update copy of the first meeting  on second calendar . For a second example, method  may determine that the user of second calendar  accepted a meeting request for lunch meeting  and may further determine that the event is missing from second calendar . Server  may therefore create an event on second calendar  corresponding to lunch meeting . For another example, server  may compare copy of the second meeting  with second meeting  and determine that the only difference is in the meeting title. This difference may be determined to not be critical, and so the corresponding title properties may be left out-of-sync between the two events. Consistent with embodiments of the invention, the occurrence of the comparison and determination may be recorded in a log associated with the event. Server  may refer to the log on a later comparison of the two events, and may consequently skip over the non-critical information rather than re-compare the properties known to be out-of-sync. An administrator of server  may configure a list of event properties considered to be critical, and may update this list at any time. If the list has changed, server  may be operative to determine whether any previously determined out-of-sync properties are now considered to be critical, and may update those properties in accordance with method .",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4","b":["400","400","410","420","430","440","450","460","470","480","490","450","460","480","490"]},"Method  may produce an output file comprising information indicating what updates, if any, may have been made along with identifying information for the event being updated. An output file may be produced for each user and\/or each event, such as a file per user, per event, per periodic update. Consistent with embodiments of the invention, a single output file may be used for all logged updates. Each logged update may comprise a plurality of properties, such as a category, an organizer, an attendee (and\/or attendees), an indication if the item was repaired due to an issue with the organizer's item or the attendee's item, a start and end time of the meeting, a subject of the meeting, a meeting type (single event, occurrence master, or occurrence instance), and\/or a repair action.","If an event includes a group and\/or a distribution list (e.g., a single attendee entry associated with a plurality of users), server  may be operative to expand the distribution list and compare the organizer's event to a copy of the event on each of the plurality of users' calendars. Consistent with embodiments of the invention, expansion of the group may be limited to a maximum number of users to avoid negatively impacting server performance. This group expansion may be configured by an administrator of server .","An embodiment consistent with the invention may comprise a system for identifying corrupted event data. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to determine whether a property of a first event differs from a corresponding property of at least one second event, determine whether the property of the first event was intentionally changed by a user, and, if so, update the corresponding property of the at least one second event to match the property of the first event.","Another embodiment consistent with the invention may comprise a system for identifying corrupted event data. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to create an event, receive a change to a copy of the event, create an entry associated with the change in a changelog, and determine whether the change to the copy of the event is in response to an interaction with a user interface. If so, the processing unit may be further operative to associate a user intent identifier with the entry in the changelog.","Yet another embodiment consistent with the invention may comprise a system for identifying corrupted event data. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to create a master event on an organizer's calendar, create a plurality of copies of the event on a plurality of attendee calendars, receive a change to a property of at least one of the plurality of copies of the event, log the change to the at least one of the plurality of copies of the event to a changelog associated with the master event, and determine whether the change to the at least one of the plurality of copies of the event resulted from a user interface interaction. If so, the processing unit may be further operative to associate a user-intent metadata identifier with the logged change in the changelog. If not, the processing unit may be further operative to determine whether the change to the property of the at least one of the plurality of copies of the event will impact the attendance of the at least one attendee associated with the at least one of the plurality of copies of the event and, if so, update the property of the at least one of the plurality of copies of the event to match a corresponding property of the master event.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 5","FIG. 5"],"b":["500","500","500","518","500","500","100","100","500"]},"With reference to , a system consistent with an embodiment of the invention may include a computing device, such as computing device . In a basic configuration, computing device  may include at least one processing unit  and a system memory . Depending on the configuration and type of computing device, system memory  may comprise, but is not limited to, volatile (e.g. random access memory (RAM)), non-volatile (e.g. read-only memory (ROM)), flash memory, or any combination. System memory  may include operating system , one or more programming modules , and may include a calendar application . Operating system , for example, may be suitable for controlling computing device 's operation. In one embodiment, programming modules  may include an event log module . Furthermore, embodiments of the invention may be practiced in conjunction with a graphics library, other operating systems, or any other application program and is not limited to any particular application or system. This basic configuration is illustrated in  by those components within a dashed line .","Computing device  may have additional features or functionality. For example, computing device  may also include additional data storage devices (removable and\/or non-removable) such as, for example, magnetic disks, optical disks, or tape. Such additional storage is illustrated in  by a removable storage  and a non-removable storage . Computer storage media may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. System memory , removable storage , and non-removable storage  are all computer storage media examples (i.e. memory storage.) Computer storage media may include, but is not limited to, RAM, ROM, electrically erasable read-only memory (EEPROM), flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device  may also have input device(s)  such as a keyboard, a mouse, a pen, a sound input device, a touch input device, etc. Output device(s)  such as a display, speakers, a printer, etc. may also be included. The aforementioned devices are examples and others may be used.","Computing device  may also contain a communication connection  that may allow device  to communicate with other computing devices , such as over a network in a distributed computing environment, for example, an intranet or the Internet. Communication connection  is one example of communication media. Communication media may typically be embodied by computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave or other transport mechanism, and includes any information delivery media. The term \u201cmodulated data signal\u201d may describe a signal that has one or more characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media may include wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, radio frequency (RF), infrared, and other wireless media. The term computer readable media as used herein may include both storage media and communication media.","As stated above, a number of program modules and data files may be stored in system memory , including operating system . While executing on processing unit , programming modules  (e.g. event log module ) may perform processes including, for example, one or more of method 's stages as described above. The aforementioned process is an example, and processing unit  may perform other processes. Other programming modules that may be used in accordance with embodiments of the present invention may include electronic mail and contacts applications, word processing applications, spreadsheet applications, database applications, slide presentation applications, drawing or computer-aided application programs, etc.","Generally, consistent with embodiments of the invention, program modules may include routines, programs, components, data structures, and other types of structures that may perform particular tasks or that may implement particular abstract data types. Moreover, embodiments of the invention may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers, and the like. Embodiments of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","Furthermore, embodiments of the invention may be practiced in an electrical circuit comprising discrete electronic elements, packaged or integrated electronic chips containing logic gates, a circuit utilizing a microprocessor, or on a single chip containing electronic elements or microprocessors. Embodiments of the invention may also be practiced using other technologies capable of performing logical operations such as, for example, AND, OR, and NOT, including but not limited to mechanical, optical, fluidic, and quantum technologies. In addition, embodiments of the invention may be practiced within a general purpose computer or in any other circuits or systems.","Embodiments of the invention, for example, may be implemented as a computer process (method), a computing system, or as an article of manufacture, such as a computer program product or computer readable media. The computer program product may be a computer storage media readable by a computer system and encoding a computer program of instructions for executing a computer process. The computer program product may also be a propagated signal on a carrier readable by a computing system and encoding a computer program of instructions for executing a computer process. Accordingly, the present invention may be embodied in hardware and\/or in software (including firmware, resident software, micro-code, etc.). In other words, embodiments of the present invention may take the form of a computer program product on a computer-usable or computer-readable storage medium having computer-usable or computer-readable program code embodied in the medium for use by or in connection with an instruction execution system. A computer-usable or computer-readable medium may be any medium that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device.","The computer-usable or computer-readable medium may be, for example but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, device, or propagation medium. More specific computer-readable medium examples (a non-exhaustive list), the computer-readable medium may include the following: an electrical connection having one or more wires, a portable computer diskette, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, and a portable compact disc read-only memory (CD-ROM). Note that the computer-usable or computer-readable medium could even be paper or another suitable medium upon which the program is printed, as the program can be electronically captured, via, for instance, optical scanning of the paper or other medium, then compiled, interpreted, or otherwise processed in a suitable manner, if necessary, and then stored in a computer memory.","Embodiments of the present invention, for example, are described above with reference to block diagrams and\/or operational illustrations of methods, systems, and computer program products according to embodiments of the invention. The functions\/acts noted in the blocks may occur out of the order as shown in any flowchart. For example, two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order, depending upon the functionality\/acts involved.","While certain embodiments of the invention have been described, other embodiments may exist. Furthermore, although embodiments of the present invention have been described as being associated with data stored in memory and other storage mediums, data can also be stored on or read from other types of computer-readable media, such as secondary storage devices, like hard disks, floppy disks, or a CD-ROM, a carrier wave from the Internet, or other forms of RAM or ROM. Further, the disclosed methods' stages may be modified in any manner, including by reordering stages and\/or inserting or deleting stages, without departing from the invention.","All rights including copyrights in the code included herein are vested in and the property of the Applicant. The Applicant retains and reserves all rights in the code included herein, and grants permission to reproduce the material only in connection with reproduction of the granted patent and for no other purpose.","While the specification includes examples, the invention's scope is indicated by the following claims. Furthermore, while the specification has been described in language specific to structural features and\/or methodological acts, the claims are not limited to the features or acts described above. Rather, the specific features and acts described above are disclosed as example for embodiments of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated in and constitute a part of this disclosure, illustrate various embodiments of the present invention. In the drawings:",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIGS. 3A-3B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
