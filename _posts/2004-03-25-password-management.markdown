---
title: Password management
abstract: A password management solution which provides a user with convenient access to multiple resources (e.g. systems and services), and also provides the flexibility to establish varying password security requirements for each resource is disclosed. In an embodiment, there is provided a password registry for registering resources and securely storing user ID and encrypted password information. An unencrypted user-provided password may be encrypted by a process associated with each resource, using an encryption algorithm specific to that resource, before storage of the encrypted password in the password registry. An encrypted password retrieved from the password registry may be decrypted by a process associated with each resource using a decryption algorithm specific to that resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07650632&OS=07650632&RS=07650632
owner: International Business Machines Corporation
number: 07650632
owner_city: Armonk
owner_country: US
publication_date: 20040325
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["The present invention relates generally to data processing systems, and more specifically to password management.","In a centralized or distributed data processing system, a plurality of systems or services (collectively \u201cresources\u201d) may be available to a user. Each of these resources may have an access control, requiring a user to have a valid user identification (\u201cuser ID\u201d), as well as an authenticator, such as a valid key, token or password, to gain access. For the purposes of the present description, the term \u201cpassword\u201d is used in its broadest sense to cover any such authenticator. For a user requiring access to a number of resources, remembering and entering a user ID and password for each resource at the beginning of each logon session may be cumbersome. The problem may be exacerbated if there are multiple password management systems being used to manage each password. A solution for addressing this problem would be desirable.","The present invention provides a password management solution which provides a user with convenient access to multiple resources (e.g. systems and services), and also provides the flexibility to establish varying password security requirements for each resource.","In an embodiment, there is provided a password registry for registering resources and securely storing encrypted passwords and associated identifying information. The identifying information may include, for example, a user identification (user ID), a resource hostname, and a resource type.","An unencrypted user-provided password may be encrypted by a process associated with each resource, using an encryption algorithm specific to that resource, before storage of the encrypted password in the password registry. An encrypted password retrieved from the password registry may be decrypted by a process associated with each resource using a decryption algorithm specific to that resource.","In an embodiment, in a distributed computing system, an encryption\/decryption process may execute as a \u201cfront-end\u201d client process running locally with the password registry, and may control access to a \u201cback-end\u201d resource.","In an embodiment, the \u201cfront-end\u201d client process and the password registry may run on a local \u201cworkstation\u201d which may be used to connect to a remote \u201cback-end\u201d resource server. For the purposes of the present description, the term \u201cworkstation\u201d is used in its broadest sense to describe any local system on which the \u201cfront-end\u201d client process may run.","A user interface may be provided to manage the passwords and associated identifying information stored in the password registry.","In an aspect of the invention, there is provided a method of managing a user's passwords for a plurality of resources using a password registry associated with said user, comprising:\n\n","In another aspect of the invention, there is provided a method of managing a user's passwords for a plurality of password protected resources accessed from a workstation over a network, comprising:\n\n","In yet another aspect of the invention, there is provided a computer readable medium having computer readable program code embedded in the medium for managing a user's passwords for a plurality of resources accessed from a workstation over a network, the computer readable program code including:","code for establishing a process at a workstation, said process acting as a front-end for a network accessed resource;","code for enabling said process to receive a user-specified password;","code for enabling said process to encrypt said user-specified password as an encrypted password and output said encrypted password, in association with identifying information, to a password registry;","code for enabling said process to receive a request from a workstation user to access said resource and to, in response, obtain said encrypted password from said password registry using said identifying information.","In another aspect of the invention, there is provided a system for managing a user's passwords for a plurality of password protected resources accessed from a workstation over a network, comprising:","at a workstation process associated with a network accessed password protected resource:\n\n","These and other aspects of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention.","Referring to , shown is an illustrative distributed data processing system  which may provide an operating environment for exemplary embodiments of the invention. A plurality of resources (e.g. systems -and services -) may be connected via suitable connections -to a network . A user workstation  may also be connected to the network  via a suitable connection . The user workstation  may include a network I\/O module  for receiving the connection . The user workstation  may allocate data processing resources to a user workspace . The user workspace  may be embodied, for example, as a process running on a central processing unit (\u201cCPU\u201d) in the user workstation . As shown in , the user workspace  may access a storage disk  via a storage I\/O , and a memory . The user workspace  may be accessed by a user from a user interface  connected via a user interface I\/O module .","In an embodiment, the user workspace  may include a plurality of processes -which may be associated with the resources (systems -or services -). In the illustrative operating environment of , the processes -may be considered as \u201cfront-end\u201d clients to various \u201cback-end\u201d resource servers.","The user workspace  may further include a password registry . In an embodiment, the password registry  may be embodied as a process running in the user workspace  and have a corresponding file for storing information on the storage disk .","The user workspace  may also include a user interface process  for facilitating access via the user interface . As will be explained, the user interface process  may provide access to the password registry  for various password management functions.","Given the illustrative operating environment of , an exemplary embodiment in use is now described.","In the exemplary embodiment, the user workstation  may be used, for example, to run an integrated application development environment, or more simply, an \u201cIDE\u201d. In the present example, the user workspace  may be the IDE running on the user workstation . The front-end processes -may then provide an interface for various application development services -which may be \u201cplugged\u201d in as extensions to the IDE.","For example, a commercially available IDE product known as the Eclipse\u2122 workbench allows various application development tools from a number of vendors to be integrated into a single IDE. A specific example of a development tool which may be integrated into the Eclipse workbench is the Remote System Explorer (\u201cRSE\u201d) in the commercially available \u201cWebSphere\u2122 Development Studio Client (\u201cWDSc\u201d) for iSeries\u201d, which allows users to browse a file system, run commands, and view jobs on a remote iSeries\/Linux\/Unix or Windows system.","In an embodiment, a registration mechanism may be used by each tool vendor to register their tools with the password registry . In the illustrative example shown in , there are a number of different types of development tools which are registered with the password registry : tool 1, which is a tool for accessing a remote \u201ciSeries\u201d system type; tool 2, which is a \u201cLinux\u201d type; tool 3, which is a \u201cDatabase\u201d type; and tool \u201cx\u201d which is a \u201cSCM\u201d (Source Configuration Management) type. In an embodiment, each of these tools may have corresponding \u201cfront-end\u201d process -, respectively, running in the user workspace .","In the illustrative example, an Eclipse extension point may be provided so that each tool vendor can access the password registry . For further information on Eclipse extension points, the reader is directed to the Internet URL \u201ceclipse.org\u201d. When implementing such an extension point, two pieces of information may be required: The first piece of information is the specific resource \u201ctype\u201d for which a tool would like to store password information. The second piece of information is a \u201cmodule\u201d which handles encrypting passwords for each resource.","In an embodiment, a number of application programming interfaces (\u201cAPIs\u201d) may be provided:\n\n","In an embodiment, the first two API's, namely a) and b), may be provided by the password registry . The third API may be implemented by the \u201cmodule\u201d which handles encrypting passwords for each resource.","The password registry  never stores an unencrypted password for any of the tools. Instead, before a password is stored, the password is encrypted by each corresponding front-end process -running in the user workspace .","Thus, each tool vendor can establish its own password security requirements, using whatever password encryption\/decryption algorithm it wants or requires. The password registry  may then store the encrypted passwords regardless of the encryption algorithm used by each tool vendor. When an encrypted password is retrieved from storage , the encrypted password may be decrypted by a corresponding front-end process -","An illustrative example involving one of the development tools of  is now described.","Referring to , in an embodiment, when a user uses the user interface process  to add a new password, the user may be asked to provide the following pieces of identifying information: a) user ID; b) resource hostname; c) resource type; and d) an unencrypted password. A suitable interface to enter this identifying information may be provided by the user interface process . For example, when indicating the resource type, the user may select this from a drop down menu provided by the user interface showing all registered tools (e.g. iSeries, Linux, Database, SCM). Once the user has entered this information, the password registry  initiates communication with one of the corresponding front-ends -","In this example, the password registry  delegates to the selected front-end the task of encrypting the unencrypted user-specified password, using the encryption module previously identified during registration. In an embodiment, a version number may be provided with the password, so that if the encryption algorithm is changed in a future release of the tool , old passwords may be migrated to the new encryption\/decryption algorithms.","Still referring to , after the unencrypted user-specified password is encrypted by the front-end , the password registry  may write the user ID, resource hostname, resource type, encrypted password, and optionally the encryption\/decryption version number, to the storage disk .","Referring to , when a user requires access to a resource, the user may initiate access directly with a front-end process -. In the example shown in , the user may initiate access to the Linux tool via the corresponding front-end process . This user-initiated access attempt may prompt the front-end process to query the password registry  to see if an encrypted password for that front-end process is available in the password registry . A \u201cquery key\u201d used by the front-end process for this purpose may consist, for example, of the user ID, resource type, and resource hostname. The password registry  in turn may access the disk  to determine if the corresponding encrypted password is stored on the disk . If a stored, encrypted password exists for this query key, then the encrypted password may be retrieved by the password registry  from the disk . The password registry  may then pass the encrypted password back to the front-end process for decryption. A similar, corresponding access method may be used to access each of the other resources, in turn, via their respective front-ends , , and ","In each case, since it is the front-end process -that originally encrypted the password (), the front-end process -may also be used to decrypt the retrieved, encrypted password and allow access to an authorized user.","Only an authorized user should be able to access a password registry  associated with that user. For example, the user workstation  and\/or the user workspace  may have its own operating system-based secure access, such that the password registry  containing the encrypted passwords is only available upon authorized access to the workstation  and\/or the workspace . As the passwords are stored in an encrypted form that can only be decrypted by the original encrypting front-end process -, any unauthorized access to the encrypted passwords stored on the disk  should not pose a risk.","In an embodiment, in order to prevent an encrypted password from being used by an unauthorized user from another workstation (not shown), the encryption key used for encrypting the password may include some form of workstation specific information so that the password registry  cannot be used on a different workstation. For example, a unique TCPIP address of the workstation  may be utilized in the encryption key.","Referring to , when a user initiates access with a front-end (e.g. front-end as in ), but an encrypted password is not found for the query key, then the password registry  may notify the front-end . The front-end may in turn notify the \u201cback-end\u201d (e.g. one of the services -systems -), which may in turn prompt the user to enter a user ID and password via the password registry . In this case, the tool vendor can use an API provided by the password registry  for storing this information onto the disk . Prior to such storage, each front-end process -may encrypt the unencrypted user-specified password using a specific encryption algorithm, as shown in .","In an embodiment, the user can also access the password registry  via the user interface process  to store, modify, and delete information for accessing each back-end resource (e.g. systems -and services -). In each case, the password registry  will not store an unencrypted password on the disk , and it will be the front-end process -that encrypts and decrypts the passwords based on a specific encryption\/decryption algorithm.","While a distributed data processing system has been described in the above example, the invention may be practiced in a centralized data processing system in which multiple passwords and user IDs are required for secure storage in a password registry. In this case, the encryption\/decryption processes may be co-located with the systems and services.","The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. Therefore, the scope of the invention is limited only by the language of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In the figures which illustrate exemplary embodiments of this invention:",{"@attributes":{"id":"p-0021","num":"0030"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0031"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0023","num":"0032"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0024","num":"0033"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0025","num":"0034"},"figref":"FIG. 3C"}]},"DETDESC":[{},{}]}
