---
title: Extensible role-based access control model for services
abstract: Architecture removes the limitation of a fixed set of roles and scopes, allows more effective permission auditing, and provides a convenient delegation model. Administrators can create roles fine-tuned to business needs without changing permissions on the resources. The new roles can be easily examined and delegated to other administrators. Moreover, scoping and delegation is simplified. This is possible because permissions are granted as a role (a unit of permission assignment is a role), which can include multiple entries. The entries correspond to end-user actions and are not related to implementation-dependent resource rights. The actions can include web services or API calls, script or executable file names, specialized commands that implement particular operation, and associated parameters, etc., essentially any action that the end-user performs.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08402266&OS=08402266&RS=08402266
owner: Microsoft Corporation
number: 08402266
owner_city: Redmond
owner_country: US
publication_date: 20090601
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The management of complex services associated with enterprise messaging can be difficult. For example, there are multiple users\/administrators that need to have different levels of access. Assigning these permissions with sufficient granularity over a multitude of heterogeneous resources (e.g., files, email items, objects in directory, etc.) is a challenging task because the assignment depends on what user needs to perform the associated business function, as well as implementation details of what these business functions need to touch in order to perform the desired action.","These implementation details can change over time. For example, creating a new mailbox requires permissions to create a new user account, to modify several properties, and to access a particular mailbox database.","Additionally, the auditing of resources-level permissions is difficult because the permissions are spread over directories, file systems, mailboxes, etc. Even if there was a way to accurately obtain all ACLs (access control lists) relevant to a particular user, it would still be challenging to explain why a particular permission is needed (e.g., which business function requires the permission). Moreover, with multiple administrators touching permissions it is easy to misconfigure ACLs.","A relatively recent technology, a role-based access control (RBAC) model employs fixed set of roles that relate to job functions. RBAC works by assigning fixed permissions to all resources needed by a user to perform actions related to the role. However, various business processes in different organizations require the ability to modify existing roles and create new ones. The rigid fixed-role RBAC model limits the ability of administrators to evolve operations with the changing organization.","The following presents a simplified summary in order to provide a basic understanding of some novel embodiments described herein. This summary is not an extensive overview, and it is not intended to identify key\/critical elements or to delineate the scope thereof. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.","The disclosed architecture removes the limitation of a fixed set of roles and scopes, allows more effective permission auditing, and provides a convenient delegation model. Administrators can create roles fine-tuned to business needs without changing permissions on the resources. The new roles can be easily examined and delegated to other administrators. Moreover, scoping and delegation is simplified.","This is possible because permissions are granted as a unit of permission assignment (\u201crole\u201d), which can include multiple entries. The entries correspond to end-user actions and are not related to implementation-dependent resource rights. The actions can include web services or API calls, script or executable file names, specialized commands (or \u201ccmdlets\u201d) that implement particular operations, and associated parameters, essentially any action that the end-user performs.","To the accomplishment of the foregoing and related ends, certain illustrative aspects are described herein in connection with the following description and the annexed drawings. These aspects are indicative of the various ways in which the principles disclosed herein can be practiced and all aspects and equivalents thereof are intended to be within the scope of the claimed subject matter. Other advantages and novel features will become apparent from the following detailed description when considered in conjunction with the drawings.","In the disclosed architecture, permissions are not associated with a resource, but with the executing principal. This makes auditing easy by simply examining which roles the user is assigned (as opposed to existing systems that examine every possible resource in the system). Roles include actions and are centrally located, so it is easy to create new roles or modify existing ones without touching numerous resources. Scopes define the boundaries over which a role can operate.","Roles include actions (also referred to as cmdlets or \u201ccommandlets\u201d) and action parameters. For example, in order to create a new mailbox, an administrator needs to be granted a number of permissions. A full list of such permissions is hard to get, and it is not reliable as software evolves. Rather, the administrator can be granted a \u201cnew-mailbox\u201d cmdlet with certain parameters, and will not need to be concerned about individual permissions.","The architecture removes the limitation of a fixed set of roles and scopes, allows easy permission auditing, and provides a convenient delegation model. For example, administrators can create custom roles fine-tuned to a local business need without changing permissions on the resources. These new roles can be easily examined and delegated to other administrators (scoping and delegation is now made easy).","This is possible because permissions are granted as a unit of permission assignment (\u201crole\u201d), which can include multiple entries. These entries correspond to end-user actions and are not related to implementation-dependent resource rights. These actions can be web services or API calls, script or executable file names, cmdlets and parameters, etc., essentially any action that end-user performs.","The classic access control list (ACL) model defines a few generic permissions such as Read, Write, Create, and Delete. These permissions are applied to various entities (e.g., objects, attributes) and thereby, create a flexible system. For example, having \u201cwrite\u201d permission on a user \u201cmail\u201d attribute allows mail-enabling and mail-disabling of such user. Having the same permission on the entire database object allows all possible configuration operations on a database. Thus, the variety in permissions is achieved by the permissions being applied to a large variety of resources. This is limiting, since it is desirable to define action-oriented permissions (e.g., allow one user to send email as another user).","The disclosed architecture defines action-oriented permissions. In the example above, when having write permission on the user \u201cmail\u201d attribute, there is no way to allow just mail-enabling, but not mail-disabling. Both operations require the same access. However, from the end-user point of view these are two very different actions.","Actions that an administrator\/user can perform are numerous (e.g., hundreds of cmdlets such as enable-mailuser, and thousands of parameters). A one-extended-right-per-action approach does not work because there are so many actions, and the list of actions keeps changing and growing. Space limitations could be a factor in the security descriptor.","The number and nature of roles needs to be flexible both from the evolutionary standpoint (to keep adding features) and customer needs. That is, users want customizable security. These factors prompt the creation of an architecture where permissions are associated with the user via role assignments and scopes, rather than with resources. In addition, this system is much easier to audit and maintain.","Reference is now made to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding thereof. It may be evident, however, that the novel embodiments can be practiced without these specific details. In other instances, well known structures and devices are shown in block diagram form in order to facilitate a description thereof. The intention is to cover all modifications, equivalents, and alternatives falling within the spirit and scope of the claimed subject matter.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 1","b":["100","100","102","104","106","106","108","110","102","116","118"]},"The system  can also include a configuration component  associated with the role-based framework  for creating and configuring new roles  designated for new functions of the organization. The existing roles  and new roles  are extensible and map to user actions.","Each role includes one or more role entries that define the permissions for that role. The configuration component  enables modification of existing roles  by adding or removing role entries. The permissions  are defined as entries in a role (e.g., existing roles , new roles ), and each entry includes an action and an action parameter. The new roles  and existing roles  are stored centrally (in a central store ) as a catalog of roles. The catalog includes at least one of a list of entries of existing and new roles, role type information for denoting a purpose of a role, read limitations on which object a read operation can be applied, or write limitations on which object a write operation can be applied. The role-based framework  and configuration component  can be applied to the administration of different applications, such as associated with a messaging infrastructure that includes email accounts and mailbox resources.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 2","b":["200","110","200","100","202","204","206","202","204","120","204","120"]},"Put another way, the administration system  comprises the role-based framework  as applied to a messaging infrastructure for assigning users (entities ) to roles that include the existing roles  and the new roles , the roles associated with the permissions  for allowing access to messaging resources (resources ). The system  also includes the central storage component (the central store ) for storing and administering the roles (existing roles  and\/or new roles ) centrally. The system  can also includes the configuration component  as part of the role-based framework  for creating and configuring the new roles  for new messaging functions and modifying the existing roles  for changing messaging functions.","The permissions  are defined according to entries in a role, and each entry includes an action and an action parameter. The configuration component  enables modification of the roles by adding or removing role entries. The storage component includes at least one of a list of entries of existing and new roles, role type information for denoting a purpose of a corresponding role, read limitations on which resources a read operation is allowed, or write limitations on which resources a write operation is allowed.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 3","b":["300","110","302","110","304","304","120","110","302"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 4","b":["400","400","402","400","404","1","402","402"],"sub":["1-N","1-N","1-N"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 5","b":["204","204","204","500","502","504","506"]},"Included herein is a set of flow charts representative of exemplary methodologies for performing novel aspects of the disclosed architecture. While, for purposes of simplicity of explanation, the one or more methodologies shown herein, for example, in the form of a flow chart or flow diagram, are shown and described as a series of acts, it is to be understood and appreciated that the methodologies are not limited by the order of acts, as some acts may, in accordance therewith, occur in a different order and\/or concurrently with other acts from that shown and described herein. For example, those skilled in the art will understand and appreciate that a methodology could alternatively be represented as a series of interrelated states or events, such as in a state diagram. Moreover, not all acts illustrated in a methodology may be required for a novel implementation.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 6","b":["600","602","604"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 7","FIG. 6"],"b":["700","702","704"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 8","FIG. 6"],"b":["800","802","804","806"]},"As used in this application, the terms \u201ccomponent\u201d and \u201csystem\u201d are intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component can be, but is not limited to being, a process running on a processor, a processor, a hard disk drive, multiple storage drives (of optical, solid state, and\/or magnetic storage medium), an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a server and the server can be a component. One or more components can reside within a process and\/or thread of execution, and a component can be localized on one computer and\/or distributed between two or more computers. The word \u201cexemplary\u201d may be used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as \u201cexemplary\u201d is not necessarily to be construed as preferred or advantageous over other aspects or designs.","Referring now to , there is illustrated a block diagram of a computing system  operable to execute role-based administration in accordance with the disclosed architecture. In order to provide additional context for various aspects thereof,  and the following discussion are intended to provide a brief, general description of the suitable computing system  in which the various aspects can be implemented. While the description above is in the general context of computer-executable instructions that can run on one or more computers, those skilled in the art will recognize that a novel embodiment also can be implemented in combination with other program modules and\/or as a combination of hardware and software.","The computing system  for implementing various aspects includes the computer  having processing unit(s) , a system memory , and a system bus . The processing unit(s)  can be any of various commercially available processors such as single-processor, multi-processor, single-core units and multi-core units. Moreover, those skilled in the art will appreciate that the novel methods can be practiced with other computer system configurations, including minicomputers, mainframe computers, as well as personal computers (e.g., desktop, laptop, etc.), hand-held computing devices, microprocessor-based or programmable consumer electronics, and the like, each of which can be operatively coupled to one or more associated devices.","The system memory  can include volatile (VOL) memory  (e.g., random access memory (RAM)) and non-volatile memory (NON-VOL)  (e.g., ROM, EPROM, EEPROM, etc.). A basic input\/output system (BIOS) can be stored in the non-volatile memory , and includes the basic routines that facilitate the communication of data and signals between components within the computer , such as during startup. The volatile memory  can also include a high-speed RAM such as static RAM for caching data.","The system bus  provides an interface for system components including, but not limited to, the memory subsystem  to the processing unit(s) . The system bus  can be any of several types of bus structure that can further interconnect to a memory bus (with or without a memory controller), and a peripheral bus (e.g., PCI, PCIe, AGP, LPC, etc.), using any of a variety of commercially available bus architectures.","The computer  further includes storage subsystem(s)  and storage interface(s)  for interfacing the storage subsystem(s)  to the system bus  and other desired computer components. The storage subsystem(s)  can include one or more of a hard disk drive (HDD), a magnetic floppy disk drive (FDD), and\/or optical disk storage drive (e.g., a CD-ROM drive DVD drive), for example. The storage interface(s)  can include interface technologies such as EIDE, ATA, SATA, and IEEE 1394, for example.","One or more programs and data can be stored in the memory subsystem , a removable memory subsystem  (e.g., flash drive form factor technology), and\/or the storage subsystem(s)  (e.g., optical, magnetic, solid state), including an operating system , one or more application programs , other program modules , and program data .","Where the computer  is a server machine, the one or more application programs , other program modules , and program data  can include the role-based framework , the configuration component , the permissions , the entities , the existing role  and the new role . The resources  can be remote from the server machine the central store can likewise be remote from the server machine. The one or more application programs , other program modules , and program data  can further include the delegation component , extensible catalog , auditing component , the role  and internal mappings , the extensible catalog  and roles , role types , read scopes , and write scopes  of , and the methods represented by the flow charts of , for example.","Generally, programs include routines, methods, data structures, other software components, etc., that perform particular tasks or implement particular abstract data types. All or portions of the operating system , applications , modules , and\/or data  can also be cached in memory such as the volatile memory , for example. It is to be appreciated that the disclosed architecture can be implemented with various commercially available operating systems or combinations of operating systems (e.g., as virtual machines).","The storage subsystem(s)  and memory subsystems ( and ) serve as computer readable media for volatile and non-volatile storage of data, data structures, computer-executable instructions, and so forth. Computer readable media can be any available media that can be accessed by the computer  and includes volatile and non-volatile media, removable and non-removable media. For the computer , the media accommodate the storage of data in any suitable digital format. It should be appreciated by those skilled in the art that other types of computer readable media can be employed such as zip drives, magnetic tape, flash memory cards, cartridges, and the like, for storing computer executable instructions for performing the novel methods of the disclosed architecture.","A user can interact with the computer , programs, and data using external user input devices  such as a keyboard and a mouse. Other external user input devices  can include a microphone, an IR (infrared) remote control, a joystick, a game pad, camera recognition systems, a stylus pen, touch screen, gesture systems (e.g., eye movement, head movement, etc.), and\/or the like. The user can interact with the computer , programs, and data using onboard user input devices  such a touchpad, microphone, keyboard, etc., where the computer  is a portable computer, for example. These and other input devices are connected to the processing unit(s)  through input\/output (I\/O) device interface(s)  via the system bus , but can be connected by other interfaces such as a parallel port, IEEE 1394 serial port, a game port, a USB port, an IR interface, etc. The I\/O device interface(s)  also facilitate the use of output peripherals  such as printers, audio devices, camera devices, and so on, such as a sound card and\/or onboard audio processing capability.","One or more graphics interface(s)  (also commonly referred to as a graphics processing unit (GPU)) provide graphics and video signals between the computer  and external display(s)  (e.g., LCD, plasma) and\/or onboard displays  (e.g., for portable computer). The graphics interface(s)  can also be manufactured as part of the computer system board.","The computer  can operate in a networked environment (e.g., IP) using logical connections via a wired\/wireless communications subsystem  to one or more networks and\/or other computers. The other computers can include workstations, servers, routers, personal computers, microprocessor-based entertainment appliance, a peer device or other common network node, and typically include many or all of the elements described relative to the computer . The logical connections can include wired\/wireless connectivity to a local area network (LAN), a wide area network (WAN), hotspot, and so on. LAN and WAN networking environments are commonplace in offices and companies and facilitate enterprise-wide computer networks, such as intranets, all of which may connect to a global communications network such as the Internet.","When used in a networking environment the computer  connects to the network via a wired\/wireless communication subsystem  (e.g., a network interface adapter, onboard transceiver subsystem, etc.) to communicate with wired\/wireless networks, wired\/wireless printers, wired\/wireless input devices , and so on. The computer  can include a modem or has other means for establishing communications over the network. In a networked environment, programs and data relative to the computer  can be stored in the remote memory\/storage device, as is associated with a distributed system. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used.","The computer  is operable to communicate with wired\/wireless devices or entities using the radio technologies such as the IEEE 802.xx family of standards, such as wireless devices operatively disposed in wireless communication (e.g., IEEE 802.11 over-the-air modulation techniques) with, for example, a printer, scanner, desktop and\/or portable computer, personal digital assistant (PDA), communications satellite, any piece of equipment or location associated with a wirelessly detectable tag (e.g., a kiosk, news stand, restroom), and telephone. This includes at least Wi-Fi (or Wireless Fidelity) for hotspots, WiMax, and Bluetooth\u2122 wireless technologies. Thus, the communications can be a predefined structure as with a conventional network or simply an ad hoc communication between at least two devices. Wi-Fi networks use radio technologies called IEEE 802.11x (a, b, g, etc.) to provide secure, reliable, fast wireless connectivity. A Wi-Fi network can be used to connect computers to each other, to the Internet, and to wire networks (which use IEEE 802.3-related media and functions).","Referring now to , there is illustrated a schematic block diagram of a computing environment  that facilitates role-based administration. The environment  includes one or more client(s) . The client(s)  can be hardware and\/or software (e.g., threads, processes, computing devices). The client(s)  can house cookie(s) and\/or associated contextual information, for example.","The environment  also includes one or more server(s) . The server(s)  can also be hardware and\/or software (e.g., threads, processes, computing devices). The servers  can house threads to perform transformations by employing the architecture, for example. One possible communication between a client  and a server  can be in the form of a data packet adapted to be transmitted between two or more computer processes. The data packet may include a cookie and\/or associated contextual information, for example. The environment  includes a communication framework  (e.g., a global communication network such as the Internet) that can be employed to facilitate communications between the client(s)  and the server(s) .","Communications can be facilitated via a wire (including optical fiber) and\/or wireless technology. The client(s)  are operatively connected to one or more client data store(s)  that can be employed to store information local to the client(s)  (e.g., cookie(s) and\/or associated contextual information). Similarly, the server(s)  are operatively connected to one or more server data store(s)  that can be employed to store information local to the servers .","What has been described above includes examples of the disclosed architecture. It is, of course, not possible to describe every conceivable combination of components and\/or methodologies, but one of ordinary skill in the art may recognize that many further combinations and permutations are possible. Accordingly, the novel architecture is intended to embrace all such alterations, modifications and variations that fall within the spirit and scope of the appended claims. Furthermore, to the extent that the term \u201cincludes\u201d is used in either the detailed description or the claims, such term is intended to be inclusive in a manner similar to the term \u201ccomprising\u201d as \u201ccomprising\u201d is interpreted when employed as a transitional word in a claim."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 7","FIG. 6"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 8","FIG. 6"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
