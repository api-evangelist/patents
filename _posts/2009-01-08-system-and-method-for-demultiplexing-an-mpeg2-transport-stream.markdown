---
title: System and method for demultiplexing an MPEG-2 transport stream
abstract: A system and method for demultiplexing an MPEG-2 Transport Stream (TS), is disclosed. In one embodiment, a method of demultiplexing an MPEG-2 TS includes receiving the TS via a system interface, managing the TS via a TS manager, and managing parsing of the TS via a parser manager. Further, the method includes creating a media data stream by parsing the TS via one or more parsers within the parser subsystem, and creating a plurality of decodable units from the media data stream via a framer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08873639&OS=08873639&RS=08873639
owner: Ittiam Systems (P) Ltd
number: 08873639
owner_city: Bangalore
owner_country: IN
publication_date: 20090108
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention relates generally to the Moving Pictures Experts Group; an international standard-2 (hereinafter referred to as \u2018MPEG-2\u2019) for moving pictures compression in a media integrated system. More specifically, the present invention relates to demultiplexing of an MPEG-2 Transport Stream (TS).","In general, the multiplexing of packets is a process in which large sized data is divided into appropriate lengths of bit streams called \u201cpackets\u201d, where additional information related to the data, such as identification, priority, and timing are appended to the packets as a header. One of the video and audio compression standards is the MPEG-2 standard, within which video compression is defined within a given picture and between pictures, and audio is compressed to correspond to the given picture.",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIGS. 1 and 2","b":["102","104","104","108","108","110","112","110","112","108","106","114","114","116","118","120"]},{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 2","b":["118","202","114"]},"Currently, the majority of MPEG-2 TS demulitplexers have been implemented through hardware solutions, while a few software implementations exist. However, the software implementations differ significantly in scope, module, features offered, and implementation, which are often restricted to International Organization for Standardization\/International Electrotechnical Commission (ISO\/IEC) standard 13818-1. Furthermore, most of these software implementations do not have the capability of demultiplexing TS with a synchronization layer as defined in ISO\/IEC standard 14496-1. The synchronization layer demultiplexing, which is generally not provided in other solutions, is needed to support multimedia standards, like Digital Multimedia Broadcasting (DMB), and so on. Other implementations of the TS demulitplexers found are restricted to hardware and are either not extensible by very nature and\/or not scalable.","Generally, one of the key system requirements while dealing with media is framing, in which decodable units are created from the received content within the TS. This is also completely ignored or not scoped by most of the known software implementations. As a consequence, system integration effort may be more towards getting those software implementations working with existing multimedia decoders in a system.","For applications based on the DMB and Digital Video Broadcasting (DVB) standards, the TS demultiplexing is mostly done at the hardware level or by a combination of software for a particular hardware. This especially may be a disadvantage for companies developing applications catering system level intellectual property to multiple vendors or while supporting multiple standards like DVB, DMB, Advanced Television Systems Committee (ATSC), etc. In this case, the applications may not be scalable and hence the extensibility of the applications to support additional features may be limited. Further, these solutions may reduce reusability across the applications.","Additionally, the ability to demultiplex a variety of standards in an efficient manner within a single architecture, independent of the architecture, is not present within the existing MPEG-2 TS demultiplexers.","A system and method for demultiplexing an MPEG-2 Transport Stream (TS), is disclosed. In one aspect, a method of demultiplexing an MPEG-2 TS includes receiving the TS via a system interface, managing the TS via a TS manager, and managing parsing of the TS via a parser manager. The method further includes creating a media data stream by parsing the TS via one or more parsers within a parser subsystem, capable of handling multiple format inputs, wherein the parser manager transfers the TS to the parser subsystem, and creating one or more decodable units from the media data stream via a framer.","In another aspect, a system for demultiplexing an MPEG-2 TS includes a system interface which receives the TS, a TS manager which receives the TS from the system interface, and a parser manager which transfers the TS from the TS manager to a parser subsystem that is capable of handling multiple format inputs. The system further includes one or more parsers within the parser subsystem which parses the TS into a media data stream, and a framer which creates one or more decodable units from the media data stream.","The methods, and\/or systems disclosed herein may be implemented by any means for achieving various aspects, and may be executed in a form of a machine readable medium embodying a set of instructions that, when executed by a machine, cause the machine to perform any of the operations disclosed herein.","Other features of the present embodiments will be apparent from the accompanying drawings and from the detailed description that follows.","A system and method for demultiplexing an MPEG-2 Transport Stream (TS), is disclosed. In the following detailed description of the embodiments of the invention, reference is made to the accompanying drawings that form a part hereof, and in which are shown by way of illustration specific embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the invention, and it is to be understood that other embodiments may be utilized and that changes may be made without departing from the scope of the present invention. The following detailed description is, therefore, not to be taken in a limiting sense, and the scope of the present invention is defined only by the appended claims.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["300","300","306","308","310","340","334","338","338","342","344","344"]},"In operation, a system interface  coupled to the MPEG-2 TS demultiplexer subsystem  receives a TS  (also known as TP, MPEG-TS, or M2T). Further, as shown in , the TS manager  receives the TS  from the system interface . Furthermore, as shown in , the parser manager  receives the TS  from the TS manager  and transfers the TS  to the parser subsystem  for parsing the TS  into a media data stream. Additionally, the TS Manager  provides an interface to the system via Application Programming Interfaces (APIs) (not shown in ). It is appreciated that the APIs ease system integration by providing clear separation of programs, streams, object based interfaces, etc. Further, the TS Manager  enhances configurability of internal modules of the MPEG-2 TS demultiplexer subsystem  (e.g., setting Program Allocation Table (PAT)\/a Program Map Table (PMT)\/Program Clock Reference (PCR) intervals, ring buffer sizes\/parameters, etc.). The TS Manager  is also designed to handle dynamic addition and\/or removal of programs and\/or streams, such as the addition or modification to subtitle display while Audio-Video (AV) playback is in progress, although other instances are considered. It is appreciated that the parser subsystem  is capable of handling multiple format inputs (e.g., Digital Video Broadcasting (DVB), Digital Multimedia Broadcasting (DMB), Advanced Television Systems Committee (ATSC), Integrated Services Digital Broadcasting (ISDB), standard formats used in various territories).","In some embodiments, the parser subsystem  includes multiple parsers for parsing the TS  into the media data stream. As shown in , the multiple parsers within the parser subsystem  include but not limited to a TS header parser , a packetized elementary stream (PES) parser , a program specific information (PSI) parser , a descriptor parser , an object descriptor (OD) parser , and a table parser . It is appreciated that allowing a single point of communication from the parser manager  to the parser subsystem , enables additional parsers to be added to the parser subsystem  without fundamental changes to the design of the MPEG-2 TS demultiplexer subsystem . This improves both scalability and extensibility of the MPEG-2 TS demultiplexer subsystem .","Further, as shown in , the TS header parser  includes a Packet Identifier (PID) filter  and a PID list . In some embodiments, the TS header parser  within the parser subsystem  parses the TS  into TS packets. The TS packets include TS headers and TS payloads. Further, each of the TS headers includes a PID (e.g., 13-bit PID). In one exemplary implementation, the TS header parser  identifies and locates the PID from the TS headers. Further, the TS header parser  transfers the located PID to the PID filter . Furthermore, the PID filter  compares the PID with the PID list  which includes a list of configured PIDs. Moreover, the TS header parser  further parses the remaining TS headers if it is determined that the PID is contained within the PID list  based on the outcome of the comparison. Thus, unnecessary parsing of the TS  is avoided by only parsing the TS headers if they are contained in the PID list .","In some embodiments, a look-up table is maintained by the TS header parser  to store state information that is needed to parse a TS payload, for each of the configured PID. This state information specifies the type of the TS payload. For example, the type of the TS payload may correspond to PAT, PMT, and\/or audio\/video data. Using this state information, the TS header parser  passes the TS packets to the corresponding parser within the parser subsystem . In one example embodiment, the look-up table is combined with the PID filter  in the TS header parser . Further, it is appreciated that the reuse of the PID filter  may avoid the usage of a separate look-up table in the parser manager .","In one embodiment, the PES parser  parses packetized elementary stream from the TS . The PSI parser  parses program specific information from the TS . In one exemplary implementation, the PSI parser  splits the program specific information from the TS  into multiple stages of program specific information and buffers each of the multiple stages of program specific information. Then, the PSI parser  parses the each of the buffered multiple stages of program specific information. It is appreciated that, the PSI parser  buffers the each of the multiple stages of program specific information without buffering the all of the program specific information first and then parsing all of the buffered program specific information. Partial buffering in this manner reduces the amount of memory allocation necessary. Typically, program specific information packets such as the PAT and PMT come in multiple TS packets. For example, in the case of DVB, where multiple programs are transmitted at a single point of time, the data size of the PAT or PMT may be large and may span across the multiple TS packets. In such a case, the PSI parser  splits program specific information into multiple stages of program specific information and buffers each of the multiple stages of program specific information stage by stage. Further, once a particular stage of the program specific information is completely buffered, the PSI parser  can parse the buffered stage of the program specific information independently without the need for buffering all of the program specific information and then parsing.","In one embodiment, the descriptor parser  and the OD parser  parse information containing encoded bit stream information (e.g., audio\/video information like codec profile, sampling frequency) to initialize the decoder A through N. The table parser  in the parser subsystem  parses tables from the TS . As shown in , the table parser  includes but not limited to standard tables , ATSC tables , DVB tables , and so on. Since, the standard tables , the ATSC tables , and the DVB tables  are well known to a person skilled in the art, the explanation thereof is omitted. It is appreciated that the parsed information (obtained by parsing tables) may be used by MPEG-2 TS demultiplexer subsystem  to construct Electronic Program Guide (EPG). In one example embodiment, the table parser  exposes a standard set of interfaces to the parser manager  irrespective of type of table to be parsed. It is further appreciated that, by having a standard set of interfaces for the table parser , the MPEG-2 TS demultiplexer subsystem  can be extended to parse the program specific information for various standards such as DVB, ATSC, DMB by scaling the table parser . In this manner, the parser subsystem  creates the media data stream by parsing the TS  using the one or more parsers described above. Further, the parser manager  receives the media data stream from the parser subsystem  and transfers the media data stream to the framer .","Further, the framer  defines the payload interface . In one exemplary implementation, the payload interface  passes media format specific data from the framer  to corresponding the one or more media format specific framing modules A through N based on encoding format of the TS . As shown in , each of the media format specific framing modules A through N may be associated with specific encoding formats of the TS , such as a H.264 video (with or without Synchronization Layer (SL)), an MPEG-2 video (non-SL), a MP-3 audio (non-SL) and the like for handling the media format specific data associated with the encoding formats of the TS . It is appreciated that the MPEG-2 demultiplexer subsystem  enables additional media format specific framing module(s) to be added as and when new encoding format(s) are added, without fundamental changes to the design of the MPEG-2 TS demultiplexer subsystem . This improves both scalability and extensibility of the MPEG-2 TS demultiplexer subsystem . Further, corresponding the one or more media format specific framing modules A through N frame the media format specific data. Moreover, the payload interface  receives the framed media format specific data from corresponding the one or more media format specific framing modules A through N and passes the framed media format specific data to the framer . It is appreciated that definition of the payload interface  by the framer  enables easy extension of support to new encoding formats of the TS  in the MPEG-2 TS demultiplexer subsystem .","In accordance with above-described embodiments, the framer  creates one or more decodable units (e.g., Network Abstraction Layer (NAL) in H.264 video, frame in MPEG-2 video, etc.) from the media data stream. For example, each of the one or more decodable units, which includes a frame header and frame data, is stored in one of the ring buffers A through N. Further, the frame header includes a frame start pointer, a frame size, a next frame pointer and a frame property flag. It is appreciated that the framer  creates the one or more decodable units in such a way that packet loss due to network is taken care by maintaining the state information. Also, it should be noted that the creation of \u2018correct\u2019 one or more decodable units considerably reduces the time-to-market for any multimedia application based on the MPEG-2 TS standard. It is also appreciated that the framer  is capable of handling different multimedia streaming standards, like DVB, DMB, etc.","Further, as shown in , the framer  includes a synchronization layer framer  for framing the media data stream which includes a synchronization layer (e.g., H.264 video stream). For example, in case of a DMB stream, the synchronization layer framer  creates one or more decodable units from the DMB stream based on synchronization layer information present in a synchronization layer header of the synchronization layer of the DMB stream. It is appreciated that the synchronization layer framer  supports the different encoding formats of the TS , thus reusing the modules within the MPEG-2 TS demultiplexer subsystem .","Furthermore, the framer  stores the one or more decodable units in the one of the ring buffers A through N. In one example embodiment, the one or more decodable units are stored in the one of the ring buffers A through N with appropriate boundary markings. Further, it is appreciated that the framer  creates the one or more decodable units as and when the media data stream is received from the parser manager . This may help improve the system design in two ways. First, this makes the system design more deterministic from timing perspective. For example, the delay involved in framing the media data stream need not be considered during AV synchronization as the latency involved in the framing of the one or more decodable units is minimum (almost zero). Second, by performing framing at the input stage, only buffering of frame data is performed without the need to store headers that are present in the media data stream (but only frame specific information like timestamps are stored along with the frame data).","Further, the framer  defines the framer interface  for transferring data (e.g., one or more decodable units) from the framer  to the TS manager  independent of encoding format of the decodable units. It is appreciated that functioning of the framer interface  across different encoding formats of the TS  makes the TS manager  generic and independent of the encoding format of the decodable units. This enables many different framing methods to plug-in custom into the MPEG-2 TS demultiplexer subsystem  with minimum efforts.","Further, as shown in , decoders A through N are communicatively coupled to the MPEG-2 TS demultiplexer subsystem , via the system interface . In one embodiment, the decoders A through N receive the one or more decodable units from the TS manager . In the embodiment, the framer  transfers the one or more decodable units stored in the one of the ring buffers A through N, to the TS manager , via the framer interface . In one exemplary implementation, the decoders A through N decode the one or more decodable units. Furthermore, as shown in , a host controller  and a local Random Access Memory (RAM)  are communicatively coupled to the MPEG-2 TS demultiplexer subsystem , via the system interface . Since, the host controller  and the local RAM  are well known to a person skilled in the art, the explanation thereof is omitted.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 4","FIG. 3","FIG. 3","FIG. 4","FIG. 4","FIG. 4"],"b":["400","300","400","338","338","400","400","402","406","408","412","416","414","420","418"]},"The frame start pointer  indicates a value which refers directly to the frame data  stored in the ring buffer  (as indicated by a reference numeral ) using an address of the frame data . The frame size  indicates a value which corresponds to the size of the frame data . The next frame pointer  indicates a value which directly refers to the frame start pointer  of a next decodable unit in the ring buffer  (as indicated by a reference numeral ). The frame property flag  indicates the availability of the frame properties  of the decodable unit and is specific to each decodable unit stored in the ring buffer . The alignment offsets  and  are optional fields and indicate data alignment in the ring buffer . The frame properties  stores properties of the decodable unit, such as Decode Time Stamp (DTS), Presentation Time Stamp (PTS), and the like.","In one embodiment, the properties stored in the frame properties  are returned to the framer , when the framer  reads the decodable units from the ring buffer . Further, it is appreciated that the ring buffer  supports automatic wrap-around if the decodable unit is partially written and if end of the ring buffer  is reached. This is useful in multi-media applications, in case the decodable unit is to be stored in a single contiguous buffer.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 5","FIG. 3","FIG. 5"],"b":["500","344","300","502","504","506","508","504","506","508","510","504","508","512","512","506","504","512","514","514","506","504","514","516","518","520","506","504","344","300","500"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 6","FIG. 3"],"b":["300","602","604","606"]},"In step , a media data stream is created by parsing the TS via one or more parsers within the parser subsystem. In one embodiment, the one or more parsers include but not limited to a TS header parser, a PES parser, a PSI parser, a descriptor parser, an OD parser, and a table parser.","In step , a payload interface is defined and the payload interface is used to transfer media format specific data of the media data stream between a framer and one or more media format specific framing modules based on encoding format of the TS. In step , one or more decodable units are created from the media data stream via the framer. In embodiments, where the media data stream requires framing specific to an encoding format, the payload interface transfers the media format specific data to the appropriate media format specific framing module. The media format specific framing module then frames the media format specific data and passes decodable units to the framer via the payload interface. In some embodiments, the one or more decodable units are created from the media data stream having a synchronization layer via a synchronization layer framer.","In step , the one or more decodable units are stored within one or more ring buffers. In step , a framer interface is defined and the framer interface is used to transfer data (e.g., one or more decodable units for decoding) from the framer to the TS manager, independent of the encoding format of the TS.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 7","FIG. 7"],"b":["700","702","704","706","708","710","712","714","716","718","720","722","724","726"]},"The diagrammatic system view  may indicate a personal computer and\/or a data processing system in which one or more operations disclosed herein are performed. The processor  may be a microprocessor, a state machine, an application specific integrated circuit, a field programmable gate array, etc. The main memory  may be a dynamic random access memory and\/or a primary memory of a computer system. The static memory  may be a hard drive, a flash drive, and\/or other memory information associated with the data processing system.","The bus  may be an interconnection between various circuits and\/or structures of the data processing system. The video display  may provide graphical representation of information on the data processing system. The alpha-numeric input device  may be a keypad, keyboard and\/or any other input device of text (e.g., a special device to aid the physically handicapped). The cursor control device  may be a pointing device such as a mouse. The drive unit  may be a hard drive, a storage system, and\/or other longer term storage subsystem.","The signal generation device  may be a BIOS and\/or a functional operating system of the data processing system. The network interface device  may perform interface functions (e.g., code conversion, protocol conversion, and\/or buffering) required for communications to and from the network  between a number of independent devices (e.g., of varying protocols). The machine readable medium  may provide instructions on which any of the methods disclosed herein may be performed. The instructions  may provide source code and\/or data code to the processor  to enable any one or more operations disclosed herein.","For example, a storage medium having instructions that, when executed by a computing platform, result in execution of a method of demultiplexing an MPEG-2 TS associated with an application and a session, the method includes receiving a TS via the system interface , managing the TS via the TS manager , and managing parsing of the TS via the parser manager . In one example embodiment, the parser manager  transfers the TS to the parser subsystem , capable of handling multiple format inputs. Further, the storage medium has instructions to create a media data stream from the TS.","For creating the media data stream, the storage medium has instructions to parse the TS via the TS header parser  within the parser subsystem  into TS packets (e.g., containing TS headers and TS payloads), identify type of the TS packets via the TS header parser , and pass the TS packets to corresponding one or more parsers (e.g., the PES parser , the PSI parser , the descriptor parser , the OD parser  of ) within the parser subsystem  based on the type of the TS packets via the TS header parser . The storage medium has further instructions to parse tables from the TS via the table parser  which exposes a standard set of interfaces to the parser manager  independent of type of table to be parsed.","The storage medium also has instructions to parse program specific information from the TS via the PSI parser  by splitting the program specific information into a plurality of stages of program specific information, buffering each of the plurality of stages of program specific information, without buffering all of the program specific information, and parse each of the plurality of stages of program specific information. Moreover, the storage medium has instructions to create a plurality of decodable units from the media data stream via the framer .","In addition, the storage medium has instructions to identify and locate the PID from the TS headers via the TS header parser , and compare the PID with the PID list  via the PID filter . In one example embodiment, the PID list  includes a list of configured PIDs. Further, the storage medium has instructions to parse remaining the TS headers via the TS header parser , if the PID is contained within the PID list .","The above-described technique assures that the MPEG-2 TS demultiplexer subsystem supports various TS formats like MPEG-2 TS, DMB stream, DVB stream, as a single component and enhances the reusability of the component across various applications based on the MPEG-2 TS. Further, it is appreciated that the modular design enables better maintainability of the MPEG-2 TS demultiplexer subsystem. In addition, the above described MPEG-2 TS demultiplexer subsystem provides an elaborate testing process as a subsystem, which includes testing for conformance with industry defined standards, and enables simulation of the subsystem under various network packet loss conditions. Also, the MPEG-2 TS demultiplexer subsystem supports handling of multiple consecutive TS packets in a single buffer. This is needed in applications, where the TS packets are sent over Real-time Transport Protocol (RTP) as defined in Internet Engineering Task Force-Requests for Comments (IETF-RFC) 2250.","Although the present embodiments have been described with reference to specific example embodiments, it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the various embodiments. For example, the various devices, modules, analyzers, generators, etc. described herein may be enabled and operated using hardware circuitry (e.g., CMOS based logic circuitry), firmware, software and\/or any combination of hardware, firmware, and\/or software (e.g., embodied in a machine readable medium). For example, the various electrical structure and methods may be embodied using transistors, logic gates, and electrical circuits (e.g., application specific integrated circuitry (ASIC))."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Embodiments of the present invention are illustrated by way of examples and not limited to the figures of the accompanying drawings, in which like references indicate similar elements and in which:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 6","FIG. 3"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
