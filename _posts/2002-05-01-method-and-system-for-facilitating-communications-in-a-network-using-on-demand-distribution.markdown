---
title: Method and system for facilitating communications in a network using on demand distribution
abstract: A system using a touch-point specific stub in communication with a stub specific object provides efficient and effective communications between a server operation running the stub specific object and a touch-point running the touch-point specific stub. An On Demand Distribution Service (ODD) distributes the stub to a touch-point and selects and initializes the object such that communications between the stub and the object is established.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07434234&OS=07434234&RS=07434234
owner: OutlookSoft Corporation
number: 07434234
owner_city: Stamford
owner_country: US
publication_date: 20020501
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This application claims priority to provisional patent application entitled \u201cMethod and System for Facilitating Communications in a Network Using on Demand Distribution,\u201d Application Ser. No. 60\/288,909, filed May 4, 2001.","In computer networks, information and\/or services are typically shared between two or more computing devices. The relationship between various computing devices on a network may be described in terms of a model known as the client\/server model. In the client server model computing devices on a computer network are categorized according to whether they are providing information (\u201cserver\u201d) or receiving information (\u201cclient\u201d). In this sense, a server may be defined as a computing device, or a computer program being run on a computing device that waits for and handles requests for data, e-mail, file transfers, etc., from one or more clients. Conversely, a client may be defined as a computing device or program that makes a request to the server and uses the data or services of another computing device or program (server).","One common variation of the client\/server model is known as peer-to-peer. In the peer-to-peer model each computing device may operate as either or both the server and the client. Typically this is accomplished by all computing devices in the peer-to-peer network having the same networking program to connect with each other. These computing devices may then access files from one another directly or with the use of a mediating server.","The Internet is one example of a computer network. The Internet may be used either in the client\/server model or in the peer-to-peer model. As each computer in the peer-to-peer model is at some point a client or a server, the term client\/server, as used herein, will apply both to the client\/server as well as the peer-to-peer relationship.","The Internet may be broadly defined as a worldwide network of interconnected computers or computing devices. With respect to the Internet, the \u201cclient\u201d typically refers to a computer or computer processes that is used to access content on various computing devices (\u201cservers\u201d) or computer processes located on or within the Internet. Typically, when a user logs onto the Internet or the World Wide Web (WWW), using a client computing device, the user views \u201cWeb pages\u201d that are stored on remote servers (Web site servers) connected to the Internet or the WWW. Information including data files and the Web pages are often shared and transferred between the client and the server.","Web site servers typically employ one or more computer systems to interface with clients accessing the Web site. Web site servers maintain or employ, among other things, programs and resources that manage the operations and information of the server. The function of a server is often broken down or classified according to the various functionality that is provided by the Web site server. For example, a Web site server may be defined as having a Web server, an application server, and a legacy server. Using this type of classification, a Web server may be broadly described as a computer process, computer processes, or one or more computing devices running at a Web site which sends out Web pages in response to requests from a client. An application server may be described as computer process, computer processes, or one or more computing devices which handle interactions and communications between the Web server and various backend business applications and Web server and the legacy server. A legacy server may be defined as a program or programs and\/or a database containing various information which is accessed by the Web server via the application server. Typically, legacy servers manage one or more databases.","Typically, application servers employ an Application Programming Interface (API). An API may be thought of as an interface between the server's operating system and various application programs. APIs typically specify the way in which various application programs communicate with the operating system and the resources or services that an operating system makes available to the application programs.","As previously discussed, servers maintain resources that may be shared through the Internet and are capable of processing a client request to access those resources. In order to share resources, clients and servers must communicate over a defined communications protocol. The Hyper Text Transfer Protocol (HTTP) is the primary communications protocol that is used for communication between servers and clients on the WWW. A typical client\/server interaction using HTTP comprises establishing a connection between the client and the server, performing a request for data, and terminating the connection. According to the HTTP protocol, the server does not maintain any state about the connection once it has been terminated. HTTP is, therefore, a stateless application protocol. Consequently, each time the client requests information from the server using the HTTP protocol, a new connection must be established between the server and the client.","In order to navigate the vast amount of information located on the multitude of servers located on the WWW, and to easily view the information sent from a server and\/or to run applications sent from a server, clients typically employ a software application known as a Web browser, or simply browser. A browser may generally be described as a user-friendly interface located on a client that allows a user to communicate requests to a server and receive information from the server without requiring the user of the client to learn a complicated command syntax. Browsers typically provide a graphical user interface (GUI) for displaying information from a server and for receiving input from a client.","During a typical client\/server interaction on the WWW, a browser is used on the client to send a request to the server for information, such as a request to view a particular Web page. After receiving the request from the client, the server transmits the requested information to the client as a document which is encoded using a markup language. Upon receiving the encoded document, a browser on the client parses the encoded document and produces an image, such as a Web page, on the client based on the information in the encoded document. As such, it may be said that the encoded document defines the image or Web page that is rendered by the browser at runtime. In addition to displaying information or Web pages, a browser may also retrieve applications or programs from a server to be executed on the client. One example of a program that may be downloaded from a server and executed on a browser is a Java applet.","Browsers generally display information on a client as pages or documents. These pages or documents are typically encoded using what are referred to as markup languages. Generally speaking, a markup language defines a set of markup symbols or codes (tags) which are inserted into a file intended for display on a browser. In this sense, a markup language \u201ctells\u201d a browser how to display a Web page's words and images. For example, with respect to text, the markup language typically defines different heading styles, bold, italic, numbered lists, insertion of images, etc. Markup languages also typically define how hyperlinks are displayed and used. A hyper link is a link in a document that leads to another WWW site, or another place within the same document or Web page.","Currently, there are a number of markup languages which are in use on the WWW. The most prevalent of these markup languages is the Hyper-Text Markup Language (HTML). HTML is a derivative of the ISO defined Standard Generalized Markup Language (SGML). While HTML is the markup language formally recommended by the World Wide Web Consortium (W3C) and is generally adhered to by most browsers, a variety of proprietary dialect variations and non-standard extensions, such as HTMLS and DHTML, etc., that depart from the published standard are employed on various servers and clients (browsers) across the WWW. These dialect variations present number of problems for Web site developers. Principal among these problems is that the dialect variations make it difficult or impossible for a Web site developer to be certain how the content of their Web pages will be displayed in the various browsers employing the HTML variations. As such, Web site developers often must spend countless hours testing the appearance of their Web pages using a number of different browsers to attempt to author HTML based Web pages which will provide a consistent and reliable display of content.","In addition to HTML, there are also a number of other alternative markup languages employed on the Internet or WWW. One of these alternative markup languages is the Extensible Markup Language (XML) which is similar to HTML in that both XML and HTML contain markup symbols to describe the contents of a Web page or file. However, while HTML describes the content of a Web page (mainly text and graphic images) only in terms of how it is to be displayed and interacted with, XML describes the content of a Web page in terms of what data is being described. Another difference between HTML and XML is that unlike HTML, where the number and type of markup symbols used is limited and predefined, the number and type of markup symbols in XML are unlimited and self-defining.","One markup language which is used to specify content and user interface for Wireless Application Protocol (WAP) devices, is the Handheld Device Markup Language (HDML). HDML is a vendor specific proprietary language which can only be viewed on mobile phones that use a vendor specific browser. There are a number of proprietary and non-proprietary derivatives of HDML including the Wireless Markup Language (WML). The main differences between HDML and WML are that WML can use a scripting language, and HDML has no scripting of any kind. Additionally, unlike HDML, WML is based on XML.","One problem that occurs as a result of the numerous markup languages is that often times multiple Web sites must be created and maintained to provide the same or similar information to clients using various different markup languages. For example, if a client, such as a PDA or a Web-compatible cellular phone employs WML, that PDA or a Web-compatible cellular phone would need to log onto a Web site designed specifically for delivering WML encoded content. This same situation would also be true for users of cellular phones employing HDML.","The Internet and the WWW typically employ what is known as a thin client\/three tier architecture in which a browser executes only what is known as the presentation or display logic and the server executes the business logic. The display logic may be defined as the program, or part of a program, that receives data and, among other things, formats the received data for output on the client. The display logic typically is included as a part of the browser on the client. The display logic typically receives encoded files (HTML, etc.) or Web pages and displays the files or Web pages on the client within the GUI. The business logic may be defined as a program or part of the program that encodes the business rules associated with a particular problem domain. For example in an accounting application, the logic of how a particular account can be increased or decreased based on customer deposits or withdrawals is coded based on specific business rules for each particular bank. The business logic typically resides on the server side and it is coded separately from the display logic.","Many, if not all, of the above stated problems related to client\/server relationship and the development of software to facilitate reliable and consistent communications between a client and a server stem from the fact that clients and servers are currently developed separately. Typically, clients are either developed to integrate with protocols and markup languages currently being employed on servers, or servers are designed to integrate with protocols and markup languages which are specific to a client. As such, valuable development time and resources are spent in an attempt to deal with the multiplicity of protocols and markup languages. Additionally, each time a new protocol or markup language is developed, client and server designers must decide whether to spend the appropriate time and resources to support the changes, thus taking valuable time and resources away from other development projects.","Another problem associated with the separate development of clients and servers is that the information sent to the client from the server must necessarily be somewhat generic in form and content to accommodate the various client devices. As such, the full capabilities and\/or limitations of the client are not accounted for or accommodated for in, for example, the design of Web pages. Similarly, the separate development of the client and server, and the generic form and content that results, precludes optimization of communications bandwidth between the client and server.","It is with respect to these and other considerations that the present invention has been developed.","Against this backdrop the present invention has been developed. One aspect of the present invention relates to a system for overcoming the above noted problems by using a touch-point specific stub in communication with a stub specific object to provide efficient and effective communications between server operation in contact with or running the stub specific object and a touch-point running or in communication with the touch-point specific stub. Another aspect of the present invention relates to a service for distributing a touch-point specific stub to an appropriate touch-point and for selecting and initializing an appropriate stub specific object, such that communication between the object and the touch-point is established.","In accordance with these and other aspects of the present invention, one embodiment of the present invention relates to a method for establishing communication between a first touch-point and a first object associated with the first touch-point in a communications network environment including a plurality of touch-points and a plurality of objects. The steps of the method include: receiving a request for a stub operable to communicate with the first object; delivering the stub to the first touch-point; selecting from the plurality of objects the first object; and initializing the first object such that communication between the first object and the touch-point is established.","Another embodiment of the present invention relates to a system for communicating with a plurality of touch-points, the plurality of touch-points including a first type touch-point, the first type touch-point sending an object request. In accordance with this embodiment the system includes a plurality of objects, including a first object associated with the first type touch-point and configured to communicate with the first type touch point upon initialization of the first object. The system also includes a service module which receives the object request from the first type touch point and, in response, locates the first and initializes the first object, such that communication between the first object and the touch-point is established.","These and various other features as well as advantages which characterize the present invention will be apparent from a reading of the following detailed description and a review of the associated drawings.","In general, the present invention relates to unique methods and\/or systems for efficiently and effectively communicating commands and events between computing devices in a networked environment. One embodiment of the present invention relates to a system including an On Demand Distribution service (ODD_Service), one or more On Demand Distribution objects (ODD_Objects), and one or more On Demand Distribution stubs (ODD_Stubs).","In this embodiment of the present invention, the ODD_Service is a computer implemented process or program which runs on a computing device, such as a network server, located in a network environment. The ODD_Service is operable to manage one or more ODD_Objects running on one or more servers in the network environment and to deploy one or more ODD_Stubs to touch-points located in the networked environment.","As with the ODD_Service, in this embodiment of the present invention, the ODD_Object is preferably a computer implemented process or program which runs on a computing device, such as a computer in the network environment. Once deployed by the ODD_Service, the ODD_Object communicates with one or more ODD_Stubs located in the network environment to provide presentation data in application specific format for efficient presentation to a user of a touch-point. As described in further detail below, the ODD_Object and ODD_Stub preferably communicate to each other using a proprietary communications protocol, thus providing a consistent communication path between the ODD_Object and the ODD_Stub.","Preferably, there are a number of specific types of ODD_Objects, each of which is associated with a specific type of touch-point. Each specific type of ODD_Object will preferably include touch-point specific logic operable to construct and transmit data and\/or commands in accordance with the requirements of a specific type of touch-point. For example, a specific type of touch-point may have specific user interface capabilities and requirements. As such, an ODD_Object associated with that specific type of touch point would preferably include presentation logic which would correctly format information for presentation on the user interface of that specific type of touch-point. Each of these ODD_Objects may be implemented as a daemon process.","In this embodiment of the present invention, the ODD_Stub is preferably a computer implemented process or program which runs on a computing device, such as a touch-point, located in a network environment. The ODD_Stub is operable to format and communicate user events to the ODD_Object and to respond to actions from the ODD_Object. As mentioned above, the specific presentation logic required for a specific type of ODD_Stub is preferably implemented in a corresponding ODD_Object. However, if required, an ODD_Stub may contain all or some of the presentation logic.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 1","b":["100","102","104","106","108","108","106","108"]},"In general terms, the edge  includes devices, including both touch-points  and\/or servers , which receive content, actions, and\/or commands from other devices in the distributed network . Generally, a touch point  may be defined as a general purpose or special purpose computing system, environment, or configuration. Examples of well known computing systems, environments, and\/or configurations include, but are not limited to, personal computers, server computers, hand-held or laptop devices, cellular devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like.","Each of the touch points  includes an ODD_Stub . As described in greater detail below, the ODD_Stub will preferably have been sent or pushed to the touch-point by the ODD_Service. However, it is to be understood that the ODD_Stub may have been placed on the touch-point by some other means, such as, for example, by the manufacturer of the touch-point during the touch-point manufacturing process. Each of the ODD_Stubs  provides a means for communicating with an ODD_Object .","The ODD_Object  is shown in  residing on or in the ODD_Service . The placement of the ODD_Object  on the ODD_Service  in this fashion in  is intended to make clear that the ODD_Object  may reside anywhere within the network environment . The operation and composition of the ODD_Object  is defined in greater detail below.","As shown in , the server  includes a Web server , an application server , and a legacy server . As is typical, the Web server  may be broadly described as a process running at a Web site which sends out Web pages in response to requests from a client. The application server  may be described as a program or programs which handle interactions and communications between the Web server and various backend business applications and\/or between the Web server  and the legacy server . The legacy server  may be defined as a program or programs containing various information which is accessed by the Web server via the application server. Typically, legacy servers manage or include one or more databases .","As will be understood by one skilled in the art, the precise elements and\/or functions of the Web server may or may not include, or be defined in terms of, a Web server, an applications server, and\/or a legacy server. As such, the particular configuration of the various elements of the server  shown and described in  is not meant to limit the scope of the present invention. It will, therefore, be understood that any suitable computing system environment which functions to handle the requests from another device or process may substitute for the server  as shown in .",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 2","b":["200","108","104","200","200","100"]},"The various component or elements of the present invention, including the ODD_Service , the ODD_Object , the ODD_Stub , and the various server functions , , and\/or  may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.","With reference to , an exemplary computing system environment includes a general purpose computing device in the form of a computer . Components of the computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can accessed by computer .","Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs  and , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media, such as, without limitation, a hard disc drive  and\/or a removable, nonvolatile memory .","The drives and their associated computer storage media discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN or WAN networking environment, the computer  is connected to the LAN through a network interface  or a modem . In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Although many other internal components of the computer  are not shown, those of ordinary skill in the art will appreciate that such components and the interconnection are well known. Accordingly, additional details concerning the internal construction of the computer  need not be disclosed in connection with the present invention.","Turning now to , an exemplary sequence diagram  is shown illustrating typical communications between a touch point , an ODD_Stub , a Web server , an ODD_Service , and an ODD_Object . As shown in , at the beginning of a communications session, the touch point  requests  an ODD_Object  from the Web server . This initial request  will typically be carried out using a communications protocol, such as HTTP. This initial request  may occur when the user logs on to a Website hosted by the Web server . Preferably, a header in the request will indicate the type, or characteristics of the touch-point  making the request , so that the server  may request an ODD_Stub which is appropriate for the specific type of touch-point making the request for an ODD_Object. After receiving the request  for the ODD_Object , the Web server requests  an appropriate ODD_Stub  from the ODD_Service . The ODD_Service  then on-demand, downloads  an ODD_Stub  which is associated with the type of touch-point  to the touch-point  which has made the initial request . That is, an ODD_Stub  which is compatible with the touch-point  is downloaded  to the touch-point .","Once the ODD_Stub  has been downloaded  to the touch-point  and initialized, the ODD_Stub  may request  an appropriate ODD_Object  from the ODD_Service . Upon receiving the request  for the ODD_Object , the ODD_Service  locates  the appropriate requested ODD_Object . After locating  the requested ODD_Object , the ODD_Service  initializes  the ODD_Object . Following initialization  of the requested ODD_Object , the ODD_Object initializes  the presentation logic and pushes the presentation towards the stub. Alternatively, a portion of the presentation logic could reside at the ODD_Object and a portion of the presentation logic could reside at the stub. In such a case, the majority of the presentation logic would preferably reside at the ODD_object, thus allowing the ODD_Object to handle the more processing intensive functions of the presentation logic. After the presentation logic has been initialized , the ODD_Stub  is ready for communications with the ODD_Object .","For example, as shown in , when the ODD_Stub  receives user activity , the ODD_Stub  sends events to the ODD_Object . The ODD_Object  then executes the business logic  which is appropriate for those events. Having executed the appropriate business logic , the ODD_Object  updates the ODD_Stub . Upon completion of all events or after a specified time, the touch-point  will send an exit message  to the ODD_Stub . The ODD_Stub  will then send an exit message  to the ODD_Object, which will then exit  or cease operations. A short time later, the ODD_Stub  will exit  or cease operations.","The sequence diagram  of  is but one example of a possible sequence of events occurring with, between, and\/or with respect to the touch point , the ODD_Stub , the Web server , the ODD_Service , and the ODD_Object . As will be understood to one skilled in the art, any number of varying sequences of events may occur on or with respect to the touch point , the ODD_Stub , the Web server , the ODD_Service , and the ODD_Object .","Turning now to , what is shown are operational flow diagrams  and  illustrating the operations employed in obtaining an ODD_Stub from an ODD_Service and various exemplary communications and operations which may take place between or with respect to touch points , ODD_Stubs , Web servers , ODD_Services , and ODD_Objects . Each of the operations shown in  indicate the particular process or device which is may be conducting or implementing the given operation. For example, as shown in the first operation  of , the determination operation  is preferably carried out by the ODD_Service . As will be understood by one skilled in the art, the operations such as those described with respect to  may be carried out by any one or more apparatuses or functions. As such, the particular references to the carrying out of the various operations in  by specific elements are meant to illustrate specific embodiments of the present invention and are not meant to limit the scope of the present invention.","As shown in , at the start  of the operation flow  an initial determination  is made by the ODD_Service  as to whether a request for an ODD_Stub  has been received. If a request for an ODD_Stub  has been received, a determination  is made regarding the presentation capacity of the touch-point . If a request for an ODD_Stub  has not been received, the determination  is made again by the ODD_Service  as to whether a request for an ODD_Stub  has been received. The presentation capacity of the user's device is typically indicated as a field or bit set within a request made by a touch-point  for an ODD_Object . If the presentation capacity has not been indicated in the request made by a touch-point request made by a touch-point , the ODD_Service  may poll the Web server  which in turn polls the appropriate touch-point  to determine the presentation capacity. Once the presentation capacity has been determined , the ODD_Service  deploys  the appropriate ODD_Stub to the touch-point  and the operational flow  is ended.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 5","FIG. 5"],"b":["104","110","112","122","120","502","500","122","110","120","504","120","110","122","506","120","506","120","508","508","120","508","120","508","120","120","510"]},"After initialization  of the presentation logic, the ODD_Stub is in a wait state, waiting for a user activity on the touch point . After determining  that a user activity has occurred on the touch point , a determination  is then made as to whether the user activity indicates that the user has exited. If the user activity indicates that the user has exited, the ODD_Service  destroys  the ODD_Object . The ODD_Stub is then cleared  from the touch-point . Following the clearing  of the ODD_Stub  from the touch point , the ODD_Service  again determines  if there has been a request from the touch-point  for an ODD_Object . If a request has been for an ODD_Object , the operation flow  returns to a point  before the location operation  and the location operation  is again performed. If it is determined  that a request has not been for an ODD_Object , the operation flow  is ended .","If a determination is made during the user exit determination operation  that a users action does not indicate that the user has exited, the ODD_Stub  passes  the event to the ODD_Object  and the ODD_Object  passes  the appropriate command(s) to the ODD_Stub . The ODD_Object  then executes  the appropriate business logic and updates  the ODD_Stub . Following the update  of the ODD_Stub , the operational flow  returns to a point  before the user action determination operation  location and the user action determination operation  is again performed.","As described above, the ODD_Object, ODD_Service, and ODD_Stub are preferably implemented as software modules. These software modules may be written in a number of different software languages. These software modules are preferably, though not necessarily, implemented in an object-oriented language. The following figures are class diagrams depicting the functions of and relationships among exemplary software modules. Generally, a class diagram models real-world entities and relationships among them. A class is a template defining the structure, elements, and behavior of software objects. The class diagrams illustrate exemplary interfaces through which the ODD_Object, the ODD_Service, and the ODD_Stub can communicate with one another. While the following embodiments are depicted in an object-oriented framework, it will be apparent to one skilled in the art how to implement the functions shown in the embodiments in a variety of object-oriented and non-object-oriented languages.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 6","FIG. 6","FIG. 6"],"b":["600","600","600"]},"The executable ODD_Object is created and resides on the server. Using object-oriented terminology, the ODD_Service declares an instance of the ODD_Object in response to a request from a client. The ODD_Object is then registered with the ODD_Service process. The ODD_Object then begins running as a thread in the ODD_Service. As discussed earlier, the ODD_Service can be implemented as a daemon process on the server. After the ODD_Object is created, the ODD_Service may periodically call a task of the ODD_Object or the ODD_Service may call an ODD_Object task in response to events. If the ODD_Object is not implemented in object-oriented software, then the ODD_Service will typically call a function in the ODD_Object to start an ODD_Object task or function running.","After the ODD_Object is running on the server, it responds to events coming from the ODD_Stub residing on a touch-point device that is in operable communication with the server. As will be discussed in more detail, the ODD_Object performs a number of actions in response to events, including, but not limited to, sending application data and formatting presentation data. Application data generally refers to the content of the business application data. For example, application data in a medical data application may be a binary encoded representation of a patient X-ray. By contrast, presentation data is any data associated with how data is presented to the user. For example, presentation data may include the dimensions and position of an X-ray image presented on a display of the touch-point.","The touch-point can be any computerized system connected to the server via any network. For example, the touch-point may be a personal computer, a palm pilot, or a cellular telephone. Examples of a network include, but are not limited to, an intranet or Internet providing communications over an Ethernet or a telephone line. The network could also be a wireless network providing access to servers from a hand held wireless device. Events are logical representations of user events, such as mouse movements, keyboard or keypad data entry, or button clicks. Events are preferably binary encoded representations of user events. User events are captured or received by the ODD_Stub on the touch-point and encoded, formatted, and transmitted to the ODD_Object via the network. An event is preferably in a format that is quickly and efficiently communicated to and processed by the ODD_Object. Preferably, the ODD_Object provides an interface, such as an Application Programming Interface (API), and the event can be formatted in accordance with the interface.","In the software, when a particular variable of type DownLoadObject class  is declared, or instantiated, a DownLoadObject object is created. The DownLoadObject object is an example of an ODD_Object and is in operable communication with the ODD_Service and the ODD_Stub. The class description of DownLoadObject shows the internal variables and interface to the DownLoadObject. If the DownLoadObject is implemented in a procedural software language, the DownLoadObject will have an interface defined in a non-object-oriented fashion. In either case, the ODD_Stub which communicates with the DownLoadObject is specifically designed to interact with the DownLoadObject via the interface. The ODD_Stub is a client process residing on a touch-point connected to the server .","The DownLoadObject class  of  includes panel variables such as bg_canvas, logoPan, RegisterPan, and ProductPan. Panels are objects that provide methods for creating graphical panel components on the display of the touch-point. Panels can display textual information, or graphical information, and can have various sizes, and shapes. Panels can also provide data entry mechanisms to the user. As will be discussed, panels can have any or all of the other objects that are discussed here, such as labels, images, and buttons. Also in Download Castlet  are image variables, such as bg_image and logoImg. Image variable are objects that provide methods for creating images on the display of the touch-point. DownLoadObject class  also contains label variables, such as statuslabel and initLab, which are objects that provide methods for creating labels on the display of the touch-point. DownLoadObject class  also includes text objects, such as emailText, fnameText, lnameText, cityText, stateText, and zipText. Text objects provide methods for processing text that can be entered by a user at the touch-point.","The DownLoadObject class  includes choice objects, such as hearChoice, and ProductChoice. Choice objects provide methods for the user to input choices. For example, the hearChoice object is used to store information identifying where the user first heard of the site. The ProductChoice object can be used to enter and store information identifying the product that the user desires. Another object in the DownLoadObject class  is a text area object, such as textArea, which can be used to accept textual input from the user. Button objects, such as downloadBut, nextBut, and prevBut are used to store and retrieve graphical button information. In the embodiment, there are three buttons presented to the user. Button nextBut is used to move to a next page, prevBut is used to move to a previous page, and downloadBut is used to download data from the network. Objects that encapsulate buttons have data that indicates button parameters and states, such as whether the button is pressed or not. As was discussed, the ODD_Stub running on the touch-point, sends event information regarding the status of the user interface. This status affects the state of objects in the DownLoadObject class. For example, if the user presses the next button, the object nextBut will be changed to a pressed state in response to a status message from the ODD_Stub running on the touch-point. When the nextBut changes to the pressed state, the DownLoadObject class  software can respond by providing a different screen interface to the user, comprised of graphical components such as panels, text areas, and buttons.","Other variables that can be included in the DownLoadObject class  are string variables, such as infoString and infoFile to handle string information, such as text input by the user, and file names. A thread object, such as prodTh, can be used to run a task, or thread of code. For example, one task for the DownLoadObject  is to wait until a request is received. The thread prodTh may start a wait task that waits until the request is received. The ODD_Service can be implemented on a multithreading system and can include reentrant software. Also in DownLoadObject class  there is a Boolean variable loaded that can be used to indicate whether the thread has been loaded. The objects and variables included in the DownLoadObject class  can be public, protected, or private in an object-oriented implementation.","The DownLoadObject class also includes methods, or functions, that provide an interface so that other classes can use the DownLoadObject class . The methods provided perform operations on the variables in the class. The methods include, but are not limited to, those shown in . An init method initializes the Download class object. A start method creates a new thread associated with the DownLoadObject class and starts running. A stop method stops the thread running. A destroy method removes the DownLoadObject object from memory. A run method is provided to respond to a request for an ODD_Stub. The run method calls a loadProdPanel method which displays to the user different ODD_Stubs available. A gatherData method gathers the text data that is input by the user and sent to the server, and combines the text elements (such as first name as last name) into a single string. A writeData method responds to an event from the ODD_Stub by locating a file containing the data and sending it to the ODD_Stub. A DownLoadObject method is a constructor that is run when an object of the class is instantiated.","The DownLoadObject class  can also use several classes to process user input and respond. In the embodiment of , the DownLoadObject class  uses an ActionHandler class  to process button actions. For example, the ActionHandler  queries an event from the touch-point to determine whether any of the buttons have been pushed. If the panel RegisterPan is currently displayed and the ActionHandler determines that the next button is pressed, the ActionHandler responds by sending a command commanding the ODD_Stub on the touch-point to display the product panel. The DownLoadObject class  can also use a KeyHandler class  for presenting prompts to the user for text input. The DownLoadObject class  can also use an ItemHandler class  for presenting the download button to the user. DownLoadObject class  can also use a MouseHandler class  for displaying messages to the user as the user moves the mouse pointer over areas of the display.","Table 1 contains java software that can be used to implement the class diagram shown in .",{"@attributes":{"id":"p-0077","num":"0076"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"public class DownLoadObject"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/Background Canvas"]},{"entry":[{},"CPanel bg_canvas;"]},{"entry":[{},"CImage bg_image;"]},{"entry":[{},"\/\/Status"]},{"entry":[{},"CLabel statuslabel;"]},{"entry":[{},"\/\/Logo"]},{"entry":[{},"CImage logoImg;"]},{"entry":[{},"CPanel logoPan;"]},{"entry":[{},"\/\/Show the wait sign while castlet is loading the image"]},{"entry":[{},"CLabel initLab;"]},{"entry":[{},"\/\/Register Panel .. register before you download"]},{"entry":[{},"CPanel RegisterPan;"]},{"entry":[{},"CTextField emailText;"]},{"entry":[{},"CTextField fnameText;"]},{"entry":[{},"CTextField lnameText;"]},{"entry":[{},"CTextField streetText;"]},{"entry":[{},"CTextField cityText;"]},{"entry":[{},"CTextField stateText;"]},{"entry":[{},"CTextField zipText;"]},{"entry":[{},"CChoice hearChoice;"]},{"entry":[{},"\/\/Product Panel .. which product you want to download"]},{"entry":[{},"CPanel ProductPan;"]},{"entry":[{},"CChoice prodChoice;"]},{"entry":[{},"CTextArea textAre61;"]},{"entry":[{},"CButton downloadBut;"]},{"entry":[{},"\/\/Navigation"]},{"entry":[{},"CButton nextBut;"]},{"entry":[{},"CButton prevBut;"]},{"entry":[{},"\/\/Helpers"]},{"entry":[{},"String infoString;"]},{"entry":[{},"String infoFile;"]},{"entry":[{},"Thread prodTh;"]},{"entry":[{},"Boolean loaded;"]},{"entry":[{},"\/\/lock up the download registration file"]},{"entry":[{},"static public final Object fileLock = new Object( );"]},{"entry":[{},"public DownLoadObject( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"super( );"]},{"entry":[{},"System.err.println(\u201cDownLoadObject: CREATED\u201d);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/init as in Applet"]},{"entry":[{},"public void init( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"System.err.println(\u201cDownLoadObject: INIT\u201d);"]},{"entry":[{},"\/\/{{INIT_CONTROLS"]},{"entry":[{},"\/\/--> The basic layout and background \u201ccanvas\u201d"]},{"entry":[{},"setLayout(null);"]},{"entry":[{},"setSize(500,400);"]},{"entry":[{},"initLab = new CLabel(\u201cDistributing Castlet ...\u201d);"]},{"entry":[{},"initLab.setBounds(90,290,150,20);"]},{"entry":[{},"initLab.setFont(new CFont(\u201cHelvetica\u201d, CFont.BOLD, 14));"]},{"entry":[{},"initLab.setForeground(new Color(8421504));"]},{"entry":[{},"add(initLab);"]},{"entry":[{},"loaded = false;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/start as in Applet"]},{"entry":[{},"public void start( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/Spawn a thread to load the gui"]},{"entry":[{},"\/\/in the mean time, ask user to wait a little"]},{"entry":[{},"if (loaded == false) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"prodTh = new Thread(this);"]},{"entry":[{},"prodTh.setPriority(Thread.MIN_PRIORITY);"]},{"entry":[{},"prodTh.start( );"]},{"entry":[{},"loaded = true;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/Stop as in Applet"]},{"entry":[{},"public void stop( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if(prodTh != null && prodTh.isAlive( )) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"prodTh.stop( );"]},{"entry":[{},"prodTh = null;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"System.err.println(\u201cDownLoadObject:STOP\u201d);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/destroy as in Applet"]},{"entry":[{},"public void destroy( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"System.err.println(\u201cDownLoadObject: DESTROY\u201d);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/Action Handler"]},{"entry":[{},"class ActionHandler implements CActionListener"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public void actionPerformed(CActionEvent event)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Object object = event.getSource( );"]},{"entry":[{},"if (object== prevBut){"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ProductPan.hide( );"]},{"entry":[{},"RegisterPan.show( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (object == nextBut) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RegisterPan.hide( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ProductPan.show( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002}"]},{"entry":[{},"if (object == downloadBut){"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"writeData(gatherData( ));"]},{"entry":[{},"\/\/Next redirect the user to the Web page containing the product"]},{"entry":[{},"showDocument(\u201chttp:\/\/www.castlets.com\/html\/download.html\u201d);"]},{"entry":[{},"}"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"class ItemHandler implements CItemListener"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public void itemStateChanged(CItemEvent evt)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Object object = evt.getSource( );"]},{"entry":[{},"if(object == prodChoice){"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (prodChoice.getSelectedItem( ).equals(\u201cCastWare v.06"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"with Docs\u201d)) {"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"textAre61.setText(\u201cThe entire CastWare Java Packages.It"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"containsthe Castlet packages, the Castlet Manager, the Castlet Daemon, examples and"},{"entry":"documentation\u201d);"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"downloadBut.show( );"]},{"entry":[{},"} else if (prodChoice.getSelectedIndex( ) == 2) {"]},{"entry":[{},"textAre61.setText(\u201cThe CastWare JavaPackages.It"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"contains the Castlet packages, the Castlet Manager, the Castlet Daemon and"},{"entry":"examples\u201d);"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"downloadBut.show( );"]},{"entry":[{},"} else if (prodChoice.getSelectedIndex( ) == 0) {"]},{"entry":[{},"textAre61.setText(\u201c\u201d);"]},{"entry":[{},"downloadBut.hide( );"]},{"entry":[{},"}"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"class KeyHandler extends CKey Adapter"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public void keyPressed(CKeyEvent evt)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Object object = evt.getSource( );"]},{"entry":[{},"if(object == emailText && evt.getKeyCode( ) == 10)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"emailText.select(0,0);"]},{"entry":[{},"fnameText.selectAll( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002fnameText.requestFocus( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"statuslabel.setText(\u201cPlease type in your first name\u201d);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"if(object == fnameText && evt.getKeyCode( ) == 10)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"fnameText.select(0,0);"]},{"entry":[{},"lnameText.selectAll( );"]},{"entry":[{},"lnameText.requestFocus( );"]},{"entry":[{},"statuslabel.setText(\u201cPlease type in your last name\u201d);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"if(object == lnameText && evt.getKeyCode( ) == 10)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lnameText.select(0,0);"]},{"entry":[{},"streetText.selectAll( );"]},{"entry":[{},"streetText.requestFocus( );"]},{"entry":[{},"statuslabel.setText(\u201cPlease type in your street address\u201d);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"if(object == streetText && evt.getKeyCode( ) == 10)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"streetText.select(0,0);"]},{"entry":[{},"cityTextselectAll( );"]},{"entry":[{},"cityText.requestFocus( );"]},{"entry":[{},"statuslabel.setText(\u201cPlease type in your city name\u201d);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"if(object == cityText && evt.getKeyCode( ) == 10)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"cityText.select(0,0);"]},{"entry":[{},"stateText.selectAll( );"]},{"entry":[{},"stateText.requestFocus( );"]},{"entry":[{},"statuslabel.setText(\u201cPlease type in your state name\u201d);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"if(object == stateText && evt.getKeyCode( ) == 10)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"stateText.select(0,0);"]},{"entry":[{},"zipText.SelectAll( );"]},{"entry":[{},"zipText.requestFocus( );"]},{"entry":[{},"statuslabel.setText(\u201cPlease type in your zip code\u201d);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"if(object == zipText && evt.getKeyCode( ) == 10)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"zipText.select(0,0);"]},{"entry":[{},"hearChoice.requestFocus( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"class MouseHandler extends CMouseAdapter"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public void mouseEntered(CMouseEvent evt)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Object object = evt.getSource( );"]},{"entry":[{},"if(object == logoPan){"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"statuslabel.setText(\u201cCastlets by Tian\u201d);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public void mouseExited(CMouseEvent evt)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Object object = evt.getSource( );"]},{"entry":[{},"if(object == logoPan){"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"statuslabel.setText(\u201c\u201d);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public void run( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"loadProdPanel( );"]},{"entry":[{},"remove(initLab);"]},{"entry":[{},"emailText.select All( );"]},{"entry":[{},"emailText.requestFocus( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public void loadProdPanel( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"try {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"bg_image ="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"getImage(getCodeBase( ),\u201cexamples\/download\/download_bg.gif\u201d);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"logoImg ="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"getImage(getCodeBase( ),\u201cexamples\/download\/clog_0.gif\u201d);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"} catch (Exception e) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"System.err.println(e);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"bg_canvas = new ImagePanel(bg_image);"]},{"entry":[{},"bg_canvas.setLayout(null);"]},{"entry":[{},"bg_canvas.setBounds(0,0,450,289);"]},{"entry":[{},"\/\/ -> Logo, Status Bars and other general controls"]},{"entry":[{},"logoPan = new ImagePanel(logoImg);"]},{"entry":[{},"logoPan.setBounds(5,289,30,30);"]},{"entry":[{},"add(logoPan);"]},{"entry":[{},"statuslabel = newCLabel(\u201c\u201d);"]},{"entry":[{},"statuslabel.setBounds(47,289,278,20);"]},{"entry":[{},"statuslabel.setFont( new CFont(\u201cCourier\u201d, CFont.PLAIN, 10));"]},{"entry":[{},"\/\/ -> The Register Panel and its associated CWTs"]},{"entry":[{},"RegisterPan = new Cpanel( );"]},{"entry":[{},"RegisterPan.setLayout(null);"]},{"entry":[{},"RegisterPan.setBounds(92,52,198,160);"]},{"entry":[{},"bg_canvas.add(RegisterPan);"]},{"entry":[{},"RegisterPan.setBackground(Color.black);"]},{"entry":[{},"emailText =new CTextField(\u201cPlease type your e-mail address\u201d);"]},{"entry":[{},"emailText.setBounds(8,9,179,19);"]},{"entry":[{},"emailText.setFont(new CFont(\u201cHelvetica\u201d, CFont.ITALIC, 10));"]},{"entry":[{},"emailText.setForeground(Color.white);"]},{"entry":[{},"RegisterPan.add(emailText);"]},{"entry":[{},"fnameText = new CTextField(\u201cPlease type your first name\u201d);"]},{"entry":[{},"fnameText.setFont(new CFont(\u201cHelvetica\u201d, CFont.ITALIC, 10));"]},{"entry":[{},"fnameText.setForeground(Color.white);"]},{"entry":[{},"RegisterPan.add(fnameText);"]},{"entry":[{},"fnameText.setBounds(8,34,179,19);"]},{"entry":[{},"lnameText = new CTextField(\u201cPlease type your last name\u201d);"]},{"entry":[{},"lnameText.setBounds(8,59,179,19);"]},{"entry":[{},"lnameText.setFont(new CFont(\u201cHelvetica\u201d, CFont.ITALIC, 10));"]},{"entry":[{},"lnameText.setForeground(Color.white);"]},{"entry":[{},"RegisterPan.add(lnameText);"]},{"entry":[{},"streetText = new CTextField(\u201cPlease type your street address\u201d);"]},{"entry":[{},"streetText.setBounds(8,84,179,19);"]},{"entry":[{},"streetText.setFont(new CFont(\u201cHelvetica\u201d, CFont.ITALIC, 10));"]},{"entry":[{},"streetText.setForeground(Color.white);"]},{"entry":[{},"RegisterPan.add(streetText);"]},{"entry":[{},"cityText = new CTextField(\u201cCity\u201d);"]},{"entry":[{},"cityText.setBounds(8,109,78,19);"]},{"entry":[{},"cityText.setFont(new CFont(\u201cHelvetica\u201d, CFont.ITALIC, 10));"]},{"entry":[{},"cityText.setForeground(Color.white);"]},{"entry":[{},"RegisterPan.add(cityText);"]},{"entry":[{},"stateText = new CTextField(\u201cst\u201d);"]},{"entry":[{},"stateText.setBounds(89,109,26,19);"]},{"entry":[{},"stateText.setFont(new CFont(\u201cHelvetica\u201d, CFont.ITALIC, 10));"]},{"entry":[{},"stateText.setForeground(Color.white);"]},{"entry":[{},"RegisterPan.add(stateText);"]},{"entry":[{},"zipText = new CTextField(\u201czip\u201d);"]},{"entry":[{},"zipText.setBounds(118,109,68,19);"]},{"entry":[{},"zipText.setFont(new CFont(\u201cHelvetica\u201d, CFont.ITALIC, 10));"]},{"entry":[{},"zipText.setForeground(Color.white);"]},{"entry":[{},"RegisterPan.add(zipText);"]},{"entry":[{},"hearChoice = new CChoice( );"]},{"entry":[{},"hearChoice.addItem(\u201cLearned about Castlets from ...\u201d);"]},{"entry":[{},"hearChoice.addItem(\u201cInternet\u201d);"]},{"entry":[{},"hearChoice.addItem(\u201cAdvertising \u201d);"]},{"entry":[{},"hearChoice.addItem(\u201cBrowsing\u201d);"]},{"entry":[{},"hearChoice.addItem(\u201cSearching\u201d);"]},{"entry":[{},"hearChoice.addItem(\u201cOther\u201d);"]},{"entry":[{},"RegisterPan.add(hearChoice);"]},{"entry":[{},"hearChoice.setBounds(8,135,179,15);"]},{"entry":[{},"hearChoice.setFont(new CFont(\u201cHelvetica\u201d, CFont.ITALIC, 10));"]},{"entry":[{},"hearChoice.setForeground(Color.white);"]},{"entry":[{},"hearChoice.setBackground(Color.black);"]},{"entry":[{},"\/\/ -> The Product Panel"]},{"entry":[{},"ProductPan = new Cpanel( );"]},{"entry":[{},"ProductPan.hide( );"]},{"entry":[{},"ProductPan.setLayout(null);"]},{"entry":[{},"ProductPan.setBounds(92,52,198,160);"]},{"entry":[{},"ProductPan.setBackground(Color.black);"]},{"entry":[{},"bg_canvas.add(ProductPan);"]},{"entry":[{},"prodChoice = new CChoice( );"]},{"entry":[{},"prodChoice.addItem(\u201cPlease select a product \u201d);"]},{"entry":[{},"prodChoice.addItem(\u201cCastWare v.06 with Docs\u201d);"]},{"entry":[{},"prodChoice.addItem(\u201cCastWare v.06 without Docs \u201d);"]},{"entry":[{},"prodChoice.setForeground(Color.white);"]},{"entry":[{},"prodChoice.setBounds(8,9,179,15);"]},{"entry":[{},"prodChoice.setFont(new CFont(\u201cDialog\u201d, CFont.ITALIC, 10));"]},{"entry":[{},"prodChoice.setForeground(Color.white);"]},{"entry":[{},"prodChoice.setBackground(Color.black);"]},{"entry":[{},"ProductPan.add(prodChoice);"]},{"entry":[{},"textAre61 = new"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"CTextArea(\u201c\u201d,0,0,CTextArea.SCROLLBARS_NONE);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"textAre61.setFont(new CFont(\u201cHelvetica\u201d, CFont.PLAIN, 10));"]},{"entry":[{},"textAre61.setEditable(false);"]},{"entry":[{},"textAre61.setForeground(Color.white);"]},{"entry":[{},"ProductPan.add(textAre61);"]},{"entry":[{},"textAre61.setBounds(8,37,179,78);"]},{"entry":[{},"downloadBut = new CButton(\u201cSubmit\u201d);"]},{"entry":[{},"downloadBut.setActionCommand(\u201cdownload\u201d);"]},{"entry":[{},"downloadBut.setBounds(66,126,70,22);"]},{"entry":[{},"downloadBut.setForeground(Color.white);"]},{"entry":[{},"downloadBut.setBackground(Color.black);"]},{"entry":[{},"ProductPan.add(downloadBut);"]},{"entry":[{},"downloadBut.hide( );"]},{"entry":[{},"prevBut = new CButton(\u201c<<\u201d);"]},{"entry":[{},"prevBut.setActionCommand(\u201cprev\u201d);"]},{"entry":[{},"prevBut.setFont(new CFont(\u201cDialog\u201d, CFont.BOLD, 12));"]},{"entry":[{},"prevBut.setBounds(162,230,25,22);"]},{"entry":[{},"prevBut.setForeground(Color.white);"]},{"entry":[{},"prevBut.setBackground(Color.black);"]},{"entry":[{},"bg_canvas.add(prevBut);"]},{"entry":[{},"prevBut.setEnabled(true);"]},{"entry":[{},"nextBut = new CButton(\u201c>>\u201d);"]},{"entry":[{},"nextBut.setActionCommand(\u201cnext\u201d);"]},{"entry":[{},"nextBut.setFont(new CFont(\u201cDialog\u201d, CFont.BOLD, 12));"]},{"entry":[{},"nextBut.setBounds(197,230,25,22);"]},{"entry":[{},"nextBut.setForeground(Color.white);"]},{"entry":[{},"nextBut.setBackground(Color.black);"]},{"entry":[{},"bg_canvas.add(nextBut);"]},{"entry":[{},"nextBut.setEnabled(true);"]},{"entry":[{},"add(bg_canvas);"]},{"entry":[{},"add(statuslabel);"]},{"entry":[{},"\/\/add event listener"]},{"entry":[{},"ActionHandler acth = new ActionHandler( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2003prevBut.addActionListener(acth);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"nextBut.addActionListener(acth);"]},{"entry":[{},"downloadBut.addActionListener(acth);"]},{"entry":[{},"ItemHandler itemh = new ItemHandler( );"]},{"entry":[{},"prodChoice.addItemListener(itemh);"]},{"entry":[{},"KeyHandler keyh = new KeyHandler( );"]},{"entry":[{},"emailText.addKeyListener(keyh);"]},{"entry":[{},"fnameText.addKeyListener(keyh);"]},{"entry":[{},"lnameText.addKeyListener(keyh);"]},{"entry":[{},"streetText.addKeyListener(keyh);"]},{"entry":[{},"cityText.addKeyListener(keyh);"]},{"entry":[{},"stateText.addKeyListener(keyh);"]},{"entry":[{},"zipText.addKeyListener(keyh);"]},{"entry":[{},"MouseHandler mouseh = new MouseHandler( );"]},{"entry":[{},"logoPan.addMouseListener(mouseh);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"String gatherData( ) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ Customize gatherData based on your specific UI"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return","new String( \u201c\\\u201d\u201c + emailText.getText( ) + \u201d\\\u201c\u201d + \u201c,\u201d +"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201c\\\u201d\u201c + fnameText.getText( ) + \u201d\\\u201c\u201d + \u201c,\u201d +"]},{"entry":[{},"\u201c\\\u201d\u201c + lnameText.getText( ) + \u201d\\\u201c\u201d + \u201c,\u201d +"]},{"entry":[{},"\u201c\\\u201d\u201c + streetText.getText( ) + \u201d\\\u201c\u201d + \u201c,\u201d +"]},{"entry":[{},"\u201c\\\u201d\u201c + cityText.getText( ) + \u201d\\\u201c\u201d + \u201c,\u201d +"]},{"entry":[{},"\u201c\\\u201d\u201c + stateText.getText( ) + \u201d\\\u201c\u201d + \u201c,\u201d +"]},{"entry":[{},"\u201c\\\u201d\u201c + zipText.getText( ) + \u201d\\\u201c\u201d + \u201c,\u201d +"]},{"entry":[{},"\u201c\\\u201d\u201c + hearChoice.getSelectedItem( ) +"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u201d\\\u201c\u201d + \u201c,\u201d +"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u201c\\\u201d\u201c + prodChoice.getSelectedItem( ) +"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u201d\\\u201c\u201d );"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"void writeData(String data) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"synchronized(fileLock)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"try {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"File Writer fout = new"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"File Writer(getCodeBase( ).getFile( )+\u201cexamples\/download\/custinfo.dat\u201d, true);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"fout.write(data+\u201c\\n\u201d,0,data.length( )+1);"]},{"entry":[{},"fout.flush( );"]},{"entry":[{},"fout.close( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"} catch (IOException e) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"e.printStackTrace( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/Helper Classes"},{"entry":"class ImagePanel extends CPanel {"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CImage img;"]},{"entry":[{},"public ImagePanel(CImage img)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"this.img=img"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public void paint(CGraphics eg)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"cg.drawImage(img,0,0,this);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The embodiment of  and the corresponding software in Table 1 illustrate a method and system implementing on-demand distribution of software that allows a touch-point to interface with any server, regardless of the communications protocol used. A more complex ODD_Stub can allow a Web site to present download\/register capabilities for various application specific content. The software above demonstrates the use of unicast ODD_Stubs to present business logic through a presentation logic that is distributed on-demand by the ODD_Object. Unicast refers to point-to-point transmission of data between one ODD_Object and one ODD_Stub. Another embodiment in accordance with the present invention allows for broadcast transmission. In the broadcast transmission embodiment, an ODD_Object communicates with all of the ODD_Stubs on a network. Another embodiment is a multicast transmission scheme, in which an ODD_Object communicates with many ODD_Stubs on a network.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 7","FIG. 7"],"b":["700","700"]},"Also included in the text object class  are one or more label objects, such as Label1. Labels can be used to present messages to the user in response to certain events, such as mouse movements. One or more text field objects, such as TextA, are used by the text object class , to render text input regions on the presentation display. The object TextA can store information about a text entry region such as the region's size and location. Similarly, one or more button objects, such as startBut and custBut, manage the presentation of buttons to the user. Presentation logic in a button object includes but is not limited to setting the location, size, and color of the button. One or more panel objects, such as logoPan, are included in the text object class  to manage the presentation of panels to the user. Panels are preferably graphical presentation regions on the display having buttons, text entry regions, and images. The user can interact with the headline news application through the interface presented by the panel. User events, such as mouse movements, and button clicks, are communicated to the text object . The text object  responds to the events by setting parameters for buttons, images, text fields, and panels to adjust the appearance of the presentation to the user when necessary.","A thread object, such as newsThread, handles news headline task management. Tasks managed by the newsThread include, but are not limited to, waiting for the user to request news, gathering news data from a file, formatting the news data, and sending the news data to the touch-point. A file input stream, such as news_file, can be an object managing file input. For example, the news_file object may hold a pointer to a news file, and have methods for opening the file, reading from the file, and closing the file. The news_file object may also deliver status messages, such as error messages when a file is not located or cannot be opened. A data input stream, such as news_in, can be an object that manages text data. For example, news_in may have a pointer to a data buffer, as well as methods for reading lines of text from the data buffer, parsing text data, and writing text data to the buffer. String variables, such as lines and news_f may be included in the text object class  to identify lines of news data, sequence through the lines, and retrieve the lines of news so that the headline news can be presented to the user.","The text object class  includes one or more methods that provide an interface for the ODD_Service, and other objects, or applications that can communicate to, and use the ODD_Object. As discussed earlier, the ODD_Service can be implemented as a daemon that can manage one or more ODD_Objects. Management of an ODD_Object includes starting and stopping the ODD_Object. While the ODD_Object is running, the ODD_service may communicate with the ODD_Object using any of a number of interfaces. In one embodiment, the interface to the ODD_Object can be an application programming interface (API), whereby the ODD_Service makes API calls to the ODD_Object. In another embodiment, the ODD_Service and the ODD_Object can communicate through a message queue server. In still a further embodiment, the ODD_Service and the ODD_Object can communicate using inter process communication. When the ODD_Service receives an event from the ODD_Stub via the network, the ODD_Service communicates the event to the ODD_Object through whatever interface is used.","The interface to the text ODD_Object in  is comprised of the methods shown in the text object class . An init method is provided to initialize the variables included in the text object class . For example, the init method may initialize the boundaries and size of a button on a starting panel. A start method is provided to a news task running. A stop method is provided to terminate a running news task. A destroy method may be called to stop processing by the text object class  and remove it from memory. A run method can be used to start the headline news processing, such as gathering headline news from a file, formatting the news, and sending it to the touch-point. A method called loadHeadlines can be provided to encapsulate the functionality of gathering headline news data from a file and loading it into a data stream that can be sent to the ODD_Stub for presentation at the touch-point. The text object class  includes a TextObject method, which is the constructor that is run whenever the text object class  is instantiated in a declaration. The TextObject method can perform any function necessary at the time of instantiation, including variable and status initialization.","The ODD_Object can include other classes to encapsulate certain functionality. These classes may be used by the text object class  to facilitate presentation of data to the user. These classes include, but are not limited to, a MouseHandler class , an ImagePanel class , and an ImageButton class . The MouseHandler class  provides functions similar to those of MouseHandler class  of . The ImagePanel class  provides functions to manipulate an image panel on the display of the touch-point. An image panel is a specialized panel having an image associated with it. The image can be displayed on the panel as a background to the buttons, and other graphical components on the panel. The ImagePanel class  may store an image, such as logoImg. Alternatively, the ImagePanel class  may store a pointer to an image in memory. The ImagePanel class  has one or more methods that provide an interface to manipulate the image panel. Methods of the ImagePanel class  include the constructor, ImagePanel, and a paint method. The constructor preferably performs any necessary image panel initialization, such as setting logoImg equal to an initial image. The paint method may cause the image panel to be rendered on the display. The ImagePanel class  can inherit from a more basic Panel class . The Panel class  can have a function, such as add, which allows a user of Panel to add a graphical component to the Panel.","The ImageButton class  provides an interface to manipulate graphical buttons on the display. An image button can be viewed as a specialized button, which has an image associated with the button. The ImageButton class includes an Image object, such as logoImg. The ImageButton class also includes a Graphics variable, such as cg, which is used to present graphics to the user. The ImageButton class  provides an interface consisting of one or more methods. The constructor, ImageButton, typically performs initialization functions, such as initializing logoImg to an image in memory. A paint method causes the graphics element cg to be rendered on the display at the touch-point. A setImage method allows a user of the ImageButton class  to set logoImg equal to an image in memory.","The functionality shown in the class diagram of  can be implemented in any software language. While the class diagrams are well-suited for implementation using an object-oriented language, such as Smalltalk, Java, or C++, one skilled in the art will recognize that the functionality described in the class diagrams can easily be implemented in other languages, such as C, Pascal, or Fortran. The following are based on Java software, for example the abstract window toolkit (AWT) and Java foundation classes (JFC), elements that can implement the classes shown in . The software can be extended from the basic AWT and JFC classes to form customized application classes.",{"@attributes":{"id":"p-0087","num":"0086"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public class TextObject"]},{"entry":[{},"{"]},{"entry":[{},"\/\/ Declare graphical components"]},{"entry":[{},"CTextField textA;"]},{"entry":[{},"Clabel label1;"]},{"entry":[{},"CImage logoImg;"]},{"entry":[{},"CPanel logoPan;"]},{"entry":[{},"CImage startImg;"]},{"entry":[{},"CImage startImg_on;"]},{"entry":[{},"ImageButton startBut;"]},{"entry":[{},"\/\/..."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ Declare other variables that are used for the Business logic"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Thread newsThread;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FileInputStream news_file;"]},{"entry":[{},"DataInputStream news_in;"]},{"entry":[{},"\/\/..."]},{"entry":[{},"String[ ] lines;"]},{"entry":[{},"String news_f;"]},{"entry":[{},"public void init( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ Set properties for each graphical component"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"textA = new CTextField(\u201cCoding like hell?\u201d);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"textA.setEditable(false);"]},{"entry":[{},"textA.setBounds(10,15,218,24);"]},{"entry":[{},"textA.setBackground(Color.red);"]},{"entry":[{},"textA.setForeground(Color.white);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"textA.setFont(new CFont(\u201cHelvetica\u201d, CFont.PLAIN, 10));"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"textA.setCursor(new"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Cursor(Cursor.DEFAULT_CURSOR));"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"textA.disableOldEvents( );"]},{"entry":[{},"add(textA);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ Business logic"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Set the news.txt file stream"]},{"entry":[{},"try {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"news_file = new FileInputStream(news_f);"]},{"entry":[{},"news_in = new DataInputStream(news_file);"]},{"entry":[{},"loadHeadlines( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"} catch (IOException e) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"System.out.println(e);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/..."]},{"entry":[{},"}"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public void stop( )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if(newsThread!=null&&newsThread.is Alive( ))"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"newsThread.stop( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"running = false;"]},{"entry":[{},"System.err.println(\u201cstop\u201d);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ Tie the presentation to business logic"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"class MouseHandler extends CMouseAdapter"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public void mouseEntered(CMouseEvent evt)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Object object = evt.getSource( );"]},{"entry":[{},"if(object == logoPan){"]},{"entry":[{},"\u2003label1.setText(\u201cCastlets by Tian\u201d);"]},{"entry":[{},"\u2003return;"]},{"entry":[{},"}"]},{"entry":[{},"if(object == custBut)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"custBut.setImage(custImg_on);"]},{"entry":[{},"label1.setText(\u201cCustomize me!\u201d);"]},{"entry":[{},"return;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public void mouseExited(CMouseEvent evt)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Object object = evt.getSource( );"]},{"entry":[{},"if(object == logoPan){"]},{"entry":[{},"\u2003label1.setText(\u201c\u201d));"]},{"entry":[{},"\u2003return;"]},{"entry":[{},"}"]},{"entry":[{},"if(object == startBut){"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if(running){"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"startBut.setImage(startImg_on);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"} else {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"startBut.setImage(stopImg_on);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"label1.setText(\u201c\u201d));"]},{"entry":[{},"return;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/..."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/..."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ Set the text field text to the actual news:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Run method for our news thread"]},{"entry":[{},"public void run( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"try"]},{"entry":[{},"{"]},{"entry":[{},"while(true)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Thread.currentThread( ).yield( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Thread.currentThread( ).sleep(delay);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (i <= num_lines\u22121) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"textA.setText(lines[i]);"]},{"entry":[{},"i++"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else i = 0;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003} catch (Exception e)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"System.out.println(e);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ More business logic implementation:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ A helper method that allows us to"]},{"entry":[{},"\/\/ read all the headlines in an array of Strings"]},{"entry":[{},"\/\/ Format for the news files is simply:"]},{"entry":[{},"\/\/ First line:a number that matches the total news"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"lines"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ All subsequent lines - the actual news"]},{"entry":[{},"void loadHeadlines( )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"throws IOException"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"num_lines ="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Integer.parseInt(news_in.readLine( ));"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lines = new String[num_lines];"]},{"entry":[{},"for (int i = 0; i < lines.length; i++)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"lines[i] = news_in.readLine( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ Create a custom, rollover push button and an image panel:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"class ImagePanel extends CPanel {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CImage logoImg;"]},{"entry":[{},"public ImagePanel(CImage img)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"logoImg=img"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public void paint(CGraphics eg)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"cg.drawImage(logoImg,0,0,this);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"class ImageButton extends CCanvas {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CImage img;"]},{"entry":[{},"CGraphics cg;"]},{"entry":[{},"public ImageButton(CImage img)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"this.img=img"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public void paint(CGraphics eg)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"cg.drawImage(img,0,0,this);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public void setImage(CImage img)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"this.img = img;"]},{"entry":[{},"if (cg == null) cg = getGraphics( );"]},{"entry":[{},"paint(cg);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Once compiled, the above ODD_Object can be registered with the ODD_Service. The ODD_Object is registered with the ODD_Service so that the ODD_Object is a part of the process running on the server. After the ODD_Object is registered, it will receive events and receive processor time to process the events and respond to them. Registering the ODD_Object can include notifying the ODD_Service of identification parameters of the ODD_Object. Such identification parameters can include, but is not limited to, a name for the ODD_Object and a memory location for the ODD_Object.","In one embodiment, all business logic, graphical user interface (GUI) layout management (also referred to as the presentation logic), and event handling is embedded in the ODD_Object on the server. The ODD_Stub in this embodiment presents the GUI to the user on the display and relays events to the ODD_Object running on the server. Events include, but are not limited to, text entry, mouse w movement, and button pressing.","In an alternative embodiment, the ODD_Stub handles responding to certain events, certain GUI changes, and interactions with the touch-point. For example, when the user presses a button, the ODD_Stub could render the button with a depressed look, or a different color without sending the button press event to the ODD_Object on the server. This embodiment is useful for events that are not coupled tightly with the business logic. This embodiment may improve the performance because time is saved by not sending all events to the server, having the server process the events, and communicate back the proper response. When the ODD_Stub handles events, GUI changes, and touch-point interaction locally at the touch-point, this is referred to as localization. Localization can be done at the graphical component level whereby the graphical component handles its default drawing, layout, and presentation management.","Different developers may localize ODD_Stubs in different ways. In other words, one developer may choose certain presentation management functions to be implemented on the ODD_Stub, while another developer may want those presentation management functions to be performed by the ODD_Object at the server. Two general embodiments for localizing the stub in accordance with the invention, are a subclass embodiment and an aggregation embodiment.","One embodiment of the subclass method of localizing the stub is shown in . As can be seen in , there is an inheritance relationship among several classes. A CustomizedStub class  inherits from a CastStub class , which inherits from a java applet class . In object-oriented terminology, the CustomizedStub class  is a subclass of the CastStub class , which is a subclass of the java applet class . Each class has one or more methods, or functions, which provide an interface to the class. For example, the CustomizedStub class  includes four methods: init, start, stop, and destroy. Likewise, the CastStub class  and the java applet class  each include init, start, stop, and destroy methods. The subclass overrides one or more of the functions of the parent class. For example, the CustomizedStub class  may override the init function of the CastStub class  by adding an additional button to the display. In operation, all the init functions are called. Thus, the developer can layer additional presentation management functionality in functions at each subclass level. The functions at the most basic class level, in the java applet class , manage the lowest level communications to the network. Functions in the java applet , manage the server proxy interface to the touch-point.","Stated differently, developers subclass the Java applet class  and the CastStub class  to derive the CustomizedStub class . CustomizedStub class  class has its own GUI components and its own logic. The ODD_Stub comprises the java applet class , the CastStub class , and the CustomizedStub class . The ODD_Stub has two parts: a client part and a server proxy part. The client part processes local events and manages local presentation. The server proxy part manages input and output of data from and to the network. Both parts works on the same user interface but they do not interfere with each other because presentation logic is split between the ODD_Stub and the ODD_Object.",{"@attributes":{"id":"p-0094","num":"0093"},"figref":["FIG. 9","FIG. 9"],"b":["900","902","902","900","902","902","902","900","902","900","904","906","908","906","906","906"]},"Table 3 illustrates exemplary software in an ODD_Object that can be used to print a simple message to the touch-point display. The message is displayed at a position on the display and has a font size.",{"@attributes":{"id":"p-0096","num":"0095"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 3"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Class HelloWorld extends ODD_Object"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"showText(\u201chello world\u201d, position, fontsize);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Table 4 illustrates exemplary software that could be used to implement a java applet stub module  of .",{"@attributes":{"id":"p-0098","num":"0097"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"TextArea ta = new TextArea(position);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ta.setFont(fontsize);"]},{"entry":[{},"ta.setText(\u201chello world\u201d);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"As another example of a particular implementation, Table 5 illustrates a line of software that could be used to implement an html stub.",{"@attributes":{"id":"p-0100","num":"0099"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 5"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"document.write(\u201c<h1> hello world <h1>\u201d);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"For security purposes, computing entities, such as computers, servers, and web sites, communicating over a network, utilize firewalls. A firewall is a network component including hardware and software, that filters unwanted data to protect the computing entities from harmful or potentially damaging data. Filtering is based on certain criteria and allows only trusted data to enter the computer entity. A common firewall configuration is to block all network data except for the well-known services. As a result, firewalls frequently will filter data that is not in a Hypertext Markup Language (HTML) format. An embodiment of the invention implements HTTP tunneling to avoid filtering of a proprietary protocol. HTTP tunneling refers to a method and system for embedding proprietarily formatted data into an HTML file and communicating the HTML file using the well-known HTTP protocol so that the proprietary data can be communicated through a firewall.",{"@attributes":{"id":"p-0102","num":"0101"},"figref":"FIG. 10","b":["1000","1000","1000","1000","1000","1000"]},"Table 6 contains exemplary C++ software that implements an example of how an HttpSocket class  may be used to communicate to a server.",{"@attributes":{"id":"p-0104","num":"0103"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 6"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"public class client_example"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public static void main(String args[ ])"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/New a httpsocket"]},{"entry":[{},"HttpSocket client = new HttpSocket(\u201cyourhost\u201d, 1900);"]},{"entry":[{},"DataOutputStream dout= new"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"DataOutputStream(client.getOutputStream( ));"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DataInputStream din = new"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"DataInputStream(client.getInputStream( ));"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/Write and read"]},{"entry":[{},"dout.writeUTF(\u201cHello, this is a test of tunneling\u201d);"]},{"entry":[{},"String ret = din.readUTF( );"]},{"entry":[{},"System.err.println(ret);"]},{"entry":[{},"client.close( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/Simple echo server"]},{"entry":[{},"public class server_example"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public static void main(String args[ ])"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ServerSocket server = new ServerSocket(1900);"]},{"entry":[{},"While(true)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Socket ssocket= server.accetp( );"]},{"entry":[{},"DataInputStream din= new"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DataInputStream(ssocket.getInputStream( ));"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DataOutputStream dout=new"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DataOutputStream(ssocket.getOutputStream( ));"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/echo"]},{"entry":[{},"String s = din.readUTF( );"]},{"entry":[{},"sout.writeUTF(s); \/"]},{"entry":[{},"ssocket.close( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Continuing with , an HttpInputStream class , encapsulates data stream input functionality. Using the HttpInputStream , data can be read and\/or manipulated in a variety of ways. Exemplary methods for the HttpInputStream  include a read method, a close method, a skip method, an available method, and a reset method. The read method reads data from an input stream. The read method can be implemented to read a designated number of bytes of data when the method is called. The skip method skips a designated number of bytes of data. The available method determines the number of bytes that can be read without being blocked. The close method closes the input stream. The reset method resets the current read position to a designated position within the stream. The HttpInputStream  inherits from a java InputStream module . The java InputStream module  provides lower level functions for retrieving a stream of input data from a java Socket module .","An HttpOutputStream class , encapsulates data stream output functionality. Using the HttpOutputStream , data can be written to the java Socket . Exemplary methods for the HttpOutputStream  include a write method, a close method, and a flush method. The write method can accept parameters such as an integer indicating how many bytes of data to write. The write method can format data into HTML format for tunneling data in a proprietary format so that the data can be communicated through a firewall. The write method can be viewed as converting data in one format to an HTML format to facilitate tunneling. The flush method removes any buffered bytes from the output stream. The close method closes the output stream. The HttpOutputStream  inherits from a java OutputStream module . The java OutputStream module  provides lower level functions for writing a stream of output data to the java Socket module . The java Socket module  is an abstraction of a socket and facilitates transmitting and receiving java or HTML data through the socket to and from the network. For example, the java Socket module  may handle a communications protocol when communicating data to the network. The java Socket module may also use a CommObject  to interface with the network. The ComObject  may provide lower level functions handling protocol and transmission issues, such as timing of transmissions and packet reception.","It should be apparent to the reader that any methods and variables described in relation to classes described herein are only exemplary for the described embodiments. Alternative embodiments may employ more or fewer methods and variables to carry out the functions described herein. Furthermore, as has been mentioned, the functionality described in the embodiments need not be implemented in any particular software language. The software language may be one of many known object-oriented languages, or procedural languages. One skilled in the art will recognize how to convert the object-oriented abstractions described above into procedural abstractions to carry out the functions described.","The logical operations of the various embodiments of the present invention are implemented (1) as a sequence of computer implemented acts or program modules running on a computing system and\/or (2) as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system implementing the invention. Accordingly, the logical operations making up the embodiments of the present invention described herein are referred to variously as operations, structural devices, acts or modules. It will be recognized by one skilled in the art that these operations, structural devices, acts and modules may be implemented in software, in firmware, in special purpose digital logic, and any combination thereof without deviating from the spirit and scope of the present invention as recited within the claims attached hereto.","In conclusion, the ODD_Service provides a much simpler way than in prior approaches to develop distributed applications for networked systems such as the Internet or the World Wide Web (WWW). Since there is no need to code the low-level communication mechanisms, or worry about issues such as memory management and server side programming, the on-demand distribution (ODD) mechanism allows for highly-distributable objects to be partitioned into clients and servers at run-time and on demand. By using the ODD_Service, client and servers are created on demand, with all of the communication protocols, business logic, and presentation logic managed by the service and intelligently mapped to client\/servers, peer-to-peer, thin clients or other networked architectures and platforms."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
