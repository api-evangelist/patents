---
title: Transporting object packets in a nested system landscape
abstract: Described are methods and systems related to transporting one or more object packets present in a nested hierarchy of one or more system landscapes. The object packets available for transporting from source systems to target systems present in the nested hierarchy of the system landscapes is identified. A transport request is generate for a collection of object packets of each source system in the nested hierarchy of the system landscapes. The transport requests are aggregated to render a nested transport collection. The nested transport collection is transported within the nested hierarchy of the system landscapes. The nested transport collection is deployed to assign the transport requests present in the nested transport collection to the target systems present in the nested hierarchy of the system landscapes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08566814&OS=08566814&RS=08566814
owner: SAP AG
number: 08566814
owner_city: Walldorf
owner_country: DE
publication_date: 20091224
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Embodiments of the invention generally relate to computer systems, and more particularly to methods and systems for transporting object packets.","Software systems are usually not standalone; rather they are a part of a network of systems also called system landscapes. Various factors contribute to the complexity of these system landscapes. For instance, different applications that are running on different systems may be interconnected to each other by business processes, constituting vertical complexity. Applications that are installed more than once in a system, run independent of processes being executed in the system. Any new result of such processes may have to be transported across all applications, constituting horizontal complexity. When the output data is proprietary, coming from various servers, the format may not be uniform, constituting server complexity. To make these complex system landscapes controllable, a hierarchical landscaping of systems is required. However, in an already existing organizational hierarchy, the hierarchical landscaping of systems may incur other complexities including multi-level vertical and horizontal complexities. The hierarchy may also include heterogeneous system landscapes, with heterogeneous systems. The output data of each of the heterogeneous systems are unique in nature. The hierarchy does not support transportation of such unique output data to other system.","Hence, there is a need for a method to transport information in a hierarchical environment, thereby avoiding complexities incurred during transportation.","Embodiments of the invention are generally directed to methods and system for transporting one or more object packets present in a nested hierarchy of one or more system landscapes. The object packets available for transporting from source systems to target systems present in the nested hierarchy of the system landscapes is identified. A transport request is generated for a collection of object packets of each source system in the nested hierarchy. The transport requests are aggregated to render nested transport collections. The nested transport collections are transported within the nested hierarchy. The nested transport collections are further deployed to assign the transport requests present in the nested transport collections to the target systems present in the nested hierarchy of the system landscapes.","In an embodiment, the object packets available for transporting from the source systems to the target systems at a first level of the nested hierarchy are identified. A first level transport request is generated for a collection of object packets of each source system present in the first level of the nested hierarchy. The first level transport requests generated for the source systems at the first level of the nested hierarchy are aggregated to render a second level transport collection at a second level of the nested hierarchy. The second level transport collections rendered at the second level of the nested hierarchy are aggregated to generate a third level transport collection at a third level of the nested hierarchy. Similarly, nlevel transport collections rendered at an nlevel of the nested hierarchy are aggregated to generate an n+1 level transport collection at an n+1 level of the nested hierarchy.","Further, the n+1 level transport collection is transported within the n+1 level of the nested hierarchy. The n+1 transport collection is deployed at the nlevel of the nested hierarchy to assign the nlevel transport collections present in the n+1 transport collection to corresponding hierarchies present at the nlevel of the nested hierarchy. Similarly, the third level transport collection is deployed at the second level of the nested hierarchy, to assign the second level transport collections present in the third level transport collection to the second level of the nested hierarchy. The second level transport collections are deployed at the first level of the nested hierarchy to assign the first level transport requests present in the second level transport collection to the target systems in the first level of the nested hierarchy.","In another embodiment, at the n+1 level of the nested hierarchy, if one or more n+1 level transport collections are already present, the n+2 level transport collection may be aggregated with the n+1 level transport collection to generate an aggregated n+2 level transport collection. Further the n+1 level transport collections aggregated with an n+2 level transport collection are deployed at the n+1 level of the nested hierarchy.","These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings in which like reference numerals are used to identify like elements throughout.","Embodiments of the invention are generally directed to methods and systems related to transporting one or more object packets present in a nested hierarchy of one or more system landscapes. A nested hierarchy of the system landscapes includes one or more of hierarchies of one or more system landscapes. A hierarchy of system landscapes includes a collection or an arrangement of one or more system landscapes. Each system landscape includes one or more source systems and corresponding one or more target systems. The source systems present in the hierarchy may include a collection of homogeneous and\/or heterogeneous data that is required by the target systems present in the same hierarchy or a different hierarchy, to execute necessary processes. The homogeneous or heterogeneous data may be described as object packets. In an embodiment, transporting the object packets present in the nested hierarchy of the system landscapes involves transporting the object packets from the source systems of a hierarchy of system landscape to the target systems of the hierarchy of system landscape. In another embodiment, transporting the object packets present in the hierarchy of system landscapes involves transporting object packets from the source systems of a first hierarchy of system landscapes to the target systems of a second hierarchy of system landscapes. The first and the second hierarchy of system landscapes are included in the nested hierarchy of the system landscapes.","The target systems that receive the object packets are present in the hierarchy of system landscapes whose structure is similar to the hierarchy of system landscapes that include the source systems that transport the object packets. The structure of a hierarchy of system landscapes may be described as an arrangement of the source systems and the target systems of the system landscapes. The object packets available for transporting from the source systems in the hierarchy of system landscapes to the target systems present in a nested hierarchy of the system landscapes are identified. A transport request is generated for a collection of object packets of each source system in the nested hierarchy of the system landscapes. The transport requests are aggregated to render a transport collection. The transport collection is transported to the target systems in the nested hierarchy of the system landscapes. The transport collection is further deployed to assign the transport requests present in the transport collection to one or more corresponding target systems present in the nested hierarchy of the system landscapes.","In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},"In an embodiment, a system landscape may include a development system, a quality assurance system, and a production system. An output of the development system may be transported to the quality assurance system and the production system. The development system may include one or more source systems, and the quality assurance system and production system may each include one or more target systems. Many such system landscapes put together form a hierarchy of system landscapes. A hierarchy of system landscapes may include system landscapes supporting various processes. For instance, a hierarchy of system landscapes may include a business application landscape, a report creation system landscape, a report analyzing system landscape, a resource planning system landscape, and the like. The output data of each such system may be unique, thus making the collection of the output data of all the systems heterogeneous. A plurality of the hierarchy of system landscapes is described as a nested hierarchy of the system of landscapes.","The output data available in the source system is described as object packet. An object packet is a collection of output data of a source system, and output data from various applications that may be associated with a source system. The object packets may also include development results of each source system (e.g., a development system). A development result may be described as a collection of data that is resulting for a development process executed on the source system. The output data of the source system may be in a particular file format depending upon a type of output data. For instance, the output data of report analyzing system may have a particular file format. Files may represent a collection of output data of a same format, for instance, application component files, service component files and the like. Thus the object packet represents a file format of the type of output data included in it. For instance, if the output data is of a document type (e.g., Microsoft\u00ae Word), the file format of the output data may be of the type \u201c.doc\u201d. Thus, the object packet representing such a file format may also be of the type \u201c.doc\u201d.","Transporting object packets from a source system to a target system includes transporting object packets from a source system where the object packets represent the output of a process executed by the source system. For instance, a process integration (PI) system landscape may include a process integration development system, a process integration quality assurance system and a process integration production system. The output data of PI development system is transported to the PI quality assurance system and further to the PI production system. A hierarchical system may include many such homogeneous and\/or heterogeneous system landscapes. Block diagram  illustrates the overall method involved in transporting object packets from the source system (e.g., development system) of each of such system landscapes to the target system (e.g., quality testing system and\/or production system).","The object packets may be transported from one or more source systems present in a hierarchy of system landscapes to one or more corresponding target systems present in the same hierarchy of system landscapes. In an embodiment, transporting object packets present in the hierarchy of system landscapes involves transporting object packets from source systems of a first hierarchy of system landscapes to corresponding target systems of a second hierarchy of system landscapes. The first and the second hierarchy of system landscapes are included in the nested hierarchy of the system landscapes. The target systems that receive the object packets are present in the hierarchy of system landscapes whose structure is similar to the hierarchy of system landscapes that include the source systems that transport the object packets.","Source systems and target systems of the system landscapes may be included in source block  and target block  respectively. A hierarchy of system landscapes includes one or more of such source blocks and target blocks. A nested hierarchy of the system landscapes includes one or more of such hierarchies. Source block  includes a group of one or more source systems, \u201csource system 1\u201d , \u201csource system 2\u201d , \u201csource system n\u201d , and the like. Each of the source systems (e.g., , , and ) is operable to execute a specific process to render an output data for the process. The output data is represented by object packets. Target block  includes a group of one or more target systems corresponding to the source systems in source block , including \u201ctarget system 1\u201d , \u201ctarget system 2\u201d , \u201ctarget system 3\u201d 160 and the like. Each of the target systems (e.g., , , and ) is operable to execute a process subsequent to the process executed at the corresponding source system, and render a subsequent output data for the subsequent process. Transportation controller  is configured to facilitate transporting the object packets from source block  to target block .","To transport the output data from the source systems present in source block  to the target systems present in target block , transportation controller  identifies the object packets that are available for transporting from each source system (e.g., , , and ) to the target system (e.g., , , and ). Transportation controller  identifies a collection of one or more object packets available at each source system. At , transportation controller  generates a transport request for each collection of object packets available at each source system present in source block  of the hierarchy of system landscapes. A transport request represents a collection of object packets available at a source system, for transporting to the target systems. For instance, for the collection of object packets available at source system , a first transport request is generated by transportation controller . Similarly, for the collection of object packets available at source system , a second transport request is generated and for the collection of object packets available at source system , an ntransport request is generated by transportation controller . Each transport request represents a format of a type of output data present in the object packets included in the transport request. For instance, if the object packet represents a file format of a type \u201c.doc\u201d, the transport request including such an object packet also represents a file format of a type \u201c.doc\u201d. In an embodiment, the collection of output data present in the object packet may be grouped to create the transport request. In another embodiment, the transport request is persisted as a file.","At , transportation controller  aggregates the transport requests available at each source system (e.g., ,  and ). Aggregating the transport requests includes collecting the transport requests for each source system. For instance, the first transport request, the second transport request and the ntransport request generated at source systems ,  and  respectively are aggregated by transportation controller , to create a nested transport collection. The nested transport collection represents one or more transport collections rendered at one or more different levels of the nested hierarchy. The nested transport collection is rendered in a hierarchy identical to the nested hierarchy of the system landscapes. In other words, the nesting of the nested transport collection is similar to the nesting of the hierarchies of the system landscape. The transport collection represents a collection of transport requests available at all the source systems present in source block . For instance, transport collection for system block  includes an aggregation of the first transport request generated for source system , the second transport request generated for source system , and the ntransport request generated for source system . The transport collection represents a format of a type of object packets present in the transport requests included in the transport collection.","The nested transport collection is transported within the nested hierarchy. For instance, at , transportation controller  transports the transport collection rendered for the source systems in source block  to the corresponding target systems in target block . In an embodiment, transportation controller  includes an index that stores a transport directory including an identity of the source systems and the corresponding target systems. For instance, for source system , the transport directory includes an identity of source system , with an address \u201cAAAS1\u201d, identity of source system , with an address \u201cAAAS2\u201d, and identity of source system , with an address \u201cAAASn\u201d. Similarly for target system , the transport directory includes an identity of target system , with an address \u201cAAAT1\u201d, identity of source system , with an address \u201cAAAT2\u201d, and identity of target system , with an address \u201cAAATn\u201d. The index recognizes a corresponding target system that is associated with a source system by mapping the addresses of the source system and the target system. The identity facilitates in identifying a corresponding target system for every source system. Based upon the transport directory, transportation controller  transports the transport collection to corresponding target systems. In an embodiment, the transport collection is persisted.","Transportation controller  is operable for deploying the nested transport collection to assign the transport requests present in the nested transport collection to target block . Deploying the nested transport collection may include importing transport collections present in the nested transport collection, extracting the transport requests present in each transport collection, identifying the source systems associated with each transport request, identifying the object packets available in each transport request, and assigning the object packets of each source system to a corresponding target system. Transportation controller  aggregates the transport collections from all the hierarchies of system landscapes present in the nested hierarchy of the system landscapes and transport the aggregated transport collections to one or more corresponding hierarchies of system landscapes.","The transport collection may be transported to multiple hierarchies of system landscapes, having multiple levels of nested hierarchy, by recursively aggregating the transport collections at each level of nested hierarchy. In an embodiment, the object packets available for transporting from the source systems to the target systems at a first level of the nested hierarchy are identified. A first level transport request is generated for a collection of object packets of each source system present in the first level of the nested hierarchy. The first level transport requests generated for the source systems at the first level of the nested hierarchy are aggregated to render a second level transport collection at a second level of the nested hierarchy. The second level transport collections rendered at the second level of the nested hierarchy are aggregated to generate a third level transport collection at a third level of the nested hierarchy. Similarly, nlevel transport collections rendered at an nlevel of the nested hierarchy are aggregated to generate an n+1 level transport collection at an n+1 level of the nested hierarchy.","Further, the n+1 level transport collection is transported within the n+1 level of the nested hierarchy. The n+1 transport collection is deployed at the nlevel of the nested hierarchy to assign the nlevel transport collections present in the n+1 transport collection to corresponding hierarchies present the nlevel of the nested hierarchy. Similarly, the third level transport collection is deployed at the third level of the nested hierarchy, to assign the second level transport collections to the second level of the nested hierarchy. The second level transport collections are deployed at the second level of the nested hierarchy to assign the first level transport requests to the target systems in the first level of the nested hierarchy.","In an embodiment, a transport collection rendered for any source block present in the hierarchy of system landscapes can be transported to one or more corresponding target blocks present in the same hierarchy of system landscapes, or to one or more target blocks present in another hierarchy of system landscape of the nested hierarchy of the system landscapes.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 2A","FIG. 2A"],"b":["227","200","200","201","203","205","201","203","205","204","208","212","222","224","226","202","220","218","202","220","218","204","208","212","222","224","226","218","206","210","214","204","208","212"]},"At second level , transportation controller  aggregates first level transport requests ,  and  to render second level transport collection . Transportation controller  transports second level transport collection  to target block , to deploy second level transport collection  at respective target systems (for e.g. , , and ).",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 2B","FIG. 2B"]},"The third level transport collection is transported to the second level of the nested hierarchy. The third level transport collection is deployed at the second level of the nested hierarchy, to assign the second level transport collections present in the third level transport collection to the corresponding hierarchies present in the nested hierarchy of system landscapes. Further, the second level transport collections are deployed at the first level of the nested hierarchy to assign the first level transport requests present in each second level transport collection to the target systems present in the first level of the hierarchy.","First level  includes three hierarchies of system landscapes, for e.g. hierarchy of system landscapes A, hierarchy of system landscapes B and hierarchy of system landscapes C. Nested hierarchy of the system landscapes  includes hierarchies of system landscapes A, B and C.","Hierarchy of system landscapes A includes system landscapes A, A and A. Each of the system landscapes include source systems and target systems. For instance, system landscapes A, A and A include \u201csource system 1\u201d A, \u201csource system 2\u201d A, and \u201csource system 3\u201d A as source systems and \u201ctarget system 1\u201d A, \u201ctarget system 2\u201d A, and \u201ctarget system 3\u201d A as target systems. The source systems may be contained in source block A and the target systems may be contained in target block A. Similarly hierarchy of system landscapes B includes system landscapes B, B and B. Each of the system landscapes include source systems and target systems. For instance, system landscapes B, B and B include \u201csource system 1\u201d B, \u201csource system 2\u201d B, and \u201csource system 3\u201d B as source systems and \u201ctarget system 1\u201d B, \u201ctarget system 2\u201d B, and \u201ctarget system 3\u201d B as target systems. The source systems may be contained in source block B and the target systems may be contained in target block B. Hierarchy of system landscapes C includes system landscapes C, C and C. Each of the system landscapes include source systems and target systems. For instance, system landscapes C, C and C include \u201csource system 1\u201d C, \u201csource system 2\u201d C, and \u201csource system 3\u201d C as source systems and \u201ctarget system 1\u201d C, \u201ctarget system 2\u201d C, and \u201ctarget system 3\u201d C as target systems. The source systems may be contained in source block C and the target systems may be contained in target block C.","A transportation controller is operable for transporting object packets from the source blocks to the target blocks. These target blocks may be target blocks of the same hierarchy, target blocks of a different hierarchy or even source blocks of a different hierarchy that are operable to accept object packets from other source blocks. In an embodiment, the source blocks of a hierarchy that are operable to accept the object packets may utilize the object packets that are transported from the source blocks of another hierarchy to output object packets that is be further transported to target blocks in the nested hierarchy.","At second level , second level transportation controller A is operable for transporting object packets from source block A to the target systems present in nested hierarchy of the system landscapes . For instance, second level transportation controller A transports the object packets from source block A to target block A present in hierarchy of landscapes A. Second level transportation controller A may also be operable for transporting object packets from source block A to third level transport controller . Similarly, second level transportation controller B is operable for transporting object packets from source block B to the target systems present in nested hierarchy of the system landscapes . Second level transportation controller C is operable for transporting object packets from source block C to the target systems present in nested hierarchy of the system landscapes .","At first level , second level transportation controller A identifies the object packets available for transporting from each of the source systems A, A and A, to the target systems present in nested hierarchy of the system landscapes . Second level transportation controller A generates first level transport requests A, A and A respectively for each of the source systems A, A and A. Second level transportation controllers B and C perform the same steps for the respective source systems.","At second level , second level transportation controller A aggregates first level transport requests A, A and A to render second level transport collection A. Similarly, second level transportation controller B aggregates transport requests B, B and B to render second level transport collection B and second level transportation controller C aggregates first level transport requests C, C and C to render second level transport collection C. In an embodiment, second level transport controller A, B and C transport second level transport collections A, B and C to target block A, B and C respectively present in hierarchies A, B and C.","At third level , one or more second level transportation collections rendered at second level  are aggregated by third level transportation controller , to create third level transport collection . For instance, third level transport collection  includes second level transport collection A from second level transportation controller A, and similar second level transport collections B, C, D from their respective second level transportation controllers. Third level transportation controller  transports third level transport collection  to second level transportation controller B and C at  and  respectively.","Further, at second level , second level transportation controller B and C transports third level transport collection  to hierarchies B and C at  and  respectively. Second level transportation controller B and C may also deploy third level transport collection  at  and  and transport third level transport collection  to the corresponding target systems present in target block B and C respectively. In an embodiment, third level transport collection  in association with the second level transport collection rendered at second level  (e.g., B and C) may be transported to target blocks B and C. Second level transportation controller B and C may deploy the respective second level transport collections to assign the first level transport requests included in them to the respective target systems. At first level , the object packets included in the first level transport requests A, A and A are assigned to the respective target systems present in nested hierarchy of the system landscapes . The object packets transferred to the target block (e.g., B and C) of hierarchies B and C may have been transported from the source blocks of the respective hierarchies (e.g., B and C), or from the source systems of other hierarchies (e.g., A).","At first level , for hierarchy A, the source systems (e.g., A, A, A), may be development systems, and the target systems (e.g., A, A and A) may be quality assurance systems and\/or production systems. The object packets that have to be transferred from the development systems are identified. The first level transport requests are generated for a collection of object packets for each development system. The first level transport requests are aggregated to render a second level transport collection. The second level transport collection is transported to the quality assurance systems and\/or production systems.","However, from a higher level, for instance from second level , hierarchy A may be a source system or a development system, and hierarchies B and C may be the target systems or a quality assurance system and a production system respectively. To transport development data from development system A to quality assurance system B and production system C, transportation controller A of A generates transport collection A. The transport collection A is aggregated with one or more of other transport collections rendered at one or more hierarchies, to create principle transport collection , at third level . Principle transportation controller  transports principle transport collection  to transportation controllers B and C of quality assurance system B and production system C respectively. Transportation controllers B and C transport principle transport collection  to quality assurance system B and production system C respectively. Thus the target blocks of quality assurance system B and production system C may have object packets coming from development system A, apart from their own source blocks B and C respectively.","Thus, in nested hierarchy , including three hierarchies of system landscapes A, B and C, the transport collection is rendered recursively to transport object packets from source systems in hierarchy of system landscapes A to hierarchy of system landscapes B and hierarchy of system landscapes C. This method may be applicable to nested system landscapes including multiple hierarchies of system landscapes. For instance, the object packets available for transporting from the source systems to the target systems at an nlevel of the nested hierarchy are identified. An nlevel transport request is generated for a collection of object packets of each source system present in the nlevel of the nested hierarchy. The nlevel transport request is generated in a hierarchy that is identical to the nested hierarchy of the system landscapes. The nlevel transport requests generated for all the source systems at the nlevel of the nested hierarchy are aggregated to render an n+1 level transport collection at an n+1 level of the nested hierarchy. One or more such n+1 level transport collections that are rendered at n+1 level of the nested hierarchy are aggregated to generate an n+2 level transport collection at an n+2 level of the nested hierarchy. Thus a nested transport collection is created, including one or more transport collections rendered for a nested hierarchy of the system landscapes.","The n+2 level transport collection is transported to within the n+2 level of the nested hierarchy. The n+2 level transport collection is deployed at the n+1 level of the nested hierarchy, to assign the n+1 level transport collections present in the n+2 level transport collection to the corresponding hierarchies present in the nested hierarchy of system landscapes. Further, the n+1 level transport collections are deployed at the nlevel of the nested hierarchy to assign the nlevel transport requests present in each n+1 level transport collection to the target systems present in the nlevel of the hierarchy.","By recursively rendering the transport collection, the object packets from source systems are transported to corresponding target systems that are present in any hierarchy of system landscapes in the nested hierarchy of the system landscapes. The above method of transporting object packets may be utilized across multiple levels in the nested hierarchical arrangement of source and target system.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 3","b":["305","310","315","320","325"]},"In an embodiment, the object packets available at the source systems of a primary level of a hierarchy of system landscapes are identified. The primary level of the hierarchy may include a group of source systems and a group of target systems. Primary level transport requests are generated for a collection of object packets for each of the source systems. The primary level transport requests are aggregated to render a secondary level transport collection at a secondary level of the hierarchy. The secondary level of the hierarchy may include one or more transport collections rendered for corresponding hierarchies of the system landscapes. All the secondary level transport collections are aggregated at a tertiary level of the hierarchy, to generate a tertiary level transport collection. The tertiary level transport collection is transported back to the secondary level. At the tertiary level, the tertiary level transport collection is transported within the nested hierarchy. At the secondary level, the tertiary level transport collection is deployed to assign the secondary level transport collections included in the tertiary level transport collection to the respective hierarchies. The secondary level transport collections are further transported to the respective target blocks and deployed at the primary level, to assign the target requests to the respective target systems. The object packets present in the transport requests are extracted by the target systems at the primary level of the nested hierarchy.","In an embodiment, the system landscape includes a development system, a quality assurance system and a production system. An output of the development system is transported to the quality assurance system and the production system. The development system may include a source system, and the quality assurance system and the production system may include a target system each. The output of the development system includes one or more object packets that have to be transported to the quality assurance system and the production system. The object packets available for transporting from one or more such development systems to one or more quality assurance systems and one or more production systems are identified. The development systems, the quality assurance systems and the production systems are present in a first hierarchy of the system landscapes. A transport request is generated for each collection of object packets from each development system. The transport requests are aggregated to render a transport collection. The transport collection is transported to the quality assurance system and production system, and deployed to assign the transport requests present in the transport collection to the respective quality assurance systems and the production systems.","In an embodiment, the transport request represents a request format that is identical to an object format of the object packets included in the transport requests. The transport collection represents a collection format that is identical to the request format of the aggregated transport requests.","In an embodiment, deploying the transport collection includes importing the transport collection at the target system (for e.g. quality assurance system or production system) and extracting the transport requests present in the transport collection for each target system. Further, the source systems associated with the transport requests are identified to determine the corresponding target systems. The object packets included in the transport requests are identified and assigned to the corresponding target systems.","In an embodiment, an index may be created for generating an identity for each source system and each target system. The identity may be described as an address of the system that shows an association it shares with other systems. For instance, the identity may provide an association between a source system and one or more target systems. This identity may be used to determine the target systems that correspond to the source systems. The index may create a mapping between the source systems and the corresponding target systems, to facilitate the determination of target systems that correspond to the source systems.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 4","b":["400","400","405","410","415","420","425","430","435","440","415","420","420","425","435","425","430","415","420","425","430","435","410","410","405","440","400"]},"The source systems and the target systems of a hierarchy of system landscapes may be collectively termed as source block  and target block  respectively. The source systems may be responsible for executing one or more processes to render a collection of output data. The output data may be required for further processing at target block . Transportation controller  transports the output data from source block  to target block .","For transporting the output data, transportation controller  employs development controller , request generator , request accumulator  and transport controller . Development controller  is operable for identifying object packets of each source system present in system block  of each hierarchy of system landscapes that is available for transporting to target systems present in target block  of the nested hierarchy of the system landscapes. An object packet is a collection of the output data that may result from one or more processes executed at a corresponding source system. The object packets may include output data of various applications that are associated with a corresponding source system. Request generator  is operable for generating a transport request for a collection of object packets at each source system in system block  present in the hierarchy of system landscapes. A transport request represents a collection of object packets that are available in a source system for transporting to one or more target system. Request generator  generates a transport request for each such collection of object packets in each source system present in source block  of the nested hierarchy of the system landscapes. Thus, an output of request generator  may include many transport requests, each representing a collection of object packets of one source system present in source block  of the hierarchy of system landscapes.","Request accumulator  is operable for aggregating the transport requests generated for the source systems, to render a transport collection. A transport collection represents a collection of transport requests that are generated for each collection of object packets available in each source system. Transport controller  is operable for transporting the transport collection to corresponding target systems present in the nested hierarchy of the system landscapes. In an embodiment, transport controller  is operable for transporting the transport collection to corresponding target systems present in a hierarchy of system landscapes same as the hierarchy of system landscapes in which the source systems are present. In another embodiment, transport controller  is operable for transporting the transport collection to corresponding target systems present in a hierarchy of system landscapes that is different from the hierarchy of system landscapes in which the source systems are present. In an embodiment, transport controller  is responsible for exporting the transport collection and deploying the transport collection at corresponding target systems.","Transport controller  is operable for deploying the transport collection at corresponding target systems present in the nested hierarchy of the system landscapes. Deploying the transport collection may include importing the transport collection rendered for the source systems, extracting the transport request present in the transport collection, identifying the source systems associated with each transport request, identifying the object packets available in each transport request, and assigning the object packets of each source system to a corresponding target system.","Index  in communication with transport controller  may store a transport directory that contains an identity of the source systems and the corresponding target systems. For instance, the transport directory includes an address AAAS of a source system and a corresponding address AAAT of a corresponding target system. The identity facilitates identification of a corresponding target system for every source system. Based upon the transport directory, transport controller  transports the transport collection to corresponding target systems.","In an embodiment, index  is operable to map the source systems and the corresponding target systems based upon the identity that exists in the transport directory. Mapping the source systems and the corresponding target systems includes identifying a corresponding target system for every source system, based upon an identity of the source system and the target system, and associating the corresponding target system with the source system. In an embodiment, index  generates an identity for each source system based upon the output data included in the transport requests of the transport collection rendered by request accumulator . Based upon the generated identity, a corresponding target system is identified. Based upon the identified target systems, transport controller  transports the transport collection and deploys the transport collections at the respective target systems.","Some embodiments of the invention may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components maybe implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable medium as instructions. The term\u201ccomputer readable medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer-readable media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include computer code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment of the invention may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment of the invention may be implemented in hard-wired circuitry in place of, or in combination with computer readable software instructions.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 5","b":["500","510","550","500","545","550","520","515","520","515","510","515"]},"According to one embodiment of the invention, computing device  further includes output device  (e.g., a display) to provide at least some of the results of the execution as output including, but not limited to, visual information to users and input device  to provide a user or another device with means for entering data and\/or otherwise interact with computing device . Each of these output and input devices could be joined by one or more additional peripherals to further expand the capabilities of computing device . Network communicator  may be provided to connect computing device  to network  and in turn to other devices connected to network  including other clients, servers, data stores, and interfaces, for instance. The modules of computing device  are interconnected via system bus . Computing device  includes data source interface  to access data source . Data source  can be accessed via one or more abstraction layers implemented in hardware or software. For example, data source  may be accessed by network . In some embodiments, data source  may be accessed via an abstraction layer, such as, a semantic layer.","A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transactional, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transactional data, unstructured data (e.g. text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system (e.g. ERP system), and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","In an embodiment, transporting object packets present in the hierarchy of system landscapes involves transporting object packets from the source systems of a hierarchy of system landscape to the corresponding target systems of the hierarchy of system landscape. In another embodiment, transporting object packets present in the hierarchy of system landscapes involves transporting object packets from source systems of a first hierarchy of system landscapes to corresponding target systems of a second hierarchy of system landscapes. The first and the second hierarchy of system landscapes are included in the nested hierarchy of the system landscapes.","The target systems that receive the object packets are present in the hierarchy of system landscapes whose structure is similar to the hierarchy of system landscapes that include the source systems that transport the object packets. Storage  may store metadata of the source systems and the corresponding target systems. The metadata stored in storage  may includes details about each source system and corresponding target system, like a type of data that each source system outputs, a type of development activity performed for each source system, identity of a corresponding target system for each source system, etc. In an embodiment, a group of source systems whose object packets are being transported may be selected from input device .","To transport the object packets from source systems to corresponding target systems, the object packets of each source system present in the nested hierarchy of the system landscapes are identified. For a collection of object packets of each source system present in the hierarchy of system landscapes that has to be transported to one or more corresponding target system present in the nested hierarchy of the system landscapes, a transport request is generated for each source system. The transport requests of all the source systems present in the hierarchy of system landscapes are aggregated to render a transport collection. In an embodiment, the transport collection may be rendered on output device . The transport collection rendered for the transport requests of the source systems present in the hierarchy of system landscapes is transported to the target systems present in the nested hierarchy of the system landscapes. In an embodiment, network communicator  may be utilized to transport the transport collection from the source systems to the corresponding target systems. The transport collections are deployed at the target systems present in the nested system landscapes, to assign the object packets contained in the transport requests at the respective target systems.","The above descriptions and illustrations of embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather, the scope of the invention is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The claims set forth the embodiments of the invention with particularity. The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments of the invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
