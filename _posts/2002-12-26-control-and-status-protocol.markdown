---
title: Control and status protocol
abstract: A host interface protocol and a control and status protocol for use with host unit and a wireless communication unit are described. The host interface protocol allows for multiplexing between data transfer messages and control and status messages. In a preferred embodiment, the control and status message protocol supports messages that can be a message payload of a host interface protocol payload.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07924767&OS=07924767&RS=07924767
owner: Sierra Wireless, Inc.
number: 07924767
owner_city: Richmond, BC
owner_country: CA
publication_date: 20021226
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention relates to wireless communication units, such as modems, for data devices. In particular, the present invention relates to communication protocols between a data device and a wireless communication unit.","Typically, a host unit controls the operation of a modem unit. The host unit will obtain status information from the modem unit and use this status information to determine the best way to control the modem unit. Received signal strength and similar information is provided by the modem unit to the host unit. Additionally, data to transmit is sent from the host unit to the modem unit and data received by the modem unit needs to be sent from the modem unit to the host unit.","The data sent between the modem unit and the host unit can be relatively large. In some circumstances, this blocks the ability of control and status information to be transferred between the host unit and the modem unit.","It is desired to have an improved protocol system for sending messages between a host unit and a modem unit.","The present invention uses a host interface protocol which allows for the multiplexing of data signals with control and status signals, debugging information and other commands. The host interface protocol preferably includes a length field, a message ID field indicating what type of message is enclosed, and an optional payload field.","Control and status protocols can be transferred within the optional payload field. A separate control and status protocol is used to transfer the control and status messages.","One embodiment of the present invention is a system including a host unit with a processor and wireless communication unit, such as a modem unit, including a transceiver and first-in-first-out-buffers (FIFO). Communication between the host unit and the wireless communication unit uses a host interface protocol. The host interface protocol defines a message header with a length field and a message ID field. The message D field allows multiplexing between data stream transfers and status transfers for information sent to the host and wireless communication units. A control and status protocol is used for control and status message transfers between the host and the wireless communication unit, control and status messages being wrapped within the host interface protocol messages.","Another embodiment of the present invention comprises a protocol system for transfers between a host unit and a wireless communication unit. A host interface protocol defines a message header with a length field and a message ID field. The message ID field allowing multiplexing between data stream transfers and status transfers for information sent to buffers of the host and wireless communication unit. A control and status protocol is used for control and status message transfers between the host and wireless communication unit. Control and status messages are wrapped within a host interface protocol message.","Another embodiment of the present invention is a method for operating a wireless communication unit. The method includes buffering messages from a host unit in a buffer, and examining messages from the buffer according to the host interface protocol. The host interface protocol defines a message header with a length field and message ID field. If the message ID field indicates data to be transmitted, transmitting data, wherein a control message with a corresponding host interface protocol message ID, can be received within the buffer interspersed with messages for the data transmission to allow for multiplexing.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1","b":["22","24","22","24"]},"The host unit  preferably includes a processor , and a protocol stack software  which allows the processor  to implement the protocol stack of the system of the present invention. The wireless communication unit  includes a transmitter (TX) FIFO buffer  for storing data from the host unit , a receiver (RX) FIFO buffer  for storing data to send to the host unit , a processor , a transceiver  and protocol stack software  that allows it to implement the protocol stack of the system of the present invention. The system  including the host unit  and the wireless communication unit  can be used for transmitting data over a wireless network, and thus can allow the host unit  to send E-mail messages or connect to the Internet.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 2","FIG. 1"],"b":["22","24","40","42","44","45","46","42"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3"},"FIGS.  and A-B illustrate the advantage of having a host interface protocol to multiplex between data transfers and control and status transfers.  shows data  for transmission. Such data can be relatively long and prevent any control and status signals to be sent while the data is being transferred.  shows the use of the host interface protocol such that the data for transmission is broken up. Some of the host interface protocol messages include the data for transmission but others can include the control and status information in a control and status protocol message. This allows for control and status information to be multiplexed within larger data transmissions between the host unit and the wireless communication unit. The example shown in  illustrates a host interface protocol message  including the control and status protocol message interspersed between host interface protocol messages  and  which contain data for transmission.","The host interface protocol does not need to have a payload but can contain some signaling information within the header itself. This is shown in , in which the payloadless header  is positioned between the host interface protocol message  and host interface protocol message  which contain data for transmission.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 6A","FIG. 6B"],"b":["64","66","64","64","64","64","64","64"],"i":["a","b ","c","d ","c","c "]},"A variety of different messages can be exchanged between the host unit and the wireless communication unit. As will be described, the host interface protocol allows for the multiplexing between over-the-air data, wireless communication debugging and flash software downloads, and other types of messages. The message payload length field helps identify the memory block buffer requirements to store the message. This length field is also useful to support alternative data length message transfer systems such as direct memory access. The length also helps indicate whether there is an odd or even number of bytes communicated in the message payload. In one embodiment, the maximum payload length for the host interface protocol is 2000 bytes. The pad-byte flag indicates whether any padding bytes are put in front of the message payload. If the pad-byte flag is set, then the message has padding bytes and the message payload length includes the length of the padding bytes and the message payload. The message identifier field indicates the message type.","The message specific parameter field indicates a word or line message header. The message type defines the use of this field.","In a preferred embodiment, different message IDs are used in different directions to prevent the echoing of messages across the interface and to aid in software debugging. The message ID header is preferably kept as simple as possible to reduce the complexity of the system. Additionally, the host interface protocol preferably implements a grant request\/response mechanism to seek permission prior to sending data, such that flow control can be accommodated over the interface. The host interface protocol also allows for the production of a signal to the host to indicate when the wireless communication unit resets. This simplifies the start-up procedures on both sides of the interface. Additionally, the host interface protocol preferably implements a method of discarding stale messages that might be present in the FIFO buffers after a reset or a crash. The system also provides a mechanism to report error messages from the wireless communication device to the host. The host interface protocol also allows for interactive communication between the wireless communication unit and the host unit. Additionally, when the data-link layer uses an interface of high reliability (such as a PCMCIA interface), the host interface protocol can be simplified such that it reduces the processing burden on the microprocessor. The host interface protocol also preferably allows for feedback during the flash software upgrade.","In one embodiment there are three fundamental types of messages transferred between the host unit and the wireless communication unit indicated by the message ID field. These three fundamental types of messages are requests, responses, and indications.","A request message provides a means for the host to ask the wireless communication unit either to perform an operation or return a value. The wireless communication unit always responds to a request message with a response message. Because of the master\/slave relationship between the host unit and the wireless communication unit, the wireless communication unit is not allowed to make requests of the host unit in a preferred embodiment. One and only one response message is sent in answer to each request message. Note that in order to provide full control to the wireless communication unit, a response to a specific request must be provided before a second request of the same type is issued. This effectively provides a stop-and-wait flow control on a per-request basis. If the host never receives a response within a time-out period, this is a failure case and thus the host unit can assume that the wireless communication unit has failed and should be recovered from a restart state.","Response messages are always sent from the wireless communication unit as a reply to the request from the host unit. The format and type of data of the response varies according to the type of response. Responses are not sent unsolicited. Thus, each response is paired with a specific request. In one embodiment, the request message IDs are in the range 00 to 31, and the response message IDs are in the range 64 to 95.","Indication messages provide a means to send unsolicited data from either side of the interface. Indications are used when no reply or return data is required from the receiver. No acknowledgment or reply is sent by the receiver of an indication in a preferred embodiment. The indications can include the over-the-air messages received from the wireless communication unit and sent to the host unit, as well as messages to be sent over the air from the host unit to the wireless communication unit and data passing back and forth between the flash memory. In one embodiment the indication messages ID from the host are in the range 32 to 63; indication message ID sent from the card are in the range 96 to 127.","In one embodiment, the host interface protocol rules are such that if a message is received from either side of the interface containing undefined message ID, it will be discarded. If the maximum size of the message is exceeded, the receiver will discard the entire packet and ignore the message. In a preferred embodiment, the pad-byte flag set will only be used for messages sent from the wireless communication unit to the host unit. The card will discard received reverse-channel data indication messages containing unexpected message sequencing numbers. The card application will ignore all boot loader specific messages. The boot loader will only receive the packets and the protocol if the host has placed the wireless communication unit into a firmware download mode. The boot indication packet can be sent from the host device during startup to provide the host driver with startup information, but it will not wait for or process host messages.","Appendix I included with this specification includes a list of message identifiers of one embodiment of the present invention. Appendix I is hereby incorporated by reference in full.","One embodiment of the messaging supported by the host interface protocol is given below. The boot loader messages allow the loading of firmware onto a flash memory card in the wireless communication unit. The boot loader messages include download start requests, download response, download continuation requests, download continuation responses, download end requests, download end responses, flash program requests, flash program responses, launch fragment indication, and start application indication.","The wireless communication device startup messages include host data-link synchronization indication, data-link synchronization indication, boot information indication, restart indication.","The over-the-air messages include reverse channel grant messages, reverse channel data indications, forward channel data indications.","The control and status messages which can be indicated by a header without payload include system shutdown indications, configuration information requests, configuration information responses, packet session activation requests, packet session activation responses, link status indications, abort indications, wireless communication device control and status indications, host control and status indications, loopback requests, loopback responses, packet data protocol (PDP) context summary requests, PDP context summary responses, host environment indications.","Debugging messages which can be sent include wireless communication device command indications, host command indications, wireless communication device protocol stack indications, host protocol stack indications, wireless communication device AT command indications, host AT command indications, wireless communication device debug log indications, host debug log indications.","Details of the host interface protocol of one embodiment are described within Appendix I.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 8A"},"The control and status packet is preferably encapsulated within the host interface protocol. Starting with a control and status message, both the wireless communication unit and the host unit must encapsulate and de-encapsulate the control and status message and then perform any data-link layer framing that is necessary. Two types of data-link layer framing are anticipated, one for Universal Asynchronous Receive-Transmit (UART) communications and another for Network Drive Interface Specification (NDIS) communications. The control and status data communicated in the variable length binary packets all multibyte fields preferably use a network byte order. The control and status packets go into the payload section of the host interface protocol packets, and such are a subtype of the information available on that interface.","The fields of the control and status packet available are shown in  for one embodiment of the present invention. The control and status packet  includes an object ID field , an error flag field , an operation type field , a reserved byte A field , an application parameter field , a reserved byte B field , a length field and a parameter field . The object ID indicates the type of the control and status message. The operation type field indicates the type of operation, request, response notification, and so on. The reserved fields and are reserved for a specific type of use and are set to zero if not used. The application parameter field indicates the ID of the sender task and is set to 0 if not used. The length field preferably indicates the length of the parameter field . In one embodiment, the maximum size of the control and status packet is fixed to 256 bytes including the header, so that the maximum parameter length is 246 bytes.","The types of control and status transactions available include polled command and response to allow the application to poll a wireless communication unit. The command sent to the wireless communication unit and the response returned to acknowledge the command. Depending upon the context of the command, the response may contain data such as status information or may simply be an acknowledgment. There are two types of operation for the poll commands; get requests, and response to get requests. Other types of transactions is write\/action command and response. This type of transaction allows the application to write certain parameters or trigger an action within the wireless communication unit. If the transaction is used as a write command, the response will contain the newly-changed data. No parameters are included when the transaction is used in an action trigger. There are two types of operation types for this transaction. Set request, and response to set request.","Another type of control and status transactions are notifications. Notification information is unsolicited asynchronous status updates sent by the wireless communication unit. Upon power-up, notifications are always disabled. Notifications must be explicitly enabled the control and status mechanism. Different types of information can be sent. The criteria for unsolicited update depend upon the actual information being forwarded. Notifications include notification requests, response to notification requests, notification packets, notification stop requests and response to notification stop requests.","The host interface protocol and control and status frames can be sent over any link layer protocol. Examples of link layers include NDIS protocol framing and UART link layer protocol. Th e link layer over the FIFO considers the host interface protocol packet structure plus an optional payload at the end. This optional payload consists of either a point to point protocol (PPP) packet, and control and status packet, an AT command packet, a protocol stack message or debug message. Each of these packet types is identified by its unique message D. The UART link layer protocol is a link layer over the UART consisting of marking the host interface protocol package with start and end flags and escaping the data within.","Appendix I illustrates the different control and status messages of one embodiment of the present invention in detail.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 10"},"It will be appreciated by those of ordinary skill in the art that the invention can be implemented in other specific forms without departing from the spirit or character thereof. The presently disclosed embodiments are therefore considered in all respects to be illustrative and not restrictive. The scope of the invention is illustrated by the appended claims rather than the foregoing description, and all changes that come within the meaning and range of equivalents thereof are intended to be embraced herein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWING FIGURES","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIGS. 5A and 5B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
