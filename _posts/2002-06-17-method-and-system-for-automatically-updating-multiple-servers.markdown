---
title: Method and system for automatically updating multiple servers
abstract: A system and method updates multiple servers automatically without taking all of the multiple servers off-line at the same time. The system and method selects a group of servers, takes the group off-line, updates the group taken off-line, and then brings on-line those members of the group that were on-line prior to the update and for which the update was installed successfully.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07020706&OS=07020706&RS=07020706
owner: BMC Software, Inc.
number: 07020706
owner_city: Houston
owner_country: US
publication_date: 20020617
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED PATENTS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF INVENTION","DETAILED DESCRIPTION OF A PREFERRED EMBODIMENT"],"p":["This application is related to U.S. Pat. No. 5,919,247 entitled \u201cMethod for the Distribution of Code and Data Updates\u201d issued Jul. 6, 1999 which is hereby incorporated by reference in its entirety.","The present invention is related to computer software and more specifically to computer software for updating computer systems.","Many web sites and other applications employ a set of servers to serve web pages, files and perform other applications. Some of the servers may duplicate information or functions of other servers to allow more users to simultaneously access the server farm than could be supported by one server alone. A load balancer may be coupled between the servers in the set of servers and the clients that request service from it to allow the load balancer to spread requests for service that may be made to a single address across the multiple servers in the server farm.","As the files and applications on the file servers become out of date, they may be updated. Automated update facilities may be used to update the set of servers. One way to update the servers is to first instruct the load balancer to stop accepting new connections and after a period of time, instruct the load balancer to additionally stop serving existing connections, which brings the servers \u201coff-line\u201d. The servers may then be updated using an automated facility, and once updated, the servers are brought back on-line by instructing the load balancer to resume directing connections to the servers.","If all the servers are updated at the same time, automated updating facilities may be used. However, if the servers are all updated at the same time, they are unavailable to perform any work during the update process, and such updates can be the cause of regularly scheduled \u201coutages\u201d of web sites, inconveniencing users. Although it is theoretically possible to manually update servers a portion at a time, doing so would require a human operator to step the automated updating facilities through each of the servers one at a time, which for a large set of servers, could require hours of costly operator time and be prone to error. Other arrangements could be used to speed the process, such as by manually bringing the servers off-line in groups, updating the group and then bringing them back on-line, but such other arrangements are more complex and prone to error and may not avoid the problem of having the entire site brought down if the servers are assigned to specialized functions and the group the operator brings off-line for updating contain all the servers that perform a certain function.","There is another problem with any of these approaches. It is desirable to avoid bringing servers on-line after an update that won't operate properly. For example, servers that were off-line before the update due to malfunctions, or servers for which the update could not be installed properly should not be brought on-line after an update because they may not operate properly. If left off-line after the update, other servers that perform their functions will be used instead.","What is needed is a system and method that can update a set of servers in an automated fashion, without bringing down the entire set of servers and without restoring to service servers that may not operate properly.","A system and method segregates the servers in a set into multiple groups. The groups are defined in such a manner that the loss of one group, though reducing the capacity of the set of servers, will not prevent the set of servers from satisfying a request for service. The automated update facility selects one such group at a time, instructs the load balancer to bring the selected group off-line, updates it, and directs the load balancer to bring the group back on-line before moving to the next group. Prior to bringing the servers in a group out of service, the system and method ascertains the status of the servers. The status of the installation of the update is also monitored. When the update is complete, the load balancer is directed to bring back on-line only the servers that were in service prior to the update and for which the installation completed properly.","The present invention may be implemented as computer software on a conventional computer system. Referring now to , a conventional computer system  for practicing the present invention is shown. Processor  retrieves and executes software instructions stored in storage  such as memory, which may be Random Access Memory (RAM) and may control other components to perform the present invention. Storage  may be used to store program instructions or data or both. Storage , such as a computer disk drive or other nonvolatile storage, may provide storage of data or program instructions. In one embodiment, storage  provides longer term storage of instructions and data, with storage  providing storage for data or instructions that may only be required for a shorter time than that of storage . Input device  such as a computer keyboard or mouse or both allows user input to the system . Output , such as a display or printer, allows the system to provide information such as instructions, data or other information to the user of the system . Storage input device  such as a conventional floppy disk drive or CD-ROM drive accepts via input  computer program products  such as a conventional floppy disk or CD-ROM or other nonvolatile storage media that may be used to transport computer instructions or data to the system . Computer program product  has encoded thereon computer readable program code devices , such as magnetic charges in the case of a floppy disk or optical encodings in the case of a CD-ROM which are encoded as program instructions, data or both to configure the computer system  to operate as described below.","In one embodiment, each computer system  is a conventional Sun Microsystems Ultra  workstation running the Solaris operating system commercially available from Sun Microsystems of Mountain View, Calif., a Pentium-compatible personal computer system such as are available from Dell Computer Corporation of Round Rock, Tex. running a version of the Windows operating system (such as 95, 98, Me, XP, NT or 2000) commercially available from Microsoft Corporation of Redmond Washington or running the FreeBSD operating system commercially available from the website freebsd.org, or a Macintosh computer system running the MacOS or OpenStep operating system commercially available from Apple Computer Corporation of Cupertino, Calif. and the Netscape browser commercially available from Netscape Computer Corporation of Mountain View, Calif. although other systems may be used.","Referring now to , a system  for automatically updating multiple servers is shown according to one embodiment of the present invention. System  consists of load balancer , which distributes network connections received at input\/output  among servers .","For purposes of example, four application servers A\u2013D and two static object servers A\u2013B are shown in the Figure. An application server A\u2013D builds web pages before transmitting them, for example by retrieving information from a database, and a static object server A\u2013B provides files exactly as stored, each in response to one or more requests. The present invention works with any type of server, not just these types, and any number of types of servers, not just two types, as is used herein for purposes of example. Furthermore, any number of servers of each type may be used.","Load balancer  receives requests at input , and distributes such requests across multiple servers  according to a configuration supplied by a system administrator. When the request corresponds to a source, destination and protocol that is similar or identical to one received recently, the request is said to correspond to an \u201cexisting connection\u201d and otherwise, the request corresponds to a \u201cnew connection\u201d, even if a \u201cconnectionless protocol\u201d, such as HTTP is used.","The system administrator configures load balancer  by providing the address or addresses on which load balancer  will receive requests, by providing the addresses of each of servers , and by providing the criteria that load balancer  uses to determine to which of servers  load balancer  should forward a particular request. In one embodiment, load balancer  accepts requests, examines the request, selects a server  to process the request, forwards the request to the selected server  (each of which have their own address), and optionally relays any response from the server  back to the originator of the request.","Load balancer  may forward requests and receive responses via network , which is a local area network in one embodiment. There are other types of load balancing devices and the system and method of the present invention may work with any type of load balancer, including those that intercept DNS requests and supply the address of the selected server or redirect requests for service to the selected server.","In one embodiment, responses to the requests are provided from the one of the severs  that received the request, and such responses may be returned to the originating client that supplied the request to load balancer  by returning the response to the request via network  and load balancer , although in other embodiments, responses may be returned to the client without passing through load balancer , network  or either of these.","In one embodiment, load balancer  may accept communications intended for a specific one of servers  in addition to communications addressed the primary address. In such embodiment, when a request arrives containing a destination address that corresponds to one of the servers , load balancer  receives and forwards the request to the indicated server , and optionally relays any response back to the originator of the request as described above.","In one embodiment, to control operation of system , the operator of system , referred to herein as the \u201csystem administrator\u201d, provides configuration information to updater .  is a block schematic diagram showing updater  of  in more detail according to one embodiment of the present invention.","The system administrator uses user interface manager  to supply information via communication interface  and input\/output , which is coupled to a conventional keyboard and display. In one embodiment, all communication into or out of updater  is made via input\/output  of communication interface . Communication interface  includes a conventional communication interface that supports Ethernet, TCP\/IP, or other conventional communication protocols and may include interface facilities for direct connection of a keyboard\/mouse and monitor. Input\/output  of communication interface  may be coupled to input\/outputs ,  of updater .","As described in more detail below, the system administrator supplies to user interface manager : (1) information regarding the topology of the network of which load balancer , updater , and servers  are a part; (2) an identifier of the load balancer  or other indication of the application programming interface (API) that load balancer  supports; and (3) operational parameters, such as how often or when to update servers , the identifiers of servers are executing essentially identical tasks or an identification of groups of servers that can be brought down together, and the amount of time that should elapse between a request to refuse all further new connections for a server  and the request to shut down that server . This information will now be described.","As part of the topology information described above, the system administrator may provide to user interface manager  the IP addresses of the load balancer , updater  and the network protocols used. In addition, the system administrator provides one or more addresses for each of servers , as will now be described.","In one embodiment, each of the servers  may have one or more identifiers, which may be the one or more IP addresses that are used to send communications, including requests, to each of the servers . In some topologies, there are at least two TCP\/IP capable Ethernet interfaces on each of the servers , one that load balancer  uses to send communications to the server and another that may be used by updater to send updates to the server if, for example, load balancer  does not have the capability to forward messages addressed to the server that load balancer  receives at input .","The network topology information provided by system administrator to user interface manager  may include the IP address of each server input\/output used by the load balancer  to provide communications received at input\/output , an indication of whether each of the servers  should receive updates via load balancer  or should receive them via another IP address, and if so, the IP address and port of that should be used to update each server.","In one embodiment, the system administrator supplies to user interface manager  information about the API or command structure that load balancer  supports. Various makes, models, and brands of load balancer  support different interfaces, commands, features, and reporting options. The system administrator describes to user interface manager  make and model information about load balancer , for example, by selecting it from a list of makes and models supported by updater , which updater  later uses to generate syntactically correct commands and requests when communicating with load balancer , as described below. In one embodiment, the make and model of the load balancer is the information provided to indicate the information about the API or command structure supported by load balancer .","When user interface manager  receives all of the information described above (and certain information described below), it supplies it to configuration manager . Configuration manager  uses the information supplied to build and store a configuration file in configuration storage , which may be conventional memory or disk storage. The use of a configuration file allows the information to be preserved and reused. For example, in one embodiment, configuration manager  reads the configuration file on startup for use as described herein.","In server collections that are expected to support a high connection rate, the system administrator often configures sets of multiple servers with certain identical capabilities, so that any member of the set may respond to an identical request. For example, application servers A\u2013D are designated as being in one set and static object servers A\u2013B are designated as being in a different set. In one embodiment, the system administrator designates servers  as being in a set by assigning a type to each server via user interface manager , with each server in a set being designated with the same type. A server configured with certain identical capabilities as another server is said to have a \u201ctype\u201d that is the same as the other server using this strategy, a request routed through a load balancer could be forwarded to any member of the set of the same type of servers, thus effectively multiplying the number of requests to which servers  can respond when the request is made to a given IP address.","In one embodiment, servers are assigned to groups so that updating may be performed a group at a time. The servers are assigned to a group by ensuring that a group will not contain all of the members of the same set containing the same type of servers. This allows a group to be taken out of service for updating while ensuring that at least one member of every set (e.g. one server of every type) is in service to respond to requests. In one embodiment, the servers from each set are somewhat evenly spread among the groups to the extent possible to minimize the effect on service when any one group is taken off-line to update it.","In one embodiment, each of the servers  may be assigned to a group by the system administrator using user interface manager  and such information is provided to configuration manager  for storage in the configuration file in configuration storage .","In another embodiment, the system administrator uses user interface manager  to identify each server as being of a certain type and user interface provides this information to configuration manager  for storage in the configuration file in configuration storage . In this embodiment, configuration manager  assigns the servers  to various groups. In such embodiment, the system administrator may specify to user interface manager  the number of groups (e.g. two) and user interface manager  supplies the number of groups to configuration manager . In another embodiment, configuration manager  determines the number of groups by identifying the set with the smallest number of members or the smallest number of members on-line, and uses that number as the number of groups to which the servers should be assigned. In another embodiment, the number of groups is fixed at a specific number, such as two.","In one embodiment, when sufficient information is received from user interface manager , configuration manager  assigns each of the servers  to a group as described above. However, it is not necessary that configuration manager  make the assignment of servers to groups at the time the information is received from user interface manager . In one embodiment, configuration manager performs such assignment of servers  to groups just before it begins the update process. This allows servers to be assigned to groups using additional constraints, if possible, such as: \u201cno one group will have all of the servers of a particular type that are in service just before the update process is begun\u201d, or \u201cservers of the same type that are on-line are distributed as evenly as possible\u201d, or \u201cthe number of groups will be equal to the smallest number of servers that are a) on-line just before the update process is begun and b) of the same type\u201d. In this manner, if there are four servers of a particular type, and two of the servers of that type of four are out of service, the remaining two servers will not be assigned to the same group and therefore simultaneously taken out of service for updating.","Periodically, updater  updates the servers . The period in which the servers are updated may be specified by the system administrator using user interface manager , which provides it to configuration manager  for storage in the configuration file in configuration storage  as described above. The system administrator may initiate the performance of an update as described herein. Upon the start of the update process described below, shutdown manager  signals operation initiator , which adds the duration stored in the configuration file to the system clock and computes a time to begin the next update. Operation initiator  sets one or more operating system timers or reminder programs to cause an operating system (not shown) or reminder program to signal operation initiator  when the next update is scheduled to occur. When so signaled, operation initiator  signals configuration manager  to repeat the update process. This allows updates to be regularly scheduled.","As described above, the assignment of servers  to groups may be made immediately prior to the updating of the servers. In one such embodiment, configuration manager  signals status monitor  to provide the status of all of the servers . Status monitor  requests and receives an indication of the make, model, and\/or brand, and the address, of load balancer  from configuration manager , which locates such model and address information in the configuration file in configuration storage  and returns the model and address information to status monitor . Status monitor  receives the model and address information and uses the model information as an index to an API table in API table storage  to retrieve the syntax of the desired API command and any response, which in this case is the command to request the on-line or off-line status of each server having an entry in the status table in status storage . API table storage  contains a table of the commands that may be sent to load balancer  depending on the make and model of load balancer . If a command is not available on a particular load balancer , that fact is noted in the API table in API table storage , and alternate commands may be selected or certain steps in the procedure may be ignored as a result of the unavailable command. The API table may be provided with updater  or provided by the system administrator via user interface manager  and the API table may be stored in a file. It isn't necessary to use a table: in one embodiment, the information described herein as being in an API table is hard coded into the elements described herein as accessing the API table.","If a single command may be used to request a list of the on-line or off-line status of all servers , status monitor  sends the command to request such status and receives the list. If the status of each of the servers  must be individually requested to determine which of the servers  are off-line, status monitor  uses the identifiers of the servers in the status table, built as described below, to send a command to request from load balancer  the status of each of the servers , one server at a time. Status monitor  provides the status of each of the servers, along with the IP address or other identifier of the server, to configuration manager .","Configuration manager  builds a status table in update storage . The status table is a table of entries, with one entry for each server . Each entry contains the IP address or addresses or other identifier of each server stored in configuration storage . In addition, entries contain flags which may be marked (e.g. set or cleared to indicate a certain status) as described herein corresponding to certain status information. Configuration manager  adds to the status table the on-line or off-line status of each server, that configuration manager  receives from status monitor .","Another flag in the status table identifies the server as being in the current group. The current group is one or more of the groups identified as described above that is in the process of being updated as described herein. Configuration manager  either assigns the servers  to groups as described above or retrieves such assignment from the configuration file, selects the first group, and marks the entries in the status table for those servers as being in the current group. It is noted that, in one embodiment, servers having an off-line status may be assigned to a group, so that they may be updated if possible. In one embodiment, after configuration manager  has identified the servers in the first group as being in the current group, configuration manager  signals status monitor .","Status monitor  receives the signal from configuration manager  and identifies any of the servers  having entries in the status table in status storage  that are marked as in the current group and that are currently off-line.","Status monitor  then requests and receives an indication of the make and model and the address, of load balancer  from configuration manager , which locates such model and address information in the configuration file in configuration storage  and returns the model and address information to status monitor . Status monitor  receives the model and address information and uses the model information as an index to an API table in API table storage  to retrieve the syntax of the desired API command and any response, which in this case is the command to request the on-line or off-line status of each server having an entry in the status table in status storage  that is marked as being in the current group.","If a single command may be used to request a list of all servers off-line, status monitor  sends the command to request it and receives the list. If the status of each of the servers  must be requested to determine which of the servers  are off-line, status monitor  uses the identifiers of the servers in the status table that are marked as available for updating to send a command to request from load balancer  the status of each of the servers , one server at a time. If the status of all servers must be requested, status monitor  requests it.","Status monitor  receives the status of each of the servers described above, and stores an indication of the on-line or off-line status of each server  marked as in the current group in the corresponding entry for that server in the status table in status storage . Once status monitor  has determined and stored the status of each server  identified in the configuration file in configuration storage , status monitor  signals shutdown manager .","Shutdown manager  manages the orderly shutdown of servers  marked as in the current group. To manage the orderly shutdown of such servers , shutdown manager  requests the model information and address of load balancer  from configuration manager  as described above, and uses the model information and the API table in API table storage  to determine if load balancer  supports a command to stop directing new connection requests to a particular one of the servers . If so, shutdown manager  retrieves the correct API syntax from the API table in API table storage  and sends to load balancer  a request to stop directing new connections to each server  marked in the status table as being in the current group. To send the refuse new connection requests, for each server marked as in the current group in the status table in status storage , shutdown manager  extracts the server identifier from the selected status table entry, and sends to load balancer  a command to stop forwarding new connections to the server having the extracted server identifier.","Because load balancer  stops forwarding new connections to the servers in the current group, load balancer  will direct new connections to servers in groups other than the current group. If the load balancer provides such a capability, by waiting a relatively short time before directing load balancer  to take the servers in the current group off-line, because no new connections will have been initiated, and some or all of the existing connections will have sufficient time to terminate naturally, disruption of users is minimized or even eliminated when such servers are subsequently taken off-line.","Shutdown manager  requests and receives the shutdown wait time from configuration manager . The shutdown wait time is provided in the configuration file by the system administrator, and represents the maximum amount of time after load balancer  is instructed to refuse new connections to the servers in the selected group, before taking those servers  off-line. Shutdown manager  sends the shutdown wait time to an operating system timer (not shown), which signals when the time has elapsed.","In one embodiment, once shutdown manager  has sent to load balancer  a refuse new connections request for each server marked as available for shutdown, shutdown manager  signals shutdown monitor . Shutdown monitor  monitors the status of servers marked as being in the current group to determine if existing connections have terminated prior to the time the system timer set by shutdown manager  elapses. This can allow the update process to proceed more rapidly if the load balancer  supports the capability to provide the status of servers .","To monitor the status of the servers, shutdown monitor  requests and receives the address and model number of load balancer  from configuration manager  and uses this information to request the idle status of all servers or each server having an entry marked in the status table as being in the current group. In one embodiment, load balancer  will report as idle any server that has not received a request for a certain period of time in one embodiment, or for which all connections have explicitly terminated in another embodiment, or both in still another embodiment. In another embodiment, load balancer  simply reports the time of the last request received and assigned to a server. In this case, the system administrator specifies to user interface manager  such amount of time that should elapse when a server is considered idle and such amount of time is provided from system administration manager  to configuration manager  and stored in the configuration file in configuration storage . Shutdown monitor  requests the idle time from configuration manager and compares it to the amount of time elapsing since the latest request was assigned by load balancer  to any of the servers marked as being in the current group. When such amount of time meets or exceeds the idle time stored in the configuration file in configuration storage , or if load balancer  reports all servers in the current group as being idle, shutdown monitor  signals shutdown manager .","When the timer or shutdown monitor  signals shutdown manager , shutdown manager  requests and receives the load balancer address and model information and determines API syntax as described above, and sends a command to load balancer  to suspend communications to the servers  having entries in the status table marked as being in the current group as described above. Shutdown manager  may signal the other of timer or shutdown monitor  (e.g. the one other than the one from which it received the signal) so that the other device does not signal shutdown manager  as described above.","Shutdown manager  receives the signal, determines the load balancer  address and API syntax as described above, sends one or more commands to load balancer  to suspend routing requests to each server  with a status table entry in status storage  marked in the status table as being in the current group.","In one embodiment, if the end of the timer is reached, shutdown manager  again signals shutdown monitor  to monitor the status of the servers  marked in the status table as being in the current group as described above. If all of the servers so marked are not idle, instead of directing the load balancer  to suspend communications to the servers  marked as being in the current group, shutdown manager  terminates the further operations described herein and indicates to report manager  that the update operation was aborted. Report manager  provides a report to the system administrator indicating that operations were aborted. In one embodiment, this capability only applies to the first group selected: once the first group is updated, any other groups are updated even if all servers are not idle. In still another embodiment, shutdown manager  provides identifiers of individual servers not idle to configuration manager , which removes them from the current group and assigns them to another to provide more time for such servers to become idle, provided that, in the current group, there are other servers of the same type as a server being moved into a different group. In one embodiment, this capability is an option selected by the system administrator using user interface manager , which provides an indication of the selected option to configuration manager  for storage in the configuration file in configuration storage . Status manager  requests the value of the option from configuration manager  and operates using the embodiments described above in response to the value of the option.","Update manager  receives the signal, and either updates those servers  marked in the status table as being in the current group as described above or directs an update handler  in those servers  to initiate the update process using any conventional method of updating a computer system, such as those described in the related U.S. patent listed above. This method may include the update handler  in the server  sending an identifier of the files installed on the server , having update manager  determine what actions, if any, should be taken to update that server  and sending to the update handler  any files needed to update the server , a list of the files, and instructions for updating the server  and having the update handler  perform the actions using any such files. In the related application, update handler  is referred to as a tuner and update manager  is referred to as a transmitter or its proxy.","In one embodiment, update manager  provides such updates for a given server to the same IP address used by load balancer  to forward requests to such server via load balancer . In another embodiment, update manager  provides such update information to the other IP address stored in the status table as described above, bypassing load balancer , such as via network , which may be accessed via a router and the Internet.","Update handler  attempts to apply the update, and sends a response to update manager  indicating whether or not the update attempt was successful.","Update manager  receives and examines the response, and updates the status table entry corresponding to server  on which the update attempt was made to indicate either success or failure of the update. If no update was necessary, the response received by update manager  will either indicate that the update was successful or that no update was required, and either response is treated as a successful update by update manager .","Update manager  performs the functions described above for each server  that provides a response. If, within a certain period of time after update manager provides update information to the servers  marked as being in the current group, no such response is received from one or more of the servers  marked as in the current group, update manager  marks the status table entry for each such server as if the update was reported as unsuccessful and also marks the entry as not having responded to the update. In one embodiment, this period of time is provided by the system administrator to user interface manager , which provides it to configuration manager  for storage in the configuration file in configuration storage  and update manager  requests it from configuration manager . Once update manager  has marked the success or failure of the update for all entries for servers  marked as in the current group as described above, update manager  signals shutdown manager  and configuration manager .","Shutdown manager  receives the signal, and provides one or more commands to load balancer  that will have the effect of bringing back on-line those servers  a) marked as being in the current group, b) marked as on-line in the status table, and c) whose updates are not marked as having failed in the status table. To identify and bring these servers  on-line, shutdown manager  determines the load balancer  address and correct API syntax as described above, scans the status table in status storage , and requests load balancer  to bring on-line each server  whose corresponding status table entry matches all of the criteria a, b and c listed above.","In one embodiment, shutdown manager  signals shutdown monitor  to monitor the status of each updated server  thus brought on-line as described above in order to ensure that newly updated servers  are functioning correctly. Such monitoring may be performed by requesting status from load balancer  or by attempting to communicate with each server in the current group. If shutdown monitor  determines abnormal functioning of a server , then shutdown monitor  updates the status table entry in status storage  corresponding to the abnormally functioning server  to indicate update failure.","Configuration manager  receives the signal from update manager  and uses entries in the status table marked for update and the assignment of servers to groups in configuration storage to identify the group or groups of servers that were updated as described above. Configuration manager  unmarks in the status table in update storage  the entries marked as being in the current group, identifies the servers  in another group not already selected since operation of updater  was last initiated and marks their entries in the status table as being in the current group.","Configuration manager  then signals status monitor , and the process described above is repeated until all groups of the servers  are processed as described above.","When no additional groups remain, configuration manager  signals report manager .","Report manager  receives the signal and reports on the status of the updates and servers . To produce the report, report manager  scans the status table in status storage , formats the contents of the status table into a report, and sends the report to the system administrator. In one embodiment, the report indicates, for each of the servers , the status of each server before the update was applied to the server, whether the update completed successfully and optionally, the status of the server if it was checked after the update was applied. In one embodiment, report manager  sends the report via e-mail. In one embodiment, report manager  sends the report to a printer via communication interface  and input\/output .","In one embodiment, if any status table entries indicate an update failure, report manager  sends a page, or calls a cell phone, or sends a text message to a cell phone or a pager or other wireless device, alerting the system administrator to the failure. In one embodiment, update manager  will signal report manager  to provide such notification immediately upon detection of the update failure.","Referring now to , a flowchart illustrating a method of automatically updating multiple servers is shown according to one embodiment of the present invention. Operation is initiated as described above , and the correct API format and\/or syntax for commands are determined  as described above for use as described below. Step  may be repeated at various locations in the method as described above. A determination is made as to whether the load balancer supports instructions to stop forwarding new connections to the servers in the selected group . The servers are assigned to two or more groups and a first group is selected as the current group and the servers in the selected group are marked as described above . Step  may include requesting and receiving the off-line status of each server as described above. The off-line status of each server in the selected group is requested and received  as described above. In one embodiment, step  follows step  and steps  and  follow step .","If one or more instructions to stop forwarding new connections are supported by the load balancer , an instruction is provided to stop forwarding all new connections to the servers in the selected group , and the servers in the selected group are optionally monitored for the termination of all connections  as described above. If all servers in the selected group are idle , then the method continues with step . If all servers in the selected group are not idle , then a check is made to determine if the waiting period has expired. If the waiting period has not expired , then the method continues with step  and otherwise , the method continues at step . If at step , the load balancer does not support instructions to stop forwarding new connections to the server, the method continues at step .","Continuing now at step , the servers in the selected group are brought off-line , each server in the selected group is sent a request to begin the update process, and one or more indications of the file status of each server is received  as described above. In one embodiment, step  includes checking an option and if the option indicates that servers not idle are not to be brought off-line, step  may include terminating the method, terminating the method if the current group is the first group or reassigning non-idle servers as described above, in response to the option.","The file status is examined  as described above. Update information and optionally, update files, are sent  to the servers in the selected group, and a message indicating the success or failure of the updates is received and examined  as described above.","The servers in the selected group that were successfully updated and were on-line when last checked at step  are brought back on-line . If there are more groups not already selected , another group not already selected is selected  and the method continues at step  using the newly selected group of servers. Otherwise , the next update is scheduled (or such function may be part of step  as described above) and a status report is generated and sent  to the system administrator as described above. Step  or  may include informing the system administrator that an update did not complete successfully as described above.","If the scheduled time for an update has occurred , the method continues at step  and otherwise , the method waits  for the time to occur, such as by scheduling a timer or reminder as described above."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 3","FIG. 2"],"b":"212"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
