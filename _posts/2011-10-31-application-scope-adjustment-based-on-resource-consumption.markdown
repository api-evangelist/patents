---
title: Application scope adjustment based on resource consumption
abstract: Various embodiments of systems and methods for application scope adjustment based on resource consumption are described herein. A load parameter of a data center is measured. A request is received at the data center. An implementation variant to process the request is selected based on the measured load parameter and a threshold value of the load parameter. The implementation variant comprises a standard process for processing the received request and an alternative process for processing the received request that reduces the impact on the load parameter compared to the standard process. The received request is processed using the selected implementation variant.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08805986&OS=08805986&RS=08805986
owner: SAP AG
number: 08805986
owner_city: Walldorf
owner_country: DE
publication_date: 20111031
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The field relates generally to management of computational resources. More particularly, the field relates to management of resource usage by adjusting scope of applications.","Data centers support activities related to on-demand or online applications that require analyses of data. A data center typically includes computer hardware such as memory, hard drives, and networking hardware, and a cooling system. Data centers are designed considering various factors such as amount of data to be handled, expected network traffic, etc. When requests are received at the data center via a network, they are processed and results or outputs are transmitted to the requestor. The processing of the requests consumes computing resources at the data center and, in turn, affects the operation of the cooling system.","Data centers are typically not designed to manage peak usage at all times. A peak usage is a scenario where the computing hardware operates at maximum capacity. The cooling system may not handle peak usage for extended periods of time. The cooling system is typically designed for average consumption of computing resources that is below the peak usage. At peak usage, the data center may not be able to handle any more requests. Therefore, any new requests may be delayed or rejected. The capacity of data centers may be increased to handle more requests, but that leads to additional costs. Also, since peak usage scenarios may exist only for short durations, increasing the capacity of data centers is not an efficient and cost-effective option. But rejection of requests results in outage of services that are promised to customers. Random customers are affected by rejection of requests, leading to decrease in customer satisfaction, service level, or credibility of a service.","It would therefore be desirable to efficiently manage requests to deal with peak usage scenarios.","Various embodiments of systems and methods for application scope adjustment based on resource consumption are described herein. A load parameter of a data center is measured. A request is received at the data center. An implementation variant to process the request is selected based on the measured load parameter and a threshold value of the load parameter. The implementation variant comprises a standard process for processing the received request and an alternative process for processing the received request that reduces the impact on the load parameter compared to the standard process. The received request is processed using the selected implementation variant","These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings.","Embodiments of techniques for application scope adjustment based on resource consumption are described herein. In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["100","100","102","104","106","108","102","104","102","106","108","100","110","112","112"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2","b":["200","202"]},"At , a request is received at the data center from a client. The request needs to be processed and a response is required to be sent to the client. The processing of the request requires consumption of one or more computing resources and thereby affects one or more load parameters. At , an implementation variant to process the received request is selected based on the measured load parameters and a threshold value of the load parameters. The implementation variant includes a standard process that would be typically used to process the request and an alternative process that can be used to process the request. A standard process uses primary data for processing the request. Primary data can be the data that is stored in the hard drives. An alternative process is designed to process the request using lesser resources compared to the standard process. Alternative processes will therefore reduce the impact on load of the data center compared to the standard process. These alternative processes can be designed for the requests. A variety of techniques can be used for developing the alternative processes. For example, the alternative processes can be designed to process the requests with less data or lesser fields of data than required by the standard process. Secondary data that constitutes a portion of the primary data can be used for the alternative process. The alternative processes can be designed to process the requests using past data or any extracts of data that can satisfy the client's expectations for the time being. The request is then processed with selected implementation variant at  and a response is sent to the client.","In one embodiment, the values of the measured load parameter and the threshold parameter determine which implementation variant is selected. If the threshold load parameter is \u2018X\u2019 and the measured load parameter is \u2018Y\u2019 which is greater than \u2018X,\u2019 then the alternative implementation variant is selected. If the threshold load parameter is \u2018X\u2019 and the measured load parameter is \u2018Z\u2019 which is less than \u2018X,\u2019 then the standard implementation variant is selected. For example, if threshold load parameter is a CPU load of 70% and the measured CPU load is 80%, then the alternative process is selected. In another embodiment, the resources required to process the received request, the measured load parameters, and the threshold values of the load parameters are considered in the selection of the implementation variant.","Consider an example in which a request requires to run real-time analytics on sales data. A request is received when a user performs an action using an application, e.g., an analytics application. An application can be accessed using a variety of devices such as computers, laptops, tablets, or mobile phones. Real-time analytic operations are generally performed on the latest data. The response expected by a user is an analysis of sales data. The standard process runs analytic operations on the latest data that is stored in the data storage devices in the data center. There can be millions of sales records, requiring a considerable memory for processing them. Consider that the measured memory usage load parameter is 700 megabytes, the threshold memory usage is 800 megabytes, and the memory required to process the millions of sales records is 300 megabytes. Since the sum (300 MB+700 MB) of the memory required to process the request and the measured load parameter is greater than the threshold load parameter (800 MB), the alternative process is selected. The standard process is selected if the sum of the memory required to process the request and the measured load parameter is less than the threshold load parameter (800 MB). Instead of using the entire sales data, the alternative process can use a latest aggregation of the sales data (e.g., sales volume aggregation) that is previously performed and stored. Depending on the type of the sales system, aggregations may be performed few times a day and the latest aggregation may be representative of sales data that may be few hours old. The alternative process processes the request using this latest aggregation. A response including an analysis of sales data is then sent to the client.","In one embodiment, two similar requests can be processed differently, i.e., one with the standard process and the other with the alternative process. Consider another example in which the memory required to process the sales records according to a first request from a customer is 190 MB, the measured memory usage load parameter is 600 megabytes, and the threshold memory usage is 800 MB. Since the sum (190 MB+600 MB) of the memory required to process the first request and the measured load parameter is less than the threshold load parameter (800 MB), the standard process is selected. While processing the first request, if a second request (requiring around 200 MB) to process the same or similar sales records is received, then the alternative process is selected because the sum of the memory required (200 MB) to process the second request and the measured load parameter (which is now 600 MB+around 190 MB) is greater than the threshold load parameter (800 MB).","In the context of other load parameters, if the standard process requires 100 million CPU cycles to process sales data, the alternative process requiring much less CPU cycles such as one million or less CPU cycles can be used based on measured and threshold number of CPU cycles. In the context of network bandwidth load parameter, if the bandwidth of the data center is at the maximum and the bandwidth required to send a response of analytic results is not available, then an alternative process of sending only an image of the analytic results can be used. Alternative processes consume lesser resources compared to standard processes and therefore reduce the impact on the load on the data center.","As another example, consider a procurement scenario in which a customer wants to know delivery data such as shipment duration of a product. A web-based product catalog can be used in such situations. When delivery data of a product is to be provided, various product-related data such as the availability of product, stages of production of the product, available transportation facilities, quantity in stock, etc that is stored in a data storage device needs to be analyzed. This is the standard process and can consume significant resources. Instead, an alternative process that uses secondary information such as statistical information derived from past data can be used to provide delivery data. Average shipment duration for that product over a period of time (e.g., six months, a year, etc) can be directly provided without any computationally expensive calculation. This average shipment duration can provide a reasonable picture to the customer.","As another example, for any request requiring searching in several fields, an alternative process can be designed to selectively search in lesser number of fields. For example, to search a calendar event, a standard process searches in all the relevant fields such as title or subject, speaker, location, tags, topic, and material related to the event. An alternative process can be designed to search only few of those fields, thereby reducing the amount of data on which the search has to be performed. Similarly, in searching for books in a web-based book catalog, an alternative process can be designed to search only few fields such as title or short notes instead of searching the entire contents of the books.","In one embodiment, there can be more than one alternative process to process a request. A first alternative process may affect a first load parameter (e.g., input\/output) and a second alternative process may affect a second load parameter (e.g., Memory). Depending on the estimated impact on the first and second load parameters to process a request, either the first alternative process or the second alternative process can be used. In another embodiment, if the measured second load parameter is relatively lower than the measured first load parameter, then the second alternative process can be used to process a request.","Referring to , if the standard processes are used to process all the requests, the load on the data center may exceed a threshold or acceptable load level. Eventually, this will give rise to peak load situation  that can exist for extended periods, as shown by the dotted lines in . The load on the data center exceeds a threshold load parameter  during the peak load situations . The cooling system and other hardware may not be able to handle such peak load situations . This can lead to possible damage of components or shutdown of the data center. Using alternative process reduces the load on the data center. A load profile  that can be safely managed by the data system hardware can be achieved by the application scope adjustment method as described above. The scope of applications is adjusted using the standard process or the alternative process based on the load on the data center.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 4","b":["400","402","404","406","404","404","408","404","410","408","412","414","416"]},"Therefore, instead of randomly rejecting requests when the load on the data center is high, the application scope adjustment method follows a structured approach in determining which requests can be rejected, which requests can be processed using standard processes, and which requests can be processed using alternative processes. Using such approach leads to lesser number of rejections. This will increase credibility of services and customer satisfaction.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 5","b":["500","500","502","502","502","504","504","506","508","506","508","502","506","508","510"]},"A scope adjustment controller  determines which implementation variant needs to be selected based on the load parameters provided by the monitoring system  and threshold values of the load parameters. The scope adjustment controller  is a generic component that can be used in combination with any application software component. The ABAP runtime  invokes the scope adjustment controller . The scope adjustment controller  reads metadata associated with the implementation variants, i.e. standard and alternative variants. This metadata can be referred as \u201cprofiles.\u201d The profiles include a standard resource profile  for the standard code  and an alternative resource profile  for the alternative code . A profile can refer to one or more switching criteria . The switching criteria  refer to one or more load parameters or criteria that affect the load parameters. For example, a switch criterion as referred by the standard profile  can be \u201cCPU load less than 70%\u201d and a switch criterion as referred by the alternative profile  can be \u201cCPU load greater than or equal to 70%.\u201d The scope adjustment controller  retrieves the measured CPU load from the monitoring system . If the CPU load, for example, is 75%, then the scope adjustment controller  decides to run the alternative variant. The ABAP runtime  then loads and executes the alternative code . Although the above system description is based on ABAP, similar approach can be applied using other computer languages.","Some embodiments of the invention may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components maybe implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer readable storage media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include machine code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment of the invention may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment of the invention may be implemented in hard-wired circuitry in place of, or in combination with machine readable software instructions.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 6","b":["600","600","605","655","600","640","655","610","615","610","615","605","615","600","625","630","600","625","630","600","635","600","650","650","600","645","600","620","660","660","660","650","660"]},"A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transactional, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transactional data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system (e.g., ERP system), and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","In the above description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however that the invention can be practiced without one or more of the specific details or with other methods, components, techniques, etc. In other instances, well-known operations or structures are not shown or described in details to avoid obscuring aspects of the invention.","Although the processes illustrated and described herein include series of steps, it will be appreciated that the different embodiments of the present invention are not limited by the illustrated ordering of steps, as some steps may occur in different orders, some concurrently with other steps apart from that shown and described herein. In addition, not all illustrated steps may be required to implement a methodology in accordance with the present invention. Moreover, it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.","The above descriptions and illustrations of embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather, the scope of the invention is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The claims set forth the embodiments of the invention with particularity. The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments of the invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
