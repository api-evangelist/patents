---
title: Dynamically adaptive portlet palette having user/context customized and auto-populated content
abstract: An event to initialize a portlet palette within a user interface having an open portal to which the portlet palette is associated can be detected. The portlet palette can be a user interface control that includes a portlet set of at least one portlet. The portlet palette can be configured so that a selection of a portlet from the portlet set causes the portlet to be added to the open portal. A set of portlets can be automatically determined from a set of stored portlets that are relevant to the open portal based upon previously defined programmatic rules and contextual information associated with the open portlet. The portlet palette can be dynamically populated with the determined set of portlets. The populated portlet palette can be presented within the user interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07676557&OS=07676557&RS=07676557
owner: International Business Machines Corporation
number: 07676557
owner_city: Armonk
owner_country: US
publication_date: 20090116
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present invention relates to the field of portal development tools and, more particularly, to dynamically adaptive portlet palette having user\/context customized and auto-populated content.","Portals are containers that contain customizable portlets, each of which is linked to a portlet specific data source. To customize a portal, users access a portlet palette, which contains a listing of available portlets. The user can select (e.g., drop-and-drag) portlets from the palette and place them on the customizable portal, to add the portlet to the portal. Existing portlet palettes can provide a static listing of default portlets that is presented to all users and\/or can provide an ability to manually modify the portlets provided within the palette. Current portlet palettes do not automatically adapt to user or request context.",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1","b":["100","100","105","110","115","120","135","140","100"]},"Server  can include a manual layout interface , a model management component , and a portal palette . Portlet palette  can be a graphical representation of a set of portlets  that a user can add to a portal page  through user interactions. The portlet palette  can be easier for many users to utilize than the manual layout interface , which results in palette  being a preferred interface for customizing portals.",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2","b":["200","210","212","214","216","200","210","220","212","220","222","214","214","216","224","216","226","226","214","212","212","228","210"]},"The present invention provides a portlet palette that dynamically auto-populates portlets listed in the palette based upon user and\/or context specific considerations. In one embodiment, portlets can be placed in the portal palette based at least in part upon semantic tags. The semantic tags can be associated with each portlet and optionally with the portal itself. Each semantic tag can semantically describe the \u201cpurpose\u201d of the portlet, where tag content can be based upon user provided keywords, comments, other user entered data, or data automatically inferred based upon user specific behavior. Semantic tags associated with a current portal and\/or included portlets can be compared against semantic tags associated with a set of stored, yet available portlets. Portlets similar to the existing ones (based upon matching terms contained in the semantic tags) can be automatically presented within the portlet palette. As semantic tags of the portlets change and\/or as the portlets included in the portal changes, the portlets listed in the portlet palette can dynamically adjust.","In another embodiment, portlets to be placed in the portlet palette can be selected based upon a set of portlets that have proven to be of use to other users. An assumption is that similarly positioned users will often want to configure a portal (including using a similar set of portlets) in a similar manner with each other. Any of a variety of techniques can be used to determining similarity among a set of users, such as using social networking data to programmatically ascertain user-to-user correspondences. These correspondences can be based generically upon strength of relationships among users and\/or can be based upon portlet specific data (such as comparing a \u201cpurpose\u201d of a given portlet against a relationship factor that shows the users share that purpose). Once a user-to-user similarity is discovered, a portal database can be queried to determine portal configurations used by the \u201csimilar\u201d users. Portlets used within portals of similar users can be presented (within a dynamically populated portlet palette) to a user who is configuring their own portal.","It should be emphasized, that the portlet palette can be dynamically populated using any programmatically definable technique and that the invention is not to be limited in scope to a semantic tag based technique or to a user similarity based technique. For example, in another contemplated embodiment, user browser behavior and activity can be monitored and logged to infer a set of portlets likely to be of interest to the user, where the portlet palette is dynamically populated with those likely candidates. Further, multiple techniques can be combined to determine a set of dynamically presented portlets.","The present invention may be embodied as a method, system, or computer program product. Accordingly, the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, the present invention may take the form of a computer program product on a computer-usable storage medium having computer-usable program code embodied in the medium. In a preferred embodiment, the invention is implemented in software, which includes but is not limited to firmware, resident software, microcode, etc.","Furthermore, the invention can take the form of a computer program product accessible from a computer-usable or computer-readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description, a computer-usable or computer readable medium can be any apparatus that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device. The computer-usable medium may include a propagated data signal with the computer-usable program code embodied therewith, either in baseband or as part of a carrier wave. The computer usable program code may be transmitted using any appropriate medium, including but not limited to the Internet, wireline, optical fiber cable, RF, etc.","Any suitable computer usable or computer readable medium may be utilized. The computer-usable or computer-readable medium may be, for example but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, device, or propagation medium. Examples of a computer-readable medium include a semiconductor or solid state memory, magnetic tape, a removable computer diskette, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory, a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk-read only memory (CD-ROM), compact disk-read\/write (CD-R\/W) and DVD. Other computer-readable medium can include a transmission media, such as those supporting the Internet, an intranet, a personal area network (PAN), or a magnetic storage device. Transmission media can include an electrical connection having one or more wires, an optical fiber, an optical storage device, and a defined segment of the electromagnet spectrum through which digitally encoded content is wirelessly conveyed using a carrier wave.","Note that the computer-usable or computer-readable medium can even include paper or another suitable medium upon which the program is printed, as the program can be electronically captured, via, for instance, optical scanning of the paper or other medium, then compiled, interpreted, or otherwise processed in a suitable manner, if necessary, and then stored in a computer memory.","Computer program code for carrying out operations of the present invention may be written in an object oriented programming language such as Java, Smalltalk, C++ or the like. However, the computer program code for carrying out operations of the present invention may also be written in conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","A data processing system suitable for storing and\/or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code, bulk storage, and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.","Input\/output or I\/O devices (including but not limited to keyboards, displays, pointing devices, etc.) can be coupled to the system either directly or through intervening I\/O controllers.","Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems, cable modem and Ethernet cards are just a few of the currently available types of network adapters.","The present invention is described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer-readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including instruction means which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3","b":["300","300","305","310","320","362","360","364"]},"Each user  can utilize a configuration interface  to customize portals in user specific fashions. The user customizations can be stored in a data store  and can be applied by a portal engine  at runtime when portals are served. The configuration interface  can include a portlet palette , which provides a list of portlets from which the user  utilizing the interface  can choose. For example, a user  can add new portlets to a customized portal by dropping and dragging portlets from the palette  into a portal construction canvas (or into the portal interface instance itself, which this interface is the construction canvas). A model management component of server  can perform the programmatic actions to create the user portal customizations stored in data store  based upon user interactions involving the palette .","Unlike conventional portlet palette  implementations, the list of portlets provided in the palette  can be dynamically populated at runtime using the portlet palette populator component . The populator  can select a set of available portlets stored in an accessible portlet repository  based upon context of use and\/or user specific factors.","In one embodiment, the palette  can be populated based upon comparisons between semantic tags associated with a current portal and semantic tags associated with available portlets. Semantic tagging  component can permit a user , authorized administrator, or automated software agent to establish semantic tags for portlets and\/or portals, which can be stored in tag data store . A similarity calculator  can determine correspondence strength between the semantic tags of a current portal and available portlets  and can provide a ranked set of portlets based upon these semantic tag similarities. The ranked set of portlets can be included (in ranked order) in the portlet palette .","In another embodiment, the palette  can be populated based upon selections used by users similar to a current user . For example, a set of users having user specific portal configurations stored in data store  can be examined to determine if a strong relationship exists between these users and user . Relationship strength can be determined based upon social networking data stored in data store . A relationship calculator  can determine a strength of relationship. The relationship handler  can query stored user configurations involving portlets and can generate a ranked set of available portlets from data store . Portal configurations of users having relatively strong relationships with user  are given greater relative weight than those portal configurations associated with users having weaker relationships with user . In one embodiment, the data store  can be a social network maintained data store, in which case an interface  (e.g., application program interface) may be needed for querying relationship data from data store .","The hardware  of server  can include at least one processor , at least one volatile memory , and at least one non-volatile memory , linked to one another by bus . The one or more processors  can include one or more cores, which are interconnected to each other. The cores can be contained in a single processing die and\/or can be contained in separate processor dies linked to one another through a multi-processor capable motherboard. In one embodiment, the computing device  can be a virtual computing device having one or more defined processors , which may or may not map to discrete physical processors. A virtual device can include a distributed computing device and\/or a software emulated device.","The non-volatile memory  can store software . Non-volatile memory  can include a solid state disk (SSD), a set of one or more hard drives (magnetic disks), optical disks, plastic disks, magnetic tape, memsistors, and the any other storage medium capable of retaining digitally encoded data. The volatile memory  can store data elements processed by processor . The volatile memory  can include Random Access Memory (RAM) and other types of storage mediums capable of temporarily storing data.","Client  can be any computing device capable of interacting with portal server . The client  can include a browser with renders portals provided by server . Client  can include, but is not limited to, a personal computer, a mobile phone, a kiosk, a Web tablet, a navigation system, a media player, an embedded computing device, and the like. Content source  can be a Web content source able to server Uniform Resource Identifier (URI) addressed content.","Network  can include any hardware\/software\/and firmware necessary to convey digital content encoded within carrier waves. Content can be contained within analog or digital signals and conveyed through data or voice channels and can be conveyed over a personal area network (PAN) or a wide area network (WAN). The network  can include local components and data pathways necessary for communications to be exchanged among computing device components and between integrated device components and peripheral devices. The network  can also include network equipment, such as routers, data lines, hubs, and intermediary servers which together form a packet-based network, such as the Internet or an intranet. The network  can further include circuit-based communication components and mobile communication components, such as telephony switches, modems, cellular communication towers, and the like. The network  can include line based and\/or wireless communication pathways.","Each of the data stores , ,  can be physically implemented within any type of hardware including, but not limited to, a magnetic disk, an optical disk, a semiconductor memory, a digitally encoded plastic memory, a holographic memory, or any other recording medium. The data stores , ,  can be a stand-alone storage unit as well as a storage unit formed from a plurality of physical devices, which may be remotely located from one another. Additionally, information can be stored within each data store in a variety of manners. For example, information can be stored within a database structure or can be stored within one or more files of a file storage system, where each file may or may not be indexed for information searching purposes.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 4","b":["400","400","300","400","405","410","415","420","429","435","440","460","461","466","400","412","480","482","484","412"]},"The semantic tagging component  can allow an administrator or a user to associate portal resources including portlets and pages with semantic tags (i.e. user assigned meta-data semantically describing the purpose of the tagged component, which can be a page or a portlet). A semantic tag can include a keyword or term associated with or assigned to a piece of information, thus describing the item and enabling keyword-based enhanced information processing like classification and search of information. Component  can leverage various existing semantic tagging techniques utilized for tagging Web content. For example, many browsers permit user to add semantic tags to later find Web content. No known technique, however, utilities semantic tags as a factor to automatically populate a portlet palette . The semantic tagging component  can store semantic tags in the semantic tags database . The database  can represent a relational database management (RDBMS) database or any index able storage repository able to maintain data in a searchable fashion. In the database , the tags can remain associated with the user who performed the association. In one embodiment, the semantic tagging component  used in conjunction with database  can offer functionality to query the tags that a certain user has created.","The similarity calculation component  offers functionality to calculate correspondence strength (e.g., similarities and differences) between different semantic tags. This can be based on an underlying taxonomy or based on text processing techniques. The similarity calculation  can provide two principal functions: (1) to calculate a numerically represented similarity factor between two sets of tags; and (2) to retrieve a set of tags that are similar (according to a passed similarity factor) to a given set of tags.","As shown in , the server  can be implemented within an accessible network server of a standardized environment, such as a J2EE based environment. For example, server  can be a WEBSPHERE PORTAL SERVER, a BEA PORTAL SERVER, and the like. Server  can implement an aggregation of portlets  based on the underlying portal model . This model can include a hierarchy of portal pages  that may include portlets and portal information such as security settings, user roles, customization settings, and device capabilities. Within the rendered page, the portal can automatically generate the appropriate set of navigation elements based on the portal model . The portal engine can invoke portlets during the aggregation as required. The portal engine can uses caching to reduce the number of requests made to portlets. The application server  can employ open interface standards, such as the JAVA Portlet Application Program Interface (API)  (application programming interface). The server  can also support the use of a remote portlets via the WEBSPHERE REMOTE PROTOCOL (WSRP) or other remote access standard.","The portlet container  can be a single control component competent for all portlets , which may control the execution of code residing in each of these portlets . Container  can provide the runtime environment for the portlets and facilities for event handling, inter-portlet messaging, and access to portlet instance and configuration data, among others. The portal resources  can be particular to the portlets  themselves and the pages  on which the resources  are aggregated.","A manual layout interface  can be used for this purpose. In one embodiment, manual layout interface  can be a graphical user interface (GUI) that permits an adjustment of settings that control the visual appearance of the portal pages (e.g. by creating new pages, by adding or removing portlets on pages). Interface  can invoke a model management component , which can include functionality for performing persistent content model changes. An API can be used for invoking this functionality. In one embodiment, when an administrator or a user modifies a page  via interface , model management component  can create a derivation of the page  and can stores the derivation in the portal database . Component  can also store an association between the implicit derivation and the user that performed the page  modification.","Portlet palette  can be a user interface metaphor for adding portlets to pages . A portlet palette  can be a graphical representation of a set of portlets  that a user can add to a portal page  through drag and drop. Typically the portlet palette  can be easier to utilize than the manual layout interface , and is therefore often preferably used by users for customizing portals.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 5","b":["500","500","300","400","505","510","515","520","429","535","540","560","561","565","570","400","412","580","582","584"]},"The social network interface  can connect server  to an associated social network, such as IBM FRINGE, FACEBOOK, MYSPACE, etc. Interface  can alternatively connect server  to a repository of social networking and\/or relationship data, which may be distinct from a particular social network. For example, an social networking proxy can gather, process, and reconcile social networking data from multiple different sources (that can themselves include social networking sites). This processed data can be used by components of system  instead of using \u201craw\u201d social networking data acquired straight from a social networking source. Social network interface  can facilitate connecting to an application program interface (API) of a specific social network or other data source that permits server  to acquire social network data and to place it in the social networking data store . Although data shown as being stored in data store  can be directly acquired on demand when needed, performance can be improved by locally maintaining a data set acquired from remotely located social networking sources.","Relationship calculation  can offer functionality to compute measures representing the degree of relationship between users in the social network. Computations can be based on the social network data that is available from social network data  or through the social network interface .","It should be noted that server  and server  of  are provided to illustrate contemplated embodiments of the invention. These embodiments can be combined to create a hybrid implementation that dynamically and automatically populates a portlet palette based upon semantic tags and related user configurations. Additionally, other techniques for dynamically populating a portlet palette based upon user and\/or context specific factors are contemplated. For example, in one embodiment, a most popular set of portlets can be used to populate the portlet palette regardless of whether these users are strongly related to a current user. In one embodiment, a user can configure a set of parameters used to alter the technique used for that user when automatically populating a portlet palette.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 6","b":["600","600","300"]},"In method , when a user chooses to show a portlet palette (e.g., by clicking on the appropriate visual control that is contained on the portal page), a request can be sent from a client that is received by a portal server, as shown by step . After receiving this request, a portlet palette modification action can be automatically invoked, as shown by step . The modification action causes a portlet palette populator to dynamically determine a set of portlets believed to be of interest to a user, as shown by step . These determined portlets can be added to an existing set of portlets presented in the portlet palette or can replace existing items of a default portlet palette configuration. Step  can present the portlet palette that includes the dynamically populated portlet items to a user. Subsequent actions can be taken that involve the portal palette and items included therein. For example, a user can select one of the items for inclusion in a portal using standard techniques.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 7","b":["700","700","300","400"]},"In method , a portlet palette invocation request can be received by a portlet palette populator component, as shown by step . In step , a set of semantic tags associated with a current portal page can be determined, such as by issuing a query to the semantic tagging component . The set of semantic tags can be extracted from semantic tagging information associated with portlets of a current portal page as well as semantic tagging information associated with the currently displayed portal page itself. In step , a similarity calculator (e.g., calculator ) can be invoked to determine a set of semantic tags sufficiently similar to those associated with a current portal. These similar tags can be related to a set of portlets contained in a repository. The set of portlets (identifiers or pointers to these portlets) can be retrieved, as shown by step .","In other words, a portlet palette populator can determine a set of candidate portlets having tags similar to those determined in step . These candidate portlets can be ranked in an order that reflects a degree of association between the portlet and the passed tags, as shown by step . In step , the candidate set of portlets can be sorted, filtered, and\/or ordered according to this determined rank. In step , a highest ranking set of portlets (top N) can be selected and\/ordered by ranking (determined in step ). The number of portlets (N) can be a configurable value. The selected set of portlets can be dynamically and automatically added to the portlet palette, which can be presented to a user. Subsequent actions (not shown in ) can be taken that involve the portal palette and items included therein.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 8","b":["800","800","300","500"]},"In method , a portlet palette invocation request can be received by a portlet palette populator component, as shown by step . For example, a current user (CU) can choose to show a portlet palette within a user interface (e.g. by clicking on the appropriate visual control that is contained on the portal page). This causes a request to be sent to a portal server. After receiving this request, the portal server can invoke a portlet palette component (e.g., component ). Component  can trigger a portlet population component to perform programmatic actions that dynamically and automatically adjusts the items of the portlet palette.","In step , a set of portlets included within a current portal can be determined. In step , a set of users (U) that are related to the current user (CU) can be determined. Step  can query a data store containing previously gathered social network data or can directly query a social network for a set of related users. A set of actions then occurs for each user contained in the Set U, shown by step .","A user identifier of one of the users of Set U is determined in step  and a portal customizations specific to that user are retrieved. Specifically a set of derived pages as modified by that user that contain at least one of the portals in Set P are determined, as shown by step . This results in a set of pages PA for that user that were modified by and that are potentially are of interest to the current user (CU), as shown by step . Each page in the set PA can be provided a \u201cscore\u201d that has been modified to reflect a degree of relationship existing between the current user CU and the user of Set U being analyzed, as shown by step . When each page for a current user is handled (step ), a next user (if any) of the Set U can be handled, shown by looping from step  back to step . The score calculated in step  can be cumulative, meaning that a score increases each time a user of Set U includes a related portlet in a modified user-specific page. When no more users exist in Set U, the method  can progress from step  to step .","Step  can rank the candidate portlets according to their calculated score (determined in step ). In step  the highest ranking portlets (top N, where N is a configurable number) can form a selected portlet set believed to be of interest to the current user (CU). The selected set of portlets can be dynamically and automatically added to the portlet palette, which can be presented to a user. Subsequent actions (not shown in ) can be taken that involve the portal palette and items included therein.","The diagrams in  illustrate the architecture, functionality, and operation of possible implementations of systems, methods, and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca,\u201d \u201can,\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
