---
title: Storage area network (SAN) device logical relationships manager
abstract: A method and apparatus for managing one or more logical relationships between a plurality of devices in a storage area network (SAN). The method includes receiving a first identifier associated with a first SAN device, determining the logical relationships associated with the first SAN device, receiving a second identifier associated with a second SAN device, and associating the second identifier to the logical relationships associated with the first SAN device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06839746&OS=06839746&RS=06839746
owner: Veritas Operating Corporation
number: 06839746
owner_city: Mountain View
owner_country: US
publication_date: 20030603
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","Embodiments of the present invention generally relate to storage management, and more particularly, to software used in storage management.","2. Description of the Related Art","In the past, large organizations relied heavily on parallel Small Computer System Interface (SCSI) technology to provide the performance required for their enterprise data storage needs. More recently, organizations are recognizing that the restrictions imposed by SCSI architecture are too costly for SCSI to continue as a viable enterprise storage solution. Such restrictions include the following:\n\n","One solution has been to create technology that enables storage arrays to reside directly in the network, where disk accesses may be made directly rather than through the server's SCSI connection. This network-attached storage (NAS) model eliminates SCSI's restrictive cable distance, signal timing, and termination requirements. However, this model adds a significant load to the network, which frequently is already starved for bandwidth. Gigabit Ethernet technology only alleviates this bottleneck for the short term, and thus, a more elegant solution is desirable.","The storage area network (SAN) model places storage on its own dedicated network, removing data storage from both the server-to-disk SCSI bus and the main user network. This dedicated network most commonly uses Fiber Channel technology, a versatile, high-speed transport. The SAN includes one or more hosts that provide a point of interface with local area network (LAN) users, as well as (in the case of large SANs) one or more fabric switches, SAN hubs and other devices to accommodate a large number of storage devices. The hardware (e.g. fabric switches, hubs, bridges, routers, cables, etc.) that connects workstations and servers to storage devices in a SAN is referred to as a \u201cfabric.\u201d The connectivity between a host and a storage device is typically defined as a route. The SAN fabric may enable server-to-storage device connectivity through Fiber Channel switching technology to a wide range of servers and storage devices. The versatility of the SAN model enables organizations to perform tasks that were previously difficult to implement, such as LAN-free and server-free tape backup, storage leasing, and full-motion video services.","Each SAN device, such as a host bus adapter, is generally tagged with a unique identifier, such as a world wide name (WWN), which is a 64-bit identifier. The identifier is generally burned on the device during manufacture. The identifier is generally used to assist with SAN management, including compartmentalization, authorization and securitization. The identifier is also used to associate the device with various logical relationships, such as zones and logical unit number (LUN) masks.","When a device fails and is replaced with a new device, the logical relationships associated with the failed device is modified or reconfigured with an identifier associated with the new device. This can be an arduous task for the user or system administrator, considering that the new identifier may have to be entered manually one digit at a time, each logical relationship may be with a different entity\/device, each entity\/device may be from a different vendor, and each vendor may require its own proprietary configuration tool or may require access through a proprietary application programming interface (API). For example, a host bus adapter (HBA) that is zoned with a BROCADED switch may only be configured using BROCADE's proprietary switch configuration tool or a tool based on Brocade's proprietary API's. Likewise, an HBA that is LUN masked with an EMC\u00ae array may only be configured using EMC's proprietary array configuration tool or a tool based on EMC's proprietary API's. In this manner, the user is required to use a number of different configuration tools to reconfigure the logical relationships with the new device identifier. As a result, modifying or reconfiguring logical relationships of the failed device with the new device identifier may become a tedious and error-prone task.","Therefore, a need exists for a method and apparatus to automatically modify the logical relationships of the failed device with the new device identifier.","The present invention is generally directed to a method of managing logical relationships between SAN devices, such as HBAs, switches, arrays, bridges and the like. The method is configured to receive a unique identifier of a first device and replicate the logical relationships of the first device to the second device. Logical relationships are generally defined to include zones, LUN masks, LUN bindings, virtual storage area networks (VSAN's), trunking ports and the like.","In one embodiment, the method is a software program that is invoked when the program receives an identifier associated with the first device. Upon receipt of the identifier, the program determines the logical relationships associated with the first device and prompts the user with the new unique identifier associated with the second device. Upon receipt of the new unique identifier of the second device, the program associates the new unique identifier to the logical relationships associated with the first device. The program may use a proprietary communication tool to associate the new unique identifier to the logical relationships. Subsequently, the identifier associated with the first device may be deleted from the logical relationships associated with the first device.","In another embodiment, the program may be stored in the SAN management server. In yet another embodiment, the program may be stored outside of the SAN management server and operates independently from the SAN management server.","While the invention is described herein by way of example for several embodiments and illustrative drawings, those skilled in the art will recognize that the invention is not limited to the embodiments or drawings described. It should be understood, that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed, but on the contrary, the intention is to cover all modifications, equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims. The headings used herein are for organizational purposes only and are not meant to be used to limit the scope of the description or the claims. As used throughout this application, the word \u201cmay\u201d is used in a permissive sense (i.e., meaning having the potential to), rather than the mandatory sense (i.e., meaning must). Similarly, the words \u201cinclude\u201d, \u201cincluding\u201d, and \u201cincludes\u201d mean including, but not limited to.",{"@attributes":{"id":"P-00021","num":"00021"},"figref":"FIG. 1","b":["100","100","100","102","102","102","104","110","102","150","150","106","142","126","102","102","150","104","110"]},"The SAN  may be based on a distributed client-server architecture. The SAN  may also be described as a high-speed, special-purpose network that interconnects storage devices  with associated data servers, e.g., hosts A, B and C, on behalf of a larger network of users. The SAN  may employ Fiber Channel technology. One or more end-user platforms (not shown) may access the SAN , typically via a LAN or WAN connection to one or more of the hosts .","Host A may be referred to as a central system, while hosts B and C may be referred to as remote systems. Each host includes at least one processor, e.g., CPU , which is electrically connected to a memory, e.g., memory . Memory  may comprise random access memory, read only memory, removable disk memory, flash memory, and various combinations of these types of memory. Memory  is sometimes referred to as main memory and may in part be used as cache memory or buffer memory. Memory  may store various software packages, such as a device logical relationships manager , which will be described in detail in the following paragraphs with reference to FIG. . Hosts A-C may run on any of a variety of operating systems, including Solaris 2.6, 7, 8, 9, etc.; Linux; AIX; HP-UX 11.0b, 11i, etc.; Microsoft Windows NT 4.0 (Server and Enterprise Server) and Microsoft Windows 2000 (Server, Advanced Server and Datacenter Editions). Each host  is typically connected to the SAN fabrics  via one or more HBAs. The SAN fabrics  may enable server-to-storage device connectivity through Fiber Channel switching technology and may include one or more switches  and other devices , such as bridges, hubs, routers, interconnecting cables (e.g., for Fiber Channel SANs, fiber optic cables) and the like. Storage devices  may include, but are not limited to, Redundant Array of Independent Disks (RAID) systems, disk arrays, JBOD's (Just a Bunch Of Disks, used to refer to disks that are not configured according to RAID), tape devices, LUN's and optical storage devices.","The SAN management server  is generally configured to discover SAN devices, such as hosts, HBAs, switches and storage devices, to maintain a data store of real-time object information, to manage SAN resources through zoning and logical unit number (LUN) access control, to monitor conditions on the SAN, and to perform policy-based actions in response to SAN conditions, to support user-defined and automatic grouping of objects based on quality of service (QoS) criteria, and to make data available to client applications, including the SAN manager . The SAN management server  may run on a variety of operating systems including, but not limited to Solaris 2.6, 7, 8, 9, etc.; Linux; AIX; HP-UX 11.0b, 11i, etc.; Microsoft Windows NT 4.0 (Server and Enterprise Server) and Microsoft Windows 2000 (Server, Advanced Server and Datacenter Editions).","In one embodiment, the SAN management server  includes the device logical relationships manager , which is generally configured to manage logical relationships between SAN devices, such as HBAs, switches, arrays, bridges, routers, and the like. In another embodiment, the device logical relationships manager  may be stored outside of the SAN management server . Each SAN device generally has one or more logical relationships with other devices. Examples of logical relationships include zones, LUN masks, LUN binding configurations, VSAN's, VLUN's, volume DMP settings and the like. The operation of the device logical relationships manager  will be described in detail later in the specification with reference to FIG. .","Zoning is a security mechanism that is utilized to control access between devices in a SAN fabric. By creating and managing zones, the user may control host access to storage resources. The access restrictions created by zones in the SAN are enforced by a number of methods. These methods include soft zoning and hard zoning. Soft zoning, also called advisory zoning, is enforced simply by filtering the visibility of devices in the SAN so that a device can only see other devices that share at least one zone membership with the device. In hard zoning, a Fiber Channel switch actively blocks access to zone members from any devices outside the zone. This is performed at the level of ports on the switch. Hard zoning may also be referred to as switch port zoning.","Some zoning methods support switch zoning through application program interfaces (APIs) provided by switch vendors, allowing for both hard and soft zoning. As such, the SAN manager  serves as a centralized point from which a user may access SAN management system and\/or third-party services, tools, applications, and\/or utilities to create and manage zones in the SAN, including zones containing heterogeneous SAN devices. Currently, no industry-wide standard exists for zoning, and different vendors' switches may implement switch zoning in different ways. Consequently, one method may use a switch-neutral approach to zoning. Another may provide a zone utility that facilitates the creation, modification, and deletion of zones. The zone utility provides storage zone definition, creation and management. The zone utility is used to administer zones directly and visually, thereby reducing or removing the need to use telnet commands or proprietary, hardware-specific Web-based solutions. The zone utility may also automatically filter the list of devices in the SAN and present a list of devices that are available to be added to a zone.","A LUN is the SCSI (Small Computer System Interface) identifier of a logical unit within a target, which is the system component that receives a SCSI I\/O command. A logical unit is an entity within a SCSI target that executes I\/O commands. SCSI I\/O commands are sent to a target and are executed by a logical unit within that target. A SCSI physical disk typically has a single logical unit. Tape drives and array controllers may incorporate multiple logical units to which I\/O commands can be addressed.","LUN security is the collective name given to the operations involved in making storage devices  available to hosts  on the SAN , and may include LUN locating or searching, LUN binding, LUN masking, and fabric zoning. LUN security provides granular control over a host's  access to individual LUN's within an array or other collection of potentially heterogeneous storage devices. LUN binding is generally defined as the creation of access paths between LUN's within a disk array and ports on the array. LUN masking is generally defined as enabling access to LUN's for host HBA ports. Fabric zoning is generally defined as allowing the host to see the Addressable Units and create a device handle for it.","The SAN management server  maintains a real-time topology of the SAN  by discovering devices in the SAN  and the logical relationship of these devices to each other. In addition, the SAN management server  directly interfaces with switches in the SAN fabrics  to manage the zoning of storage resources. In this manner, the SAN management server  discovers additional information about devices that the SAN management server  cannot discover directly, such as devices in a separate zone.","The SAN management server  may also include one or more explorers , which are configured to gather inform ation for the SAN management server . Once the information is gathered, the SAN management server  aggregates the gathered in formation into a data store. On ce the SAN  is discovered, the SAN management server  periodically examines the SAN  for devices that are added, devices that are removed, and connections that are pulled. New explorers may be added as needed or desired. For example, if a new type of SAN device is added to the SAN , or an existing type of SAN device is modified or upgraded, an explorer may be added or updated to correctly communicate with the new or updated type of SAN device.","Explorers  may use different methods to discover information about heterogeneous SAN devices. For example, explorers may query devices in the SAN  to retrieve a standard set of attributes for each type of device. The terms \u201cinformation\u201d and \u201cdetails\u201d may be used to describe the different kinds of data about a SAN that may be discovered, including SAN events, zone memberships, connectivity, storage faults, and the like. The term \u201cattributes\u201d refers to a subset of that larger body of information. Attributes are details that are particular to a type of device, such as a volume\u2014details such as its size, version, identification tags, name and quality of service. Attributes may also include other relationships such as those between file systems, volumes, disk groups, LUN's, storage enclosures, disks and quality of service.","Explorers  may be categorized into various types, including switch explorers, zoning explorers, disk array explorers, volume explorers, file system explorers, and HBA explorers. Volume and file system explorers are configured to discover volume and file system information, such as volume name, mount point, number of files present in the file system, total space, free space and used space. The management server explorer may use the Fiber Channel Common Transport (CT) protocol to communicate with switches in fabrics . The management server explorer may, for example, discover switches in-band over Fiber Channel, obtain switch characteristics, and\/or explore port connectivity. The management server explorer may optionally run over IP networks. For some switches, the management server explorer may run out-of-band. The management server explorer may also perform in-band zoning.","Zoning explorers are generally used as an interface for the SAN management server  to communicate with fabric switches to perform discovery and control of zones in the SAN . When users issue zoning commands, the SAN management server  uses a zoning explorer to contact the switch to perform the zoning operation. As such, zoning explorers may communicate with the switches out-of-band. The zoning explorers may complete transactions with a switch management server to discover zone names and attributes and to perform switch zoning commands.","HBA explorers are generally used to discover information about SAN-connected storage devices that are zoned to a host  that has a SAN management server  or a SAN management server agent stored therein. The HBA explorer interacts with a host  to discover HBAs and device paths. A device path is generally defined as a route through an interconnect that allows two or more devices to communicate. As such, an HBA explorer may not discover locally attached storage (e.g. disks or other devices attached through a SCSI or IDE controller). If these storage devices have device handles, then the HBA explorer may return LUN names and attributes. A device handle is typically used by the operating system to identify a storage resource (known as an Addressable Unit, or AU), and the correct methods (e.g. driver\/system call) to access the storage resource. If no device handles are available, then the HBA explorer may identify the device as a generic device (a block device attached to a port on the host).","Disk array explorers are generally used to provide information about array names and their attributes, such as number of ports and the number of disks contained in an array. Disk array explorers may also be used to discover disk arrays\/enclosures and their LUN's. In doing so, disk array explorers pass LUN management commands to the array's management interface to execute. Disk array explorers may discover LUN's that are not masked to discovered hosts. The SAN management server  may include disk array explorers specific to disk arrays of various vendors. Disk array explorers generally start when SAN management server  starts. The disk array explorers also check to see if host A has a management interface. If host A does not have the management interface, the corresponding explorer may be disabled. If the management interfaces are present, the explorers may determine if host A has access to any LUN's exported by the array. If any LUN's are available, the explorers may attempt to discover the array using the device handle of the LUN. Further, some disk array explorers may use an out-of-band network protocol, such as SNMP, to communicate directly with the disk array controller. IP addresses for each disk array may be supplied for SAN management server discovery and communication. Additionally, the SAN management server may communicate with a disk array through the array's management interface. The array vendor's management software is generally installed on a host A with an in-band connection to the arrays to be managed. The management software provides a unified interface\/command interpreter between the SAN management system and the arrays in the fabric.","Each remote system, e.g., hosts B or C, may have a SAN management server agent  to assist the SAN management server  in discovering the entire SAN . The SAN management server agent  generally includes one or more explorers . The explorers  may also include an out-of-band switch explorer. The SAN management server  and the SAN management server agent  may each include a set of one or more explorers that may be determined by the discovery requirements and\/or contents of the region of the SAN visible to the host A-C in which the SAN management server  or the SAN management server agent resides. The SAN management server agent  provides information gathered by explorers to SAN management server , which aggregates this information into the SAN management server  data store. The SAN management server  is typically configured to communicate with SAN management server agents using various protocols to get detailed information about a remote host, such as host B or C.","As mentioned above, the administration system  includes the SAN manager , which provides a central management interface for various SAN management tasks and provides a graphical user interface (GUI) for displaying the information (e.g., connectivity information between a host and a storage device) compiled by and received from the SAN management server  in graphical and\/or textual format. The SAN manager  may also provide a user interface for accessing various features of the SAN management system, such as tools and utilities. The SAN management tasks may include administering the SAN, viewing topographical displays of discovered devices in the SAN, accessing detailed information on components including devices attributes and connectivity, creating and modifying policies, administering access control through zoning and LUN security, monitoring SAN events including real-time alerts, allocating storage resources, generating and viewing inventory and performance reports, generating and viewing real-time and historical reports, and\/or launching utilities, tools and applications, which may include third-party management tools. The SAN manager  may run on any of a variety of end-user platforms coupled to the hosts , typically via a LAN or WAN, or alternatively may run on host A. Applications, such as a Web browser, may function as clients to SAN management server . More than one SAN manager  may connect simultaneously with SAN management server . Furthermore, the SAN  may include a command line interface that enables the user to query and modify SAN management server monitoring service objects, configuration settings and perform other related SAN management system tasks.","A detailed description of the operation of the device logical relationships manager  will now be described in the following paragraphs. The device logical relationships manager  may be invoked by the user for various reasons. For instance, the user may want to replace an existing SAN device with a new SAN device or another SAN device from the same host. Alternatively, the user may want one SAN device to have the same logical relationships of another SAN device.",{"@attributes":{"id":"P-00040","num":"00040"},"figref":"FIG. 2","b":["200","210","121","120"]},"Upon receipt of the identifier associated with the first device, the device logical relationships manager  retrieves all the logical relationships associated with HBA A (step ). The device logical relationships manager  may retrieve the logical relationships from the central database . The logical relationships may include all the zones and LUN masks to which the HBA A belong.","After the device logical relationships manager  retrieves all the logical relationships associated with HBA A, the device logical relationships manager  displays the logical relationships associated with the HBA A to the user (step ). In one embodiment, the user may be given the option to select all of the logical relationships or a portion thereof, i.e., only a portion of the zones and LUN masks listed in the logical relationships (step ). The device logical relationships manager  then prompts the user to enter a unique identifier of a second HBA configured to have the same logical relationships as HBA A (step ). In one embodiment, the device logical relationships manager  may present the user with a list of available HBA's from which the second HBA may selected. In step , the device logical relationships manager  receives the unique identifier of the second HBA. The second HBA may be a newly installed HBA or another HBA already connected to host A.","In step , the device logical relationships manager  adds the unique identifier of the second HBA to each zone and LUN mask selected from the logical relationships. In one embodiment, the device logical relationships manager  communicates with an array communication tool to add the unique identifier of the second HBA to the LUN mask membership list stored in the array's memory or database. The array communication tool is typically a proprietary piece of software configured to specifically update the LUN masking membership list of the array. As such, the device logical relationships manager  may communicate with different array communication tools to configure, modify, add or delete LUN masks from different vendors. In another embodiment, the device logical relationships manager  communicates with a switch communication tool to add the unique identifier of the second HBA to a zone membership list stored in the switch's memory or database. Like array communication tools, the switch communication tool is typically a proprietary piece of software configured to specifically to update the zone membership list of the switch. As such, the device logical relationships manager  may communicate with different switch communication tools to configure or modify switch zones of different vendors. The device logical relationships manager  may communicate with the array or switch communication tool through the SAN management server .","Since the size and variety of logical relationships associated with a particular SAN device may vary, using the device logical relationships manager  may save the user a significant amount of time. For example, rather than updating each LUN mask and zone from possibly different arrays and switches, the user may simply use the device logical relationships manager  to update the selected LUN masks and zones.","In step , the user is presented with a prompt as to whether the unique identifier of HBA A should be deleted or removed from the logical relationships associated with HBA A, e.g., whether the unique identifier of HBA A should be deleted from the zones\/LUN masks membership lists stored in each associated switch\/array. If the answer is in the affirmative, then the device logical relationships manager  communicates with the respective switch\/array communication tool to remove the unique identifier of HBA A from the zones\/LUN masks membership lists stored in the switch\/array (step ). The user generally chooses this option if the user desires to replace HBA A with another HBA, e.g., the second HBA.","On the other hand, if the user desires to copy the logical relationships associated with HBA A to the second HBA, e.g., for redundancy or high availability purposes as in a server cluster environment, the user will select an answer in the negative. In this manner, both HBA A and the second HBA are associated with the same logical relationships. If HBA A fails, the second HBA can take the place of HBA A since the second HBA is associated with the same logical relationships, thereby allowing the SAN  to continue to operate.","Although embodiments of the invention are described with reference to an HBA, embodiments of the invention contemplate other SAN devices, such as a switch or an array, or a port of those SAN devices. As an example, the device logical relationships manager  may receive a unique identifier of a first switch port and replicate the zone memberships of the first switch port to the second switch port. As another example, the device logical relationships manager  may receive a unique identifier of a first switch and replicate all the logical relationships with which the first switch is associated to a second switch similar to the first switch. As yet another example, the device logical relationships manager  may receive a unique identifier of a first array port and replicate the LUN masks of the first array port to a second array port.","While the foregoing is directed to embodiments of the present invention, other and further embodiments of the invention may be devised without departing from the basic scope thereof, and the scope thereof is determined by the claims that follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The following detailed description makes reference to the accompanying drawings, which are now briefly described.",{"@attributes":{"id":"P-00018","num":"00018"},"figref":"FIG. 1"},{"@attributes":{"id":"P-00019","num":"00019"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
