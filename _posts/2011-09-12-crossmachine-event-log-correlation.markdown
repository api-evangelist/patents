---
title: Cross-machine event log correlation
abstract: In computing environments having multiple computers, where such computers may comprise virtual machines, events are logged in association with corresponding activity identifiers. When a data packet associated with an activity is transferred to a destination machine, the activity identifier corresponding to the activity is transferred along with the data packet and used by the destination machine when logging its events. This allows events from the two machines to be correlated according to the activities to which they pertain.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08806005&OS=08806005&RS=08806005
owner: Microsoft Corporation
number: 08806005
owner_city: Redmond
owner_country: US
publication_date: 20110912
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Network communications and other computer input\/output (I\/O) operations are often implemented using multiple protocols. Low-level protocols typically interact with device hardware or transport media, and high-level protocols typically interact with software applications. A series of protocol processing components from lower-level protocols to higher-level protocols, is referred to as a protocol stack, and each component within the stack is referred to as a protocol layer. A data object such as an I\/O packet is typically passed serially through the layers of a protocol stack as it is transferred between an application and a physical transport mechanism.","As an example, a network communications protocol stack may include the following protocols and corresponding layers:",{"@attributes":{"id":"p-0004","num":"0003"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Protocol","Layer"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HTTP","Application"]},{"entry":[{},"TCP","Transport"]},{"entry":[{},"IP","Internet"]},{"entry":[{},"Ethernet","Link"]},{"entry":[{},"IEEE 802.3u","Physical"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"For purposes of debugging and troubleshooting, it is often useful to trace the progress of a single data packet through the protocol stack. Some operating systems allow the protocol layers to report or log events related to packet processing, and some operating systems may support repositories, APIs (application programming interfaces), reporting tools, and other central functionality to facilitate event reporting and logging.","Generally, each layer of the protocol stack is isolated from other layers of the stack. However, data packets passed between the layers may include so-called \u201cout-of-band\u201d data, in addition to the actual I\/O data. In order to trace a particular data packet through the protocol stack, an identifier may be associated with the data packet, and passed from layer to layer in the out-of-band data associated with the data packet. When logging an event, each layer reports the packet identifier to the logging system along with other information about the event. This allows reporting services to gather all logged events relating to a single packet, and to reconstruct a trace that shows how the packet is handled as it traverses the protocol stack. This method can be used with activities of various types, so that all events occurring within a protocol stack that are related to a single activity can be easily identified.","The increasing use of virtualization in computing environments has introduced challenges relating to diagnostics and troubleshooting. In a virtual computing environment, a single physical machine may host a number of virtual machines. Each machine, including the host machine and the virtual machines, may have its own operating system and implement its own protocol stacks. Furthermore, each of the protocol stacks may operate independently of other protocol stacks, and there is no convenient way to correlate the events reported from one protocol stack to those reported from another protocol stack.","This disclosure describes methods of reporting, event logging, and inter-machine communications that allow activity-related events to be traced through the protocol stacks of multiple computers, which may include both physical machines and virtual machines. A data packet associated with a particular activity is associated with one or more activity identifiers. The activity identifiers are in turn associated with any events that are reported or logged in conjunction with the activity. When the data packet is transferred from one machine to another or from one protocol stack to another, an activity code is attached to the data packet by the originating protocol stack, and used or reported by the protocol stack of the recipient protocol stack when logging events.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 1","FIG. 1"],"b":["100","102","102"]},"Each host  may implement one or more virtual machines () and (). Similar components of the two illustrated virtual machines  within each host  are shown with the same reference numerals, differentiated by the suffixes (a) and (b). Components of the first virtual machine () are shown in each example with the appended suffix (a). Components of the second virtual machine () are shown in each example with the appended suffix (b). The suffixes may be omitted at times in the following discussion for ease of discussion, when referring to either or both referenced components.","Each virtual machine  has an independent operating system (not shown), which implements a protocol stack . The virtual machine  and\/or its operating system may also implement a logging system , to which various different components of the virtual machine  may report events that may be of interest to analysts. Different types of errors may be reported by the components, as well as other types of events.","One or more applications  may be executed by each of the virtual machines . The term \u201capplication\u201d in this environment refers to a high-level component that executes within the virtual machine  and that is a consumer and\/or producer with respect to the protocol stack . The application  may interact with the upper level of the protocol stack  to send and receive data packets or other I\/O. The application  may utilize the logging system  to report errors and events.","The host  also has an operating system (not shown) which implements various functionality to support the operations of its virtual machines , including various I\/O protocol stacks for facilitating communications between both virtual machines and other physical machines. As a relevant example, the host  may implement a virtual network switch , which may use one or more protocol stacks to emulate the function of a physical network switch and to provide communications with the virtual machines  of the host . The lowest-level protocol layer of the virtual machine protocol stack  communicates with the virtual switch  to pass data packets between the virtual machine  and the host . The virtual switch  may also facilitate communications with other physical machines and\/or hosts, using the same or additional protocol stacks. In some implementations, a data packet may be communicated through multiple protocol stacks implemented by a single machine such as the host .","The host  and\/or its operating system may maintain their own logging system . The virtual switch  and other executable components of the host  may report errors and other processing events to the host logging system .","Within each of the hosts , an example flow of a data packet  is illustrated by solid lines, with arrow heads indicating the direction of data transfer. The example assumes that a packet  originates within a first of the virtual machines () and is transferred to a second of the virtual machines () through the virtual switch  of the host . More specifically, the application () of the first machine () generates the packet  and submits the packet to the protocol stack (). The protocol stack () processes the data packet  through its protocol layers and then transfers the data packet  to the virtual switch  along with an activity identifier (AID) .","The virtual switch  of the host  receives the data packet  and associated activity identifier  and performs various processing using the layers of one or more protocol stacks that are implemented within the host . The activity identifier  (or a related activity identified as described below) remains associated with the data packet  during this processing. Eventually, the virtual switch  transmits the packet  and the activity identifier  to the protocol stack () of the virtual machine . The protocol stack () processes the packet  and eventually provides it to the application ().","Data may be transferred between the two hosts  in the same manner, using appropriate network protocols over a physical communications network. When transferring the data packet  between hosts, the activity identifier  may be associated and transmitted with the packet to correlate activities between the hosts  and their virtual machines . For example, the activity identifier  may be associated with the data packet  as it is transferred from the virtual machine of one host to the virtual machine of another host.","Dashed lines in  indicate logging activities and communications. During processing of the packet , the individual layers of the protocol stack () report relevant events to the logging system (), and the individual layers of the protocol stack () report relevant events to the logging system (). Similarly, components or protocol layers of the virtual switch  report events to the logging system  of the host .","When an event relating to the processing of the data packet  is reported to any of the logging systems  and , the event specifies the activity identifier  that has been associated with the data packet .","A reporting system  may be used by administrators and\/or technicians to analyze the processing of the packet  as it traverses the protocol stacks of the two virtual machines . The reporting system  may be implemented by one of the virtual or physical machines described above, or by an independent computer or machine. The reporting system  has access to the logging systems  of the virtual machines  and to the logging system  of the host , and can therefore obtain descriptions of events that have been logged from the virtual machines  and\/or the host .","Events can be filtered by their activity identifiers  to gather events related to a single activity or data transfer. In addition to identifying and correlating events relating to common activities, the reporting system  may prepare time-based reports, indicating chronologies of processing events that have occurred in various machines with respect to individual data packets or to various types of activities.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 2","FIG. 1","FIG. 1","FIG. 2"],"b":["202","204","104","102","202","204","1","2","3","4"],"i":"a"},"The first protocol stack  receives a data packet  at the highest protocol layer, which in this example is Layer . Each of the processing layers may be an independent processing component. Intermediate layers receive the packet  from the next higher layer, and pass it on to the next lower layer until reaching the lowest layer, which is Layer  in this example. The lowest layer is typically at the physical media layer, and communicates with a corresponding layer of another protocol stack over a physical media. In this case, Layer  of the first protocol stack  communicates with Layer  of the second protocol stack .","In certain embodiments, each layer of the protocol stacks  and  is configured to associate an activity identifier  with the packet . The activity identifier may be a GUID (globally unique identifier) or other code that is unique for each different packet that is processed by the protocol stacks.","The first layer to receive the packet  (Layer  of stack  in this example) may create the activity identifier  and provide an initial association of the activity identifier  with the packet . When passing the packet to a subsequent layer of the same protocol stack, the activity identifier may also be transferred, such by including the activity identifier in out-of-band data associated with the data packet . For example, a protocol stack may utilize memory buffers for storing data packets, and portions of the buffers may be used for storing activity identifiers.","As each layer of the first protocol stack  executes, it may communicate with an event logging system . The event logging system  may be maintained by the operating system or other component of the machine upon which the protocol stack  is implemented, and may be accessible through standardized and published APIs (application programming interfaces). Each layer may report various types of events , including errors, processing exceptions, and diagnostic information.","When a layer of the first protocol stack  reports an event  relating to the packet , it also reports the activity identifier  that has been associated with the packet . The event logging system  receives the event , including the associated activity identifier , and stores an event description in an event log . The stored event description includes the activity identifier .","At some point the packet  is passed from Layer  of the first protocol stack  to Layer  of the second protocol stack . This transfer between machines may be performed using different inter-machine protocols, such as NDIS (Network Driver Interface Specification), RNDIS (Remote Network Driver Interface Specification), ODI (Open Data-Link Interface), UDI (Uniform Driver Interfaced), GRE (Generic Routing Encapsulation), and so forth.","RNDIS is an example of a protocol that may be used at Layer  for transfer between a host machine and a virtual machine. When using RNDIS, the activity identifier  may be included as a label\/value pair within the RNDIS payload.","GRE is an example of a protocol that may be used at Layer  for transfer between two physical machines, such as between a host machine and another physical machine or between two host machines. When using GRE, the activity identifier  may be embedded in an otherwise unused data field defined by the GRE specification. For example, the 32-bit \u201cKey\u201d or \u201cSequence Number\u201d fields, specified by the GRE specification as part of the packet header, may be used to store the activity identifier  during transmission of the packet  from one physical machine to another.","After receiving the data packet , the second protocol stack  functions in the same way as the first protocol stack . As each layer of the second protocol stack  executes, it may communicate with an event logging system  maintained by the operating system or other component of the machine upon which the protocol stack  is implemented.","When a layer of the second protocol stack  reports an event  relating to the packet , it also reports the activity identifier  that has been associated with the packet . The event logging system  receives the event , including the associated activity identifier , and stores an event description in an event log . The stored event description includes the activity identifier .","Each layer of the protocol stacks  and  may simply pass the same activity identifier  to subsequent stack layers. That is, a common activity identifier may be assigned to the data packet by each of the stack layers of the protocol stacks  and . Alternatively, in some embodiments, any stack layer may assign a new activity identifier  to the data packet . In this case, the stack layer may report the assignment of the new activity identifier  to the logging system  or , along with the previously assigned activity identifier . This allows the logging systems  and  to track the assignment of activity identifiers by the different processing components of the protocol stacks, and to thereby identify related activity identifiers. The event logging systems  and  may in some embodiments create mappings of related activity identifiers so that event reporting tools may examine the mappings to determine which reported events relate to the same data packets or activities.","The reporting system or tool  may be used by analysts to view system behavior, and in particular to troubleshoot any failures in the handling of the data packet . The reporting system  may examine the event logs  and  produced by the logging systems  and  to find any events relating to a particular data packet. Events relating to a particular packet may be identified by referencing their activity identifiers. In some embodiments, all events relating to a particular data packet or activity will have the same activity identifier. In other environments, the reporting system  may refer to identifier mappings produced by the logging systems  and , to identify different activity identifiers that have been used in conjunction with a certain packet or activity, and may then find those events having the different but related activity identifiers. Furthermore, in situations in which an activity traverses more than two machines, the activity identifiers can be propagated and tracked through all of such machines, and the reporting system or tool  may generate an activity trace that includes logged events from any number of different machines, including both virtual and physical machines.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIGS. 3A and 3B","FIG. 3A","FIG. 3B","FIG. 2"],"b":["202","204"]},"An action  comprises communicating the data packet  through the first protocol stack  and performing protocol-specific processing within each layer of the first protocol stack . As noted above, the first protocol stack  is implemented by a first machine, which may be either a virtual machine host, a virtual machine, or an independent physical machine. The action  comprises a set of actions that are performed for each of a series of processing components or layers of the first protocol stack , in addition to the protocol-specific processing performed by each processing component of the protocol stack .","An action  comprises receiving the data packet  and any activity identifier that has previously been associated with the data packet . If the currently executing stack processing component is at the highest level of the protocol stack , the data packet  may be received without a pre-existing activity identifier.","An action  comprises assigning an activity identifier  to the data packet  or to the activity with which the data packet is associated. If the activity identifier  has already been associated with the data packet  and received in the action , the same activity identifier  may be assigned in the action . Alternatively, a new activity identifier  may be created and assigned, and the creation and association of the new activity identifier may be reported to the logging system  of the first machine. In some embodiments, the packet  may be received with an existing activity identifier, and the processing component may nevertheless assign a new activity identifier to the packet . In this case, the processing component reports both the pre-existing activity identifier and the newly assigned activity identifier to the logging system , so that the logging system  can maintain a mapping or mappings of various activity identifiers that have been assigned to the processing of the data packet  by the different processing components of the protocol stacks.","An action  comprises reporting one or more events  to the logging system  of the first machine, wherein the reported events  relate to processing of the data packet  by the processing components of the first protocol stack . The activity identifier  is associated with each event  and reported along with the event . Other data may also be reported, such as descriptions, codes, timestamps, processor IDs, thread IDs, and so forth.","An action  comprises transmitting or providing the processed data packet  to the next processing component of the protocol stack . The activity identifier  is associated and included with the packet  as it is passed to the next processing component. The dashed flow lines of  indicate the possible repetition of the actions within the block , for subsequent layers of the protocol stack . This repetition repeats until the data packet has reached the lowest level of the first protocol stack .","After the packet  has been processed by the last or lowest-level layer of the protocol stack , an action  comprises transmitting the data packet  and associated activity identifier  to the second machine, or to the second protocol stack  of the second machine. The action  may be performed by the last or lowest-level layer of the protocol stack , such as by the Layer  of the protocol stack .",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 3B","b":["206","208","204","314","206","208","204","1","204"]},"An action  comprises communicating the data packet  through the second protocol stack  and performing protocol-specific processing within each layer of the second protocol stack . The second protocol stack  is implemented by a second machine, which may be either a virtual machine host, a virtual machine, or an independent physical machine. The action  comprises a set of actions that are performed for each of a series of processing components or layers of the second protocol stack , in addition to the protocol-specific processing performed by each processing component of the protocol stack .","An action  comprises receiving the data packet  and any activity identifier  that has previously been associated with the data packet . An action  comprises assigning an activity identifier  to the data packet  or to the activity with which the data packet is associated. The activity identifier  assigned here may be the same identifier that has already been associated with the data packet  and received in the action . Alternatively, a new activity identifier  may be created and assigned, and the creation and association of the new activity identifier may be reported to the logging system  of the second machine. In this case, the processing component reports both the pre-existing activity identifier and the newly assigned activity identifier to the logging system , so that the logging system  can maintain a mapping of various activity identifiers that have been assigned to the processing of the data packet  by the different processing components of the protocol stack .","An action  comprises reporting one or more events  to the logging system  of the second machine, wherein the reported events  relate to processing of the data packet  by the processing components of the second protocol stack . The activity identifier  is associated with each event  and reported along with the event .","An action  comprises transmitting or providing the processed data packet  to the next processing component of the protocol stack . The activity ID  is associated and included with the packet  as it is passed to the next processing component. The dashed flow lines of  indicate the possible repetition of the actions within the block , for subsequent layers of the protocol stack . This repetition repeats until the data packet has reached the highest level of the second protocol stack , at which point the packet  is delivered to its recipient application.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 4","FIG. 4","FIGS. 1 and 2"],"b":"120"},"An action  comprises examining event logs from multiple machines, such as the event logs  and  shown in . As described above, the event logs specify events and corresponding activity identifiers. The activity identifiers correlate events to other events, and to specific data packets or activities to which the events relate.","An action  comprises identifying multiple events from the multiple machines that relate to a particular activity, by referencing the activity identifiers corresponding to the events in the event logs . More particularly, the reporting system  may locate all events having a common activity identifier. In other embodiments, the reporting system  may locate events having related activity identifiers. In order to identify related activity identifiers, the reporting system may examine one or more mappings that have been maintained by the logging systems  and .","An action  comprises producing an activity trace  based at least in part on the identified events that relate to the particular activity. The activity trace  may indicate all events relating to a particular activity or data packet, along with other information such as timelines, chronologies, packet payloads, descriptions, error messages, and other troubleshooting information.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 5","b":["500","102","500","500","120"]},"The computer  may comprise one or more processors  and computer-readable memory . The logging and reporting techniques described above may be implemented as software residing within the computer-readable memory, such as one or more programs, modules, or routines, comprising sets or sequences of instructions that reside in the memory  for execution by the one or more processors . As high-level examples, the memory may contain virtualization support software  for supporting the operation of multiple  virtual machines within the computer . The memory  may also contain logging and\/or reporting software  to support the logging and reporting functionality described above.","The memory  is an example of computer-readable media. Computer-readable media includes at least two types of computer-readable media, namely computer storage media and communications media.","Computer storage media includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules, or other data. Computer storage media include, but are not limited to, phase change memory (PRAM), static random-access memory (SRAM), dynamic random-access memory (DRAM), other types of random-access memory (RAM), read-only memory (ROM), electrically erasable programmable read-only memory (EEPROM), flash memory or other memory technology, compact disk read-only memory (CD-ROM), digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other non-transmission medium that can be used to store information for access by a computing device.","In contrast, communication media may embody computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave, or other transmission mechanism. As defined herein, computer storage media does not include communication media.","The computer  may also have input\/output facilities  such as network interfaces, user interfaces, and so forth.","Software used to implement the techniques described above may reside in the memory  as shown, and\/or may also be stored and distributed in various ways and using different means, such as by storage on different types of computer-readable memory , including portable and removable media. The software may also be distributed by transmission from a repository, using a data network or other types of data computer communication systems.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The detailed description is set forth with reference to the accompanying figures. In the figures, the left-most digit(s) of a reference number identifies the figure in which the reference number first appears. The use of the same reference numbers in different figures indicates similar or identical items.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
