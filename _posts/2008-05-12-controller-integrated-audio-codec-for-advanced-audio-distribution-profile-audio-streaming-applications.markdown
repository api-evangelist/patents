---
title: Controller integrated audio codec for advanced audio distribution profile audio streaming applications
abstract: A novel and useful apparatus for and method of integrating the advanced audio distribution profile (A2DP) audio codec into a Bluetooth controller for audio streaming applications. The mechanism functions to break the prior art Bluetooth protocol stack by integrating a profile packet composer into the controller. The profile/stack control signaling is performed by the host while the profile data packet composer is implemented in the controller. The integrated data packet composer does not break the data path and flow control over the standard HCI. Further, the integrated packet composer allows the controller to open a dedicated data interface for specific applications (e.g., PCM/I2S for audio data).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08224247&OS=08224247&RS=08224247
owner: Texas Instruments Incorporated
number: 08224247
owner_city: Dallas
owner_country: US
publication_date: 20080512
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["REFERENCE TO PRIORITY APPLICATION","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","Advanced Audio Distribution Profile (A2DP)","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","Notation Used Throughout","DETAILED DESCRIPTION OF THE INVENTION","Mobile Device Incorporating the Controller Integrated Audio Codec","Controller Integrated Audio Codec for A2DP","A2DP over PCM Data Flow","Flow Sequence","State Machine"],"p":["This application claims priority to U.S. Provisional Application Ser. No. 60\/938,399, filed May 16, 2007, entitled \u201cAudio and Voice ASD\u201d, incorporated herein by reference in its entirety.","The present invention relates to the field of data communications and more particularly relates to a controller integrated audio codec for advanced audio distribution profile (A2DP) audio streaming applications.","Currently, there is huge demand for converged mobile devices which combine data and telephony capabilities. Technological advances such as extremely low power consumption, improvements in form factor, pricing and co-existence technology for 802.11 (WLAN) and Bluetooth are fueling the demand.","Wireless communication devices such as WLAN and Bluetooth devices are generally constrained to operate in a certain frequency band of the electromagnetic spectrum. The use of frequency bands is licensed by government regulatory agencies, for example, the U.S. Federal Communications Commission (FCC) and the European Radio Communications Office. Licensing is necessary in order to prevent interference between multiple broadcasters trying to use the same frequency band in an area.","Regulatory agencies also specify frequency bands for devices that emit radio frequencies, where licensing is not required. Wireless communication devices using these unlicensed frequency bands generally transmit at low power over a small area. The Industrial, Scientific, or Medical equipment (ISM) band is one such frequency band located between 2.4 and 2.5 GHz. This 2.4 GHz band is used by many wireless communication devices for data and\/or voice communication networks.","An example of such a network is defined by the Bluetooth specification. Bluetooth specifies communication protocols for low cost, low power wireless devices that operate over a very small area, the so-called, personal area network. These wireless devices may include, for example, telephone headsets, cell phones, Internet access devices, personal digital assistants, laptop computers, etc. The Bluetooth specification effectively replaces cables used to connect communicating devices, for example, a cell phone and a headset, with a wireless radio link to provide greater ease of use by reducing the tangle of wires frequently associated with personal communication systems. Several such personal communication devices may be wirelessly linked together by using the Bluetooth specification, which derives its name from Harald Blatand (Blatand is Danish for Bluetooth), a 10th century Viking king who united Denmark and Norway.","Bluetooth is an industrial specification for wireless personal area networks (PANs). Bluetooth provides a way to connect and exchange information between devices such as mobile phones, printers, PCs, laptops, and other digital equipment, over a secure, globally unlicensed short-range radio frequency (RF).","Bluetooth is a radio standard and communications protocol primarily designed for low power consumption, with a short range based on low-cost transceiver integrated circuits (ICs) in each device. Bluetooth networks enable these devices to communicate with each other when they are in range.","Bluetooth capability is increasingly built-in to many new products such as phones, printers, modems and headsets. Bluetooth is appropriate for situations when two or more devices are in proximity to each other and do not require high bandwidth. Bluetooth is most commonly used with phones and hand-held computing devices, either using a Bluetooth headset or transferring files from phones\/PDAs to computers.","Bluetooth also simplified the discovery and setup of services, in contrast to WLAN which is more analogous to a traditional Ethernet network and requires configuration to set up shared resources, transmit files, set up audio links (e.g., headsets and hands-free devices), whereas Bluetooth devices advertise all the services they provide; thus making the service more accessible, without the need to worry about network addresses, permissions, etc.","Because Bluetooth devices operate in the unlicensed 2.4 GHz RF band, they are subject to radio interference from other wireless devices operating in the same frequency band. To avoid RF interference, the Bluetooth specification divides the 2.4 to 2.5 GHz frequency band into 1 MHz-spaced channels. Each channel signals data packets at 1 Mb\/s, using a Gaussian Frequency Shift Keying modulation scheme. A Bluetooth device transmits a modulated data packet to another Bluetooth device for reception. After a data packet is transmitted and received, both devices retune their radio to a different 1 MHz channel, effectively hopping from radio channel to radio channel, i.e., frequency-hopping spread spectrum (FHSS) modulation, within the 2.4 to 2.5 GHz frequency band. In this way, Bluetooth devices use most of the available 2.4 to 2.5 GHz frequency band and if a particular signal packet transmission\/reception is compromised by interference on one channel, a subsequent retransmission of the particular signal packet on a different channel is likely to be effective.","Bluetooth devices operate in one of two modes: as a Master device or a Slave device. The Master device provides a network clock and determines the frequency hopping sequence. One or more Slave devices synchronize to the Master's clock and follow the Master's hopping frequency.","Bluetooth is a time division multiplexed system, where the basic unit of operation is a time slot of 625 microsecond duration. The Master device first transmits to the Slave device during a first time slot of 625 microseconds with both devices tuned to the same RF channel. Thus, the Master device transmits and the Slave device receives during the first time slot. Following the first time slot, the two devices retune their radios, or hop, to the next channel in the frequency hopping sequence for the second time slot. During the second time slot, the Slave device must respond whether it successfully understood, or not, the last packet transmitted by the Master during the first time slot. The Slave device thus transmits and the Master device receives during the second time slot. As a Slave device must respond to a Master's transmission, communication between the two devices requires at a minimum two time slots or 1.25 milliseconds.","Data packets, when transmitted over networks, are frequently susceptible to delays by, for example, retransmissions of packets caused by errors, sequence disorders caused by alternative transmission pathways, etc. Packet delays do not cause much of a problem with the transmission of digital data because the digital data may be retransmitted or re-sequenced by the receiver without effecting the operation of computer programs using the digital data. Packet delays or dropped packets during the transmission of voice signals, however, can cause unacceptable quality of service.","The Bluetooth specification version 1.1 provides a Synchronous Connection Oriented (SCO) link for voice packets that is a symmetric link between Master and Slave devices with periodic exchange of voice packets during reserved time slots. The Master device transmits SCO packets to the Slave device at regular intervals, defined as the SCO interval or T, which is counted in time slots. Bandwidth limitations limit the Bluetooth specification to a maximum of three SCO links. Therefore, the widest possible spacing for an SCO pair of time slots, which are sometimes called a voice slot, is every third voice slot. Bluetooth specification version 1.2 provides enhanced SCO links, i.e. eSCO links, which have a larger voice slot size, based on N*625 microsecond time slots, with larger and configurable intervals between voice slots. These eSCO links can be used for both voice or data applications.","The Bluetooth Advanced Audio Distribution Profile (A2DP) defines the protocols and procedures that realize distribution of audio content of high-quality in mono or stereo on ACL channels. The term \u201cadvanced audio\u201d, is distinguished from \u201cBluetooth audio\u201d, which indicates distribution of narrowband voice on SCO channels. A typical usage case is the streaming of music content from a stereo music player to headphones or speakers. As music playback becomes more and more common is almost every wireless terminal, the Bluetooth audio streaming feature via A2DP needs to be implemented in each platform.","A block diagram illustrating an example prior art Bluetooth based audio system is shown in . The system, generally referenced , comprises a storage device  for storing music and audio files, mobile terminal host processor  with MP3 decoder , analog codec  and headset or headphones . The host processor receives MP3 files (or other audio file format) from the storage device and decodes their contents using the MP3 decoder. Analog audio is generated by the analog codec from the decoded audio output from the host processor.","The audio data is compressed in a proper format for efficient use of the limited bandwidth. Note that the A2DP focuses on audio streaming, while the Video Distribution Profile (VDP) specifies video streaming. Support of both profiles enables the distribution of video content accompanied with high-quality audio. The source role of the A2DP must support Low Complexity Subband Codec (SBC) encoding of audio data, which is a significant consumer of processor resources.","A diagram illustrating the prior art Bluetooth A2DP audio streaming protocol model is shown in . A2DP is the Bluetooth profile for wireless audio headphone enabled audio streaming applications. It uses the Logical Link Control and Adaptation Protocol (L2CAP) and Audio\/Video Data Transport Protocol (AVDTP) protocols. L2CAP is the Bluetooth standard data multiplexer layer and AVDTP is used on top of L2CAP.","The system, generally referenced , comprises a server (SRC) side  and client (SNK) side . Each side comprises a physical layer , data link layer  and application layer  (i.e. audio SRC on the server side and audio SNK on the client side). The basebands of each side are coupled via PHY link . A logical data link  connects the LMP  and L2CAP  protocols in the data link layer. Similarly, logical link  conveys audio\/video signaling while logical link  conveys audio\/video streaming media between the Audio\/Video Distribution Transport Protocol (AVDTP)  on each side of the link.","A block diagram illustrating an example prior art host and Bluetooth controller A2DP audio streaming implementation in more detail is shown in . The system, generally referenced , comprises a storage device , mobile terminal host processor , Bluetooth controller  and Bluetooth headset . The controller  comprises HCI  and radio  coupled to antenna . The host processor  comprises MP3 decoding  and Bluetooth stack and profiles . The stack and profiles comprise A2DP setup and control , SBC encoding , AVDTP framing , L2CAP packaging  and host controller interface (HCI) .","In operation, audio from the MP3 decoder is encoded by the SBC encoder block . Audio and control signaling are exchanged between the host processor and the controller via audio and control path . The audio is sent to the headphones over the air from the radio in the controller.","In most headsets, the standard Bluetooth host controller interface (HCI) is used as the interface between the host and the Bluetooth controller wherein (1) L2CAP and AVDTP are implemented in the host software; (2) the audio streaming is handled over the HCI interface; and (3) the Bluetooth host software is responsible for encoding the A2DP audio stream and packaging it into AVDTP and L2CAP packets.","A block diagram illustrating the Bluetooth core system architecture is shown in . The system, generally referenced , comprises Bluetooth controller  and L2CAP layer . The controller comprises several layers including radio payer  with RF block , baseband layer  with link controller  and baseband resource manager , link manager layer  with link manager  and device manager  and HCI . The baseband resource manager handles synchronous unframed traffic and communicates with the L2CAP resource manager  in the L2CAP layer  and the link manager which communicates with the channel manager . The L2CAP layer  handles asynchronous and isochronous framed traffic.","The standard A2DP implementation, however, requires audio transcoding, usually from a popular audio format such as MP3 to SBC. The SBC encoder requirements are approximately 15 MIPS. In addition, support of Bluetooth audio headphone applications is required in low end handsets, which typically have limited processing power. Thus, integration of Bluetooth audio streaming applications into these handsets is very complex and results in numerous limitations on supported use cases.","Therefore, there is a need for a mechanism that enables the implementation of Bluetooth A2DP audio streaming in devices such as low end handsets having limited processing power. The mechanism also should reduce the processing power required by the host processor and enable the support of advanced use cases in the handset. Further, the mechanism should simplify the integration of Bluetooth audio streaming applications into handset platforms and reduce the integration effort on a per platform basis.","The present invention is a novel and useful apparatus for and method of integrating the advanced audio distribution profile (A2DP) audio codec into a Bluetooth controller for audio streaming applications. The mechanism functions to break the prior art Bluetooth protocol stack by integrating a profile packet composer into the controller. The profile\/stack control signaling is performed by the host while the profile data packet composer is implemented in the controller. The integrated data packet composer does not break the data path and flow control over the standard HCI. Further, the integrated packet composer allows the controller to open a dedicated data interface for specific applications (e.g., PCM\/I2S for audio data).","In similar fashion, partitioning can also be adapted to the SNK side of A2DP, reducing the required processing power of the host and enabling smoother integration. For the SNK implementation, a similar partitioning and associated mechanism is used on the SNK side as is used on the SRC side. On the SNK side, the controller integrates the receive packets over the air, parses them and sends the data over the dedicated data interface (e.g., PCM\/I2S for audio data).","The invention helps to support the rapid increase in wireless platforms that are required to support high quality audio streaming capabilities. In order to provide such capabilities, the source role of the A2DP must support Low Complexity Subband Codec (SBC) encoding of audio data, which is a significant consumer of processor resources. The controller integrated audio codec of the present invention enables off-loading the host CPU (HCPU) in A2DP source role implementation by performing the SBC encoding internally in the Bluetooth device. All the data path processing of the A2DP profile is performed by the Bluetooth controller, while the signaling channel remains and control functions are performed by the HCPU.","Although the mechanism of the present invention can be used in numerous types of communication systems, to aid in illustrating the principles of the present invention, the description of the controller integrated A2DP audio codec mechanism is provided in the context of a Bluetooth radio enabled communication device such as a cellular phone.","Although the coexistence mechanism of the present invention can be incorporated in numerous types of Bluetooth enabled communication devices such a multimedia player, cellular phone, PDA, etc., it is described in the context of a cellular phone. It is appreciated, however, that the invention is not limited to the example applications presented, whereas one skilled in the art can apply the principles of the invention to other communication systems as well without departing from the scope of the invention.","Several advantages of the controller integrated A2DP audio codec mechanism of the present invention include (1) the enablement of Bluetooth audio streaming applications in low end phones with limited processing power; (2) reducing the processing power required on the host processor to implement A2DP audio streaming; (3) enabling support of advanced use cases in the handset; (4) easing the integration of Bluetooth audio streaming applications into headset platforms; and (5) reducing the integration effort required per platform.","Note that some aspects of the invention described herein may be constructed as software objects that are executed in embedded devices as firmware, software objects that are executed as part of a software application on either an embedded or non-embedded computer system such as a digital signal processor (DSP), microcomputer, minicomputer, microprocessor, etc. running a real-time operating system such as WinCE, Symbian, OSE, Embedded LINUX, etc. or non-real time operating system such as Windows, UNIX, LINUX, etc., or as soft core realized HDL circuits embodied in an Application. Specific Integrated Circuit (ASIC) or Field Programmable Gate Array (FPGA), or as functionally equivalent discrete hardware components.","There is thus provided in accordance with the invention, a method of encoding streaming audio in a controller coupled to a communications channel, the method comprising the steps of receiving audio streaming data from a host system, encoding the audio streaming data to generate encoded audio data therefrom and assembling transmit packets incorporating the encoded audio data for transmission over the communications channel.","There is also provided in accordance with the invention, a method of encoding streaming audio in a Bluetooth controller, the method comprising the steps of receiving pulse code modulated (PCM) format audio streaming data from a host system utilizing a host control application programming interface (API), encoding the PCM audio streaming data to subband codec (SBC) format and generating transmit packets incorporating the SBC encoded audio data for transmission over a Bluetooth link.","There is further provided in accordance with the invention, a Bluetooth subband codec (SBC) encoder comprising a host interface operative to receive a pulse code modulated (PCM) format input audio data stream from a host system, a SBC codec operative to encode the PCM audio data stream into SBC format and a profile data packet composer operative to encapsulate the SBC formatted audio data stream to generate Bluetooth transmit packets therefrom.","There is also provided in accordance with the invention, a single chip Bluetooth controller comprising a Bluetooth radio for establishing a link to a remote device, a host interface operative to receive a pulse code modulated (PCM) format input audio data stream from a host system, an audio encoder operative to encode the audio data stream into subband codec (SBC) format and a profile data packet composer operative to encapsulate the SBC formatted audio data stream to generate Bluetooth packets therefrom for transmission by the Bluetooth radio over the link to the remote device.","There is further provided in accordance with the invention, a software program product embodied in a computer-readable medium, comprising program instructions executable to implement a host interface for receiving pulse code modulated (PCM) format audio streaming data from a host system utilizing a host control application programming interface (API), an encoder operative to encode the PCM audio streaming data to subband codec (SBC) format and a profile data packet composer operative to encapsulate the SBC formatted audio data stream to generate transmit packets therefrom for transmission over a communications link to a remote device.","There is also provided in accordance with the invention, a software program product embodied in a computer-readable medium, comprising program instructions executable to implement a host control application programming interface (API) and wherein the API defines a plurality of commands for controlling and configuring a Bluetooth controller comprising an interface for receiving a pulse code modulated (PCM) audio data stream from a host system, an encoder for generating subband coding (SBC) formatted audio data and a profile data packet composer operative to encapsulate the SBC formatted audio data to generate Bluetooth packets therefrom.","There is further provided in accordance with the invention, a method of communicating between an application layer in a host system and a single chip Bluetooth controller incorporating an audio streaming codec and profile data packet composer, the method comprising the steps of opening an advanced audio distribution profile (A2DP) signaling and data channel, wherein data channel processing is performed by the Bluetooth controller while control functions and associated signaling channel are performed by the host system, opening an A2DP stream between the host system and the Bluetooth controller, configuring a plurality of subband codec (SBC) format encoder parameters, the SBC encoder integrated within the Bluetooth controller, starting the A2DP stream and receiving pulse code modulated (PCM) audio data, encoding the PCM audio data to SBC formatted audio data and composing Bluetooth transmit packets encapsulating the SBC formatted audio data.","There is also provided in accordance with the invention, a computer implemented method for processing pulse code modulated (PCM) audio streaming data in a Bluetooth controller, comprising receiving PCM audio streaming data from a host system utilizing a host control application programming interface (API), wherein the host control API defines a plurality of commands for controlling and configuring a Bluetooth controller, the controller comprising an integrated interface for receiving the PCM audio data stream from a host system, an integrated encoder for generating subband coding (SBC) formatted audio data and an integrated profile data packet composer operative to encapsulate the SBC formatted audio data to generate Bluetooth packets therefrom, wherein the API comprises a command for opening an advanced audio distribution profile (A2DP) channel between the host system and a remote Bluetooth device, wherein the API comprises a command for opening an A2DP stream between the host system and the Bluetooth controller, wherein the API comprises a command for configuring the Bluetooth controller with one or more related parameters, wherein the API comprises a command for starting an A2DP stream between the host system and the Bluetooth controller and receiving pulse code modulated (PCM) audio data, encoding the PCM audio data to SBC formatted audio data and composing Bluetooth transmit packets encapsulating the SBC formatted audio data.","There is further provided in accordance with the invention, a single chip Bluetooth controller comprising a Bluetooth radio for establishing a link to a remote device, a host control application programming interface (API) defining a plurality of commands for controlling and configuring the Bluetooth controller, a host interface operative to receive a pulse code modulated (PCM) format input audio data stream from a host system utilizing the host control API, an audio encoder operative to encode the audio data stream into subband codec (SBC) format and a profile data packet composer operative to encapsulate the SBC formatted audio data stream to generate Bluetooth transmit packets therefrom for transmission by the Bluetooth radio over the link to the remote device.","There is also provided in accordance with the invention, a method of decoding streaming audio in a controller coupled to a communications channel, the method comprising the steps of parsing receive packets incorporating encoded audio received over the communications channel, decoding the audio streaming data to generate decoded audio data therefrom and sending the decoded audio stream data to a host system.","There is further provided in accordance with the invention, a method of decoding streaming audio in a Bluetooth controller, the method comprising the steps of parsing receive packets incorporating subband codec (SBC) encoded audio data received over a Bluetooth link, decoding the SBC format data to pulse code modulated (PCM) format audio streaming data and sending the PCM format audio streaming data to a host system utilizing a host control application programming interface (API).","The following notation is used throughout this document.",{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Term","Definition"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"A2PD","Advanced Audio Distribution Profile"]},{"entry":[{},"AAA","Authentication Authorization and Accounting"]},{"entry":[{},"AC","Alternating Current"]},{"entry":[{},"ACL","Asynchronous Connectionless Link"]},{"entry":[{},"API","Application Programming Interface"]},{"entry":[{},"APR","Audio Processor"]},{"entry":[{},"ASIC","Application Specific Integrated Circuit"]},{"entry":[{},"AVDTP","Audio Video Distribution Transport Protocol"]},{"entry":[{},"AVI","Audio Video Interleave"]},{"entry":[{},"BMP","Windows Bitmap"]},{"entry":[{},"CPU","Central Processing Unit"]},{"entry":[{},"DC","Direct Current"]},{"entry":[{},"DFC","Data Flow Controller"]},{"entry":[{},"DMA","Direct Memory Access"]},{"entry":[{},"DSP","Digital Signal Processor"]},{"entry":[{},"EDGE","Enhanced Data rates for GSM Evolution"]},{"entry":[{},"EPROM","Erasable Programmable Read Only Memory"]},{"entry":[{},"eSCO","Synchronous Connection Oriented"]},{"entry":[{},"FCC","Federal Communications Commission"]},{"entry":[{},"FHSS","Frequency Hopping Spread Spectrum"]},{"entry":[{},"FM","Frequency Modulation"]},{"entry":[{},"FPGA","Field Programmable Gate Array"]},{"entry":[{},"GPRS","General Packet Radio Service"]},{"entry":[{},"GPS","Ground Positioning Satellite"]},{"entry":[{},"GSM","Global System for Mobile Communications"]},{"entry":[{},"HCI","Host Control Interface"]},{"entry":[{},"HCPU","Host Central Processing Unit"]},{"entry":[{},"HDL","Hardware Description Language"]},{"entry":[{},"IC","Integrated Circuit"]},{"entry":[{},"ID","Identification"]},{"entry":[{},"IEEE","Institute of Electrical and Electronics Engineers"]},{"entry":[{},"ISM","Industrial, Scientific, Medical"]},{"entry":[{},"JPG","Joint Photographic Experts Group"]},{"entry":[{},"LAN","Local Area Network"]},{"entry":[{},"MAC","Media Access Control"]},{"entry":[{},"MP3","MPEG-1 Audio Layer 3"]},{"entry":[{},"MPDU","MAC Protocol Data Unit"]},{"entry":[{},"MPG","Moving Picture Experts Group"]},{"entry":[{},"MSDU","MAC Service Data Unit"]},{"entry":[{},"NIC","Network Interface Card"]},{"entry":[{},"OFDMA","Orthogonal Frequency Division Multiple Access"]},{"entry":[{},"PAN","Personal Area Network"]},{"entry":[{},"PC","Personal Computer"]},{"entry":[{},"PCI","Personal Computer Interconnect"]},{"entry":[{},"PCM","Pulse Code Modulation"]},{"entry":[{},"PCMI","Pulse Code Modulation Interface"]},{"entry":[{},"PDA","Portable Digital Assistant"]},{"entry":[{},"RAM","Random Access Memory"]},{"entry":[{},"RAN","Radio Access Network"]},{"entry":[{},"RAT","Radio Access Technology"]},{"entry":[{},"RF","Radio Frequency"]},{"entry":[{},"ROM","Read Only Memory"]},{"entry":[{},"SBC","Complexity Subband Codec"]},{"entry":[{},"SCO","Synchronous Connection Oriented"]},{"entry":[{},"SDIO","Secure Digital Input\/Output"]},{"entry":[{},"SIM","Subscriber Identity Module"]},{"entry":[{},"SNK","Sink"]},{"entry":[{},"SPI","Serial Peripheral Interface"]},{"entry":[{},"SRC","Source"]},{"entry":[{},"TV","Television"]},{"entry":[{},"UART","Universal Asynchronous Receive\/Transmit"]},{"entry":[{},"UMTS","Universal Mobile Telecommunication System"]},{"entry":[{},"USB","Universal Serial Bus"]},{"entry":[{},"UWB","Ultra Wideband"]},{"entry":[{},"VDP","Video Distribution Profile"]},{"entry":[{},"WB","Wideband"]},{"entry":[{},"WiFi","Wireless Fidelity"]},{"entry":[{},"WiMax","Worldwide Interoperability for Microwave Access"]},{"entry":[{},"WiMedia","Radio platform for UWB"]},{"entry":[{},"WLAN","Wireless Local Area Network"]},{"entry":[{},"WMA","Windows Media Audio"]},{"entry":[{},"WMV","Windows Media Video"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The present invention is a novel and useful apparatus for and method of integrating the advanced audio distribution profile (A2DP) audio codec into a Bluetooth controller for audio streaming applications. The mechanism functions to break the prior art Bluetooth protocol stack by integrating a profile packet composer into the controller. The profile\/stack control signaling is performed by the host while the profile data packet composer is implemented in the controller. The integrated data packet composer does not break the data path and flow control over the standard HCI. Further, the integrated packet composer allows the controller to open a dedicated data interface for specific applications (e.g., PCM\/I2S for audio data).","Although the mechanism of the present invention can be used in numerous types of communication systems, to aid in illustrating the principles of the present invention, the description of the controller integrated A2DP audio codec mechanism is provided in the context of a Bluetooth radio enabled communication device such as a cellular phone.","Although the coexistence mechanism of the present invention can be incorporated in numerous types of Bluetooth enabled communication devices such a multimedia player, cellular phone, PDA, etc., it is described in the context of a cellular phone. It is appreciated, however, that the invention is not limited to the example applications presented, whereas one skilled in the art can apply the principles of the invention to other communication systems as well without departing from the scope of the invention.","Note that throughout this document, the term communications device is defined as any apparatus or mechanism adapted to transmit, receive or transmit and receive data through a medium. The term communications transceiver or communications device is defined as any apparatus or mechanism adapted to transmit and receive data through a medium. The communications device or communications transceiver may be adapted to communicate over any suitable medium, including wireless or wired media. Examples of wireless media include RF, infrared, optical, microwave, UWB, Bluetooth, WiMAX, WiMedia, WiFi, or any other broadband medium, etc. Examples of wired media include twisted pair, coaxial, optical fiber, any wired interface (e.g., USB, Firewire, Ethernet, etc.). The term Ethernet network is defined as a network compatible with any of the IEEE 802.3 Ethernet standards, including but not limited to 10Base-T, 100Base-T or 1000Base-T over shielded or unshielded twisted pair wiring. The terms communications channel, link and cable are used interchangeably.","The term \u2018Source\u2019 (SRC) denotes a device that acts as a source of a digital audio stream that is delivered to the sink (SNK) of a piconet. The term \u2018Sink\u2019 (SNK) denotes a device that acts as a sink of a digital audio stream delivered from the SRC on the same piconet. For example, a portable player is a SRC while a headset is a SNK. A microphone is a SRC while a portable recorder is a SNK.","The term multimedia player or device is defined as any apparatus having a display screen and user input means that is capable of playing audio (e.g., MP3, WMA, etc.), video (AVI, MPG, WMV, etc.) and\/or pictures (JPG, BMP, etc.). The user input means is typically formed of one or more manually operated switches, buttons, wheels or other user input means. Examples of multimedia devices include pocket sized personal digital assistants (PDAs), personal media player\/recorders, cellular telephones, handheld devices, and the like.","Some portions of the detailed descriptions which follow are presented in terms of procedures, logic blocks, processing, steps, and other symbolic representations of operations on data bits within a computer memory. These descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. A procedure, logic block, process, etc., is generally conceived to be a self-consistent sequence of steps or instructions leading to a desired result. The steps require physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared and otherwise manipulated in a computer system. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, bytes, words, values, elements, symbols, characters, terms, numbers, or the like.","It should be born in mind that all of the above and similar terms are to be associated with the appropriate physical quantities they represent and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussions, it is appreciated that throughout the present invention, discussions utilizing terms such as \u2018processing,\u2019 \u2018computing,\u2019 \u2018calculating,\u2019 \u2018determining,\u2019 \u2018displaying\u2019 or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.","The invention can take the form of an entirely hardware embodiment, an entirely software embodiment or an embodiment containing a combination of hardware and software elements. In one embodiment, a portion of the mechanism of the invention is implemented in software, which includes but is not limited to firmware, resident software, object code, assembly code, microcode, etc.","Furthermore, the invention can take the form of a computer program product accessible from a computer-usable or computer-readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description, a computer-usable or computer readable medium is any apparatus that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device, e.g., floppy disks, removable hard drives, computer files comprising source code or object code, flash semiconductor memory (USB flash drives, etc.), ROM, EPROM, or other semiconductor memory devices.","A general block diagram illustrating a communication device (shown generally as a mobile station or MS) incorporating the controller integrated audio codec of the present invention is shown in . Note that the mobile station may comprise any suitable wired or wireless device such as multimedia player, mobile communication device, cellular phone, smartphone, PDA, Bluetooth device, etc. For illustration purposes only, the device is shown as a mobile station. Note that this example is not intended to limit the scope of the invention as the controller integrated audio codec of the present invention can be implemented in a wide variety of communication devices.","The mobile station, generally referenced , comprises a baseband processor or CPU  having analog and digital portions. The MS may comprise a plurality of RF transceivers  and associated antennas . RF transceivers for the basic cellular link and any number of other wireless standards and radio access technologies (RATs) may be included. Examples include, but are not limited to, Global System for Mobile Communication (GSM)\/GPRS\/EDGE 3G; CDMA; WiMAX for providing WiMAX wireless connectivity when within the range of a WiMAX wireless network using OFDMA techniques; Bluetooth for providing Bluetooth wireless connectivity when within the range of a Bluetooth wireless network; WLAN for providing wireless connectivity when in a hot spot or within the range of an ad hoc, infrastructure or mesh based wireless LAN network; near field communications; 60 GHz device; UWB; etc. One or more of the RF transceivers may comprise a plurality of antennas to provide antenna diversity which yields improved radio performance. The mobile station may also comprise internal RAM and ROM memory , flash memory  and external memory .","Several user interface devices include microphone(s) , speaker(s)  and associated audio codec  or other multimedia codecs , a keypad for entering dialing digits , vibrator  for alerting a user, camera and related circuitry , a TV tuner  and associated antenna , display(s)  and associated display controller  and GPS receiver  and associated antenna . A USB or other interface connection  (e.g., SPI, SDIO, PCI, etc.) provides a serial link to a user's PC or other device. An FM receiver  and antenna  provide the user the ability to listen to FM broadcasts. SIM card  provides the interface to a user's SIM card for storing user data such as address book entries, etc. Note that the SIM card shown is intended to represent any type of smart card used for holding user related information such as identity and contact information, Authentication Authorization and Accounting (AAA), profile information, etc. Different standards use different names, for example, SIM for GSM, USIM for UMTS and ISIM for IMS and LTE.","The controller integrated audio codec may be implemented in the mobile station in any of several ways. In one embodiment, the controller integrated audio codec is implemented in the RF transceiver block , for the case where the RF transceiver comprises Bluetooth transceiver.","In another embodiment, the audio codec  comprises the controller integrated audio codec of the present invention. In this case, the audio codec is implemented as part of the Bluetooth controller. In yet another embodiment, the controller integrated audio codec is implemented as block  which functions as part of the Bluetooth controller. The controller integrated audio codec is adapted to implement the audio streaming mechanism of the present invention as described in more detail infra. In operation, controller integrated audio codec blocks may be implemented as hardware, software or as a combination of hardware and software. Implemented as a software task, the program code operative to implement the audio streaming mechanism of the present invention is stored in one or more memories ,  or  or local memories within the baseband processor.","Portable power is provided by the battery  coupled to power management circuitry . External power is provided via USB power  or an AC\/DC adapter  connected to the battery management circuitry which is operative to manage the charging and discharging of the battery .","A diagram illustrating an example embodiment of the SRC based A2DP audio streaming implementation of the present invention is shown in . The system, generally referenced , comprises a Bluetooth controller  in communication with a host processor  via HCI interface (I\/F) and A2DP extension . The host processor comprises A2DP application layer , AVDTP layer  and L2CAP layer . The controller comprises SBC codec , AVDTP\/L2CAP composer , link manager  and Bluetooth baseband .","In operation, audio stream data , such as previously read from a storage device and decoded by an MP3 decoder, is input to the controller via the PCM\/I2S interface  and encoded by the SBC codec . AVDTP packets are encapsulated into L2CAP packets by the composer  and sent to the Bluetooth baseband  via the link manager .","Thus, in accordance with the invention, the audio codec and the AVDTP\/L2CAP mini composer are integrated into the Bluetooth controller. The PCM\/I2S provides a dedicated interface to receive the PCM audio samples. The AVDTP and L2CAP mini composer is responsible for composing AVDTP audio packets based on preconfigured AVDTP parameters, both components of which are configured by the host processor.","Note that the AVDTP , L2CAP  and A2DP application  running on the host are responsible for the protocol functions as in the standard implementation. Note also that the invention uses the standard Bluetooth HCI with appropriate extensions to control the AVDTP\/L2CAP mini composer and codec components.","A block diagram illustrating an example embodiment of the A2DP audio streaming implementation of the present invention in more detail is shown in . The system, generally referenced , comprises a storage device , mobile terminal host processor  and Bluetooth controller . The host processor  comprises MP3 decoder , stack and profiled  which comprise A2DP setup and control block  and HCI . The controller  comprises HCI , radio  and audio processor  which comprises SBC encoder , AVDTP framer  and L2CAP packager .","To support high quality audio streaming, the source role of the A2DP must support Low Complexity Subband Codec (SBC) encoding of audio data, which normally is a significant consumer of processor resources. The controller integrated audio codec of the present invention is operative to off-load the host CPU (HCPU) in A2DP source role implementation by performing the SBC encoding internally in the Bluetooth device. Thus, all the data path processing of the A2DP profile is performed by the Bluetooth controller , while the signaling channel \/ remains and control functions are performed by the HCPU .","In operation, MP3 data or other supported formatted audio data is read from the storage device  and decoded by the decoder  (e.g., MP3 decoder). The audio data path (dotted line) is input to the controller via the PCM\/I2S interface . The audio stream is transferred from the host  to the controller  in PCM format on the PCM bus  (as opposed to coded audio frames via the common ACL transport (UART, SDIO, SPI) as is done in the prior art).","In accordance with the invention, the HCPU uses a novel HCI VS API in order to control and configure the controller with the required parameters, A2DP SNK capabilities, etc. which are negotiated and set up by the HCPU via the signaling channel \/. The audio processor  is the entity that performs the data processing internally within the controller.","The L2CAP packets output of the audio processor are input to the radio via the ACL path  along with the control signaling . The radio transmits the data and signaling to the A2DP enabled headset  via antenna .","Note that for A2DP purposes, the SBC codec only needs perform encoding since the Bluetooth core targets audio source applications. The AVDTP frames generated by the AVDTP framer  are sent over an ACL link  as L2CAP packets via L2CAP packaging . This requires that the transmit path include the ACL data path managed by the firmware on the audio processor .","Over time, SBC has become he standard codec of Bluetooth. Thus, a core with an integrated codec can significantly ease the integration between the Bluetooth controller and the host. An architecture for the integrated SBC codec in the Bluetooth core is described below in connection with .","A block diagram illustrating the SBC encoder in more detail is shown in . The SBC encoder, generally referenced , comprises left\/right polyphase analysis blocks , APCM blocks , bitstream packaging block  and derive allocation block .","The polyphase analysis blocks are operative to split the input PCM signal into subband samples and calculate the scale factors (i.e. a maximum level of each subband). The number of subbands can be four or eight. The derive allocation block functions to derive the subband levels in accordance with the scale factors and SBC parameters (e.g., bitpool). The APCM block functions to quantize the subband samples according to the levels calculated by the derive allocation block. The bitstream packaging block composes the SBC frame from its various inputs (i.e. header data, left and right APCM output, etc.).","A block diagram illustrating the SBC decoder in more detail is shown in . The SBC decoder, generally referenced , comprises bitstream unpacking block , APCM blocks , left\/right polyphase synthesis blocks  and derive allocation block . The description of the decoder is similar to the encoder with the difference being the order of operations is reversed.","The SBC codec can be implemented on the audio processor  (). A block diagram illustrating an example of SBC architecture in more detail is shown in . The SBC architecture, generally referenced , comprises three main components: namely the SBC codec , A2DP frame composer  and WB speech frame composer and parser .","The SBC codec is operative to package and unpack SBC frames. The codec also controls the PCMI interface  and interfaces with API memory . The A2DP frame composer is operative to compose AVDTP packets. The WB speech frame composer and parser is responsible for adding and filtering the synchronization headers of the WB speech frames and for performing resynchronization when required.","A diagram illustrating the message flow between the host, Bluetooth controller and headset for a single audio stream is shown in . The following diagram demonstrates the roles performed by and the message flow between the HCPU and the controller during a typical A2DP session. Initially, an A2DP data and signaling channel is opened between the host and the headset (signaling via the controller) (). The A2DP audio stream is then opened between the host and controller (). The host and headset negotiate one or more SBC parameters between themselves (). The codec and SBC encoder are configured () and the A2DP audio stream is started (). The host sends PCM data to the controller () which encodes and encapsulates it in AVDTP\/L2CAP packets and transmits the encoded A2DP data to the headset over the radio link (). At some point, the A2DP data is stopped and the stream between the host and headset is closed (). The A2DP stream between the host and controller is stopped and closed ().","The A2DP profile supports audio transmission to two SNK devices simultaneously. In accordance with the invention, the HCPU is responsible only for the signaling channel as in the case of a single SNK scenario presented in  supra. A multiple SNK flow sequence diagram is presented in . The diagram illustrates the message flow between the host, Bluetooth controller and headset for multiple audio streams.","Initially, the first A2DP data and signaling channel is opened between the host and headset # (signaling via the controller) (). The first SBC parameters related to headset # are negotiated (). The first A2DP audio stream is opened between the host and controller (). The second A2DP data and signaling channel is opened between the host and headset # (signaling via the controller) (). The second A2DP audio stream is opened between the host and controller (). The host and headset # negotiate one or more SBC parameters between themselves (). The codec and SBC encoder are configured () and the first A2DP audio stream is started (). The host sends PCM data to the controller () which encodes and encapsulates it in AVDTP\/L2CAP packets and transmits the encoded A2DP data to headset # over the radio link (). The second A2DP audio stream is started () and encoded A2DP data is sent to headset # over the radio link (). At some point, the A2DP data to headset # and # is stopped and the streams between the host and headset are closed. The A2DP streams between the host and controller are stopped and closed as well.","Note that, as described infra in connection with the API, the SBC codec configuration command (HCI_VS_A3DP_Codec_Configuration) is called only once for both streams, as there is only a single set of SBC parameters for encoding at a given time. Thus, if second SNK SBC parameters are negotiated when another SNK is already streaming, then SBC configuration should be reconfigured in the event the parameter set of both SNKs do not match.","Regarding interference between the two SNKs, if one of the two SNKs experiences poor RF performance, the affect on the other SNK is minimal. For example, consider the case of one user being far from the cellular phone while another user is much closer. The closer user should still hear smooth audio music. In that case, SBC frames of the poor RF performing SNK only would be flushed thereby enabling steady audio streaming for the good SNK.","A diagram illustrating the SRC based A2DP over PCM data flow is shown in . The data flow, generally referenced , comprises PCM interface (PCMI) , PCMI RX buffer , SBC codec , A2DP frame composer , HCI data handler , LC ACL TX handler , queue , Inter Processor Communication (IPC) buffer  and Data Flow Controller (DFC) .","A diagram illustrating the audio processor data path and message flow between processor and controller entities is shown in . With reference to  and , the audio input of the controller is a PCM bus  where the voice samples are written to API memory (). The PCMI  copies the voice samples to the PCMI RX buffer  and generates an interrupt to the audio processor (). The SBC codec  (, ) copies the samples to its memory () and processes (i.e. encodes) the samples. Encoded AVDTP audio packets are generated and encapsulated in L2CAP packets () and written to the IPC buffer  located in the API memory. When an L2CAP packet is ready, the write pointer of the IPC buffer is advanced (). The read pointer of the IPC buffer  is advanced when the L2CAP packet has been sent to the radio () for transmission over the air ().","Note that the IPC buffer is a dedicated buffer allocated for AVDTP packets. The IPC buffer is allocated in the API memory. The AVDTP buffer format is capable of supporting multiple SNK devices with different static headers. The payload is shared by all SNK devices. The structure of the IPC buffer comprises the fields listed below in Table 1.",{"@attributes":{"id":"p-0108","num":"0107"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"IPC Buffer Structure"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["IPC Buffer Size","Total buffer size in bytes"]},{"entry":["Number Of Free","Number of free bytes in the IPC buffer"]},{"entry":"Bytes"},{"entry":["Owner","Indicates the AVDTP payload owner"]},{"entry":["Payload Length","AVDTP payload length in bytes"]},{"entry":["SNK Handle","Unique SNK handle"]},{"entry":["AVDTP Header","The AVDTP mini composer generates an AVDTP"]},{"entry":[{},"packet header per stream."]},{"entry":["AVDTP Payload","SBC frames packed into AVDTP packet payload. The"]},{"entry":[{},"AVDTP payload is the same for all SNK devices."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"In the example embodiment presented herein, the audio processor firmware is interrupt driven and is executed in a single IRQ context. A block diagram illustrating the firmware tasks or blocks running on the audio processor is shown in . The firmware, generally referenced , comprises a PCMI driver task , SBC codec task , A2DP frame composer task , WB speech frame composer and parser task , \/ converter task , IPC buffer driver task , mailbox driver task , eSCO buffers driver task  and coupled timer source task .","The SBC codec task  is operative to encode and decode SBC frames for WB speech and A2DP streams. The A2DP frame composer task  is operative to compose AVDTP packets. The WB speech frame composer and parser task  is responsible for the WB speech stream synchronization, adding and stripping and WB speech synchronization headers. The eSCO buffers driver task  provides read and write services for the eSCO buffers. The PCMI driver task  provides read and write services for the PCMI buffers.","In accordance with the invention, the controller integrated audio streaming mechanism comprises a dedicated HCI vendor specific (VS) Application Programming Interface (API). It is through this API that the host controls and configures the controller A2DP parameters. The API comprises commands for opening, closing, starting and stopping audio streams as well as configuration commands for single and multiple SNKs. Details of each of the API commands is provided hereinbelow.","HCI_VS_A3DP_Open_Stream (0xFD8C)","This command is called when the A2DP SNK has moved to the open state and has established the transport A2DP channel in order to open an A2DP entity in the controller. The command includes the protocol parameters needed for L2CAP and AVDTP packet construction. SBC and SARC parameters are applied using the HCI_VS_A3DP_CODEC_CONFIGURATION command described infra. The format of the Open Stream command is shown below in Table 2.",{"@attributes":{"id":"p-0113","num":"0112"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Open Stream Command Structure"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Command","Return"]},{"entry":["Command","Opcode","Parameters","Parameters"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["HCI_VS_A3DP_Open_Stream","0xFD8C","Connection Handle","Status"]},{"entry":[{},{},"L2CAP CID",{}]},{"entry":[{},{},"AVDTP Version ",{}]},{"entry":[{},{},"Parameter",{}]},{"entry":[{},{},"AVDTP Payload ",{}]},{"entry":[{},{},"Parameter"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0114","num":"0113"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Open Stream Command Parameters"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Size","Value","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Connection Handle","1 byte","0x1-0x7","ACL connection handle"]},{"entry":["L2CAP CID","2 bytes","0x0040-0xFFFF","L2CAP channel ID of the AVDTP data"]},{"entry":[{},{},{},"stream (refers to the L2CAP channel ID"]},{"entry":[{},{},{},"of the remote device)"]},{"entry":["L2CAP MTU","2 bytes","0x0030-0xFFFF","maximum size of payload data, in"]},{"entry":[{},{},{},"octets, that the upper layer entity is"]},{"entry":[{},{},{},"capable of accepting"]},{"entry":["AVDTP Version","1 byte","0x0-0x3","AVDTP protocol header version"]},{"entry":[{},{},{},"parameter"]},{"entry":["AVDTP Payload","1 byte","0x0030-0xFFFF","identifies the format of the RTP payload"]},{"entry":[{},{},{},"and determines its interpretation by the"]},{"entry":[{},{},{},"application"]},{"entry":["Status (return param)","1 byte","0x00","Command succeeded"]},{"entry":[{},{},"0x01-0xFF","Command failed"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"This command should be called when the A2DP SNK has moved to Idle state and has closed the transport A2DP channel. If a stream was started by the start stream command, it should be stopped by the stop stream command before it is closed. The format of the Close Stream command is shown below in Table 4.",{"@attributes":{"id":"p-0116","num":"0115"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 4"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Close Stream Command Structure"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Return"]},{"entry":[{},{},"Command","Para-"]},{"entry":["Command","Opcode","Parameters","meters"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["HCI_VS_A3DP_Close_Stream","0xFD8C","Connection","Status"]},{"entry":[{},{},"Handle"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0117","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 5"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Close Stream Command Parameters"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Size","Value","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Connection Handle","1 byte","0x1-0x7","ACL connection handle"]},{"entry":["Status (return param)","1 byte","0x00","Command succeeded"]},{"entry":[{},{},"0x01-0xFF","Command failed"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The Codec Configuration command configures the PCM source type, SBC encoder and SARC parameters. This command should not be called during streaming, meaning no stream has started using the Start Stream command. Note that the command can refer to a specific stream or to both active streams in a multiple SNK scenario. Note that in addition to the API call, the controller PCM codec should be configured as well using the commands HCI_VS_Write_CODEC_Config and HCI_VS_Write_CODEC_Config_Enhanced. The format of the Codec Configuration command is shown below in Table 6.",{"@attributes":{"id":"p-0119","num":"0118"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"center"}},"thead":{"row":{"entry":"TABLE 6"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Codec Configuration Command Structure"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Return"]},{"entry":["Command","Opcode","Command Parameters","Parameters"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["HCI_VS_A3DP_Codec_Configuration","0xFD8E","Audio Source","Status"]},{"entry":[{},{},"PCM Input Sample Frequency",{}]},{"entry":[{},{},"PCM Number of Channels",{}]},{"entry":[{},{},"SBC Input Sample Frequency",{}]},{"entry":[{},{},"SBC channel Mode",{}]},{"entry":[{},{},"SBC Number of Blocks",{}]},{"entry":[{},{},"SBC Number of Subbands",{}]},{"entry":[{},{},"SBC Allocation Method",{}]},{"entry":[{},{},"SBC Bit Pool Low Boundary",{}]},{"entry":[{},{},"SBC Recommended Bit pull",{}]},{"entry":[{},{},"SBC dynamic Bit Pull Enable"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0120","num":"0119"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"center"}},"thead":{"row":{"entry":"TABLE 7"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Codec Configuration Command Parameters"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Size","Value","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Audio Source","1 byte","0x1-0x1","Determines the audio source of the"]},{"entry":[{},{},{},"A2DP stream."]},{"entry":[{},{},{},"0 - Audio source is the host through the"]},{"entry":[{},{},{},"PCM bus"]},{"entry":[{},{},{},"1 - Audio source is the internal"]},{"entry":[{},{},{},"controller's FM."]},{"entry":["PCM Input Sample","1 byte","0x1-0x9","The PCM sample frequency rate of the"]},{"entry":[{},{},{},"input PCM bus. This parameter is valid"]},{"entry":[{},{},{},"only when the audio source is the host."]},{"entry":[{},{},{},"When this parameter is different from"]},{"entry":[{},{},{},"the SBC input sample frequency"]},{"entry":[{},{},{},"parameter the SARC will be used for"]},{"entry":[{},{},{},"sample rate conversion"]},{"entry":[{},{},{},"0x01 - 8000 Hz"]},{"entry":[{},{},{},"0x02 - 11025 Hz"]},{"entry":[{},{},{},"0x03 - 12000 Hz"]},{"entry":[{},{},{},"0x04 - 16000 Hz"]},{"entry":[{},{},{},"0x05 - 22050 Hz"]},{"entry":[{},{},{},"0x06 - 24000 Hz"]},{"entry":[{},{},{},"0x07 - 32000 Hz"]},{"entry":[{},{},{},"0x08 - 44100 Hz"]},{"entry":[{},{},{},"0x09 - 48000 Hz"]},{"entry":["PCM Number of","1 byte","0x0-0x2","The number of channels (1 or 2) of the"]},{"entry":["Channels",{},{},"PCM input. This parameter is valid only"]},{"entry":[{},{},{},"when the audio source is the host."]},{"entry":["SBC Input Sample","1 byte","0x0-0x3","The sample frequency rate of the PCM"]},{"entry":["Frequency",{},{},"input to SBC encoder. Note that when"]},{"entry":[{},{},{},"this parameter is different form the PCM"]},{"entry":[{},{},{},"input sample frequency, the SARC is"]},{"entry":[{},{},{},"used for sample rate conversion."]},{"entry":[{},{},{},"0x0 - 16000 Hz"]},{"entry":[{},{},{},"0x1 - 32000 Hz"]},{"entry":[{},{},{},"0x2 - 44100 Hz"]},{"entry":[{},{},{},"0x3 - 48000 Hz"]},{"entry":["SBC channel Mode","1 byte","0x0-0x3","Describes the channel mode used to"]},{"entry":[{},{},{},"encode a stream."]},{"entry":[{},{},{},"0x0 - MONO"]},{"entry":[{},{},{},"0x1 - DUAL_CHNL"]},{"entry":[{},{},{},"0x2 - STEREO"]},{"entry":[{},{},{},"0x3 - JOINT_STEREO"]},{"entry":["SBC Number of","1 byte","0x4, 0x8, 0xC,","Number of SBC encoder blocks (4, 8,"]},{"entry":["Blocks.",{},"0x10","12, 16)"]},{"entry":["SBC Number of","1 byte","0x4, 0x8, 0xC,","Number of SBC subbands (4, 8, 12, 16)"]},{"entry":["Subbands",{},"0x10",{}]},{"entry":["SBC Allocation","1 byte","0x0-0x1","SBC allocation method (SNR,"]},{"entry":["Method",{},{},"Loudness)"]},{"entry":[{},{},{},"0 - Loudness"]},{"entry":[{},{},{},"1 - SNR"]},{"entry":["SBC Bit Pool Low","1 byte","0x39-0xFF","The lower boundary of the negotiated"]},{"entry":["Boundary",{},{},"bit pool range."]},{"entry":["SBC Recommended","1 byte","0x39-0xFF","The HCPU can recommend for a"]},{"entry":["Bit pull",{},{},"specific bit pool value from the bit pool"]},{"entry":[{},{},{},"rate. The recommended bit pool value"]},{"entry":[{},{},{},"also uses as the high boundary in"]},{"entry":[{},{},{},"dynamic bit pool."]},{"entry":["SBC dynamic Bit","1 byte","0x0-0x1","Determines whether a dynamic bit pool"]},{"entry":["Pull Enable",{},{},"mechanism should be used for"]},{"entry":[{},{},{},"performance\/quality adjustment."]},{"entry":[{},{},{},"0 - Disable"]},{"entry":[{},{},{},"1 - Enable"]},{"entry":["Status (return param)","1 byte","0x00","Command succeeded"]},{"entry":[{},{},"0x01-0xFF","Command failed"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The Multiple SNK Configuration command reconfigures SBC bit pool parameters for the case of multiple SNKs. The command is also operative to configure multiple SNK scenario dynamic bit pool parameters, which may differ from the regular dynamic bit pool behavior for a single SNK. If a second SNK was connected during an active streaming, new bit pool parameters can be configured without stopping the existing stream. If, however, other SBC configurations must be reconfigured as result of a second SNK connection, the stream must be stopped, reconfigured and only than both streams be started. The format of the Multiple SNK Configuration command is shown below in Table 8.",{"@attributes":{"id":"p-0122","num":"0121"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"322pt","align":"center"}},"thead":{"row":{"entry":"TABLE 8"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Multiple SNK Configuration Command Structure"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Return"]},{"entry":["Command","Opcode","Command Parameters","Parameters"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["HCI_VS_A3DP_Multiple_SNK_Configuration","0xFD96","SBC Bit Pool Low Boundary","Status"]},{"entry":[{},{},"SBC Recommended Bit Pool",{}]},{"entry":[{},{},"SBC Multiple SNK Dynamic Bit",{}]},{"entry":[{},{},"Pool Enable",{}]},{"entry":[{},{},"SBC Bit Pool Low Multiple",{}]},{"entry":[{},{},"Boundary"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0123","num":"0122"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 9"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Multiple SNK Configuration Command Parameters"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Size","Value","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["SBC Bit Pool Low","1 byte","0x39-","The lower boundary of the negotiated"]},{"entry":["Boundary",{},"0xFF","bit pool range. This value overrides the"]},{"entry":[{},{},{},"value previously configured in the"]},{"entry":[{},{},{},"Codec Configuration command."]},{"entry":[{},{},{},"Generally, the latest command called"]},{"entry":[{},{},{},"always overrides the previous value."]},{"entry":["SBC ","1 byte","0x39-","The HCPU can recommend a specific"]},{"entry":["Recommended",{},"0xFF","bit pool value from the bit pool rate."]},{"entry":["Bit pull",{},{},"The recommended bit pool value is also"]},{"entry":[{},{},{},"uses as the high boundary in the"]},{"entry":[{},{},{},"dynamic bit pool. This value overrides"]},{"entry":[{},{},{},"the value previously configured in the"]},{"entry":[{},{},{},"Codec Configuration command."]},{"entry":[{},{},{},"Generally, the latest command called"]},{"entry":[{},{},{},"always overrides the previous value."]},{"entry":["SBC Multiple SNK","1 byte","0x0-","Determines whether a dynamic bit pool"]},{"entry":["Dynamic Bit Pool",{},"0x1","mechanism should be used for"]},{"entry":["Enable",{},{},"performance\/quality adjustment, in"]},{"entry":[{},{},{},"multiple SNK scenarios. Dynamic bit"]},{"entry":[{},{},{},"pool in multiple SNK scenarios can"]},{"entry":[{},{},{},"degrade the audio quality of a certain"]},{"entry":[{},{},{},"SNK as result of bad RF of the other"]},{"entry":[{},{},{},"SNK, and therefore may be disabled."]},{"entry":[{},{},{},"The respective parameter for single"]},{"entry":[{},{},{},"SNK scenario is not changed."]},{"entry":[{},{},{},"0 - Disable"]},{"entry":[{},{},{},"1 - Enable"]},{"entry":["SBC Bit Pool Low","1 byte","0x39-","The lower boundary for decreasing the"]},{"entry":["Multiple Boundary",{},"0xFF","bit pool"]},{"entry":["Status (return ","1 byte","0x00","Command succeeded"]},{"entry":["param)",{},"0x01-","Command failed"]},{"entry":[{},{},"0xFF"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"This Start Stream command starts the A2DP data streaming to the remote device. The host should initiate PCM audio data right after this API call. When no PCM data is accepted at the controller after this command call, no data will be sent to the peer device. The format of the Start Stream command is shown below in Table 10.",{"@attributes":{"id":"p-0125","num":"0124"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 10"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Start Stream Command Structure"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Command","Return"]},{"entry":["Command","Opcode","Parameters","Parameters"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["HCI_VS_A3DP_Start_Stream","0xFD8F","Connection","Status"]},{"entry":[{},{},"Handle"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0126","num":"0125"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 11"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Start Stream Command Parameters"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Size","Value","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Connection Handle","1 byte","0x1-0x7","ACL connection handle"]},{"entry":["Status (return param)","1 byte","0x00","Command succeeded"]},{"entry":[{},{},"0x01-0xFF","Command failed"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The Stop Stream command functions to stop the SBC data streaming to the remote device. An input parameter determines whether the current internal buffers are transmitted to the remotes device(s) and then flushed (soft flush), or should be flushed immediately (hard flush). This option may be needed if the stream was stopped between songs for reconfiguration, so that the song ending should be heard by the user and not flushed. A VS event is generated at the completion of the operation if requested. The format of the Stop Stream command is shown below in Table 12.",{"@attributes":{"id":"p-0128","num":"0127"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 12"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Stop Stream Command Structure"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Command","Return"]},{"entry":["Command","Opcode","Parameters","Parameters"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["HCI_VS_A3DP_Stop_Stream","0xFD90","Connection","Status"]},{"entry":[{},{},"Handle",{}]},{"entry":[{},{},"Flush Flag",{}]},{"entry":[{},{},"Generate",{}]},{"entry":[{},{},"Stop Event"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0129","num":"0128"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 13"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Stop Stream Command Parameters"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Size","Value","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Connection ","1 byte","0x1-0x7","ACL connection handle"]},{"entry":["Handle",{},{},{}]},{"entry":["Flush Flag","1 byte","0x1-0x1","Determines whether the current internal"]},{"entry":[{},{},{},"buffers should be transmitted to the"]},{"entry":[{},{},{},"remote device or should be flushed"]},{"entry":[{},{},{},"immediately."]},{"entry":[{},{},{},"Values:"]},{"entry":[{},{},{},"0 - Transmit internal buffers before"]},{"entry":[{},{},{},"flush (soft flush."]},{"entry":[{},{},{},"1 - Immediate flush of buffers (hard"]},{"entry":[{},{},{},"flush)."]},{"entry":["Generate ","1 byte","0x1-0x1","Determines whether a stop stream event"]},{"entry":["Stop Event",{},{},"will be generated as soon as the stream"]},{"entry":[{},{},{},"is stopped. To be used in Soft Flush."]},{"entry":["Status (return ","1 byte","0x00","Command succeeded"]},{"entry":["param)",{},"0x01-0xFF","Command failed"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The Enable command is used for enabling the audio processor (APR) features, i.e. A2PD, WBS, FM converter. Preferably, the APR is disabled when not in use in order to reduce current consumption. The default APR state is disabled. The format of the Enable Stream command is shown below in Table 14.",{"@attributes":{"id":"p-0131","num":"0130"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 14"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Enable Command Structure"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Command","Return"]},{"entry":["Command","Opcode","Parameters","Parameters"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["HCI_VS_AVPR_Enable","0xFD92","Enable\/Disable APR","Status"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0132","num":"0131"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 15"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Enable Command Parameters"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Parameter","Size","Value","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Enable\/Disable APR","1 byte","0x1-0x1","Enable\/Disable the APR clock. "]},{"entry":[{},{},{},"Enable also reloads the APR code."]},{"entry":[{},{},{},"1 - Enable"]},{"entry":[{},{},{},"0 - Disable"]},{"entry":["Status (return param)","1 byte","0x00","Command succeeded"]},{"entry":[{},{},"0x01-0xFF","Command failed"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"When a stream has been opened and audio data is streaming, SBC frame encoding is performed on a periodic basis. Each period comprises a few operations that are performed sequentially as shown in the diagram of Figure illustrating the timing of the audio processor flow sequence. In the example embodiment presented herein, each operation is interrupt driven. All interrupts priorities are same, so operations cannot jump ahead of each other. The time period is derived from the PCM input and SBC encoder characteristics, such that at the end of each cycle all input PCM data is encoded to SBC frames.","The PCM data needed for one SBC frame is shown in Table 16 below:",{"@attributes":{"id":"p-0135","num":"0134"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 16"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PCM Data Per Frame in bytes (For 8 subbands)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"# Blocks"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["# Channels","4","8","12","16"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","64","128","192","256"]},{"entry":["2","128","256","384","512"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"As is shown be seen in the table, the maximal PCM block needed for one SBC frame encoding is 512 bytes, when all values are dividers of 512. Therefore, each cycle encodes 512 or 384 PCM bytes to SBC. In the worse case, a 512 byte PCM cycle is less than 2.66 milliseconds (which is equivalent to a 384 cycle of 2 milliseconds).","With reference to , the period, generally referenced , comprises a read PCM segment , Idle\/Msg segment , rate conversion and encode , build protocol headers , DMA write packet , Idle\/Msg , send packet ready message  and Idle\/Msg\/adjust bit pool .","Each period starts with a PCM IF driver interrupt indicating that a PCM block is ready at the API memory. At this point, the PCM IF is called to read the PCM audio data into a data memory buffer (in the context of the PCM interrupt). The firmware remains in idle until a DMA interrupt is generated, indicating PCM data was copied to data memory. During the idle state, messages can be accepted as well. Thus, the DMA interrupt may be handled only after massage processing completes.","In the context of the DMA interrupt, the following operations are performed: (1) SARC and SBC calculations; (2) protocol headers processing; and (3) sending DMA write requests. Here too, the firmware idles until a DMA interrupt is generated, indicating PCM data was copied to data memory. During the idle state, messages can be accepted as well. Thus, the DMA interrupt may be handled only after massage processing completes.","In the context of the next DMA interrupt, an interrupt is generated indicating a packet is ready. Other general operations such as bit pool dynamic adjustment are performed in the time remaining in the period. Once all operations are complete, the audio processor idles again until the next interrupt. Note that the message interrupts can be handled in the idle parts of the cycle. Therefore, the cycle can be longer than the required time of 2.66 milliseconds. It is assumed that a message interrupt handling process time is negligible comparing to the SBC calculation duration, so that the cycle time period is significantly affected. In addition, no more than two messages are expected to be received in one cycle, i.e. one packet sent message and a control message.","A diagram illustrating the audio processor state machine is shown in . The state machine, generally referenced , comprises an Idle state , Open state  and a Streaming state . In operation, the A2DP mechanism of the invention can be in either a streaming state  or a non-streaming state, i.e. the Open state  or Idle state . In the streaming state, input PCM data is processed and L2CAP packets of encoded audio data are output. The streaming state has two modes: one for single channel streaming and another for multiple channel streaming. The only difference between the states is the IPC buffer data composing, since in a multiple SNK scenario two data headers are built.","If in the Idle state, establishment of a connection causes a move to the Open state. The Open Stream, Codec Configuration or Multiple SNK Configuration APIs are used to establish the connection. The connection establishment API commands are used when the host wants to establish a streaming connection with a Bluetooth device.","When the device wants to start a stream (or resume streaming), the Start Stream command is executed to change the state from the Open state to the Streaming state. Typically, the Start Streaming command is initiated based on a user initiated action or the occurrence of an internal event.","When in the Open state, a connection release causes the L2CAP channels to be released. The connection release is performed using the Close Stream command which changes the state from the Open state to the Idle state. Note that the connection release procedure may be initiated from both the Open and Streaming states and sets the state at Idle for both devices.","When the device wants to suspend the audio streaming, the suspend procedure is initiated to change the state from the Streaming state to the Open state. The Stop Stream command is used to perform this procedure. The Stop Stream command is initiated by a user initiated action or the occurrence of an internal event. A connection release procedure, initiated by the Stop Stream and Close Stream API commands moves the mechanism from the Streaming state to the Idle state.","To change application service parameters, both devices must be in the Open state. If the mechanism is in the Streaming state, the suspend procedure described supra is executed beforehand to suspend the stream and change the state to the Open state for both devices. The change parameters procedure is initiated by a user action or by the occurrence of an internal event. After executing this procedure, the state of the devices remains in the Open state. The Start Stream command described supra must be executed in order to resume the audio stream. The mechanism remains in the Open state upon execution of the Codec Configuration or Multiple SNK Connection commands while in the Open state.","The Signaling Control procedure is used to recover from a loss of a signaling message, which could result in inconsistencies in the host, Bluetooth controller and Bluetooth device.","In similar fashion, partitioning can also be adapted to the SNK side of A2DP, reducing the required processing power of the host and enabling smoother integration. For the SNK implementation, a similar partitioning and associated mechanism is used on the SNK side as is used on the SRC side. On the SNK side, the controller integrates the receive packets over the air, parses them and sends the data over the dedicated data interface (e.g., PCM\/I2S for audio data).","A diagram illustrating an example embodiment of the SNK based A2DP audio streaming implementation of the present invention is shown in . The system, generally referenced , comprises a Bluetooth controller  in communication with a host processor  via HCI interface (I\/F) and A2DP extension . The host processor comprises A2DP application layer , AVDTP layer  and L2CAP layer . The controller comprises SBC codec , AVDTP\/L2CAP parser , link manager  and Bluetooth baseband .","In operation, the Bluetooth controller  receives the signal over the air and is demodulated, decoded and processed by the Bluetooth baseband . AVDTP\/L2CAP packets output from the baseband are forwarded to the AVDTP\/L2CAP parser  via the link manager . The L2CAP packets are parsed into AVDTP packets which are subsequently decoded by the SBC codec  into the audio stream data. The audio stream data  is sent to the host processor  via the PCM\/I2S interface  for playback to the user.","Thus, in accordance with the invention, the audio codec and the AVDTP\/L2CAP parser are integrated into the Bluetooth controller. The PCM\/I2S provides a dedicated interface to forward the PCM audio samples. The AVDTP and L2CAP parser is responsible for parsing AVDTP audio packets based on preconfigured AVDTP parameters, both components of which are configured by the host processor.","Note that the AVDTP , L2CAP  and A2DP  application running on the host are responsible for the protocol functions as in the standard implementation. Note also that the invention uses the standard Bluetooth HCI with appropriate extensions to control the AVDTP\/L2CAP parser and codec components.","A diagram illustrating the SNK based A2DP over PCM data flow is shown in . The data flow, generally referenced , comprises Data Flow Controller (DFC) , Inter Processor Communication (IPC) buffer , SBC codec , A2DP frame parser , queue , LC ACL RX handler , HCI data handler , PCMI TX buffer  and PCM interface (PCMI) . The message flow between the controller and processor entities is similar to that of  but in the reverse direction.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. As numerous modifications and changes will readily occur to those skilled in the art, it is intended that the invention not be limited to the limited number of embodiments described herein. Accordingly, it will be appreciated that all suitable variations, modifications and equivalents may be resorted to, falling within the spirit and scope of the present invention. The embodiments were chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention is herein described, by way of example only, with reference to the accompanying drawings, wherein:",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 19"}]},"DETDESC":[{},{}]}
