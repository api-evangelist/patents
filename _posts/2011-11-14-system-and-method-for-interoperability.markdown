---
title: System and method for interoperability
abstract: A method for enabling interoperability between software applications. The method includes receiving, at a client software application, a notification originating from a first software application; delivering the notification to a user; receiving a reply from the user in response to the notification; and causing an event to be performed in a second software application based on the reply.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08793323&OS=08793323&RS=08793323
owner: SuccessFactors, Inc.
number: 08793323
owner_city: South San Francisco
owner_country: US
publication_date: 20111114
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS","Hardware Overview","Software Interoperability"],"p":["The present invention claims priority benefit to U.S. provisional patent application titled, \u201cSYSTEM AND METHOD FOR INTEROPERABILITY,\u201d filed on Nov. 16, 2010 and having Ser. No. 61\/414,320, the entire contents of which are incorporated herein by reference.","1. Field of the Invention","The present invention relates to the field of computer software and, in particular, to a system and method for interoperability.","2. Description of the Related Art","Traditionally, a software application, such as Microsoft Outlook, can be configured to receive notifications from one or more other software applications, including SaaS (software as a service) applications.  is a conceptual diagram of a system for performing actions based on receiving notifications, according to the prior art. One or more SaaS applications -, -, - may be configured to transmit notifications to a centralized client application , such as Microsoft Outlook. A user can view the notification via another application, such as a browser application . The notification may include a link that allows the user to access the SaaS application -, -, -. Using the browser application , the user can then perform an action directly with the SaaS application -, -, - that transmitted the notification.","However, each SaaS application is independently operated and there is typically no interoperability between SaaS applications. Point-to-point integration between two SaaS applications (as indicated by the arrow between SaaS application - and SaaS application -) is time consuming and tedious to implement.","Accordingly, there remains a need in the art for a technique that addresses the drawbacks and limitations discussed above.","Embodiments of the invention provide an interoperability framework that allows notifications to be received from one or more software applications by a centralized client application. The framework further includes a technique for delivering the notifications to a user, who can reply to the notifications. Based on the reply performed directly with the notification, an action can be performed in one or more software applications, which may or may not include the software application that issued the original notification.","One or more embodiments of the invention provide a method for enabling interoperability between software applications. The method includes receiving, at a client software application, a notification originating from a first software application; delivering the notification to a user; receiving a reply from the user in response to the notification; and causing an event to be performed in a second software application based on the reply.","Embodiments of the invention provide an interoperability framework that allows notifications to be received from one or more software applications by a centralized client application. The framework further includes a technique for delivering the notifications to a user, who can reply to the notifications. Based on the reply performed directly with the notification, an action can be performed in one or more software applications, which may or may not include the software application that issued the original notification.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","b":["110","120","125","110","120","150"]},"Each client computer  includes conventional components of a computing device, e.g., a processor , system memory , a hard disk drive, input devices such as a mouse and a keyboard, and output devices such as a monitor, among others. Each web server  includes a processor  and a system memory , and manages the contents stored in its respective content storage unit using a relational database software. The web server is programmed to communicate with the client computers  and other web servers using the TCP\/IP protocol. The client computers  are programmed to execute web browser programs and other software applications and access the web pages and\/or applications managed by the web servers by specifying a uniform resource locator (URL) for the web server into the browser.","In the embodiments of the present invention described below, users are respectively operating the client computers  that are connected to the web servers  over the Internet. The web pages that are displayed to a user are transmitted from the web servers  to that user's client computer  and processed by the web browser program stored in that user's client computer  for display through the monitor of that user's client computer .","Client computers  includes a System  may be a personal computer, smart phone, touch pad, touch screen, or any other device suitable for practicing one or more embodiments of the present invention. It should be noted that the present invention can be implemented in hardware, software, or in a combination of hardware and software, e.g., using application specific integrated circuits (ASIC), a general purpose computer or any other hardware equivalents.","Embodiments of the invention provide a platform that enables interoperability between software applications.","Using conventional techniques, as shown in , a user can receive a notification from a software application and, in turn, perform some action with the software application from which the notification originates. The software application can be any type of application, including a word processing application, a gaming application, a spreadsheet application, a business execution software application an accounting application, a web-based application, or any technically feasibly type of software application. However, using prior art techniques, to bring data from one software application to another, the user must receive the notification from the first application, log-in to the second application, and then cut-and-paste the data to the second application. Such a process can be tedious and time consuming.","Embodiments of the invention provide a framework for allowing multiple software applications to communicate with one another through a centralized client application. In one embodiment, the centralized client application comprises an email client (e.g., Microsoft Outlook), a mobile client, a web-based client, a stand-alone desktop client, or any other technically feasible client application.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 3","b":["300","302","302","302"]},"In one embodiment, the client application includes a rule engine that allows the plugin  to communicate with the various software applications A-G. In some embodiments, the rule engine may be configured to parse a predefined list of different notifications received from the software applications A-G. In addition, the rule engine may be configured to parse predefined commands recited from the user in response to the notifications and perform some action with the software applications A-G.","Additionally, in some embodiments, the rule engine may be configured to allow a user to define new notifications that the rule engine is capable of parsing and new commands and corresponding actions that the rule engine is configured to act upon. For example, the rule engine may be configured to expose an API (Application Programming Interface) that allows a user to define custom notifications, commands, and actions for a particular software application. Some embodiments of the invention may provide for a user-defined rule engine that can allow more complex rule processes. In one embodiment, the user can define a rule that translates an individual \u201csimple\u201d action to a more complex \u201cbusiness rule action\u201d across multiple software applications. As an example, a user-configured rule engine may be configured to receive a reply from a user in response to the notification. The reply may include a parameter value that can be used to perform a more complex action with one or more software applications.","In still further embodiments, a notification can be received by the client application from a first software application and delivered to the user. In response, the user may submit a reply to the notification, which causes an action to be performed in a second software application (i.e., a different software application than the first software application). In this manner, interoperability between software applications can be achieved. Accordingly, embodiments of the invention provide bi-directional content and action, whereas prior art techniques only allowed for content to be distributed in one direction (i.e., to the user).","For example, in a social networking context, a message can be broadcast to all users using prior art techniques. According to embodiments of the invention, a notification can be received from one software application that causes some action to be performed in another software application.","In the business execution context, for example, a decision can be made in a hiring application to hire a new employee. In turn, a budget application may receive this information and recalculate a budget based on the new hire.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 4"},"Most enterprise organizations have a structure, e.g., a hierarchical structure. Thus, instead of having an ad hoc point-to-point style social network, the enterprise organization may have the social network be organized by groups. For example, location-based or department-focused groups. Thus, based on the attributes of a particular user, the user can be automatically added to various groups in the social networking environment. Accordingly, when a message is received that is directed to members of a particular group, all users that are part of that group would receive the message.","In addition, establishing a social networking layer in the interoperability framework (as shown in ) allow for more intelligent queries to be performed. For example, a user may be looking for other members in the enterprise that have a particular knowledge. The user can create a feed entry that is broadcast to relevant members. In addition, the feed entry can automatically generate a query that performs a search in a database against the user attributes to determine users that have the particular knowledge that the user is looking for. In one embodiment, a special tag may be included in the feed entry that causes the query to be automatically generated, e.g., a \u201c@\u201d or \u201c#\u201d symbol. Thus, the data associated with the user attributes becomes a knowledge network that allows for easy system integration.","In some embodiments, a security layer (not shown) may also be included in the interoperability framework. For example, a particular message or notification may be received by only those users that meet certain security clearance. The security clearance may be based on the user's role in the organization, who is the user's manager, or any other criteria.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 5","b":["502","1","502","2","502","3","504","504"]},"A user can view the notification via another application, such as a browser application . In reply to the notification, the user may enter a response that is delivered to the client application . The client application  parses the response from the browser application  and can perform an action with one or more SaaS applications - to -. In some embodiments, the action is performed with the same software application that issued the original notification. In other embodiments, the action is performed with a different software application than the one that issued the original notification. In still further embodiments, the action is performed with two or more software applications, which may or may not include the software application that issued the original notification.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 6","FIGS. 1-5"],"b":"600"},"As shown, the method  begins at step , where a client application, such as, for example, an email client application, a mobile phone application, a web-based application, or a business execution software application, which is executed by a processor, authenticates one or more software applications with the client application. Authentication of the one or more software applications cane performed via any technically feasible authentication protocol. For example, a handshaking protocol may be implemented between a software application and the client application. Authentication of the software applications with the client application can help ensure that the software applications that access the client application are legitimate and not malicious.","In some embodiments, step  is optional (as indicated by the dotted lines around step ) and is omitted.","At step , the client application receives a notification from a first software application. In some embodiments, the notification is a built-in feature of the first software application. In other embodiments, a user can customize the first software application to generate a notification when a certain criterion or criteria are satisfied. For example, in the business execution context, a notification may be generated by an accounting software application when an expense report needs to be approved by a manager. A notification that a pending expense report is ready to be approved\/disapproved may be sent from the accounting software application to the client application.","At step , the client application parses the notification. As described above, the client application may be configured with a rule engine configured to parse the notifications received from the one or more software applications.","At step , the client application communicates the notification to a user. The notification can be communicated to the user in any technically feasible manner. For example, the notification can be text-based or graphical. The notification may be emailed to the user or sent as a text\/SMS message to the user. In another example, a \u201creminder\u201d or pop-up notification can be displayed in the user's web browser or email client (e.g., Outlook). In another example, the notification can be displayed as an overlay or pop-up on the user's mobile phone. The notification on the mobile device may be associated with a particular \u201capp\u201d installed on the user's mobile device or directly associated with an operating system of the mobile device.","At step , the client application receives a reply to the notification. The user can reply to the notification in different ways depending on the mode in which the notification is received and the options provided for a particular notification. For example, if the notification is a text message, the user can send a response text message. In some embodiments, the notification text can include valid example responses, e.g., \u201cReply with \u2018Y\u2019 for Yes or reply with \u2018N\u2019 for No.\u201d In another example, when the notification is delivered as a notification on the user's mobile device, the notification may include one or more GUI (graphical user interface) buttons that the user can select to send the reply.","Continuing with the example provided above of approving an expense report, the notification may be received on the user's mobile device. The notification may provide a link to allow the user to view the expense report. If the user wishes to approve the expense report, the user may, for example, select an \u201cApprove\u201d button displayed in the notification. Similarly, if the user wishes to deny the expense report, the user may, for example, select a \u201cDeny\u201d button displayed in the notification. The reply is transmitted from the user's mobile device to the client application via the appropriate protocol (e.g., email, SMS, HTTP, etc.).","At step , the client application parses the reply. In various embodiments, the reply may be a text-based reply or a signal that indicates a selection of a particular button included in the notification. The rule engine in the client application can be configured to parse the reply received in response to the notification. In some embodiments, the reply may be received via a different communication channel than the communication channel in which the notification was transmitted. For example, the notification may be sent via email, but the reply may be sent via text message.","At step , the client application performs an action in the first software application and\/or one or more other software applications based on the reply. The reply is configured to cause some action to be taken in a software application. The action may be taken in the same software application that issued the notification (i.e., the \u201cfirst software application\u201d) or may be taken in another software application. In some embodiments, the action may be taken in a plurality of software applications, which may or may not include the software application that issued the notification. Accordingly, the user can cause some action to be taken in one or more software applications directly from the notification itself, without being required to log-in to the application(s) and perform the action manually.","Advantageously, interoperability between software applications can be achieved without having to directly and manually program the interoperability between specific pairs of software applications. In addition, embodiments provide for \u201ctwo-way\u201d notifications, where an action can be performed in a software application based on a notification received, without requiring the user to log-in to the application and perform the action manually. Still further, embodiments provide a technique to programmatically perform actions using notifications, where the user can define custom notifications and actions that can be taken in response to the notifications.","Various embodiments of the invention may be implemented as a program product for use with a computer system. The program(s) of the program product define functions of the embodiments (including the methods described herein) and can be contained on a variety of computer-readable storage media. Illustrative computer-readable storage media include, but are not limited to: (i) non-writable storage media (e.g., read-only memory devices within a computer such as CD-ROM disks readable by a CD-ROM drive, flash memory, ROM chips or any type of solid-state non-volatile semiconductor memory) on which information is permanently stored; and (ii) writable storage media (e.g., floppy disks within a diskette drive or hard-disk drive or any type of solid-state random-access semiconductor memory) on which alterable information is stored.","The invention has been described above with reference to specific embodiments and numerous specific details are set forth to provide a more thorough understanding of the invention. Persons skilled in the art, however, will understand that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention. The foregoing description and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["So that the manner in which the above recited features of the invention can be understood in detail, a more particular description of the invention, briefly summarized above, may be had by reference to embodiments, some of which are illustrated in the appended drawings. It is to be noted, however, that the appended drawings illustrate only typical embodiments of this invention and are therefore not to be considered limiting of its scope, for the invention may admit to other equally effective embodiments.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
