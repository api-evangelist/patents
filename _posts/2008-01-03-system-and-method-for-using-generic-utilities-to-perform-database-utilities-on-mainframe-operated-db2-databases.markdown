---
title: System and method for using generic utilities to perform database utilities on mainframe operated DB2 databases
abstract: A system and method for performing database utilities on a DB2 database may include using a single procedure (proc) for each database utility function. At least one parameter may be provided, where the at least one parameter identifies a DB2 database name. A generic control card may be accessed, where the generic control card may be identified by a value of the parameter(s). A utility control card may be generated using the at least one parameter. A database utility may be executed on a DB2 database by using the generated utility control card.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08150821&OS=08150821&RS=08150821
owner: Embarq Holdings Company LLC
number: 08150821
owner_city: Overland Park
owner_country: US
publication_date: 20080103
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF THE DRAWINGS"],"p":["Companies in many different industries handle large database operations using mainframe computers. One such industry is the telecommunications industry, where databases are used to store detailed subscriber records. These databases are large and require routine maintenance to manage them due to a number of reasons, including crashes, updates, corrections, and verifications.","One mainframe manufacturer is International Business Machines (IBM). IBM also provides a database software program known as DB2, which can manage very large databases (e.g., several hundred Gigabytes). As understood in the art, mainframe computers operate by processing jobs that are scheduled in a queue. These jobs are formed by a series of statements or commands that are processed by a processor of the mainframe computer. Jobs are generally statements formatted in the job control language (JCL). Typically, a mainframe computer runs a job by scheduling and executing a file with JCL commands or statements configured for the mainframe computer to perform a task, such as re-loading a database from a certain time. In addition to the file with JCL statements, control cards are used to set parameters for the jobs and know the syntax of the control cards. The control cards are typically eighty-byte strings that have each byte and groups of bytes representative of the different parameters. The JCL commands and control cards are comprehensive and generally require well-trained database administrators to adequately generate proper job files and control cards to perform even routine procedures and maintenance on DB2 databases.","To aid database administrators, IBM provides database utilities. These utilities are JCL programs that are configured to perform certain functions. The database administrator, however, must generate a procedure, generally known as a \u201cproc,\u201d and control card for each job. Companies that manage large numbers of databases, such as telecommunication service providers, may have over 25,000 databases. To perform a single, routine or regularly executed function on each database, a JCL command file, proc file, and control card must be created. Typically, six or more regularly executed operations, including check copy, modify, reorg, quiesce, and runstats, and many non-regularly schedule operations are performed on each database. This means that in the event of a global change to any of the JCL command files, proc files, or control cards, 150,000 or more file edits must be made.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1","b":["100","102","102","102","103","104","104","106","106","108","108","103"],"i":["a","n ","a","n","a","n","a","n"]},"These and other issues result in significant costs and expenses to staff database operations with database administrators. For example, in a typical telecommunications company, twenty or more database administrators are needed to manage the customer database and support database developers because the database developers are unfamiliar and generally unskilled to generate the necessary database utility operations needed during database development projects and interpret the resulting reports. This number of database administrators is generally needed because of the amount of time needed to generate JCL files, proc files, and control cards using the utilities available by both IBM and other vendors.","To overcome the difficulties of using DB2 database utilities on mainframes, minimize costs of staffing a database with database administrators, and increase the speed at which utility jobs can be created and revised, the principles of the present invention provide for generic database utilities that enable an operator to modify one set of utilities to perform a global change to procs and eliminate the use of control cards.","A system and method for performing database utilities on a DB2 database may include using a single procedure (proc) for each database utility function. At least one parameter may be provided, where the at least one parameter identifies a DB2 database name. A generic control card may be accessed, where the generic control card may be identified by a value of the parameter(s). A utility control card may be generated using the at least one parameter. A database utility may be executed on a DB2 database by using the generated utility control card.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2","b":["200","202","202","204","206","204","208","210","212","214","214","214","214","216","218","220","216","214","202","222","224","224","224","224"],"i":["a","n ","a","n "]},"In operation, the mainframe computer  may execute the software  for operating the database(s)  stored in the storage unit . In the case of the database(s)  being DB2 databases, these databases are challenging for users to perform utilities due to confusing user interfaces provided by utility developers, including IBM and control cards that are difficult to understand even by the most seasoned database administrator. In accordance with the principles of the present invention, the software  may include a database utility system that provides intuitive user interfaces that is capable of generating JCL command files that include parameters, thereby eliminating the need for control cards to be used during execution of a job as the parameters entered by a user are included in the JCL command file.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 3","FIG. 3"],"b":["300","102","302","102","102","102","102","102","102","304","304","304","102","102","306","306","302"],"i":["a","n ","a","n","a","n ","a","n ","a","n "]},"TABLE I includes an exemplary list of proc names, job or function descriptions, and job suffixes. These procs are typical, routinely executed functions that are executed on databases maintained by mainframe computers. As previously described, each of these procs conventionally are supported with jobs and control cards. However, through the use of generic DB2 utilities, the principles of the present invention enable elimination of customized procs and control cards, thereby reducing the total number of procs and eliminating customized control cards. In place of customized control cards, \u201cskeleton\u201d or generic control cards may be stored in a library of generic control cards, where a skeleton control card provides generic operation for a respective proc. PARMS that are expanded into the procs determine which control card member is used when executed.",{"@attributes":{"id":"p-0019","num":"0018"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE I"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Generic Proc Names and Job Suffixes"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Proc Name","Job Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["DB2CKI$","Check data"]},{"entry":["DB2STI$","Start"]},{"entry":["DB2ICB$ or DB2ICP$","Image copy"]},{"entry":["DB2LOB$","Load tablespace"]},{"entry":["DB2MRI$ or DB2MAI$","Modify recoverery"]},{"entry":["DB2INI$","Initialize tablespace"]},{"entry":["DB2ROB$ or DB2RAB$","Reorg tablespace"]},{"entry":["DB2RIB$","Reorg index"]},{"entry":["DB2QUI$ or DB2QUB$","Quiesce"]},{"entry":["DB2RCI$","Recover"]},{"entry":["DB2BII$","Rebuild index"]},{"entry":["DB2RSI$","Runstats"]},{"entry":["DB2ULB$","Unload tablespace"]},{"entry":["DB2MSI$","Modify stats"]},{"entry":["DB2UTI$","Miscellaneous utilities (repair, report, etc)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"In operation, the generic utilities use a software program, \u201cDB010A01,\u201d which writes a dataset that includes PARM field(s) plus a skeleton or generic control card, where the control card may be stored in a library, such as \u201cDBAdb2ssid.PARMLIB.\u201d Member or generic control card names used are determined at execution by a PARM on the EXEC statement. The control card for performing a command, such as COPY TABLESPACE &DB..&TS, in the PARM field is written to a temporary dataset after JCL expansion or substitution. The \u201c&\u201d is a symbolic that causes the PARMS \u201cDB\u201d and \u201cTS\u201d to be expanded. The command is concatenated with one or more skeleton control cards to create the utility control cards used by the job. Some systems may use different dataset names and options. To accommodate the different systems, system specific options may be created by adding members to the library without having to change the generic procs in production. These options should be created at a system level and not data base level.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4","b":["400","400","402","404","406","408","410"]},{"@attributes":{"id":"p-0022","num":"0021"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ \u2003\u2003INCLUDE MEMBER=$PRD015"]},{"entry":[{},"\/\/JS010 EXEC DB2ROB$,DB=DCLP0001,TS=SCLP1010,OPT="]},{"entry":[{},"\u2019ANALYZE ONLY\u2019,SHRLVL=1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"It should be understood that control cards are not generated by the generic procs, but rather are generated from the PARM field in JCL assembler utility program (e.g., \u201cDB010A01\u201d) and library DBA.db2ssid.PARMLIB based on the symbolics in the execute statement in the JCL. In most cases, the member name in the library PARMLIB has the same name as the PROC name.","At step , utility control cards are generated from the software program of step . The utility provided by the utility control cards are executed at step . A condition code check is performed at step , where if the condition code is greater than 5, the utility is abended or abort\/ended at step . Alternatively, the job is ended at step .","An example of JCL statements used in performing an image copy is provided below. The image copy is an IBM\u00ae company image copy for DB2 databases. The name of the proc is DB2IC$, which is commonly known as an \u201cI\u201d job, meaning IBM job. If a letter \u201cB\u201d were used, it would indicate that a BMC utility is being used. The purpose of this proc is to image copy tablespaces for a DB2 databases using the IBM\u00ae utility. The DB2 subsystem ID and the SMFID variables are set by the $PRD01? (where ? is the JES) include member in the JCL. A database name is specified in the EXEC statement. All tablespaces in the database are processed by this job unless TS=is specified. Wildcards (% and *) can be use in DB=and TS=parms. Specify SHRLVL=1 for REFERENCE (default) or SHRLVL=2 for CHANGE. Since control cards for the utility are not required by this proc, there is no need to create control cards for this job. The utility will be recorded as user.job name. This proc uses a LISTDEF to wildcard. It should be understood that other procs may be configured in the same or similar manner as provided below.",{"@attributes":{"id":"p-0026","num":"0025"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/jobnameI JOB (7002,PROD),OPERATIONS,CLASS="},{"entry":"B,MSGCLASS=S,SCHENV=\u2018PROD_DB21\u2019"},{"entry":"\/\/$SYSID INCLUDE MEMBER=$PRD011"},{"entry":"\/\/JS010 EXEC DB2ICI$,"},{"entry":"\/\/ \u2003\u2003\u2003DB=DCLP0001"},{"entry":"REQUIRED PARMS ON EXEC STATEMENT"},{"entry":"DB=DATA BASE NAME \u2003(wildcards or % can be used)"},{"entry":"OPTIONAL PARMS ON EXEC STATEMENT"},{"entry":"TS=TABLESPACE NAME \u2003(default is all)"},{"entry":"SHRLVL=1"},{"entry":"Specify SHRLVL=1 for SHARE LEVEL REFERENCE"},{"entry":"Specify SHRLVL=2 for SHARE LEVEL CHANGE"},{"entry":"UNIT=TAPE (default is DISK)"},{"entry":"OPT=\u2019EXCLUDE DB.TS,DB.TS\u2019"},{"entry":"UTPROC=RESTART OR PREVIEW (default is blank)"},{"entry":"Use UTPROC=PREVIEW to view control cards without executing the"},{"entry":"utility"},{"entry":"UID=utility ID (default is user.job name)"},{"entry":"PROC STEP NAMES"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["DB010A01","DB010A01","CREATE UTILITY CONTROL CARDS"]},{"entry":["GENER","FASTGENR","COPY CONTROL CARDS"]},{"entry":["COPY","ACPMAIN","IBM IMAGE COPY"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"CONTROL CARDS"},{"entry":"DBA.&SYSTEM..PARMLIB(DB2M&UNIT)"},{"entry":"LISTDEF A INCLUDE TABLESPACES TABLESPACE &DB..&TS\/"},{"entry":"&OPT"},{"entry":"DBA.&SYSTEM..PARMLIB(DB2ICI$&SHRLVL)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The purpose of the assembler utility program (i.e., DB010A01) is to take the PARM field on the execute statement and write it to a dataset. The dataset can be used to build control cards from the PARM using JCL symbolics instead of having to create unique control card members for each job. This program is executed in procs before a step needing control cards. At execution time, any PARMS that change in the control card are substituted with the PARMS specified on the EXEC statement. By using this simple utility, thousands of control cards may be eliminated. Since the PARM determines the control cards created, this program can be used in any proc.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 5","b":["500","502","504","506","508","510"]},"The previous detailed description is of a small number of embodiments for implementing the invention and is not intended to be limiting in scope. One of skill in this art will immediately envisage the methods and variations used to implement this invention in other areas than those described in detail. The following clams set forth a number of the embodiments of the invention disclosed with greater particularity."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Illustrative embodiments of the present invention are described in detail below with reference to the attached drawing figures, which are incorporated by reference herein and wherein:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
