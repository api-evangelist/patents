---
title: Systems and methods for web service architectures
abstract: Web service registry systems and methods, and web service architectures are disclosed. A web service registry system can include a web service registry, a plurality of web services, a plurality of knowledgebase models, and a control system. The plurality of web services can be published to the web service registry for effective dynamic discovery and invocation of the web services. The plurality of knowledgebase models, which can be defined by domain knowledge experts, can be associated with the web service registry. Each of the knowledgebase models can include a semantic specification and a syntactic specification. The control system can periodically filter non-compliant web services from the web service registry, where a non-compliant web service fails to comply with a predetermined knowledgebase model associated with the web service registry. Other embodiments of the web service management systems, architectures, and methods are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08539061&OS=08539061&RS=08539061
owner: Georgia Tech Research Corporation
number: 08539061
owner_city: Atlanta
owner_country: US
publication_date: 20090921
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims a benefit, under 35 U.S.C. \u00a7119(e), of U.S. Provisional Application Ser. No. 61\/098,347, filed 19 Sep. 2008, the entire contents and substance of which is hereby incorporated by reference.","Various embodiments of the present invention relate to web services and, more particularly, to interactive web service architectures and web service registry systems.","A web service provides either an application programming interface (\u201cAPI\u201d) or a Uniform Resource Locator (\u201cURL\u201d) to enable a Remote Procedure Call (\u201cRPC\u201d) over a network. Web services are generally described by the Web Service Definition Language (\u201cWSDL\u201d). WSDL defines the syntactic structure and content of a web service interface. Because service providers can develop web services in various manners according to their own desires, however, WSDL is inconsistent across different web services. For example, two web services providing the same function may provide different syntactic interfaces, as specified by WSDL. Further, two web services providing different functions may use the same syntactic interface, as described by WSDL. As a result, use of WSDL causes uncertainties in web service invocation, and a service user cannot effectively utilize a web service without knowing the specific syntactic interface specified for the web service. Dynamic web service invocation, which is defined as invocation without reprogramming, provides the flexibility to select from various web services capable of performing the same job. Because of the current uncertainties in WSDL, dynamic web service invocation is not feasible.","Universal Description, Discovery, and Integration (UDDI) is an initiative for registering web services. A UDDI registry is designed for publishing web services created by various service providers. Service providers register their web services to the UDDI registry, where service requestors locate desired web services. Upon request from a service requestor for a web service, the UDDI registry provides the service requestor with information about the requested web service based on the syntactic interface defined in WSDL, and directs the service requestor to a service provider and location of the web service. Based on the information received from the UDDI registry, the service requestor consumes and invokes the web service directly from the service provider.","WSDL has been criticized as providing little semantic meaning about a web service. While a web service can be identified in a UDDI registry based on its syntactic interface defined in WSDL, it may be difficult to identify a web service based on its semantic meaning or purpose. As a result, web service discovery is difficult to implement under conventional methods.","Due to the semantic uncertainty in web services, which do not conventionally include semantic descriptions, service discovery is not effective with conventional methods. Further, due to the syntactic uncertainty, dynamic invocation is infeasible. Therefore, with conventional methods, the comprehensive goals of web services cannot be realized. Semantic web services, i.e., web services with defined semantics, have been the cutting-edge research front in both industry and academia with a comprehensive goal to enable the automatic and dynamic service discovery, matchmaking, composition, and invocation of web services.","There is a need for a renovated web service architecture and registry system for more effectively identifying and using web services. In an exemplary embodiment, the needed web service management architecture can utilize standard semantic and syntactic specifications to supervise the lifecycle of web service development and deployment, thereby enabling web service discovery and improving the interchangeability of web services through dynamic service invocation. It is to such a web service architecture and registry system that various embodiments of the present invention are directed.","Briefly described, various embodiments of the present invention generally comprise web service architectures and web service registry systems and methods. A web service registry system according to an exemplary embodiment can comprise an ontological knowledgebase, a web service registry, and a control system.","In an exemplary embodiment, the knowledgebase can comprise a plurality of knowledgebase models. Each knowledgebase model can include a semantic specification and a syntactic specification for a type of web service. A semantic specification can define a concept and meaning of a web service, and can describe relationship with other web services. A syntactic specification can define a syntactic interface for a web service. A semantic specification and syntactic specification can be packaged together in a knowledgebase model for a web service. In that case, the semantic specification and the syntactic specification, although inherently independent, can correspond to each other and can be used in conjunction with each other in the web service architecture. The knowledgebase can be stored in a repository, such as a database, in association with the web service registry.","Within the web service registry, web services can be categorized and managed based on their knowledgebase models. In an exemplary embodiment, a service provider cannot freely publish web services to the web service registry, but must comply with a knowledgebase model for each published web service. If a service provider desires to register an instance of a web service, the service provider can search the registry to determine whether a knowledgebase model exists for the web service. If the service provider locates such a knowledgebase model, the service provider can develop or modify the web service instance to comply with the knowledgebase model. Multiple web service instances can be registered to the web service registry for each web service. Each \u201cinstance\u201d of a web service can represent a different location and, in some cases, a different provider for receiving the web service.","The control system, or control service, can enforce the knowledgebase models by rejecting and removing web services that fail to comply with a knowledgebase model in the knowledgebase. The control system can determine whether a web service, for which registration is requested, complies with all predetermined criteria for the web service registry. Such criteria can include compliance with at least one of the knowledgebase models in the knowledgebase. The control system can reject web services that fail to comply with the predetermined criteria. The control system can also reject web services that are deemed inoperative. In an exemplary embodiment, the control system can examine web services, not only upon their submission to the web service registry, but also periodically to enforce the knowledgebase models and optional other criteria for registration.","The web service registry can provide one or more interfaces for interaction with service providers and service requestors, or users. Service providers and requestors can search the web service registry through one or more interfaces to identify web services or knowledgebase models of interest. When conducting a search, a service provider or requestor can provide a description of a desired web service.","In general, service providers can provide web services for publication in the web service registry. In an exemplary embodiment, a web service of a service provider complies with at least one of the plurality of knowledgebase models. Service requestors, in contrast, can search the web service registry for pre-registered web services to consume and invoke.","When searching for a web service or knowledgebase model, a service provider or requestor can enter a description of the desired web service into an interface of the web service registry. The desired web service can be effectively located by comparing the provided description of the desired web service to the semantic specifications of the web services in the web service registry. After a desired web service is located, the web service's knowledgebase model can be returned to the service provider or requester. A service provider can use the knowledgebase model to develop a web service of the same type as the desired web service, in accordance with the knowledgebase model. The interface of the web service registry can also return to locations of one or more registered instances of the desired web service. The service requester can then invoke one or more of the returned web services using the knowledgebase model, such as the semantic and syntactic specifications, as a guideline for invocation of the returned web services.","Domain knowledge experts can provide information, such as the knowledgebase models, to the knowledgebase. If a service provider or requestor cannot locate a desired web service or knowledgebase model, the service provider or requestor can interact with the domain knowledge experts through an interface to request the desired web service or knowledgebase model.","These and other objects, features, and advantages of the renovated web service architecture and management systems and methods will become more apparent upon reading the following specification in conjunction with the accompanying drawing figures.","To facilitate an understanding of the principles and features of the web service architecture and web service registry system and methods, various illustrative embodiments are described below. In particular, the invention is described in the context of being a system for managing web services having structured and organized knowledgebase models. Embodiments of the invention, however, are not limited to this context, but can be used for managing services of various types having defined specifications.","The components described hereinafter as making up various elements of the web service architectures, and web service registry system and methods, are intended to be illustrative and not restrictive. Many suitable components that would perform the same or similar functions as the components described herein are intended to be embraced within the scope of the invention. Such other components can include, for example, components developed after development of the invention.","Referring now to the figures, wherein like reference numerals represent like parts throughout the views, embodiments of the web service architecture and its systems and methods will be described in detail.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","110","120","130","140","150"]},"The plurality of web services  can be registered to the web service registry , which can publish registered web services . Service providers  can offer web services  for publication in the web service registry . Service requestors can discover and use web services published to the web service registry .","Service providers  and service requestors  can utilize computer systems to interact with the web service registry  to publish and locate web services  in accordance with regulations of the web service registry . For the sake of simplicity, the computer systems of service providers  are illustrated as servers . In contrast, the computer systems of service requestors  are illustrated as clients . It will be understood, however, that computer systems can serve multiple functions. Therefore, a computer system of a service provider  can behave as a client  in some instances, and a computer system of a service requestor  can behave as a server  in some instances. Although the computer systems of service providers  and service requestors  look different from each other in , there is no requirement that this be the case in an embodiment of the web service architecture . Further, despite the apparent similarity across service provider  computer systems in , different types of computer systems can be used by different service providers . Analogously, despite the apparent similarity across service requestor  computer systems in , different types of computer systems can be used by different service requestors .","In an exemplary embodiment, one or more portions of the web service registry , system, and method can operate on one or more computer systems, such as servers  and clients , and can be stored as computer-readable instructions on at least one computer storage medium. The computer storage medium can be in communication with or connected to the computer system. The instructions for operating and implementing the web service registry , system, and method can be executed by a computer processing unit associated with the web service registry . In some exemplary embodiments, the web service registry system can be implemented on a Visual Studio .NET platform. For example, and not limitation, a server  of the web service registry  can comprise a Pentium-4 3.0 GHz computer processor with 2 GB of RAM, running Microsoft Windows Server 2003. In some other exemplary embodiments, however, servers  with other specifications can be used.","As shown in , an exemplary embodiment of the web service registry  can comprise a knowledgebase , a control system , a search engine , and a registry database .","The knowledgebase  can maintain domain knowledge for use in the web service architecture . In an exemplary embodiment, data can be provided to the knowledgebase by domain knowledge experts  (). The knowledgebase can include, for example, a plurality of knowledgebase models  describing one or more web services  in the web service architecture . A knowledgebase  can comprise a semantic specification  and a syntactic specification . The semantic specification  can describe a meaning and purpose of a web service , while the syntactic specification  can define a syntactic interface for a web service . In an exemplary embodiment, the knowledgebase  can be stored in the registry database  or another database associated with the web service registry .","Although the semantic specification  and the syntactic specification  of a knowledgebase  can be inherently independent from each other, the knowledgebase  can create a correspondence between the semantic specification  and the syntactic specification . In an exemplary embodiment, the web service registry  can reject web services  that fail to comply with a knowledgebase  by implementing a semantic specification  and its corresponding syntactic specification , as defined by a knowledgebase  associated with the web service registry .","The knowledgebase  can include an ontology framework from which the semantic specifications  in the knowledgebase models  can be formulated.  illustrates an exemplary ontology framework  for web services  related to domain-specific knowledge, such as the Geographic Information Science (\u201cGIScience\u201d). The ontology framework  can provide a standard vocabulary for representing and communicating GIScience domain knowledge, which can be beneficial to successful web service  discovery.","A semantic specification  can define a concept of a web service , and can describe relationships between web services . Semantic specifications  can be used for service discovery, by matching search terms with the semantic specifications . Semantic specifications  can cover the hierarchy and relationships among the concepts about data and functional modules within an ontology framework . As a result, search queries can be more accurately interpreted and more effectively applied to semantic specifications  associated with the web service registry . Semantic specifications  for GlScience or other domain-specific web services  can include, for example, scientific descriptions, data and service characteristics, spatial coverage, temporal scope, and comprehensive lineage specifications, one or more of which can be available for search. Semantic specifications  in the knowledgebase  can be described in various formats, such as, for example, Web Ontology Language (\u201cOWL\u201d), Unified Modeling Language (\u201cUML\u201d), Extensible Markup Language (\u201cXML\u201d), database, graphics, or a combination of these or other formats.","One or more web services  published to the web service registry  can comply with knowledgebase models  and, more specifically, semantic specifications  in the knowledgebase . In an exemplary embodiment, each web service  published to the registry  can comply with a knowledgebase , or can be subject to removal for non-compliance. A web service  complying with a semantic specification  can be referred to as a semantically-defined web service .","The knowledgebase  can also include syntactic specifications , which can be combined with semantic specifications  to form the knowledgebase models  for various types of web services . A syntactic specification  can define an interface definition for a web service . For example, a syntactic specification  can describe information about input variables, expected outcomes, data types and structures, naming framework, operations, and possible error messages returned. A syntactic specification  can instruct service requesters  in how to call a web service  through a URL or application program interface (\u201cAPI\u201d). Providing a standard syntactic specification  for similar web services  can enable dynamic service invocation by making the calling format of similar web services  interchangeable. As a result, a service requestor  using an application to utilize a particular type of web service can swap between similar web services  offered by different service providers  without reprogramming the application. Thus, the service requestor  can dynamically invoke web services . Syntactic specifications  in the knowledgebase  can be described in various formats, such as WSDL or other XML formats.","Each semantically-defined web service  can have a unique identifier for internal organization and management of the knowledgebase  and the registry database . Correspondingly, each semantically-defined web service  can have a syntactic specification  corresponding to a semantic specification  in a knowledgebase . Service semantics in a semantic specification  are, in general, neutral and independent from service interface definitions in a syntactic specification . A semantically defined web service  can have a syntactic interface defined by either a structured URL or an API in WSDL. Both semantic specifications  and syntactic specifications  can be beneficial in a knowledgebase . Semantic specifications  can enable the service discovery, while syntactic specifications  can enable dynamic service invocation by providing standard syntactic interfaces.","The control system  can be an entry point to access the web service registry  through the registry interface . The control system  can process an incoming request sent to the web service registry  to determine whether the request is for service discovery, for service publication or registration, or to create a new service category and knowledgebase model . The control system  can dispatch the requested job to specific components for execution.","The control system  can enforce the knowledgebase models  by actively supervising and managing incoming web services , registered web services , or both. The control system  can examine an incoming web service , such as a web service  submitted for new registration, to determined whether the web service  complies with a knowledgebase . If the incoming web service  is operative and complies with a knowledgebase  associated with the web service registry , the incoming web service  can be published to the web service registry . Otherwise, the incoming web service  can be rejected and not published in the web service registry . Additionally, the control system  can periodically examine registered web services  to confirm that they still comply with the knowledgebase models , and that they remain operative. If a registered web service  is found inoperative or fails to comply with a knowledgebase , that web service  can be flagged for removal or immediately removed from the web service registry .","A web service  can be deemed inoperative if it fails a predetermined number of functionality tests, which can be based on a data template received from a service provider when initially registering the web service. In an exemplary embodiment, a web service can be deemed inoperative after five failed functionality tests.","The search engine  can locate web services  and knowledgebase models  requested by users  and  of the web service registry . The search engine  can use the conceptual definitions in the semantic specifications  to provide keyword or semantic searches of web services  published in the web service registry . The search engine  can have multiple components, such, for example, a query translation engine, a query processor and inference engine, and a query interpretation engine. A semantic search query can be executed through a multi-step process in the search engine .","The query translation engine can transform a user's search criteria, which can composed, for example, by a user interface or an API, into a formal semantic query format. The query processor and inference engine can parse the knowledgebase  according to the search criteria to generate intermediate results. In some exemplary embodiments, the intermediate results can be generated in a structured hierarchical format. The query interpretation engine can generates SQL commands from the intermediate results to search the registry database  for knowledgebase models  and\/or web services  matching the search criteria. Finally, the final results can be returned to the user  or , such as through the web or through an API. The search engine  and query processes of the search engine  can be enhanced through various means, such as natural language processing, pattern cognition, and statistical modeling.","If the search engine  identifies a registered web service  matching the user's search criteria, final results can be returned to the user . The final results can include at least a knowledgebase model, which can be used for calling or developing the web services. The final results can also include a list of service providers  offering the web service , and the locations of such offerings. In some exemplary embodiments, the list of service providers  and web service locations can be provided in response to requests from service requestors  who indicate a desire to consume a web service . In contrast, service providers , who desire to develop a web service, need not receive a list of service providers  and web service locations.","The registry database  can store various data associated with the web service registry . In an exemplary embodiment of the web service registry , the registry database  can be a relational database. The registry database  can store and maintain, for example, contents of the knowledgebase models , locations of registered web services , and information about service providers  offering the web services . The registry database  can be updated when new content is added to the knowledgebase , and when web services are newly registered to the web service registry . As necessary for operation of the web service registry , the database  can be accessible and searchable by various users, support agents, and other parties associated with the web service architecture .","The database can maintain a database record for each web service  in the web service registry . The database record for a web service  can contain a knowledgebase  corresponding to the web service , and references to instances of the web service. Multiple providers  can register and publish the same web service  in the web service registry . In that case, the database record for the registered web service  can contain a service provider  and location for each instance of the web service  in the web service registry . One or more, and preferably all, instances of registered web services  can have unique identifications, such as identification strings or numbers, also recorded in the database . The identifications can be independent from the knowledgebase models  corresponding to those web services . While each knowledgebase  can describe one or multiple instances of registered web services , each identification can be unique for each web service  instance. The identification for each instance of a web service  can be consistent throughout the system lifecycle.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 3","FIG. 3"],"b":["100","100"]},"As shown in , various interactions in the web service architecture  can occur through the registry interface . The registry interface  can comprise one or more units for interactions between users  and  and the web service registry . Such units can be interfaces, modules, applications, devices, systems, services, or combinations or portions thereof. The units of the registry interface  can include, for example, a service solicitation unit , a service provision unit , a service registration unit , a service in-action unit , and a service administration unit . Each of these units can have a web interface, an API, or both for interactions with users  and  of the web service registry .","The service solicitation unit  can receive requests from service requesters  soliciting new web services . A service requestor  can opt to solicit a new web service  through the service solicitation unit  when, for example, the service requestor is unable to locate the desired web service  in the web service registry . The solicitation unit  can publish service solicitations describing needs of service requestors . When a service requestor  fails to locate a desired web service  in the web service registry , the service requestor  can send a request to the web service registry  for the desired web service . Through the solicitation unit, the service requester  can describe the desired web service . For example, the service requestor  can complete a template or form to describe a semantic specification  for the desired web service  by specifying whether the desired web service  is a new service category or a sub-domain of an existing, semantically-defined web service  within the knowledgebase . In some exemplary embodiments, the solicitation unit  can also allow the service requester  to specify a desired syntactic interface definition for a syntactic specification  of the desired web service .","The information received from the service requestor  through the solicitation unit  can be transmitted to the domain knowledge experts . The domain knowledge experts  can approve or disapprove the new solicitation. If the solicitation is approved, a new knowledgebase  for the solicited web service  can be integrated into the knowledgebase . As applicable, either or both of the knowledgebase  and the registry database  can be updated to reflect the new knowledgebase . Then, the knowledgebase  and the description of the desired web service  can be reviewed and accessed through the registration unit  by service providers  who may choose to develop a web service  in accordance with the solicitation. If a web service  is later registered to the web service registry  and meets the criteria of the solicitation, the solicitation can then be removed from the knowledgebase  and the solicitation unit , and the content of the service in-action unit , which will be described further below, can be updated to reflect the new web service .","The service provision unit  can receive requests from service providers  having the capability to develop web services  that do not yet have corresponding knowledgebase models  recorded in the knowledgebase . The service provision unit  can receive a description of a potential new web service . For example, the service provision unit  can provide a template, through which the service provider  can describe the potential new service  through filling out a template to describe a semantic specification  for the potential new web service . The service provider can specify whether the potential new web service  is a new service category or a sub-domain of an existing, semantically-defined web service  within the knowledgebase . In some exemplary embodiments, the service provider  can also specify a desired syntactic interface definition for a syntactic specification  of the potential new web service .","The information received from the service provider  through the service provision unit  can be transmitted to the domain knowledge experts  as a new provision request. The domain knowledge experts  can approve or disprove the new provision request. If the provision request is approved, a new knowledgebase  corresponding to the potential new service can be integrated into the knowledgebase . As applicable, either or both of the knowledgebase  and the registry database  can be updated with the new knowledgebase , and a description of the potential new service can be reviewed and accessed through the service registration unit . Based on the description and the new knowledgebase model, service providers  can develop new web services . If a new web service  corresponding to the description and knowledgebase  is later registered to the web service registry , the provision request can be removed from the knowledgebase  and the service provision unit . The content of the service in-action unit , which will be described further below, can updated to reflect the new web service .","The service registration unit  can receive registration submissions from service providers . When a service provider  desires to register a web service , the service provider can submit information about the web service  to the service registration unit . The service registration unit  can collect certain information from the service provider , including an indication of the applicable semantic specification  or knowledgebase model  for the web service . The service registration unit can also receive from the service provider  a sample data template for confirming that the web service  is operative. The data template can be used to verify that the new web service  operates properly and complies with the syntactic specification  in the indicated knowledgebase . Additionally, when the control system  periodically checks whether the web services  registered to the registry perform properly, the data template can be utilized by the control system  to confirm that registered web services  continues to function as intended.","The service in-action unit  can be a gateway for peers to search for desired web services  or knowledgebase models . To perform various searches for desired web services , the service in-action unit  can collect information about the desired web services . The service in-action unit  can enable various types of searches, such as a keyword search or a search with categorized terminologies. Search information received through the service in-action unit  can be directed to the search engine  for processing. If a desired web service  or knowledgebase  is identified by the search engine, the search results can be returned through the service in-action unit . As described above, the search results can include knowledgebase models , locations of matched web services, and service providers  offering the matched web services .","The service administration unit  can provide technical and customer service support. The service administration unit  can provide internal administration services to operate and maintain the web service registry . In some exemplary embodiments, however, the service administration unit  can also provide support to users . Such support can be provided through automated support services, human support agents, or both. The service administration unit  can provide support applicable to one or more of the various other units , , , and  of the registry interface  or other aspects of the web service registry .",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 4","b":["400","110","110","170"]},"It will be understood that the method illustrated in  is illustrative and not restrictive. Therefore, although only certain method steps are show in , other steps can be include din a method of operating the web service registry . Additionally, not all method steps included in  need be required in every embodiment of the web service registry . It will be further understood that the method steps illustrated in  need not necessarily occur in the order presented.","As shown in , at , a web service registry  can be provided, preferably based on the knowledgebase models  in the knowledgebase . At , various operations can be performed within the web service registry , such as through the control system . For example, at , a request for a desired web service  can be received from a service requestor . At , the service requestor can be provided with knowledgebase  for the desired web service , as well as a list of service providers  and locations of available web services matching the desired web service . Returning back to , other operations can also be performed in the web service registry . For example, at , a request for new knowledgebase  can be received, and at , a new knowledgebase  can be provided to the knowledgebase  for service providers  to use. In an exemplary embodiment, the new knowledgebase  can be provided to the knowledgebase  by a set of domain knowledge experts . Further operations of the web service registry  can be performed . For another example, at , a request can be received from a service provider  for a knowledgebase , such as for the purpose of developing a web service . At , the web service registry  can provide the service provider  with the requested knowledgebase , if such a knowledgebase  exists in the knowledgebase . At , a web service  can be received for a new registration. If the received web service  meets all criteria for registration, the received web service  can be published to the registry . Such criteria for registration can include compliance with a knowledgebase . Further operations of the web service registry  can be performed . At , web services  failing to comply with the knowledgebase models  can be removed from the web service registry .","Accordingly, as described above, exemplary embodiments of the web service architecture , systems, and methods can be used to manage web services  for effective discovery and invocation of web services .","While embodiments of the web service architecture , systems, and methods have been disclosed in some exemplary forms, many modifications, additions, and deletions can be made without departing from the spirit and scope of the web service architecture , systems, and methods, and their equivalents, as set forth in the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
