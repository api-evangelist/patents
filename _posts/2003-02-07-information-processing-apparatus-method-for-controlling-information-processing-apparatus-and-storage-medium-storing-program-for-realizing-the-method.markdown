---
title: Information processing apparatus, method for controlling information processing apparatus, and storage medium storing program for realizing the method
abstract: A control method for an information processing apparatus which can be loaded with a device driver includes an installing step of installing a device driver, a determining step of determining whether or not a control program in the information processing apparatus is to be rebooted when the device driver is installed in the installing step, and a display controlling step of controlling display of a display screen for reboot when it is determined that reboot is required in the determining step.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06965953&OS=06965953&RS=06965953
owner: Canon Kabushiki Kaisha
number: 06965953
owner_city: Tokyo
owner_country: JP
publication_date: 20030207
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Field of the Invention","The present invention relates to an information processing apparatus connectable to a peripheral device, a storage medium storing a control program for controlling the information processing apparatus, etc.","2. Related Background Art","Recently, the arithmetic ability of a computer has remarkably been improved with an operating system (OS) using a graphical user interface (GUI) adopted, and with a driver program for control of a peripheral device installed much more easily than a character user interface (CUI).","In an environment loaded with a common OS, a standard installer development environment has been provided. When an installer of a device driver is generated, it is considered to be easily developed by implementing only a necessary function for the installation of the device driver following the operation flow provided by the development environment. Thus, an installer developed in the development environment has been distributed and used.","When an installing process is performed on a device driver, it is common and safe means to reboot an OS to normally operate a device driver and allows the OS to perform an initializing process on the system. At this time, on the last process screen () of the installer, a selection specification screen for selection by the user as to whether the reboot is to be performed immediately or later can be displayed on the screen of the computer.","When the reboot is to be avoided, the user requests the computer and specifies through the selection specification screen the selection of the reboot to be performed after necessary processes so that the reboot can be suppressed immediately after the installing process. For example, when a device driver is installed in the daylong operating computer, a user may avoid the reboot to the utmost after the installing process. On the other hand, in installing a device driver, there can be a case in which the operation of a system is guaranteed without reboot depending on conditions.","However, the system in which a device driver is installed uniformly displays a fixed reboot specification input screen without determination as to whether or not the reboot is required. Therefore, there is the problem that it is necessary for a user to determine the necessity of rebooting a system. To determine whether or not the system reboot is required, special knowledge about an OS, a device driver, a service provided by the system, etc. is required. As a result, it is difficult for a common user to independently determine the necessity.","Furthermore, if a user operates a computer without appropriately determining the necessity of rebooting the system, there occurs the problem that the system does not appropriately operate as a result of no rebooting operation although the system requires the rebooting operation. On the other hand, there also occurs the problem that, since the user cannot determine the necessity of rebooting the system, the system is unnecessarily rebooted when the reboot is not required.","The present invention has been developed to solve the above mentioned problem, and aims at providing a system of: determining whether or not reboot is required when a device driver is installed in a computer; controlling a system on the installation side based on the determination result; avoiding unnecessary reboot while performing necessary reboot, and performing an appropriate installing process of a software module.","Another object of the present invention is to: determine whether or not reboot is required when a device driver is installed in a computer; display a screen about reboot by configuring it based on the determination result; release a user from the difficult determination as to whether or not the reboot is required; and perform an appropriate installing process.","To solve at least one of the above-mentioned problems, the following mean is provided in the embodiments of the present invention.","For example, an embodiment of the present invention is a control method of an information processing apparatus which can be loaded with a device driver, and includes: an installing step of installing a device driver; a determining step of determining whether or not a control program in the information processing apparatus is to be rebooted when the device driver is installed in the installing step; and a display controlling step of controlling the display of a display screen for reboot when it is determined that reboot is required in the determining step. Additionally, the apparatuses, etc. applied for the above-mentioned methods are disclosed.","Other features and advantageous of the present invention will be apparent from the following description taken in conjunction with the accompanying drawings, in which like reference characters designate the same or similar parts throughout thereof.","The embodiments of the present invention are described below in detail by referring to the attached drawings.","(First Embodiment)",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 1"},"In , a host computer  which is a preferable example of the information processing apparatus according to the present invention comprises a CPU  for performing a document process in which graphics, images, characters, table (including spreadsheets, etc.), etc. exist in a mixed manner based on a document process program, etc. stored in ROM for a program of ROM , external memory , and the CPU  totally controls each device connected to a system bus . Additionally, the ROM for a program of the ROM  or the external memory  which is storage means stores an operating system program (hereinafter referred to as an OS), etc. which is a control program of the CPU , stores in the ROM for font in the ROM , the external memory  the font data, etc. used in the above mentioned document process, and stores in the ROM for data in the ROM  or the external memory  various data used in the above mentioned document process, etc. RAM  functions as the main memory, the work area, etc. of the CPU .","A keyboard controller (KBC)  controls the key input from a keyboard  and the pointing device not shown in the attached drawings. A CRT controller (CRTC)  controls the display of a CRT display (CRT) , which is a preferable example of display means. A disk controller (DKC)  controls the access to the external memory  such as a hard disk (HD), a floppy disk (FD), etc. storing a boot program, various applications, font data, a user file, an edit file, a printer control command generation program (hereinafter referred to as a printer driver) which is an example of a device driver, etc. A printer controller (PRTC)  is connected to a printer  through a bidirectional interface (hereinafter referred to simply as an interface) , and performs a communications controlling process with the printer  that is an image forming device and is a preferred example of a peripheral device of the present invention.","The CPU  performs a process of lusterizing an outline font to display information RAM set on, for example, the RAM , and enables the WYSIWYG on the CRT . The CPU  opens various windows recorded based on a command specified by a mouse cursor, etc. displayed on the CRT  which is operated by specification input from a mouse  which is a preferred example of input specification means, and performs various data processes. When a user performs a printing process, a window relating to a setting of printing is opened so that a printer can be set, and a printing process method for a printer driver including selection of a print mode can be set.","The printer  is controlled by a CPU . The CPU  of the printer outputs an image signal as output information to a printing unit (printer engine)  connected to a system bus  based on a control program, etc. stored in a control program stored in the ROM for program of ROM , etc. or a control program, etc. stored in external memory . The program ROM of the ROM  stores a control program, etc. of the CPU . The ROM for font of the ROM  stores font data, etc. for use in generating the output information, and the ROM for data of the ROM  stores information, etc. used on a host computer when the printer has no external memory  such as a hard disk, etc.","The CPU  can communicate with the host computer through an input unit , and can notifies the host computer  of the information, etc. in the printer. RAM  functions as main memory, a work area, etc. of the CPU , and is configured such that a memory capacity can be extended by optional RAM connected to an extension port not shown in the attached drawings. The RAM  is used as an output information extension area, an environment data storage area, NVRAM, etc. The above-mentioned external memory  such as a hard disk (HD), an IC card, etc. is access-controlled by a disk controller (DKC) . The external memory  is optionally connected, and stores font data, an emulation program, form data, etc. The input unit  is provided with a switch, an LED indicator, etc. for operation on the above mentioned operation panel.","The external memory  is not limited to a single unit, but a plurality of external memory units storing, in addition to the built-in font, an optional card, and a program for interpretation of different printer control language systems can be connected. Furthermore, it can be provided with NVRAM not shown in the attached drawings to store printer mode setting information from an operation panel, etc. not shown in the attached drawings.","Described below is the process performed by an installer, which is a preferred example of a control program for control of the information processing apparatus of the present invention. As a preferred OS environment of the present embodiment, Windows (trademark) of Microsoft Corporation is assumed, and different types of OS environments of Microsoft Corporation are assumed, but the OS is not limited to those of Microsoft. Furthermore, according to the present embodiment, a printer driver corresponding to different OS can be installed by a single installer, but an installer can be configured for each OS according to the present embodiment.","The installer according to the present embodiment can install not only a printer driver, but also a configuration information module which is software capable of cooperating with various services such as the management of a printer driver, device status information, etc., job management, etc. For example, configuration information module can be considered as software capable of cooperating with, for example, a printer. A configuration information module in the present embodiment can be a module group capable of inquiring of the printer  connected to the host computer about the information such as equipment configuration information, etc. and notifying a printer driver of the result, and can be provided as a part of a driver module.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 4","FIG. 4"],"b":["4","3000"]},{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 14","FIG. 1"],"b":["3000","1500","3001","1501","1502","1400","14","1400","3000","3001"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 2","FIG. 3","FIGS. 2 and 3","FIG. 2"],"b":["204","2"]},"First, in step S, the installer performs an initializing process. Practically, the installer sets a flag indicating whether or not the printer driver is to be rebooted to \u201cNO,\u201d that is, sets the flag such that the printer driver cannot be rebooted when the installing process is performed. Simultaneously, the flag indicating whether or not the configuration information module is to be installed is set to \u201cNO,\u201d that is, set such that the installation cannot be performed, and then the installing process is performed.","In step S, the installer that is a software module determines whether or not the configuration information module has been installed. In step S, when the installer determines that the configuration information module has been installed, control is passed to step S, and the installer changes the configuration information module installation flag into \u201cYES.\u201d If the configuration information module installation flag indicates \u201cYES,\u201d then the installer of the present embodiment performs an updating process (overwrite installation) without issuing an inquiry to a user if the current version of the configuration information module of the device driver is the same as or older than the version of the device driver to be installed. Since the configuration information module according to the present embodiment is compatible with lower versions, the trouble of issuing an inquiry to a user as to whether or not the installation is performed can be omitted. In the present embodiment, a driver and a configuration information module to be installed are to be newer than the current units. If it is determined in S that a configuration information module has not been installed, then control is passed to step S.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 5","FIG. 5"],"b":["203","202","203","501","502","501","502","501","502","11","204"]},"In step S, the installer controls the process of reading the information stored in the external memory, thereby making information determination as to whether or not the installation is to be performed. That is, if the installer determines according to the read information that the configuration information module is to be installed, that is, if the installer determines in S that the configuration information install specification unit has been checked, then control is passed to step S, and the installer controls the process of changing the configuration information module installation flag into \u201cYES,\u201d and control is passed to step S. On the other hand, if the installer determines in S that the configuration information module is not to be installed, then control is passed directly to step S.","In step S, the currently operating OS is checked. In step S, the installer determines whether or not the currently operating OS requires the reboot after the installation, and, if the reboot after the installation is requires, the installer changes the flag indicating that the reboot is required after the printer driver installation into \u201cYES\u201d in step S. For example, the OS requiring the reboot includes WINDOWS 95 (trademark) because, for example, based on the specification of the module including a language monitor, etc. configured for the OS, the module providing a printing process service is not appropriately loaded or unloaded, and may require reboot to perform an appropriate operation. On the other hand, according to the present embodiment, it is not necessary to perform reboot on the OS using the so-called NT type kernel based on the specification of the driver module configured for the OS.","Thus, the installer (determination means) determines the necessity of performing reboot depending on the type of OS corresponding to the device driver to be considered in the installing process. When there is a printer driver corresponding to plural types of OS, reboot is required when a certain driver module corresponding to an OS is installed, but reboot is not required when another driver module corresponding to another OS is installed. Therefore, it is preferable to determine the necessity for an installing process based on a correspondence table between a driver and an OS requiring the reboot of the driver in the host computer.","Then, in step S, all files are checked as to whether or not there is a file of a module configuring a printer driver under the directory in which a printer driver is to be installed. In this process, the file check is made on the printer drivers of all OS configuring the system including the second host computer  in addition to an OS loaded into the host computer . In this process, the drivers for other OS are installed in the host computer  in advance to correspond to the point & print capability supported in a specific OS, for example, the capability of installing a driver in the second host computer  by issuing an instruction to perform an installing process to the host computer  from the second host computer  loaded with an OS different in type from the OS of, the host computer . That is, an alternative driver for a printer driver operating in the OS of the second host computer  is installed in the host computer . This function can be realized by selecting a check box  for selecting whether or not an alternative driver is to be installed in  in S described later.","In step S, if there is a file having the same name as the file configuring the printer driver to be installed in the directory on the installation side of the printer driver, then control is passed to step S, and the printer driver reboot flag indicating that the reboot after the installation of the printer driver is required is changed into \u201cYES.\u201d If the device driver the same in type as the printer driver to be installed has already been installed in the host computer, then the printer driver is overwritten, thereby rebooting the OS later to appropriately load and unload a module.","Thus, the installer (driver recognition means) recognizes whether or not there is a printer driver to be installed in the host computer , and the installer (determination means) sets the printer driver reboot flag to \u201cYES\u201d when the printer driver to be installed is recognized as existing in the information processing apparatus. When the installer (determination means) reads the flag in S shown in  as described later, it determines that the reboot of the OS is required.","In step S, if there is not a file having the same name as the file configuring the printer driver to be installed in the directory on the installation side of the printer driver, then control is passed to step S. It is determined in step S whether or not there is a printer driver configuration file for the above mentioned other OS, that is, a file for an alternative driver. If \u201cyes,\u201d then control is passed to step S, the flag indicating that the reboot after the printer driver installation is required is set to \u201cYES,\u201d and control is passed to step S.","In step S, the installer recognizes the printer driver corresponding to the connected printer  based on the user selection. In , the printer A is displayed as a result of the user selecting a printer in the column of the list of the driver additional install printer. Correspondingly, the name of the driver to be installed is described. In , a plurality of printer drivers can be selected in one operation.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 9","FIG. 10","FIG. 9","FIG. 9","FIG. 10","FIG. 10"],"b":["901","902","903","213","1001","1002","3000","3001","14","3001","1002","3001","1001"]},"In step S, the settings of the selection and input results by the user are confirmed.  shows a setting confirmation screen of user selection and input results. A printer A and the corresponding printer driver A are added to the shared printer name input unit , and the already installed printers H, I, and D, and the corresponding printer drivers H, I, and D are displayed. If the \u201cnext\u201d button is pressed, the printer driver A is additionally installed, and the printer drivers H, I, and D are update-installed (overwrite-installation). In the system shown in , the printer drivers H, I, and D have already existed in the host computer. Therefore, the printer driver reboots flag indicating the necessity for reboot in S is set to \u201cYES.\u201d","In S according to the present embodiment, a plurality of printer driver installers originally provided for an installer are assumed to be printer drivers to be installed, and it is determined whether or not the driver to be installed has already been installed in the host computer. As a variation example, the installer (driver recognition means) recognizes a device driver to be installed based on an external selection specification input, and can recognize whether or not the driver to be installed has existed in the host computer  by assuming that the recognized device driver is a driver to be installed.","In another variation example, when a part of a file configuring a printer driver of the installer according to the present invention overlaps a file configuring the printer driver not held in the installer according to the present invention, it can be determined that a driver requiring reboot has been installed.","Detailed explanation of the above mentioned variation example will be below performed by referring to .",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 15"},"A reference numeral  in  shows a file group configuring a printer driver (hereinafter referred to as the printer driver  for explanation) installed in the host computer , and their file versions. On the other hand, a reference numeral  denotes a printer driver being installed by the installer according to the present invention (hereinafter referred to as a printer driver ). The printer driver  is not provided for the installer according to the present invention, but has a file having the same name \u201cCOLORMOD.DLL\u201d as a configuration file. In this example, the printer driver  and the printer driver  are printer drivers, which are provided by the same development source and are PDL printer drivers different in type from each other. \u201cCOLORMOD.DLL\u201d is a color function module commonly used by the PDL.","PSDRV.DLL shown in  is a module corresponding to the PS language, and PCLDRV.DLL is a module corresponding to the PCL language. The numeral enclosed by the parentheses indicates the version of each module. PSDRVUI.DLL is a module for a user interface corresponding to the PS language (postscript language), and PCLDRVUI.DLL is a user interface module provided for a driver corresponding to the PCL language.","PSDRV.DLL, PCLDRV.DLL, etc. are modules of different types, but use COLORMOD.DLL as a function module commonly used for PDL.","An example of modules which are overwritten because they have the same module names although they are different driver modules can occur when the printer drives correspond to different PDLs having the common modules having the same names, and provided as a different install set from the same development source. It also occurs when another function module provided by the OS is also enclosed. In the example shown in , the version of \u201cCOLORMOD.DLL\u201d included in the printer driver  is 1.9.0, and the version of \u201cCOLORMOD.DLL\u201d included in the printer driver  is 1.9.4. If the printer driver  is installed, \u201cCOLORMOD.DLL\u201d of the printer driver  is overwritten by the process of the OS or the installer. The function module commonly used by PDL is normally compatible between lower modules, and both printer drivers can normally operate after overwrite installation.","However, the overwritten \u201cCOLORMOD.DLL\u201d may have been loaded by other DLL, etc. before the overwriting. Therefore, it is safer to reboot the OS to normally terminate the overwriting operation. Thus, the reboot flag can be set ON for a configuration file of a printer driver other than the printer driver to be installed if the file names match.","On the other hand, essentially the modules having different names cannot be overwritten. Furthermore, an independent module that is not a common module is not loaded and held by other modules although it is overwritten. Therefore, there may be no problem although a rebooting process is not performed.","When a module really requiring reboot is overwritten, it is determined whether or not the reboot is required based on whether or not the module has been overwritten, and the apparatus is controlled for reboot, thereby reducing the frequency of the rebooting operations, and improving the availability of a server, etc.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 16","b":"210"},"In step S, it is determined whether or not the check has been completed as to whether or not all files to be installed have already existed in the specified folders for installation. If \u201cyes,\u201d control is passed to step S. If not, control is passed to step S.","It is checked in step S whether or not a file having the same name as a file to be installed has already been stored in the specified folder. If there is a file having the matching name, then control is passed to step S. On the other hand, if there is no file having the matching name, then control is passed to step S, control is passed to the next check target file to be installed, and control is returned to step S.","In step S, a file version is confirmed if a matching file name is detected. If the file already stored in the specified folder has a newer version or the same version, then no overwriting process is performed, thereby returning control to step S. If the file already stored in the specified folder is an older version, an overwriting process is performed during installation. Therefore, it is determined that reboot is required, and control is passed to step S.","In this flowchart, a file version is used in determining a file-overwrite. However, it is obvious that it can be determined according to the time stamp information about a file.","In the above mentioned processes, an appropriate reboot determining process can be performed while assuming a case in which configuration files to be installed can overlap although a printer driver is not the printer driver to be installed by the installer.","In step S, the installer determines whether or not the configuration information module installation flag indicates \u201cYES.\u201d If the installer determines in step S that the configuration information module installation flag indicates \u201cYES,\u201d then control is passed to step S, and the configuration information module installing process is performed. In the initializing process in S, the installer which is a preferred example of the installation means of the present invention performs an OS service stopping process, a file copying process, a program recording process in the registry, and a service resuming process using an API provided by the OS as a series of installing processes. If an error code indicating the necessity for reboot is returned in the return value from the API to be used as a result of the present installing process, then the installer controls the OS to store the value of \u201cYES.\u201d This flag is stored as installation information as a value indicating the installation state when the configuration information module is installed. Practically, the installer controls the OS to store the value of \u201cYES\u201d in the registry defined in the OS.","In S after S, the installer determines whether or not there is a return value indicating the necessity for reboot as a return value of the API of the OS as a result of the above-mentioned installing process. The configuration information installation flag is set to \u201cYES\u201d when the API of the OS is installed and a return value indicating that reboot is required, and the processes of providing the services such as a spool monitor, the job management, the device management, etc. require initialization by rebooting the host computer including the OS to release the state of monopoly by other processes.","If the installer determines in S that there is a return value indicating that the reboot is required, and determines that the OS is to be rebooted, then the installer issues an instruction in S to the OS to set the configuration information reboot flag to \u201cYES,\u201d and control is passed to step S. It is obvious that each flag is written by the installer itself. If the installer determines in S that there is no return value from the APS indicating that reboot is required, then control is passed to step S.","In S, a module of a printer selected in S is selected from the printer driver stored in the specified folder, and an installing process is performed, and control is passed to step S. In S, practically, the file copying process, and a recording process in the system using the API provided by the OS, are performed.","In S, the installer determines whether or not at least one of the printer driver reboot flag, and the configuration information module reboot flag indicates \u201cYES.\u201d That is, the installer that is a preferred example of the determination means according to the present invention determines whether or not the reboot of the OS, which is a preferred example of the control program in the host computer  is required. Furthermore, when the configuration information module installation flag indicates \u201cYES,\u201d it can be determined whether or not the reboot of the program for providing a state management service of the print device as a preferred example of the control program is required based on the return value of the API of the OS used during installation.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 6","FIG. 7","FIG. 6"],"b":["306","6","307","601","6","308","601","7"]},"In step S, if a user input value as to whether or not reboot is required is determined, and a rebooting process is selected, then control is passed to step S, and the OS is rebooted, thereby terminating the process. On the other hand, when no reboot is selected in S, the process terminates immediately.","The installer which is a preferred example of a display control means of the present invention can control and display a display screen on which reboot can be specified when the installer (determination means) determines that the reboot is required, and can control not to display the screen on which reboot can be specified if the installer (determination means) determines that the reboot is not required.","As described above, since it is determined whether or not reboot is required depending on the type of OS, the determination as to whether or not reboot is required can be made by referring to, for example, a table without complicated implementation. Additionally, for example, using a return value from the API of the OS, the necessity for reboot can be determined, thereby utilizing the existing API, and successfully reducing the number of developing steps.","(Second Embodiment)",{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 13","FIG. 2"],"b":["3","214"]},"The processes in S to S are the same as those shown in , but the processes in S and S are different as described below.","In step S, the installer determines whether or not the configuration information module installation flag indicates \u201cYES.\u201d Then, if the installer determines in S that the configuration information module installation flag indicates \u201cYES,\u201d then control is passed to step S, and the configuration information module installing process is performed. In the installing process in S, the installer which is a preferred example of installation means according to the present invention performs an OS service stopping process, a file copying process, a program recording process in the registry, and a service resuming process using an API provided by the OS. If an error code indicating the necessity for reboot is returned in the return value from the API as a result of the present installing process, then the installer controls the OS to store the value of \u201cYES.\u201d Thus, the installer (determination means) that has installed the installation configuration module obtains an installation result of the installation configuration module, and can determine the necessity for reboot depending on the installation result of the program module. This flag is stored as installation information as a value indicating the installation state when the configuration information module is installed. Practically, the installer controls the OS to store the value of \u201cYES\u201d in the registry defined in the OS. On the other hand, if the installer determines that the configuration information module flag is not \u201cYES\u201d in S, then control is passed to step S.","Back in S, control is passed to step S, and the installer determines whether or not there is a return value indicating the necessity for reboot as a return value of the API of the OS as a result of the above-mentioned installing process. The configuration information installation flag is set to \u201cYES\u201d when the API of the OS is installed and a return value indicating that reboot is required, and the processes of providing the services such as a spool monitor, the job management, the device management, etc. require initialization by rebooting the host computer including the OS to release the state of monopoly by other processes.","If the installer (determination means) determines in S that there is a return value indicating that the reboot is required, and determines that the OS is to be rebooted, then the installer issues an instruction in S to the OS to set the configuration information reboot flag to \u201cYES,\u201d and control is passed to step S. It is obvious that each flag is written directly by the installer.","If the installer determines in S that there is no return value from the APS indicating that reboot is required, then control is passed to step S. In S, a module of a printer selected in S is selected from the printer driver stored in the specified folder, and an installing process is performed, and control is passed to step S. In S, practically, the file copying process, and a recording process in the system using the API provided by the OS, are performed.","In S, the installer determines whether or not at least one of the printer driver reboot flag, and the configuration information module reboot flag indicates \u201cYES.\u201d That is, the installer that is a preferred example of the determination means according to the present invention determines whether or not the reboot of the OS, which is a preferred example of the control program in the host computer  is required. Otherwise, as a preferred example of a control program, when the configuration information module installation flag indicates \u201cYES,\u201d it can be determined whether or not the reboot of the program for providing a state management service of the print device is required based on the return value of the API of the OS used during installation.","In S, if the installer (determination means) determines that at least one of the printer driver reboot flag and the configuration information module reboot flag indicates \u201cYES,\u201d and reboot is required, then control is passed to step S, and controls the OS to automatically reboot without awaiting user input, thereby terminating the process. If the installer (determination means) determines that none of the printer driver reboot flag and the configuration information module reboot flag indicate \u201cYES\u201d and reboot is not required, then it displays the information that the installing process has been appropriately completed on the CRT of the host computer  without displaying the reboot specification input screen in S, thereby terminating the process.","Furthermore, the installer installs the installation configuration module for connection to the service of obtaining the status of a printer by cooperating with the device driver, and determines the necessity for reboot upon receipt of a response that the reboot is necessary through the application programming interface of the OS in the host computer . The service includes obtaining the status of a printer, the information about the presence\/absence of a consumable material, the state of the network connection of a printer, the division management relating to the count of copies in the printing process, etc.","The reboot according to the present embodiment includes not only a part or all of the reboot of the power unit used by the host computer, but also the reboot on the OS only and the reboot of the control program for providing a service.","That is, when the printer driver reboot flag is \u201cYES,\u201d and when the OS can be rebooted without stopping the power supply to the host computer, the installation can possibly be completed by the reboot of the OS only. Furthermore, when the configuration information reboot flag is \u201cYES,\u201d only the control program for providing a service may have to be rebooted.","As described above, if the installer determines that reboot is required, the reboot is automatically performed. Therefore, the user can be free of difficult determination. Furthermore, when the installer determines that reboot is not required, the screen for reboot is not displayed. Therefore, the user can continue the necessary process currently being performed without interruption.","(Third Embodiment)","According to the first embodiment, in the method of displaying the determination result as to whether or not reboot is required, the initial value on the display is changed using a radio button . However, when reboot is required as in the present embodiment, the radio button  is replaced with a message that reboot is being performed, and the reboot is automatically performed. On the other hand, if the reboot is not required, then the reboot result display can be omitted, and the installing process can be terminated.","Thus, the determination as to whether or not the OS is to be rebooted after the installation can be displayed in a plurality of display methods, and the method for modifying the display methods is described below.",{"@attributes":{"id":"p-0098","num":"0097"},"figref":["FIG. 12","FIG. 12"]},"As described above, according to the present embodiment, it is determined whether or not the reboot after the installing process is required, and the determination result is displayed on the last process screen, thereby providing a user-desired installer.","(Other Embodiments)","The processes shown in , , and  according to the present embodiment can be performed by each of the host computer , the second host computer , a print site . In this case, the present invention can be applied when an information group including a program is provided for the host computer using a storage medium such as CD-ROM, flash memory, an FD, etc. or an external storage medium through a network.","As described above, it is obvious that the objects of the present invention can be attained by providing a storage medium storing a program code of the software realizing the functions of the above mentioned embodiments for the system or the apparatus, or downloading it from an external server (not shown in the attached drawings) so that the computer (or CPU or MPU) of the system or apparatus reads out and executes the program code stored on the storage medium.","In this case, the program code read from the storage medium realizes a new function of the present invention, and the storage medium storing the program code configures the present invention. The storage medium for providing the program code can be, for example, a floppy disk, a hard disk, an optical disk, a magneto-optic disk, a DVD, a CD-ROM, a magnetic tape, a non-volatile memory card, a ROM, an EEPROM, etc.","Furthermore, the functions according to the above mentioned embodiments can be realized by executing the program code read by the computer, and the OS (operating system) operating on the computer, etc. can perform a part or all of the actual processes according to the instruction of the program code, and the functions according to the above mentioned embodiments can be realized by the processes obviously. Furthermore, after the program code read from the storage medium is written to the memory provided for the feature extension board inserted into the computer and the feature extension unit connected to the computer, the CPU, etc. provided for the feature extension board and the feature extension unit can perform a part or all of the actual processes at an instruction of the program code to realize the functions of the above mentioned embodiments according to the present invention.","As described above, according to the present invention, it is determined whether or not reboot is required when a device driver is installed in a computer, and the system on the installation side is controlled based on the determination result, thereby performing necessary reboot while avoiding unnecessary reboot, and performing an appropriate installing process of a software module.","Furthermore, when a device driver is installed in a computer, it is determined whether or not reboot is required, and the screen for reboot is configured and displayed based on the determination result, thereby releasing the user from a difficult determination on the necessity for reboot, and allowing the user to perform an appropriate installing process."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 3","FIG. 2"],"b":"204"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 13","FIG. 3"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 16"}]},"DETDESC":[{},{}]}
