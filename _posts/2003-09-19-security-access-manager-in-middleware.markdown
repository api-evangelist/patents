---
title: Security access manager in middleware
abstract: Method and system for controlling access to a platform for a mobile terminal for a wireless telecommunications system or for another product. The system includes a platform having a software services component and an interface component having at least one interface for providing access to the software services component for enabling application domain software to be installed, loaded, and run in the platform. An access controller controls access to the software services component by the application domain software via the at least one interface. The access controller includes an interception module for receiving a request from the application domain software to access the software services component, and a security access manager for determining if the permission request should be granted. The application domain software is granted access to the software services component via the at least one interface if the permission request is granted by the security access manager.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07149510&OS=07149510&RS=07149510
owner: Telefonaktiebolaget LM Ericsson (publ)
number: 07149510
owner_city: Stockholm
owner_country: SE
publication_date: 20030919
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE EXEMPLARY EMBODIMENTS OF THE INVENTION"],"p":["This application claims the benefit of priority from and incorporates by reference the entire disclosure of U.S. Provisional Patent Application No. 60\/412,844, filed on Sep. 23, 2002. This application claims the benefit of priority from and incorporates by reference the entire disclosure of U.S. Provisional Patent Application No. 60\/412,756, filed on Sep. 23, 2002. This patent application incorporates by reference the entire disclosure of U.S. patent application Ser. No. 10\/359,772, which was filed on Feb. 7, 2003. This patent application incorporates by reference the entire disclosure of U.S. patent application Ser. No. 10\/359,835, which was filed on Feb. 7, 2003. This patent application incorporates by reference the entire disclosure of U.S. patent application Ser. No. 10\/359,911, which was filed on Feb. 7, 2003.","1. Technical Field of the Invention","The present invention relates generally to the field of wireless telecommunications; and, more particularly, to a system and method for controlling access to a platform for a mobile terminal for a wireless telecommunications system.","2. Description of Related Art","Since cellular telecommunications systems were first introduced in the 1980s, mobile terminals (Mobile Stations) utilized in the systems have become increasingly more complex. Initially, mobile terminals were designed primarily to provide voice telephony services; i.e., to receive and transmit voice communications. In later years, mobile terminals were developed that also included the ability to transfer user data not related to that of a voice telephone call. Such user data included, for example, data to be transferred over a dial-up networking connection initiated via a personal computer (PC).","Currently, so-called \u201cthird generation\u201d (3G) systems are being developed for future mobile telecommunications systems. 3G systems will combine high-speed Internet access with traditional voice communication, and will provide a user with access to Internet browsing, streaming audio\/video, positioning, video conferencing and many other capabilities in addition to voice communication.","The Third Generation Partnership Project (3GPP) was established to ensure compatibility among the several 3G systems that are being developed around the world. The Universal Mobile Telephone System (UMTS) is being developed by 3GPP to provide a 3G system that includes terrestrial and satellite systems capable of delivering voice, data and multimedia anywhere in the world.","The drastically increased functionality that is being included in cellular telecommunications systems via the 3GPP standardization has placed substantial demands on the developers of mobile terminals to be used in the systems. This demand is exacerbated by the fact that a mobile terminal is a \u201cresource scarce\u201d environment that is limited in size, memory and power.","Traditionally, mobile terminal manufacturers have designed, fabricated and marketed substantially complete mobile terminal systems that include all the hardware and software needed for basic terminal operation as well as the hardware and software needed to provide the features and capabilities desired by the manufacturer or a particular user based on their perception of market needs. Such an approach does not provide the flexibility to quickly adapt to rapid changes in market demands or to satisfy the diverse requirements of multiple users.","Recognizing the inadequacies of traditional procedures for designing and fabricating mobile terminals, a mobile terminal platform assembly has been developed that includes a plurality of functionally complementary units of software and hardware that can be marketed as a unit to a plurality of users. Each user can then install, load, and run his own application software into the assembly to provide a tailored platform system for a mobile terminal that meets the user's own particular needs. The mobile terminal platform assembly and the platform system are described in detail in commonly assigned U.S. patent application Ser. Nos. 10\/359,911 and 10\/359,835, the disclosures of which are hereby incorporated by reference.","A platform system such as described above, wherein mobile terminal platform assembly software and application software are developed separately and then later combined by installing, loading, and running the application software in the mobile terminal platform assembly, may require a non-native application such as a Java midlet to run on a virtual machine. The virtual machine guarantees that, for example, no illegal memory access will take place. However, such non-native applications depend on functionality that is provided by the native code of the mobile terminal platform assembly. Unrestricted access to such native functionality in, for example, the platform domain or the application domain, may jeopardize the integrity of the mobile terminal by, e.g., initiating cost incurring events without notifying the end user.","Certificates of origin are used on applications to determine the extent of trust therein and therefore grant access to a subset of the services made available by the mobile terminal platform assembly to the non-native execution environment. However, the situation is further complicated by the fact that the permissions granted might be changed in run-time by the end user of the mobile terminal.","Therefore, there is a need for a dynamic registration of the permissions as well as dynamic filtering of the access to the native code of the mobile terminal platform assembly at any time (e.g., run time).","A system for controlling access to a platform includes a platform having a software services component and an interface component. The interface component has at least one interface for providing access to the software services component for enabling application domain software to be installed, loaded, and run in the platform. The system also includes an access controller for controlling access to the software services component by a requesting application domain software via the at least one interface. The access controller includes an interception module for receiving a request from the requesting application domain software to access the software services component and a decision entity for determining if the request should be granted. The requesting application domain software is granted access to the software services component via the at least one interface if the request is granted.","A method of controlling access to a platform having a software services component and an interface component includes receiving a request from a requesting application domain software to access the software services component. The interface component has at least one interface for providing access to the software services component for enabling application domain software to be installed, loaded, and run on the platform. The method also includes determining if the request should be granted and, if the request is granted, granting access to the requested software services component via the at least one interface.","A system for controlling access to a platform for a mobile terminal for a wireless telecommunications system includes a platform having a software services component and an interface component. The interface component has at least one interface for providing access to the software services component for enabling non-native application software to be installed, loaded, and run on the platform. The system also includes an access controller for controlling access to the software services component by the non-native application software via the at least one interface. The access controller includes an interception module for receiving a request from the non-native application software to access the software services component and a decision entity for determining if the request should be granted. The non-native application software is granted access to the software services component via the at least one interface if the request is granted.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 1","b":["10","12","14","12","10","16"]},"Mobile terminal platform assembly  includes a software services component , a hardware component , and an interface component . Software services component  includes a plurality of well-structured functional software units for providing services that are offered to users via the interface component . In the exemplary system  illustrated in , the plurality of software units include a plurality of vertically-oriented functional software stacks \u2013. The hardware component  includes a set of hardware units that are associated with and controlled by their respective functional software stacks \u2013. In the exemplary system  illustrated in , the hardware units are different hardware blocks \u2013 associated with the software stacks \u2013.","The interface component  includes a middleware services layer that includes at least one application programming interface (API) for installing, loading, and running one or more applications  in mobile terminal platform assembly , that isolates the mobile terminal platform assembly  from the applications  using the assembly  via the interfaces, and that provides various other services for the applications . Specific details of the middleware services layer will be described hereinafter.","Mobile terminal platform assembly  of platform system  is adapted to be designed, implemented, assembled, and tested as a complete, enclosed unit separate from the application software  (the term \u201capplication software\u201d as used herein can be any software that provides the functionality that users (e.g., manufacturers or end users) may wish to have available in addition to the platform software functionality). Users can, accordingly, develop or otherwise acquire their own application software  and add that software  to the mobile terminal platform assembly  at a later time in order to tailor the platform system  to their needs. Mobile terminal platform assembly  can, accordingly, be sold or otherwise transferred to a plurality of different users each of which can tailor the platform system  by installing, loading, and running their own application software on the assembly in order to satisfy their own particular requirements for the platform system.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 2","FIG. 1","FIG. 2"],"b":["12","12","50","50","30","38","22","60","68","12","10","12"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 3","FIG. 3"],"b":["12","22","30","38","22","70"]},"The software architecture differs from the standard ISO\/OSI (ISO Open Systems Interconnection) model in that it includes a plurality of horizontally partitioned functional software units that complement a plurality of vertically partitioned software layers. The horizontal partitioning contributes significantly to the creation of independent modular components.","The highest layer of the layered architecture is the middleware services layer. The layers of the software services component  include an application server layer  to provide application services, a platform services layer  to provide platform specific services for applications, a platform protocol layer  to provide session protocols and application specific protocols, a transport layer  to provide audio access\/control, datacom transport protocols, messaging transport protocols and the like, a data access layer  to provide external data IF access, structured storage services and other low level platform support services, a logical drivers layer  and a physical drivers layer  encapsulating hardware dependencies. In addition, software services component  includes basic system services layers  that provide general services that are needed by the platform assembly.","The bottom two layers  and  constitute Hardware Abstraction Layers (HAL) which isolate the dependencies between the software and the hardware. Only the physical drivers layer is concerned with the details of the hardware (e.g., which registers in the ASIC hardware are addressed). The logical drivers layer  provides a logical mapping to the hardware, i.e., this layer provides a bridge between the hardware and software parts of the mobile terminal platform assembly.","The software itself is organized into a plurality of software modules, modules , ,  being specifically shown in . In software services component , a single module can reside in only one vertical functional stack and in only one horizontal layer within that stack. Each layer can contain from one to many modules, and all the modules in a particular layer in a particular stack have the same level of abstraction. Communication among the various modules is accomplished via a Software Back Plane (SwBP)  subject to a set of basic rules for software module-to-module access. These rules can be summarized as follows:\n\n","There is no hard coupling between the various modules and the interfaces in the SwBP . As a result, the modules and\/or the implementation of the interfaces can be freely changed without any impact on clients to the interfaces. A client is, for example, an application, utility, plug-in, or any other consumer of platform services. This absence of hard coupling is an important capability as it permits individual modules to be added, removed or changed without affecting other modules in the platform assembly.","Further details of the layered architecture, including the SwBP software structure that enables the internal communication between modules within the mobile terminal platform assembly are described in the above-mentioned commonly assigned, U.S. patent application Ser. No. 10\/359,911. The middleware services layer functions to provide a well-defined interface between the software in the mobile terminal platform assembly  and the application software  to be installed, loaded, and run in the platform assembly, and encapsulates the mobile terminal platform assembly  and isolates the assembly  from applications via the middleware services layer, and provides various other services for the applications.",{"@attributes":{"id":"p-0042","num":"0046"},"figref":["FIG. 4A","FIG. 4A"],"b":["26","202","204","206","208"]},"Through the APIs \u2013 in the middleware services layer, the mobile terminal platform assembly  supports a plurality of application environments. In the exemplary embodiment of , the middleware services layer supports environments for native applications (i.e., applications that are compiled to run with a particular processor and its set of instructions) and for non-native applications (e.g., Java J2ME CLDC\/MIDP (Java 2 Micro Edition Connected Limited Device Configuration\/Mobile Information Device Profile)). Each application environment has its own characteristics and in terms of:\n\n",{"@attributes":{"id":"p-0044","num":"0052"},"figref":["FIG. 4B","FIG. 4B"],"b":["500","501","502","500","506","1","504","516","500","506","516","508","510","512","501","512","514","514","518","26"]},{"@attributes":{"id":"p-0045","num":"0053"},"figref":"FIG. 5","b":["204","518","223","518","206","518","518","504","516","223","504"]},"In general, the AM  handles the registration, installation, start, stop, uninstall, and removal of all applications. The IM  intercepts non-native application service requests from the EXE environment to the native platform services (interception takes place at the border of the Java support layer in the case of a Java application) and calls on the SAM  to grant access. If access is granted, the non-native application service request is forwarded to the Open Platform API (OPA)  and treated the same as a native application. A permission request is traffic between the IM  and the SAM . A service request is traffic between an application  (See, e.g., ), or any software in the application domain , and the platform domain . A service request represents a client accessing the services of the platform domain .","The SAM  may grant access to the native platform services in a variety of ways, one example of which is illustrated in . In particular,  is a block diagram of the components and messages involved in granting or denying a service request, and  is a flow chart that illustrates a method associated therewith according to exemplary embodiments of the present invention.","With reference to , a non-native application  requests a service that requires access to the native platform services at step . At step , the IM  intercepts the service request, which includes an ID tag of the requesting non-native application . At step , a permission request is sent from the IM  to the SAM  along with the ID tag included with the service request. The IM  may also send the SAM  additional access information and an identification of the native platform service that the non-native application  desires to access. The SAM  reviews the security policies of the native platform services to determine if access may be granted to the non-native application . At step , the SAM  forms a permission decision and forwards the decision to the IM . If the permission request is granted, then, at step , the service request is forwarded to the native platform service or services requested by the non-native application . The requested service is then executed at step . If the permission request is denied, then, at step , a reject response is sent to the non-native application .","If the ID tag  does not match one of the ID tags  included in the located access record , the request is rejected at step  and the request is aborted and returned to the requesting non-native application  at step  as shown in .","In a further option, the permission decision may require an approval procedure. For example, the user may be asked to approve access to the native platform service as shown at step . If the user approves the access at step , then the request is forwarded to the native platform service as in step . However, if access is denied at step , then the request is rejected at step  and the request is aborted and returned to the client that issued the request at step .",{"@attributes":{"id":"p-0051","num":"0059"},"figref":["FIGS. 6B","FIG. 6B"],"b":["8","8","518","250","223","223","518","223","223","223"]},{"@attributes":{"id":"p-0052","num":"0060"},"figref":["FIG. 8A","FIG. 6B","FIG. 7"],"b":["280","282","250","223","223","518","223","223","301","223","303","250","250","303","250","288","290","250","292","296"]},"In a further option, the permission decision may require an approval procedure. For example, the user may be asked to approve access to the native platform service as shown at step . If the user approves the access at step , then the request is forwarded to the native platform service as in step . However, if access is denied at step , then the request is rejected at step  and the request is aborted and returned to the client that issued the request at step .","The SAM  may distribute permission update requests to at least one IM  as required or at predetermined intervals. As presented by , there are different scenarios for when such an update might take place. The user may alter the permissions for a particular non-native application  during run-time via the AM , indicated by step , thereby requiring an update of the access records maintained by the SAM  as indicated by step . The updated permissions will then be forwarded by the SAM to the IM, as indicated by step . Additional cases where updates of the SAM and IM records are necessary include when a new application is added to the system, as indicated by steps  and , as well as when an existing application is removed from the system, indicated by steps  and . To further expedite the permission decision, a decision cache may be utilized in accordance with an embodiment of the IM  as described below.","Referring now to , details of the SAM  according to an exemplary embodiment of the present invention are illustrated. As shown, the SAM  includes a decision cache  for logging the most frequent and\/or the most recent service requests to find the permission decision associated with a particular service request. A given non-native application  may submit the same service request numerous times. Therefore, the decision cache  keeps a record of frequent service requests and may search through the earlier requests to find the permission decision associated with the particular service request. For example, a Java application may request a particular native platform service a number of times. The received permission request includes the ID tag of the requesting non-native application .","The first time the non-native application  makes a service request, the SAM  accesses an Access Control List (ACL)  to determine if permission should be granted to the requested native platform service. The ACL  stores a number of access records, which are derived from, for example, application certificates of origin. These records  are associated with each registered and installed non-native application, such as a specific Java application. The SAM  searches through the possible records of requesting applications  to find a match with the particular requesting application. If the particular requesting application is found among the set of records, then the permissions  are searched to determine whether access should be granted to the requested native platform service. Based on the associated and stored permissions , a permission decision is generated. The permission decision is sent to the IM  and may also be logged, along with the permission request in the decision cache . The next time the service request from the same non-native application  is intercepted by the IM  and forwarded to the SAM , the decision cache  is searched for the permission request. When the permission request is located, the permission decision associated with the permission request is forwarded to the IM . By utilizing the decision cache , the SAM  becomes more efficient in making permission decisions.",{"@attributes":{"id":"p-0057","num":"0065"},"figref":["FIG. 10","FIG. 10","FIG. 9","FIG. 10","FIG. 9"],"b":["223","223","518","312","312","318","318","318","320","250","318","518","223","320","250","223","312","318","223","320","250","318","320","250","320","318","250","310"]},"If the ID tag  does not match one of the ID tags  included in the located access record , the request is rejected at step  and the request is aborted and returned to the requesting non-native application  at step  as shown in .","On-demand as well as periodic permission update requests may be distributed from SAM  to a registered IM , even during run time. The user may update the permissions granted to a particular non-native application  and thereby cause outdated and incorrect information to exist in the SAM . Therefore, the SAM , whenever necessary or at periodic intervals, issues permission update requests to the IM  in order to update the access records  of the ACL  to maintain the correct permissions and\/or ID tags. The ID tag  of a particular non-native application  may need to be added to or removed from certain access records  depending on the alterations made to the permissions of particular non-native applications  by the user.","To further simplify the permission decision procedure, types such as the ID tags , permissions , etc., may be grouped into categories to promote efficiency in the searching of the ACL  of the IM  (or the SAM  in case this module holds the ACLs). For instance, each native platform service may be assigned to a specific security category and each security category is associated with specific permissions. The permission decision is then based on the security category rather than an individual native platform service. Under normal circumstances, the number of security categories would be significantly lower than the number of native platform services and therefore search time related to determining the permission decision is reduced.","While what has been described constitute exemplary embodiments of the invention, it should be understood that the invention can be varied in many ways without departing from the scope thereof For example, although the present invention has been described primarily in connection with a platform for a mobile terminal for a wireless telecommunications system, the invention can also be used in connection with platforms for other products. Because the invention can be varied in many ways, it should be recognized that the invention should be limited only insofar as is required by the scope of the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 3","FIGS. 1 and 2"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 4A","FIGS. 1\u20133"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4B","b":["500","501","502"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 7","b":"518"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 8A and 8B"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
