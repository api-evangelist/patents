---
title: Method and system for executing SIMD instructions using graphics technology
abstract: A method and system are provided for executing SIMD instructions using graphics technology. A SIMD instruction is received and interpreted. The specific data needed for the SIMD instruction is identified. Texel addresses where the specific data are stored are recalled and frame buffer pixels to be used to support the SIMD instruction are selected. In an alternative embodiment, these texel addresses are stored in frame buffer pixel channels such that the pixel containing a particular address will be the pixel to hold the data stored at that address for the SIMD operation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06943798&OS=06943798&RS=06943798
owner: Microsoft Corporation
number: 06943798
owner_city: Redmond
owner_country: US
publication_date: 20000815
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Field of the Invention","The present invention relates generally to single instruction, multiple data (SIMD) computer architecture.","2. Discussion of the Related Art","SIMD computer architecture was first developed in the 1970s as a means for increasing the rate at which a computer can complete calculations. The design uses an array of processing elements to perform a common instruction on multiple pieces of data simultaneously. This arrangement minimizes the number of logic gates that must be dedicated to control\u2014fetching, decoding, and scheduling instructions\u2014with a consequential increase in the number of logic gates available for storage and data processing.","Successful exploitation of this design depends on the ability to develop parallel algorithms that maximize the number of operations that can be performed simultaneously via the given number of processing elements.","Certain situations naturally lend themselves to parallel processing. As a result, SIMD computing has been found to be particularly useful in applications for air traffic control, aircraft early warning radar surveillance, weather data management, command and control processing, signal\/image processing, cancer radiation research, decision support, and bioinformatics.","These specialty applications have resulted in SIMD machines being designed for dedicated purposes. Because the design and testing costs of custom SIMD chips are borne by a small user base, SIMD hardware computers tend to be more expensive than general purpose workstations.","The ability of computers to do more work is enhanced by their ability to do different kinds of work. Along this line of reasoning, the development of computer graphic capabilities has followed the observation that such features appeal to a wide variety of users. Computer graphics systems are commonly used for displaying graphical representations of objects on a two-dimensional video display screen. Current computer graphics systems provide highly detailed representations and are used in a variety of applications.","However, the generation of a graphics image by a computer system requires a great deal of the processing power of that system. Therefore, it has become common for computer systems to include graphics accelerators to assist the central processing unit in its operations by taking over some portion of the data processing function relating to graphics. Current graphics accelerators typically employ an array of processors with various alterations and additions to the circuitry to facilitate the complex calculations associated with the graphical rendering of images.","The widespread desire for computer graphics features has resulted in the successful marketing of computers that can support these capabilities. The large customer base for these workstations has allowed them to be priced generally lower than special purpose SIMD machines.","The present invention provides a method and system for executing SIMD instructions using graphics technology. The present invention exploits the availability of multiple processors that are available within a graphics accelerator. Although these processors are designed to support the display of graphical representations of objects, the present invention uses the processors to perform SIMD operations. Other features common to graphics-capable computers, specifically frame buffers and texture memories, are used in conjunction with a graphics application programming interface language to realize the effect of communications among processing elements that occurs in various hardware manifestations of SIMD architectures.","Because graphics computers are typically less expensive than hardware manifestations of SIMD architectures, the present invention enables graphics computer users to realize the benefits of SIMD operations without incurring the added cost of purchasing a computer with SIMD hardware.","In one embodiment, a method for executing single instruction, multiple data (SIMD) instructions using graphics technology is explained. A graphics application programming interface, preferably OpenGL with a pixel texture extension, is used to transfer data between a frame buffer and texture memory. Data in the frame buffer support operations by a graphics accelerator. The arrangement supports cycles of SIMD operations.","Multiple data are initially read into one or more of a plurality of texel channels in the texture memory. However, one skilled in the art will recognize that, alternatively, data may be read into one or more of a plurality of pixel channels in the frame buffer and then copied into the texture memory. Once data are stored in texels, addresses of one or more dimensions are determined for the texels.","A set of SIMD instructions is received and translated. A set of specific data needed for the set of SIMD instructions is distinguished. Texel addresses where the set of specific data is stored are recalled and frame buffer pixels to be used to support the set of SIMD instructions are selected. In a preferred embodiment, these texel addresses are stored in frame buffer pixel channels such that the pixel containing a particular address will be the pixel to hold the data stored at that texel address for the SIMD operations. In an alternative embodiment with a second texture memory, the texel addresses can be stored in selected texels of the second texture memory. Thereafter, the stored texel addresses can be retrieved into the selected frame buffer pixels.","The recalled texel addresses are used to retrieve the set of specific data into one or more channels of the selected frame buffer pixels. Once in the frame buffer, the set of SIMD instructions is performed on the data via the graphics accelerator. Thereafter, results of the SIMD operations are written over the original data in the selected frame buffer pixels. From the frame buffer pixels, the data may, depending on the requirements of the set of SIMD instructions received and the particular embodiment of the invention, be copied into texture memory to support another cycle of SIMD instructions.","Further features and advantages of the present invention, as well as the structure and operation of various embodiments, are described in detail below with reference to the accompanying drawings.","The present invention is described with reference to the accompanying drawings. In the drawings, like reference numbers indicate identical or functionally similar elements. Additionally, the left-most digit of a reference number identifies the drawing in which the reference number first appears.","Overview and Terminology","The present invention provides a method and system for executing SIMD instructions using graphics technology.","\u201cSIMD\u201d is an acronym for Single Instruction Multiple Data, a classification of computer architecture that supports simultaneously performing the same operation on multiple pieces of data.","A \u201cgraphics accelerator\u201d refers to any computer hardware component that includes one or more processor(s) designed to perform operations to support the display of graphical representations of objects.","\u201cGraphics application programming interface\u201d, or \u201cgraphics API\u201d, refers to control logic (software, firmware, and\/or hardware) that enables developers to exploit the capabilities of graphic accelerators.","A \u201cframe buffer\u201d is memory designed to store the pixels from which a display (e.g., a frame of digital data) is refreshed.","\u201cTexture memory\u201d refers to memory space typically reserved for texture.","A \u201ctexel\u201d is a texture memory storage element.","Both pixels and texels have one or more storage channels. Collectively, pixels and texels are types of \u201cgraphics memory storage elements\u201d.","In one embodiment, commands, written in a graphics application programming language, are used to identify data stored in texels and to copy them into pixels in the frame buffer to support a set of SIMD instructions.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 1","FIG. 1","FIG. 1"],"b":["100","7"]},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 2"},"In , at step , a set of multiple data is read into a set of texels. One or more of the channels within each texel are dedicated for data storage. Because the present invention supports cycles of SIMD instructions in which multiple data are transferred between texture memory and a frame buffer, it is conceptually convenient to begin describing the present invention with data stored in the texture memory. However, an alternative embodiment may initially copy the set of multiple data from pixels in the frame buffer to the set of texels in the texture memory. This could be the case in a situation where the results of a performed set of SIMD instructions are stored in the frame buffer, but need to be transferred to the texture memory so that further sets of SIMD instructions can be conducted. In another alternative embodiment, data may initially be read into a set of pixels in the frame buffer and then copied to a set of texels in the texture memory.  shows the same section of texture memory as does , but with a set of multiple data read into the blue and alpha channels of a set of texels. This example is illustrative only and is not intended to limit the present invention. Note that the set of data can be read into any combination of texels (contiguous and\/or non-contiguous) and does not need to occupy all texels in the texture memory.","In , at step , texel addresses for the set of texels are identified. Texel addresses are used to retrieve data for subsequent operations. Depending upon how the set of texels are arranged within the texture memory, the addresses may comprise values in one or more dimensions. In a preferred embodiment in which the texture memory is a two-dimensional array of rows and columns, the addresses are referenced to the \u201cs, t\u201d coordinate system explained above. A preferred embodiment also recognizes that the texture memory is supporting SIMD operations and that multiple data read into the texture memory will likely be retrieved in response to SIMD instructions. Therefore, texel addresses are identified at this early stage in the process. However, one skilled in the art will recognize that, in an alternative embodiment, identification of texel addresses may be delayed until specific data needed for a particular set of SIMD instructions is distinguished.","In , at step , a set of SIMD instructions is received. The instructions can include any of a variety of fetch, storage, mathematical, or logic operations, but are not limited to these types. Typically, the set of SIMD instructions will distinguish a specific set of data, fetch the identified set, perform a common mathematical or logical operation on each item in the set, and store the results. Because the present invention involves executing SIMD instructions with graphics technology, the set of SIMD instructions will need to be translated into a set of graphics API commands. This is accomplished at step . In a preferred embodiment, the graphics API is OpenGL with a pixel texture extension.","In , at step , a specific set of data needed for a set of SIMD instructions is distinguished. Once the specific set of data is distinguished, the texel addresses for the texels where the specific set of data is stored will need either to be identified or to be recalled, if, as in a preferred embodiment, they were identified at a previous step. In , this is accomplished at step . For purposes of illustrating the present invention, assume the specific set of data needed for the set of SIMD instructions includes all data with values between 50 and 59. In , this would include data stored in texels with the following addresses (s, t): (, ); (, ); (, ); and (, ).","In , at step , frame buffer pixels to be used to support the set of SIMD instructions are selected. Also, depending on the data needs specified in the set of SIMD instructions, it is possible that certain data within the specific set of data will need to be retrieved into more than one of the selected frame buffer pixels. Therefore, it is important to note that the present invention does not require any relationship between the pixels selected and the addresses of the texels.","By convention, pixel row and column addresses are identified by a coordinate system similar to that used for texels, except that the horizontal axis is identified with the letter \u201cx\u201d and the vertical axis with the letter \u201cy\u201d. For purposes of illustrating the present invention, assume that pixels with the following addresses (x, y) have been selected to support the set of SIMD instructions: (, ); (, ); (, ); (, ); and (, ).","In a preferred embodiment of the present invention, the set of SIMD instructions includes a command to store the recalled texel addresses in the selected frame buffer pixels. This is shown at step  in FIG. . Each dimension of a recalled texel address is stored in a different channel of the pixel selected to receive the data stored in the texel. Different channels in the pixels are dedicated for address storage and data storage. Note that the channels dedicated in the selected pixels for address storage and data storage do not need to match the channels used for these purposes in the texels.  shows texel row addresses stored in the blue channel and texel column addresses stored in the alpha channel. At pixel address (, ), texel address (, ) has been stored; at pixel address (, ), texel address (, ) has been stored; at pixel address (, ), texel address (, ) has been stored; at pixel address (, ), texel address (, ) has been stored; and at pixel address (, ), texel address (, ) has been stored. Note that texel address (, ) has been stored in two pixel locations. This is to illustrate a situation where, as mentioned above, the set of SIMD instructions needs certain data to be retrieved into more than one of the selected frame buffer pixels. A preferred embodiment includes this step as a means of facilitating data retrieval. This step also defines which pixel will receive which particular piece of data However, one skilled in the art will recognize that, in an alternative embodiment, texel addresses may not need to be stored in the selected frame buffer pixels. Particularly, in an alternative embodiment with a second texture memory, texel addresses can be stored in selected texels of the second texture memory. Thereafter, the stored texel addresses can be retrieved into the selected frame buffer pixels.","In , at step , the stored texel addresses are used to retrieve the set of specific data into the selected frame buffer pixels. The retrieved data are stored in a pixel channel dedicated for data storage. Again, one skilled in the art will recognize that there are other means by which data may be identified in the texture memory and retrieved into the frame buffer. Particularly, in an alternative embodiment with a second texture memory, texel addresses stored in selected texels of the second texture memory can be retrieved into the selected frame buffer pixels. Thereafter, the stored texel addresses are used to retrieve the set of specific data into the selected frame buffer pixels.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 5","b":["0","0","1","1","1","1","0","1","2","1","3","0","2","1","3","0","3","2","3","3","1","3","3","3","3","3","3","2","1","3","2","1","3","0"]},"In , at step , the set of SIMD instructions is performed on the retrieved set of specific data in the selected frame buffer pixels. As previously explained, this may include a variety of operations but the same operation is performed on all pieces of data in the selected frame buffer pixels. For purposes of illustrating the present invention, assume that the set of SIMD instructions comprises the single operation of adding the value 3 to each value stored in the selected pixels.","In a preferred embodiment, the results of the set of SIMD instructions are stored in the same selected frame buffer pixels. This is shown at step  in FIG. . In this manner, both the results of the set of SIMD instructions are stored, in the selected pixels, and the original set of specific data is stored, in the texels. This arrangement optimizes flexibility in choosing among the options of transferring the results to the texture memory for storage, continuing to perform subsequent sets of SIMD instructions on the results as contained in the frame buffer, or retrieving another set of specific data into the frame buffer. However, one skilled in the art will recognize that it may not always be the case that the results of the set of SIMD instructions should be written over the data stored in the selected frame buffer pixels.  shows the same section of frame buffer as , but with the results of adding 3 to each value previously stored in the selected pixels. At the green channel of pixel address (, ), the value 56 has been written over the value 53; at the green channel of pixel address (, ), the value 60 has been written over the value 57; at the green channel of pixel address (, ), the value 62 has been written over the value 59; at the red channel of pixel address (, ), the value 54 has been written over the value 51; at the red channel of pixel address (,  ), the value 58 has been written over the value 55; and at the red channel of pixel address (, ), the value 58 has been written over the value 55.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 7","b":["700","710","720","710","730","720","740","750","760","770","760","750","730","730","750","780","780","750","740","720","730","740","790","730","730"]},"In general, the present invention can be implemented in software, firmware, hardware, or a combination thereof. In one implementation, address calculator , SIMD graphics API translator , and pixel-to-pixel communicator  represent control logic for controlling operations of any one or more processors. This control logic is implemented as software, firmware, hardware, or a combination thereof.","Conclusion","While an embodiment of the present invention has been described above, it should be understood that it has been presented by way of example only, and not limitation. It will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention as defined in the appended claims. Thus, the breadth and scope of the present invention should not be limited by the above-described exemplary embodiment, but should be defined only in accordance with the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated herein and form part of the specification, illustrate the present invention and, together with the description, further serve to explain the principles of the invention and to enable a person skilled in the pertinent art to make and use the invention.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
