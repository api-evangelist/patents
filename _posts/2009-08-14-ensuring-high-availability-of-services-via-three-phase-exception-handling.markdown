---
title: Ensuring high availability of services via three phase exception handling
abstract: Described herein are systems and methods for three phase exception handling ensuring high availability of services. Via unified application program interface (API), one or more inspector instances are observing the behavior one or more services. The three phase exception handling is triggered upon observing an abnormal service behavior. Phase one comprises executing one or more commands from the unified API by the one or more inspector instances in attempt to resolve the abnormal service behavior and notifying a centralized inspector engine. Phase two comprises executing one or more predefined rules according to the current service state by the centralized inspector engine in attempt to resolve the abnormal service behavior and notifying an administrator. Phase three comprises abnormal service behavior analysis by the administrator and executing customized by the administrator rules to resolve the abnormal service behavior.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08595172&OS=08595172&RS=08595172
owner: SAP AG
number: 08595172
owner_city: Walldorf
owner_country: DE
publication_date: 20090814
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The field of the invention relates generally to software, and particularly but not exclusively, to three phase exception handling ensuring high availability of services.","Modern system landscapes provide a large number of services, having different vendors, versions, and interfaces. Ensuring high availability of these services is crucial for the service customers. Keeping all services available is a tedious job, requiring a number of well trained administrators. The administrators must observe the status of the services on a regular basis, to deal with life cycle management, service updates, abnormal service behavior, etc. The increasing complexity of the system landscapes increases the time needed to investigate and solve the issues that arise. It becomes harder for the administrators to keep up with the increasing number of services and customers, which leads to critical service downtimes.","An automated approach is required to deal with these issues in order to ensure high availability of services and to reduce the maintenance costs resulting from manual intervention. The automated approach would ensure minimal service downtime in case of abnormal service behavior and would also decrease the necessity of human intervention. The administrators would have to deal with only issues that are not solved by automation upon a specific notification from the system after the automated approach has failed to solve the issue.","Described herein are embodiments of systems and methods for three phase exception handling ensuring high availability of services. One or more inspector instances observe the behavior of one or more services via an unified application program interface (API). The three phase exception handling is triggered upon observing an abnormal service behavior. Phase one comprises executing one or more commands from the unified API by the one or more inspector instances in attempt to resolve the abnormal service behavior and notifying a centralized inspector engine. Phase two comprises executing one or more predefined rules according to the current service state by the centralized inspector engine in an attempt to resolve the abnormal service behavior and notifying an administrator. Phase three comprises abnormal service behavior analysis by the administrator and executing customized by the administrator rules to resolve the abnormal service behavior.","Additional features and advantages will be made apparent from the following detailed description of illustrated embodiments, which proceeds with reference to the accompanying drawings.","Embodiments of systems and methods for ensuring high availability of services via three phase exception handling are described herein. In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Reference throughout this specification to \u201cone embodiment\u201d or \u201cthis embodiment\u201d means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of the phrases \u201cin one embodiment\u201d or \u201cin this embodiment\u201d in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["132","130","130","131","131","132","131","131","131","131","120"]},"The inspector engine  performs the second step of the exception handling in case the inspector  is unable to restore the availability of the one or more services . In case the abnormal service behavior is not resolved by the inspector , the inspector engine  executes one of the rules . Rule  is preferably a workflow consisting of one or more commands to restore service availability. The rule  may include commands of the unified API as well as commands designed by an administrator. The inspector engine  executes one rule  upon receiving an event from an inspector instance . The event sent by the inspector  notifies the inspector engine  about the current service state. In one embodiment of the invention, there may be three service states defined: ONLINE, designating that the service is available; OFFLINE, designating that the service is not available; and UNKNOWN, if the state cannot be determined due to an abnormal service behavior. There may be a rule  defined for each of the available service states. If the service is still unavailable after the rule is executed, the inspector engine  logs the result of the rule execution and informs the administrator (e.g., via an e-mail or an instant mobile phone message).","Phase three of the exception handling is performed by the administrator, who analyzes the specific issue and provides a solution using the user interface . The user interface  displays the current status and presents the administrator with possible methods to react. The log viewer  provides the administrator with the information, collected by the inspector instance  and the inspector engine . The rule editor  allows the administrator to create custom commands and rules, which when executed by the inspector engine  can solve the specific issue and restore service availability. In one embodiment, the user interface  may also provide the administrator with tips to solve the specific issue.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2","b":["210","131","220","131","230","131","240","250","120","120","260","120","270","120","280","120","110"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 3","FIG. 2"],"b":["131","250","120","131","310","320"]},"In case the service state is UNKNOWN, the inspector engine executes the rule shown at block . The rule represents the following workflow. First, an attempt to start the service via a start service command is made at block . An error diagnosis is performed on the output, generated by the start service command at block . A check is performed whether the service is available at block  after the execution of the start service command. If the service is available, at block , the inspector engine  sends an e-mail notification to the administrator to inform him about the successful service recovery. If the service is still unavailable, at block , the inspector engine  sends an instant message to the administrator mobile phone to inform him about the unsuccessful exception handling during phases one and two. One benefit of the instant message notification is that the administrator is notified immediately in case of unsuccessful service recovery, so that he can deal with the issue manually as soon as possible.","In case the service state is OFFLINE, the inspector engine executes the rule shown at block . The rule represents the following workflow. First, an attempt to update the service via an update service command is made at block . In one embodiment, the update command may check if there is a newer version available on a central repository for one or more service components and update only the outdated components. In another embodiment, the update command may update all service components to ensure that all service components have valid contents. The workflow continues with an attempt to start the service via a start service command at block . An error diagnosis is performed on the output, generated by the update and start service commands at block . A check is performed whether the service is available at block  after the execution of the commands described above. If the service is available, at block , the inspector engine  sends an e-mail notification to the administrator to inform him about the successful service recovery. If the service is still unavailable, at block , the inspector engine  sends an instant message to the administrator mobile phone to inform him about the unsuccessful exception handling during phases one and two, so that he can deal with the issue manually.","In case the service state is ONLINE, the inspector engine executes the rule shown at block . The workflow in this case is simple, because service state ONLINE means that the service is available, which means the one or more commands, executed by the inspector  during the first phase of the exception handling at block  of  described above, have resolved the abnormal service behavior. In this case, an error diagnosis is performed at block  and an e-mail notification is sent to the administrator at block  to inform him about the successful service recovery.","Some example embodiments of the invention may include the above-illustrated modules and methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, or peer computer systems. These components may be written in any computer programming language including object-oriented computer languages such as C++, and Java. The functionality described herein may be distributed among different components and may be linked to each other via application programming interfaces and compiled into one complete server and\/or client application. Furthermore, these components may be linked together via distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or other configurations.","Software components described above are tangibly stored on a machine readable medium including a computer readable medium. The term \u201ccomputer readable medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable medium\u201d should also be taken to include medium that is capable of tangibly storing or encoding instructions for execution by a computer system and that causes the computer system to perform any of the methods described herein.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4","b":["400","400","405","455","400","440","455","410","415","410","415","405","415","400","425","430","400","420","400","435","400","450","400","445"]},"The above description of illustrated embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize.","These modifications can be made to the invention in light of the above detailed description. The terms used in the following claims should not be construed to limit the invention to the specific embodiments disclosed in the specification and the claims. Rather, the scope of the invention is to be determined entirely by the following claims, which are to be construed in accordance with established doctrines of claim interpretation."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A better understanding of the present invention can be obtained from the following detailed description in conjunction with the following drawings, in which:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
