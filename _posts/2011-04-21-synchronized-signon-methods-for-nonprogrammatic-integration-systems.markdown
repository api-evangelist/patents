---
title: Synchronized sign-on methods for non-programmatic integration systems
abstract: Methods and systems for automatically signing a user on to an integration application when a user signs on to another application and signing a user off when the user signs off of the other application. The integration application automatically non-programmatically collects data from a mapped location of a mapped source reference of the other application. The collected data includes a user identifier value. The integration continuously monitors the collected user identifier value for a difference in the collected user identifier value. If the collected user identifier value is recognized by the integration application, the user is signed into the integration application using the collected user identifier value, and if a difference in the collected user identifier value is detected, the user is signed off of the integration application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09336377&OS=09336377&RS=09336377
owner: Lexmark International Technology SARL
number: 09336377
owner_city: Meyrin
owner_country: CH
publication_date: 20110421
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCES TO RELATED APPLICATIONS","FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT","COMPACT DISK APPENDIX","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Pursuant to 35 U.S.C. 119, the present application is related to and claims benefit from U.S. patent application No. 61\/326,653, filed Apr. 21, 2010, entitled \u201cSingle Sign-On Non-Programmatic Integration System,\u201d the content of which is hereby incorporated by reference herein in its entirety.","This application is related to U.S. patent application Ser. No. 13\/091,661, entitled Notification Methods for Non-Programmatic Integration Systems, filed on the same date as this application, U.S. patent application Ser. No. 13\/091,632, entitled Safety Methods for Non-Programmatic Integration Systems, filed on the same date as this application, and U.S. patent application Ser. No. 13\/091,646, entitled Collaboration Methods for Non-Programmatic Integration Systems, filed on the same date as this application, the entire contents of which are incorporated herein by reference.","Not Applicable.","Not Applicable.","1. Field of the Disclosure","The present disclosure relates to electronic content management software and, more particularly, to signing in on to an integration application.","2. Description of the Related Art","Businesses, educational institutions, and various industries often rely on computing devices and software applications to perform and\/or manage their day-to-day operations. In fact, a particular business, educational institution, or industry may rely on multiple software applications to perform and\/or manage their day-to-day operations.","Conventional computer networks and processing devices have the capability of multitasking and executing multiple applications simultaneously on a single operating system. For example, it is possible to execute an application for displaying and\/or manipulating a document developed by one software provider on a single computer or network of computers while simultaneously executing one or more other applications developed by different software providers for the same purpose on the same single computer or network of computers. Because different applications can process data and documents relating to a common subject or context, it is often desired to seamlessly integrate and use the functionality and features of different applications simultaneously. However, because applications developed by different providers may store, index, and retrieve documents and other data according to their own proprietary formats, such applications may not lend themselves to easy integration.","For a number of reasons, many applications lack the capability for linking, accessing, or otherwise integrating documents and data with other applications. Due to the proprietary nature of software applications, traditional attempts to integrate different applications are often inadequate or unsuccessful. One possible solution involves using programmatic integration that requires modifying the source code of each application. Another possible programmatic solution involves writing specialized source code to integrate one application with another at a code-level through an application programming interface (API) for the other application that is used to push and pull data between the applications. This and other programmatic solutions are generally not desirable due to costs and possible trade secret measures preventing access to the source code. Moreover, it may in fact be contrary to the terms of a license or terms of use for a particular application to attempt to modify or integrate that particular application.","An alternative solution would be to replace the installed applications with a new program suite capable of integration. This solution, however, may be costly and disruptive.","Integration systems and methods non-programmatically collect application data from a mapped location of a display of an application. The collected application data is used to sign a user on to the integration system.","Disclosed herein are methods and systems for synchronizing a sign-on of an integration application with another application. The integration application automatically non-programmatically collects data from a mapped location of a mapped source reference of the other application. The collected data includes a user identifier value. The integration continuously monitors the collected user identifier value for a difference in the collected user identifier value. If the collected user identifier value is recognized by the integration application, the user is signed into the integration application using the collected user identifier value, and if a difference in the collected user identifier value is detected, the user is signed off of the integration application.","The following description and drawings illustrate embodiments sufficiently to enable those skilled in the art to practice the present disclosure. It is to be understood that the disclosure is not limited to the details of construction and the arrangement of components set forth in the following description or illustrated in the drawings. The disclosure is capable of other embodiments and of being practiced or of being carried out in various ways. For example, other embodiments may incorporate structural, chronological, electrical, process, and other changes. Examples merely typify possible variations. Individual components and functions are optional unless explicitly required, and the sequence of operations may vary. Portions and features of some embodiments may be included in or substituted for those of others. The scope of the application encompasses the appended claims and all available equivalents. The following description is, therefore, not to be taken in a limited sense, and the scope of the present disclosure is defined by the appended claims.","Also, it is to be understood that the phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of \u201cincluding,\u201d \u201ccomprising,\u201d or \u201chaving\u201d and variations thereof herein is meant to encompass the items listed thereafter and equivalents thereof as well as additional items. Unless limited otherwise, the terms \u201cconnected,\u201d \u201ccoupled,\u201d and \u201cmounted,\u201d and variations thereof herein are used broadly and encompass direct and indirect connections, couplings, and mountings. In addition, the terms \u201cconnected\u201d and \u201ccoupled\u201d and variations thereof are not restricted to physical or mechanical connections or couplings. Further, the terms \u201ca\u201d and \u201can\u201d herein do not denote a limitation of quantity, but rather denote the presence of at least one of the referenced item.","Reference will now be made in detail to the example embodiment(s), as illustrated in the accompanying drawings. Whenever possible, the same reference numerals will be used throughout the drawings to refer to the same or like parts.","The systems and methods of the present disclosure provide an application integration system that enables seamless and non-programmatic integration of one or more applications and\/or their associated data and\/or documents. Moreover, the application integration system enables one or more applications to be integrated without altering or interfering with the operation of the applications. A non-programmatic process is a process that does not rely on the existence of code-level integration or the production of additional source code on a per application basis to gather data to be integrated that is generated from another application. A \u201cper application basis\u201d means that source code is not produced separately for each application that generates data to be integrated. In particular, a non-programmatic process does not modify another application's source code in order to integrate with that application, and the non-programmatic process does not modify its own source code on a per application basis in order to integrate with that application. Accordingly, a non-programmatic system is a system that does not rely on the existence of code-level integration or the production of additional source code on a per application basis to gather data to be integrated that is generated from another application. In particular, a non-programmatic system does not modify another application's source code in order to integrate with that application, and the non-programmatic system does not modify its own source code on a per application basis in order to integrate with that application.","The integration system non-programmatically collects data from one or more mapped locations in one or more applications, such as via an application programming interface (API) for an operating system. In one aspect, the integration system may communicate with one or more applications through a standard or proprietary interface implemented in accordance with protocols of the operating system. In some example embodiments, the interface may be a proprietary interface and\/or a combination of a standard and proprietary interface.","An application, as used herein, refers to software or another computer program, other than the integration system or the operating system hosting the integration system, that is executable by a processor and can be stored on computer-readable media. In some example embodiments, an application may refer to firmware and\/or a combination of software and firmware. In some other example embodiments, an application may be executed on the web or over a network. An application processes, organizes, manipulates, stores, generates, displays, and\/or otherwise renders application data that can be used by the integration system and its associated modules. Application data is the information processed, organized, manipulated, stored, displayed, and\/or otherwise rendered by an application.","A mapped location is a spatial or logical location of data or information in an application display or a source reference of the application defined by a user and characterized by the user as being a particular type of data. For example, a mapped location may be defined as a tree node, a Hypertext Markup Language (HTML) tag, an object, coordinates of a display or other user interface screen, a window control or relative to a window control (as described below), or using another data location method. A mapped location can be characterized as any data type capable of being recognized by an application, such as date, a name, social security number, patient identification number, or customer number.","In one aspect, a mapped location is an area of a display containing application data that has been defined and characterized by a user of the integration system. In this aspect, the mapped location may be identified by its spatial location within a display, such as through one or more coordinates. A display, as used herein, refers to a presentation of an image, document, user interface, and\/or other application data to a display device. For example, user interface screens for an application, including user interface screens that visually present application data, are displays. One or more displays generated by the application may have one or more mapped locations.","In another aspect, a mapped location is a logical location within a source reference for a display, such as an object or a data element. A source reference, as used herein, refers to a set of instructions, code, and\/or application data for a display that is present at a processor and\/or memory of the integration system before, during, and\/or after it is rendered for display. Thus, the display is the rendered source reference. In one aspect, the source reference exists on the same computing device as the integration system.","The source reference or application data from the source reference may be collected from the API of the operating system by the integration system. For example, the source reference for an HTML page is the HTML code and the application data for the HTML page is collected before, during, and\/or after the HTML page is rendered as a display. In this example, the integration system may collect application data from the HTML source reference before, during, and\/or after rendering the HTML display. In another example, the source reference for a raster image or a bitmap image may include the code, if any, and the image, including application data within the image, and the image is rendered as a display. In this example, the integration system collects the application data from the source reference image before, during, or after the image is rendered as a display.","In some instances herein, the terms \u201cdisplay\u201d and \u201csource reference\u201d may be used interchangeably. For example, if the integration system collects application data from a display, the integration system effectively collects the application data from the source reference for the display. The source reference, including the application data, is present at the processor and\/or memory of the integration system and the integration system collects the application data from the processor and\/or memory.","In one aspect, an application display and\/or its source reference have one or more application fields, which are locations or areas that contain application data. One or more of the fields may be mapped locations though other fields may not be mapped locations. In one alternate example embodiment, none of the fields are mapped locations. In this aspect, one or more of the application fields may or may not have an associated application label. Application labels are terms used to describe the type, subject matter, nature, and\/or may be other designations of the application data in an application field, title bar of an application display, a mapped location, and\/or other location of a display or source reference.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 1","b":["102","102","102","102","102","104","106","108"]},"The application system  may execute one or more applications that are monitored by the integration system  and\/or from which application data is collected by the integration system. The application system  may include one or more modules, applications, and devices to process and generate application data for display.","In one aspect, the application system  is a processing system that may include one or more processors, volatile and\/or nonvolatile memory, and a data input device, such as a mouse, a trackball, a touch pad, another pointer, a keyboard, another input device or system, and\/or combinations of the foregoing. The application system  may be embodied in one or more distributed or integrated systems and\/or computer-readable media. The application system  may also include an image capture device, such as a scanner, to generate electronic reproductions of documents from paper documents. The application system  may also include a storage system that stores electronic data, including electronic documents. The application system  may also include one or more communication systems that transmit and\/or receive user interface screens, application data, electronic documents, and\/or other data through wireless and\/or wire line communication systems.","The database  may include one or more processors and volatile and\/or nonvolatile memory and may be a data storage structure or a data storage system executed by the one or more processors on a data storage server. According to one aspect, the database  may store documents, files, and\/or other data, including projects and tasks, in data fields and\/or data tables. A project, as used herein, refers to a collection of documents, files, and\/or other data. For example, a project may be the collection of documents that relate to a single identifier, such as a patient or a customer. In another example, a collection may be the collection of documents for a broader subject matter, such as medical testing protocols. A task, as used herein, refers to an item that requires user action. For example, a task may be an approval or confirmation request, a request for user input or response, or a request for digital signature. In this aspect, the database may store application data and documents that may be accessed and\/or stored by the integration system .","In some other example embodiments, a project may refer to a project within a project. For example, a project may be a collection of documents that relate to each doctor's visit of a particular patient, or a project may be a collection documents that relate to each purchase made by a particular customer.","The integration system  monitors one or more applications of the application system  and interrogates an operating system to collect application data generated by one or more applications. Interrogating and interrogating an application, as used herein, refer to making a call to the API of an operating system in order inspect, parse, and\/or collect application data from the display and\/or the source reference for the application. By way of example, the integration system  may locate one or more mapped locations of displays generated by the applications and\/or mapped locations of the source references of the applications and collect the application data at those mapped locations. In this example, the integration system  monitors and interrogates the applications and\/or the operating system for the computing device on or for which the integration system operates and identifies mapped locations for displays (or their source references) when the displays are resident on the computing device on or for which the integration system operates, either on a processors and\/or memory of the computing device. The integration system  may then collect application data from the mapped locations. The integration system  may monitor and\/or interrogate data from the application before, during, and\/or after the display is rendered.","In one aspect, the integration system  may compare the application data collected from the mapped locations with properties of the documents stored in the database  to retrieve documents related to the collected application data. In other aspects, the integration system  may use the application data collected from the mapped locations for one or more integration functions, including signing a user into the integration system when the user signs into an application from the application system  (synchronized sign-on) and\/or notifying a user through a user interface when an image or other document or reference displayed or otherwise rendered to the user interface does not correspond to underlying application data or other references, including through audio and\/or visual renderings (safety). The integration system  also or alternately may use the collected application data for one or more other integration functions, including to display a list of documents or notify the user of a list of documents related to current application data or other references (notification) and\/or automatically notify a user when one or more other users view or otherwise render or access application data or references for underlying application data when the other user is simultaneously rendering or accessing or has rendered or accessed application data or references for the same underlying application data (collaboration). In one example, an underlying reference may be a patient or customer identifier, such as a number, and the rendered application data may be data corresponding to the identifier, such as a patient record for the same patient or a customer record for the same customer, respectively.","In one aspect, monitoring and interrogating an application includes collecting one or more displays or source references generated by the application or application data from the displays or source references from the API of the operating system. The integration system  makes a call to the API to identify information present in the source references that is relevant to the displays. By way of example and not limitation, the integration system  calls the API of the operating system to identify user interface (UI) controls, data at coordinates, the tree structure for a window, children windows, HTML code or its associated data, and\/or a bitmap or raster images or portions thereof for a display. As used herein, a UI control refers to an element of a graphical user interface (GUI) that displays or causes the display of an interactive object in a window or a text box. For example, text entry boxes, drop down menus, tabs, labels, any graphical control element, and buttons are UI controls.","In another example, the monitoring of an application and interrogation of the operating system also may occur without rendering the display on a display device. The integration system  requests application data for a display from the operating system, and the integration system receives the requested application data from the operating system. In this example, the requested application data need not be displayed. In another example, the application data for the application is effectively rendered in memory and\/or on the processor of the integration system  and not to a display. For example, a display may be collected by the integration system  when the display is rendered in a visible or non-visible user interface of a display device or before or after the display is rendered.","In one aspect, the integration system  may be a processing system that includes one or more processors and volatile and\/or nonvolatile memory and may be embodied in one or more distributed or integrated components or systems. The integration system  may include computer-readable media on which one or more algorithms, modules, software, and\/or firmware is loaded and\/or operates to implement the methods and systems identified herein, and the algorithms, modules, software, and\/or firmware may be executed by the one or more processors. The computer-readable media may include volatile media, nonvolatile media, removable media, non-removable media, and\/or other media or mediums that can be accessed by a general purpose or special purpose computing device. For example, computer-readable media may include computer storage media and communication media. Computer storage media further may include volatile, nonvolatile, removable, and\/or non-removable media implemented in a method or technology for storage of information, such as computer-readable instructions, data structures, program modules, and\/or other data. Communication media may, for example, embody computer-readable instructions, data structures, program modules, algorithms, and\/or other data. The communication media may include an information delivery method. The communication media may include wired and wireless connections and technologies and be used to transmit and\/or receive wired or wireless communications. Combinations and permutations of the above systems and components described herein may be made.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 2","b":["104","102","104","202","202","202","202"]},{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 3","FIG. 1"],"b":["106","102","106","302","304","306","308","106","306","308","302","304","106"]},"By way of example, the document  contains information relevant to the application data of the application . In other examples, the document  may contain other information. In one example, the document  may be created using the application . In other examples, the document  may be created by another application, such as electronic mail, or created from a hardcopy document using an image capture or scanning device (e.g., a scanner or fax machine).","The document  may be any file containing text, image and\/or other data, such as audio and\/or visual data. Some example file formats for documents include, but are not limited to, a text document, portable document format (PDF) document, Tagged Image File Format (TIFF) image, source reference, HTML document, Extensible Markup Language (XML) document, a bitmap image, a .jpeg image, and audio and\/or video file.","In one aspect, the document  has one or more document properties. A property is a type of data that has a name (i.e., label) and a value. A document property is a type of data associated with a document that describes, identifies, indexes, and\/or classifies that document, and the document property has a name (i.e., a label) and a value. In this aspect, the property label identifies the property and the property value is not necessarily populated. A non-populated value is, for example, null, empty, or zero. In one aspect, a value for a property is populated from collected application data. For example, the document  may have a property labeled \u201cZip Code\u201d containing the value \u201c63102.\u201d In this example, the property is a five-digit number. The label \u201cZip Code\u201d describes the nature of the five-digit numerical string and distinguishes the property from other properties that may also be five digit numerical strings, such as an employee identification number, a document number, or telephone extension. The value \u201c63102\u201d may be collected application data from a mapped location. In one aspect, the properties and\/or labels may be defined by a user through a user interface.","In another aspect, documents may be indexed using collected application data. Indexing a document means organizing and\/or populating or modifying the document properties of the document for storage and\/or later identification. For example, the document  may indexed by populating the document properties for the document using collected application data. In some example embodiments, indexing a document means organizing and\/or populating or modifying the project properties of the project for storage and\/or later identification.","The application plan  may identify, such as with a list or another representation, one or more displays generated by a particular application that have one or more mapped locations and\/or one or more source references used by the application that have one or more mapped locations. For example, the application plan  may identify one or more displays generated by the application  and\/or the source references used to generate the displays that contain one or more mapped locations.","The application plan  may temporarily include one or more representations of the displays identified therein. In one aspect, the representations of the displays may be stored temporarily in memory and\/or in the application plan  and used to identify and\/or store one or more mapped locations of the displays. In another aspect, the representations of the displays are not stored in the application plan .","In one aspect, the representation of the display may include a listing of the UI controls, a tree diagram, and\/or bitmap or raster image representation for the displays identified in the application plan . In another aspect, the representation of the display may include another image of each display in the application plan . In yet another aspect, the representation of the display may include all of the data selected on user interface, such as through a select or select all and copy function.","The application plan  may also include application identifying data and display and\/or source reference identifying data. The application identifying data identifies the application as a specific application, such as the application , for which the application plan  is used. For example, the application identifying data may include the name of the executable file for the application data in the title bar of the displays and\/or source references for the application that identify the application, and\/or an operating system class identifier that associates the display with the application . In some example embodiments, the application identifying data may be a unique application identifier.","In one aspect, the integration system  makes a call to the operating system API to determine that the application  is being executed on the processor. The integration system  then examines the displays and\/or source references at the operating system API to identify data in the title bar for the displays and\/or source references. The integration system  collects the label from the API and processes the application plan  to determine if the application plan is applicable to the displays and\/or source references.","The display and\/or source reference identifying data identifies a display and\/or source reference as a particular display and\/or source reference within the application plan . In one aspect, the display and\/or source reference identifying data includes display definitions for each display identified in the application plan . For example, the display definitions may include application data and\/or other data that is present in the title bar of the particular display. In another example, the display definitions may include one or more mapped locations from which application data can be collected to uniquely identify the display. In yet another example, the display definitions may include one or more mapped locations based upon the active screen or tree controls of an application.","The dictionary  is a listing of the data elements that correspond to the mapped locations of one or more displays or source references stored in the application plan . In some example embodiments, the dictionary  may contain scripts. In one aspect, each data element in the dictionary  corresponds to a mapped location of a display or source reference. In another aspect, a data element in the dictionary  corresponds to one or more mapped locations. In yet another aspect, a data element in the dictionary  corresponds to one or more other data elements in the dictionary. For example, a data element in the dictionary  may combine and process one or more other data elements in the dictionary. In this example, a data element named \u201cFull Name\u201d does not correspond to a mapped location, but does correspond to other data elements, such as \u201cFirst Name\u201d and \u201cLast Name.\u201d The data element \u201cFull Name\u201d may process and concatenate the other data elements.","According to one aspect, the application plan  has a single corresponding dictionary  that characterizes the application data in the mapped locations of the one or more displays of the application . According to another aspect, each display in the application plan  has its own dictionary. According to yet another aspect, a single dictionary characterizes the application data for more than one application.","Each data element of the dictionary  contains the mapped location for the data element in the corresponding display or source reference. In one example, the mapped locations may be defined by name-value pairs within the source references for HTML displays generated by the application . In this example, a name is tag or other element in the HTML code, and the value is the application data associated with the name that would be displayed in the HTML-based display. In another example, the mapped location may be defined by coordinates within a display of the application  (e.g., Cartesian coordinates based on pixels or other coordinates) or another location designating system. In yet another example, mapped locations may be defined by the UI controls of each display. In still another example, the mapped locations may be defined by the character locations.","In one aspect, the mapped locations of the data elements are logically mapped by the integration system . Logically mapping is identifying a logical location or name of a data element (e.g., a node or a tag) rather than a spatial location on the display or source reference. In one example, logical mapping may be achieved by processing a display or source reference and creating a virtual link in memory between each UI control of the display or data elements of the source reference and the application data associated with that UI control or data element. In this example, neither the integration system  nor the user needs to identify or determine the spatial location of the application data within the display or source reference. In another example, the integration system  identifies each name-value pair from an HTML display or HTML source reference as a data element. The integration system  is then able to identify and collect the application data associated with each name-value pair without determining the spatial location of the data in the display. In another example, the integration system  uses tags, such as HTML tags and\/or tree node addresses, for source references having a tree structure to map locations. Other techniques to map the locations of the application data may be used.","In another aspect, the mapped locations may be spatially mapped by a user. For example, a user may select a spatial position or area on a display, and the integration system  assigns pixel coordinates or other coordinates to the selected spatial position or area.","The dictionary  may include a label and\/or example application data for each data element. The dictionary labels identify the type, subject matter, nature, and\/or may be other designations of the application data contained in the mapped location.","In one example, a first mapped location that contains the social security number (SSN) \u201c123-45-6789\u201d would have a dictionary data element that includes the dictionary label \u201cSSN\u201d and example application data \u201c123-45-6789.\u201d Similarly, a second mapped location in the same or another display for the same application that contains a patient's first name \u201cSam\u201d would have a dictionary data element that includes the dictionary label \u201cFirst Name\u201d and the application data \u201cSam.\u201d","In a healthcare setting having healthcare related applications, another dictionary label may be a patient identification number (\u201cPatient ID\u201d). In the healthcare industry, the Patient ID is a unique sequence of numbers and\/or characters used to identify a single patient. In this example, the Patient ID label corresponds to a mapped location of a display generated by a particular application that contains the unique sequence that uniquely identifies each individual patient.","Each application may use a different Patient ID or other unique sequence to identify a patient for which document data, such as a medical file, a medical image, or other data, is currently being displayed. Other mapped locations may be assigned labels, such as Age, Address, Height, and Race. The data in these other mapped locations may be applicable to numerous patients, while the data in locations that correspond to the Patient ID label, however, apply only to a single unique patient. Accordingly, the Patient ID label may be used to associate data from the mapped locations of one or more displays to documents for a particular patient. In addition, the Patient ID label may be useful when using collected application data for one or more integration functions, when the Patient ID format is similar to another commonly used character string such as a social security number, or another unique identifier.","In one aspect, the integration system  may create an instance of the dictionary  for each application in memory during the execution of the integration system. The instance of the dictionary  stores application data collected from one or more mapped locations of a display in memory for one or more dictionary data elements. For example, an instance of a dictionary may contain one or more data elements, and each data element has a mapped location from which application data is collected, the collected application data from the mapped location (if a value exists for the collected application data) A dictionary may also contain a label for the data element. In this example, the spatial or logical location of the mapped location, the collected application data, and the label for the data element are organized and stored in fields corresponding to each data element in the instance of the dictionary . In other examples, the instance of the dictionary  may have other fields for each data element.","The context map  is a data structure containing one or more standardized context map properties that have been mapped from one or more data elements of the dictionary  or are otherwise from collected application data. Data elements in the dictionary  may use varying terminology for labels. Therefore, the context map  maps the data elements and\/or otherwise maps collected application data into context map properties that use terminology standardized for the integration system .","In one aspect, the context map  may define a relationship between the collected application data in an instance of the dictionary  and context map properties and\/or document properties. In another aspect, the context map  may define a relationship with another source of the collected application data. A context map has one or more relationship definitions for one or more context map properties, where each relationship definition identifies a source from which collected application data originates and a destination to which the collected application data from the source is stored for a context map property, at least temporarily. The context map property has a name (i.e., a label) and a value, and the collected application data stored in the destination is the value for the context map property. The context map property labels may be used along with collected application data (which is used as the corresponding context map property value for the property) to query the database A for documents or to perform other integration functions. Context map properties may be, for example, a last name, a first name, an address, a postal code, a phone number, a social security number, a student identification, a year, a customer number, a patient name, a birth date, or another name or type of value. In some example embodiments, context map properties may be mapped from data elements in the dictionary .","In one aspect, the source may identify collected application data in an instance of the dictionary . For example, the source for each context map property is a field of the dictionary that contains the collected application data. In this aspect, the context map properties are standardized properties and can be more easily understood and processed by the integration system  than the dictionary labels. For example, a first application may refer to a health care provider as a \u201cphysician,\u201d a second application refer to the same health care provider as a \u201cdoctor,\u201d and a third refer to same health care provider as \u201cmedic.\u201d The dictionaries for these three applications may have three different dictionary labels to describe the same health care provider. The context maps for the displays of the three applications, however, would have the same property label that identifies the health care provider (e.g., \u201cprimary physician\u201d).","In another example, the dictionary  may contain a data element for collected application data \u201cDean\u201d with the label \u201cLast Name.\u201d In this example, however, it may not be clear whether the last name Dean refers to a patient or a health care provider. In this example, the context map property for the display may specify that the data element is a physician last name, thereby refining any queries or integration functions using this data element.","One or more of the data elements identified in the dictionary  may be mapped to standardized context map properties that are used by the integration system  to use, process, and\/or compare the associated collected application data. In addition, one or more context map properties may be associated with one or more documents as a set of document properties that may be used to identify, index, store, query, and\/or retrieve the documents, such as the document .","In one aspect, each display identified in the application plan  may have a unique context map, such as the context map . In one example of this aspect, the context map  identifies a source and destination for fewer than all of the mapped locations of a display. For example, a display may contain four mapped locations that are identified as data elements in the dictionary . However, the context map  for the display may identify only two properties that correspond to two of the four mapped locations on the display (one mapped location corresponding to each property) from which the instance of the context map is to be populated. The number of relationship definitions identified in the context map , each identifying a source and a destination property, is configurable and may not be equal to the number of mapped locations in the associated display.","In another aspect, one context map may be associated with multiple displays. In one example of this aspect, the context map includes a relationship definition for fewer than all mapped locations of the displays. In some example embodiments, the context map  may be omitted.","In one aspect, the context map and the dictionary may be combined into a single data structure. In some example embodiments, the dictionary may not exist, and the source in the relationship definition is the spatial or logical location of the mapped location of a display. For example, a single data structure and\/or an instance of that data structure may include the necessary data of the context map  and the dictionary . In this example, a dictionary and context map may be combined into one data structure that has one or more data elements or properties each identifying a mapped location, collected application data from the mapped location, and a label, such as a standardized label useful for generating queries and\/or indexing documents.","In one aspect, the integration system  creates an instance of the context map  for each display in memory during the execution of the integration system. An instance of the context map  includes one or more properties and associated application data collected from the mapped locations of a display. For example, an instance of the context map  maps the collected application data from the instance of the dictionary  in memory to a value for a context map property that has a label.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 4","b":["402","404","402","406","408","410","306","108"]},{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 5","b":["502","102","502","108","502","304","306","308","502","504","506","502","306","506"]},"In one aspect, the representation of the display  may be a tree structure depicting the UI controls and\/or other data elements of the display. In another aspect, the representation of the display  may be a bitmap for the display, as shown in . In this aspect, the application plan management interface  has one or more menus and\/or buttons, such as an application plan button . As used herein, a button refers to a simulated selection interface generated for display that is selected by a user input. The selection of a button activates a specific function within the application plan management interface .","The application plan button  may be selected to create or modify the application plan . For example, one or more application displays may be added to the application plan  if it is determined that the one or more application displays contain application data of interest.","In one aspect, once a display has been selected for inclusion in the application plan , the integration system  automatically logically identifies and maps the locations of the data elements and\/or UI controls for the display  and presents a list or tree structure of the logically mapped data elements found in the display to the user as the representation of the display. From the representation of the display , the user may select one or more data elements to be added to the dictionary . For example, the user may move data elements from the representation of the display to the dictionary  using one or more methods. Because the spatial or logical location of the data element is known from the representation of the display, the integration system  may store the spatial or logical mapped location of the data element in the dictionary . For example, a user may select and drag the data element \u201cJones\u201d to the dictionary  from a logically mapped tree structure representation of the display. In this example, the integration system  may also store the logical location for the \u201cJones\u201d UI control in the dictionary as the mapped location of the data element.","In another aspect, the integration system  enables the user to spatially define one or more mapped locations, such as in a bitmap or raster representation of the display . For example, a user may select a data element in a bitmap representation of the display , and the integration system  automatically identifies and stores the location of the data element by defining boundaries around the selected data element. In some alternate example embodiments, the user may draw a box or other boundaries around the selected data element. In another example embodiment, the integration system  may identify a selected location on the representation as a UI control and store the location of the UI control and\/or an application field or data associated with the UI control as a mapped location in the dictionary . In still other example embodiments, a mapped location may be determined by the screen or display coordinates or a character offset.","As the UI control names may be unique to each application and display , the user may, in one aspect, select a label to be associated with the data element. For example, the user may input a label as text using a text entry box (not shown). In another example, the label assigned to the mapped location of the display  in the dictionary  may be the same as the label used by the application. In another example, the integration system  may automatically select the application label from the display  and store it as the dictionary label.","According to another aspect, the integration system  may automatically identify and map locations of the display  based upon the nature of the display. For example, the integration system  may automatically identify the display  as an HTML display, capture the HTML source code for the display, parse the source code, identify name-value pairs within the source code, and store the name-value pairs as logically mapped locations in the dictionary . In another example, the integration system  may automatically determine that the display  has a source reference structured as a hierarchical tree with one or more linked nodes. In this example, the integration system  may automatically identify the nodes and store the nodes as logically mapped locations in the dictionary . In other example embodiments, the integration system may automatically identify and map locations of the display  based upon a bitmap.","In one aspect, the integration system  may create and store the application plan , the dictionary , and the context map  as files in the database A. In another aspect, the data from the application plan , the dictionary , and the context map  may be stored in fields and\/or tables in the database A. In yet other aspects, the data from the application plan , the dictionary , and the context map  may be stored in other ways.","In yet another aspect, the application plan management interface  may be generated for display by a stand-alone application (not shown) that is not part of the integration system  to create and\/or modify the application plan , the dictionary , the context map , and\/or another data structure used in place of the dictionary and context map. In this aspect, the stand-alone application may then be used to define mapped locations of the display .",{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 6","b":["108","102","108","602","610","612","614","602","604","606","608","610","602","610","102","602","610","102"]},"In one aspect, the modules - non-programmatically collect application data from the application . In this aspect, the integration system A requests data from the operating system API. The integration system A calls the operating system API to request a standard interface generated by the application . The operating system API presents the standard interface for the application  to the integration system , which collects application data from the interface using standardized operating system protocol communications. The modules - may collect application data from source references and\/or displays that are not rendered for display on a display device. In another aspect, the modules - non-programmatically collect the application data from rendered displays.","In one aspect, when two or more modules are integrated, one or another, but not both or all, collect application data from the mapped locations using an instance of a dictionary  and one or more context maps . In some alternate example embodiments, those processes may be performed in a separate data collection module. The remaining processes of each module may be performed by the respective module.","The notification module  may collect application data from a display or a source reference for a display generated by the application . The notification module  automatically queries the database A to identify documents, such as the document , that are relevant to the application display or application data of the display. The notification module  may also query the database A to identify other projects, tasks, and\/or other stored data.","In one aspect, the notification module  may collect data from one or more mapped locations of the source reference or the display generated by the application . The notification module  may use the collected application data to query the database A to identify one or more documents that are associated with the collected application data. For example, the notification module  may collect the application data \u201cJohn Smith.\u201d The notification module  may use \u201cJohn Smith,\u201d alone or in combination with other collected application data, to identify all documents related to \u201cJohn Smith\u201d or a subset thereof.","In another aspect, the notification module  may use context map properties and their associated labels and values to query documents. For example, the notification module may build a query to search for documents having a document property name (i.e. a label) and an associated document property value equal to a context map property label and its associated context map property value, where the context map property value is the value of the collected application data.","The synchronized sign-on module  automatically signs a user of the application  on to the integration system A. For example, the sign-on module may non-programmatically collect application data identifying the current user of the application  from a mapped location of the application and automatically sign the current user on to the integration system A as the current user of the integration system. Similarly, the sign-on module  may sign a user out of the integration system A in response to changes in or the lack of application data in the mapped location of the application .","The safety module  protects against the inadvertent display of a document, such as the document , if the document is not associated with the application data currently being viewed by the user. The safety module  compares the current collected application data to the data associated with the document to determine if the document is associated with the current application data. In one aspect, the safety module  may close the display of the document . In another aspect, the safety module may notify a user through a user interface if the application data currently being viewed does not correspond to the data associated with the document.","In one example, the safety module  may collect the application data \u201cJane Doe\u201d from a mapped location of a new display of the application , while a document containing the lab results for John Doe is also displayed. The safety module  compares a context map property having the collected application data \u201cJane Doe\u201d as a value with a context map property used to retrieve the document (e.g. \u201cJohn Doe\u201d) to determine that the display and the document do not refer to the same patient. In this example, the safety module  may automatically close or prompt the user to close the document. In some example embodiments, the safety module  may generate an icon or other graphic or message for display to notify the user. In some other example embodiments, the safety module  may generate or play an audio signal to notify the user. In yet other alternate embodiments, the safety module  may compare the application data \u201cJane Doe\u201d with collected application data used to retrieve the document, without reference to the context map , to determine that the display and the document do not refer to the same patient.","In another example, the safety module  may collect application data from a mapped location of the display and compare the context map properties for the display to the document properties. If the context map properties do not match the document properties, the safety module  may automatically close or prompt the user to close the document. In some other example embodiments, the safety module - may generate an icon or other graphic message for display to notify the user. In some other example embodiments, the safety module  may generate or play an audio signal to notify the user.","In another example, the safety module  may collect application data from one or more mapped locations of a display and compare the collected application data to one or more document properties of an open document. If the collected application data does not match the document properties, the safety module  may automatically close or prompt the user to close the document. In some other example embodiments, the safety module  may generate an icon or other graphic message for display to notify the user.","The collaboration module  may notify one or more users of the application integration system  if another user has viewed or is currently viewing the same, similar, or related application data and\/or documents. For example, when one user (e.g., doctor) is viewing an application displaying the patient chart for a Patient A, and another user (e.g., a pathologist) is viewing an application displaying laboratory results for Patient A, the collaboration module  detects that both users are viewing application data associated with Patient A and notifies one or both users that at least one other user is viewing data for Patient A.","In one aspect, the collaboration module  enables a user to configure a notification time period. The notification time period is a time period (e.g. minutes, hours, days, or months) from which a first user will be notified if another user views, accesses, or modifies application data that is the same, similar, or related to the application data being viewed by the first user. The actions of the other user may occur prior to or subsequent to the viewing by the first user. In this aspect, any user may leave comments, notes, or other information for other users who view the same, similar, or related application data.","The data collection module  monitors the application  continuously or at a predetermined interval such as specific day of the week, time or time interval and locates one or more mapped locations in one or more displays for the application by processing the spatial or logical locations of the mapped locations stored in the dictionary  for the application. The data collection module  may also collect application data from the mapped locations and populate instances of the dictionary  and the context map . In one aspect, the data collection module  may use collected application data to index documents, other objects, projects, and\/or tasks stored in the database A.","In some example embodiments, one or more modules - may identify mapped locations in one or more displays for the application  by processing the spatial or logical locations for the mapped locations stored in the dictionary  for the application, collecting application data from the mapped locations, and populating instances of the dictionary and the context map .",{"@attributes":{"id":"p-0112","num":"0111"},"figref":["FIG. 7","FIG. 7"],"b":["102","102","702","704","706","108","104","702","104","702","706"]},"The computing device  is a processing device, such as a personal computer, server computer, or mobile processing device. It will be appreciated by those skilled in the art that other processing devices may also be used. The computing device  may have one or more processors  that process software or other machine-readable instructions and memory  to store the software or other machine-readable instructions and data. The memory  may include volatile and\/or non-volatile memory. The computing device  may communicate with the integration server  using wired and\/or wireless communication through a direct connection or via the network .","The computing device  may execute one or more modules, such as one or more of the modules - of the integration system A, that are stored on a computer-readable medium . The computing device  may also execute one or more applications, such as the application  of the application system A, that are embodied on machine-readable media, such as the computer-readable medium  or another computer readable medium. The computing device  may also receive and transmit communications from and to an external application system executing the applications. The computer-readable medium  may include volatile media, nonvolatile media, removable media, non-removable media, and\/or other media or mediums that can be accessed by a general purpose or special purpose computing device. For example, the computer-readable medium may include computer storage media and communication media. Computer storage media further may include volatile, nonvolatile, removable, and\/or non-removable media implemented in a method or technology for the storage of information, such as computer-readable instructions, data structures, program modules, and\/or other data. Communication media may, for example, embody computer-readable instructions, data structures, program modules, algorithms, and\/or other data. The communication media may also include an information delivery method. The communication media may include wired and\/or wireless connections and technologies and be used to transmit and\/or receive wired and\/or wireless communications. Combinations and permutations of the above systems and components described herein may be made.","The computing device  may also include an input system (not shown) and a display system (not shown). The display system, for example, may have a monitor or other device for rendering displays, including application data and other data. Such display systems may include, for example, touch screen displays or graphical user interfaces.","The input system may include one or more systems, devices, or components used to generate or transmit an electronic version of one or more documents and other data for the application integration system A. The input system may include a scanner that scans paper documents to create electronic reproductions of the documents that are to be used by the integration system  and\/or the application system . The input system may also include one or more processing systems and\/or communication systems that transmit and\/or receive electronic documents and\/or other data through wireless or wire line communication systems to the computing device , such as a scanner, image capture device, facsimile machine or electronic mail component. The input system may further include one or more processors, a computer, volatile and\/or nonvolatile memory, a mouse, a trackball, a touch pad, a keyboard, and\/or a combination of the foregoing. The input system may be embodied by one or more processors or processing systems, one or more distributed or integrated systems, and\/or computer-readable media.","In one aspect, the application integration system A may include a user interface  for providing data and\/or instructions to the integration system A and for receiving data and\/or instructions from the integration system. The user interface  may display data from the integration system A, including one or more displays, and enable a user to enter data and\/or instructions. The user interface  may be embodied in or operate using one or more processors or processing systems, such as with the display system. The user interface  may also be embodied in or operate using one or more distributed or integrated systems and\/or computer-readable media. In some example embodiments, the user interface  may have an audio component for generating or playing audio signals.","The integration server  has one or more processors  and memory  to store and execute software or other machine-readable instructions and data. The memory  may include volatile and\/or nonvolatile memory. The integration server  may also include the database A. In another aspect, the collaboration module  may be embodied on the computer-readable storage medium  that resides on the integration server  instead of in the integration system A. In another example embodiment, the collaboration module may be embodied on a computer readable storage medium that resides in application system A.","The network  is the Internet, an intranet, an Ethernet network, a wire line network, a wireless network, another communication network, and\/or combinations of the foregoing.",{"@attributes":{"id":"p-0120","num":"0119"},"figref":["FIG. 8","FIG. 7"],"b":["802","610","108","108","804","806","202","702","202","802"]},"At block , the data collection module  of the integration system A continuously monitors the application  to identify each display that is generated for viewing on a display device. The data collection module  may identify one or more mapped locations in a display and collect application data from the mapped locations at block . In one aspect, the collected application data may be used to populate an instance of the dictionary .","In one aspect, the display is an image, and the application data may be collected from a mapped location of the image. The application data at the mapped location may be collected as an image. An image-based format is a graphical representation of collected application data that may include characters as part of the image. In this aspect, the integration system A may conduct a character recognition, a character voting, and\/or an image registration process to identify the collected application data as text.","According to another aspect, the data collection module  of the integration system A may inspect the source references of the displays to locate the application data that appears in the mapped locations. For example, name-value pairs may be located in an HTML source reference. Once the name-value pairs have been located, the data collection module  may collect the application data identified by the name-value pair from the source reference. In another example, the data collection module  of the integration system A may inspect source references to identify tags, such as HTML tags and\/or tree node addresses for source references having a tree structure, and collect the data corresponding to the tags and\/or tree node addresses.","In yet another aspect, the data collection module  of the integration system A may refer to the logical associations created during the logical mapping of the display. In this aspect, the data collection module  of the integration system A may collect the application data associated with the UI controls found in the display or source reference.","At block , the integration system A may refer to the context map  for the dictionary  to determine the context map properties for the collected application data. At block , the data collection module  of the integration system A may use the context map properties (including the context map property values and\/or the associated context map property labels) to query the database A or perform another function using the notification module , sign the user of the application  on to the integration system  using the synchronized sign-on module , and\/or determine if the properties of any documents currently being displayed are not associated with the collected application data and\/or context map properties using the safety module . The collected application data and\/or context map properties may also be used to promote collaboration between one or more users of the application integration system  using the collaboration module . When the data collection module  is used with the modules -, the modules need not perform the data collection processes performed by the data collection module . In such example embodiments, the modules - perform their remaining processes.","In one aspect, the modules - may use only the collected application data for the query or other functions without reference to the corresponding context map properties. In this aspect, the context maps are not used, and the collected application data for the query or other function may be taken from the dictionary and\/or other data structure and not the context map property values.","According to another aspect, the application data collection process may execute automatically and\/or continuously upon the execution of the application . In this aspect, the application data collection process of the data collection module  occurs without requiring user initiation or continued user input. In one aspect, one or more modules - also automatically and\/or continuously perform their functions without requiring user initiation or continued user input. As used herein, automatically means without user initiation.",{"@attributes":{"id":"p-0128","num":"0127"},"figref":["FIG. 9A","FIG. 9A"],"b":["902","602","108","602","108","106","302","704","104","702","104"]},"According to one aspect, the computing device  or an external application system may execute the application  that generates one or more displays (not shown). When at least one display is generated, the notification module  may non-programmatically collect application data from one or more mapped locations of the display at the operating system API, as indicated by block . The notification module  may process the instance of the context map  containing the context map properties with the context map property labels and\/or the associated collected application data as the context map property values to generate a query  of the database A. The query  may use the context map properties to identify documents having properties that satisfy the query. For example, if the instance of the context map  has a context map property labeled \u201cPatient Last Name\u201d and the collected application data associated with that property is \u201cSmith,\u201d the notification module  queries the database A to identify one or more documents having a document property labeled \u201cPatient Last Name\u201d and an associated value of \u201cSmith.\u201d Therefore, the notification module  will identify one or more documents corresponding to the instance of the context map  and thus relevant to the display.","If a document, such as the document , is identified by the query , the document  may be retrieved by the notification module , and the document or a link to the document may be generated to the user interface . If more than one document is identified, the notification module  may generate a list containing links to the documents. Such list of documents may then be displayed on the user interface . In some example embodiments, thumbnails or image previews of the documents may be generated and displayed.","In one aspect, the notification module  may be automatically and continuously executed to detect any changes in the display generated by the application . To detect changes, the notification module  non-programmatically polls the display, polls the source reference for the display, and\/or otherwise collects data from the operating system API to identify and collect application data from any mapped locations in the display. The notification module  may generate a new query, similar to the query , to query the database A to identify documents that have properties associated with the context map properties (including values of the newly collected application data and\/or labels). In some example embodiments, notification module  may generate a query with the newly collected application data without reference to the context map properties. Thus, any newly identified documents may be proactively provided to the user in response to changes in the application display without requiring continued user input.","In another aspect, the user may be notified that the document  has been identified, without displaying the document. For example, a notification, such as a pop-up message or graphic icon may be presented to the user. When the user uses the input device to hover over the notification, the document  may be displayed as a thumbnail or in a separate window. In some example embodiments, when the user uses the input device to select or activate the notification, the document  may be rendered for display on the display device.",{"@attributes":{"id":"p-0133","num":"0132"},"figref":"FIG. 9B","b":["908","602","714","908","908","714"]},{"@attributes":{"id":"p-0134","num":"0133"},"figref":["FIG. 10","FIG. 10"],"b":["1002","604","108","604","108","106","1008","704","1008","108","108","104","702"]},"In one aspect, only users that are signed on to the integration system A may use the features and functions performed by the integration system A modules, such as the notification module , the safety module , and the collaboration module  or any combination of the foregoing. The computing device  may execute the application  that generates one or more displays (not shown). When at least one display is generated, the synchronized sign-on module  may non-programmatically collect application data identifying the current user of the application  from a mapped location of the display, as indicated by . For example, a display may include the application user name for the user of the application  in the title bar or a mapped location of an application window. In this example, the synchronized sign-on module  non-programmatically collects the application user name from the title bar of the window, from the source reference for the window, and\/or from data otherwise collected from the operating system API. The synchronized sign-on module  may determine if the application user name corresponds to a user name that is authorized to sign on to the integration system A.","If, for example, the application user name is the same as the integration system A user name, then the synchronized sign-on module  may automatically sign the user into the integration system without requiring additional user input. In another example, the application user name may be different than the integration system A user name for the same user. In this example, the sign-on module  may refer to the authorized integration system user data  to determine if the application user name corresponds to an authorized user name, as indicated by . If an authorized user name is identified, the synchronized sign-on module  may sign the user on to the integration system A using the authorized user name. If the application user name does not correspond to an authorized user of the integration system A, the user is not signed on to the integration system. Furthermore, if no application user name is collected or the application user name does not correspond to an authorized user name, the sign-on module  does not sign the application user on to the integration system A. In other example embodiments, other unique user authentication credentials, such as a user identification number, may be used to sign in on to the integration system A.","In another aspect, the integration system A may presume that a user who successfully signs on to the application  is automatically authorized to use the integration system. In this aspect, the synchronized sign-on module  may poll the display, poll the source reference for the display, and\/or otherwise collect data from the operating system API to identify and collect application data from the mapped location that indicates that the user is signed on to the application . The synchronized sign-on module  may automatically sign the user on to the integration system A without referring to the authorized integration system user data . For example, no password or other user credentials from the application  are required to sign the user on to the integration system A.","The synchronized sign-on module  may execute automatically and continuously. The synchronized sign-on module may continuously compare the application user identifier, such as a number or name, if any, against the authorized integration system user data . If no application user identifier is collected or the application user identifier no longer corresponds to an authorized user of the integration system A, the synchronized sign-on module may automatically sign the current user of the integration system A off of the integration system.",{"@attributes":{"id":"p-0139","num":"0138"},"figref":["FIG. 11","FIG. 11"],"b":["1102","606","108","606","108","106","302","704","104","702"]},"The unintentional display of a patient or financial data document for one patient or customer along side application data for another patient or customer may lead to a misdiagnosis or misinformation and may result in a violation privacy laws, a security breach and\/or other issues. A patient data document is a document containing data regarding a patient. For example, a patient data document may be a medical record, patient test results, a biographical data form, or other patient records. A financial data document is a document containing financial information and may be, for example, a bank statement, loan application, etc. By way of example and not limitation, the patient or financial data document may be an image, an HTML page, a PDF file, and\/or another display type. The safety module  non-programmatically minimizes the risks of the unintentional reliance on the incorrect patient or financial data document.","The safety module  may non-programmatically identify and collect application data from the mapped locations of one or more displays, as indicated by . The safety module  may collect the application data from the displays, the source references for those displays, and\/or data may otherwise be collected from the operating system API. The safety module  compares the collected application data to data associated with the document to determine if a discrepancy exists. In one aspect, the safety module  may compare collected application data (without reference to the context map ) to document property values for any document that is currently displayed. If the collected application data does not match the document property values, the safety module  may automatically close the document. In some other example embodiments, the safety module  may notify the user in lieu of or in addition to closing the document.","In one aspect, the computing device  or an external application system may execute an application  that generates one or more displays (not shown) while a patient data document is also displayed. In one aspect, the patient data document may be identified and retrieved by the notification module  as described above. In this aspect, a first instance of the context map  used to identify the patient data document retained in memory. For example, the patient data document may be retrieved by the notification module  following a query using the first instance of the context map  for a first display that is no longer rendered for viewing. The notification module  may query the database A to identify and retrieve the patient data document that has one or more document properties equal to the context map properties for the first display.","In another aspect, the application data collected by the safety module  or the data collection module  may be used to populate a second instance of the context map  for the displays. The safety module  may determine if a discrepancy exists between the first instance of the context map  and the second instance of the context map. In one example, the second instance of the context map  may be created when the display changes or when application data for the display changes. In this example, the safety module  may automatically close all open documents and\/or notify a user when the context map property values for the first instance of the context map  change or when the properties of a second instance of a context map do not match the properties of the first context map instance.","In one aspect, if any discrepancy is identified between the first and second instances of the context map , the safety module  automatically closes the display of the document. This may be done to prevent the user from inadvertently relying on the data in the document when evaluating the application data appearing in one or more displays.","In another aspect, a collection of documents (e.g., a folder of documents) may be retrieved and displayed in response to a query using a first instance of the context map . In this aspect, the safety module  may close all the documents in the collection, if a discrepancy is identified between the first instance and a second instance of the context map .","In yet another aspect, the safety module  may inform the user of the discrepancy by generating a graphic indicator (not shown) for displaying on the user interface  and\/or the patient data document. This indicator may be a symbol, icon, text notification, or message. Other indicators, such as audio signal or beep, may be used in some example embodiments.","In one aspect, the safety module  may determine if a discrepancy between the first and second instances of the context map  is material or significant. For example, the instances of the context map  may have different associated values for the context map property label of \u201cPatient Home Address\u201d yet have the same associated values for the context map property labels of \u201cPatient ID,\u201d \u201cPatient Last Name,\u201d and\/or \u201cPatient SSN.\u201d In this example, the discrepancy may be immaterial, as the patient data document and display are related to the same patient, although the patient may have moved to a new address. Thus, in some example embodiments, the safety module  may not automatically close the display of the patient data document. The safety module  may still inform the user of the discrepancy, such as by displaying a graphic and\/or text indicator or generating an audio signal.",{"@attributes":{"id":"p-0148","num":"0147"},"figref":["FIG. 12","FIG. 12"],"b":["1202","608","108","602","606","108","302","106","704","104","702"]},"In this example, the application integration system A may include one or more processing devices, such as the computing devices A, B, each executing the application A, B respectively. Each computing device A, B may also execute a respective integration system A, B.","The integration systems A and B may non-programmatically collect application data from the mapped locations of displays of the respective applications A, B, as indicated by  and . The application data may be collected from each display, the source references for the displays, and\/or data may be collected from the operating system API for each application A, B. At the integration server , the collaboration module  compares the context map properties or the collected application data (without reference to the context map properties) for the displays of each application A, B, as indicated by  and .","The collaboration module  may determine if the collected application data collected from each application A, B is identical or otherwise corresponds to the same subject, event, and\/or issue. For example, the collaboration module  may determine that the users of the computing devices A and B are viewing displays having context map properties that correspond to the same patient, even if the users are not viewing the same display or document. In this example, the displays may have the same collected application data as values for the same context map property. In another example, the collaboration module  may determine if one or more users are viewing information about the same event in a calendar application by comparing the context map properties for the displays viewed by the users.","If the collaboration module  determines that the context map properties for the display viewed by each user are identical or otherwise correspond to the same subject matter, the collaboration module  may notify, as indicated by  and , each user of the possibility for collaboration. For example, the collaboration module  may generate collaboration indicators for the user interfaces A, B in the form of pop-up messages, other messages, icons, and\/or graphics or displays that may be displayed or otherwise rendered to each user. The collaboration indicators may include a message with collaboration information, such as the subject or subject matter of the collaboration. In some example embodiments, the collaboration indicators may include information about the one or more users that are or were viewing the same, similar, or related application data. In still other example embodiments, other indicators, such as audio signals in lieu of or in connection with visual indicators may be used.","In one aspect, the collaboration module  may enable or facilitate communication between the users of the computing devices A, B. For example, the collaboration module  may include an instant messaging function that allows the users to communicate in real time. In another example, the collaboration module  may include a non-real time messaging function, where the users may post messages to be read by future users that view application data having the same context map properties or otherwise having the same collected application data. In other example embodiments, the collaboration module  may direct users to another application for collaboration between users.","In another aspect, the collaboration module  may notify a user that one or more other users who have viewed identical or otherwise corresponding application data and\/or documents have also viewed other application data and\/or documents. For example, the collaboration module  may notify a first user who is viewing a particular patient data document for Patient A that a second user has also viewed the same patient data document and that the second user has also viewed one or more other patient data documents.",{"@attributes":{"id":"p-0155","num":"0154"},"figref":"FIG. 13","b":["1302","602","1304","304","202","304"]},"At block , the user may launch the application . In one aspect, the user may launch the application  before the application plan  is identified. In another aspect, the user may launch the application  while or after the application plan  is identified.","The notification module  may identify one or more mapped locations of an application display at block . At block , the notification module  may non-programmatically collect application data from the mapped locations. In some example embodiments, the data collection module  may perform steps block  and block .","At block , the notification module  may query the database A to identify one or more documents, such as the document , whose properties match the context map properties or whose properties otherwise match the collected application data without reference to the context map. After identifying one or more documents that fit the query criteria, the notification module  may proactively display the matching documents or thumbnails of the documents. In some example embodiments, the notification module  may display a list of matching documents on a user interface for review by the user at . In one aspect, a pre-determined maximum threshold for the number of matching document properties may limit the number of documents displayed by the notification module .",{"@attributes":{"id":"p-0159","num":"0158"},"figref":"FIG. 14","b":["1402","1404","304","202","304"]},"At block , the user may sign on to the application  executing on a computing device. In some example embodiments, steps  and  may be reversed. At block , the synchronized sign-on module  may identify the mapped location of a display generated by the application  that includes the user identifier or other information identifying the current user of the application.","At block , the synchronized sign-on module  may non-programmatically, automatically, and continuously collect the application data from the identified mapped location containing the current user identifier. In some example embodiments, the data collection module  could perform steps  and .","At block , the synchronized sign-on module  may determine if the user identifier for the user of the application  corresponds to an authorized user of the integration system A. If the user of the application  is not an authorized user of the integration system A, the synchronized sign-on module  may next determine if another user is currently signed on to the integration system at block . If no other user is currently signed on to the integration system A, the synchronized sign-on module  does nothing at block . If it is determined at block  that another user is signed on, the synchronized sign-on module  may automatically sign off the other user signed on to the integration system A at block  to prevent the user of the application  from accessing the features and functions of the integration system A.","If the determination at block  is affirmative (i.e., the user of the application  is an authorized user of the integration system A), the synchronized sign-on module  may next determine at block  if another user is currently signed on to the integration system. If the sign-on module  determines that no other user is signed on to the integration system A, the synchronized sign-on module  may automatically sign the user of the application  on to the integration system at block . Similarly, if the synchronized sign-on module  determines that a different user is currently signed on to the integration system A at block , the synchronized sign-on module  may sign the other user off of the integration system and automatically sign the user of the application  on to the integration system at block .","In one aspect, if the user of the application  is signed on to the integration system A but subsequently signs out of the application  so that there is no application data for the synchronized sign-on module  to collect from the identified mapped location, the user of the application  may be automatically signed out of the integration system A.",{"@attributes":{"id":"p-0165","num":"0164"},"figref":"FIG. 15","b":["1502","606","1504","304","202","304","202","304"]},"At block , the safety module  identifies one or more mapped locations of a display generated by an application, such as the application . At block , the safety module  may non-programmatically, automatically, and continuously collect application data from one or more mapped locations to generate a first instance of the context map  that is used to identify and retrieve a document, such as the document . The safety module  may continue to collect application data from one or more mapped locations to generate a second instance of the context map . In some example embodiments, the data collection module  may perform steps  and\/or .","At block , the safety module  may compare the context map properties for a first instance of the context map , used to identify and retrieve the document , with the second instance of the context map. The safety module  may determine if a discrepancy exists between the first instance and the second instance of the context map . If a discrepancy is not identified at block , then the safety module  may do nothing at block . If a discrepancy is identified by the safety module  at block , then the safety module  may automatically close the display of the document  at block . In some example embodiments, the safety module  may notify the user of the discrepancy in lieu of or in addition to closing the display of document . For example, the integration system  may generate an audio signal and\/or a visual indicator in conjunction with or as an alternative to closing the display of the document . In some example embodiments, the safety module  may prompt the user for action.",{"@attributes":{"id":"p-0168","num":"0167"},"figref":"FIG. 16","b":["1602","606","1604","304","202","304"]},"At block , the safety module  may identify one or more mapped locations of a display generated by an application, such as the application . At block , the safety module  may non-programmatically, automatically, and continuously collect application data from one or more mapped locations. In one aspect, the collected application data may be used to populate an instance of the dictionary  and\/or the context map . The safety module  may continue to collect application data from one or more mapped locations. In some example embodiments, the data collection module  may performs steps  and\/or .","At block , the safety module  may determine if the collected application data has changed at one or more mapped locations. In one aspect, the safety module  may compare current collected application data to the collected application data in an instance of the dictionary . In another aspect, the safety module  may compare current collected application data to the collected application data in an instance of the context map .","In yet another aspect, the safety module  may compare collected application data in an instance of the dictionary  to the collected application data in an instance of the context map . In still another aspect, the safety module  may compare collected application data and the dictionary labels in an instance of the dictionary  to the collected application data and the labels in the instance of the context map . In yet another aspect, the safety module  may compare current collected application data to the collected application of another data structure and\/or the labels for another data structure.","If a change is not identified at block , then the safety module  does nothing (block ). If any change to the application data collected from one or more mapped locations is identified by the safety module  at block , then the safety module  may automatically close the display of the document  at block  and\/or notify the user of the discrepancy. In one aspect, the integration system  may generate an audio signal and\/or a visual indicator in conjunction with or as an alternative to closing the display of the document . In another aspect, the notification may include prompting for additional user input.",{"@attributes":{"id":"p-0173","num":"0172"},"figref":"FIG. 17","b":["1702","606","1704","304","202","202","304"]},"At block , the safety module  may identify one or more mapped locations of a display generated by an application, such as the application . At block , the safety module  may non-programmatically, automatically, and continuously collect application data from one or more mapped locations to generate an instance of the context map  that is used to identify and retrieve a document, such as the document , for display. The safety module  may continue to collect application data from one or more mapped locations. In some example embodiments, the data collection module  may perform steps  and\/or .","At block , the safety module  may compare the current collected application data to the properties of the displayed document . The safety module  may determine if a discrepancy exists between the current collected application data and the properties of the displayed document . If a discrepancy is not identified at block , then the safety module  may do nothing (block ). If a discrepancy is identified by the safety module  at , then the safety module  may automatically close the display of the document  (block ) and\/or notify the user of the discrepancy. In one aspect, the integration system  may generate an audio signal and\/or a visual indicator in conjunction with or as an alternative to closing the display of the document . In another aspect, notification may include prompting a user for a response or action.",{"@attributes":{"id":"p-0176","num":"0175"},"figref":"FIG. 18","b":["1802","608","1804","304","202","202","202","304"]},"At block , the application A may be launched on a first computing device A, and another instance of the application B may be launched on a second computing device B (block ). In other example embodiments, the computing devices A and B execute different applications. It will be appreciated by those skilled in the art that steps - may be performed in any order.","At block , the integration systems A, B executing on each computing device A, B respectively, may identify one or more mapped locations in displays of each respective application A, B. The integration systems A, B may non-programmatically automatically collect application data from the mapped locations of the displays of the applications A, B at block . In one aspect, the integration systems A, B may also identify the properties of any displayed documents. In some example embodiments, the data collection modules  for each integration system A, B may perform steps  and\/or .","At block , the collaboration module  may compare the context map properties or the collected application data without reference to the context map for each application A, B. The collaboration module  may determine if the context map properties or the collected application data are directed towards the same subject, event, and\/or issue by comparing the context map properties or the collected application data for the displays of each respective application A, B at block .","If the determination made at block  is negative (i.e., the context map properties or collected application data viewed by the different users are not the same, similar or related), then the collaboration module  does nothing (block ). If the determination made at block  is affirmative, then the collaboration module  may notify each user of the computing devices A, B that they are viewing application data or documents that are the same, similar, and\/or related to application data, context map properties, and\/or properties of documents as those being viewed by another user at block .","The foregoing description of an embodiment has been presented for purposes of illustration. It is not intended to be exhaustive or to limit the application to the precise forms disclosed, and obviously many modifications and variations are possible in light of the above teaching. It is understood that the disclosure may be practiced in ways other than as specifically set forth herein without departing from the scope of the disclosure. It is intended that the scope of the application be defined by the claims appended hereto."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9B"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 18"}]},"DETDESC":[{},{}]}
