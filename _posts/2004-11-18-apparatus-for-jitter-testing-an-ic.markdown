---
title: Apparatus for jitter testing an IC
abstract: An integrated circuit tester channel includes an integrated circuit (IC) for adding a programmably controlled amount of jitter to a digital test signal to produce a DUT input signal having a precisely controlled jitter pattern. The IC also measures periods between selected edges of the same or different ones of the DUT output signal, the DUT input signal, and a reference clock signal. Additionally, when the DUT input and output signals convey repetitive patterns, the IC can measure the voltage of the DUT input out output signal as selected points within the pattern by comparing it to an adjustable reference voltage. Processing circuits external to the IC program the IC to provide a specified amount of jitter to the test signal, control the measurements carried out by the measurement circuit, and process measurement data to determine the amount of jitter and other characteristics of the DUT output signal, and to calibrate the jitter in the DUT input signal.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07627790&OS=07627790&RS=07627790
owner: Credence Systems Corporation
number: 07627790
owner_city: Milpitas
owner_country: US
publication_date: 20041118
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application is a continuation-in-part of U.S. patent application Ser. No. 10\/646,957 filed Aug. 21, 2003 now U.S. Pat. No. 7,171,601.","This application is also a continuation-in-part of U.S. patent application Ser. No. 10\/954,572 filed Sep. 30, 2004.","1. Field of the Invention","The invention relates in general to an apparatus for testing an integrated circuit (IC) and in particular to an apparatus for testing the ability of an IC to accommodate jittery input signals and for measuring the amount of jitter in its output signals.","2. Description of Related Art","Digital integrated circuits (ICs) communicate through digital data signals, and when a transmitting IC transmits a digital data signal to a receiving IC, it typically synchronizes state changes in the digital data signal to leading (or trailing) edges of a periodic clock signal so that they occur at predictable times. To produce a data sequence represented by successive states of the digital signal, the receiving IC must digitize the data signal with an appropriate sampling phase and frequency. In some communication systems, a transmitter sending a digital data signal to a receiver also sends a clock signal to the receiver for controlling the timing with which the receiver samples the data signal. In other communication systems the receiver may include a clock recovery system for generating the sampling clock signal locally, using a feedback control system to adjust the phase and frequency of the sampling clock signal based on an analysis of data the receiver acquires by observing the data signal.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 1","FIG. 1"],"b":["10","11","12","14","15"]},"Variation in signal edge timing (jitter) can be random or deterministic. Random jitter arises from random noise in the transmitting IC or in the signal path conveying the signal to the receiving IC. In a system where the transmitting IC sends a clock signal to the receiving IC, noise in the clock signal path can also cause the receiving IC to perceive the data signal to be jittery relative to clock signal edges. In a receiving IC employing a clock recovery system to generate a local clock signal, feedback errors or noise in the clock recovery system can cause jitter in the clock signal, thereby causing the data signal to appear jittery relative to clock signal edges. Random jitter renders the timing of each data signal edge somewhat non-deterministic in that is not possible for the receiving IC to predict the amount of timing error in any individual signal edge arising from random noise.","Deterministic jitter arises mainly from inherent characteristics of the transmitting and receiving ICs and the signal path interconnecting them. For example any transmission line will delay signal edges by an amount that is a function of the path's impedance characteristics and the frequency of the signal. When a digital data signal conveys a bit pattern such as {01010101 . . . }, it will act as a relatively higher frequency signal than when it conveys a bit pattern such as {00000111110000011111 . . . }. Thus the amount by which a signal path delays an edge of a digital signal at any given moment depends on the particular data pattern the signal currently conveys. This \u201cpattern-dependant\u201d jitter is deterministic in that timing error in each data signal edge due to pattern-dependant jitter for a given pattern is predictable based on the nature of the pattern and on characteristics of the hardware implementing the signal path. Deterministic jitter that is not pattern-dependant can arise, for example, from periodic noise that is coherent with the clock signal the transmitting IC uses to time edges.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 2","FIG. 2","FIG. 2"]},"Since a receiving IC periodically samples a digital signal between transitions to determine the data sequence it represents, it can tolerate some amount of jitter, but when a digital signal is too jittery, the receiving IC not be able to correctly determine each successive state of the digital signal from the samples it acquires because it will sometimes sample the signal to soon or too late. Digital system specifications therefore require that the amount of jitter in a digital signal remain within acceptable limits. One measure of jitter, called \u201cpeak-to-peak jitter\u201d corresponds to the width of the shaded area of  at the nominal crossover point , representing a difference in relative timing of earliest and latest arriving signal edges. System specifications typically require peak-to-peak jitter to remain within a predetermined limit.","A receiving IC can also tolerate some amount of noise-induced variation in the voltage of its signal logic levels, but when the variation becomes too large, it will not be able to correctly determine the logic level represented by each sample because the signal may sometimes may fail to be on the correct side of the midpoint voltage at the moment the receiver samples it. Digital system specifications therefore require that the amount of voltage variation in a digital signal remain within acceptable limits. For example, some digital system specifications require that the difference between the lowest detected high logic level and the highest detected low logic level (the \u201cvertical eye opening\u201d shown in ) to be no smaller than some specified minimum.","A typical IC tester includes a set of tester channels, each connected to a separate pin of an IC device under test (DUT). An IC test is typically organized into a succession of test cycles, and at any time during a test cycle, each tester channel can either send an input signal to a DUT pin or sample a DUT output signal appearing at the pin to determine whether it is of an expected state. Each tester channel includes a memory containing a sequence of data words (vectors), each corresponding to a separate test cycle and indicating what the tester channel is to do during the test cycle and when during the test cycle it is to do it. For example a vector may tell the tester channel to change the state of a DUT input signal at some time during the test cycle, or may tell the tester channel to sample a DUT output signal to determine whether it is of a particular logic level.","To test a DUT's tolerance for a jittery input signal, a channel could be programmed to produce a DUT input signal having a desired jitter pattern. However while a tester channel can accurately adjust timing of DUT input signal edges, in many applications a typical tester channel cannot control the timing of edges of a DUT input signal with sufficient resolution to produce the desired jitter pattern. What is needed is an IC tester channel that can produce a jittery test signal exhibiting a very accurately controlled jitter pattern.","The invention relates to an apparatus for determining whether DUT output signals of an integrated circuit (IC) device under test (DUT) behave as expected when one or more of the DUT's input signals exhibit a specified jitter pattern, and for measuring the amount of jitter in DUT output signals.","An IC tester channel in accordance with the invention includes an IC implementing a transmitter circuit for adding a programmably controlled amount of jitter to a digital test signal thereby to produce a DUT input signal having a precisely controlled jitter pattern. The IC also implements a measurement circuit for measuring times between selected edges of the DUT output signal, the DUT input signal and other signals, and a digitizer circuit for comparing either the DUT input or output signal voltage to an adjustable reference voltage to produce a data signal indicating the magnitude of the DUT output signal at a selected times.","Processing circuits that may be external to the IC supply the digital test signal to the IC, program the IC to provide a specified amount of jitter to the test signal, control the measurement circuit, adjust the reference voltage, and process the measurement data it produces to determine the amount of jitter and other characteristics of the DUT output signal. For calibration purposes, the processing circuits also determine the amount of jitter in the DUT input signal based on the data signal the measurement circuit produces. The processing circuit also processes the data signal produced by the receiver circuit to determine whether the DUT output signal behaves as expected.","The receiver circuit, the transmitter circuit and the measurement circuit are all implemented on the same IC in order to keep signal paths interconnecting them to one another and to the DUT short, thereby minimizing delays and noise in those signal paths. Since the communications between the IC and the processing circuit are not as sensitive to noise and delays, the processing circuit can be external to the IC.","The claims appended to this specification particularly point out and distinctly claim the subject matter of the invention. However those skilled in the art will best understand both the organization and method of operation of what the applicant(s) consider to be the best mode(s) of practicing the invention, together with further advantages and objects of the invention, by reading the remaining portions of the specification in view of the accompanying drawing(s) wherein like reference characters refer to like elements.","The invention relates in general to automated test equipment, and in particular to a system for testing an integrated circuit for its tolerance to jitter in its input signals and for measuring the amount of jitter in its output signals. While the specification describes in detail an exemplary embodiment of the invention considered a best mode of practicing the invention, those of skill in the art will appreciate that other modes of practicing the invention are possible.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 3","b":["22","26","24","31","28","30","29","26","24","24"]},"Tester  also includes one or more measurement channels  in accordance with the invention, each capable of performing various measurements on a digital DUT output signal enabling host computer  to determine, for example, the amount of random and deterministic jitter in the DUT output signal, the amount of variation in its logic levels, its period or frequency, its rise and fall times, and its skew relative to a reference signal. Each measurement channel  can also transmit a high speed digital input signal to DUT , and can add a controlled amount of jitter to the DUT input signal to test the DUT's jitter tolerance. Channels  are particularly suited for measuring characteristics of high frequency digital signals such as serialization\/deserialization (SERDES) signals where noise and jitter can be particularly problematic.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 4","b":["32","47","50","51","47","33","34","48","49","49","33","34","48","50","53","47","50"]},"IC  communicates with the DUT via a DUT output signal VR and a DUT input signal VT conveyed by signal paths . Host computer  can program the conventional receiver circuit  with programming data supplied via bus , FPGA  and serial interface  to receive a DUT output signal VR, to determine whether the data sequence it represents exhibits an expected bit pattern, and to report the results back to host computer . The nature of receiver circuit  depends on the nature of DUT output signal VR. When the VR signal is a high-speed serial signal such as a SERDES signal, receiver circuit  may include a conventional clock recovery system for deriving the receiver's sampling clock from VR and circuits for de-serializing and decoding the data sequence. Alternatively receiver circuit  may be clocked by a clock signal (CLOCK) supplied by the DUT or by the tester's master clock MCLK.","IC  also implements a transmitter circuit  for transmitting a DUT input signal VT to a terminal of DUT . During a test in which transmitter circuit  is to supply an input signal to DUT , FPGA  supplies a digital test signal D via serial interface circuit  and a multiplexer  to an input of a tri-state driver , and supplies a tri-state control signal Z to driver . During portions of a test in which the DUT input signal VT is to exhibit a controlled amount of jitter, bus interface circuit  signals multiplexer  to select the output of a jitter generator  as input to driver . Jitter generator  variably delays test signal D to add an amount of jitter to the DUT input signal VT. Before the start of a jitter test, host computer  of  writes control data into jitter generator  via FPGA  and serial interface  defining characteristics of the jitter to be added to test signal D to produce DUT input signal VT.","Channel  also includes a measurement circuit  capable of measuring various characteristics of DUT output signal VR and generating data describing those signal characteristics. FPGA  processes that data and provides an interface between Measurement circuit  and bus . Channel  also includes a random access memory (RAM)  that FPGA  uses for storing data. Receiver circuit , transmitter circuit  and measurement circuit  are implemented on the same integrated circuit  which includes a high speed serial interface  providing a data communication link between FPGA  and the other devices implemented within IC .","Measurement circuit  has two basic functions, digitizing and time measurement. When acting as a digitizer, measurement circuit  periodically samples the DUT output signal VR several times in succession and generates sample data in which each bit indicates whether a corresponding sample of the VR signal is above or below a threshold level. When performing time measurements, measurement circuit  measures an interval between two selected signal edges and produces data indicating the results of the interval measurement. The two signal edges may be edges of the same or differing ones of the VR, JITTER, or ARM signals of . FPGA  responds to commands and control data from host computer  of  by configuring measurement circuit  to carry out one or more digitizing or time measurement operations. As discussed in more detail below, FPGA  can also process the data output of measurement circuit  to generate results data depicting various characteristics of DUT output signal VR. Host computer  can then access the results data via bus .","Measurement Circuit",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 5","FIG. 4"],"b":["48","48","61","2","48","66","1","2","1","2"]},"A trigger circuit  generates edges of a trigger signal TRIG in response to selected edges of another signal CLKSEQ. A multiplexer  may select either the TRIG signal or an ARM signal supplied by FPGA  as the source of the ARM signal input to TMU , or may disable TMU  by selecting a hard-wired  as the ARM signal input to TMU .","A multiplexer  selects sources of the CLK, CLK and CLKSEQ signals from among a set of signals V, V, JITTER and ARM. A comparator  drives V high whenever the DUT output signal VR rises above a voltage VH provided by a digital-to-analog converter (DAC)  and drives V high when VR falls below a voltage VL generated by a DAC . The JITTER signal is the signal appearing at the output of jitter generator  of . FPGA  supplies the ARM signal.","FPGA  of  writes control data into a set of control registers  via serial interface  for controlling multiplexers  and , for controlling the output voltages VH and VL of DACs  and , and for controlling various operating modes of trigger circuit  and TMU . Digitizer","Digitizer  includes a synchronizing circuit  for responding to an edge of the TRIG signal output of trigger circuit  by triggering a triggered oscillator  on the next edge of the CLK signal. Control data in registers  controls the phase and frequency of the output OSC of oscillator . The OSC clocks a sampling circuit  which acquires a sample of the CLK signal on the first 12 leading edges of the OSC signal and stores a bit of its 12-bit output word SDATA resenting the sampled state of the CLK signal. Sampling circuit  transmits a FINISHED signal to FPGA  to indicate when it has acquired all 12 samples. A RESET signal from FPGA  resets synchronizer , oscillator  and sampling circuit  to enable them to acquire another set of 12 samples in response to a next TRIG signal edge.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 6","FIG. 5"],"b":["61","50","60","50","60","62","63","3","56","64","2"]},"Time Measurement Unit",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 7","FIG. 5","FIG. 8","FIG. 7","FIG. 5"],"b":["66","1","2","65","66","68","80","81","1","82","1","83","2","84","2","50","1","2","82","1","84","2","68","2","50","82","84"]},"T and T signal edges  and  respectively trigger a pair of triggered oscillators  and  producing output signals OSC and OSC having slightly differing periods. A pair of multiplexers  and  controlled by data in registers  of  delivers OSC and OSC to clock inputs of a pair of counters  and . Counters  and  count cycles of the OSC and OSC signals. A coincidence detector  sets the FINISHED signal true at time  when the leading edges  and  of the OSC and OSC signals coincide. The FINISHED signal disables counters  and  so that they halt their counts and signals FPGA  of  to acquire and process the count data CNT and CNT. After acquiring the CNT and CNT data, FPGA  pulses the RESET signal to reset the T and T outputs of trigger logic circuit  so that oscillators  and  stop generating OSC and OSC. The RESET signal also resets coincidence detector  so that it begins looking for another coincidence in OSC and OSC, and resets counters  and . The time delay (DELAY) between CLK signal edge  and CLK edge  can be determined from the CNT data alone. See U.S. Pat. No. 6,295,315 issued Sep. 25, 2001 to Frisch et al, incorporated herein by reference, for a description of a related TMU.","Trigger Circuit",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 9","FIG. 5","FIG. 4","FIG. 5"],"b":["60","60","2","50","60","28","60","1","2","61","2","66"]},"When the CLKSEQ signal conveys a repetitive pattern, trigger circuit  can produce (at most) a single TRIG signal pulse during each repetition of the pattern when enabled by the START signal from FPGA . In a repetitive triggering mode, trigger circuit  always generates a TRIG signal pulse in response to the same particular edge of the repetitive pattern. Before generating the START signal FPGA  transmits a SYNC signal to trigger circuit  indicating when a particular edge of the CLKSEQ signal pattern has arrived. When the CLKSEQ signal pattern includes a known number N of edges, with the value of N being supplied by control registers  of , then the SYNC signal enables trigger circuit  to thereafter keep track of the current position of the CLKSEQ signal within the representative pattern by counting edges of the CLKSEQ signal. With the START signal from FPGA  asserted, then after receiving the SYNC signal, trigger circuit  generates a first TRIG signal edge on the Kth rising edge of the CLKSEQ pattern following assertion of the SYNC signal, where K is input data supplied by control registers  of . If the repetitive pattern has N edges, numbered from N\u22121to 0 starting with the first edge following the SYNC signal edge and ending with the Nth edge, trigger circuit  generates a first TRIG edge on the first occurrence of the Kth edge following the SYNC signal. Control data (K) stored in registers  of  sets the value of K.","In an \u201cequivalent time\u201d triggering mode, trigger circuit  generates each edge of successive set of N TRIG signal edges in response to a different edge of the CLKSEQ pattern, with the edges being selected in sequential order starting with the edge selected by K. Trigger circuit  generates each of the next N\u22121TRIG signal edges during successive repetitions of the pattern in the CLKSEQ signal on an occurrence of a separate one of the other N\u22121edges","In a \u201crepetitive\u201d triggering mode, trigger circuit  generates each edge of successive set of N TRIG signal edges in response to a separate occurrence of the same selected edge within the repetitive CLKSEQ pattern.","Trigger circuit  includes a counter  for responding to the SYNC edge by generating a data sequence CURRENT_EDGE by counting down from N\u22121to 0 in response to successive leading edges of the CLKSEQ signal. Counter  restarts its count down at N\u22121each time its count reaches 0. Input control data supplies the value of N where N is the number of leading edges in the repetitive pattern in the CLKSEQ signal. The pattern should always start with a rising edge and end with a falling edge. Thus the CURRENT_EDGE data indicates a number of the current edge of the CLKSEQ signal within the repetitive pattern. A peak-to-peak jitter operates in either of two modes selected by MODE control data from data processing unit  of .","In the repetitive triggering mode, counter  sets output data NEXT_TRIG equal to K when FPGA  toggles an INIT bit in control registers  of  and thereafter keeps NEXT_TRIG at that value. This causes trigger circuit  to produce all TRIG signal pulses in response to the same Kth edge of the repetitive CLKSEQ pattern. In the equivalent time triggering mode, pattern generator initially sets its NEXT_TRIG output data equal to K but changes its value in response to the next CLKSEQ edge each time the TRIG signal is asserted. Thus whenever CURRENT_EDGE matches NEXT_TRIG, comparator  and AND gate  assert the TRIG signal, provided the START signal is true, and the TRIG signal tells counter  to select another value for NEXT_EDGE in response to the next CLKSEQ edge. After trigger circuit  has generated N TRIG signal edges in the equivalent time triggering mode, counter  will have set NEXT_EDGE to every value between 0 and N\u22121with values occurring in consecutive order beginning with STARTCNT and will then continue to repeat the same TRIG signal edge pattern as long as FPGA  continues to assert the START signal.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 10","FIG. 4","FIG. 4","FIG. 4","FIG. 9"],"b":["60","50","56","56","91","91","50","93","90","92","93","91","50","66","50","66","92","93"]},"When the MODE bit sets trigger circuit  for the repetitive mode of operation, peak-to-peak jitter sets NEXT_TRIG to the value of K and keeps it there so that NEXT_TRIG always has the same value. Thus when START is asserted, trigger circuit  always produces a TRIG signal edge when CURRENT_EDGE matches the value of K. Trigger circuit  therefore always produces TRIG signal edges in response to the same edge of the repetitive CLKSEQ signal pattern.","Operating Modes","Host computer  writes control data into registers  to configure measurement circuit  of  to operate in any of several operating modes.","In a \u201cScope\u201d operating mode digitizer  acquires samples of the CLK signal in response to the TRIG signal to produce data (SDATA) that can be used, for example, to control waveform displays similar to those produced by a sampling oscilloscope.","In a \u201cFrequency\u201d operating mode TMU  measures the frequency or period of a signal and returns the results as CNT data.","In a \u201cVernier\u201d operating mode, TMU  measures a period between edges of the CLK and CLK signals in response to a single TRIG signal edge.","In a \u201cSequencing\u201d operating mode TMU  performs a series of period measurements in response to a succession of TRIG signal edges.","In a \u201cCalibrate\u201d operating mode, TMU  measures periods of its internal oscillator output signals OSC and OSC for purposes of calibrating oscillators  and  of ","In a \u201cCalibrate\u201d operating mode, TMU  measures a period of OSC for purposes of calibrating oscillator  of .","High Level Commands","FPGA  responds to the following high level commands from host computer : PERIOD, READCNTR, SYNCHRONIZE, SINGLEMEASURE, HISTOGRAM, LOGGING, and BINNING.","The PERIOD command tells FPGA  to assert the ARM signal for a known period of time and to signal TMU  to count the number of cycles of the CLK and CLK signals occurring between the rising and falling edges of the ARM signal., Since FPGA  asserts the ARM signal for a predetermined number of cycles of the FPGA's master clock (MCLK), each count (CNT and CNAT) reaches a value during that time that is proportional to the frequency of the signal whose edges are being counted. In particular, the signal frequency is equal to the product of the MCLK signal frequency and the count, divided by the number of MCLK cycles FPGA  asserts the ARM signal. The PERIOD command therefore enables the host computer to determine the frequency (or period) of each of the CLK and CLK signals.","With measurement circuit  configured for Calibrate or Calibrate operating modes, those signals could be the output signals of any two of the three adjustable frequency oscillators (, , ) within measurement circuit  used as timing references during digitizing and time measurement operations. The resulting data enables host computer  to calibrate the operating frequencies of those oscillators.","With measurement circuit  configured for the Frequency operating mode, the PERIOD command enables host computer  to determine the period or frequency of the sources of signals CLK and CK supplied by a multiplexer  controlled by control data stored in control registers . Multiplexer  selects the sources of CLK and CLK signal from among a JITTER signal, an ARM signal and a pair of signals V and V produced by a comparator . When the host computer configures jitter generator  of  to generate a periodic JITTER signal, the host computer can use the PERIOD command to have TMU  measure the period of the JITTER signal. The resulting data TMU  generates enables host computer  to calibrate jitter generator . The V and V signals are derived from the DUT output signal VR. Signal V is true when VR is higher in voltage than a signal VH produced by a digital-to-analog converter (DAC)  controlled by data stored in registers . Signal V is true when VR is lower in voltage than a signal VH produced by a digital-to-analog converter (DAC)  controlled by data stored in registers . Host computer  could use a PERIOD command to have TMU  measure the period (and therefore the frequency) of DUT output signal VR when it is a periodic signal by measuring the period between edges of the V or V signal. FPGA  generates the ARM signal with a period that is a multiple of the period of the MCLK signal. The host computer can use the PERIOD command to measure the period of the ARM signal.","The READCNTR command tells FPGA  to read one of the data outputs (CNT) of TMU , when CNT conveys the count TMU  produces in response to a PERIOD command.","The SYNCHRONIZE command tells FPGA  to assert a synchronization signal (SYNC) on occurrence of a particular point in a repetitive pattern appearing the CLKSEQ signal. As discussed above, the SYNC signal synchronizes the timing of TRIG signal edges trigger circuit  to an identifiable point in the CLKSEQ signal pattern. Host computer  sends a SYNCHRONIZE command to FPGA  before sending it a command requiring the use of trigger circuit ","The SINGLEMEASURE command tells FPGA  to use TMU  to measure the time difference between leading edges of the CLK and CLK signals. For example, it is possible for TMU  to measure the skew of DUT output signal VR by measuring the period between an edge of the VR signal and an edge of the ARM signal. Host computer  may issue a SINGLEMEASURE command with measurement circuit  either in the Vernier, Sequencing or Scope operating mode.","In the vernier mode, the SINGLEMEASURE command tells FPGA  to transmit an ARM signal edge to a multiplexer  to supply the ARM signal input to TMU . The ARM signal edge tells TMU  to carry out the measurement relative to the next two leading edges of the CLK and CLK signal. The output data CNT and CNT of TMU  indicates the measured period between those two CLK and CLK signal edges. A CLK_FIRST bit TMU  provides indicates whether the CLK edge occurred before the CLK edge. TMU  sets the FINISHED bit to indicate when the measurement is complete and the CNT and CNT data is ready","A sequencing mode SINGLEMEASURE command is similar to a vernier mode SINGLEMEASURE command except that trigger circuit  supplies a trigger signal (TRIG) for controlling the ARM signal input to TMU . Trigger circuit  asserts the TRIG signal repeatedly, synchronizing it to selected edges of the CLOCKSEQ signal. TMU  may make more than one measurement in response to a sequencing mode SINGLEMEASURE command. Host computer  supplies control data to FPGA  indicating the number of measurement repetitions to be performed. For example, when the CLKSEQ signal is derived from a DUT output signal VR conveying a repetitive pattern, FPGA  can set a MODE control bit in registers  to tell trigger circuit  to operate in a repetitive triggering mode where it asserts the TRIG signal repeatedly at the same point in the pattern so that TMU  repeatedly measures the period between the same two edges within the pattern. Before supplying a sequencing mode SINGLEMEASURE command to FPGA , host computer  sends it a SYNCHRONIZE command and FPGA  responds by supplying a SYNC signal to synchronize the TRIG signal output of trigger circuit  to the pattern before signaling trigger circuit  via a START signal to begin generating TRIG signals in response to the SINGLEMEASURE command. FPGA  can process the data derived from these repeated sequencing mode period measurements, for example, to determine the amount of random jitter in DUT output signal VR.","Alternatively FPGA  can set the MODE bit to configure trigger circuit  to operate in an equivalent time triggering mode where it asserts the TRIG signal at different points during successive repetitions of the VR signal pattern so that TMU  measures the period between a different pair of edges within the repetitive pattern following each TRIG signal assertion. As discussed below, FPGA  can process period data collected in this fashion quantify the deterministic or pattern-dependant jitter in DUT output signal VR.","A scope mode SINGLEMEASURE command tells FPGA  to configure MEASUREMENT CIRCUIT  to respond to the TRIG signal produced by trigger circuit  by storing 12 successive samples of the CLK signal in a shift register  and to supply a 12-bit SDATA word resenting the 12 sampled states of the CLK to FPGA . Since TMU  is not used in this mode, FPGA  initially sets multiplexer  to supply a hard-wired 0 to the ARM input of TMU  so that the TRIG signal does not trigger a TMU measurement operation. Instead, a synchronizing circuit  responds to the TRIG signal edge by triggering an oscillator  on the next edge of the CLK signal. Following a delay controlled by data in registers , oscillator  begins generating a periodic output signal OSC for clocking shift register  so that it samples CLK and stores the resulting 12-bit SDATA. The frequency and triggering delay of triggered oscillator  are determined by control data in registers  supplied by FPGA  in response to data supplied by host computer  in connection with the SINGLEMEASURE command. Shift register  sets the FINISHED bit true when it has captured the  samples to tell FPGA  that sample data is ready. FPGA  then generates a REST signal to stop oscillator , to reset synchronizing circuit  and to clear shift register .","The HISTOGRAM command tells FPGA  to acquire a set of period measurements from TMU  and to store data representing a histogram of that data in RAM  so that host computer  can access it. The histogram is in the form of a data sequence in which each element of the sequence corresponds to a different range of periods and indicates a number of period measurements falling within that range. Host computer  can use the histogram data, for example, to calculate the non-deterministic jitter in a signal or to determine the average period between edges of a periodic signal more accurately than with only a single period measurement.","The LOGGING command tells FPGA  to perform up to  FPGA SINGLEMEASUREMENT operations with the same setting and to save the least significant 12 bits of each measurement result in RAM .","A BINNING command is specifically designed for use in testing a SERDES DUT output signal VR. Digital signals, including SERDES signals, are typically produced at some clock period P such that the nominal period between successive transitions of the VR signal is some multiple of P, although jitter in the signal can cause actual periods between edges to vary somewhat. During the test carried out in response to a BINNING command, the DUT produces a particular repetitive pattern in its output signal wherein the nominal period between successive edges ranges from P to P. The BINNING command tells FPGA  to configure TMU  to carry out a large number of period measurements with trigger circuit  set in its sequencing mode of operation wherein it triggers period measurements at varying times during the pattern so that TMU  measures the period between each pair of successive edges within the repetitive pattern several times. FPGA  assigns each period measurement data value to one of a set of five \u201cbins\u201d, each corresponding to a separate one of the five possible nominal edge-to-edges delays from P to P. Due to signal jitter, each measurement may vary somewhat from a multiple of P, but FPGA  assigns each measurement to the bin corresponding to the delay nearest the measured period. FPGA  then stores data in RAM  indicating the longest and shortest delay assigned to each bin. The resulting data indicates the pattern dependant jitter in the DUT output signal VR.","FPGA","FPGA  of  includes logic programmed for carrying out several functions, and though in the preferred embodiment of the invention an FPGA implements those functions, those of skill in the art will appreciate the such functions could be implemented by other types of programmable logic circuits or by one or more application specific ICs (ASICs).","FPGA  provides an interface between bus  and IC  enabling host computer  of  to supply control and programming data to transmitter circuit , receiver circuit  and measurement circuit  for setting up those circuits to carry out various tests. As discussed above, FPGA  also acts as a pattern generator for supplying input signals to transmitter circuit  and for receiving, storing and\/or processing output data produced by receiver  and measurement circuit .",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 11","FIG. 4","FIG. 11","FIG. 3","FIG. 4","FIG. 4","FIG. 5","FIG. 5","FIG. 4","FIG. 4"],"b":["50","50","100","101","102","28","100","51","56","50","104","28","100","1","2","2","1","48","50","50","106","108","110","48","111","34","2","104","28","51","113","53","49"]},"Min-Max Unit",{"@attributes":{"id":"p-0088","num":"0087"},"figref":["FIG. 12","FIG. 11","FIG. 4","FIG. 5","FIG. 5"],"b":["106","104","106","28","101","28","56","53","54","58","1","2","1","2","1","66","60","66","1","106","104","1","100"]},{"@attributes":{"id":"p-0089","num":"0088"},"figref":["FIG. 13","FIG. 5"],"b":["1","11","1","66","1"],"br":[{},{},{},{},{},{}],"in-line-formulae":[{},{},{},{},{},{},{},{},{},{}]},"State machine  () uses min-max circuit  to sort the CNT data generated by TMU  into five different bins corresponding five different delay ranges. For the example pattern of , min-max circuit  could establish the following delay ranges:","Range 1: less than 1.5D","Range 2: 1.5D to 2.5D","Range 3: 2.5D to 3.5D","Range 4: 3.5D to 4.5D","Range 5: greater than 4.5D","Given a moderate amount of jitter, we would expect a delay between successive edges that is nominally either D, 2D, 3D, 4D or 5D to fall either within Range 1, 2, 3, 4 or , respectively. Min-max circuit  monitors the CNT output sequence of TMU  to determine the range in which each CNT value falls, and keeps track of the highest and lowest observed values within each range. When the CNT sequence represents several measurements of the interval between each adjacent pair of rising and falling edges within the repetitive pattern, then the largest difference between highest and lowest observed values within any of the five ranges is a measure of the peak-to-peak jitter in DUT output signal VR.","Min-max circuit  of  includes a multiplexer  and a comparator . The CNT output of TMU  of  provides a data input to each of a set ten of registers  of  and state machine  of  can write enable any of those ten registers. Multiplexer , controlled by data from state machine , can supply the contents of any one of  registers  as input to comparator . Comparator  compares CNT to the output of multiplexer  to provide a signal COMP indicating whether CNT is less than the output of multiplexer .","Four of registers  store data (BORDER12, BORDER23, BORDER34 and BORDER35) provided by host computer  indicating the borders between the five ranges of CNT data values. For the example pattern of , host computer  would select the following values:","BORDER12=1.5D\u2032","BORDER23=2.5D\u2032","BORDER34=3.5D\u2032","BORDER45=4.5D\u2032","D\u2032 is the value of CNT representing the nominal unit delay D. Another five of registers  store data (MINCOUNT1 to MINCOUNT5) indicating the smallest observed values of CNT for each of the five ranges. The last five of register  store data (MAXCOUNT1 to MAXCOUNT5) indicating the largest observed values of CNT for each of the five ranges.","To initiate a peak-to-peak jitter measurement, the host computer  first configures trigger circuit  of  to operate in the equivalent time triggering mode, sets multiplexer  () to select V and V as the CLK and CLK signals and to select V as the CLKSEQ signal, and appropriately sets the outputs VH and VL of DACs  and . Host computer  also writes the appropriate values of the BORDER** data into registers  to establish the ranges of interest, and writes the nominal delay for each range as initial MINCOUNT* and MAXCOUNT* data in registers . Thus for the example pattern of  the host computer would initialize the registers as follows:","BORDER=1.5D\u2032","BORDER=2.5D\u2032","BORDER=3.5D\u2032","BORDER=4.5D\u2032","MINCOUNT1=CNT1MAX","MINCOUNT2=CNT1MAX","MINCOUNT3=CNT1MAX","MINCOUNT4=CNT1MAX","MINCOUNT5=CNT1MAX","MAXCOUNT1=0","MAXCOUNT2=0","MAXCOUNT3=0","MAXCOUNT4=0","MAXCOUNT5=0","CNT1MAX is the maximum possible value of CNT.","Host computer  also writes data to register  () indicating the number of samples to be acquired. Host computer  next writes a SYNCHRONIZE command into register  () telling state machine  to transmit a SYNC signal to trigger circuit  in response to the next occurrence of the MATCH signal. Thereafter host computer  writes a BINNING command into register  causing state machine  to begin BINNING operation.",{"@attributes":{"id":"p-0120","num":"0119"},"figref":["FIG. 14","FIG. 11","FIG. 5","FIG. 11"],"b":["104","104","60","124","66","104","126","1","66","105","1","2","1","104","112","23","114","114","1","23","130","114","23","132","1","104","112","12","114","134","114","1","104","1","138","140","1","132","104","112","34","114","142","104","1","146","148","114","45","114","148","114","1","152","104","1","154"]},"After determining the range N in which CNT lies at one of steps , , ,  or , state machine  sets multiplexer  to deliver MINCOUNT(N) to comparator  so that COMP will indicate whether the current value of CNT is lower than the current value of MINCOUNT(N). If so, state machine writes CNT into the registers  storing MINCOUNT(N) (step ). At step , state machine  sets multiplexer  to select MAXCOUNT(N) so that COMP will indicate whether the current value of CNT is lower than the current value of MAXCOUNT(N) (step ). If COMP is false, state machine  writes CNT into the registers  MAXCOUNT(N) (step ). State machine  keeps track of the number of interval measurements it has processed, and if has not processed the last measurement data (step ), it resets the FINISHED bit in register  () and returns to step  to start a next interval measurement. If all interval measurements have been processed, state machine  ends the measurement process following step .","Histogram Unit",{"@attributes":{"id":"p-0122","num":"0121"},"figref":["FIG. 15","FIG. 11","FIG. 11","FIG. 4"],"b":["108","104","108","104","66","51","28","256","28"]},"Before issuing a HISTOGRAM command, host computer  sets all the data values stored in the first  address of RAM  to a 0 and switches multiplexer  () to select V and V as the sources of CLK, CLK and CLKSEQ and configures trigger circuit  to operate in the repetitive triggering mode. In that mode trigger circuit  generates a TRIG signal in response to the same particular edge during each repetition of the repetitive pattern appearing in the CLKSEQ signal. The CLK and CLK signals will also convey repetitive patterns, and TMU  will respond to each TRIG signal edge by measuring the interval between the same two CLK and CLK edges of their repetitive patterns. The amount of variation in successive interval measurements indicates the amount of random jitter in DUT output signal VR. The combination of values CNT and CNT TMU  generates after each trigger signal represents the measured value of the interval. Host computer  also writes the number of measurements to be made into register . After issuing a SYNCHRONIZE command causing state machine  to send a SYNC signal to trigger circuit  () on the next MATCH signal edge, host computer  issues the HISTOGRAM command. State machine  then initiates the first measurement by sending a START signal to trigger circuit . When valid CNT and CNT data is available, an encoder  () encodes the CNT and CNT data into an 8-bit RAM address representing the period indicated by the CNT and CNT data with 8-bit resolution. RAM  reads out a count stored at that address to an increment circuit  which increments the count and supplies it to the data input terminals of RAM . State machine  then initiates a write operation overwriting the count at that address with the incremented count. When state machine  repeats this operation for every period measurement, the resulting data in the first  address of RAM  will be a histogram of the period measurements.",{"@attributes":{"id":"p-0124","num":"0123"},"figref":"FIG. 16","b":["122","108"]},"Data Acquisition Unit",{"@attributes":{"id":"p-0125","num":"0124"},"figref":["FIG. 17","FIG. 11"],"b":["110","104","110","51","1","110","180","04","1","2","51","182","51","104","182","104","51"]},"Jitter Generator",{"@attributes":{"id":"p-0126","num":"0125"},"figref":["FIG. 18","FIG. 4"],"b":["46","42","44"]},"Jitter generator  of  includes a multiplexer , a programmable delay circuit , and a programmable pattern generator . In the jitter generator's normal operating mode, multiplexer  delivers the D signal to delay circuit  which delays the D signal by varying amounts of time to produce a jittery JITTER signal. Clocked by the MCLK signal, pattern generator  supplies a sequence of digital DELAY words to delay circuit , and each successive DELAY word controls its delay. With pattern generator  programmed to produce a suitable DELAY data sequence, jitter generator  can produce a JITTER signal having any of a wide variety of jitter frequencies and amplitudes.","Programmable delay circuit  preferably includes a cascaded set of inverting buffers B-BN and a bank of capacitive circuit elements  providing loads of adjustable capacitance at the outputs of multiplexer  and buffers B-BN. Each successive DELAY data word controls the capacitance of capacitive circuit elements , and by increasing or decreasing their capacitance, a DELAY data word can increase or decrease the delay of delay circuit . Thus, the pattern of DELAY data words provided by pattern generator  determines the nature of the jitter in the JITTER signal. To program jitter generator  to produce a desired jitter pattern in the JITTER signal, host computer  programs pattern generator  via input programming data to produce an appropriate DELAY word sequence.","Variable Capacitance","Various ways of implementing capacitive circuit elements  of  are possible. For example,  depicts the variable capacitors as an array of gates L,-LM,N , such as buffers or other types of gates, having inputs connected in parallel with the outputs of multiplexer  and buffers B-BN. Bits of each successive DELAY word control transistor switches  for selectively connecting each gate to a bias supply (VBIAS). When switches  connect any row of gates L,-LM,N to bias supply VBIAS, the capacitive load they provide at the outputs of multiplexer  and buffers B-BN increases due to the well-known Miller effect.","Alternatively, as illustrated in , a set of switches  controlled by bits of each DELAY word can connect inputs of selected ones of load gates L,-LM,N to outputs of multiplexer  and buffers B-BN. Each load gate L,-LM,N is continuously connected to its bias and power supply sources. All load gates L,-LM,N of either  or  may be identical, or they may be formed of transistors of varying size so that the load gates provide substantially differing amounts of load capacitance. For example load gates L,-LM,N can be sized so that gates on each (i+1)row of the array provide twice the capacitance as gates on the irow of the array. Using non-uniform gates increases the delay circuit's delay range and resolution.","In the programmable delay circuits of , the capacitance at the outputs of multiplexer  and every buffer B-BN is the same at any given time, and when the DELAY data value changes, the capacitance at the multiplexer buffer outputs change by the same amount. The resulting change in D-to-JITTER signal delay is therefore every distributed over the entire length of delay circuit  so that none of the outputs of multiplexer  or buffers B-BN, including the JITTER signal, exhibit a large abrupt phase change in response to a change in DELAY data. Distributing the change in signal delay allows changes in delay DATA value to be asynchronous with input signal D without causing large glitches in the JITTER signal.","In alternative embodiments of the invention, the jitter generator may provide other relationships between the DELAY data value and capacitance at the output of multiplexer  and buffers B-BN. For example, for very high-resolution delay control, the DELAY data may independently control the capacitance at each buffer output.  illustrates an example implementation of programmable delay circuit  similar to that of  except that for an 8-bit input DELAY word having bits {D, D . . . D},\n\n","In the example of , when the input capacitance of each gate Lis 2y times a unit capacitance when connected to VBIAS, the 8-bit DELAY data can set delay circuit  to any of  different delays. When each gate Lx,y has the same input capacitance when connected to VBIAS, the 8-bit DELAY data can set delay circuit  to any of 9 different delays.","Jitter Generation and Calibration","Due to process variations in an IC implementing jitter generator , host computer  will not be able to precisely predict the path delay through delay circuit  for each possible value of DELAY word. However host computer  can use measurement circuit  to measure the period between successive edges of the JITTER signal output of jitter generator  when pattern generator  is programmed to produce a repetitive DELAY word sequence. This enables host computer  to determine whether the DELAY word sequence causes jitter generator  to produce the proper jitter pattern in the JITTER signal. Host computer  can adjust values of selected words of the DELAY word sequence as necessary to obtain the desired jitter pattern.","Integration","Referring to , in high frequency applications, noise in the signal paths between DUT , receiver circuit , transmitter circuit , measurement jitter generator  and measurement circuit  can adversely influence measurement and calibration processes. To keep the signal paths short and less subject to noise, it is therefore helpful to incorporate receiver circuit , transmitter circuit , and measurement circuit  into the same integrated circuit . The communications between FPGA  and serial interface  generally occur before and after the test and the signal paths are not as noise sensitive. Thus the data processing functions carried out by FPGA  need not be incorporated into IC .","The foregoing specification and the drawings depict exemplary embodiments of the best mode(s) of practicing the invention, and elements or steps of the depicted best mode(s) exemplify the elements or steps of the invention as recited in the appended claims. However, the appended claims are intended to apply to any mode of practicing the invention comprising the combination of elements or steps as described in any one of the claims, including elements or steps that are functional equivalents of the example elements or steps of the exemplary embodiment(s) of the invention depicted in the specification and drawings."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 7","FIG. 5"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 9","FIG. 5"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 10","FIG. 5"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 11","FIG. 4"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 12","FIG. 11"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 14","FIG. 11"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 15","FIG. 11"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 16","FIG. 15"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 17","FIG. 11"]},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIGS. 19-21","FIG. 18"]}]},"DETDESC":[{},{}]}
