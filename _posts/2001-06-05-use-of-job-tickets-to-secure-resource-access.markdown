---
title: Use of job tickets to secure resource access
abstract: A job ticket service center includes features to provide security and to control access to a job ticket and related resources. The service center may include programming or servers to authenticate a processor and to authorize the processor to access a particular job ticket. An authentication server receives authentication information from a processor and an authorization server uses the information to check authorization functionality. The authorization or access rights of the processor may be carried as a part of the job ticket. Using these features, the service center may provide trusted authentication information about the processor to the authorization server, and the authorization server then performs its authority check functions. The job ticket maybe signed with an industry standard public key encryption message digest (MD) signature, and may be protected by a public key encryption system. Hence, any entity that has the public key may validate the job ticket without having to communicate with the authentication server. These features reduce communication between distributed server applications. The features also allow the job ticket to be passed from one processor to another processor, maintaining security, without communicating with the service center.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07073174&OS=07073174&RS=07073174
owner: Hewlett-Packard Development Company, L.P.
number: 07073174
owner_city: Houston
owner_country: US
publication_date: 20010605
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The technical field is integration and control of services in a networked environment.","Services may be provided by one or more operating units in a computer-based network. Users of the network may generate specific tasks and send the tasks into the network to be assigned to one of the operating units. For example, a user at a computer terminal may generate a printing order using a printer driver installed on the terminal. The printer driver is used to control the printing request. In another example, a user at a computer terminal may generate a printing order and send the printing order into a computer network so that the printing order is completed by a printing service. The printing order may be related to a company brochure. The printing order may contain unique requirements such as paper type, font size, layout, graphics, color, and other requirements. The user may specify that a specific printing service, such as Kinkos, prepare the company brochure. Alternatively, the computer network may include programs that suggest printing services to the user.","To control the printing job, the user's computer terminal may generate a job ticket. The job ticket includes the requirements, such as the requirements listed above, and an identification of the specific job that allows the job status to be tracked through the computer network.","Use of the job ticket allows printing and similar services to be allocated to those resources (i.e., the operating units) that are best suited to completing the services. Unfortunately, current computer systems do not allow access to the wide variety of services existing in networked computer systems, such as the Internet. In addition, current systems require users to have some knowledge of the existing resources, and may require users to include applicable programming to communicate with the services. Furthermore, current systems do not allow a job request to be split among several processors. As a result, completion of the job request may take longer than necessary, and may not be completed in the most efficient, lowest-cost manner. Finally, current systems do no provide adequate security for job tickets.","To overcome these and other problems related to use of a job ticket, a method and an apparatus allow a client to manage job attributes and processes using an electronic service center. The service center includes a job ticket service that allows access and modification of a job ticket by multiple users on a network. The method and apparatus use a network-accessible job ticket to relate to a specific job or content. The job ticket may be an object, such as an XML object, comprising routines and data. The content may be stored on the network and may be accessed by multiple job tickets. Storage and management of the job ticket are transparent to the user. The job ticket is stored in a common location in the network. The job ticket remains in the same location in the network, and users access only that portion of the job ticket required to complete a designated process. Security measures may be added to limit access to those users designated as being allowed to access the job ticket and the job file. The job ticket may include a service ID that relates the job ticket back to the originating job ticket service. In this way, a user who acquires all or part of the job ticket can refer back to the originating job ticket service (and the original, or as-modified, job ticket) to verify any changes and to ensure that the job ticket being accessed is up-to-date. The job ticket also includes a job ID to refer the job ticket to a specific job.","The service center is coupled through a communications network to a front end service. The front end service allows a user to generate a service or job request. The communications network may be the Internet, or a local area network, for example.","The service center includes a service bus, to which are coupled a job store, the job ticket service, and a work flow controller. Also coupled to the service center are one or more processors that may be controlled to complete processes and tasks defined in the job tickets.","The job ticket service may generate and store the job tickets. Job content(e.g., a PDF file) is stored in the job store. With this structure, the user does not have to manage storage of the job content or to know which job store holds the job content. The job ticket service controls access to the job tickets, and, through the use of the job tickets, also controls access to job content in the job store, or elsewhere in the network. The job ticket service may create a reference to the job ticket, and may use the reference to control access to the job ticket.","A job ticket service center may include several features to provide security and to control access to the job ticket. In an embodiment, the job ticket service may employ branch locking. In an alternate embodiment, servers may be used to authorize and authenticate a processor. An authentication server receives authentication information from a processor and an authorization server uses the information to check authorization functionality. The authorization or access rights of the processor may be carried as apart of the job ticket. Using the above-described features, the service center may provide trusted authentication information about the processor to the authorization server, and the authorization server then performs its authority check functions using this information.","In an embodiment, the job ticket may be signed with an industry standard public message digest (MD) signature, and may be protected by a public key encryption system. Hence, any entity that has the public key may validate the job ticket without having to communicate with the authentication server. These features reduce communication between distributed server applications. The features also allow the job ticket to be passed from one processor to another processor, maintaining security, without communicating with the service center.","In an embodiment, when a processor modifies a branch, the processor accesses the job ticket service to update the job ticket. The modified job ticket may then be signed before being passed to the next processor.","In yet another alternative embodiment, the job ticket holds authentication\/access data, allowing controlled access to the job ticket. Resources may be protected by passwords and other mechanisms. Access to the job ticket may be similarly protected. Furthermore, processors with access authorization may have such access authorization invoked by listing the processors in the job ticket. The listing may be effectuated by recording a network address for the processors, for example. The network address may be incorporated in bid information recorded in the job ticket.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 1","FIG. 1"],"b":["1","4","5","2","3","1","5","3","2","2"]},"In a specific application, the functions of the job ticket file  may be carried out by a printer driver. The printer driver encodes control data related to printing the document, and sends the control data and the content  to the printer (i.e., the processor ). The printer accesses the control data and the content  to print the document.","While the application shown in  works well to print a document, the application has many drawbacks. In particular, if multiple processors are involved in producing the document, each such processor will require access to the job ticket file . This access brings problems related to security, modification control and workflow control. For example, each processor requiring access to the job ticket file  may have to wait on processing until a prior processor has completed use of the job ticket file . Thus, the prior art application may result in unwanted delays in completing the job request.","Prior art applications of job ticket services also suffer because the user may not know anything about the processors, including capabilities and availabilities of the processors, or even if the processors exist. Thus, the user may not know which portal to use to connect to a specific processor.","These and other problems are solved by a method and an apparatus that controls access to a job ticket and associated content through use of a job ticket service. The job ticket service includes mechanisms that arbitrate access to the job ticket among multiple users of the job ticket, limit access to the job ticket by incorporating security features, and ensure modifications made by one processor or user are reflected in the job ticket and the content. In effect, the apparatus includes a generic database that couples input data from clients as job requests with output services such as processors that perform tasks or processes to complete the job requests. The database may have the features of a generic XML database in that it is extensible, and in that the clients need not have any knowledge of the individual processes to be performed, or the internal programming requirements of the processors. Thus, the clients may submit job requests to a service center that will ensure that an appropriate processor or processors are assigned to complete the job request.","Before describing the apparatus and method in detail, a review of a job ticket is provided.  is a node-tree diagram (or simply a node tree)  that illustrates processes defined in a job ticket for printing a brochure. The brochure may be printed on a commercial press, and may use digital content to generate plates for printing the brochure. Within the node tree , the nodes specify a product, process, or group of processes. Each node may modify, consume or create resources. Each node may contain further nested nodes, or sub-nodes. The arrangement of nodes and sub-nodes may be likened to a tree, and each node and sub-node may be referred to as a branch. A brochure node  defines the features and parameters of the brochure. A cover node  defines the parameters for producing the brochure cover. Inside pages node  includes the parameters to produce the inside pages. The inside pages node  is shown with several sub-nodes, including a sub-node  for digital plate making. The digital plate making sub-node  itself includes two additional sub-nodes, a ripping sub-node  and a plate making sub-node .","Each of the nodes and sub-nodes shown in  has associated with it input resources and at least one output resource. A resource may be described by parameters or logical entities. The resource may be a physical entity such as a component, a handling resource, or a consumable. A component resource may be the output of a node or sub-node, such as a printed sheets. A handling resource is used during a process, but is not consumed by the process. A consumable resource may be partly or wholly consumed by the process. Examples of consumable resources include inks, plates, and glue. Other resources may be a digital file or representation of a physical object. For example, the ripping sub-node  may include as input resources a run list, media, RIP parameters, and layout. The run list resource describes the pages, including the files in which the pages occur, and which pages are to be used. The media resource describes the media that will be used to make plates, and is needed to describe the dimensions of the media. The RIP parameters resource describes all device-specific parameters of the ripping process. The layout resource describes placement of source pages onto the plates, and eventually onto press sheets. As an output resource, the ripping sub-node  may provide ripped flats. Other resources include parameter resources, which define the details of processes, as well as other non-physical computer files used by a process.","The node tree  shown in  is intended to apply to printing a document. However, node-tree diagrams may be used to represent job tickets for other services besides printing. For example, a job ticket may be used for data processing, image processing, creating and maintaining a database, electronic publishing, e-mail, and various e-commerce services. Moreover, the job ticket may be used to allow different e-commerce services to interact with each other.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 3","b":"20"},"The service center may include components that receive information in the form of job requests, and using the information, create a job ticket that specifies tasks and resources. The job ticket may be stored in a job ticket service, and notices maybe posted to indicate when a job ticket is available. Processors coupled to the service center may bid on completion of the job ticket, and the service center may include a bidding service that evaluates bids. The service center may select one or more processors to assign to the job ticket based on client-supplied criteria, or based on a set of standard criteria, including industry standard criteria. The service center may provide mechanisms to control access to the job ticket, or to portions (branches) of the job ticket. The mechanisms include branch locking, and authorization and authentication servers that use public key encryption, or similar processes.","The service center may include hardware components such as servers, computers, central processing units, communications interfaces, and memory devices to provide the processing capability and data storage required to carry out the above-described functions.","The DIW network  includes a front end service  that allows a client  to generate and submit a service or job request  (see ). In an embodiment, the front end service  may be an Internet web browser. Alternatively, the front end service  may be a web application or a port monitor. The job request  may contain detailed information about how the job is to be executed, and may be formatted according to the job definition format standard. Alternatively, the job request  may include only basic information, which will be used by another component to finalize the job definition, or work flow. Finally, the job request  may include the content, or job, that is to be processed. The content could be one or more digital files, text files, and other files. The front end service  is coupled to a communications network , which may be the Internet or a local area network, for example. Coupled to the communications network  is a service center  that links one or more processors to the communications network . Each of the processors may include a cache that may be used to store information related to a job request , including information related to job tickets. In an embodiment, the service center  may be an Internet web site that includes data storage and control functions. In another embodiment, the service center  is a node in a local area network.","The service center  allows abroad spectrum of communications between entities coupled to the service center . In particular, the service center  allows different e-services to interact programmatically with one another using specific protocols and generic protocols (e.g., TCP\/IP). This programmatic interaction allows different services and processes that are coupled to the network to exchange data and files, and to modify the data and files. The programmatic interaction may be completed by use of a remote procedure call (RPC) between entities coupled to the service center . Other methods for providing the programmatic interaction include CORBA, UDDI, and e-speak.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 4","FIG. 3"],"b":["40","40","41","35","80","41","50","60","70","90","92","94","50","51","60","61","70","71","41"],"sub":["1 ","i","1","1 "]},"The job store , job ticket service  and work flow controller  function to accept information from the clients , and to use the information to control the actions of the processors . The processors performs specific tasks or processes as determined by the service center .","The job store  may be a node on the service bus , and may include programming to allow the job store  to carry out its functions. The job store  maybe used to store the content , which may be in the form of one or more large files. In the context of printing a document using a service or process coupled to the service bus , the job store  may store the document content in one or more PDF files, for example. The content  may include graphics and text. The content  for a specific document may include several files. For example, a brochure may have a separate file for the cover and another file for the inside pages. Text for the inside pages may be in one file and images in yet another file. The content  may also include links to other resources or entities on the service bus . The job store  provides for mass storage of the content , so that a user (client  or processor ) does not have to provide the mass storage required for the job content . By using the mass storage capabilities of the job store , the content  may be made to persist in the network , and may be made accessible to users at any time. The job store  also manages and controls the content so that the user (client  or processor ) does not have to manage the content . Management functions include maintaining configuration or version control of the content , controlling access to the content , and maintaining the content  in storage.","The job ticket service  holds job tickets . The job ticket service  controls access to and may manage configuration of the job tickets . For example, the job ticket service  may allow users (clients  and processors ) to access a portion or branch of a job ticket  rather than passing the job ticket  among multiple users. Access to the job ticket portion may be effectuated by use of an application programming interface, a scriptable interface, or a similar feature. As noted above, the job ticket  does not include the content  (e.g., the graphical and text files of a document), but the job ticket  relates to content  (e.g., a PDF file) stored in the job store . The user does not have to manage storage of the job content or to know which job store  holds the job content. The job ticket service  instead passes a reference in the job ticket . This allows multiple clients  and processors to access the content . Furthermore, the content  may relate to more than one job ticket . The job ticket service , and its interrelationships with other entities coupled to the service bus , will be described later in detail.","Some job tickets  may be accessed by multiple processors , in either serial, overlapping, or simultaneous fashion. The multiple access processing could result in problems with use of the job ticket . For example, a first processor may acquire the job ticket  (or a portion or branch thereof), and perform a process specified in the work flow, which may modify the branch. Such modification may be to indicate a branch as complete, use up input resources, or create new output resources, for example. A second processor could attempt to acquire the branch, but might not \u201cknow\u201d that the first processor had modified the branch. Alternatively, if two processors compete for the same branch, a deadlock situation might occur.","One solution to the above problems may be to lock the job ticket  whenever a processor  acquires the job ticket . Unfortunately, locking the job ticket  may prevent concurrent or parallel processing and may slow down completion of the job request .","The job ticket service  shown in  overcomes these and other problems by having the capability to lock the job ticket  at the branch level. The branch locking may be accomplished by one of several methods. The work flow controller  may assign one or more specific processors to perform the tasks identified with the branch to be locked. Where only one processor  is authorized access to the branch, branch locking may not be required. Where more than one processor  is authorized access to the same branch, the job ticket service  may lock the branch when one of the authorized processors actually acquire the branch.","If the work flow controller  has not assigned processors to branches (i.e., any processor  may access a branch at anytime), the job ticket service  may lock the branch when a processor  acquires the branch.","The job ticket service  may lock the branches by setting a lock\/unlock flag for each branch. Processors accessing the job ticket  may then review the lock\/unlock flag status to determine if the branch may be accessed. In some circumstances, the job ticket service  may allow access only to those branches that are unlocked. A processor  that has completed a task defined by the branch may need to have the branch unlocked in order to modify the branch.","The work flow controller  maybe used to create the job tickets  that are stored in the job ticket service . The work flow controller  may review the job requests  submitted by the clients , and may then use a job ticket template to prepare the job ticket . The workflow controller  may then send the job ticket  to the job ticket service  for storage and processing.","The work flow controller  also controls completion of tasks among the processors . In an embodiment, the work flow controller  determines which of the processors have the necessary and available resources to begin the processes listed in a specific job ticket . The work flow controller  then designates the appropriate processors to complete the tasks referenced by the job ticket . For example, if a job ticket requires color printing, the work flow controller  may determine that only processor is a color printer with the capacity to begin the job specified in the job ticket . This embodiment in which the work flow controller  determines which processors to assign to a specific job ticket  may be especially appropriate when the network  is a local area network and all processors are directly coupled to the local area network .","Alternatively, the work flow controller  may receive bid information from Internet connected processors and may use the bid information to select the processors to complete the job request .","The work flow controller  may also be used to designate the various nodes, input and output resources, and other features of the node tree used to complete the job request. That is, the work flow controller  may be used to create a construct, or work flow, such as the node tree  shown in . To accomplish these tasks, the work flow controller  may include one or more agents  that write a job definition file, based on control data contained in the job request . Alternatively, a separate management information system (not shown) may be used to create the nodes, and to control flow of tasks to the processors and other entities. In yet another embodiment, the job definitions maybe written by the client  that originated the job request .","Referring again to the node tree  of , many output resources of the individual nodes serve as input resources for other nodes. These other nodes may not be able to begin executing until all input resources are complete and available, which means that the nodes may need to execute in a well-defined sequence. For example, a process for making plates will produce press plates as an output resource that is required by a printing process. In the hierarchical organization of the node tree , nodes that occur higher in the node tree  represent higher-level, more abstract operations, while lower order nodes represent more detailed, specific processes. Moreover, nodes near the top of the node tree  may represent only intent regarding the components or assemblies that comprise the product, and lower level nodes provided the detailed instructions to a processor  to perform a specific process.","Because two node trees may not be similar, the work flow controller  may determine processes to be completed, the order in which the processes are completed, and the processors that are to complete the processes. The work flow controller  may use the agents  to determine an actual work flow, considering factors such as control abilities of the processors that complete the processes, transport distances between processors, load capabilities of the processors , and time constrains in the job request, for example. The agents  may define the overall process using serial processing, which involves subsequent production and consumption of resources by the processors , overlapping processing, which involves simultaneous consumption and production of resources by more than one processor , parallel processing, which involves sharing resources among processors , and iterative processing, which involves a back and forth processing scheme to develop resources.","In determining which of the processors to assign to complete a particular job request, the work flow controller  may poll processors that are coupled to the service center . As noted above, the processors may be coupled directly to the service bus , or may be coupled indirectly through another communications bus, such as the Internet, for example. The polling may occur whenever a job ticket  is created by the job ticket service . Alternatively, the polling and corresponding information collection may occur on a periodic basis, and the work flow controller  may store information related to the processors .","As an alternative to polling, processors coupled to the service center  may monitor the job ticket service . The job ticket service  may periodically post, in a bulletin board fashion, for example, notices for job tickets that are available for processing. The processors  may then submit a bid for the tasks and processes defined in the job ticket notice. The work flow controller , or the separate, optional bidding service , may review the bids, and determine which single processor  or combination of processors would be best suited to complete the tasks and processes defined in the job ticket notice.","The service center  may include several features to provide security and to control access to the job ticket . As discussed above, the job ticket service  may include a provision for branch locking. In addition, servers may be used to authorize and authenticate a processor  and maintain the authorization and authentication during completion of a job request  (see ). The authentication server  receives authentication information from a processor  and the authorization server  uses the information to check authorization functionality. The authorization or access rights of the processor  maybe carried as a part of the job ticket . The servers  and  may be hardware devices, but need not exist in the same hardware platform, and the servers  and  need not be tightly coupled. Alternatively, the functions of the servers  and  may be performed in programming stored in one of the components of the service center , such as the work flow controller , for example. Using the above-described features, the service center  may provide trusted authentication information about the processor  to the authorization server , and the authorization server  then performs its authority check functions.","The job ticket  may be signed with an industry standard public key encryption message digest (MD) signature, and may be protected by a public key encryption system. Hence, any user that has the public key may validate the job ticket  without having to communicate with the authentication server . These features reduce communication between distributed server applications. The features also allow the job ticket  to be passed from one processor  to another processor , maintaining security, without communicating with the service center .","In an alternative embodiment, the job ticket  holds authentication\/access data, allowing controlled access within the service center  infrastructure. Resources may be protected by passwords and other mechanisms. Access to the job ticket  may be similarly protected. Furthermore, processors with access authorization may have such access authorization invoked by listing the processors in the job ticket. The listing may be effectuated by recording a network address for the processors , for example. The network address may be incorporated in the bid information recorded in the job ticket .","Although the above description refers to development by the work flow controller , other components in the network  may be used to develop an overall work flow to complete the job request . For example, the job ticket service  maybe used to develop the overall work flow.","As discussed above, the bidding service  maybe used to receive bid information from processors coupled to the service center . The processors submit bids in response to posting of job ticket notices at the service center . In an embodiment, the job ticket notice is a separate object stored in the service center . In another embodiment, the job ticket  itself serves the notice function. The work flow controller  may post the job ticket notices after receipt of the job request . Whether the bidding service  or the work flow controller  receives the bids, the bid evaluation and selection process may be the same.","The job ticket notice posted by the work flow controller  may include specific tasks or processes (branches) that must be completed to complete the job request . A simple job request  may have only one branch. More complex job requests , such as the job request illustrated in  (i.e., print a brochure) may have many branches. Furthermore, some branches may be so interrelated that they can only be completed in a specific sequence, while other branches can be completed in a parallel or an overlapping fashion. This interrelationship may often be the result of one branch producing an output resource that is an input resource for one or more other branches. The job ticket notice may include descriptions of specific branches and their interrelationships in sufficient detail to allow the processors to bid for completion of the branches. The job ticket notice may persist in the service center  for a specified time to allow the processors to send bids. The time may be a set value (e.g., one hour) or may be based on a completion deadline specified in the job request .","The bidding service  may select bids  from the processors  based on set criteria. For example, the job request  may specify minimum performance requirements (e.g., a maximum cost and a completion deadline). The bidding service  may reject any bids that fail to satisfy the minimum performance requirements. Where the work flow controller  has established multiple branches, each such branch may include minimum performance requirements. The branch-specific performance requirements may be established by the work flow controller  based on overall performance requirements for the job ticket . A processor  that bids on a particular branch may be rejected by the bidding service  if the processor  fails to meet the minimum performance requirements.","If the client  does not specify any minimum performance requirements, the bidding service  may apply a standard set of criteria (e.g., an industry standard). In addition, the bid must satisfy any requirements for producing output resources. In this way, bids that are made in error, or that would otherwise likely be rejected, can be screened out. For example, a bid for printing inside pages of the brochure may indicate a one year completion date. Such a bid may be rejected, even in the absence of any specified performance requirements from the client .","In addition to submitting performance requirements, the client  may specify an evaluation algorithm for evaluating bids. For example, the client  may specify that cost is to be weighted twice as much as any other performance requirement.","In the absence of a client-specified evaluation algorithm, the bidding service  may apply a standard evaluation algorithm in order to rank bids for each branch in the work flow. The evaluation algorithm may apply weighting criteria, or may apply a default rule. For example, bids may be ranked based on a maximum score, where points are awarded for cost estimates below a maximum and for completion times below a maximum. Once the evaluation algorithm has been applied, the bidding service  ranks the bids for each branch. If only one processor  survives the process, that processor  may be automatically selected and assigned to the branch. If multiple processors survive, the bidding service  may provide a list of such processors to the work flow controller , which will then select the processors  to be assigned to the branches. Alternatively, the list may be provided to the client , and the client  may select the processor(s) to complete the tasks defined in the work flow.","The work flow controller  may associate winning bids with corresponding branches, and may store the bid information with the job ticket . The stored bid information may include identification information that allows the authorization server  and the authentication server  to permit access to job ticket branches or to the entire job ticket . Because the bid information is stored with the job ticket , a processor  may access those branches for which the processor  is authorized access without having to communicate directly with the job ticket service . This feature allows the job ticket  to be passed from one processor  to another processor , which improves processing time and efficiency.","In an embodiment, the work flow controller  accesses control data of the job ticket  to determine which processor(s) should be assigned to the specific task identified in the job ticket. The work flow controller  may also identify which of the processors would be able to meet the criteria specified in the control data, and may provide a list of such processors to the client through the front end service . The client  may then select a processor(s) from the list.","In an embodiment, the job ticket service may be embodied as a sequence of program instructions stored on a computer-readable storage device, such as a CD-ROM, for example. When loaded into, or coupled to a computer, the program instructions may be read and executed by a processor of the computer to provide the functions of the job ticket service.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 5A","b":["61","61","62","64","62","61","64","67","61"]},"The framework  may include a job identification (ID) , a service ID , a task section , and a control data section . The job ID  includes a reference to a specific job, or content  that is stored in the job store . The job ID  also includes a reference to a particular job store  that is used to store the content . An entity that acquires a reference to the job ticket  can use the job ID  to access the corresponding content . Thus, the network  shown in  may include multiple job stores , and the job ID  maybe used to correlate the job ticket  to a specific job store . The service ID  identifies a specific job ticket service  that stores the job ticket . For example, the network  may include multiple job ticket services  (not shown in ). The service ID  is used to correlate the job ticket  to the appropriate job ticket service .","The tasks section  () may include branch definitions, and other information needed to control completion of the branches. The tasks section  may be structured so that each branch or node in a node tree is represented by one or more branches in the tasks section. In this embodiment, each node in the node tree (e.g., the node tree  of ) can have associated with the node, the description , resources , lock\/unlock flag , and security functions . In this way, the job ticket  reflects a hierarchical database structure.","The control data section  includes the specific instructions, parameters, and criteria for completing the task identified by the job ticket . Control data in the control data section  may also be associated with each node in a node tree.","The security module  controls access to a specific job ticket. The security module  may be implemented using standard encryption and access techniques, including public\/private key infrastructures, for example. In an embodiment, the security module  may include a list of authorized processors that may be given access to one or more branches of the job ticket , or to the entire job ticket .","The client extension  may contain \u201ccustom\u201d information, such as user age, credit card number and zip code. Information provided in the client extension  may be protected by use of a public key signature, or similar feature. Hence, all client extension information will automatically be included in a Message Digest Protocol (MDP) and will affect the signature of the job ticket . With the above-describe job ticket architecture, many Internet-related security issues are addressed, including IP spoofing, time controlled sessions, job ticket alterations, varying authorization levels, and client-dependent persistent data storing.","The job ticket  shown in  may be used to refer to a specific content  in the job store . Alternatively, multiple job tickets  may be used to refer a specific content , or one job ticket  may be used to refer to multiple contents . Thus, for example, one job ticket  may specify a repetitive printing task to be completed on similar documents, each of which has a different content .","Using the network  shown in , and the corresponding job ticket shown in , a client  may request and have completed many different electronic services. For example, the client  may use the network  as an e-mail application.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 5B","b":["68","68","66","95","95","96","97","98","90","98","98","99"]},{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIG. 5C","FIG. 7"],"b":["69","69","61","51","51","61","32","69"]},"The use of job tickets as XML objects allows clients to define databases, and to store data through the job ticket service  and the job store . The databases may be used to hold contact lists, addresses, and other personal data. The databases may also be used to store any other generic data. The databases could then be used in conjunction with a variety of e-services provided by the processors . For example, an e-mail processor  that provides e-mail services maybe used in conjunction with a personal contact list to send e-mail messages, transfer electronic files, or to establish a chat room. The e-mail processor  may access the contact list at predefined intervals to send e-mail messages to a select group of e-mail addressees. Furthermore, because the service center  provides a single portal to processors  that are coupled to the communications network , the client  need not have any knowledge of the database structure, or the processing requirements of the processors .","In the specific application of the generic XML database to an e-mail service, the client  may have established, as a generic database, a list of e-mail contacts. The contacts database may then be stored in the job store  as a content file . A corresponding job ticket  may be stored at the job ticket service . The job ticket  includes control data needed to send and receive e-mail through the service center . Furthermore, the job ticket  serves as a pointer to data in the content file . In particular, the job ticket  may store XML data that is related to other data stored in the content file .","Alternatively, the job ticket  may store the contacts data. This alternative takes advantage of the fact that the job ticket  includes a vocabulary that can be extended to include the contact data, and that the vocabulary can be further extended to include properties for each contact in the contact data. For example, the job ticket  may specify that a contact is a business contact or a personal contact. Other properties may also be included, such as whether the contacts in the contact database use mobile phones, land line phones, facsimile machines, and e-mail addresses.","The use of the job ticket  also allows for parsing, searching and updating the contacts database. For example, the client  may desire to search the contacts database for phone numbers for all persons whose first name is Joe. This search functionality is included in the job ticket , and allows the job ticket service  to provide the client with a list of phone numbers for all entries in the contacts database where the person's first name is Joe. That is, the contacts database includes entries having the property of job, and the job ticket service is able to search the contacts database for this property, and to return a list of those entries to the client .","The properties function of the job ticket  also allows the job ticket service  to control specific tasks desired by the client , or to indicate to the client that a desired task cannot be completed. Staying with the example of the contacts database, the client  may desire to send a facsimile transmission to all entries in the contact list that have a specific zip code. The job ticket service  can search the contacts database by properties, looking for zip code. The job ticket service  can also search the contacts database to determine if any entry does not have a facsimile machine. For those entries that do not have a facsimile machine, the job ticket service  can originate a message to send back to the client , informing the client  that the facsimile transmission was undeliverable. Using this functionality, the client  need not know anything about the intended recipients of the facsimile transmission.","Returning to the example of an e-mail service, at the client , an e-mail application may be launched in order to send an e-mail message, using the Internet, to one or more contacts in the contact database. However, the client  need not subscribe to any one Internet service provider. Instead, the service center  determines which processor  best suits the client's needs for sending the e-mail message. That is, the service center  may select a e-mail service provider (a processor ) to send the e-mail message to a chosen destination address. Furthermore, the service center  may determine, based on information maintained in the contact database (i.e., the content  in the job store ), which delivery options are desired by a user at the destination address. For example, the destination address user may desire that all e-mail messages be sent to an e-mail box, or that an alert be provided whenever an e-mail message is sent. These delivery features may be stored in the contact database. Alternatively, the delivery features may be stored in a separate database (content file ) in the job store , and the service center may retrieve information form this separate database when determining how to deliver the e-mail message. Specifically, the separate database may include a variety of users, along with the user's Internet address. By comparing the Internet address provided with the out going e-mail to the Internet addresses in the separate database, the service center  can determine desired delivery options of the addressee. This process for determining delivery options is transparent to the client  that originated the e-mail message. All that the client  need know is the contact information (e.g., the Internet address).","The client  may use the job ticket service  to specify a number of performance features related to the e-mail service. For example, the client  may want the service center to attempt a specified number of delivery attempts, and if delivery does not occur, to send a return message to the client  indicating non-delivery of the e-mail message.","As noted above, the job ticket , in conjunction with other components of the service center , may also be used to create a persistent, generic object-based data structure, such as an XML database. An example of the use of a job ticket  for this purpose is illustrated in . The job ticket  includes a contacts list , which may be in the form of an XML database, or some other generic database. The contacts list  may include a structure with entries for business  and personal  use. The business  and personal  contacts structures may include entries of individuals , as shown. Each of the entries  may include specific properties, as defined above. In addition, or alternatively, each of the entries  may include links to other databases that provide additional information and properties about the individual.","While the use of the job ticket  as a XML database has been described with reference to an e-mail and messaging service, the job ticket  is not so limited. Any data that is capable of being stored in a database may be accesses and controlled using the job ticket .","The features described above, and shown in , may be replicated in another embodiment of a job ticket  in which all data related to a specific node or branch is located with that node or branch. Using the example node-tree  shown in , each node (branch) may include detailed information and features such as resources, authorized processors , lock\/unlock flag, bid information, branch description, and other information.",{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 6","b":["60","60","73","61","75","61","31","80","60","72","74","60","76","77","61","80","61","78","61","79","31","61"],"sub":["1 ","1 ","1","1 ","1","1 "]},"The job ticket reference  includes a specific reference to a corresponding job ticket . The job ticket reference  may be used by the job ticket service  to allow one or processors and clients to access the job ticket . That is, instead of passing the job ticket  to a processor , the job ticket service  passes the job ticket reference . With the job ticket reference , the processor  may access all or a part of a job ticket  so that the processor  may complete one or more processes. Unlike conventional job ticket services, the job ticket service  retains the job ticket in storage , and only permits users (clients and processors ) to access the job ticket . This feature allows multiple processors  to simultaneously complete processes for the specific job request  related to the job ticket .","The job ticket service  may also create a resources reference , and may provide the resources reference  to the processors  and the clients  in a manner similar to that of the job ticket reference . As noted above with the description accompanying , the resources may include physical devices and materials, and may include digital files. Use of the resources reference  may simplify data included in the job ticket .","Alternatively, information contained in the resources reference  may be included in the job ticket , or may be included in other files accessed by the clients and the processors .",{"@attributes":{"id":"p-0092","num":"0091"},"figref":["FIG. 7","FIG. 7","FIG. 2","FIG. 5B"],"b":["60","60","61","61","60","31","31","61","60","61","60","61","60","65","65","60","65","60"],"sub":["1","1 ","1","1 ","1 ","1 ","1 "]},"Also shown in  are client and processors \u2013. The processors \u2013may include networked resources such as networked printers, electronic-commerce entities, such as Internet web sites, and \u201cbrick and mortar\u201d entities, such local print shops that are coupled to the job ticket service  using the service bus .","The client  generates a job request  (content  and job ticket data). Using the front end service  (not shown in ) and the service bus , the client sends the job ticket data to the job ticket service  and the content  (not shown in ) to the job store . The job ticket service  may pass the job ticket data to the work flow controller , which will create a job ticket . The content and the job ticket are related by the job ID . The job ID  also includes an identification of the job store , and a location within the job store  in which the content is stored. In an alternate embodiment, the content may be stored at the client , and may then be accessed by other users through the service bus  and the front end service .","The job ticket specifies processes that must be completed to finish the job request . As noted above,  illustrates processes required to print a brochure, including the inside pages and the cover. More that one processor may be required to complete such a job request, or to complete the job request in the most cost-efficient and\/or timely manner. The work flow controller  (not shown in ) can determine which of the processors \u2013should complete a specific process, and, if necessary, the order in which such processes should be completed. The work flow controller  may poll the various processors to determine which may be used to complete the job request. The work flow controller  may then notify selected processors that a job request has been registered with the job ticket service .","For each job ticket received, the job ticket service  creates a reference to the job ticket . The processor may request access to the job ticket  in order to complete one or more processes. In response, the job ticket service  provides the processor with the job ticket reference . The job ticket reference is then used as an index to the job ticket . The job ticket reference may also be provided to other processors, such as the processor , and to other clients, such as the client . The processor and the client may then access the job ticket at the same time as the processor accesses the job ticket . This simultaneous access allows different processes to be completed in parallel. In the example illustrated in , the processor may complete some or all the processes for the inside pages, and the processor may complete the processes for the cover.",{"@attributes":{"id":"p-0097","num":"0096"},"figref":["FIG. 8","FIG. 2"],"b":["60","61","51","63","61","51","41","80","51","61","41","61","32","80","70","80","80","60","80","61","51","60","62","80","61","80","61","51","50","80","80","61","61","60","80"],"sub":["1 ","1 ","1 ","1 ","i ","1 ","1 ","1 ","1 ","2 ","1 ","1 ","1 ","1 ","1 ","1 ","1","1 ","1 ","1 ","1 ","1 ","1","1 ","2"]},"As the processor completes various processes, the processor may update the content and the job ticket . Thus, the job ticket may reflect the latest status of the job request . The status reports may indicate when a node in the node tree  is completed, when an interim deadline is completed, when another processor may be used to complete a process, and when all processing is complete. The status report may be included in a digital file that is used by the work flow controller , for example. The status report may also be included in a human readable format, such as a pop-up window on a computer display screen. The processor may receive the job ticket reference , and may complete all scheduled processes, returning the job ticket reference to the job ticket service . The processor may also send a copy of the job ticket reference to the processor , so that the processor may access the job ticket , and the content and produce the brochure cover.",{"@attributes":{"id":"p-0099","num":"0098"},"figref":["FIG. 9","FIG. 2"],"b":["100","60","100","100","70","100","32","40","60","100","101","105","70","80","70","90","80","61","70","80","70","80","31","31","80"],"sub":["1 ","i ","i ","1"]},"In request job ticket block , a processor , having been authorized access to a job ticket , sends an access request to the job ticket service  using the service bus . In block , the job ticket service verifies that the processor  may access the job ticket . Access may be controlled by a password, an identification, and a public key\/private key security system, for example. In block , if the processor  is denied access, an error signal may be sent to the processor and\/or the client , block .","In block , if access is authorized, the job ticket service  provides the processor  with a copy of the job ticket reference  corresponding to the job ticket , block . The job ticket reference  allows the processor  to access the job ticket at anytime. By accessing the job ticket  at any time, the processor  is able to view an updated version of the job ticket  as changes are made to the job ticket  by other entities, including other processors .","In block , the job store  provides access to the job content  that is referenced by the job ticket . Only that part of the content  that may be needed by the processor  may be supplied by the job store . For example, if the processor  is only to generate the inside pages of the brochure, the job store  may not provide access to the content required to produce the brochure cover. After receiving the job ticket reference  and the content , the processor  may perform one or more tasks using input resources to produce an interim or final output resource. With completion of each node in the node tree , the processor  may provide an input to the job ticket service  to allow modification of the job ticket , block . If the processor  completes all required processes, the processor  may provide a final status report to the job ticket service , block , along with any final modifications to the job ticket .","In block , the job ticket service  and the work flow controller  determine if any additional tasking may be required. If additional tasks are required, the work flow controller  will ensure the appropriate processors  are assigned, and the operation returns to block . If no additional processes are required, the operation moves to block  and ends.",{"@attributes":{"id":"p-0104","num":"0103"},"figref":["FIG. 10","FIG. 2"],"b":["105","200","205","40","32","32","51","51","210","70","32","10"]},"In block , the work flow controller  generates a job ticket  using the information provided by the job request , the work flow generated in block , and an appropriate job ticket template. The job ticket  is then stored in the job ticket service . Any content  may be stored in the job store .","The work flow controller  or the job ticket service  may create a job ticket notice, or other object, and may post the notice, block , at the service center  so that outside entities (e.g., the processors ) may acquire sufficient information to bid on completion of the job ticket , or a branch  of the job ticket . In an alternative embodiment, the job ticket  may be posted at the service center . If the job ticket  is posted, the job ticket  may include mechanism to limit access to the job ticket or to limit access to certain portions of the job ticket . For example, the client extension  may not be accessible to the processors .","In block , the service center  receives bids from specific processors  and in block , the service center  evaluates the bids. In block , the service center  determines if the client  submitting the job request  intends to select the winning bid(s), or if the service center  makes the selection. If the client is to make the selections, in block , the service center  provides the bid information to the client . Then, in block ,the service center  receives the selections from the client . If the service center  is to make the selections, in block , the service center  selects the winning bid(s). In block , the service center notifies the winning processors. The service center may also store the bid information with the corresponding job ticket . In block , the routine  ends.",{"@attributes":{"id":"p-0108","num":"0107"},"figref":["FIG. 11","FIG. 10"],"b":["210","210","350","355","70","70","360","365","70","370","70","375","70","380","70","385","70","70","390","70","365","210","210","395","61","230"]},{"@attributes":{"id":"p-0109","num":"0108"},"figref":"FIG. 12","b":["250","250","400","405","70","61","410","70","420","250"]},{"@attributes":{"id":"p-0110","num":"0109"},"figref":"FIG. 13","b":["290","440","445","90","450","90","31","90","455","460","90","475","90","495","90","445"]},"In block , if the client  has supplied performance requirements, the bidding service  compares the selected bid to the client-supplied performance requirements, block . In block , the bidding service  determines if the selected bid meets the minimum criteria of the client-supplied performance requirements. If the minimum criteria are not met, the bidding service  rejects the bid, block .","In blocks  and , if the minimum criteria are met, the bidding service  determines if the client  has supplied an evaluation algorithm. If the client  has not supplied an evaluation algorithm, the bidding service applies a standard evaluation algorithm, which may be an industry standard algorithm, block . If the client has supplied an evaluation algorithm, the bidding service  applies the client-supplied evaluation algorithm, block . The bidding service  may then store the results of the algorithm pending evaluation of all bids.","In block , the bidding service  determines if any bids remain to be evaluated. If additional bids remain, the sub-routine  returns to block , and the bidding service selects the next bid for evaluation. In block , if no additional bids remain for evaluation, the bidding service  ranks the bids, block . The sub-routine  then ends, block .",{"@attributes":{"id":"p-0114","num":"0113"},"figref":"FIG. 14","b":["130","61","130","510","515","60","72","80","61","520"]},"In block , the job ticket service  compares the processor identification to processors listed in the job ticket  or branches  of the job ticket . The job ticket service  determines if the selected branches  are locked, block . If the selected branches  are not locked, the job ticket service  copies the selected branches  to the processor , block . In block , the job ticket service  then determines if the selected branches  require locking. If the selected branches do not require locking, the routine  ends, block . If the selected branches  require locking, the job ticket service  locks the selected branches , block . The routine  then ends, block .","In block , if the selected branches  are locked, the job ticket service  determines if the processor  intends to modify information in the selected branches , block . If the processor  will not modify the selected branches , the job ticket service  may provide an error message, block . If the selected branches  will be modified, the job ticket service  may unlock the selected branches .",{"@attributes":{"id":"p-0117","num":"0116"},"figref":["FIG. 15","FIG. 9"],"b":["61","115","600","605","94","80","61","72","80","61","67","62","64","62","64","61","67","610","615","61","615","620","625","61","61","61","62","64","67","630"]},"In the illustrated embodiments, the service center , and its sub-components, including the work flow controller  and the job ticket service , for example, may be implemented as a single, special purpose integrated circuit (e.g., an ASIC) having a main or central processor section for overall, system-level control, and separate circuits dedicated to performing various different computations, functions and other processes under control of the central processor section. Those skilled in the art will appreciate that the service center  may also be implemented using a plurality of separate, dedicated or programmable integrated or other electrical circuits or devices (e.g., hardwired electronic or logic circuits such as discrete element circuits, or programmable logic devices such as PLDs, PLAs, or PALs). The service center  may also be implemented using a suitably programmed general purpose computer, e.g., a microprocessor, microcontroller or other processor device (CPU or MPU), either alone or in conjunction with one or more peripheral (e.g., integrated circuit) data and signal processing devices. In general, any device or assembly of devices on which a finite state machine capable of implementing the flowcharts shown in  can be used as the service center , or its sub-components.","The terms and descriptions used herein are set forth by way of illustration only and are not meant as limitations. Those skilled in the art will recognize that many variations are possible within the spirit and scope of the invention as defined in the following claims, and their equivalents, in which all terms are to be understood in their broadest possible sense unless otherwise indicated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["The detailed description will refer to the following figures in which like numerals refer to like items, and in which:",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIGS. 5A\u20135D"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIGS. 10\u201315","FIG. 9"]}]},"DETDESC":[{},{}]}
