---
title: Replicating user requests to a network service
abstract: Disclosed are various embodiments for replicating service requests. A service request is obtained from a client. A primary service and a secondary service are determined based at least in part on the service request and a routing configuration. The secondary service corresponds to another version of the primary service. The service request is routed to the primary service and potentially replicated to the secondary service. A service response to the service request is obtained from the primary service and then sent to the client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08762486&OS=08762486&RS=08762486
owner: Amazon Technologies, Inc.
number: 08762486
owner_city: Reno
owner_country: US
publication_date: 20110928
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND","DETAILED DESCRIPTION"],"p":["This application is related to co-pending U.S. patent application entitled \u201cEVALUATING NETWORK SERVICE PERFORMANCE BY REPLICATING USER REQUESTS,\u201d having application Ser. No. 13\/247,111 and filed on Sep. 28, 2011, which is incorporated by reference in its entirety.","Application development is an iterative process. For applications, services, engines, etc. that are actively developed, new versions are developed to improve performance, correct defects, introduce new features, and for other reasons. In addition, the hardware and networking infrastructure that support the applications, services, engines, etc. may be replaced or modified from time to time. It is important that software and infrastructure changes be thoroughly tested for quality assurance before they are deployed for actual production use.","The present disclosure relates to replicating user requests to a network service. As used herein, the term \u201cservice\u201d relates to a networked application that obtains a request, processes the request, and generates a response to the request. Services may be deployed for production use or testing use. It is difficult to test a change to a service, such as a change to the code that implements the service, a change to the hardware infrastructure supporting the service, and so on. Developers are left to generate \u201cdummy\u201d service requests manually or programmatically in order to test the changed service. However, dummy service requests are often a poor approximation of an actual stream of user-generated service requests. Therefore, the developers may switch a changed service to production use prematurely, potentially resulting in errors being surfaced to users due to heretofore undiscovered code defects, inadequate hardware infrastructure, inadequate network infrastructure, etc.","Various embodiments of the present disclosure enable developers to test changes to a service with actual user requests behind the scenes with no errors being surfaced to users. A service request routing application routes service requests to, and service responses from, a production version of a service, while transparently replicating the service requests to a testing version of the service. In one embodiment, a predefined proportion of the request traffic may be replicated, thereby facilitating proportional testing of actual user traffic using a downscaled computing resource for testing. In one embodiment, the request traffic may be stored and replayed to the testing service at a later time. In the following discussion, a general description of the system and its components is provided, followed by a discussion of the operation of the same.","With reference to , shown is a networked environment  according to various embodiments. The networked environment  includes one or more computing devices  in data communication with one or more production computing devices  and one or more testing computing devices  by way of a network . The networked environment  also includes one or more clients  in data communication with the computing devices  by way of a network . The network ,  includes, for example, the Internet, intranets, extranets, wide area networks (WANs), local area networks (LANs), wired networks, wireless networks, or other suitable networks, etc., or any combination of two or more such networks. In one embodiment, the networks  and  correspond to the same network. In another embodiment, the network  corresponds to an internal network, while the network  corresponds to an external network.","The computing device  may comprise, for example, a server computer or any other system providing computing capability. Alternatively, a plurality of computing devices  may be employed that are arranged, for example, in one or more server banks or computer banks or other arrangements. For example, a plurality of computing devices  together may comprise a cloud computing resource, a grid computing resource, and\/or any other distributed computing arrangement. Such computing devices  may be located in a single installation or may be distributed among many different geographical locations. For purposes of convenience, the computing device  is referred to herein in the singular. Even though the computing device  is referred to in the singular, it is understood that a plurality of computing devices  may be employed in the various arrangements as described above.","Various applications and\/or other functionality may be executed in the computing device  according to various embodiments. Also, various data is stored in a data store  that is accessible to the computing device . The data store  may be representative of a plurality of data stores  as can be appreciated. The data stored in the data store , for example, is associated with the operation of the various applications and\/or functional entities described below.","The components executed on the computing device , for example, include a service request routing application  and other applications, services, processes, systems, engines, or functionality not discussed in detail herein. The service request routing application  is executed to route service requests obtained from clients  as service requests to production services  executed in the production computing device  by way of the network . In addition, the service request routing application  routes service responses obtained from the production services  back to the clients  by way of the network  as service responses . In some cases, the service request routing application  may be configured to replicate the service requests as service requests to testing services  executed in the testing computing devices  by way of the network . The service request routing application  may also obtain service responses from the testing services , but the service responses are not returned back to the clients . In various embodiments, the service request routing application  may include a proxy server application.","The data stored in the data store  includes, for example, a routing configuration , network keys , stored requests , stored responses , and potentially other data. The routing configuration  specifies how service requests are to be routed. For example, the service request routing application  may provide routing for many different services. The routing configuration  may specify domain names, query strings, and\/or other criteria by which service requests are to be routed to either production services  or testing services . Further, the routing configuration  may specify whether the service requests are to be replicated to the testing services  and whether the service requests are to be stored.","The network keys  are employed to create secured channels of communication to the client , the production computing devices , and\/or the testing computing devices . For example, the service request routing application  may employ different encrypted channels to communicate with the client , the production services , and\/or the testing services . The network keys  may pertain to transport layer security (TLS), secured sockets layer (SSL), and\/or other forms of network-based encryption.","The stored requests  correspond to service requests that may be stored and available for later replay to the testing services . In some cases, only a predefined proportion of the service requests may be stored as stored requests . The stored requests  may be selectable according to various request parameters  such as, for example, session identifiers, user identifiers, geographic location of the client , and\/or other parameters. The stored responses  may correspond to stored versions of the service responses from the production services  and\/or stored versions of the service responses from the testing services . The stored responses  may correspond to all of the service responses , that are obtained by the service request routing application  or a portion thereof.","The production computing device  may comprise, for example, a server computer or any other system providing computing capability. Alternatively, a plurality of production computing devices  may be employed that are arranged, for example, in one or more server banks or computer banks or other arrangements. For example, a plurality of production computing devices  together may comprise a cloud computing resource, a grid computing resource, and\/or any other distributed computing arrangement. Such production computing devices  may be located in a single installation or may be distributed among many different geographical locations. For purposes of convenience, the production computing device  is referred to herein in the singular. Even though the production computing device  is referred to in the singular, it is understood that a plurality of production computing devices  may be employed in the various arrangements as described above.","Various applications and\/or other functionality may be executed in the production computing device  according to various embodiments. Also, various data may be stored in a data store that is accessible to the production computing device . The components executed on the production computing device , for example, include one or more production services  and other applications, services, processes, systems, engines, or functionality not discussed in detail herein. The production service  corresponds to a network service that is in production use. The production service  obtains service requests from the service request routing application  and generates service responses which are returned to the service request routing application . In one embodiment, the production service  corresponds to a web service that communicates using hypertext transfer protocol (HTTP), simple object access protocol (SOAP), and\/or other protocols. The production service  may generate a service response that includes hypertext markup language (HTML), extensible markup language (XML), JavaScript object notation (JSON), and\/or other data.","The testing computing device  may comprise, for example, a server computer or any other system providing computing capability. Alternatively, a plurality of testing computing devices  may be employed that are arranged, for example, in one or more server banks or computer banks or other arrangements. For example, a plurality of testing computing devices  together may comprise a cloud computing resource, a grid computing resource, and\/or any other distributed computing arrangement. Such testing computing devices  may be located in a single installation or may be distributed among many different geographical locations. For purposes of convenience, the testing computing device  is referred to herein in the singular. Even though the testing computing device  is referred to in the singular, it is understood that a plurality of testing computing devices  may be employed in the various arrangements as described above.","Various applications and\/or other functionality may be executed in the testing computing device  according to various embodiments. Also, various data may be stored in a data store that is accessible to the testing computing device . The components executed on the testing computing device , for example, include one or more testing services  and other applications, services, processes, systems, engines, or functionality not discussed in detail herein. The testing service  corresponds to a network service that is currently being tested.","In one embodiment, the testing service  represents a modified or further developed version of the production service . For example, the testing service  may include additional features, performance enhancements, bug fixes, and so on compared to the production service . In one embodiment, the testing service  corresponds to a web service that communicates using HTTP, SOAP, and\/or other protocols. The testing service  may generate a service response that includes HTML, XML, JSON, and\/or other data.","Although the production computing devices  are described separately from the testing computing devices , it is understood that the production services  and the testing services  may be executed by the same production computing devices  in some embodiments. Also, in some embodiments, the testing computing devices  may correspond to a fraction of the computing resources provided by the production computing devices . It is noted that both the production computing devices  and the testing computing devices  may execute multiple different network services concurrently.","The client  is representative of a plurality of client devices that may be coupled to the network . The client  may comprise, for example, a processor-based system such as a computer system. Such a computer system may be embodied in the form of a server computer, a desktop computer, a laptop computer, personal digital assistants, cellular telephones, smartphones, set-top boxes, music players, web pads, tablet computer systems, game consoles, electronic book readers, or other devices with like capability. The client  may include a display comprising, for example, one or more devices such as cathode ray tubes (CRTs), liquid crystal display (LCD) screens, gas plasma-based flat panel displays, LCD projectors, or other types of display devices, etc.","The client  may be configured to execute various applications such as a client application  and\/or other applications. In one embodiment, the client application  may correspond to a browser that is executed, for example, to access and render network pages, such as web pages, or other network content served up by the computing device  and\/or other servers. In another embodiment, the client application  may correspond to a service client and another application that communicates with the service client by way of an application programming interface (API). The client  may be configured to execute applications beyond the client application  such as, for example, mobile applications, email applications, instant message applications, and\/or other applications.","Next, a general description of the operation of the various components of the networked environment  is provided. To begin, a testing service  corresponding to a further developed version of a production service  is deployed in a testing environment with one or more testing computing devices  being provisioned. The production service  is currently deployed by one or more production computing devices  and remains in production throughout the testing phase.","Users at clients  generate service requests using client applications . As an example, a user may request a network page, such as a web page or other form of network content, through a browser. As another example, a user may use a mobile application which requests network data in a service request . Instead of being sent directly to the production service , the service request is sent to the service request routing application . The service request routing application  may correspond to a proxy server application that routes the service request to the production service  as the service request , and the service response to the client  as the service response ","As a non-limiting example, the client  may originate service request that is an HTTP get request for the uniform resource identifier (URI) \u201chttp:\/\/network.site\/?serviceID=256&param1=value1&param2=value2.\u201d The service request routing application  may parse the URI to determine, based at least in part on the routing configuration , that the service request is to be routed to a production service  that has an identifier of \u201c256.\u201d In other words, a \u201cserviceID\u201d parameter in the URI indicates the production service  to which the service request is to be directed. In other cases, such a parameter may depend on other information associated with the service request such as, for example, port number, user agent, referrer, domain name, etc.","If so configured in the routing configuration , the service request routing application  may replicate or clone the service request as a service request to be sent to a testing service . In some configurations, only a predefined proportion of the service requests are cloned as service requests . Consequently, the computing capacity required to test the testing service  may be proportionally reduced as compared with the computing capacity to support the production service . This may facilitate a determination of how much computing capacity will be needed to run the testing service  once it is deployed as a production service . As a non-limiting example, testing computing devices  may be deployed with 20% of the capacity of the production computing devices , but the service request routing application  may be configured to route only 20% of the service requests to the testing computing devices .","Various rules may define how much request traffic is replicated and at what times. Parameters associated with the service requests may be used as input to the rules. As a non-limiting example, a developer may want request traffic that is identified as from a particular geographic area to be replicated but not request traffic from other areas. As another non-limiting example, a developer may want request traffic originating from a particular browser application to be replicated but not request traffic from other browser applications. In one embodiment, the service request routing application  may replicate requests until it detects that the testing service  is saturated with requests.","Regardless of whether a service request is replicated to a testing service , only a service response generated by the production service  is returned back to the client  by the service request routing application . Thus, the testing service  may be tested transparently to the end user. The service responses may be stored in the stored responses . In some cases, a service response from the testing service  may be obtained by the service request routing application  and stored for developer evaluation purposes in the stored responses . For example, the stored responses  may be used for smoke testing, validation testing, and\/or other forms of testing. In one embodiment, the service request routing application  is configured to assess the performance of a testing service  relative to the performance of a production service .","Although the testing service  may be tested in real-time in response to receiving service requests from users, the testing service  may also be tested at a later time. The service requests , or a predefined proportion or sample of the service requests , may be stored as stored requests  in the data store . The stored requests  may then later be played back to the testing service  to simulate user requests as if they were arriving in a stream. To this end, a timestamp may be associated with each stored request  for sequencing and to ensure a commensurate time interval between the stored requests  that are being replayed to the testing service . Various other request parameters  such as a sequence number, session identifier, customer identifier, and so on may be employed to select a portion of the stored requests  to be replayed to the testing services .","In some embodiments, the service request routing application  may be configured to use different network keys  for communicating with the client application , the production service , and the testing service . To this end, the service request routing application  may maintain three separate secured connections performing encryption using the different network keys . In like manner, the service request routing application  may be configured to translate between different session identifiers and other parameters that may be provided by the production service  and the testing service . For example, when the client application  provides in a service request a session identifier that was generated by the production service , the service request routing application  may replace that session identifier in the replicated service request with one generated by the testing service .","In many situations, the production service  and the testing service  may be stateless services, meaning that they do not modify a state in response to service requests . However, the production service  and\/or the testing service  may sometimes be stateful services that do make changes to a state in response to service requests . In such cases, the testing service  may be configured to maintain a separate state from the production service . To the extent that data objects are modified by the production service  and the testing service , the testing service  may be configured to use a copy of the data object as modified by the production service  before the current service request was processed.","It is noted that various stateful services may be supported on a case-by-case basis, with the production services  and testing services  possibly using respective copies of data objects. For instance, the service request routing application  may maintain a client state for the testing service  because the service responses from the testing service  never reach the client . Instead, the service request routing application  may modify the service request to reflect the special client state corresponding to the testing service .","Referring next to , shown is a flowchart that provides one example of the operation of a portion of the service request routing application  according to various embodiments. It is understood that the flowchart of  provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the service request routing application  as described herein. As an alternative, the flowchart of  may be viewed as depicting an example of steps of a method implemented in the computing device  () according to one or more embodiments.","Beginning with box  of , the service request routing application  obtains a service request () from the client  () through an external network  (). In box , the service request routing application  identifies the production service  () which is the primary service to handle the service request . In box , the service request routing application  routes the service request as the service request () to the production service  through the internal network  (). In box , the service request routing application  obtains a service response () from the production service  through the internal network . In box , the service request routing application  sends the service response as the service response () to the client  through the external network . The service request routing application  may also store the service response in the stored responses  ().","Next, in box  of , the service request routing application  determines whether the service request is to be replicated to a testing service  () which is a secondary service. For example, replication may be enabled or disabled in the routing configuration  (). In addition, if replication is enabled, it may be that only a predefined proportion of the service requests are to be replicated, and the current service request may or may not be included in the replicated proportion. If the service request is not to be replicated, the service request routing application  proceeds to box  and determines whether another service request is to be processed. If another service request is to be processed, the service request routing application  returns to box  of  and obtains the next service request . Otherwise, the portion of the service request routing application  ends.","If the service request routing application  instead determines in box  of  that the service request is to be replicated, the service request routing application  proceeds to box . In box , the service request routing application  determines whether the service request is to be replicated in real-time, potentially in parallel with the routing of the service request to the production service . If the service request routing application  determines that the service request is not to be replicated in real-time, the service request routing application  continues to box  and stores the service request in the stored requests  (). Alternatively, the service request routing application  may be configured to store all service requests  for potential future replication. Subsequently, the service request routing application  proceeds to box  and determines whether another service request is to be processed. If another service request is to be processed, the service request routing application  returns to box  of  and obtains the next service request . Otherwise, the portion of the service request routing application  ends.","If the service request routing application  instead determines in box  of  that the service request is to be replicated in real-time, the service request routing application  proceeds to box . In box , the service request routing application  identifies the testing service  which is the secondary service associated with the production service . In box , the service request routing application  replicates the service request as the service request () to the testing service  through the internal network .","In box , the service request routing application  may obtain a service response from the testing service . In box , if a service response were obtained, the service request routing application  may log and\/or store the service response () from the testing service  in the stored responses . It is noted that no service response from the testing service  is returned to the client . In some embodiments, the service request routing application  may be configured to compare values in the service response with values in the service response . Log entries, alarms, and\/or other notifications may be generated responsive to this comparison. Subsequently, the service request routing application  proceeds to box  and determines whether another service request is to be processed. If another service request is to be processed, the service request routing application  returns to box  of  and obtains the next service request . Otherwise, the portion of the service request routing application  ends.","Turning now to , shown is a flowchart that provides one example of the operation of another portion of the service request routing application  according to various embodiments. It is understood that the flowchart of  provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the other portion of the service request routing application  as described herein. As an alternative, the flowchart of  may be viewed as depicting an example of steps of a method implemented in the computing device  () according to one or more embodiments.","Beginning with box , the service request routing application  obtains a request to replay stored service requests (). In box , the service request routing application  obtains a stored service request from the stored requests  () in the data store  (). In box , the service request routing application  identifies the testing service  () corresponding to the secondary service to which the service request is to be replicated.","In box , the service request routing application  replicates the stored service request to the testing service  as a service request () through the internal network  (). In some scenarios, only a predefined proportion of the stored requests  or a portion selectable based at least in part on the request parameters  () is replicated. Also, to replay the service requests , the service request routing application  may utilize a timestamp associated with each service request for sequencing and to approximate the time intervals between service requests ","In box , the service request routing application  may obtain a service response from the testing service . In box , the service request routing application  may log the service response. In box , the service request routing application  determines whether another stored service request remains to be processed. If another stored service request remains to be processed, the service request routing application  returns to box  and obtains another stored service request . If no other stored service requests remain to be processed, the portion of the service request routing application  ends.","Moving on to , shown is a flowchart that provides one example of the operation of a portion of the testing service  according to various embodiments. It is understood that the flowchart of  provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the testing service  as described herein. As an alternative, the flowchart of  may be viewed as depicting an example of steps of a method implemented in the testing computing device  () according to one or more embodiments.","Beginning with box , the testing service  obtains a service request () from the service request routing application  (). In box , the testing service  determines whether the service request is a stateful service request . If the service request is determined not to be a stateful service request  (i.e., the request is a stateless service request ), the testing service  moves to box  and processes the service request . In box , the testing service  returns a service response to the service request routing application . Thereafter, the portion of the testing service  ends.","If, instead, the testing service  determines in box  that the service request is a stateful service request , the testing service  continues from box  to box  and processes the service request using a copy of one or more data objects. The copy is not yet updated in response to the service request () by a production service  () that is the corresponding primary service of the testing service . In box , the testing service  updates a copy of the data objects to reflect any state changes made by the production service . In other words, in one embodiment involving processing of stateful service requests , only the production service  makes changes to stored states. In box , the testing service  may return a service response to the service request routing application . Thereafter, the portion of the testing service  ends.","With reference to , shown is a schematic block diagram of the computing device  according to an embodiment of the present disclosure. The computing device  includes at least one processor circuit, for example, having a processor  and a memory , both of which are coupled to a local interface . To this end, the computing device  may comprise, for example, at least one server computer or like device. The local interface  may comprise, for example, a data bus with an accompanying address\/control bus or other bus structure as can be appreciated.","Stored in the memory  are both data and several components that are executable by the processor . In particular, stored in the memory  and executable by the processor  are the service request routing application  and potentially other applications. Also stored in the memory  may be a data store  and other data. In addition, an operating system may be stored in the memory  and executable by the processor .","It is understood that there may be other applications that are stored in the memory  and are executable by the processor  as can be appreciated. Where any component discussed herein is implemented in the form of software, any one of a number of programming languages may be employed such as, for example, C, C++, C#, Objective C, Java\u00ae, JavaScript\u00ae, Perl, PHP, Visual Basic\u00ae, Python\u00ae, Ruby, Delphi\u00ae, Flash\u00ae, or other programming languages.","A number of software components are stored in the memory  and are executable by the processor . In this respect, the term \u201cexecutable\u201d means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be, for example, a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory  and run by the processor , source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory  and executed by the processor , or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory  to be executed by the processor , etc. An executable program may be stored in any portion or component of the memory  including, for example, random access memory (RAM), read-only memory (ROM), hard drive, solid-state drive, USB flash drive, memory card, optical disc such as compact disc (CD) or digital versatile disc (DVD), floppy disk, magnetic tape, or other memory components.","The memory  is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus, the memory  may comprise, for example, random access memory (RAM), read-only memory (ROM), hard disk drives, solid-state drives, USB flash drives, memory cards accessed via a memory card reader, floppy disks accessed via an associated floppy disk drive, optical discs accessed via an optical disc drive, magnetic tapes accessed via an appropriate tape drive, and\/or other memory components, or a combination of any two or more of these memory components. In addition, the RAM may comprise, for example, static random access memory (SRAM), dynamic random access memory (DRAM), or magnetic random access memory (MRAM) and other such devices. The ROM may comprise, for example, a programmable read-only memory (PROM), an erasable programmable read-only memory (EPROM), an electrically erasable programmable read-only memory (EEPROM), or other like memory device.","Also, the processor  may represent multiple processors  and the memory  may represent multiple memories  that operate in parallel processing circuits, respectively. In such a case, the local interface  may be an appropriate network that facilitates communication between any two of the multiple processors , between any processor  and any of the memories , or between any two of the memories , etc. The local interface  may comprise additional systems designed to coordinate this communication, including, for example, performing load balancing. The processor  may be of electrical or of some other available construction.","Although the service request routing application , the production service  (), the testing service  (), the client application  (), and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above, as an alternative the same may also be embodied in dedicated hardware or a combination of software\/general purpose hardware and dedicated hardware. If embodied in dedicated hardware, each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include, but are not limited to, discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals, application specific integrated circuits having appropriate logic gates, or other components, etc. Such technologies are generally well known by those skilled in the art and, consequently, are not described in detail herein.","The flowcharts of  show the functionality and operation of an implementation of portions of the service request routing application  and the testing service . If embodied in software, each block may represent a module, segment, or portion of code that comprises program instructions to implement the specified logical function(s). The program instructions may be embodied in the form of source code that comprises human-readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor  in a computer system or other system. The machine code may be converted from the source code, etc. If embodied in hardware, each block may represent a circuit or a number of interconnected circuits to implement the specified logical function(s).","Although the flowcharts of  show a specific order of execution, it is understood that the order of execution may differ from that which is depicted. For example, the order of execution of two or more blocks may be scrambled relative to the order shown. Also, two or more blocks shown in succession in  may be executed concurrently or with partial concurrence. Further, in some embodiments, one or more of the blocks shown in  may be skipped or omitted. In addition, any number of counters, state variables, warning semaphores, or messages might be added to the logical flow described herein, for purposes of enhanced utility, accounting, performance measurement, or providing troubleshooting aids, etc. It is understood that all such variations are within the scope of the present disclosure.","Also, any logic or application described herein, including the service request routing application , the production service , the testing service , and the client application , that comprises software or code can be embodied in any non-transitory computer-readable medium for use by or in connection with an instruction execution system such as, for example, a processor  in a computer system or other system. In this sense, the logic may comprise, for example, statements including instructions and declarations that can be fetched from the computer-readable medium and executed by the instruction execution system. In the context of the present disclosure, a \u201ccomputer-readable medium\u201d can be any medium that can contain, store, or maintain the logic or application described herein for use by or in connection with the instruction execution system. The computer-readable medium can comprise any one of many physical media such as, for example, magnetic, optical, or semiconductor media. More specific examples of a suitable computer-readable medium would include, but are not limited to, magnetic tapes, magnetic floppy diskettes, magnetic hard drives, memory cards, solid-state drives, USB flash drives, or optical discs. Also, the computer-readable medium may be a random access memory (RAM) including, for example, static random access memory (SRAM) and dynamic random access memory (DRAM), or magnetic random access memory (MRAM). In addition, the computer-readable medium may be a read-only memory (ROM), a programmable read-only memory (PROM), an erasable programmable read-only memory (EPROM), an electrically erasable programmable read-only memory (EEPROM), or other type of memory device.","It should be emphasized that the above-described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above-described embodiment(s) without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Many aspects of the present disclosure can be better understood with reference to the following drawings. The components in the drawings are not necessarily to scale, emphasis instead being placed upon clearly illustrating the principles of the disclosure. Moreover, in the drawings, like reference numerals designate corresponding parts throughout the several views.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIGS. 2A","FIG. 1"],"b":["2","3"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 5","FIG. 1"]}]},"DETDESC":[{},{}]}
