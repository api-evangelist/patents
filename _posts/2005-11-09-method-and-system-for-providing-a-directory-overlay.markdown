---
title: Method and system for providing a directory overlay
abstract: According to one embodiment, a method for providing an enhanced directory service includes providing a supplemental layer between a user and a reference layer, the supplemental layer providing the user with any directory functionality provided by the reference layer as well as additional directory functionality.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08458176&OS=08458176&RS=08458176
owner: CA, Inc.
number: 08458176
owner_city: Islandia
owner_country: US
publication_date: 20051109
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE","TECHNICAL FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION OF EXAMPLE EMBODIMENTS","EXAMPLE 1"],"p":["This application is being filed concurrently with the following applications, which are incorporated herein by reference: \u201cMethod and System for Configuring a Supplemental Directory,\u201d having a serial number of Ser. No. 11\/270,794; \u201cMethod and System for Providing Enhanced Read Performance for a Supplemental Directory,\u201d having a serial number of Ser. No. 11\/270,795; \u201cMethod and System for Improving Write Performance in a Supplemental Directory,\u201d having a serial number of Ser. No. 11\/270,896; \u201cMethod and System for Automatic Registration of Attribute Types,\u201d having a serial number of Ser. No. 11\/270,320; \u201cSystem and Method for Routing Directory Service Operations in a Directory Service Network,\u201d having a serial number of Ser. No. 11\/269,551; \u201cSystem and Method for Efficient Directory Performance Using Non-Persistent Storage,\u201d having a serial number of Ser. No. 11\/269,637; \u201cSystem and Method for Providing a Directory Service Network,\u201d having a serial number of Ser. No. 11\/269,638; and \u201cSystem and Method for Writing Data to a Directory,\u201d having a serial number of Ser. No. 11\/270,188.","This invention relates generally to directory services and more particularly to a method and system for providing a directory overlay.","In today's networked environment there are many instances of directories used for many different purposes. Example directories include Network Operating System Directories such as for managing logins, file-systems, and printers; Security Directories such as for single sign-on, web access management, and service management; application specific directories, such as online telephone directories, location directories, and email directories; and publishing directories, such as white pages, yellow pages, and blue pages.","In practice, many directories operate in isolation from each other, resulting in problems. One such problem is duplication of data, which may result in inconsistencies between servers depending on how the data is updated. Another problem is fragmentation of data, which results when different systems store data in different ways. Another problem is that management and administration of separate systems can be tedious and duplicated. Further, there can be problems with privileges and enforcing organizational wide policies between systems. With respect to standards, vendors have proprietary systems with many proprietary extensions and vendors are not obligated to adopt a common standard. In addition, sharing of databases or their customization is difficult; one operations group may \u201cown\u201d a particular directory and will not allow it to be used, written to, or extended by another group or other applications.","According to one embodiment, a method for providing an enhanced directory service includes providing a supplemental layer between a user and a reference layer, the supplemental layer providing the user with any directory functionality provided by the reference layer as well as additional directory functionality.","Embodiments of the invention may provide numerous technical advantages. Some, none, or all embodiments may benefit from the below described advantages. According to one embodiment, a supplemental directory service may make a directory that is read-only appear writable to a user. Further, in some embodiments, a directory that has a fixed or limited directory information tree (DIT) can appear to have an extensible one. Further, in some embodiments a directory with a fixed schema can appear to have its schema extendable to a user. In some embodiments, a directory that has security restrictions can appear to have a supplemented security to a user. Also, in some embodiments, a directory that does not have replicating capability can appear to replicate to another directory. Moreover, in some embodiments, a directory that has limited replication capability can appear to have enhanced replication capability. Also, a directory that is relatively slow can appear to perform much better, in some embodiments.","In addition, in some embodiments, a directory having certain policies can appear to have altered or enhanced policies, such as altered or enhanced administration limits. In some embodiments, a directory with certain associations can appear to have altered or enhanced network associations, for example trust or knowledge of other servers. In some embodiments, a directory without certain features or capabilities can appear to support new features or capabilities, such as the capability to count entries, having non-persistent attributes, and the capability to automatically register attributes. Further, in some embodiments, a directory configured with one or more context prefixes can appear to have different context prefixes.","Other technical advantages will be apparent to one of skill in the art.","Embodiments of the present invention and its advantages are best illustrated by referring to  of the drawings, like numerals being used for like parts of the various drawings.","The teachings of some embodiments of the invention recognize that the above-described difficulties in sharing and customization in directories is particularly significant. Many organizations have corporate directory systems for staff, networking, and other purposes. These directory systems are usually controlled by an MIS or GIS group. However, many types of applications would like to extend these directories for their own use. For example, a single-sign-on application may wish to add session data to each person's staff object. Usually this is not possible because the MIS\/GIS groups often do not make their directory visible to applications, make them visible but only read-only, or may allow reading and writing of only a fixed set of information, but not for new types of data. There have been three main approaches to the many directories problems described above. These are partitioning, meta directories, and virtual directories.","Partitioning involves an attempt by design, to avoid duplication by separating information amongst separate directories.  is a block diagram showing an example of partitioning. In this case a directory system  is shown having two directories, directory  and a corresponding data store , and another directory  and a corresponding data store . Information in directories  and  is provided separately to a client  who must connect separately to each directory in order to access desired information. For example, directory  may be a Network Operating System (NOS) directory managing staff, file-systems, printers, logins, and other devices or files while directory  may contain application information such as customers, billing information, and subscribed services. This works poorly if the directories  and  must contain related information and\/or require that client  understands which directories ,  maintain which information.","Meta directories involve a synchronization mechanism whereby an independent store of information is maintained and information is periodically imported and exported with external directories. An example is shown , which is a block diagram showing an example use of meta directories. In this case a directory system  is shown having a first directory  with corresponding data store  and a second directory  with a corresponding data store  and a meta directory . This approach suffers from the problem of scaling poorly because meta directory  must keep a copy of all data to be synchronized across all directories  and  and does not handle real time updates well. For example, clients  may obtain different results depending on from which directory ,  they request shared information. This is due primarily to synchronization delays.","Virtual directories utilize a mapping mechanism whereby queries are disassembled and results re-assembled across several directories.  is a block diagram showing an example of a virtual directory system . In this case there is a first directory  with a corresponding data store , a second directory  with a corresponding data store , and intermediate a client  there is a virtual directory . Virtual directory  provides a view of data in underlying directories  and  by retrieving the data and mapping and combining the data into a single synthesized view. For example, if the underlying directory  or  has data arranged by organization, virtual directory  can re-assemble the data to appear as if it were arranged by location. However, teachings of some embodiments of the invention recognize that virtual directory  has the limitation that it does not store supplemental data (user data which augments the underlying directories). Thus, all mapping is done dynamically. Virtual directory  also has problems handling updates because there can be a many-to-many relationship between the synthesized view and the real data, which results in a single update to an entry in virtual directory  requires a large number of changes in the real underlying directory  or .","It is also possible to combine any or all of the above approaches.  is a block diagram illustrating an example of the combination of the above approaches. In this case, combination directory system  includes a first directory  with a corresponding data store  and a second directory  with a corresponding data store  and a client . Directories  and  are synchronized by a meta directory  and client  can view the directory data via a virtual directory . In practice, this arrangement suffers from the same problems as those described above in conjunction with ,  and .","Certain embodiments of the present invention address the above-described problems and can provide directory operations in the case where there are restrictions on an existing directory server.  is a block diagram of a directory system  according to one embodiment of the invention. As illustrated in , a supplemental layer  is provided intermediate a reference layer, or in this case a reference directory , and a client . According to one embodiment, intermediate layer , or overlay, is utilized to supplement reference directory  by managing extra data, managing extra data types, managing extra security, and\/or other functions. To user , overlay  may be transparent, but overlay  makes it look like underlying reference directory  is being interrogated and manipulated. As described in greater detail below, user  can be a person, an application or another directory.","Thus, according to the teachings of some embodiments of the invention, the ability to supplement a reference directory  is provided. This may be necessary when there are restrictions on the reference directory .","In operation of one embodiment, overlay  handles all queries and updates, handles the storage and retrieval of extra data, and interacts with reference directory  as if all of that data was local to overlay ; however, in some embodiments, overlay  may handle only some of the queries and updates. In contrast, some prior approaches for handling a restriction on reference directory  involve copying all the information from reference directory  into another directory and then having mechanisms to keep the directories synchronized. This can be a lengthy process and has many drawbacks, including attribute synchronization issues. Overlay  works alongside reference directory , one example of which is Microsoft Active Directory. This provides a supplemented view of all the information combined from reference directory  overlaid with information from overlay . Such supplemental information may reside in a supplemental store, as described in greater detail below in conjunction with . According to one embodiment, overlay  is not co-located with reference directory , which means it may be on a separate machines. According to another embodiment the overly  may hide from the user information contained in the reference directory . This combining of information in real-time may alleviate the need for data synchronization as well as provides extensibility, flexibility and\/or added performance.","Reference directory  is a directory server that services client operations, in one embodiment. The information in reference directory  may be stored in a reference store, as described in greater detail below in conjunction with . In addition to the information stored in the reference store, reference directory  may include conventional or yet-to-be developed functionality for interacting with user  or with another directory.","User , which is also referred to herein as, and may take the form of, a client or application, is an entity that makes a directory request. User  may be a person, an application, or another directory, and any user may include other directory servers.","As described above, in some, but not necessarily all embodiments, advantages include, in general, where directory  has certain features or performance characteristics or is lacking certain features or performance characteristics, overlay  can, in effect, provide an altered or supplemented feature and performance characteristic set to that directory. Additional details of example embodiments are described below.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 6","b":["100","114","104","102","114","102"]},"Attributes A are stored in reference directory  in entries. Reference directory  has a reference store . Reference store  represents the information stored in reference directory . One example of a reference store  is Microsoft Active Directory. Attributes B and additional entries  are stored in supplemental directory  having a supplemental store . Supplemental store  represents the supplemental information stored in supplemental directory . It is noted that supplemental store  may be empty and need not conform to any directory rules, in one embodiment. For example, supplemental store  may contain partial entries and entries with no parent. Supplemental directory  includes an overlay unit , described in greater detail below.","Supplemental directory  presents a client view . In the case of attributes, client  will see reference directory  having attributes A supplemented with the supplemental directory  having attributes B. This results in entries  having attributes A and B while other entries  retain the structure and attributes of the reference directory .","In the case of entries, client  will see reference directory  having entries  supplemented with the supplemental directory . This results in additional entries  that are not present in reference directory . The additional entries  have structure and attributes as provided by supplemental store .","It should also be noted that the supplemental directory  can also \u201cmask out\u201d information, the effect being that the user may not be able to see (retrieve or search) attributes and\/or entries in the reference directory .","Four main aspects of client view directory  are described below with reference to .  is a block diagram illustrating aspects of client view directory . These aspects are client view directory structure , client view directory schema , operation  of the client view directory, and the partial nature  of client view directory .","Client view directory structure  is the hierarchical shape of client view directory . In one embodiment, supplemental directory  has the same context prefix and structure of reference directory . In other embodiments, supplemental directory  overlies all or part of one or more reference directories  and\/or supplemental directories . This means the view is made up of smaller subtrees each being grafted into the general view, possibly using prefix mapping (see below). Thus the view or DIT (Directory Information Tree) seen by the user is made up of one or more views\/DITs from one or more reference directories. Supplemental directory  could also have more than one prefix, which could be superior or subordinate to reference directory .","In one embodiment, the content of supplemental directory  is that of reference directory ; however, supplemental directory  can also supplement reference directory  by having extra attributes in any of the entries, such as entries . In one embodiment, the structure of supplemental directory  is that of reference directory ; however, supplemental directory  can also supplement reference directory  by having extra entries. Supplemental directory  may not have a Directory Information Tree initially unless pre-loaded. A Directory Information Tree (DIT) defines the hierarchy of information in a directory. In contrast, a Directory Information Base (DIB) refers to the information stored in a particular directory server. It is also noted that a Directory System Agent (DSA) refers to the directory process looking after all or part of the DIT or routing or relaying of requests. Further, as used herein \u201cinternal attributes\u201d refers to attributes contained in supplemental store  (or other portions of supplemental directory ), and \u201cexternal attributes\u201d refers to attributes contained in reference store  (or other portions of reference directory ). Likewise, \u201cinternal object classes\u201d refers to object classes contained in supplemental store  (or other portions of supplemental directory ) and \u201cexternal object classes\u201d refers to object classes contained in reference store  (or other portions of reference directory ).","In one embodiment, renaming reference entries directly will orphan supplemental entries. However the supplemental directory  may prune and graft its supplemental entries, such as entries , to maintain the structure.","Client view directory schema  comprises the attribute types that the client view directory  appears to support. In one embodiment, attributes will either be internal or external. An internal attribute refers to an attribute stored in supplemental store , and an external attribute refers to an attribute stored in reference store . In some embodiments, the attributes may be copied between reference store  and supplemental store , for example to name an entry. A duplicate attribute may also be utilized in some embodiments, in which case the supplemental value will replace the reference value. The supplemental schema of supplemental directory  may implicitly contain the reference stores schema as a subset. In one embodiment, supplemental directory  will dynamically discover the schema of reference directory  so that it does not have to be preconfigured.","The behavior of the client view directory  is referred to herein as operations . If no internal attributes exist in supplemental directory , supplemental directory  may proxy the reference directory . For example, reading an entry will simply chain the request and response to or from the reference directory. Supplemental directory  may mask out or replace attributes and\/or entries of reference directory . For any given operation, supplemental directory  may need to break the operation up into many operations, with none or more which are done locally on the supplemental directory  and the remaining done on the reference directory .","In one embodiment, when supplemental directory  supplements information from reference directory  it does so on the basis that the information is uniquely identifiable, for example, based on the Distinguished Name of the entry associated with the supplement information. In one embodiment, reference store  handles its own replication. However, it is also possible to duplicate the writes to replicate reference directories  if desired. Supplemental directory  may have permissions in reference directory . This can be achieved via a proxy user, the credentials passed through from user , or through other suitable techniques.","The partial nature  of client view directory  is described herein. In one embodiment, supplemental directory  will overlay a single reference directory  that has no subordinate directories (as shown in ). However, in other embodiments, supplemental directory  may chain or multi-chain operations to subordinates directories. Apart from structure, supplemental directory  may be independent of reference directory . Supplemental store  may not be subject to normal schema rules. For example, entries need not have parents, entries can be partial, entries can exist without object classes or mandatory attributes, etc. However, in one embodiment, supplemental directory , which services user operations by supplementing reference directory , will appear to obey all directory rules, such as schema. In one embodiment, supplemental directory  may internally use glue DSE (Directory System Entries) entries, for example to represent an object in the reference directory . Glue DSE entries allow entries to be added to a directory without parent nodes existing. The present nodes are stored as name only, with no object classes or attributes, and this cannot usually be searched.","Operation of overlay unit  within the supplemental directory  is described in greater detail below with reference to .  is a flowchart illustrating operation of one embodiment of directory system . The steps shown in  may be executed by, or in cooperation with, overlay unit , or through other suitable techniques. Overlay unit  may comprise software encoded in computer-readable medium, firmware, or other suitable structure operable to perform desired operations of overlay unit . Although illustrated as a flowchart for simplicity of description, these steps may occur in a different order and any of these may be omitted.","In a system containing a plurality of directories, such as system , it is desirable to nominate at least one directory to be the supplemental directory , and it is desirable to mark at least one directory to be the reference directory . The supplemental or the reference directory can be marked using a configuration setting, as illustrated at step .","Preferably, a reference directory, such as reference directory , is to be associated with a supplemental directory, such as supplemental directory . Alternatively, more than one supplemental directory can be associated with one reference directory. Furthermore, a single supplemental directory can be associated with more than one reference directory. The associations can be defined by configuration settings. An example of configuration settings is shown below.",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"set dsa REF ="},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"prefix = <o CA><ou Staff>"]},{"entry":[{},"native-prefix = <dc local><dc ca>"]},{"entry":[{},"dsa-name = <cn \u201cstaff-reference\u201d>"]},{"entry":[{},"ldap-dsa-name = <dc local><dc ca><cn users><cn administrator>"]},{"entry":[{},"ldap-dsa-password = \u2033ad-password\u2033"]},{"entry":[{},"address = tcp \u2033msad\u2033 port 389"]},{"entry":[{},"dsa-flags = overlay-reference"]},{"entry":[{},"trust-flags = no-server-credentials, allow-check-password"]},{"entry":[{},"link-flags = dsp-ldap"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":"set dsa OVERLAY ="},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"prefix","= <o CA><ou Staff>"]},{"entry":[{},"dsa-name","= <c AU><cn overlay>"]},{"entry":[{},"dsa-password","= \u2033secret\u2033"]},{"entry":[{},"address","= tcp \u2033echidna\u2033 port 30000"]},{"entry":[{},"disp-psap","= DISP"]},{"entry":[{},"snmp-port","= 30000"]},{"entry":[{},"console-port","= 30001"]},{"entry":[{},"ssld-port","= 1112"]},{"entry":[{},"auth-levels","= anonymous, clear-password"]},{"entry":[{},"dsa-flags","= multi-write, overlay"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"trust-flags = allow-check-password, trust-conveyed-originator"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"From the above it can be seen that reference directory  is marked with the flag \u201coverlay-reference.\u201d Also, supplemental directory  is marked with the flag \u201coverlay.\u201d The reference and supplemental directories are associated by virtue of having the same prefix. Note in this example, reference directory  has its own prefix, but this is prefixed mapped by supplemental directory . It is noted that directory system  can contain directories which are neither reference nor supplemental directories.","At step  initialization occurs. During initiation, overlay unit  determines which information is internal, that is the attributes types and object classes maintained by supplemental store  and which information is external, that is, the attributes types and object classes maintained by the reference directory . In one embodiment the internal and external attributes and object classes can be defined in the configuration. In another embodiment, the external attributes and object classes can be discovered by connecting to reference directory  and reading its schema. Initialization  completes when reference directory  is available.","At this point directory system  is ready for use, and client  may interact with it, as indicated at step . Additional details of this client interaction are described with respect to .","Supplemental directory  may replicate its information to another directory if configured to do so, as indicated by step . The replication may include any or a combination of supplemental information, reference information, or selected information.","There are some situations where it might be advantageous to perform operations ignoring the reference directory , for example to replace an attribute in reference directory  or to assist in the discovery and maintenance of orphan entries, as indicated at step . To do this, a client  may pass a special bypass control. For example, to discover orphan entries, an application could retrieve supplemental entries, such as entries , (with bypass control present) and perform a base object search (no bypass control) for each entry retrieved\u2014any base object searches failing with \u2018no-such-object\u2019 indicate orphan entries. Orphans could be maintained via updates with bypass control present.","An example control \u201coverlayreferenceBypassControl\u201d could be defined as follows:\n\n",{"@attributes":{"id":"p-0063","num":"0066"},"figref":"FIG. 9","b":["302","304","306","308","310","312","314","316","318","320","322","110"]},"After initiation, reference directory  is available, and client  may attempt to access, or bind , to supplemental directory . When client  binds to supplemental directory , the supplemental directory  will attempt to authenticate client  locally. If overlay unit  does not have enough information, for example not having a UserPassword attribute, the bind request is passed to reference directory  in response to which a bind confirm or bind refused is returned. In the case of a DSP (Directory System Protocol) bind from another directory, then configured credentials may be used, for example ldap-dsa-name, ldap-dsa-password, as shown in the example above.","When a client unbinds  from supplemental directory , supplemental directory  may optionally unbind from the reference directory.","When a client abandons  an operation sent to supplemental directory , supplemental directory  may optionally send an abandon  to reference directory .","Read  may occur in a similar manner to a search with no filter, as described in greater detail below.","List  may occur in a similar manner to a one-level search with no filter, as described in greater detail below.","On receipt of a search request  the attributes contained in the search request are checked by overlay unit . Different actions are taken depending on the type of search. These actions are described in greater detail below in conjunction with .","On receipt of a compare request  by overlay unit , the assertion attribute will be checked. If the assertion attribute is external, the compare is performed against reference directory , otherwise the compare is performed locally against supplemental directory . The results are then returned to client .","An add-entry operation  may be classed as internal, external or both. An internal add-entry is the case where add-entry operation  only includes internal attributes and internal object classes. In this case the external parent may be checked. If it is not internal, then the add-entry is performed against reference directory  (providing it is not marked \u2018read-only\u2019) and any internal attributes stripped. If the Add was successful and internal attributes exist, a local add-entry containing these internal attributes will be performed. The results are then returned to client .","Entry removal  will be performed against both reference store  (if not marked \u2018read-only\u2019) and locally on supplemental store . If unable to remove from reference store , an error is returned without doing the remove locally on supplemental store .","On receipt of a modify-entry request  the attributes will be checked by the overlay unit  to determine if they are internal or external, or if the modify-entry request  contains both. A modify-entry operation  containing external attributes only can be passed straight to reference directory  (if not marked \u2018read-only\u2019) without any local processing. A modify-entry  of internal attributes only is performed locally on supplemental directory  if the entry exists in reference directory . If the entry does not exist locally, it is created. For, a modify-entry  containing a mixture of internal and external attributes, the modify will be rejected if reference directory  is marked \u2018read-only\u2019. The mixed attribute modify will be split into a reference modify-entry containing the external attributes and a supplemental directory modify containing the internal attributes. The reference modify-entry will be performed first. The success of this will indicate to the internal modify-entry that an entry already exists and the local modify-entry can proceed.","A modify DN request , which stands for renaming a directory, will be forwarded to reference directory  (if not marked \u2018read-only\u2019). If successful the request is performed locally on supplemental store .","Other client interaction block  is also illustrated in . Client interactions other than the example interactions described above may be handled in a manner analogous to those described above or may be handled as otherwise appropriate according to the skill of one in the art.",{"@attributes":{"id":"p-0076","num":"0079"},"figref":"FIG. 10","b":["312","402","104","114","404","104","114"]},"Searches with a filter containing only internal attributes  may be performed locally at supplemental directory . For each entry returned a reference base object search is performed on reference directory  and the attributes returned supplemented into the entry.","Searches with a filter containing a \u201cNOT\u201d of an external attribute  may be performed against reference directory . For each entry returned, a local base object search is performed on the supplemental directory  and the attributes returned supplemented.","Searches with a filter containing a NOT of an internal attribute  will be performed locally on supplemental directory . For each entry returned a reference base object search is performed on reference directory  and the attributes returned supplemented into the entry.","Searches containing an OR filter with a mixture of internal and external attributes  may be split into two searches. For each reference directory  entry returned, a local base object search is performed on reference directory  to retrieve the entry's internal attributes. For each supplemental directory  entry returned, a base object search is performed against reference directory  to retrieve the entry's external attributes. The combined results are returned to client .","Searches containing an AND filter with a mixture of internal and external attributes  may be split into two searches, one local on supplemental directory  and one on reference directory  and the common set of entries determined. For each common entry, both a local base object search and a base object search is performed against reference directory  to retrieve all the common entry's attributes.","Searches containing any combination of ANDs, ORs or NOTs can be evaluated using a combination of the above individual techniques. For example, a complex filter expression can be expanded using Boolean algebra into a disjunctive normal form, from which the NOT then AND then OR techniques can be applied, though not necessarily in that order.","Other searches block  is also illustrated in . Searches other than the example searches described above may be handled in a manner analogous to those described above or may be handled as otherwise appropriate according to the skill of one in the art.","Any search performed against reference directory  that results in an error (including base-object searches retrieving attributes) may result in an error being sent to client . Any internal errors in the supplemental directory  except \u2018no-such-object\u2019 may be sent to client .",{"@attributes":{"id":"p-0085","num":"0088"},"figref":"FIG. 11","b":["400","400","404","414","400","410","404","414","415","415","416","414"]},"In operation, a query , for example a read, list, search, compare, bind, or other query is analyzed at step  to determine whether the query can be wholly performed with reference to non-persistent information store . This determination may be in accordance with \u201cMethod of Selecting a Processor for Query Evaluation,\u201d having a Ser. No. 11\/134,070, filed May 20, 2005, which is incorporated herein by reference. If the query can be wholly performed with reference to non-persistent information store , then query  is directed to non-persistent information store , as indicated by reference numeral , and the result is returned to client . Otherwise, query  is directed to overlay unit , which may be analogous to overlay unit , as indicated by reference numeral . Query  may alternatively be forwarded directly to overlay unit .","When query  is directed to overlay unit , overlay unit  may perform a number of operations, zero or more of which may be directed to reference directory  as indicated by reference numeral  and\/or zero or more of which may be directed locally. The operations that are directed locally to reference directory  are evaluated by reference directory  and the result is returned to overlay unit .","For operations that are directed locally, as indicated by reference numeral , further determination  is made as to whether the query can be evaluated by the non-persistent information store  or persistent information store . This determination may be made in accordance with U.S. Ser. No. 11\/134,670, described above. In one embodiment, preference is given to non-persistent information store , which results in greater speed. The operations that are directed locally are evaluated by either non-persistent information store  or persistent store . In the case where there is no persistent information store , the operations directed locally, as indicated by reference numeral , are evaluated by non-persistent information store . After local evaluation, a result is returned to overlay unit .","When the operations performed by overlay unit  are completed, a result is returned to user .",{"@attributes":{"id":"p-0090","num":"0093"},"figref":"FIG. 12A","b":["500","500","514","504","500","510","504","515","514","514","516","518","514","518","522","520"]},"Supplemental directory  includes logic  and buffers , , , and . Alternatively, logic  may be included in overlay unit .","In operation, an update  is received from client  by logic , and is processed with reference to .  is a flowchart illustrating processing of an update  received by logic  from client . The steps of the flowchart of  may be performed by logic , or other suitable device. Update  is a directory update operation, such as add-entry, remove-entry, modify-entry, modify-DN, or remove-entry. A test  checks for any attributes not yet processed. If there are attributes to be tested, path  is followed and the attribute is tested repeatedly, for example at test , test , test , and test . The number of order of tests may vary as required, dependent on the particular implementation.","In this embodiment, test  checks to determine whether the attribute needs to be cached. This includes cases where the attribute is temporary, persistent, or cached. Where the attribute is temporary, the supplemental attribute is store only in non-persistent store . Where the attribute is persistent, the supplemental attribute is store in at least non-persistent stores  and , and optionally further additional peer directories. Where the attribute is cached, this indicates it is an external attribute of reference directory , which is configured to be stored in non-persistent store . If the attribute is to be cached, it is forwarded to buffer  as indicated by reference numeral . In any case, the same attribute continues to be tested, as indicated by reference numeral .","Test  checks to determine if the attribute is permanent. This includes the case where the attribute is permanent internal or copied. Permanent internal refers to a supplemental attribute stored in persistent store . A copied attribute refers to an external attribute of reference directory  that is configured to be stored in persistent store . If the attribute is permanent, it is forwarded to buffer , as indicated by reference numeral . In any case, the same attribute continues to be tested, as indicated by reference numeral .","Test  checks to determine whether the attribute is external. The attribute is external when the supplemental attribute is stored in reference directory . If the attribute is external, it is forwarded to buffer , as indicated by reference numeral . In any case, the same attribute continues to be tested, as indicated by reference numeral .","At test  the attribute is checked to determine whether it is replicated. This includes the cases where the attribute is persistent, as described above, and replicated external. Replicated external refers to a supplemental attribute stored in reference directory  that is configured to be replicated to peer directory . If the attribute is to be replicated, it is forwarded to buffer , as indicated by reference numeral . In any case, path  is then followed returning to test  to again check for any attributes not yet processed.","If there are no more attributes to be associated with update  to be processed, then path  is followed and the contents of the respective buffers are applied as necessary and in any order. The attributes in buffer  are applied to non-persistent store , as indicated by reference numeral . Attributes in buffer  are applied to persistent store  as indicated by reference numeral . Attributes in buffer  are incorporated into an update operation, as indicated by reference numeral , which is then sent to reference directory . Attributes in buffer  are incorporated into an update operation, as indicated by reference numeral , which is then sent to peer directory .","The application of the attributes is consistent with the type of operation. For example, an add-entry would add attributes, a remove-entry would delete attributes, etc. Furthermore, the application of the attributes can be applied at any time, not necessarily waiting full completion of the various tests noted above. Additionally, the update operations , , , and  can occur in any order or in parallel.","When update operation  performed by a supplemental directory  is completed, a result is returned to client .","According to another embodiment of the invention, a method and system for automatically registering attribute definitions in a directory server are provided. The directory server may include X.500, LDAP directory servers, or other servers. Normally, attribute definitions must be pre-configured, or the schema configuration of the directory server is changed before a new attribute can be used. According to this aspect of the invention, an attribute is automatically configured during its first use. One advantage of some embodiments of this aspect of the invention is the provision of flexibility of schema. The need to pre-configure every attribute that will be used is removed, which allows applications using the directory to expand the information types they store without reconfiguration, or checking what the configuration is first. The ability to automatically register attributes could have the effect of bypassing schema controls which would not be desirable for operational reasons. Certain embodiments of this aspect of the invention solves this further problem by allowing the selective registration of attributes to be constrained in particular directory objects.",{"@attributes":{"id":"p-0101","num":"0104"},"figref":"FIG. 13","b":["600","600","602","604","606","608","602","600","604","602","606","600","608","600"]},"In the illustrated embodiment, directory schema  includes an attribute syntax , an attribute type , and object class , and directory information tree structure rules . Attribute syntax  represents a way of encoding an information type such as a string, number, Boolean, date, etc. Attribute type  represents the universal name of an attribute. Directory standards formally define the idea of schema and a notation for how to describe it. For example, RFC2256 defines the attribute type \u201cdescription\u201d as follows:","5.14. Description\n\n",{"@attributes":{"id":"p-0104","num":"0108"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"(","2.5.4.13 NAME \u2018description\u2019 EQUALITY caseIgnoreMatch"]},{"entry":[{},{},"SUBSTR caseIgnoreSubstringsMatch"]},{"entry":[{},{},"SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{1024} )"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Object class  is a special attribute that defines the rules about what attribute types are allowed in each entry. This basically defines which attributes are mandatory (\u201cmust contain\u201d) and which attributes are optional (\u201cmay contain\u201d) in an object (\u201centry\u201d). Directory standards formally define the idea of schema and a notation of how to describe it. For example, RFCC2256 defines the object class \u201cperson\u201d as follows:",{"@attributes":{"id":"p-0106","num":"0110"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"7.7. person"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"(","2.5.6.6 NAME \u2018person\u2019 SUP top STRUCTURAL MUST"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"( sn $ cn )"]},{"entry":[{},"MAY ( userPassword $ telephoneNumber $ seeAlso $"]},{"entry":[{},"description ) )"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In any directory implementation, these definitions of object class and attribute type (and indeed as many industry standards as possible) are pre-defined in a products schemic configuration. These definitions are defined in configuration files  and one particular example is as follows:",{"@attributes":{"id":"p-0108","num":"0112"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"schema set oid-prefix attributeType = (2.5.4);"]},{"entry":[{},"schema set oid-prefix standardObjectClass = (2.5.6);"]},{"entry":[{},"schema set attribute attributeType:13 = {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"name = description"]},{"entry":[{},"ldap-names = description, multiLineDescription"]},{"entry":[{},"equality = caseIgnoreMatch"]},{"entry":[{},"substr = caseIgnoreSubstringsMatch"]},{"entry":[{},"syntax = directoryString"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},"schema set object-class standardObjectClass:6 = {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"name = person"]},{"entry":[{},"subclass-of top"]},{"entry":[{},"must-contain"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"cn,"]},{"entry":[{},"surname"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"may-contain"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"description,"]},{"entry":[{},"seeAlso,"]},{"entry":[{},"telephoneNumber,"]},{"entry":[{},"userPassword"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"If a new attribute type is not defined and the schema is provided in a directory operation, such as an add-entry-request operation, a modified-entry-request with a \u201cadd-value\u201d or a modified-DN operation (all of which may introduce attribute types not previously stored in the directory provided they are pre-defined in the schema), an error would normally be returned. Typically this is an attribute error of \u201cundefined attribute type\u201d.","Directory information tree structures rules  are the rules about how the directory information tree is constructed. For example, allowable parents, allowable naming attributes, and at what depth an object may appear. Further, for example, under an \u201corganization\u201d object, there may be directory information tree structure rules that define that only an \u201corganizationalUnit\u201d object may appear, this object may only be named by an \u201corganizationalUnit\u201d name and there may only be a maximum of, say, four \u201corganizationalUnit\u201d objects under a \u201corganization\u201d object.","The teachings of the invention recognize that this fixed directory schema presents a number of problems. For example, applications that have \u201cplug-in\u201d architectures may not know in advance what information types they need to support. Further, applications installed in operationally sensitive environments may have complicated change control procedures to update configurations. Further, applications may want their attribute definitions to be private and not globally published as is the case with normal directory schema. Teachings of one aspect of the invention address these concerns by providing a system and method for automatically registering attribute definitions, as described above. In particular, automatic registration block  includes automatic registration software  and a plurality of templates . Automatic registration of attribute types is described in greater detail with reference to this  and .",{"@attributes":{"id":"p-0112","num":"0116"},"figref":"FIG. 14","b":["700","600","700","620","702","704","600","600","602"]},"At step  a determination is made that the new attribute type is to be defined. If the new attribute type is not to be defined, automatic registration does not occur. If the new attribute type is to be defined the automatic registration occurs.","In order to determine if the new attribute type is defined several procedures may be taken. For example, according to one embodiment a search may be performed to determine if the attribute does not exist in directory schema . In a further aspect of the invention, the directory schema  may reflect which object classes  may contain attributes that are automatically defined. This may be implemented in one example by the definition of the object class as follows:",{"@attributes":{"id":"p-0115","num":"0119"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"schema set object-class standardObjectClass:6 = {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"name = person"]},{"entry":[{},"subclass-of top"]},{"entry":[{},"must-contain"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"cn,"]},{"entry":[{},"surname"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"may-contain"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"auto-register-attributes,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"description,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"seeAlso,"]},{"entry":[{},"telephoneNumber,"]},{"entry":[{},"userPassword"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"At step  a new attribute definition is created in response to a determination that the new attribute type is to be defined. In one embodiment, creation of a new attribute type may include an attribute definition based on a template, such as templates . One such template may take the form of the following:",{"@attributes":{"id":"p-0117","num":"0121"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"attribute auto-generated-OID = {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"name = supplied-name"]},{"entry":[{},"equality = caseIgnoreMatch"]},{"entry":[{},"substr = caseIgnoreSubstringsMatch"]},{"entry":[{},"syntax = directoryString"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Numerous other templates are possible. For example, if, by example a new attribute \u201croom\u201d was provided in an add-entry-request operation, the above template would be used and the above:",{"@attributes":{"id":"p-0119","num":"0123"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"attribute 2.1104.114.111.111.109= {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"name = room"]},{"entry":[{},"equality = caseIgnoreMatch"]},{"entry":[{},"substr = caseIgnoreSubstringsMatch"]},{"entry":[{},"syntax = directoryString"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"b":"64"},"As illustrated in automatic registration block  of , a plurality of templates  are provided in one embodiment. In this embodiment, the particular one of the plurality of templates  that is selected based on a variety of factors. For example, a particular template may be based on the new attribute, the type of the object to be operated on, or the value of the new attribute, or selected on other basis. With respect to selecting a template based on the name of the new attribute, an example is provided. In one example, Hungarian notation could be used to indicate the syntax of the value, such as \u201ciXXX\u201d represents a number, \u201csXXX\u201d represents a string, etc. With respect to the type of object being operated on, if the object class is a person then a string template might be chosen. With respect to the value of the new attribute this may involve, for example, analyzing the value as if it was digits and choosing a number template; if it had a value of TRUE\/FALSE\/T\/F, etc. choosing a Boolean template; and if it parsed in a common date format, choosing a date template, etc.","After definitions of the new attribute type at step , the new attribute is registered in directory schema . At step  processing continues in which the received operation containing a new attribute type is processed. The method concludes at step .","Thus, according to this aspect of the invention a method and system are provided that allow automatic registration of attribute types, which provides greater flexibility in handling operations and the avoidance of defined attribute type errors. Further, such automatic registration may occur during processing of operations and do not have to be performed offline.","The teachings of this aspect of the invention recognize that the above-described automatic registration may occur in a directory system or network having a plurality of directories. In such an embodiment each directory, such as directory , may include functionality for automatic registration. Thus, when the directory network receives an operation having a new attribute, such as through replication for example, that new attribute may be automatically registered by each respective directory upon receiving an operation having the new attribute, in an analogous manner to that described above with respect to directory . In this manner, an entire directory system or network can automatically register a new attribute.",{"@attributes":{"id":"p-0124","num":"0128"},"figref":["FIG. 15A","FIG. 5","FIGS. 13 and 14"],"b":["800","800","802","804","800","100","810","812","812","802"]},"Reference directory  has an associated storage  and schema . Schema  includes the definition of attribute types supported by reference directory  referred to herein as \u201cexternal\u201d attribute types. Also illustrated in  is a user  which communicates with supplemental directory .",{"@attributes":{"id":"p-0126","num":"0130"},"figref":["FIG. 15B","FIG. 15B","FIGS. 13 and 14"],"b":["800","802","804","806","810","812","824","814","814","812","816"]},"According to one embodiment, registration occurs only if the object is marked with \u201cautomatic registration\u201d on that object type. If external attributes exist in the add-entry operation, an entry that contains the external attributes  is added to reference store  in accordance with schema , as indicated by reference numeral . Further, an entry  that contains the internal attributes  and  is added to supplemental store , as indicated by reference numeral . Finally, an add-entry confirm response is sent back to client .","A similar sequence may also occur for a modified-entry or modified-DN operation. It is noted that these steps can occur in any order. Where the reference schema  includes an ability to automatically register attributes, then this aspect can be equally applied to registering the new attribute types in reference schema  and adding these attribute values to reference storage . If the reference directory  does not support automatic registration of attributes but does support some kind of dynamic registration of attributes, then this registration can be included as part of the steps above to make it appear as if the reference directory  supports automatic registration of attributes.","Thus, according to one embodiment of this aspect of the invention, reference directory  may appear to have dynamically extensible schema because supplemental schema  supplements the reference schema  with newly defined attribute types. Further, the complexity of schema configuration is reduced, because many attribute types need not be initially configured for the system to operate.","Although particular embodiments of the method and apparatus of the present invention have been illustrated in the accompanying drawings and described in the foregoing detailed description, it will be understood that the invention is not limited to the embodiments disclosed, but is capable of numerous rearrangements, modifications, and substitutions without departing from the spirit of the invention as set forth and defined by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["For a more complete understanding of the present invention and its advantages, reference is now made to the following description, taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 4","FIGS. 1 through 3"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8","b":"100"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10","b":"312"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 12A","b":"500"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 12B","b":["526","524","506"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 15A"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 15B","FIG. 15A"]}]},"DETDESC":[{},{}]}
