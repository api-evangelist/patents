---
title: System and method for adaptive formatting of image information for efficient delivery and presentation
abstract: A content server distributes image information to networked devices. The content server receives a request for delivery of information to a networked device, including image information. The content server determines, based on at least one of an image delivery parameter and an image presentation parameter associated with the networked device, an image format for the image information for delivery of the image information to the networked device and for presentation of the image information at the networked device. The content server sends a response to the networked device, responding to the request, the response comprising at least a portion of the image information in the image format. The image delivery parameter corresponds to at least one network communication link type and the image presentation parameter corresponds to at least one presentation platform type.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08117313&OS=08117313&RS=08117313
owner: International Business Machines Corporation
number: 08117313
owner_city: Armonk
owner_country: US
publication_date: 20010319
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS","DETAILS OF THE PREFERRED EMBODIMENTS"],"p":["1. Field of the Invention","This invention generally relates to the field of network image transfer, and more particularly relates to the transfer of optimized image information relative to a network communication capability and a requesting device presentation capability.","2. Description of Related Art","Image information communication is commonly handled through a heterogeneous network. Additionally, image serving via the Internet is regularly designed for reception by both wired and wireless networked devices.","In the case of wired devices the connection may be through a high bandwidth T-1 connection, DSL, Cable modem, or using a telephone connected modem. The connection speed ranges from megabits per second down to 14 Kbits per second or even lower.","The wireless devices may be a fully functional desktop workstation connected through a very high bandwidth satellite connection or at the other extreme a small cell phone with a very slow connection to the Internet.","Cutting across the connection speed is the connected devices processing power and display capability. The display can range from a very large engineering workstation down to a cell phone with only an alphanumeric display.","Client\/Server topology allows for web servers to respond to a user's request for certain files. Given a GUI (Graphical User Interface) most of these files comprise image information. The user need not know esoteric program languages. With web browsers the user can simply point and click with a mouse.","For TV within certain standards such as NTSC, (National Television Standards Committee) the broadcasting industry assures that all NTSC standard TV sets will render the programming faithfully with respect to the video and audio. The TV set may be old and even black and white Vs color and with only one poor quality speaker. The size of the TV also does not matter. The viewer will see and hear a program that is faithful to the broadcast content.","Where as with computers and their use for browsing on the Internet, no such widely adopted standard exists. In particular computers that are connected to the Internet such as Intel\/Microsoft based PCs, Mac, Web TV, internet appliances, PDAs (Personal Digital Assistant), and even cell phones all have widely different processing and imaging capabilities. Additionally, they are connected to the Internet, with very different speeds and qualities of connection. The Internet author must take into account both the visual quality and the time to send and render these images. That which will fill a small PDA screen in black and white will be very small when viewed on a large CRT connected to an engineering workstation. From the other point of view, a full-page image with millions of colors will not even display on a small PDA. Accordingly, the need exists for an image translation method that is aware of the device that requested the image and also of the interconnection speed.","Of particular importance is an entire new set of connected devices such as cell phones and PDAs. These devices have small displays with poor image processing capabilities. However the user is typically a mobile professional that expects high quality content that is timely and very legible, perhaps even in full sunlight. Accordingly the need exists for images to be convertible so as to communicate the sought for information within the confines of the connection speed, quality, processing and imaging capabilities of the requesting client. All this translation and selection should be accomplished in a timely fashion and with a reasonable cost at the server.","Typically, a user of the WWW (World Wide Web) wishing to share visual information must create an image in one format for distribution. Variations in network speed, browser functionality, and computer processor capabilities make limiting visual presentation over the WWW to one format undesirable.","Therefore a need exists to overcome the problems with the prior art as discussed above, and particularly for a certain class of images that contain not only visual information but also textual information.","Illustrated in , is a block diagram , representing a diverse population of networked devices, such as found on the Internet. There is a web content server , which is connected to the network  with a high-speed connection known as a T-1 connection . This server is hosting information content, which contains at lease some graphical files .","There is a business grade workstation  connected to the network through a DSL connection . This station also has high-end graphic capabilities .","A high-speed satellite dish  is wirelessly connecting a Macintosh class Apple computer  to the network. This computer has a graphic capability that is non-Intel based.","The notebook PC  is connected to the network through a normal dial-up connection known as POTS  (Plain old Telephone System). The notebook's graphic capability is usually not as good as a normal desktop.","There is a cell tower connected to the network  (computer is not shown) that is wirelessly connected to a PDA . The connectivity and graphic capability for this device is very low, and yet the need for receiving timely information is usually very high.","Lastly, there is a satellite up-link server  that is connected to the network through a T-1 connection . This up-link server provides information to satellite subscribers by transmitting information to a satellite for re-broadcast back to earth. It has a high-end graphic platform .","It is noted that the speed and quality of the connections to the network varies greatly for the different devices. Additionally, the computer processing and graphic capability for these different machines have very different abilities. The rendering and viewing experiences for the different platforms are very different. Accordingly there is a need to serve the intended images across the Internet into these different platforms in an efficient and timely way.","According to a preferred embodiment of the present invention, a content distribution system receives a request for delivery of information to a networked device, the information comprising image information. The system determines, based on at least one of an image delivery parameter and an image presentation parameter associated with the networked device, an image format for the image information for delivery of the image information to the networked device and for presentation of the image information at the networked device. The system then provides a response for the request, the response comprising at least a portion of the image information in the image format.","According to a preferred embodiment of the present invention, a content server system comprises a first memory for storing at least one of an image delivery parameter and an image presentation parameter associated with a networked device, a network interface for communicating with a network, a controller, communicatively coupled to the first memory and to the network interface, and a second memory, communicatively coupled to the controller, for storing computer instructions for the controller to control the content server system to:","receive a request for delivery of information to a networked device, the information comprising image information;","determine, based on at least one of an image delivery parameter and an image presentation parameter associated with the networked device, an image format for the image information for delivery of the image information to the networked device and for presentation of the image information at the networked device, and","provide a response for the request, the response comprising at least a portion of the image information in the image format.","The present invention, according to a preferred embodiment, overcomes problems with the prior art by simultaneously creating from an original image a set of available binary and text base vector graphic files for delivery to and presentation by particular networked devices. The invention efficiently selects the best image format for distribution of image information to the networked devices.","This invention is related to the deployment of visual information over a network such as the Internet or World Wide Web (WWW). However, other networks, such as a local area network or other types of wide area networks would likewise benefit from the advantages of the present invention.","The WWW is comprised of an expansive network of interconnected computers through which governments, business, organizations, and individual make information and resources available through shared files. Users connected to this network navigate and obtain this information by the use of a web browser. Information is gathered by the web browser and rendered for presentation to the user. Typically, the views produced consist of text and images laid out according to the Hypertext Markup Language (HTML) for personal computers and wireless protocols, such as Wireless Access Protocol (WAP), for mobile devices.","Images make up a large portion of the information presented to users through the WWW, and recent browsers provide several methods for defining this visual content. These methods can be broken down into two categories, binary encoding, and vector-based textual description. Binary images are broken down pixel by pixel and are translated into binary representation stored in a single file. Vector-based images take a different approach, describing an image by its characteristics rather than encoding it directly. Examples of binary encoded image formats include JPEG, GIF, and PNG. Examples of vector-based graphics include the Vector Markup Language (VML), Scalable Vector Graphics (SVG), and HTML Image Maps.","A preferred embodiment of the present invention proposes a system, method, and computer readable medium for creation of binary and vector-based images for distribution on a network. It also describes a method for determining the optimal image format for distribution over a network to a particular user, or client. The invention selects the optimal format in terms of speed of delivery and presentation, with minimal perceptible differences to the end user.","Users of the WWW desiring to attract people to their sites are constantly seeking ways to improve presentation and speed of access. A preferred embodiment of the present invention allows distributors of content on the web to combine the advantages of binary and vector-based images. It also ensures that images are distributed with optimum efficiency across the network. It additionally speeds the delivery of images while maintaining visual quality for the image information being presented at a networked device.","A preferred embodiment of the present invention combines two solutions, one solution comprises a programming tool for creating applications and corresponding image information, and the other solution comprises a determination algorithm, to solve the problems presented above.","An advantageous method is used to determine the type of graphical output format most appropriate for a particular session between a server of web content and a client networked device receiving that content. Although the present discussion illustrates using an exemplary client\/server system arrangement, it should be obvious to those of ordinary skill in the art, in view of the present discussion, that other system arrangements will likewise utilize the advantages of the present invention. For example, any networked devices that communicate with an image information serving system would likewise benefit. Additionally, a peer-to-peer network topology would likewise benefit from the preferred embodiments of the present invention. Therefore, the use of the terms server and client in the present discussion shall be understood to cover all other such similar arrangements of image serving networked devices and image receiving networked devices.","The advantageous method analyzes factors including network speed, capabilities of the web browser (or user-agent), and any known properties of the capabilities of the system hosting the client's browser. The new method first determines which graphical formats the client is able to render. From those possibilities, it selects the format(s) that will provide the user with the optimal format determined from network transfer and rendering time and final display functionality. These formats are preferably communicated to an Application Programming Interface (API) for use in creating the images.","An API is a set of programming tools made available in a package to expand the available functionality of a programming environment. In the preferred embodiment of the present invention, an API is defined which offers methods for defining a two dimensional graphical object. The methods offered to the programmer by the API are independent of the graphical output format to be produced. The methods also allow the specification of information that is not entirely graphical in nature, such as textual descriptions or hyper-links associated with a geometric region. When a method from the API is invoked, according to a preferred embodiment of the present invention, images are stored in memory buffers in binary or vector-based format and further the image format can be modified as selected by that method. Thus, a near identical image can be produced in multiple selectable output formats for distribution of image information.","The Architecture","In an exemplary system, a browsing device connected to a network such as the Internet makes a request to a web server for documents to display. This request, according to a preferred embodiment, also contains information about the browsing device making the request. The request from the browsing device is augmented with information known to the server but not part of the original request, such as user identification and session parameters. A preferred implementation of the invention stores information about network speed and client processing capabilities for each session between client and server. The final request sent to the web server, contains information identifying a document that a client networked device is requesting, as well as information about network status and client networked device capabilities for the active session.","Within the web server, the role of the response generator is to receive the request and send the appropriate requested content back to the client-networked device. The generator is an extension of the web server and can take the form of a Java Servlet, a CGI program, etc. The response generator separates the session parameters from the other data in the request and sends that session data to the determination proxy. The generator then takes the actions necessary to produce the content of the response. In the process of generating the response, it may become necessary to generate graphical content. In such a case, the generator sends a series of method calls that first define the visual content of the image and then makes a call to flush that output to the response. The generator then continues generating the rest of the response.","The determination proxy analyzes the session information passed to it from the response generator and informs the image server which formats are appropriate for the given request. The proxy does this by analyzing network connection speed, rendering capabilities of the client browser, processing capabilities and speeds of the client's network device, and other such factors given it from the response generator. In general, higher connection speeds with high processing capabilities will allow the highest quality image formats available, while lower connection speeds and processing capabilities will restrict the response to either solely vector-based images, or binary images of lower quality. The response generator also has the ability to influence the decision of the ultimate image output format by adding information to the session information that will influence its selection. The final determined output formats are passed via the graphic API.","The graphic API contains the programming tools and data structures necessary to create and output the various vector and binary based images. Methods within the API are called in order to define the visual and structural content of the images. The methods include calls such as draw_square, draw_image, etc. The methods also incorporate techniques for embedding meta-data about geometric sections of the image such as text-based descriptions or data links. Each method exists independent of the graphical output format so that the method may be applied to each format specified by the Determination Proxy.","Upon initial instantiation, the API creates image data buffers for each of the formats specified by the determination proxy. As method calls are made to the API, each image buffer is altered appropriately to reflect the call. For example the draw_square method would change the pixel values in a binary image such as in a JPEG or PNG buffer and it would add the coordinate description of a square to the buffer of a vector-based image such as in VML. When the response generator has completed the image content method calls, it makes a final call to flush the appropriate image buffers into the response.","The response is comprised of all data streams that are sent from the server to the client who made the original request. The response will include text and\/or binary files representing both the image and non-image data generated from the response generator and graphic API.","By maintaining this programming API graphic generation, according to a preferred embodiment of the present invention, a content server allows for graphics to be converted and sent on the fly in response to parameters specified in the client's request. For example, a stock chart reflecting the most current stock prices, could be generated by the response generator. When appropriate for the session, a chart can be returned in binary form, vector form or a mix of both without additional manipulation of the response code.","While there are graphical conversion and creation application programs available that can save two dimensional graphic images in a variety of formats, there are no known programming tools available that allow simultaneous creation of both binary and vector-based images. There are also no known methods in use for determining optimal session-based graphical formats for distribution across a network, such as the Internet, which preferably take into account both binary and vector-based image formats.","On the other hand, a preferred embodiment of the present invention allows for delivery of image content over the Internet in a manner that is efficient and flexible. A high level summary of the sequence of steps taken by a preferred system to generate an image serving response to a client's request is as follows:\n\n","Adaptive Formatting and Image Serving",{"@attributes":{"id":"p-0054","num":"0058"},"figref":"FIG. 2","b":["200","202","204","205","206","207","209","209","248","208"]},"The Web Content Server includes a network interface . The OS (Operating System)  controls the entire server . The Image Server  is running under the OS and works with the Image DB (Data Base) . The Database  contains two exemplary listings, which are taken to be two of many. The first entry, Header 1  represents the link list of all available image formats for Image A. They are Image A Format 1 , Image A Format 2 , Image A Format 3  and finally the end of field record, Null . The second entry, Header 2  represents the link list of all available image formats for Image B. They are Image B Format 1 , Image B Format 2  and finally the end of field record, Null .","The selected format of the requested image is built in the Image buffer  by the image server . The image proxy application  and image proxy API engine  accomplishes a request for image information and obtaining the image information in the selected format in the image buffer . The response to a request from a networked client  is created in the response buffer . The server also has a drive  for non-volatile storage. The entire Web Content Server behavior can be contained on computer readable medium . Additionally, computer readable media  such as CD-ROM, Floppy, and other removable media can be used with a compatible drive  in the server . In this way, the functions and operations of the server  and the image information for the database can be updated.","The Image Format Determination Server  includes a list of known image delivery parameters stored in a capability database . The server  contains an OS , which in turn controls the network interface , a non-volatile storage drive  and the Image Proxy Engine . The Image Proxy Engine  operates with the capability database  to determine image format for a requested image information. Illustrated are two data base records, which represent many. ID1 , lists image delivery parameters  and image presentation parameters  for a particular networked device. This represents a specific network and network connection speed, and the Image rendering capabilities of the particular client device. In a similar way ID2  lists specific image delivery parameters  and image presentation parameters  for another networked device client. The entire Image Format Determination Server behavior is contained on computer readable medium , such as CD-ROM, Floppy, and other removable media. The removable media can be used with a compatible drive  in the server . In this way, the functions and operations of the server  and the image information for the database can be updated.","When a networked device such as  sends a request for an image from the network  the image format determination server  receives the request. Additional information besides the requested image is passed along with the request. This information includes: networked device type, display capability, its connection type and quality. This information is used to access the device capability database . This database is used to assemble a list of possible image format types. Image formats that are not possible are not listed. This information is passed to the web content server . The list of possible image format types is sorted using a weighted set of parameters. These parameters include compatibility with the networked device, quality and time to render. This information is assembled in the Image database  and may be stored for future reuse, or assembled on the fly for each usage. The image proxy app  selects the best-fit image format from the image DB . The image proxy API  builds this image in the image buffer . This image is then served to the requesting network device  by the image server . This completes the image selection and serving process.","Alternative Version of an Adaptive Formatting and Image Serving System",{"@attributes":{"id":"p-0060","num":"0064"},"figref":"FIG. 3","b":["300","306","302","303","304","306","305","307","307","306","308","310","308","306","312","316","318","320","322","324","316","314","312","306"]},"The image proxy engine  accesses the networked device capability DB . The ID1 , lists image delivery parameters  and image presentation parameters , and other related parameters . This record represents a specific network and network connection speed, and the Image rendering capabilities of a particular networked device client, such as for first networked device . In a similar way ID2  lists specific image delivery parameters  and image presentation parameters , and other related parameters  for another client such as fro the second networked device. These entries represent two of many.","The image server  accesses the image DB . The database contains two exemplary listings, which are taken to be two of many. The first entry, Header 1  represents the link list of all available image formats for Image A. They are Image A Format 1 , and the end of field record, Null . The second entry, Header 2  represents the link list of all available image formats for Image B. They are Image B Format 1 , Image B Format 2  and finally the end of field record, Null .","Flow Diagrams of the Device Database Update of the Image Proxy",{"@attributes":{"id":"p-0064","num":"0068"},"figref":"FIGS. 4","b":["5","6","300","208","402","404","300","326","406","208","408","410","412"]},{"@attributes":{"id":"p-0065","num":"0069"},"figref":"FIG. 5","b":["406","326","502","504","326","506","308","326","508","308","512","512","514"]},{"@attributes":{"id":"p-0066","num":"0070"},"figref":"FIG. 6","b":["410","322","602","604","322","320","324","606","320","608","322","612"]},"Image Serving by the Present Invention",{"@attributes":{"id":"p-0068","num":"0072"},"figref":"FIG. 7","b":["700","702","214","704","214","706","248","214","248","706","216","256","256","256","256","214","214","214","708","710","236","240","238","712"]},"The Image Format Determination Server  has been described servicing one Web Content Server . Alternatively the Image Format Determination Server  can serve a plurality of Web Content Servers across a network, such as the Internet. Additionally, the locations and types of Web Content Servers that may operate with the single Image Format Determination Server  may be diverse. In this way, for example, the Image Format Determination Server  can be shared across many different content servers across the Internet. This provides significant cost savings for a system operator thereby enhancing the commercial viability of a content distribution system implementation.","In a distributed network approach, such as illustrated in , the Image Format Determination Server  would regularly receive updates to the capability database  via the network . According to one preferred embodiment, web content servers  would receive communications with networked devices , , and collect capability information corresponding to the networked devices , . For example, as the first networked device  accesses the network  from varying communication links, the changes in communication capability can be monitored by the web content server's  and updated to the capability database  in the Image Format Determination Server . The image server , for example, would send an update message to the image proxy engine . The image proxy engine  would then accordingly update the capability database . Similarly, if a new presentation resource (e.g. a new display system) is being used in the first networked device , for example, then the image server  would send an update to the image proxy engine  to update accordingly the capability record corresponding to the first networked device , as stored in the capability database .","Creation of Image Records According to the Present Invention",{"@attributes":{"id":"p-0072","num":"0076"},"figref":["FIG. 8","FIG. 2","FIG. 2","FIG. 3"],"b":["800","238","218","228","216","208","316","346","352","344","308","208","238","218","228","208","238","240","238","214"]},"The flow is entered, at step , when, according to one preferred embodiment, a development system receives, at step , at least one image format corresponding to an image for storing in an image record , , in the Image Database . Typically, the developer of the image proxy application  will have control over the selection of image information for use with the image proxy application , and the developer will additionally have control over the typical available image formats for the particular image information for the image proxy application .","Then, at step , a development system preferably determines all available image formats for the image information. This set of all available image formats may be greater than, or less than, the set of typical image formats that the author and\/or developer of the image proxy application  selected at step . This set of all available image formats is indicated in the header information in the image record , , and each image format constitutes an entry in the linked list of image formats associated in the image record , . This process results in, at step , the creation of a header with weighted parameters for the image format selection. Finally, at step , the image record for the Image DB, the record including the header and the available image formats for the particular image is created. This image record is then ready to be stored in the Image Database . The flow is exited at step .","Note that the image record may store a linked list of available image formats, where the items in the linked list are descriptions of the image formats for the image server , in the content server , to create a final image information in a determined optimum image format when requested by the image proxy application  via the image proxy API . Alternatively, the available image formats stored in the linked list may comprise actual image information in the particular image format for an item of the linked list. In this way, in response to a request for image information via the image proxy API , the image server  serves up the determined image information in the optimum image format directly from the image record in the database with reduced processing requirements. It should be obvious to one of ordinary skill in the art from the discussion above that an embodiment of the present invention can trade-off storage memory requirements for operational processing requirements and response time. A web content server  implementation, advantageously, can balance between storage requirements for an image database  and the processing requirements of the image server  by serving the image information in a determined optimum image format. This is accomplished by storing pre-assembled image information in the particular image formats in the image record DB . This will increase the storage memory requirements, but assure fast image server response time with little operational processing required. This trade-off can be implemented, according to one preferred embodiment, into the database record , , for particular image information when created by the developer of an image proxy application .","The created image records , , and the created image proxy application , can then be written to a non-volatile computer readable storage medium  such as a CD-ROM. This non-volatile computer readable storage medium  can then be used to distribute the image proxy application  and corresponding image records , , to Web Content Servers . The non-volatile computer readable storage medium  would be readable using, for example, the drive  of the Web Content Servers .","Examples of Tables Used for Image Translation  contains a view of exemplary tables with which the image proxy engine  responds to requests for images. Table  contains all known client types and their variations and their compatibility with certain image file formats. This table  would preferably be stored, in the preferred embodiment shown in , in memory in the Image Format Determination Server . Examples of table entries would include the ability to work with text-based vectors and the display format size. Table  contains the known image types and their APIs for converting from one image format to another. These APIs would preferably be stored in the Web Content Server . Examples would be the conversion from a high quality JPEG to a text based vector image. It is noted that not all conversions are possible, or legible if converted. Table  contains a list of weighting factors for different network connections. These factors would be stored in memory in the Image Format Determination Server . These parameters represent the communication bandwidth that a networked client device is currently communicating with, and they determine the amount of time that an image would take to be communicated to the networked client device. Table  contains a list of both wired and wireless network types and their associated typical bandwidths. These factors would also be stored in memory in the Image Format Determination Server . The network type is influenced by the quality of the network . This qualification of a network type by the network quality parameter adjusts weighting factors associated with the network type to better characterize the likely communication throughput for delivering image information to the particular networked client device. In an example, a client may have a 56 kb modem capability but actually be connected with a bandwidth of only 28 Kb.","Taken together at the decision node , the tables , ,  and , as discussed above, are used to build a table , which lists all available file formats for a requested image. This table of listed formats is assembled in the Web Content Server  within the Image DB . Once this table  is completed, the table  that contains the weighting factors is used to select  from the table  the one optimum image format for delivery to, and presentation by, the particular networked client device. This table of Weighting Factors , preferably resides in the Web Content Server . This selected image format  is then used to assemble the image in the Image Buffer  for the image proxy application  to use in creating information in a response buffer  to be sent back to the requesting networked client device by the Web Content Server . The image proxy application , for example, would send the response information to the network interface  for delivery into the network  destined for reception by the particular requesting networked client device.","Discussion of Image Serving Realization","The present invention can be realized in hardware, software, or a combination of hardware and software. A content server, as illustrated in , according to the preferred embodiments of the present invention, can be realized in a centralized fashion in one computer system, or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system\u2014or other apparatus adapted for carrying out the methods described herein\u2014is suited. A typical combination of hardware and software could be a general-purpose computer system with a computer program that, when being loaded and executed, controls the computer system such that it carries out the methods described herein.","The present invention can also be embedded in a computer program product, which comprises all the features enabling the implementation of the methods described herein, and which\u2014when loaded in a computer system\u2014is able to carry out these methods. Computer program means or computer program in the present context means any expression, in any language, code or notation, of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following: a) conversion to another language, code or, notation; and b) reproduction in a different material form.","Each computer system may include, inter alia, one or more computers and at least one computer readable medium allowing a computer to read data, instructions, messages or message packets, and other computer readable information from the computer readable medium. The computer readable medium may include non-volatile memory, such as ROM, Flash memory, Disk drive memory, CD-ROM, and other permanent storage. Additionally, a computer medium may include, for example, volatile storage such as RAM, buffers, cache memory, and network circuits. Furthermore, the computer readable medium may comprise computer readable information in a transitory state medium such as a network link and\/or a network interface, including a wired network or a wireless network, that allow a computer to read such computer readable information.","Although specific embodiments of the invention have been disclosed, those having ordinary skill in the art will understand that changes can be made to the specific embodiments without departing from the spirit and scope of the invention. The scope of the invention is not to be restricted, therefore, to the specific embodiments, and it is intended that the appended claims cover any and all such applications, modifications, and embodiments within the scope of the present invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIGS. 4","FIG. 3"],"b":["5","6"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 7","FIG. 2"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 8","FIGS. 2 and 3"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
