---
title: Method and apparatus using multiple sensors in a device with a display
abstract: In a device having a display, a change in focus for an application is used with a requested usage of a context attribute to change the amount of information regarding the context attribute that is sent to another application. A method of changing the orientation of images on a device's display detects movement followed by an end of movement of the device. The orientation of the device is then determined and is used to set the orientation of images on the display. A method of setting the orientation of a display also includes storing information regarding an item displayed in a first orientation before changing the orientation. When the orientation is returned to the first orientation, the stored information is retrieved and is used to display the item in the first orientation. The stored information can include whether the item is to appear in the particular orientation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08120625&OS=08120625&RS=08120625
owner: Microsoft Corporation
number: 08120625
owner_city: Redmond
owner_country: US
publication_date: 20021114
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["REFERENCE TO RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","Switching Orientation Using Tilt and Movement","Orientation Preview Feedback","Orientation-Specific Applications","Saving Window Placements","Display Contrast Adjustment","Power Management","Enlarge Double-Click Size","\u201cThrow\u201d to Dismiss","Tilt-a-Sketch"],"p":["This application is a Continuation-In-Part application of U.S. patent application Ser. No. 09\/875,477, filed Jun. 6, 2001 now U.S. Pat. No. 7,289,102, which claims priority from a U.S. Provisional application having Ser. No. 60\/218,748, filed on Jul. 17, 2000 and entitled \u201cMETHOD AND APPARATUS USING MULTIPLE SENSORS IN A MOBILE DEVICE\u201d and is a Continuation-In-Part of U.S. patent application Ser. No. 10\/162,487, filed Jun. 3, 2002 now U.S. Pat. No. 7,302,280, which was a Continuation-In-Part of U.S. patent application Ser. No. 09\/875,477 filed Jun. 6, 2001.","The present invention relates to devices with displays. In particular, the present invention relates to computing and mobile devices.","Mobile devices, such as personal information managers (PIMs), tablet PCs, cellular telephones, pagers, watches, and wearable computers typically include one or more buttons or touch screens through which the mobile device receives explicit instructions from the user. For example, the user can press buttons to explicitly instruct the device to enter a full-power mode, activate an application, or change the orientation of a display.","Although the devices are responsive to information provided through such explicit instructions, they are generally not responsive to information that is present in the manner in which the device is being handled by the user. For example, the devices do not automatically enter a full-power mode, even when the user is holding the device in a manner that is consistent with wanting to use the device.","Because prior art devices are generally not responsive to the manner in which the user is holding the devices, the user is forced to enter explicit instructions into the device to achieve various functions. In light of this, mobile devices are needed that can sense how they are being handled in order to perform certain background functions that expand the functionality of the mobile device without requiring the user to perform any additional actions.","In a device having a display, a change in focus for an application is used with a requested usage of a context attribute to change the amount of information regarding the context attribute that is sent to another application. A method of changing the orientation of images on a device's display detects movement followed by an end of movement of the device. The orientation of the device is then determined and is used to set the orientation of images on the display. A method of setting the orientation of a display also includes storing information regarding an item displayed in a first orientation before changing the orientation. When the orientation is returned to the first orientation, the stored information is retrieved and is used to display the item in the first orientation. The stored information can include whether the item is to appear in the particular orientation.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1","b":["200","200","202","204","206","208","210"]},"Memory  is a computer readable media, which can be any available media that can be accessed by processor  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and nonremovable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, TOM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by processor . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The particular computer readable medium used in a mobile device is a function of the size of the device and the power capacity of the device. For example, a tablet PC will typically include one or more disk drives where as a PIM will typically only include a random access memory (RAM) with a battery back-up module (not shown) such that information stored in memory  is not lost when the general power to mobile device  is shut down.","A portion of memory  is preferably allocated as addressable memory for program execution, while another portion of memory  is preferably used for storage.","Memory  includes an operating system , application programs , and an object store . During operation, operating system  is preferably executed by processor  from memory . Operating system , in one preferred embodiment, is a WINDOWS\u00ae CE brand operating system commercially available from Microsoft Corporation. In Tablet PC embodiments, Windows\u00ae XP brand operating system available from Microsoft Corporation is utilized. Operating system  is preferably designed for mobile devices, and implements database features that can be utilized by applications  through a set of exposed application programming interfaces and methods. The objects in object store  are maintained by applications  and operating system  at least partially in response to calls to the exposed application programming interfaces and methods.","Communication interface  represents numerous devices and technologies that allow mobile device  to send and receive information. The devices include wired and wireless modems, satellite receivers and broadcast tuners to name a few. Mobile device  can also be directly connected to a computer to exchange data therewith. In such cases, communication interface  can be an infrared transceiver or a serial, parallel, USB, or Firewire communication connection, all of which are capable of transmitting streaming information.","Input\/output components  include a variety of input devices that have previously been found on mobile devices such as a touch-sensitive screen or transparent tablet overlay sensitive to properties of a special stylus including position, proximity to the screen, pressure, azimuth, elevation, which end of the stylus is being used (e.g. writing tip on one end, eraser on the other end) and possibly a unique ID encoded in the stylus, buttons, rollers, and a microphone as well as a variety of output devices including an audio generator, a vibrating device, and a display. The devices listed above are by way of example and need not all be present on mobile device .","Mobile device  also includes additional input devices under the present invention. Under one embodiment, these input devices are connected to the mobile device through a separate serial port  and a peripheral interface controller (PIC) microprocessor . In other embodiments, these additional devices are connected to processor  through communication interface  and PIC microprocessor  or through PIC microprocessor  directly. Under one embodiment, a microchip 16C73A peripheral interface controller is used as the PIC microprocessor. In still further embodiments, PIC microprocessor  is not present and the input devices are connected to processor  through various ports such as serial port  or through communication interface , or through memory-mapped I\/O or direct connection to the system processor(s).","Under the embodiment of , The additional input devices include a set of touch sensors such as touch sensors  and . Touch sensors  and  are provided to a separate peripheral interface controller microprocessor  which converts the touch signals into digital values and provides the digital values to PIC microprocessor . In other embodiments, touch sensors  and  are connected directly to analog or digital inputs in PIC microprocessor  instead of being connected to PIC  or are connected to processor .","The input devices also include a dual axis linear accelerometer tilt sensor  capable of detecting forward\/back tilt, left\/right tilt, and linear accelerations such as those resulting from vibrations or movement.","The input devices also include a light sensor , a proximity sensor  consisting of an infrared transmitter  and an infrared receiver , a digital compass (e.g. a single or multiple axis magnetometer) , and a gravity switch . The sensing signals from the infrared receiver , linear accelerator , light sensor , digital compass , and gravity switch  may be provided through respective amplifiers , , ,  and  to analog inputs of PIC microprocessor . These analog inputs are connected to analog-to-digital converters within PIC microprocessor . In other embodiments, the sensors provide a digital output and thus are connected to digital inputs on the microprocessor. In further embodiments, the input devices also include a temperature sensor.","PIC microprocessor  also includes a connection to the power bus of mobile device , which is shown as connection  in . PIC microprocessor  also includes a connection to a power switch , which enables PIC microprocessor  to turn mobile device  on and off. Note that PIC microprocessor  always receives power and, under one embodiment, is able to control which of the sensors receives power at any one time. This allows PIC microprocessor  to manage power consumption by only sending power to those sensors that it anticipates will need to be active.","Under one embodiment, PIC microprocessor  continuously samples the sensors and transmits packets representing the state of these sensors at a rate of approximately 400 samples per second through serial port . In some embodiments, samples are reported at lower speeds to conserve power and processing resources. Some sensors may be reported at different sampling rates than others (e.g. tilt may be updated more frequently than touch).","Under one embodiment, the touch sensors are capacitive touch sensors that are divided into two regions. In other embodiments, these sensors are implemented as a single detector pad. Under one embodiment, the touch sensors are spread across the back and sides of mobile device . This is shown in more detail in  which show a back, left side view and right side view of the outside of mobile device . In , , and , touch sensor  is shown as two regions  and . Region  extends from the left side to the back of mobile device  and region  extends from the right side to the back of mobile device . When a user touches either section  or , the capacitance associated with the touched section changes indicating that the user has touched the device. Note that although the touch sensors are shown on the exterior of the device in the embodiment of , in other embodiments, the touch sensor is located beneath an outer covering of the device.","Touch sensor  is shown in , which is a front view of mobile device . In the embodiment of , touch sensor  is located on the left bezel of display screen . In other embodiments, touch sensor  is located on the outer casing on the front portion of mobile device , but not necessarily on bezel  of mobile device .","In some embodiments, the touch sensors described above are realized using a plurality of independent touch sensors that each provides a separate touch signal. In other embodiments, the touch sensors are replaced with position sensors that indicate the location where the user is touching the device. Those skilled in the art will recognize that additional touch sensors may be added to the mobile device within the scope of the present invention.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIGS. 7 and 8","FIG. 7"],"b":["700","702","704","706","708","701","708","710","708","708","710","708","710"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 8","b":["701","712"]},"Tablet PC  can be of a slate form, in which the tablet PC only includes the display for input and does not include a keyboard. The slate forms of the tablet PC can be used with a docking station to provide a connection to other input devices and memory devices.","In other embodiments, the tablet PC is a convertible device with a keyboard. Under one convertible embodiment, the keyboard is attached to the display through a pivoting connection that allows the tablet PC to be in either a closed state or an open state. In such embodiments, the display is embedded in a top portion of the tablet PC and the keyboard is embedded in a bottom portion of the tablet PC. In the closed state, the top and bottom portions of the tablet PC are brought together so that the keyboard is hidden between the top and bottom portions while the display is visible on the exterior of the top portion. In the open state, the display pivots so that it faces the keyboard.","In another convertible embodiment, the display portion of the tablet PC is detachable from a keyboard and extended device portion, which can contain various disk drives and additional memory. In such embodiments, the back touch sensor  can be located on the back of the display portion or on the back of the keyboard portion.","Tilt sensor  is shown as a single dotted element  in  and element  in . The tilt sensor is embedded within the casing of mobile device  and  and in one embodiment is located at a point about which users typically pivot mobile device  and  when tilting the device. Note that the tilt sensor's position within the mobile device is unimportant as it senses only the angle of its physical attitude with respect to gravity. The sensor's angular position within the device is important.","Under one embodiment, an Analog Devices ADXL202 two-axis linear accelerometer is used for tilt sensor . Such a sensor detects forward\/backward tilt, shown by arrows  of , and left\/right tilt, shown in the bottom view of  as arrows . The sensor also responds to linear accelerations, such as those resulting from shaking the device. Typically, the tilt sensor has a response curve both in the forward\/back direction and left\/right direction with the form:",{"@attributes":{"id":"p-0048","num":"0047"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mstyle":{"mtext":"Angle"},"mo":"=","mrow":{"msup":{"mi":"sin","mrow":{"mo":"-","mn":"1"}},"mo":"\u2061","mrow":{"mo":["(",")"],"mfrac":{"mrow":{"mi":"T","mo":"-","msub":{"mi":["T","c"]}},"mi":"k"}}}}},{"mstyle":{"mtext":"EQ.\u00a0\u00a01"}}]}}}},"br":{},"sub":"c ","b":"282","figref":"FIG. 1"},"In addition, the tilt sensor does not respond to rotation about an axis running from the front to the back of the mobile device. Thus, the tilt sensor is unable to sense the spinning of the mobile device on its back when laid on a flat table. Digital magnetic compass  of  is thus provided in some embodiments to indicate this type of rotation. In other embodiments, solid state gyros are used instead of the compass. In further embodiments, a multiple axis magnetometer may be used in lieu of the digital compass, and combined with the tilt sensor values, to improve the robustness of the sensed compass direction.","When present, gravity switch  and digital compass  are also internal to mobile devices  and . They are not shown in  to reduce the complexity of .","Note that the additional input devices of  do not all have to be present under the present invention. Different embodiments of the invention will use different numbers of and different combinations of these additional sensors. Further, additional sensors may be added without affecting the functions of the sensors discussed in the present application.","Transmitter  and receiver  of proximity sensor  are shown in . In the embodiment of , transmitter  is shown below and to the right of receiver , and both the transmitter and receiver are located at the top front of mobile device .","Under one embodiment, a timer  drives transmitter  at 40 kilohertz and transmitter  is an infrared light emitting diode with a 60\u00b0 beam angle. Under such embodiments, receiver  is also an infrared receiver that is capable of operating at the same frequency as transmitter . The light produced by transmitter  bounces off objects that are near mobile device  and the reflected light is received by receiver . Receiver  typically has an automatic gain control such that the strength of the received signal is proportional to the distance to the object. In a further embodiment, multiple light emitting diodes with different beam angles may be combined to improve sensor response to both distant objects (using a narrow collimated beam angle, e.g. 5\u00b0) as well as objects that are not directly in front of the sensor (using a wide beam angle).",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 9","FIG. 9","FIG. 9","FIG. 9"],"b":["902","904","906","200","908","200","910","200"]},{"@attributes":{"id":"p-0055","num":"0054"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["Z","cm"]},"mo":"=","mfrac":{"mi":"k","msup":{"mrow":{"mo":["(",")"],"mrow":{"mfrac":{"mi":"p","msub":{"mi":["p","max"]}},"mo":"-","mi":"c"}},"mi":"\u03b1"}}}},{"mstyle":{"mtext":"EQ.\u00a0\u00a02"}}]}}}},"br":{},"sub":["cm ","max "]},"Under one embodiment, the power consumed by proximity sensor  is limited by pulsing transmitter  a few times a second when the user is out of range, or by reducing the duty cycle of timer .","In other embodiments, IR receiver  generates a digital signal instead of the analog signal shown in . The digital signal provides a representation of the transmitted signal. However, as the distance between the device and the user increases, the number of errors in the digital signal increases. By counting these errors, PIC  is able to determine the distance between the user and the device.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 10","FIG. 10","FIG. 1"],"b":["1000","250"]},"Context information server  acts as a broker between the sensor values received by the microprocessor  and a set of applications  operating on mobile device . Context information server  continuously receives sensor data packets from PIC , converts the raw data into a logical form, and derives additional information from the sensor data.","Applications  can access the logical form of information generated by registering with context information server  to receive messages when a particular context attribute is updated. This logical form is referred to as a context attribute. Such context attributes can be based on the state of one or more sensors as well as past states of the sensors, or even anticipated (predicted) future states. Tables 1, 2, 3 and 4 below provide lists of the context attributes that an application can register to receive. In the description column of each table, specific values for the variables are shown in italics. For example, the DISPLAYORIENTATION variable can have values of flat, portrait, landscape left, landscape right, or portrait upside down.",{"@attributes":{"id":"p-0061","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Group","Context Variable","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Touch","HoldingLeft","Binary"]},{"entry":[{},{},"HoldingRight","indication of"]},{"entry":[{},{},"Holdingback","contact with"]},{"entry":[{},{},{},"touch sensor"]},{"entry":[{},{},"LeftTouchState","Degree of"]},{"entry":[{},{},"RightTouchState","touching:"]},{"entry":[{},{},"BackTouchState","OutOfRange,"]},{"entry":[{},{},{},"Inrange, Close"]},{"entry":[{},{},"Holding&Duration","Whether or not"]},{"entry":[{},{},{},"the user is"]},{"entry":[{},{},{},"holding the"]},{"entry":[{},{},{},"device and for"]},{"entry":[{},{},{},"how long"]},{"entry":[{},{},"TouchingBezel&","Whether user is"]},{"entry":[{},{},"Duration","touching screen"]},{"entry":[{},{},{},"bezel and for"]},{"entry":[{},{},{},"how long"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0062","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Group","Context Variable","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Tilt\/","TiltAngleLR,","Left\/Right and"]},{"entry":[{},"Accelerometer","TiltAngleFB","Forward\/Back"]},{"entry":[{},{},{},"tilt angles in"]},{"entry":[{},{},{},"degrees relative"]},{"entry":[{},{},{},"to screen"]},{"entry":[{},{},{},"orientation"]},{"entry":[{},{},"TiltGravityFb","Absolute linear"]},{"entry":[{},{},"TiltGravityLr","acceleration"]},{"entry":[{},{},"TiltAbsAngleFb","Absolute tilt"]},{"entry":[{},{},"TiltAbsAngleLr","angle"]},{"entry":[{},{},"GravityDir","Facing up or"]},{"entry":[{},{},{},"down"]},{"entry":[{},{},"DisplayOrientation,","Flat, Portrait,"]},{"entry":[{},{},"Refresh","LandscapeLeft,"]},{"entry":[{},{},{},"LandscapeRight,"]},{"entry":[{},{},{},"or Portrait-"]},{"entry":[{},{},{},"UpsideDown. A"]},{"entry":[{},{},{},"Refresh event is"]},{"entry":[{},{},{},"posted if apps"]},{"entry":[{},{},{},"need to update"]},{"entry":[{},{},{},"orientation"]},{"entry":[{},{},"HzLR, MagnitudeLR,","Dominant"]},{"entry":[{},{},"HzFB, MagnitudeFB","frequency and"]},{"entry":[{},{},{},"magnitude from"]},{"entry":[{},{},{},"FFT of tilt"]},{"entry":[{},{},{},"angles over the"]},{"entry":[{},{},{},"last few seconds"]},{"entry":[{},{},"LookingAt,","If user is"]},{"entry":[{},{},"Duration","looking at"]},{"entry":[{},{},{},"display"]},{"entry":[{},{},"Moving & Duration","If device is"]},{"entry":[{},{},{},"moving in any"]},{"entry":[{},{},{},"way."]},{"entry":[{},{},"Shaking","If device is"]},{"entry":[{},{},{},"being shaken"]},{"entry":[{},{},"Walking,","If user is"]},{"entry":[{},{},"Duration","walking"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0063","num":"0062"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 3"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Group","Context Variable","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Proximity","Proximity","Estimated"]},{"entry":[{},{},{},"distance in cm"]},{"entry":[{},{},{},"to proximal"]},{"entry":[{},{},{},"object"]},{"entry":[{},{},"ProximityState,","Close, InRange,"]},{"entry":[{},{},"Duration","OutOfRange,"]},{"entry":[{},{},{},"AmbientLight"]},{"entry":[{},{},{},"(when out-of-"]},{"entry":[{},{},{},"range and bright"]},{"entry":[{},{},{},"ambient light is"]},{"entry":[{},{},{},"present)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Group","Context Variable","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Other","ScreenOrientation","Current display"]},{"entry":[{},{},{},"format"]},{"entry":[{},{},"VibrateOut","vibrator"]},{"entry":[{},{},{},"intensity"]},{"entry":[{},{},"Light","light sensor"]},{"entry":[{},{},{},"value"]},{"entry":[{},{},"Temperature","temperature"]},{"entry":[{},{},{},"sensor value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"The context attributes of Table 1 are generated based on signals from the touch sensors, those in Table 2 are generated based on tilt sensors and the gravity switch, those in Table 3 are generated based on the proximity sensors, and those in Table 4 are posted by applications other various sensors.","Each context attribute is defined in a table entry that includes the following fields:\n\n","To receive messages when a context attribute is updated, a client first generates a context client. Under one embodiment, this is done using a method CreateContextClient(myHwnd) as in:\n\nclient=CreateContextClient(myHwnd)\n\nwhere client is the resulting context client object and myHwnd is the window that will handle notification messages.\n","After the context client is defined, context attributes to be provided to the client are requested using a call such as:\n\ninit_value=RequestNotification(client, context, usage)\n\nwhere client is the client object created above, context is the name of the context attribute that the client wants to be updated on, and usage describes how the sensor will be used. The RequestNotification method returns the current value of the requested context attribute, which is assigned to init_value.\n","The usage parameter can have one of four values:\n\n","The distinction between foreground service and background service is that with a foreground service, the application is attempting to satisfy a desire that the user is explicitly requesting while with a background service, the application is attempting to perform a function that the user may or may not be aware of. For example, a user may request a foreground service of scrolling a document when a user tilts the mobile device. Thus, the user handles the mobile device in such a way as to purposefully cause scrolling. A background service may be invoked to automatically change the orientation of a display based on the readings of the tilt sensors. Thus, the user does not have to apply any attention to the device to obtain the proper orientation of the display.","When the server identifies a change in a context attribute, it sends a WM_COPYDDATA windows message to every window that requested notification for the context attribute. The windows message includes a parameter list lparam. The client can then retrieve the type of notification using GetNotifyType(lparam) and the value of the attribute using GetNotification(lparam, client, context).","When the client no longer wants notifications for an attribute, it can call a CancelNotification(client,context) method and can remove the context client from memory using DeleteContextClient(client). In addition, applications may explicitly request a change to their desired usage level(s), using a call such as:\n\n","By combining the requests for notification from applications with other user activity, such as switching between different applications on the mobile device, the context server can direct or withhold context notification messages from applications to simplify the sharing of sensors.","Under one embodiment, when context server  determines that an application should not be using a context attribute due to a conflict with another application, context server  will issue a UsageChange message that indicates that the application must change its usage of the context attribute to StopUsing. After the context server determines that an application may resume its use of the context attribute, it will issue a UsageChange message that indicates that the application may return to using the attribute at its requested usage level.","For example, if the user switches to an application that supports tilt-to-scroll and presses a button to begin scrolling, that application requests a FgService usage of the tilt attribute in a RequestNotification when the button is pressed. When this occurs, the context manager sends a UsageChange message to all other applications that have requested usage of the tilt attribute either as FgService usage or BgService usage to indicate that each of these applications are now on a StopUsing usage of the attribute. When the user indicates that scrolling is complete, the tilt-to-scroll application posts a RequestUsageChange with a usage of StopUsing. In response, context server  issues a UsageChange to each of the other applications to indicate that their usage has returned to its previous value.","In particular, the context server sends a UsageChange message to an application telling it to StopUsing a sensor when the following criteria are met:\n\n","Conversely, the context server sends a UsageChange message to an application telling it to resume using an attribute at its previously requested usage level under the following conditions:\n\n","Under one embodiment of the invention, even if an application ignores the UsageChange message telling it to StopUsing a context attribute, that application will stop receiving messages from the context server for that attribute. Hence, UsageChange messages provide an opportunity for application to interact smoothly with other applications, but no further explicit programmatic action is required.","The sensors described in  have many novel uses under the present invention. Each of these uses is described below.","In some embodiments of the present invention, the tilt sensor is used to detect the orientation of the mobile device so that the image on the display of the mobile device may be matched to the mobile device orientation.",{"@attributes":{"id":"p-0081","num":"0098"},"figref":["FIG. 11","FIG. 11","FIG. 12"],"b":["1100","1102","1100","1104","1104","1100"]},"Under the present invention, the displayed image may be matched to the orientation of the device through a simple rotation of the display image or through a redrawing of the display image based on the orientation of the device and the relative dimensions of the display in that orientation.","A simple rotation is typically performed by using the center of the screen as the center of rotation. For such rotations, a transform of points x,y in the document to a point x\u2032,y\u2032 on the screen is given by equation 3:\n\n\u2003\u2003EQ. 3\n\nwhere T is a translation and R is the 2D rotation matrix for 0\u00b0, 90\u00b0, 180\u00b0, or 270\u00b0.\n","A redrawing of the image that takes the dimensions of the display into consideration allows applications to change the contents of the image before redrawing the image. For instance, a word processing application can recalculate word wrapping based on the dimensions of the display in its new orientation. Thus, the number of words per line will change when the image is drawn in its new orientation. An example of this effect can be seen by comparing the text in image  to the text in image .","Context information server  causes the image to be refreshed by sending an appropriate notification to applications . These applications then generate a new image for the display.","To determine the orientation of the mobile device, most embodiments of the present invention examine both the left\/right tilt of the mobile device and the front\/back tilt.  provides a graph showing the orientations determined by context information server  for various combinations of left\/right and forward\/back tilt. In , left\/right tilt is shown along horizontal axis  and forward\/back tilt is shown along vertical axis . In , there are four orientation regions , , , and , which are separated by deadbands , ,  and .  also includes a flat area  that corresponds to the mobile device being laid flat.","Orientation area  is related to an upright portrait orientation for a mobile device such as mobile device  of . This is the typical or natural way for a user to hold the mobile device. Orientation areas  and  are associated with a rotation of the mobile device counterclockwise and clockwise 90\u00b0, respectively. Orientation area  is associated with the mobile device being rotated 180\u00b0 so that is upside down.","Transitions between these areas nominally occur when the left\/right tilt equals the forward\/back tilt. As shown by deadbands , ,  and , the display does not switch immediately at these angles. Instead, there is a plus or minus 5\u00b0 deadband to prevent jitter. Thus, the device must tilt through the entire deadband zone before context information server  of  will issue a new orientation value. In some embodiments, there is a further 0.5 second time-out. The orientation of the device must remain at the new orientation for 0.5 full seconds before the display format changes.","Under some embodiments of the present invention, the mobile device's touch sensor attributes are also remapped to match the orientation of the mobile device. For example,  show a tablet PC in two different orientations that are 180 degrees apart. In the orientation of , contact with touch sensor  is mapped as a contact with a left touch sensor and contact with touch sensor  is mapped as contact with a right sensor. In the orientation of , contact with touch sensor  is mapped as contact with a right touch sensor and contact with touch sensor  is mapped as contact with a left touch sensor.","Under one embodiment of the present invention, the orientation of the display is stabilized to avoid undesired switching of the displayed orientation. This is achieved by monitoring the degree to which the mobile device is being moved. In particular, the mobile device should experience a relatively fast motion followed by a relative stop in the motion as the tilt angle moves from one tilt orientation to another in order to change the display orientation. In one embodiment, this movement is measured as:\n\ntilt\u2212prevTilt\u2003\u2003EQ. 4\n\ntilt\u2212prevTilt\u2003\u2003EQ. 5\n\nsampleEnergy=\u221a{square root over (\u0394)}\u2003\u2003EQ. 6\n\nsignalEnergy=signalEnergy*(1\u2212\u03b1)+sampleEnergy\u2003\u2003EQ. 7\n\nwhere tiltx and tilty are current tilt values in the forward\/back and left\/right directions, respectively, prevTiltx and prevTilty are tilt values from the preceding sampling time, \u03b1 is a decay rate which in one embodiment is 0.25 and signalEnergy is initialized to a value of 1.0.\n","The value of the signalEnergy indicates the amount of movement that the mobile device is experiencing. Under one embodiment, the mobile device is considered to be moving when the signalEnergy exceeds an onset threshold for more than a set period of time. Under one embodiment, the onset threshold is 12.0 and the period of time is 0.2 seconds. The cessation of movement is detected when the signalEnergy drops below a cessation threshold for the same amount of time. Under one embodiment, the cessation threshold is 8.0.","Under this embodiment of the invention, the context server detects movement followed by cessation of movement. If the orientation of the displayed image on the screen does not match the instantaneous screen orientation (the orientation of the device), a 1 second time-out begins. After the time-out, the context server generates a message to switch the orientation of the displayed image to match the instantaneous screen orientation. Note that although a 1 second time-out was used in this embodiment, shorter or longer time-outs may be used.","If movement begins again during the time-out, the time-out is cancelled. If the orientation of the device changes during the time-out, the time-out, is restarted at its full duration.","By combining the detection of tilt with the detection of movement, the present invention reduces the probability of switching the display format by accident, or of switching the display format multiple times during a single movement.","To determine whether the displayed image can be oriented to match the orientation of the device, Windows XP provides a method for enumerating the available display formats that is called EnumDisplaySettingsEx. Under one embodiment, the resolution or color depth of the image can be dropped to a lower level if it is necessary for the graphics hardware to display the screen at the orientation dictated by the device. A ChangeDisplaySettingsEx method allows the context server to change the orientation of the displayed image to match the orientation of the device.","In mobile devices with larger displays, such as a tablet PC, changing the orientation of the display takes time, uses valuable computing resources, and can include a period of time when the display goes blank. Thus, it is desirable to give users feedback so that they can prevent a switch in the orientation display before it takes affect.","Under one embodiment of the present invention, this feedback is presented in the form of an icon that indicates the orientation of the displayed images that will be triggered if the device is kept in its current orientation.  provides an example of an icon  that provides this feedback. Although shown as obscuring the images below icon  in , in other embodiments, icon  is semi-transparent allowing everything outside of the diamond to be activated by mouse or pen input. The feedback icon may further contain links or zones that the user can click on with a mouse, stylus, or touchscreen to customize or disable the feature if desired.","Note that the position of the icon  is defined within the previous orientation. Thus, in , the position of icon  is defined by a pair of screen coordinates for a landscape orientation of the tablet PC. In addition, since icon  is defined relative to the landscape orientation, it is actually rotated to match the orientation to which the displayed images will be switched.","The feedback icon is automatically dismissed (either immediately, or following a time-out of a few seconds) if any of the following circumstances occur:\n\n","When the orientation of the displayed image switches, the icon must be redefined in order for it to appear properly on the display. In particular, the location of the icon must be redefined in terms of the coordinates that are appropriate for the new display orientation. In addition, the icon no longer needs to be rotated so the non-rotated version of the icon is displayed.","Under one embodiment of the present invention, windows that are opened in a particular orientation are hidden when the orientation changes. For example, if the user opened a word processing document while the mobile device is in a landscape orientation, the document would disappear as the user rotated the device to a portrait orientation. When the device was returned to its landscape orientation, the document would reappear.","This technique allows users to keep more windows open on the mobile device while not cluttering the display in any one orientation. Thus, for a rectangular display, there can be four different orientations resulting in four different work spaces. In each of these work spaces, the user can have different windows open. By simply rotating the mobile device, the user can access the different work spaces and the different windows open in those work spaces, without having to click on minimized windows or icons in the display.",{"@attributes":{"id":"p-0103","num":"0124"},"figref":["FIGS. 17 and 18","FIG. 17"],"b":["1700","1700","1800"]},"Under one embodiment, the windows are hidden using the ShowWindow(SW_HIDE) Windows API call. In other embodiments, the windows are hidden by terminating the application or placing the application in hibernation.","In further embodiments, a single application can appear in more than one orientation work space. In such embodiments, the same window may appear in multiple work spaces or different windows, representing separate instances of the application, will be found in the displays for the various orientations. Thus, one orientation may show a first document in a word processing window while a second orientation may show a second document in the word processing window.","Under one embodiment, before changing the orientation of the displayed image, the windows that will be hidden when the orientation changes are removed from the display so that the user can see which windows will be lost due the change in orientation.","The idea of orientation-specific applications can be extended to orientation-specific tasks, which represent a collection of windows, data and applications that have been grouped together by the user. Thus, each orientation can display a separate set of selectable tasks to the user, thereby allowing the user to group the tasks and to find the tasks without increasing the amount of clutter on the display. An example of a task would be a combination of a word processing window and a billing window.","Although windows have been described above, any displayed item may be treated in the same way. As such, icons, menus, and backgrounds can all be orientation specific such that they only exist in selected orientations.","When application windows are redisplayed in a new orientation, the present invention records the size and placement of the window in the previous orientation. This allows the windows to be replaced in the same position and the same size when the mobile device is returned to this position. If the position and size information were not recorded, the window may shift or change sizes due to the differences in the dimension of the display at various orientations. For example, a window that is shown in the right side of a landscape orientation may be shifted to the center and made smaller in a portrait orientation. If the position and size were not recorded as is done in the present invention, the window would be shifted to the center and appear smaller when the orientation returned to the landscape view.","This same technique can be applied to other items shown on the display such as icons and menus.","One problem encountered when using a tilted liquid crystal display is that as the display is tilted away from the user, the contrast of the displayed image is lessened. The present invention improves the displayed image by increasing the contrast of the display as the user tilts the display away from them. Note that this aspect of the present invention is not limited to personal information managers and may be used with any LCD device such as a pager, watch, laptop computer, tablet PC, cell phone, or stand alone LCD display. Under one embodiment, the contrast is set according to the following equation:\n\ncontrast=\u2003\u2003EQ. 5\n\nwhere m is a constant equal to \u22120.135, b is a constant equal to 5.25, dAis the change from the ideal viewing angle as measured by a tilt sensor in the display, and \u201ccontrast\u201d is the change in the contrast setting. Note that these values correspond to the software contrast settings of 1-10 available on the Cassiopeia E105 device. To prevent hysteresis, a tilt angle change of more than 3\u00b0 is typically required before the contrast is adjusted.\n","In further embodiments, the light level detected by the light sensor is also used to set the contrast and brightness such that the brightness increases as the ambient light increases and decreases as the ambient light decreases.","Under one embodiment of the present invention, a mobile device, such as a tablet PC, places itself in a full-power mode based on how the device is being handled. In one particular embodiment, the invention uses a combination of sensors to determine whether the user wants the device to be in full-power mode. In particular, the system uses a touch sensor to determine whether the user is holding the device and a tilt sensor to determine whether the user has properly oriented the device so that it is likely they are looking at it. By using both a touch sensor and an orientation sensor, the present invention avoids placing the device in full-power mode when it is in a briefcase.","In one particular embodiment, the orientation for full-power mode is a left\/right tilt of between plus or minus 15\u00b0, a forward\/back tilt of greater than \u22125\u00b0, and an upright portrait orientation. If the user maintains this orientation for at least 0.5 seconds, PIC microprocessor  of  places the device in full-power mode using power switch . The required time interval can be set as desired but is used to prevent powering up due to transient signals.","In other embodiments, the present invention prevents a mobile device from entering an idle mode if the user is handling the device or gesturing toward the device. In idle mode, the mobile device reduces the power consumption of the device by turning off the display and\/or other system components. Typically, a mobile device will enter idle mode if the user has not pressed a button or touched the screen for some period of time. Under certain types of usage, users find that the system powers down when they would rather have it remain active. For instance, this often happens when the user is reading a large amount of text or is trying to interact with someone else while periodically relating to the text.","Under one embodiment of the invention, the device is prevented from entering an idle mode when context information server  determines that the user is holding the input device or when it determines that there is motion near the device. Such motion can be detected by changes in the output of the proximity sensor and is indicative of a user gesturing toward the device.","Note that this embodiment relies on motion and not just proximity. This is done to allow the device to enter idle mode when it is placed near a fixed object while it is not being used. For example, under the present invention, the device will still enter idle mode if a stack of paper is placed on top of the device.","When the sensors detect that the user is Walking or that the Tablet is moving, the double-click thresholds are enlarged under one embodiment of the present invention to make it easier to select an object on the display. The double-click thresholds define the area on a display where a user must click twice to activate an icon or link. By increasing this area when the user is moving, the present invention makes it easier for users to successfully activate an icon or link. Similarly, system thresholds exist for distinguishing a click from a dragging (drag-and-drop) behavior, and can be enlarged with motion.","Under one embodiment of the present invention, a flinging gesture to the left or right, as if throwing the mobile device, can be sensed by the tilt sensors and can be used by an application to represent a desire by the user to dismiss a window or dialogue box, to move back to a previous page or forward to a next page, or to switch applications.","The tilt sensors in a mobile device can be used to draw on a screen. When a user tilts the mobile device, a line is drawn in the direction of the tilting. Lines can be erased by turning the mobile device upside down and shaking the device. The fact that the mobile device is upside down is detected by the gravity switch and the shaking is detected by the linear accelerometers. The tilt drawing is briefly suspended after a shake to erase so that the mobile device can be returned to its upright orientation without drawing on the screen.","Although the present invention has been described with reference to preferred embodiments, workers skilled in the art will recognize that changes may be made in form and detail without departing from the spirit and scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 4","FIG. 2"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 5","FIG. 2"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 6","FIG. 2"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIGS. 14 and 15"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 18"}]},"DETDESC":[{},{}]}
