---
title: Secure traversal of network components
abstract: A method and apparatus for authenticating a client to a content server. A ticket authority generates a ticket associated with the client. The ticket comprises a first ticket and a second ticket. The ticket authority transmits the first ticket to the client and the client uses the first ticket to establish a communication session with an content server proxy. The ticket authority then transmits a second ticket to the content server proxy and the content server proxy uses the second ticket to establish a communication session with the content server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07661129&OS=07661129&RS=07661129
owner: Citrix Systems, Inc.
number: 07661129
owner_city: Fort Lauderdale
owner_country: US
publication_date: 20020226
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present invention relates generally to traversing network components and, more specifically, to providing secure, authenticated traversal of arbitrary network components using next-hop routing and per-hop tickets.","Referring to , a computer system  known to the prior art typically includes a client computer , a content server proxy , and a content server . The client computer  is typically a personal computer that can download information from the content server  over a network , such as the Internet or World Wide Web. The content server proxy  is typically a security gateway, such as a router, through which messages to and from the content server  pass. The content server  hosts one or more application programs that can be accessed by the client .","The client  is typically in communication with the content server proxy  over a client-proxy communication channel . The content server proxy  is typically in communication with the content server  over a proxy-server communication channel . The computer system  also typically includes firewalls ,  to prohibit unauthorized communication to\/from the content server .","The client  typically gains access to the content server  after passing through the firewall  of the content server proxy  and the firewall  of the content server . Thus, if an unauthorized user bypasses the content server proxy  and the firewall  (that is, if an unauthorized user is able to connect to the content server  without first accessing the content server proxy ) the unauthorized user can typically access the content server  without encountering additional security. Further, a malicious user breaching firewall  typically has unrestrained access to the content server proxy  and, in many cases, to content server .","Therefore, there is a need to increase the protection of a content server  from an unauthorized user. There is also a need to enforce network routing requiring the client  to pass through one or more additional security measures before gaining access to the content server .","The present invention relates to a method and system for authenticating a client to a content server. In one aspect, the method includes the step of generating a ticket, by a ticket authority, associated with the client. The ticket comprises a first ticket and a second ticket. The method also includes the steps of transmitting the first ticket to the client and the client using the first ticket to establish a communication session with a content server proxy. The method also includes the steps of transmitting the second ticket to the content server proxy and the content server proxy using the second ticket to establish a communication session with the content server.","In one embodiment, the client is authenticated to a web server before the ticket authority generates the ticket associated with the client. The method may also include the step of transmitting the first ticket to a web server and the web server transmitting the first ticket to the client. In another embodiment, the ticket authority transmits a disabled second ticket with the first ticket to the client. The ticket authority can also transmit the address of a content server with the transmission of the second ticket to the content server proxy.","In another aspect, the system includes a client, a ticket authority, a content server, and a content server proxy. The content server proxy communicates with the client, the ticket authority, and the content server. The ticket authority generates a ticket associated with the client. The ticket comprises a first ticket and a second ticket. The first ticket is transmitted to the client and used to establish a first communication session with the content server proxy. The second ticket is transmitted to the content server proxy and used to establish a second communication session with the content server.","In one embodiment, the client is authenticated to a web server. The ticket authority can also transmit the second ticket to the web server and the web server transmits the second ticket to the content server for validation. In one embodiment, the content server proxy is a secure socket layer relay.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2A","b":["205","205","10","115","120","220","225","205","150","160","120","150","160","230","230","115","220"]},"The client  can be any personal computer (e.g., based on a microprocessor from the x86, 680x0, PowerPC, PA-RISC, MIPS families), smart or dumb terminal, network computer, wireless device, information appliance, workstation, minicomputer, mainframe computer or other computing device that has a graphical user interface. Operating systems supported by the client  can include any member of the WINDOWS family of operating systems from Microsoft Corporation of Redmond, Wash., Macintosh operating system, JavaOS, and various varieties of Unix (e.g., Solaris, SunOS, Linux, HP-UX, A\/IX, and BSD-based distributions).","The client  is in communication with the content server proxy  over the client-proxy communication channel  and also in communication with the web server  over the client-web server communication channel . The content server proxy  is in communication with the ticket authority  over a proxy-authority communication channel  and the web server  is in communication with the ticket authority  over a web server-authority communication channel . The content server proxy  is also in communication with the content server  over a proxy-server communication channel . In another embodiment, the web server  can communicate with the content server  over an agent-server communication channel . Similarly, the content server  can communicate with the ticket authority  over a ticket-content server communication channel . In one embodiment, the respective communication channels , , , , , ,  are established over the network .","In one embodiment, the client  includes a web browser , such as INTERNET EXPLORER developed by Microsoft Corporation in Redmond, Wash., to connect to the web. In a further embodiment, the web browser  uses the existing Secure Socket Layer (SSL) support to establish the secure client-web server communication channel  to the web server . SSL is a secure protocol developed by Netscape Communication Corporation of Mountain View, California, and is now a standard promulgated by the Internet Engineering Task Force (IETF).","The client  may also include an application client  for establishing and exchanging communications with the content server  over the client-proxy communication channel . In one embodiment, the application client  is an ICA client, developed by Citrix Systems, Inc. of Fort Lauderdale, Fla., and is hereafter referred to as ICA client . Other embodiments of the application client  include an RDP client, developed by Microsoft Corporation of Redmond, Wash., a data entry client in a traditional client\/server application, an ActiveX control, or a Java applet. Moreover, the output of an application executing on the content server  can be displayed at the client  via, for example, the application client  or the web browser .","In one embodiment, the content server proxy  is a security gateway through which messages over the client-proxy communication channel  must pass. In one embodiment, the network firewall  repudiates any incoming message from the client-proxy communication channel  that does not have the content server proxy  as its destination. Likewise, the network firewall  repudiates any outgoing message for the client-proxy communication channel  unless its source is the content server proxy . Although illustrated as a content server proxy , the security gateway can alternatively be a router, firewall, relay, or any network component that can provide the necessary security.","The content server  hosts one or more application programs that are available to the client . Applications made available to the client  for use are referred to as published applications. Examples of such applications include word processing programs such as MICROSOFT WORD and spreadsheet programs such as MICROSOFT EXCEL, both manufactured by Microsoft Corporation of Redmond, Wash., financial reporting programs, customer registration programs, programs providing technical support information, customer database applications, or application set managers.","In one embodiment, the content server  is a video\/audio streaming server that can provide streaming audio and\/or streaming video to the client . In another embodiment, the content server  is a file server that can provide any\/all file types to the client . In further embodiments, the content server  can communicate with the client  using a presentation protocol such as ICA, from Citrix Systems, Inc. of Ft. Lauderdale, FL or RDP, from Microsoft Corporation of Redmond, Wash.","In a further embodiment, the content server  is a member of a server farm , or server network, which is a logical group of one or more servers that are administered as a single entity. In one embodiment, a server farm  includes multiple content servers , \u2032, \u2033 (generally ). Although the embodiment shown in  has three content servers , the server farm  can have any number of servers. In other embodiments, the server farm  is a protected network that is inaccessible by unauthorized individuals, such as corporate Intranet, Virtual Private Network (VPN), or secure extranet. Additionally, the servers making up the server farm  may communicate over any of the networks described above (e.g., WAN, LAN) using any of the protocols discussed.","The ticket authority , which in the embodiment shown in  is part of the server farm , issues one or more tickets to authenticate the client . In particular, the ticket authority  enables authentication of the client  over one communication channel (i.e., the client-web server communication channel ) based on authentication credentials. The ticket authority  further enables the client  to be authenticated to another communication channel (i.e., client-proxy communication channel ) without having the client  repeatedly provide authentication credentials on the other communication channel.","In one embodiment, the ticket authority  is a stand-alone network component. In other embodiments and as shown in , a modular ticket authority , \u2032, \u2033 is a software module residing on one or more content servers . In this embodiment, the web server  may communicate with the ticket authority  and\/or the content server  over the agent-server communication channel .","In one embodiment, the ticket authority  generates a first ticket and a second ticket. In some embodiments, the tickets are both nonces. In further embodiments, the tickets are generated using a cryptographic random number generator that has been suitably seeded with randomness. The first ticket is transmitted to the client  and is used to establish a first communication session between the client  and the content server proxy . The second ticket is transmitted to the content server proxy  and is used to establish a second communication session between the content server proxy  and the content server .","The DMZ  separates the server farm  from the components (e.g., content server proxy ) of the communications system  that are accessible by unauthorized individuals. As described above, the DMZ  is delineated with two firewalls ,  that prohibit unauthorized communication. The first firewall  and the second firewall  each apply a set of policy rules to determine which messages can traverse the DMZ . In one embodiment, the first firewall  and the second firewall  apply the same set of policy rules. Alternatively, the first firewall  and the second firewall  may apply different sets of policy rules. Each firewall ,  can be a router, computer, or any other network access control device. In another embodiment, the communications systems  includes one of the firewalls ,  or no firewall , .","In one embodiment, the web server  delivers web pages to the client . The web server  can be any personal computer (e.g., Macintosh computer, a personal computer having an Intel microprocessor, developed by Intel Corporation of Santa Clara, Calif., a personal computer having an AMD microprocessor, developed by Advanced Micro Devices, Inc. of Sunnyvale, Calif., etc.), Windows-based terminal, Network Computer, wireless device (e.g., cellular phone), information appliance, RISC Power PC, X-device, workstation, mini computer, main frame computer, personal digital assistant, or other communications device that is capable of establishing the secure client-web server communication channel  with the client .","In another embodiment, the web server  provides a corporate portal, also referred to as an Enterprise Information Portal, to the client . Enterprise portals are company web sites that aggregate, personalize and serve applications, data and content to users, while offering management tools for organizing and using information more efficiently. In other embodiments, the web server  provides a web portal, or Internet portal, to the client . A web portal is similar to a corporate portal but typically does not include business-specific information.","The network  can be a local-area network (LAN), a wide area network (WAN), or a network of networks such as the Internet or the World Wide Web (i.e., web). The respective communication channels , , , , , ,  may each be part of different networks. For example, the client-proxy communication channel  can belong to a first network (e.g., the World Wide Web) and the client-web server communication channel  can belong to a second network (e.g., a secured extranet or Virtual Private Network (VPN)). In other embodiments, the network  spans the DMZ  as well as the server farm  and the same communication protocol is used throughout. In some embodiments, no firewall  separates the content server proxy  and web server  from the content server  and ticket authority .","The client-web server communication channel  is any secure communication channel. In some embodiments, communications over channel  are encrypted. In certain of these embodiments, the client  and the web server  may communicate using the Secure Socket Layer (SSL) of the HyperText Transfer Protocol (HTTPS). Alternatively, the client  and the web server  may use other encryption techniques, such as symmetric encryption techniques, to protect communications.","Example embodiments of the communication channels , , , , , ,  include standard telephone lines, LAN or WAN links (e.g., T1, T3, 56kb, X.25), broadband connections (ISDN, Frame Relay, ATM), and wireless connections. The connections over the communication channels , , , , , ,  can be established using a variety of communication protocols (e.g., HTTP, HTTPS, TCP\/IP, IPX, SPX, NetBIOS, Ethernet, RS232, messaging application programming interface (MAPI) protocol, real-time streaming protocol (RTSP), real-time streaming protocol used for user datagram protocol scheme (RTSPU), the Progressive Networks Multimedia (PNM) protocol developed by RealNetworks, Inc. of Seattle, Wash., manufacturing message specification (MMS) protocol, and direct asynchronous connections).","Further, in one embodiment the client-proxy communication channel  can be established by using, for example, a presentation services protocol such as Independent Computing Architecture (ICA) protocol, manufactured by Citrix Systems, Inc. of Fort Lauderdale, Fla. ICA is a general-purpose presentation services protocol designed to run over industry standard network protocols, such as TCP\/IP, IPX\/SPX, NetBEUI, using industry-standard transport protocols, such as ISDN, frame relay, and asynchronous transfer mode (ATM). The ICA protocol provides for virtual channels, which are session-oriented transmission connections that can be used by application-layer code to issue commands for exchanging data. In other embodiments, the client-proxy communication channel  can be established using the thin X protocol or the Remote Display Protocol (RDP), developed by Microsoft Corporation of Redmond, Wash..","Although described as establishing a first communication session between the client  and the content server proxy  and a second communication session between the content server proxy  and the content server , the communication session can be viewed as a single, logical communication session between the client  and the content server .","In one embodiment, a user of the client  employs the web browser  to authenticate the user to the web server . In one embodiment, the client  transmits user credentials, such as login and password information, to the web server . The web server  verifies that the user has access to the server network .","In a further embodiment, the web browser  uses SSL to establish the secure client-web server communication channel . The web browser  can alternatively connect to the web server  over the client-web server communication channel  using other security protocols, such as, but not limited to, Secure Hypertext Transfer Protocol (SHTTP) developed by Terisa Systems of Los Altos, Calif., HTTP over SSL (HTTPS), Private Communication Technology (PCT) developed by Microsoft Corporation of Redmond, Wash., and the Transport Level Security (TLS) standard promulgated by the Internet Engineering Task Force (IETF).","In one embodiment, the web server  transmits a web portal or enterprise portal, as described above, to the client  upon validation of the user to enable the client  to request an application or a server desktop, for example, to be remotely displayed on the client .","In operation, and also referring to , the client user requests (step ) content (e.g., an application, a server desktop) to be remotely displayed on the client  (i.e., the ICA client ). In another embodiment, the client  uses the web browser  to request an application and the web server  then authenticates the user. After receiving the request, the web server  validates (step ) the request with the ticket authority . The ticket authority  then generates (step ) a ticket, which includes a first ticket, or client ticket, and a second ticket, or content server proxy ticket. The first and second tickets are \u201cone-time use\u201d tickets having no further value after their first use. In a further embodiment, the first and second tickets must be used within a predetermined time period.","In one embodiment, the ticket authority  stores the first and second tickets in memory (e.g., RAM) until the ticket is used. Alternatively, the ticket authority  stores the first and second tickets in a storage device (not shown) until the ticket is used. The storage device may include, for example, a database or a persistent memory (e.g., on a floppy disk, hard disk drive). The ticket authority  subsequently transmits (step ) the client ticket to the web server  and the web server  then forwards (step ) the client ticket to the client .","The client  then initiates (step ) a communication session with the content server proxy  by transmitting a proxy connection request over the client-proxy communication channel . The proxy connection request includes the client ticket. In one embodiment, the proxy connection request also includes a dummy password that can be replaced by the content server proxy  when establishing a communication session with the content server . In a further embodiment, the web server  transmits the dummy password to the client  for future generation of a proxy connection request having a format acceptable to the content server proxy . The content server proxy  then extricates (step ) the client ticket from the proxy connection request and forwards the client ticket to the ticket authority  for validation. The ticket authority  then validates (step ) the first ticket. In one embodiment, the ticket authority  verifies the first ticket by searching its storage device (e.g., database) for the first expected ticket.","If the ticket authority  does not find the first ticket in the storage device (such as if the first ticket has been used already), the ticket authority  ends the communication session. If the received ticket matches the client ticket that the ticket authority  expects, the client ticket is validated. The ticket authority  then transmits (step ) the second or content server proxy ticket to the content server proxy . Additionally, the ticket authority  deletes the client ticket from the storage device, as the client ticket has now been used once. In another embodiment, the ticket authority  also transmits the Internet protocol (IP) address of the content server  to the content server proxy . In yet another embodiment, the ticket authority  transmits the domain name of the content server  to the content server proxy  for future conversion into the IP address.","The content server proxy  receives the second or content server proxy ticket and subsequently opens communications across the proxy-server communication channel  by transmitting (step ) the second ticket to the content server . The content server  receives the content server proxy ticket and then transmits the ticket over the ticket-content server communication channel  to the ticket authority  for validation (step ). In one embodiment, if the ticket authority  determines that the content server proxy ticket received from the content server  has been used previously or does not have the correct value (i.e., the same value as the value stored in the associated storage device), the ticket authority  transmits an error message to the content server proxy  (or the web server ) to terminate the established communication session with the client . If the ticket authority  validates the content server proxy ticket (step ), the content server  then launches (step ) the ICA published application. The content server  then transmits application information to the content server proxy  (step ) for remote displaying of the application on the client  (step ) using the ICA client .","In a further embodiment, the client  launches the ICA client  when initiating communications with the content server proxy  in step . In other embodiments, the client  launches the ICA client  when the client  receives the application information from the content server proxy  in step .","Thus, the client  is not aware of the content server proxy ticket but only the client ticket. Moreover, the ICA client  cannot access the content server  without communicating with the content server proxy  (and presenting the client ticket).","The ticket authority  could also transmit the content server proxy ticket to the content server proxy  in step  as the user password for the user of the client . This allows the content server proxy  to use the content server proxy ticket as the login password to gain access to the content server  without exposing the user's login password over the untrusted part of the web (i.e., the non-secure client-proxy communication channel  during step ). Thus, in one embodiment, the communications system  could include a centralized password mapping database managed by the ticket authority  and collocated with the content server  to map the content server proxy ticket with a user's password.","Therefore, the password can accompany both tickets (i.e., the content server proxy ticket and the client ticket) or the password can accompany one of the two tickets. As described above, if the password accompanies one of the two tickets, such as the client ticket, then the content server proxy ticket is the password. In one embodiment, the password can be a system password that does not change in value or may be a one-time use password, such as those generated by SecurID tokens developed by RSA Security Inc. of Bedford, Mass.","Additionally, the invention can be expanded to a communications system having any number of content server proxies , or \u201chops\u201d, that the client  has to communicate with before establishing a communication session with the content server . Although described above and below as a content server proxy , a hop can be any network component, such as a firewall, router, and relay.","For instance and referring to , a four-hop example is a communication system  having a first content server proxy \u2032, a second content server proxy \u2033, and a third content server proxy \u2032\u2033 (generally ). The content server proxies  communicate over a proxy-proxy communication channel, such as a first proxy-proxy communication channel \u2032 and a second proxy-proxy communication channel \u2033 (generally proxy-proxy communication channel ). The client  communicates with the first content server proxy \u2032 which communicates with the second content server proxy \u2033. The second content server proxy \u2033 communicates with the third content server proxy \u2032\u2033 and then the third content server proxy \u2032\u2033 communicates with the content server  over the proxy-server communication channel  to establish the communication session with the content server . Further, although the embodiment described above includes a ticket having a client ticket and a content server proxy ticket, another embodiment includes the ticket comprising numerous tickets.","More explicitly and also referring to , the web server  receives a request from the client  for an application and the web server  validates the request with the ticket authority  (step ). The ticket authority  then generates an N part ticket (e.g., Tto T) in step . In one embodiment, the ticket authority  then transmits a portion Tof the N part ticket (e.g., the first part of the ticket, or first ticket T) to the web server  (step ). The web server  then transmits the ticket Tto the client  (step ). In one embodiment, the ticket authority  also transmits the address of the next \u201chop\u201d (e.g., the first content server proxy \u2032) to the web server , which then transmits the address to the client . This address is the address of the next hop (e.g., content server proxy ) that this hop (e.g., client ) needs to communicate with for the client  to eventually be authenticated to the content server .","The client  uses the address to then contact the next \u201chop\u201d (e.g., first content server proxy \u2032) and initiates a communication session with the first content server proxy \u2032 by transmitting a proxy connection request over the client-proxy communication channel . The first content server proxy \u2032 then extracts (step ) the first ticket Tfrom the proxy connection request and forwards this ticket to the ticket authority  for validation. The ticket authority  then validates (step ) the first ticket T.","Upon proper verification of the first ticket T, the ticket authority  transmits the next ticket Tfrom the N part ticket (e.g., T) to the next content server proxy  (e.g., first content server proxy \u2032) (step ). In some embodiments, the ticket authority  also transmits the address of the next hop (e.g., the second content server proxy \u2033) to this hop (e.g., the first content server proxy \u2032). The first content server proxy \u2032 transmits this ticket to the next hop (e.g., the second content server proxy \u2033) (step ). In one embodiment, the second content server proxy \u2033 verifies Tby transmitting the ticket to the ticket authority  (step ). The ticket authority  validates the second ticket T(step ) and the process continues, as shown in steps  through . Once the last part of the N part ticket has been validated, steps  through  occur, as shown in , to launch the application on the client .","In one embodiment, each content server proxy  (i.e., each hop) validates T(e.g., T) with a ticket authority  associated with the content server proxy  (i.e., hop). In this embodiment, after each content server proxy  validates the ticket T(e.g., T) with a ticket authority , the ticket authority  at which the validation took place transmits the next ticket T(e.g., T) and the address of the next content server proxy  (i.e., the next \u201chop\u201d destination) to the content server proxy  that had validated the ticket T. Thus, each content server proxy  is associated with a ticket authority  that has been configured with the current and next hop tickets (i.e., validating Tand transmitting Tfor the next hop). Consequently, the next content server proxy  acts as the client for that hop. This process is repeated until reaching the content server  in the communications system . Thus, each hop has been validated individually without revealing all of the ticket to any one hop.","In other embodiments, the ticket authority  may issue more than one ticket rather than issuing one ticket having many parts. For example, the ticket authority  generates a first hop ticket and a second hop ticket in step , where the first hop ticket has no association with the second hop ticket. The ticket authority  subsequently transmits the first hop ticket to the web server  and the web server  transmits the first hop ticket to the client . The client  transmits this first hop ticket to the content server proxy  (e.g., first content server proxy \u2032) for validation by the ticket authority . Upon validation in step , the ticket authority  transmits in step  the second hop ticket to the next content server proxy  (e.g., second content server proxy \u2033) while the first hop ticket is independent from the second hop ticket.","In a further embodiment, one or more of the ticket authorities  provides the content server proxies  with any necessary information needed to connect to the next hop, such as, but without limitation, encryption keys, SSL method configuration information, and authentication information to connect to a SOCKS server (e.g., SOCKS5 server, developed by NEC Corporation of Tokyo, Japan).","In yet another embodiment, a ticket authority  only generates a single ticket. The ticket authority  transmits the single ticket to the web server . The web server  forwards the single ticket to the client . The content server proxy  subsequently receives the ticket from the client  and \u201cconsumes\u201d the single ticket upon validation. As a result, the communications system  can use a single ticket to provide the ability to use arbitrary communication protocols over the client-proxy communication channel  and the client-web server communication channel . Additionally, because the content server  does not receive or verify the single ticket, the ticket is transparent to the content server  and, consequently, the content server  is not \u201caware\u201d of the use of the ticket.","By exploiting the security of the secure communications between the client  and the web server  over the secure client-web server communication channel , the communications system  establishes a secure communication link over the non-secure client-proxy communication channel  to remotely display desktop applications securely on the client .","In yet another embodiment and referring again to , the ticket authority  transmits in step  a disabled version of the content server proxy ticket with the client ticket to the web server  for transmission to the client . The client  subsequently transmits (step ) the content server proxy ticket along with the client ticket to the content server proxy  as part of the proxy connection request. The content server proxy  then forwards both tickets to the ticket authority . Upon receiving a disabled content server proxy ticket, the ticket authority  enables the content server proxy ticket after validating the client ticket. The ticket authority  then transmits the enabled content server proxy ticket to the content server proxy  for authentication to the content server .","Alternatively, in another embodiment the web server  receives a disabled content server proxy ticket and an enabled client ticket from the ticket authority  and only transmits the client ticket to the client . The client  transmits (step ) the client ticket to the content server proxy  as part of the proxy connection request. The content server proxy  then forwards the client ticket to the ticket authority . The ticket authority  validates the client ticket and, upon validation, enables the content server proxy ticket previously transmitted to the web server . In yet another embodiment, the ticket authority  transmits an enabled content server proxy ticket to the web server  upon validation of the client ticket for authentication to the content server .","Thus, at any given time, the ticket authority  provides only one ticket that is enabled to the client  or content server proxy  that the ticket authority  can validate. The ticket authority  may provide another ticket that can't be validated (i.e., a disabled ticket) until the enabled ticket is validated. Alternatively, the ticket authority  may not transmit the content server proxy ticket to the content server proxy  until the ticket authority  validates the enabled ticket. As discussed in further detail below, this enforces network routing of communications using the communications system  because the client  cannot traverse the web server  or the content server proxy  without having the ticket authority  validate the enabled ticket and transmit the ticket needed to communicate with the content server .","In another embodiment, instead of transmitting the content server proxy ticket to the content server proxy  as in step , the ticket authority  transmits the content server proxy ticket to the web server  directly over the web server-authority communication channel . The web server  then automatically transmits the content server proxy ticket to the content server . In other words, the web server  \u201cpushes\u201d the content server proxy ticket to the content server . The ticket authority  can also push the content server proxy ticket to the content server  without transmission of the content server proxy ticket to the content server proxy  or the web server .","In yet another embodiment, the content server  retrieves the content server proxy ticket from the ticket authority  over the ticket-content server communication channel . In other words, the content server  \u201cpulls\u201d the content server proxy ticket from the ticket authority . The above examples are illustrations of techniques used to eliminate step  (while modifying the destination of the transmission in step ).","Moreover, the invention enforces the routing of the client  through the content server proxy . As stated above, the client  has to possess the content server proxy ticket to establish a communication session with the content server . More specifically, to establish a connection with the content server , the web server  first has to validate the request of the client  with the ticket authority . Once validated, the client  obtains the first ticket and transmit this first ticket to the ticket authority  for validation. However, upon validation, the ticket authority  transmits the content server proxy ticket back to the content server proxy  rather than the client . The communication session between the client  and the content server  is established when the content server  receives the content server proxy ticket. Thus, the client  has to communicate with the content server proxy  in order to have the content server proxy ticket transmitted to the content server , thereby enforcing the routing of the client  through the content server proxy . Thus, the invention can ensure the proper traversal of a security device (e.g., the content server proxy ) before granting access to the content server .","For example, a content server  executes several applications, such as MICROSOFT WORD and MICROSOFT EXCEL, both developed by Microsoft Corporation of Redmond, Wash. In one embodiment, the client  uses NFUSE, developed by Citrix Systems, Inc. of Fort Lauderdale, Fla., to obtain information from the server farm  on which applications can be accessed by the client . If a client user wants to access and use MICROSOFT WORD, the client  requests the application from the web server . However, only users who pay an application fee for MICROSOFT WORD can become authorized to access the application.","To ensure the payment of the application fee, the communications system  includes the content server proxy  and the ticket authority  to enforce the routing of the client  through the content server proxy . The routing of the client  through the content server proxy  is valuable to the application provider if the content server proxy  is used to collect the application fee and authorize the user for access to the application.","The ticket authority  subsequently generates a ticket associated with the request for the application. An enabled first ticket is then transmitted to the client . Because the client  does not have the address of the content server , the client  cannot access the application. Further, the client  has not been authorized by the content server proxy  yet (i.e., has not yet paid). Thus, the client  has to communicate with the content server proxy  to become authorized. The content server proxy  can then transmit the enabled first ticket to the ticket authority  upon payment of the application fee.","The ticket authority then validates the client ticket and subsequently transmits (or enables) a content server proxy ticket to the proxy . The content server proxy  then transmits the content server proxy ticket to the content server  (e.g., assuming the client user has paid the application fee), which enables the content server  to transmit the application to the client . The communications system  may also use Application Launching And Embedding (ALE) technology, developed by Citrix Systems, Inc., to enable the launching of the application from or the embedding of the application into an HTML page for delivery to the client .","Having described certain embodiments of the invention, it will now become apparent to one of skill in the art that other embodiments incorporating the concepts of the invention may be used. Therefore, the invention should not be limited to certain embodiments, but rather should be limited only by the spirit and scope of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The advantages of the invention described above, together with further advantages, may be better understood by referring to the following description taken in conjunction with the accompanying drawings. In the drawings, like reference characters generally refer to the same parts throughout the different views. Also, the drawings are not necessarily to scale, emphasis instead generally being placed upon illustrating the principles of the invention.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 3","FIG. 2A"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 4B","FIG. 4A"]}]},"DETDESC":[{},{}]}
