---
title: Application programming interface for modem and ISDN processing
abstract: An application programming interface provides for command and data communication between a user, application or driver and a telephone data processing system which provides communication between a host computer and a telephone line. The telephone data processing system is capable of processing ISDN telephone calls as well as voice or analog-originated telephone calls. The application programming interface of the invention includes a host interface, an ISDN interface and a modem interface. The host interface receives commands and data from the user. The modem interface and ISDN interface provide commands and data communication between the host interface and the appropriate telephone call processing based on telephone call type. At the top level, the specific call type processing is transparent to the user. That is, the user need not know the type of telephone call, i.e., modem or ISDN, being processed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07106754&OS=07106754&RS=07106754
owner: Cisco Technology, Inc.
number: 07106754
owner_city: San Jose
owner_country: US
publication_date: 20020207
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF AN ILLUSTRATIVE EMBODIMENT"],"p":["The present application is a continuation of commonly assigned U.S. patent application Ser. No. 09\/451,216, which was filed on Nov. 29, 1999, now U.S. Pat. No. 6,347,093, by Reine et al. for an Application Programming Interface for Modem and ISDN Processing, which was a continuation of U.S. patent application Ser. No. 08\/893,192, which was filed on Jul. 15, 1997, by Reine et al. for an Application Programming Interface for Modem and ISDN Processing, has now issued as U.S. Pat. No. 6,023,473, and claimed the benefit of U.S. Provisional Patent Application Ser. No. 60\/022,812, filed Jul. 25, 1996, the disclosure of which is incorporated herein in its entirety by reference.","Communication among computers is typically implemented over telephone lines. In analog or \u201cvoice\u201d communication, a modem provides the interface between the telephone line and a host computer to convert telephone line signals to computer signals and computer signals to telephone signals. Modern telephone communications are also implemented in digital format. In one digital configuration, analog or voice originated data is digitized and transmitted in digital format over the telephone line. A digital modem can receive the digitized data and covert it to computer readable data. Alternatively, digital data transmitted over telephone lines in ISDN format is received by an ISDN terminal adapter which provides the interface between the digital telephone line and the host computer.","In any of these configurations, an interface must be provided between the host computer and the telephone processing equipment, i.e., the modem or terminal adapter. The interface, in both hardware and software, provides for command and data communication between the user and the modem or terminal adapter. The interface also allows an application or driver running on the host computer to interface with the modem or terminal adapter. The interface, commonly referred to an \u201capplication programming interface\u201d or \u201cAPI,\u201d transmits and receives commands and data to and from the modem or terminal adapter to implement computer\/telephony communication.","Typically, the software application programming interface (API) runs on the host computer. It defines and maintains command and data structures required for communication between the host driver and the modem or terminal adapter. A conventional API is specific to the communication mode implemented on the applicable telephone line. That is, where ISDN communication is being provided, the API running on the host computer is specific to an ISDN terminal adapter. Where analog or voice is used, the API is specific to modem operation. Thus, traditionally, the host computer is interfaced to a single form of telephone line communication and runs an API applicable to only that single communication mode. If multiple communication modes are to be used, in a traditional configuration, the host computer must run an API for each mode.","The present invention is directed to a host processor for providing an application programming interface. The API of the invention provides an interface between a host application, driver or user and telephone processing-equipment that is capable of processing ISDN telephone calls and analog or voice-originated calls. The API of the invention includes a host interface which transfers signals between the host computer driver or user and the telephone processing system. The API also includes a modem interface which transfers signals to and from the host interface and which transfers commands and data associated with analog or voice-originated telephone calls between the host interface and a modem processor within the telephone data processing system, the modem processor processing data associated with analog or voice-originated telephone calls. The API of the invention also includes an ISDN interface which transfers signals to and from the host interface and which transfers commands and data associated with ISDN telephone calls between the host interface and an ISDN processor in the telephone data processing system, the ISDN processor processing data associated with ISDN telephone calls.","The API of the invention can be used with a telephone processing system that is capable of processing data for both ISDN and analog-originated telephone calls. It can also process data for multiple simultaneous telephone calls of either type or of both types. Such a telephone data processing system is described in co-pending U.S. patent Application Ser. No. 08\/686,990, filed Jul. 25, 1996, entitled \u201cApparatus and Method For Processing Multiple Telephone Calls,\u201d assigned to the same assignee as the present application. The contents of that co-pending application are incorporated herein in their entirety by reference.","Despite the ability of the API of the invention to facilitate plural telephone call types, the specific type of call being processed is transparent to the user or driver. That is, the user can implement interface processing without knowing the type of call being processed. To this end, in the API of the invention, the host API is at the user level and accepts commands and data from the user. The API of the invention also includes two lower-level APIs, namely, a modem API and an ISDN API, which are implemented based upon the type of call being processed.","The modem API is implemented when voice or analog originated calls are processed. In this case, the host API processes and formats commands and data from the host or driver for modem processing. The modem API receives the modem commands and data from the host API and generates modem commands and data and forwards them to the modem processor in the telephone data processing system.","The ISDN API is implemented when ISDN calls are processed. For ISDN calls, the host API processes and formats commands and data entered by the host for ISDN processing. The command and data are received from the host API. In response, the ISDN API generates ISDN commands and data and forwards them to an ISDN processor in the telephone data processing system for ISDN processing.","The API of the invention provides numerous advantages over interfaces provided in conventional computer\/telephone interface systems. The API of the invention provides the user with the flexibility of processing different types of telephone calls while not requiring the user to know which type of call is being processed. In other conventional systems, the API is specifically dedicated to a particular type of telephone call and, therefore, can only provide the user access to that type of call. The API of the invention provides the user with the ability to process different types of telephone calls, while maintaining transparency to the user, such that the user need not know the type of call being processed.","The API of the invention allows the user to process multiple telephone calls simultaneously, such calls being received in multiple channels of a basic rate ISDN (BRI) or a primary rate ISDN (PRI) telephone line. The ability to process multiple simultaneous telephone calls of multiple call types makes the API of the invention applicable to systems which regularly process multiple telephone calls simultaneously. Such systems could include Internet service providers. In conventional systems, both the hardware and the associated software interface had to be provided for each individual line. The system of the invention is therefore far less hardware and software intensive and, therefore, more efficient and less costly than conventional systems.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":["110","110","12","110","14","110","12","16"]},"In this embodiment, the API  includes a user-level host API , a lower-level modem API  and a lower-level ISDN API . The driver  interfaces with the API  via the host API . Depending upon the type of telephone call being processed, the host API  in turn interfaces with either the modem API  and\/or the ISDN API . The commands issued by the driver  are independent of the type of telephone call. The API  identifies the call type and formats and forwards the appropriate commands and data to the modem API  and\/or ISDN API . The driver need not be aware of the type of telephone call being processed and, therefore, need not select commands and data based on call type. That distinction is made by the host API .","In the embodiment depicted in , the API  of the invention interfaces with a telephone data processing system . The processing system  is capable of performing both modem processing  on analog or voice originated calls as well as ISDN processing  on ISDN type telephone calls. The telephone data processing system  can be of the type described as the MICA\u2122 unit in the copending U.S. patent application Ser. No. 08\/686,990, entitled \u201cApparatus and Method for Processing Multiple Telephone Calls,\u201d incorporated herein by reference.","The MICA\u2122 unit described in that co-pending application includes a PRI interface board for performing ISDN processing  as well as a multiple-modem and port processor board used for modem processing . The multiple modem board, in one embodiment, includes five \u201chex modules,\u201d each of which is capable of processing six modem telephone calls simultaneously. Hence, the multiple-modem board can process up to thirty simultaneous telephone calls.","The telephone data processing system  also includes a telephone interface  which is connected to the telephone line . Data from modem processing  and\/or ISDN processing  are formatted by the telephone interface  for transmission over the telephone line . When receiving from the telephone line, the telephone interface  receives incoming telephone data and formats it according to the telephone call type and forwards it to the appropriate processing  or .",{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2","FIG. 1","FIG. 1"],"b":["110","110","12","12","32","34","32","34","12","36","12","16","12","38","12","24","40","24"]},"As described above, the telephone data processing  is capable of processing analog or voice-originated calls via modem processor  as well as ISDN calls via ISDN processor . A telephone interface  provides the hardware and software interface between the telephone line  and the modem  and ISDN  processors. As described above, the telephone data processing system  can be of the form of the MICA unit described in U.S. co-pending patent 5 application Ser. No. 08\/686,990.","As described in that co-pending application, MICA is an acronym for Modem-ISDN Channel Aggregation and is used to identify the capability of the system to process both modem and ISDN data. The system includes a card set which includes a commercially available PRI interface card (ISDN processor ) and a proprietary multiple-modem processing card (modem processor ). The MICA card set is typically produced for use in ISA bus personal computers. The PC host software is responsible for command and data flow between the host-based driver and the MICA card set. The host software provides the interface  of the present invention.","The API  of the invention provides the software interface between the host computer operating system drivers and the modem  and ISDN  processors which, in one embodiment, are the MICA board set. This is done by providing an application programming library of function calls independent of operating system which provide command and data transfer and status reporting capabilities to the host application. As shown in , the host API  interfaces to both the modem API  and the ISDN API  and presents a single interface to the user. This layering enables the API  of the invention to present a consistent interface to a device driver even if the underlying board(s) should change.","The MICA board set is accessed via a shared memory interface. This interface allows the host software to address the boards' memory as though it was addressing host memory. The board memory is accessed through a window of a fixed size in a host memory space. While the host window does not move, the base address of the window can. This is accomplished by changing the addresses in the boards' page register. Each page of the boards' memory is the size of the host's memory window. In this way, the MICA boards' entire memory range can be accessed while using a small portion of the host memory space.","The host API  includes of a number of operating system-independent function calls to be made by an operating-system-specific driver. The OS driver uses this API  to manipulate the modem processor  and the ISDN processor , which, in one embodiment, comprise the MICA board set. The host API library provides an interface between the device driver  and lower-level board specific function calls in the modem API  and ISDN API . Table 1 contains a list of these host API function calls.",{"@attributes":{"id":"p-0027","num":"0026"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Host API Function Call Summary"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Call Type","Function","Purpose"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Initialization","MICA_Accept ( )","Accept an incoming call."]},{"entry":[{},"MICA_Close ( )","Close a data channel; used"]},{"entry":[{},{},"for terminating a call"]},{"entry":[{},"MICA-Connect ( )",".Dial the phone"]},{"entry":[{},"MICA_Init ( )","Initialize the boards;"]},{"entry":[{},{},"should be called once per"]},{"entry":[{},{},"board."]},{"entry":[{},"MICA_Listen ( )","Listen on a channel for an"]},{"entry":[{},{},"incoming call."]},{"entry":[{},"MICA_Open ( )","Open a channel for"]},{"entry":[{},{},"listening or dialing."]},{"entry":[{},"MICA_Reset ( )","Reset a board; used when"]},{"entry":[{},{},"a board needs to be"]},{"entry":[{},{},"restarted."]},{"entry":["Data Flow","MICA_Recv ( )","Receives data (if any)"]},{"entry":[{},{},"from a previously opened"]},{"entry":[{},{},"channel."]},{"entry":[{},"MICA_Select ( )","Check a channel's status."]},{"entry":[{},"MICA_Send ( )","The channel must be"]},{"entry":[{},{},"opened first; sends data"]},{"entry":[{},{},"out to the MICA board"]},{"entry":[{},{},"set."]},{"entry":["Control Messages","MICA_GetOption ( )","Get the status of a system"]},{"entry":[{},{},"option."]},{"entry":[{},"MICA_ProcessInt ( )","Process a MICA interrupt."]},{"entry":[{},"MICA_SetOption ( )","Set or modify a system"]},{"entry":[{},{},"option."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"All of the host API function calls send parameters with each function call. Each function also returns a result code to indicate the result of the function call. Each function call will now be described in detail.","The MICA_Accept call is used to accept an incoming call on a particular channel. A sample format for the call is as follows:",{"@attributes":{"id":"p-0030","num":"0029"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_Accept (",{}]},{"entry":[{},"int16","channelId"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0031","num":"0030"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_SUCCESS","The call is accepted."]},{"entry":[{},"MICA_ERROR","The call is rejected."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The MICA_Close function call is used to close a data channel. A sample format is as follows:",{"@attributes":{"id":"p-0033","num":"0032"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_Close (",{}]},{"entry":[{},"int16","channelId"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0034","num":"0033"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_SUCCESS","The channel is closed."]},{"entry":["MICA_INVALID_CHANNEL","The channel provided was not valid."]},{"entry":["MICA_NOT_OPEN","The channel was not open."]},{"entry":["MICA_ERROR","Either the ISDN or the modem board"]},{"entry":[{},"didn't close."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The MICA_Connect function call is used to open a data channel to initiate an outgoing telephone call. A sample format for the call as follows:",{"@attributes":{"id":"p-0036","num":"0035"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_Connect (",{}]},{"entry":[{},"Int16","channel Id,"]},{"entry":[{},"char","*phoneNumber,"]},{"entry":[{},"void","(*callBack)(channelId, event_mask)"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"If the optional callBack routine is provided, it is executed after the connection is made. The channelId is returned with the callBack routine allowing a use of a single callBack routine with many channels. The event mask reflects the state of the channel after the connection is made. The parameter channelId identifies the channel to be dialed. If the callBack routine is used, the channelId is provided. The parameter phoneNumber is a pointer to the phone number to be dialed. The number is in ASCII text format. The callBack parameter identifies the callback routine, and the parameter event_mask identifies the status of the channel after the connection is completed. It should be noted that prior to calling the MICA Connect function, the application must call MICA_Open. The possible result codes returned after the MICA_Connect call are as follows:",{"@attributes":{"id":"p-0038","num":"0037"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_CHANNEL_NOT_OPEN","The channel was not opened."]},{"entry":["MICA_CONNECT_NO_CHANNELS","There are no available"]},{"entry":[{},"channels."]},{"entry":["MICA_ERROR","General Error message."]},{"entry":["MICA_INVALID_CALL_TYPE","The call type was invalid."]},{"entry":["MICA_SUCCESS","Connecting."]},{"entry":["MICA_INVALID_CHANNEL","The channelId provided was"]},{"entry":[{},"invalid."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The MICA_GetOption function call is used to get status and other information from the board set. A sample format for the MICA_GetOption call is as follows:",{"@attributes":{"id":"p-0040","num":"0039"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_GetOption(",{}]},{"entry":[{},"int16","channelId,"]},{"entry":[{},"int16","*micaCommand,"]},{"entry":[{},"char","*returnData"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0041","num":"0040"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_INVALID_COMMAND","The specified command was not"]},{"entry":[{},"recognized."]},{"entry":["MICA_SUCCESS","The command completed success-"]},{"entry":[{},"fully."]},{"entry":["MICA_ERROR","The command failed to complete."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The MICA_Init function call is used to initialize the telephone data processing system . For one embodiment, a sample format for the call is as follows:",{"@attributes":{"id":"p-0043","num":"0042"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_Init (",{}]},{"entry":[{},"mica_status_str","*micaStr,"]},{"entry":[{},"char","*buffer,"]},{"entry":[{},"int16","buffer_len,"]},{"entry":[{},"int16","channels,"]},{"entry":[{},"int16","channelIds"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0044","num":"0043"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_INIT_INSUFFICIENT_DATA","Not enough information"]},{"entry":[{},"was provided."]},{"entry":["MICA_INIT_INSUFFICIENT_BUFFER","The buffer provided was"]},{"entry":[{},"too small."]},{"entry":["MICA_ERROR","The command failed to"]},{"entry":[{},"complete."]},{"entry":["MICA_SUCCESS","The command completed"]},{"entry":[{},"successfully."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"The MICA_Listen function call is used to open a data channel to receive an incoming call. An example of its format is as follows:",{"@attributes":{"id":"p-0046","num":"0045"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_Listen (",{}]},{"entry":[{},"int16","channelId,"]},{"entry":[{},"char","*phoneNumber,"]},{"entry":[{},"void","(*callBack)(channelId, event mask)"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0047","num":"0046"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_SUCCESS","The channel was opened successfully."]},{"entry":["MICA_CHAN_INVALID","The channel parameter was invalid."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The MICA_Open function call is used to open a data channel. A sample format for the call is as follows:",{"@attributes":{"id":"p-0049","num":"0048"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_Open (",{}]},{"entry":[{},"int16","callType,"]},{"entry":[{},"int16","direction,"]},{"entry":[{},"int16","assignResource,"]},{"entry":[{},"int16","*error"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_OPEN_INVALID_TYPE","The callType is invalid."]},{"entry":["MICA_OPEN_INVALID_DIRECTION","The direction was invalid."]},{"entry":["MICA_OPEN_NO_CHANNELS","No idle channels."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The MICA_ProcessInt function call is used to process an interrupt. Once an interrupt service routine or polling routine has detected that a board needs service, this routine is used to service the board. A format for the call is as follows:",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_ProcessInt(",{}]},{"entry":[{},"int16","intType,"]},{"entry":[{},"int16","callType"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The intType parameter indicates the type of interrupt received, i.e., data or control. The callType parameter indicates the call type, i.e., ISDN or modem. The possible result codes are as follows:",{"@attributes":{"id":"p-0054","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_SUCCESS","The board(s) were successfully"]},{"entry":[{},{},"serviced."]},{"entry":[{},"MICA","An error occurred while servicing"]},{"entry":[{},{},"the boards(s)."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The MICA_Recv function call is used to hand a data buffer to receive data for a specific channel. A format for the call is as follows:",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_Recv (",{}]},{"entry":[{},"int16","channelId,"]},{"entry":[{},"char","*dataBuffer,"]},{"entry":[{},"int16","bufferSize"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The channelId parameter indicates the channel from which data is received. The dataBuffer parameter indicates the buffer in which the data is placed, and the bufferSize parameter indicates the number of bytes that can be written into the buffer. The bufferSize parameter is normally the maximum number of bytes that can be inserted into the data buffer. The return result is typically the number of bytes actually written into the data buffer. If an error occurred while data is being copied into the buffer, an error bit, typically \u22121, is returned. The MICA Reset function call is used to reset the MICA board set(s). A format for the call is as follows:",{"@attributes":{"id":"p-0058","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_Reset(",{}]},{"entry":[{},"int16","board_to_reset"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0059","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_SUCESS","The board set was successfully reset."]},{"entry":["MICA_ERROR","An error occurred while resetting the"]},{"entry":[{},"board(s)."]},{"entry":["MICA_INVALID_NUMBER","board_to_reset was set to an invalid"]},{"entry":[{},"number."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The MICA_Select function call is used to obtain channel status information such as the connection state of a particular channel. A format for the call is as follows:",{"@attributes":{"id":"p-0061","num":"0060"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_Select ("]},{"entry":[{},"int16 channelId,"]},{"entry":[{},"int16 statusMask"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{}]},{"@attributes":{"id":"p-0062","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA-Send (",{}]},{"entry":[{},"int16","channelId,"]},{"entry":[{},"char","*dataBuffer,"]},{"entry":[{},"int16","bytes"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"The MICA_SetOption call is used to send various command and control messages to the MICA telephone data processing system . A list of the commands that can be sent is contained in Tables 2 and 3. Table 2 lists modem mode commands, and Table 3 lists ISDN mode commands.",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Set Channel Option Modem Commands"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Command","Value(s)","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["MICA MODEM_MODE","Originate\/Answer","Set the modem to"]},{"entry":[{},{},"Originate or Answer"]},{"entry":[{},{},"mode"]},{"entry":["MICA_MODEM_CALL_TONE","Send","Determines whether"]},{"entry":[{},{},"the modem should"]},{"entry":[{},{},"send calling tone or"]},{"entry":[{},{},"not."]},{"entry":["MICA_MODEM_GUARD_TONE","Use Tone","Should the modem"]},{"entry":[{},{},"use guard tone for"]},{"entry":[{},{},"V 22\/V 22bis."]},{"entry":["MICA_MODEM_FORMAT","Async, LAPM,","Set the modem's"]},{"entry":[{},"MNP, ARA","data transmission"]},{"entry":[{},{},"format negotiation"]},{"entry":[{},{},"parameters."]},{"entry":["MICA_MODEM_AUTOD","Autodetect","Automatically de-"]},{"entry":[{},{},"tect the peer's proto-"]},{"entry":[{},{},"col."]},{"entry":["MICA_MODEM_AUTOD_TO","0\u201325.5 s","Autodetect timeout"]},{"entry":[{},{},"period."]},{"entry":["MICA_MODEM_BREAK_MODE","Expedited, Destruc-","Sets the break proc-"]},{"entry":[{},"tive","essing method for"]},{"entry":[{},{},"the modem."]},{"entry":["MICA_MODEM_BUFF_LEN","0\u201364","Protocol buffer"]},{"entry":[{},{},"length."]},{"entry":["MICA_MODEM_NEGOT_TO","0\u201325.5 s","Timeout for Proto-"]},{"entry":[{},{},"col Negotiation."]},{"entry":["MICA_MODEM_NEGOT_FALL_B","ASCII Value","The character caus-"]},{"entry":[{},{},"ing negotiation fall-"]},{"entry":[{},{},"back."]},{"entry":["MICA_MODEM_COMPRESSION","None, V.42bis,","Compression"]},{"entry":[{},"MNP5","method used by the"]},{"entry":[{},{},"modem."]},{"entry":["CA_MODEM_MODEM_VXX","V.34bis, V.32bis,","The modem stan-"]},{"entry":[{},"V.22bis","dard to use."]},{"entry":["MICA_MODEM_MAX_CONN_RATE","1\u201314","2400 * the number"]},{"entry":[{},{},"specified."]},{"entry":["MICA_MODEM_MIN_CONN_RATE","1\u201314","2400 * the number"]},{"entry":[{},{},"specified."]},{"entry":["MICA_MODEM_SIG_QUAL_LEVEL","1\u20135","The line signal"]},{"entry":[{},{},"quality threshold."]},{"entry":["MICA_MODEM_TX_LEVEL","0\u201315 dbm","The transmit level."]},{"entry":["MICA_MODEM_IDLE_TO","1\u2013255 s","Idle line timeout."]},{"entry":["MICA_MODEM_FRAME_RETX","0\u2013255 s","Frame retransmis-"]},{"entry":[{},{},"sionlimit."]},{"entry":["MICA_MODEM_NO_DCD_HANGUP","0\u201325.5 s","Lost carrier hang-up"]},{"entry":[{},{},"delay."]},{"entry":["MICA_MODEM_RETRAIN_DISC","1\u2013255 s","Consecutive re-train"]},{"entry":[{},{},"disconnects."]},{"entry":["MICA_MODEM_FALL_FWD_TIMER","1\u2013255 s","0 Disconnects."]},{"entry":["MICA_MODEM_RDL_RESPONSE","Enable","Remote Diagnostic"]},{"entry":[{},{},"Loopback response."]},{"entry":["MICA_MODEM_COUNTRY_CODE","0\u2013255","Country Location."]},{"entry":["MICA_MODEM_MIN_ANSWER_BACK","0\u2013255 ms","Answer back time."]},{"entry":["MICA_MODEM_CALL_TONE_GAIN","0\u201315 dbm","Call Tone Gain."]},{"entry":["MICA_MODEM_V.34_INFO",{},"Information bits for"]},{"entry":[{},{},"V.34."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0065","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Set Channel Option ISDN Commands"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Command","Value(s)","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["MICA_ISDN_ADD_BONDING","1\u201329","Adds an additional"]},{"entry":[{},{},"Bonding channel."]},{"entry":["MICA_ISDN_B_CHANNEL","1\u201329","Requests a specific"]},{"entry":[{},{},"B channel."]},{"entry":["MICA_ISDN_CALL_TYPE","Voice,","Describes the call"]},{"entry":[{},"Modem,","type."]},{"entry":[{},"56K, 64K"]},{"entry":["MICA_ISDN_CALLED_PARTY","Number","Sets the Called"]},{"entry":[{},{},"Party Number for"]},{"entry":[{},{},"identification of in-"]},{"entry":[{},{},"coming calls and the"]},{"entry":[{},{},"number dialed for"]},{"entry":[{},{},"outgoing calls."]},{"entry":["MICA_ISDN_CALLING_PARTY","Number","Sets the Calling"]},{"entry":[{},{},"Party Number for"]},{"entry":[{},{},"identification of in-"]},{"entry":[{},{},"coming calls."]},{"entry":["MICA_ISDN_REDIRECT","Number","Redirect the call."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_SetOption (",{}]},{"entry":[{},"int16","channelId,"]},{"entry":[{},"unsigned long","micaCommand,"]},{"entry":[{},"char","*arg"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_INVALID_COMMAND","The command specified was not"]},{"entry":[{},"recognized."]},{"entry":["MICA_SUCCESS","The command completed"]},{"entry":[{},"successfully."]},{"entry":["MICA_ERROR","The command failed to complete."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"As previously indicated, the host API  described above interfaces with lower-level APIs  and  depending upon the call type. Where a call is a modem type call, the host API  interfaces with the modem API . The modem API  provides low-level function calls to modem processing such as that described in the co-pending patent application Ser. No. 08\/686,990, incorporated herein. The modem API library of function calls provides an interface between the host API  and board-specific function calls. Table 4 includes a list of these modem API functions.",{"@attributes":{"id":"p-0069","num":"0068"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"center"}},"thead":{"row":{"entry":"TABLE 4"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Modem API Function Call Summary"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Call Type","Function","Purpose"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Call Management","MICA_MODEM_Close ( )","Terminate a call."]},{"entry":[{},"MICA_MODEM_Intitiate","Either originate or answer a"]},{"entry":[{},{},"call. Determined by the mo-"]},{"entry":[{},{},"dem configuration."]},{"entry":[{},"MICA_MODEM_LinkCtrl ( )","Force speed shift in modem."]},{"entry":[{},"MICA_MODEM_ProcessCtrl","Process a control message in-"]},{"entry":[{},"Msg ( )","terrupt from the modem board."]},{"entry":[{},"MICA_MODEM_ProcessData","Process a data message inter-"]},{"entry":[{},"Msg ( )","rupt from the modem board."]},{"entry":[{},"MICA_MODEM_Reset ( )","Software reset of the modem."]},{"entry":[{},"MICA_MODEM_SendCtrlMsg","Send a control message to the"]},{"entry":[{},"( )","modem."]},{"entry":[{},"MICA_MODEM_SetOption ( )","Set Modem Options."]},{"entry":["Data Flow","MICA_MODEM_Recv ( )","Receive data from the modem."]},{"entry":[{},"MICA_MODEM_SEND ( )","Send data to the modem."]},{"entry":["Initialization","MICA_MODEM_Configure ( )","Used to configure a modem for"]},{"entry":[{},{},"a call."]},{"entry":[{},"MICA_MODEM_Init ( )","Initialize the System informa-"]},{"entry":[{},{},"tion."]},{"entry":[{},"MICA_MODEM Load ( )","Load the Modem Board."]},{"entry":["Status","MICA_MODEM GetOption ( )","Used to solicit the link state"]},{"entry":[{},{},"info."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"A detailed description of each of the modem API function calls follows.","The MICA_MODEM_Close function call is used to terminate a telephone call. A format for the call is as follows:",{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_MODEM_Close ("]},{"entry":[{},"channel_str"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0073","num":"0072"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_Chan_Invalid","The channel was not valid."]},{"entry":[{},"MICA_SUCCESS","The channel will be closed."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The MICA_MODEM_Configure function call is used to configure a modem. A format for the function is as follows:",{"@attributes":{"id":"p-0075","num":"0074"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MICA_MODEM_Configure("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"int16","channelId,"]},{"entry":[{},"int16","dial,"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0076","num":"0075"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_SUCCESS","The command was sent to the modem."]},{"entry":[{},"MICA_ERROR","An error occurred."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The MICA_MODEM_GetOption function is used to retrieve the status of a modem. A format for the function call is as follows:",{"@attributes":{"id":"p-0078","num":"0077"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"MICA_MODEM_GetOption ("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"channelId_str","*channelIdPtr,"]},{"entry":[{},"int16","command,"]},{"entry":[{},"char","*arg"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"The channelIdPtr parameter identifies the modem to be modified; the command parameter identifies what is to configured and the arg parameter is a pointer to the buffer for the returned data. Possible result codes are as follows:",{"@attributes":{"id":"p-0080","num":"0079"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_MODEM_SUCCESS","The command was sent to the modem."]},{"entry":["MICA_MODEM_ERROR","The parameter was invalid."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The MICA_MODEM_Init function call is used to initialize the modem board. A format for the call is as follows:",{"@attributes":{"id":"p-0082","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_MODEM_Init (",{}]},{"entry":[{},"modem str","*modemBoard"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0083","num":"0082"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_SUCCESS","The command was sent to the"]},{"entry":[{},"modem."]},{"entry":["MICA_MODEM_PARAM_INVALID","The parameter was invalid."]},{"entry":["MODEM CHAN INVALID","The channel was invalid."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},"The MICA_MODEM_Initiate function call is used to call the modem to originate or answer a call on a data channel. A format for the function is as follows:",{"@attributes":{"id":"p-0085","num":"0084"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_MODEM_Initiate (",{}]},{"entry":[{},"channelId_str","*channelIdPtr"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{},"b":["44","24","5"]},{"@attributes":{"id":"p-0086","num":"0085"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_MODEM_SUCCESS","The command was sent to the"]},{"entry":[{},"modem."]},{"entry":["MICA_MODEM_PARAM_INVALID","The parameter was invalid."]},{"entry":["MODEM_CHAN_INVALID","The channel was invalid."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The MICA_MODEM_Load function call is used to load the modem board. A format for the function call is as follows:",{"@attributes":{"id":"p-0088","num":"0087"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA MODEM Load (",{}]},{"entry":[{},"modem_str","*modemBoard"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0089","num":"0088"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_SUCCESS","The board was loaded."]},{"entry":[{},"MICA_ERROR","The parameter was invalid."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The MICA_MODEM_Recv function call is used to receive data from a specific modem. A format for the function call is as follows:",{"@attributes":{"id":"p-0091","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_MODEM_Recv (",{}]},{"entry":[{},"channel_str","*channelPtr,"]},{"entry":[{},"char","*dataBuffer,"]},{"entry":[{},"int16","buffer size"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The channelPtr parameter identifies the channel from which the data is received; the dataBuffer parameter identifies the buffer into which the data is placed; and the buffer size parameter indicates the maximum number of bytes that can be placed in the buffer. The result code value returned by the function is the number of bytes actually received.","The MICA_MODEM_Reset function call is used to perform a software reset of a modem board. A format for the function call is as follows:",{"@attributes":{"id":"p-0094","num":"0093"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_MODEM_Reset (",{}]},{"entry":[{},"intl6","board"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0095","num":"0094"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_SUCCESS","The board was reset."]},{"entry":[{},"MICA_ERROR","The board number was invalid or the"]},{"entry":[{},{},"board failed to reset."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The MICA_MODEM_Send function call is used to send data to a specific modem. A format for the function call is as follows:",{"@attributes":{"id":"p-0097","num":"0096"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_MODEM_Send (",{}]},{"entry":[{},"channel_str","*channelPtr,"]},{"entry":[{},"char","*dataBuffer,"]},{"entry":[{},"intl6","bytes"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"The MICA_MODEM_SetOption function call is used to configure a modem. A format for the call is as follows:",{"@attributes":{"id":"p-0099","num":"0098"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_MODEM_SetOption (",{}]},{"entry":[{},"channelId_str","*channelIdPtr,"]},{"entry":[{},"intl6","command,"]},{"entry":[{},"char","*arg"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0100","num":"0099"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_MODEM_SUCCESS","The command was sent to the"]},{"entry":[{},"modem."]},{"entry":["MICA_MODEM_PARAM_INVALID","The parameter was invalid."]},{"entry":["MICA_MODEM CHAN_INVALID","The channel was invalid."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The ISDN API  provides the interface between the host API  and ISDN processing . The function of the ISDN API  is to provide low-level function calls to the ISDN processor . Like the modem API , the ISDN API  also includes a number of function calls made by the host API . The host API  uses the ISDN API  to control and manipulate the ISDN processor . The ISDN API  provides a layer of abstraction between the host API  and lower-level ISDN-board specific calls. Table 5 contains a list of the lower-level ISDN function calls.",{"@attributes":{"id":"p-0102","num":"0101"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 5"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"ISDN API Function Call Summary"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Call Type","Function","Purpose"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Initialization","MICA_ISDN_Init ( )","Initialize the ISDN board."]},{"entry":[{},"MICA_ISDN_Initiate ( )","Open a data channel."]},{"entry":[{},"MICA_ISDN_Load ( )","Load the board's software."]},{"entry":[{},"MICA_ISDN_SetPath ( )","Route a call onto the MVIP"]},{"entry":[{},{},"line or the PRI line."]},{"entry":[{},"MICA_ISDN_Start ( )","Starts the board."]},{"entry":[{},"MICA_ISDN_Status ( )","Retrieves ISDN board"]},{"entry":[{},{},"status."]},{"entry":["Call","MICA_ISDN_Close ( )","Close a data channel."]},{"entry":["Management","MICA_ISDN_GetOption ( )","Performance."]},{"entry":[{},"MICA_ISDN_Reset ( )","Reset the IDSN board."]},{"entry":[{},"MICA_ISDN_SetOption ( )","Call Control Messages."]},{"entry":["Data Flow","MICA_ISDN_Recv ( )","Receive ISDN Data."]},{"entry":[{},"MICA_ISDN_Send ( )","Send ISDN Data."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"A detailed description of each ISDN API function call follows.","The MICA_ISDN_Init function call is used to initialize the ISDN board. A format for the function call is as follows:",{"@attributes":{"id":"p-0105","num":"0104"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_ISDN_Init(",{}]},{"entry":[{},"isdn_str","*isdnStr;"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0106","num":"0105"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_ISDN_Success","The board was initialized."]},{"entry":[{},"MICA_ISDN_Error","An error occurred."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The MICA_ISDN_Initiate function call is used to cause the ISDN board to originate or answer a call on a data channel. A format for the function call is as follows:",{"@attributes":{"id":"p-0108","num":"0107"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_ISDN_Initiate(",{}]},{"entry":[{},"channelId_str","*channelIdPtr"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0109","num":"0108"},"tables":{"@attributes":{"id":"TABLE-US-00050","num":"00050"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_ISDN_SUCCESS","The command was sent to the"]},{"entry":[{},"ISDN board."]},{"entry":["MICA_ISDN_PARAM_INVALID","The parameter was invalid."]},{"entry":["MODEM_CHAN_INVALID","The channel was invalid."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The MICA_ISDN_Recv function is used to receive data from a specific ISDN channel. A format for the function call is as follows:",{"@attributes":{"id":"p-0111","num":"0110"},"tables":{"@attributes":{"id":"TABLE-US-00051","num":"00051"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_ISDN_Recv(",{}]},{"entry":[{},"channel_str","*channelPtr,"]},{"entry":[{},"char","*dataBuffer,"]},{"entry":[{},"intl6","bufferSize"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"The MICA_ISDN_Reset function is used to reset the ISDN board to a known state. A format for the function call is as follows:",{"@attributes":{"id":"p-0113","num":"0112"},"tables":{"@attributes":{"id":"TABLE-US-00052","num":"00052"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_ISDN_Reset (",{}]},{"entry":[{},"isdn_str","*isdnStr"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0114","num":"0113"},"tables":{"@attributes":{"id":"TABLE-US-00053","num":"00053"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA ISDN Success","The board was reset."]},{"entry":[{},"MICA ISDN_Error","An error occurred."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The MICA ISDN_SetOption function call is used to send call control messages to the ISDN board. A format for the function call is as follows:",{"@attributes":{"id":"p-0116","num":"0115"},"tables":{"@attributes":{"id":"TABLE-US-00054","num":"00054"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA ISDN_SetOption (",{}]},{"entry":[{},"channel_str","*channelPtr,"]},{"entry":[{},"int16","command,"]},{"entry":[{},"char","*arg"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0117","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00055","num":"00055"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_ISDN_Success","The command was sent to the"]},{"entry":[{},"modem."]},{"entry":["MICA_ISDN_Command_Invalid","The parameter was invalid."]},{"entry":["MODEM_Chan_Invalid","The channel was invalid."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The MICA_ISDN_SetPath function is used to route data onto the MVIP bus or onto the PRI line. A format for the function call is as follows:",{"@attributes":{"id":"p-0119","num":"0118"},"tables":{"@attributes":{"id":"TABLE-US-00056","num":"00056"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_ISDN_SetPath (",{}]},{"entry":[{},"channel_str","*channelPtr,"]},{"entry":[{},"isdn_str","*isdnStr"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0120","num":"0119"},"tables":{"@attributes":{"id":"TABLE-US-00057","num":"00057"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_ISDN_Success","The route was established."]},{"entry":[{},"MICA_ISDN_Error","An error occurred."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The MICA ISDN_Send function call is used to send data to a specific ISDN channel. A format for the function call is as follows:",{"@attributes":{"id":"p-0122","num":"0121"},"tables":{"@attributes":{"id":"TABLE-US-00058","num":"00058"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA ISDN_Send (",{}]},{"entry":[{},"channel_str","*channelPtr,"]},{"entry":[{},"char","*dataBuffer,"]},{"entry":[{},"int16","bytes"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"The MICA_ISDN_Status function call is used to retrieve status from an ISDN board. A format for the function call is as follows:",{"@attributes":{"id":"p-0124","num":"0123"},"tables":{"@attributes":{"id":"TABLE-US-00059","num":"00059"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_ISDN_Status (",{}]},{"entry":[{},"channel_str","*channelPtr"]},{"entry":[{},"int16","command"]},{"entry":[{},"message_str","*messagePtr"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0125","num":"0124"},"tables":{"@attributes":{"id":"TABLE-US-00060","num":"00060"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA_ISDN_Success","The command was sent to the"]},{"entry":[{},"modem."]},{"entry":["MICA_ISDN_Command_Invalid","The parameter was invalid."]},{"entry":["MODEM_Chan_Invalid","The channel was invalid."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The MICA_ISDN_Close function call is used to close a data channel. A format for the function call is as follows:",{"@attributes":{"id":"p-0127","num":"0126"},"tables":{"@attributes":{"id":"TABLE-US-00061","num":"00061"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MICA_ISDN_Close (",{}]},{"entry":[{},"channel_str","*channelPtr"]},{"entry":[{},")"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0128","num":"0127"},"tables":{"@attributes":{"id":"TABLE-US-00062","num":"00062"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["MICA ISDN_Closed","The channel was closed successfully."]},{"entry":["MICA_ISDN_Chan_Invalid","The channel parameter was invalid."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"While this invention has been particularly shown and described with references to preferred embodiments thereof, it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the invention as defined by the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing and other objects, features and advantages of the invention will be apparent from the following more particular description of preferred embodiments of the invention, as illustrated in the accompanying drawings in which like reference characters refer to the same parts throughout the different views. The drawings are not necessarily to scale, emphasis instead being placed upon illustrating the principles of the invention.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
