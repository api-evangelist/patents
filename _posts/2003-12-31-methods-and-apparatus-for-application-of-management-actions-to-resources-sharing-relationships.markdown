---
title: Methods and apparatus for application of management actions to resources sharing relationships
abstract: In a network management application, a system applies a management action to a resource by receiving a selection of a resource representation in a network environment that represents a resource to which a management action is to be applied. The system applies a series of resource traversal functions to a repository containing objects representative of network resources in the network environment. The traversal functions identify a set of action affected resources in the network environment existing along a set of relationship paths extending to at least one storage device that have a current allocation relationship to the selected resource. The system presents a representation of the set of allocated resources in the network environment to a user of the management application. The representation of action-affected resources informs the user of resources within the storage area network that are currently in an functional relationship with the selected resource to which a management action is to be applied and that may be affected if the management action is to be applied to the selected resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07401137&OS=07401137&RS=07401137
owner: EMC Corporation
number: 07401137
owner_city: Hopkinton
owner_country: US
publication_date: 20031231
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["Conventional computer systems execute software applications that allow for the creation of vast amounts of data that must be persistently stored for long periods of time. Information systems developers have responded to this need by creating high-capacity data storage systems called storage arrays that include many individual storage devices such as disk drives that collectively operate to store data on behalf of such software applications. Presentation and management of the data stored within the storage devices of storage arrays for access by end-user software applications is a complex process that can involve many processing operations that need to occur in many different components and resources within the data storage and computer systems.","As an example, consider the number of hardware and software components that must collectively operate in functional or operational relationships together in order for a user's software application executing a host computer system to successfully access data stored within one or more of the storage devices within a high-capacity data storage array. To access such data, the user application provides file system calls or requests (e.g., open, read, write and so forth) to a file system resource presented to the user application by an operating system executing on the host computer system. The file system receives the file system calls and operates to map such file system calls to a series of I\/O requests. The operating system on the host computer system then transmits the I\/O requests through a host interface device resource, such as an interface card ((e.g., SCSI or FibreChannel adapter) having one or more I\/O port resources, across an interface cable or networking medium (e.g., in a storage area network implementation) for receipt by a front-end adapter interface card resource operating within the high-capacity data storage array. The front-end adapter interface card receives the I\/O requests and interprets them for access to appropriate data locations within specific storage device resources contained in the storage array. Once the requested data is accessed via the storage devices, I\/O responses are returned to the user application along an information or data flow path that includes operations and processing functionality provided by each of the aforementioned components and resources in a reverse direction back to the application. Accordingly then, storage of data in modern computer system environments involves reliance on the proper operation of a multitude of software and hardware resources that share connectivity and operational or functional relationships with one another along processing or data flow paths.","In a storage area networking environment containing host computer systems and storage arrays, logical resources or objects on a host computer system (host objects or host resources) have relationships with one or more storage device resources on the storage arrays to which the host computer system is connected through the storage area network. Host resources consist of, for example, file systems, databases, logical volumes and volume groups of a logical volume manager, multipath devices, and host interface devices (e.g., network interface cards and interface ports), and each host resource maps to one or more storage device resources (e.g., disk drives) in the storage array. Management actions or commands applied to host resources can affect their operation in multiple ways depending upon how those host resources are mapped via relationships to their corresponding storage device resources.","As an example, application of management operations or actions (e.g., commands) on a host resource, such as deallocation of storage space associated with that host resources (e.g., removing storage space assigned to a file system or database or volume group), disabling paths, establishing zoning, changing protection levels and so forth may affect operation of those and possibly other host or even non-host resources in sometimes unpredictable manners. An administrator performs or applies such management actions in a conventional management application typically by selecting a graphical set of objects that represent the resources and by selecting the management action to apply to those selected objects or resources.","Embodiments of the invention are based in part on the observation that it is often necessary for a user such as a storage systems administrator to know, for example, what host resources would be affected by some action that is to be applied to a selected set of storage resources such as storage devices (e.g. disk drives) within a storage array. In some cases, a host resource such as a volume or file system is fully represented by a selected set of storage devices. In this first case, that host resource does not use any storage device resources other than the ones to which the action is to be applied. In this case the actions on the storage device resources are in effect actions on the host resource and the user needs to be informed of this. In other cases, a host resource may only be partially represented by the set of storage device resources to which an action is to be applied. In this case an action on the storage devices would affect a possibly unpredictable portion of the host resource, causing an incomplete action on the host resource and possibly corrupting that host resource. In the later case, the administrator may want to insure that the action on the affected host resource is complete (i.e., like the first case). To do this embodiments of the invention allow the user to find all the other storage device resource that the host resource \u201cuses\u201d (i.e., that share an operational or functional relationship with the host resource, either directly or indirectly via other resources), that are not part of the originally selected set of resources, and to carry out the action on those other storage device resources as well. However those storage device resources in turn may be \u201cused by\u201d yet more host resources and embodiments of the invention provide a way to discover the identity of those other resources. Once discovered, the system of the invention can present this information to the user\/administrator to allow this person to have knowledge of what resources may be impacted or affected is the management action is applied to the selected resources.","As a specific example, in multi-user and multi-application computer system environments such as commercial computer system installations that provide storage within a storage area network, information systems developers have created software programs called volume managers that operate in conjunction with operating systems on host computer systems. A volume manager is a software application that is able to aggregate the collective storage capacity of many storage devices within a high-capacity data storage array to present this storage capacity as a single accessible entity called a volume that applications are able to use to store data. From the perspective of a software application accessing data within a volume, details of which storage devices contain or store which portions of accessible data within a volume or what other underlying resources are used to create and present volumes are irrelevant. The software applications simply access data within the volume and the volume manager handles the processing task of directing application requests for data to the specific storage devices containing the requested data portions.","Computer systems administrators are able to control a volume manager to allocate and deallocate storage device capacity to particular volume groups as the demands of storage change for a volume group. As an example, if a database or file system operates on a host computer system to store data within a particular volume group, as the capacity of the database or file system increases, a computer systems administrator can use a volume manager to allocate additional storage device capacity by adding a volume to the volume group in order to allow the database or file system to grow in size. Likewise, if a particular volume group has a large number of allocated volumes but the amount of data to be stored within the volume group is relatively small, the systems administrator is capable of deallocating a volume from that volume group to allow those deallocated storage devices associated with the deallocate volume to be used to store other data.","Conventional techniques for applying an action such as managing allocation and deallocation of storage device capacity or associated resources within a computing system environment suffer from a number of deficiencies. As an example, using a conventional volume manager software application, if a computer or storage system administrator desires to apply an action such as deallocation of storage space such as one or more storage devices from a particular volume, database or file system, the administrator operates a conventional storage management application such as the volume manager to graphically select an icon representing the storage device(s) to be deallocated. The administrator then invokes a deallocation command in order to have the conventional volume manager application remove the storage space within the specific selected storage devices from the associated volume, thus freeing-up that storage capacity for other uses. Once deallocated, the volume manager considers those storage devices available for use by other entities (e.g., other databases, file systems or volumes) that may require additional storage capacity. Once deallocated, the volume manager may reallocate those storage devices to other volumes.","This conventional deallocation approach can be problematic since situations may arise in which multiple host objects within the computing system environment reference a particular set of allocated storage devices. As a hypothetical example, there may be other software applications that are responsible for accessing storage devices allocated to a particular volume in order to make backup or replica copies of the data within a volume at periodic intervals (e.g., nightly backups) or in real-time (e.g., data mirroring). A backup administrator responsible for administering the replication of storage devices may be a different person than the system administrator responsible for management of volume capacity. Accordingly, it may be unbeknownst to the systems administrator at the time of applying an action such as deallocating a storage device from a volume that a backup or replication application also references the storage device within the volume. Accordingly, if a storage device is deallocated from the volume yet the replica application continues to try to replicate information within the storage device, inaccuracies can arise if the replicated data is ever required for future reference.","As another example, suppose a systems administrator desires to remove a host interface card from a host computer system due to suspected faulty operation. To do so, the systems administrator may operate a conventional network management program to apply a management action such as shutting-down and deallocating the interface card from operation with the operating system and any hardware or software resources that may attempt access to data storage systems through the interface card. The administrator may think it he or she knows which software particular applications executing a host computer systems are currently referencing storage space on the data stored system through that host via the interface card. Accordingly, prior to deallocating the interface card, the systems administrator will first attempt to reconfigure those applications to reference alternative storage devices through another interface card. However, conventional mechanisms to discover the other host resources that rely on the use of the interface card is largely a human or manual operation that relies heavily on intuition of the administrator to be able to identify which host resources (e.g., which software applications, file systems, databases, volume groups and the like) are currently referencing the host interface device. If the systems administrator deallocates the interface card and thus halting its operation, and that person accidentally failed to recognize the particular host resource such as a software application still required access, for example, to data stored within a storage device formerly accessible to the host computer system via the now deallocated interface card, that software application will likely experience execution problems due to the inability to access the data using the interface card that is now deallocated.","Generally then, conventional systems for managing actions applied to resources within computing system environments such as storage area networks lack ability to perform a resource relationship identification process that identifies resources that may be dependent on other resources prior to allowing a user to perform a requested management action. That is, conventional network, storage, computer system or other resource management software applications do not provide a capability to identify all computing system or storage resources that may be dependent upon a particular resource or entity to which an action is to be applied prior to allowing the user to perform the action. Accordingly, such conventional systems rely on the ability of the administrator to recognize when one resource in a computing system environment is dependent on another. Due in part to this reliance, situations frequently arise in which one resource such as a software application fails to operate properly due to the fault of the administrator operating the management application to apply some action to a particular resource upon which that application was dependent.","Embodiments of the invention significantly overcome such deficiencies and provide unique mechanisms and techniques for identifying and presenting to a user, such as a systems administrator, any action-affected resources having dependencies or relationships to resources upon which a management action is to be applied in a computing system environment such as a storage area network. The action-affected resources discovered according to embodiments of the invention can allow the systems administrator to make more informed decisions about application of a specific action to a specific set of selected resources prior to application of the management command.","As an example, in a storage area networking environment, if a storage network administrator desires to deallocate a storage device from a particular resource such as a volume, database or file system, embodiments of the invention can perform a resource discovery operation using a series of resource traversal functions in order to identify other resources within the storage area network that are dependent upon or that use the storage space presently allocated to the volume. The resource traversal functions can include a going down function, a going up function and a closure function that taverse a hierarchy of resources to discover what resources may be affected by application of a management command to a selected resource. As another example, if the storage area network administrator desires to deallocate the storage space associated with the particular logical volume, embodiments of the invention can operate to discover all resources or entities within the storage area network environment that rely upon or that use or otherwise reference that logical volume. This can include, for example, file systems and\/or databases that reference the logical volume. Embodiments of the invention thus provide mechanisms and techniques for computing the set of resources affected by an action that is to be applied to a particular managed resource, such as a storage device.","Embodiments of the invention include computerized devices, such computer systems, workstations, hosts, management stations or other devices configured or operable to process and perform all of the operations disclosed herein as embodiments of the invention. In such embodiments, a computer system includes a memory system, a processor, a communications interface and optionally a display and an interconnection mechanism connecting these components. The memory system is encoded with a management application that includes a resource manager application (i.e., executable code) that when performed on the processor, produces a management process that includes a resource manager process that operates as explained herein.","Other arrangements of embodiments of the invention that are disclosed herein include software programs such as management applications containing a resource manager that performs the method embodiment steps and operations summarized herein for a resource manager. More particularly, a computer program product is disclosed that has a computer-readable medium including computer program logic encoded thereon that when performed in a computerized device provides operations of the resource manager application and process as respectively explained herein. The computer program logic, when executed on at least one processor with a computing system, causes the processor to perform the operations (e.g., the methods) indicated herein as embodiments of the invention. Such arrangements of the invention are typically provided as software, code and\/or other data structures arranged or encoded on a computer readable medium such as an optical medium (e.g., CD-ROM), floppy or hard disk or other a medium such as firmware or microcode in one or more ROM or RAM or PROM chips or as an Application Specific Integrated Circuit (ASIC) or as downloadable software images in one or more modules, shared libraries, etc. The software (source code and\/or object code) or firmware or other such configurations can be installed onto a computerized device to cause one or more processors in the computerized device to perform the techniques explained herein as embodiments of the invention. Software processes that operate in a collection of computerized devices, such as in a group of storage area network management servers, hosts or other entities can also provide the system of the invention. The system of the invention can be distributed between many software processes on several computers, or processes or may execute on a dedicated computer in a network environment. The resource manager may be integrated into a storage area network management application or may exist as a service available to many different network management applications.","It is to be understood that the system of the invention can be embodied strictly as a software program, as software and hardware, or as hardware alone and that embodiments also include the process or method steps explained herein, regardless of implementation. Example embodiments of the invention may be implemented within EMC's Control Center software application(s) that provide management functionality for storage area network resources and in computerized devices that operate the Control Center software. ControlCenter is a trademark of products manufactured by EMC Corporation of Hopkinton, Mass., USA.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1","b":["100","100","101","102","110","102","1","102","103","1","103","104","1","104","105","1","105","110","110","108","100"]},"According to the general operation of the storage area network , the client computer systems  operate software applications  that communicate with host resources  through  such as database programs , file systems , logical volume groups , logical volumes  and the like within the host computer systems . The host resources  through  are configured in operational relationships with each other and with storage resources  within the data storage systems  to allow data access to occur to data stored within the data storage resources  (e.g., disk drives) operating in the data storage systems . Due to the complexity of the storage area network environment , the network management station computerized device  operates a network management application  that allows the administrator  to control, configure and generally manage the devices  through  and resources  through  within the storage area network  to efficiently provide access to data on behalf of the clients .","To assist in this process, the network management application  includes a resource manager  that performs processing to apply management actions (i.e., management commands) selected by the user  to resources within the network  in accordance with embodiments of the invention as explained herein. It is to be understood that the resource manager  in accordance with embodiments of the invention may be included within any type of network management software application that can execute, perform or otherwise operate within a management station computerized device  and is not limited to application within a storage area network.","The resource manager  generally operates as explained herein to receive a management action or command from the user  (e.g., via a graphical user interface action on the display ), which is to be applied to a user selection of resource representations, presented by the management application  as graphical icons on the display  of the management station computer systems . Once a management action and selection of resources are received from the user , the resource manager  can identify operational relationships between the selected resource and other resources  through  within the storage area network  that may be affected by the application of the management action to the selected resource. Once the resource manager  identifies the other resources  through  that may be affected by the management action, the resource manager  can present this information to the user  (e.g., via a table, list or graphical layout on the display ) to inform the user of all resources (that he or she may not have been aware of) that may be affected by the particular management action selected if applied by the user  via the management application . The user is then able to modify his or her selection criteria to include more or less of the collective set of action-affected resources that will be affected by the management action in order to ensure that the operation of the resources  through  is not adversely affected by the management command or action.","As a brief example of the invention in operation, suppose the user , using the management application  operating the resource manager , graphically selects a representation of a file system resource  within one of the host computer systems . Further suppose that the user  decides to apply a management action such as deallocation to the selected file system resource  in order to deallocate storage space from the file system . The resource manager  of the invention is able to identify other resources  through  that are operationally related to the file system resource  to which the management action is to be applied. These other resources may be, for example, the logical volume resource , the host device resource , one or more storage device resources  (operating within the storage systems ) and so forth. Once identified, the resource manager  can graphically present this collective set of action-affected resources to the user  to inform the user of the total set of resources  through  within the storage area network environment  that will be affected by the deallocation action if it is to be applied to the selected file system . Based on this information, the user  is able to make an informed decision if the deallocation action will be properly carried out as intended so as to not adversely affect operation of those other resources that will be impacted by the deallocation action.","Prior to discussing further operational details of embodiments of the invention, a brief discussion will be presented explaining interrelationships between resources  through  in a typical storage area network configuration. It is to be understood that the following explanation of resource relationships is not intended to be limiting to embodiments of the invention but rather, embodiments of the invention are applicable to other types of interrelationships between the same or between different types of resources within a networking environment.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 2","b":["301","306","104","307","102","301","307","301","302","303","304","305","306","307","310","301","307","310"]},"As an example, the relationship indicator - extending between the database resource - and logical volume resource - indicates that the logical volume resource - configured within the host computer system  is \u201cin use by\u201d the database resource -. Likewise, the relationship indicator - indicates that the host interface device resource - he is in use by the logical volume resource -. Continuing this example, the relationship indicator - that extends out of the host computer system  across the storage area network  (e.g., through one of the switches  in ) and adjoins storage device resource - (which may be, for example, a disk drive within the data storage system ) and indicates that the storage device resource - is in use by the host device resource -.","The resource indicators  in  further illustrate data flow, relationship paths or information flows between resources within the storage area network . As an example, the continuous path of resource indicators - through - represent data flow or information flow or in use paths from the database resource - to the storage device resource -. This data flow path - through - indicates that a portion of the data associated with the database resource  (e.g., a database instance available for access to climb computer systems  within the host computer system ) is stored within the storage device resource - (i.e., is stored within a disk drive represented by this storage device resource). Note that only a portion of the data from the database resource - is stored within the storage device resource - because other relationship paths extend from the database resource - to other logical volume resources  which, in turn, have other relationship indicators  extending to other resources that continue on down to different data storage device resources .","Embodiments of the invention are based in part on the observation that a management action applied to a particular resource  through  within a network environment such as the storage area network  can have an impact or affect on other resources due to the operational relationships existing between the various resources. Using the deallocation example from above, the user  selects a graphical representation of the file system resource - and decides to deallocate some or all of the storage space associated with this file system resource -. Embodiments of the invention are able to follow the relationship indicators from the selected file system resource - down to the logical volume resource - and further down to the host interface device resource - and then to the lowest level storage device resource -. Based on this information, deallocation of storage space in the file system - has an impact on the resources -, - and - within the network environment  since each relates to operation of the other.","Likewise, notice that the volume group resource - has a relationship indicator - extending to the logical volume resource -. This indicates that the logical volume resource - is also \u201cin use\u201d by the volume group resource -. Accordingly, the deallocation operation applied to storage space associated with the file system resource - can potentially have an impact on the proper operation of the volume group resource - since this volume group - \u201cuses\u201d (i.e., includes data stored on storage space associated with) the logical volume - which is also, as explained above, \u201cused by\u201d the file system resource - from which space is to be deallocated. Accordingly, due to the complex series of interrelationships between the resources illustrated in , application of a management action to any particular resource  through  as selected by the user  by using a management application  may have potential adverse operational impact on other resources.","Embodiments of the invention operate to allow the user  to identify those other resources  through  that might be impacted by application of a particular management action or command to a particular selected resource  through  or group of selected resources. To perform such operation, embodiments of the invention are capable of traversing relationships between resources as indicated in  by the resource indicators  to discover or identify operational, functional, dependency, inheritance or other types of interrelationships between resources within, for example, the host computer system  and the data storage system  in order to notify the user of those other impacted resources that may be affected upon application of a management action to the selected resource(s)  through  chosen by the user for that action.","To traverse the resource indicators , embodiments of the invention apply a series of resource traversal functions that can navigate up and down in a resource hierarchy along the relationship indicator paths  within the repository  that contains objects  that represent the collective set of resources operating within the storage area network . In particular, objects  representative of resources  through  in the network environment in the repository  are hierarchically arranged in an order according to the relationships indicators . The hierarchy order includes host objects representing host resources  through  and storage objects representing storage resources  that are allocated for storing data accessed by the host resources. The host objects (i.e. resources  through  in a host computer system ) are hierarchically related above the storage objects  (the lowest objects) in the hierarchically arranged order.","In one embodiment of the invention, the hierarchy or order of resources includes top-level resources that include database , file system  and volume group resources  (top level objects in the repository or resources in the actual storage area network ), followed by the next lower level of logical volume resources , which are then followed downward in the hierarchy by multipath device resources , below which are host interface device resources  which are then followed downward by the lowest level storage device resources . Hierarchically arranged host objects thus include a top-level host computer system (i.e., the computer itself and all its resources), a database , a file system , a volume group , a logical volume , a multipath device , a host interface device such as a host interface card or port. Hierarchically arranged storage objects include the lowest-level storage devices  such as disk drives that store data. Other resources not shown in these examples can include, for example, a storage adapter, storage ports, software entities in the data storage system  and so forth. As will be explained, the hierarchy of relationships between the resources  through  can be followed up or down by the resource traversal functions in order to identify device path data (shown as relationship indicators  in ) that extend along the set of device or relationship paths  that indicates resources involved in those relationships.","It is assumed for proper operation of embodiments of the invention that the repository  contains a collective set of objects  that properly represent the operational relationships as they currently exist between actual resources  through  within the storage area network environment . That is, the repository  contains a collective set of objects  that contain data and information about each resource within the storage area network  and the objects  contain references such as pointers, inheritances, function calls, application programming interfaces (APIs) or other software mechanisms for one object to reference another thus defining or indicating an operational relationship  between the resources that correspond to those objects  in the repository . Accordingly, the resources  through  illustrated in  can equivalently be thought of as respective objects  that reference one another according to the relationship indicators . In other words, the illustration in  is also suitable for use as a view of the objects  that respectively correspond to each individual resource - in the repository .","An example of a repository  to which embodiments of the invention may be applied is the Enterprise Control Center (ECC) store repository maintained by EMC Corporation's ECC storage area network management software that includes a resource manager  in accordance with one example embodiment of the invention. ECC is a management application  for storage area network management and allows application of management actions such as deallocation of data storage space allocated on behalf of resources  through  that operate to store of data under management of the management application .","Further details of operation of the resource manager  will now be provided with respect to a series a flowcharts and resource diagrams (like ) for various processing operations that the resource manager  performs in accordance with embodiments of the invention.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 3","b":["120","119","108","301","307"]},"In step , the resource manager  receives a selection of a resource representation in a network environment that represents a resource  through  to which the management action is to be applied. The management action can also be received in this step. The resource manager  operating within the management application  can receive the selection of the resource representation by first presenting, for example, a list of currently operating resources  through  in a graphical format on display  of the management workstation . Such a graphical display can present, for example, a graphical view such as that shown in  that illustrates various interrelationships and hierarchical levels of resources  through  within a host computer system  and data storage system  in a storage area network environment . It is to be understood that any type of graphical representation of various entities resources within a storage area network is suitable for use by embodiments of the invention for displaying selectable resources to which a user can select for application of one or more management actions. Examples include a table, list, tree, network topology display and the like.","In step , the resource manager  applies a series of resource traversal functions to the repository  containing objects  representative of network resources  through  in the network environment . The resource traversal functions (each to be explained until shortly) identify action-affected resources (i.e., as fond during traversal of relationships indicated by relationship indicators  in the example in ) for a set of allocated resources in the network environment  existing along a set of relationship paths (e.g., ) extending to at least one storage device  that have a current allocation relationship to the selected resource. Complete details of application of the resource traversal functions will be explained shortly. For purposes of this high-level discussion of the flowchart in , sub-steps  through  provide processing associated with application of the resource traversal functions.","In step , the resource manager  identifies a collective set of action-affected resources that relate to operation of the selected resource. The collective set of action-affected resources includes, as will be explained, a set of downward resources, a set of upward resources and a set of closure resources on data flow paths (i.e., operational relationships ) within the network environment . To identify the collective set of action-affected resources, sub-steps  through  perform respective resource traversal functions in accordance with embodiments of the invention to identify all affected resources within the storage area network environment  that may be affected by application of the management action to the user selected resource(s).","In step , the resource manager first applies a \u201cgoing down\u201d function to the repository  containing objects  representative of resources  through  to identify a set of downward resources in the network environment  that have a downward allocation relationship to the selected resource. Generally, a downward allocation relationship indicates resources that the selected resource depends upon and that are in operational use during access to data by the selected resource on a downward allocation path beginning at the selected resource and extending downward through the network environment and terminating at physical storage device resources  that store the data accessed by the selected resource. As an example, if the user  selects a file system resource , application of the going down function traverses any resource indicators  from the selected file system  to identify any lower-level resources in the resource (i.e., object) hierarchy below the selected file system  (i.e., within the repository of objects ). Such resources can include, for example, one or more logical volume resources, multipath device resources , host interface device resources , and storage devices  example illustrated in . Each resource encountered during the going down function becomes part of the collective set of action-affected resources that may be potentially affected if the management action is applied to the selected resource. The going down function follows all downward branching resource indicator  from each resource encountered to arrive as a set of lowest level storage device resources .","Next, in step , the resource manager  applies a going up function to the repository  containing objects  representative of resources to identify a set of upward resources , ,  . . .  in the network environment  that have an upward allocation relationship to the selected resource. However, for the going up function, the upward allocation relationship indicates resources that depend upon operational use of resources discovered in the set of downward resources, but that exist on an upward allocation path that begins at the physical storage devices resources  that store the data accessed by the selected resource as identified in the set of downward resources and that extend upward through the network to top-level resources comprising at least one host device resource (e.g., such as databases, file systems or volume groups) other than host device resources identified in the set of downward resources.","In other words, in step , the going up function begins at the lowest level storage device resources  identified by the going down function in step . From those lowest level storage device resources , the going up function traverses upward along each relationship indicator  that can be followed toward any upward level resource in hierarchy. This processing can include branching out to all resources not originally discovered along the relationship paths or information flows identified during the going down function. One purpose of the going up function is to discover resources they do not operate directly within the path from the selected resource to a lowest level storage device resource but nonetheless operate and rely upon or use some of those resources along the path discovered by the going down function.","As an example, if the selected resource is a file system , the going down function as explained above will traverse through the resource (i.e., objects) hierarchy in the repository  to arrive at one or more lowest level storage device resources . Along this downward relationship path, suppose a logical volume resource  is discovered. Thereafter, during application of the going up function, as the going up function traverses through host interface devices  and continues to the logical volume resource  originally discovered during the going down function application, it may be the case that this logical volume  is part of, for example, a volume group  that was not originally discovered during application of the going down function from the originally selected file system . Accordingly, the going up function discovers the volume group resource  in adds this resource to the collective set of action-affected resources. This is because the volume group  discovered during application of the going up function \u201cuses\u201d the logical volume  that exists within the direct path from the selected file system to a lowest level storage device .","As such, if the management action to be applied is, for example, an action to deallocate storage space from the selected file system , this action could have an operational impact on the logical volume  that is also part of the volume group . Accordingly, the going up function includes the volume group resource  in the set of action-affected resources since the deallocation of storage space from a logical volume  may impact applications that access the volume group  that references (i.e., it uses or includes) this logical volume . The going up function continues to operate until all top-level objects are discovered. Such objects (corresponding to resources) may include top-level objects such as a database resources , file system resources , and volume group resources  that were not originally selected during the selection process or discovered during application of the going down function.","In step , the resource manager  applies another resource traversal function known as a \u201cclosure\u201d function to the repository  containing objects  representative of resources  through  to identify a set of closure resources in the network environment that have an upward or downward allocation relationship to any resources discovered during the initial application of the going up and going down functions. The set of closure resources indicates resources that may be affected by a change made to application of the action on resources found during the first pass of the going up and going down functions as well. In step , the closure function causes the resource manager  to essentially perform the going up and going down functions all over again for any resource that was discovered as a result of application of the going up function other than volume group resources.","Closure can be defined formally using graphing terminology as the \u201clargest connected sub-graph that contains any of the going up\/down resources other than volume groups \u201d. Operation of the closure function thus involves performing the going down again function from all objects other than volume groups , and then performing the going up function again, and then down again, and up again and so on repeatedly, until no new objects other than volume groups  are found. Volume groups can be left out of the closure process because they are groups of resources rather than resources themselves, where removing a member of the volume group does not affect other members of the group. Using graph theory terminology, if the interrelated objects  corresponding to the resources  through  are the vertices and the \u201cused by\u201d and \u201cuses\u201d relationship indicator lines  are the edges of the graph, then the relationships of all possible objects to each other can be pictured as a directed graph. In other words, the illustration in  can be that of a directed graph of the objects  in the repository  that represent the resources  through  as they are labeled. The closure function thus determines the largest connected sub-graph that contains any of the going up\/down resources other than volume groups . The set of closure resources is further added to the collective set of action-affected resources. Upon completion of application of the closure function, an exhaustive list all resources that may be affected by the management action provided by the user  have been identified and processing proceeds to step .","In step , the resource manager  presents a representation (e.g., via the graphical user interface of the display ) of action-affected resources (i.e., discovered resources) for the set of allocated resources in the network environment to a user  of the management application . The representation of the action-affected resources informs the user of resources  through  within the storage area network that are currently in a functional relationship with the selected resource to which a management action is to be applied and that may be affected if the management action is to be applied to the selected resource. In other words, in step  the management application  present to the user  to collective set of action-affected resources discovered as a result of application of the going down function, the going up function and the closure function.","Even though the management action was initially selected by the user  to be applied only to the user selected resource(s) (e.g., logical volume -), in effect, since the other resources discovered by the resource transversal functions are impacted by this management action as well, the resource manager  automatically considers the object discovered by going down and going up as additional resources to which this management actions also applied. In this embodiment then, the resources discovered during the initial application of going down and going up functions are thus automatically added to the set of selected resources. The set of closure resources are displayed to the user, but are not however automatically added to the selected group of resources to which the management action is applied.","In step , the resource manager  receives a final selection of resource representations (e.g., via the graphical user interface of the display ) in the network environment  that represent resources to which the management action is to be applied. The final selection is made from the collective set of action-affected resources that relate to operation of the selected resource(s) as displayed to the user in step . In step  then, the user is able to select or unselect particular individual resources from all resources identified during application of the resource traversal functions in order to allow application of the management action such as deallocation of storage in a more granular or finite manner thus having additional control over which resources may be affected during application of the action to the selected resource.","As noted above, after application of the resource traversal functions, the selected set of resources to which the management action is applied now includes the original user selected resource(s), as well as any resources discovered by the initial application of the going up and going up functions. In one embodiment, closure resources are only shown or display (e.g., in a table, list, tree or other graphical construct on the display ) to the user as being affected or impacted by the management action, but are not automatically added to the selected set of resources to which the management action will be applied. In step , if the user includes (i.e., adds to the selected set of resources) any resources in the set of closure resources identified during application of the closure function in step , the management application activates the resource manager  to reapply the series of resource traversal function in step  through  to those closure. In an alternative embodiment, all resources discovered during the going up, going down and closure functions are added to the selected set of resources.","One purpose for the re-application of the going down function, the going up function and the closure function to any user selected closure resources chosen in step  is that these closure resources may not have been fully discovered in terms of what resources are used according to the resource traversal functions for those closure resources. As an example, suppose application of the first iteration of the closure function in step  identified a network resource that was not previously discovered during application of the going down or going up functions in step  in . As such, there could potentially be other resources within the network environment  that are dependent upon or that are used by this newly discovered closure resource. Accordingly, in step , if the user adds or selects a closure resource for application of the management action, processing returns to step  to re-apply the resource traversal functions using the selected closure resource as a starting point.","In step , after the user has selected all resources for application of the management action, the resource manager  applies the management action to the final selection of resource representations. In this manner, embodiments of the invention enable a user of the network management application to discover resources within the network environment that may be affected by application of the management action. Embodiments of the invention thus prevent situations in which a user applies the management action to the resource in the network without fully knowing the ramifications that may occur to other resources that may depend upon the selected resource to which the management action is applied.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 4","FIG. 3","FIG. 5","FIG. 5","FIG. 3"],"b":["203","304","4","200","304","4"]},"In step , the resource manager  applies a going down function as explained with respect to step  above. Details of application of the going down function are explained in sub-steps  through .","In step , the resource manager traverses operational relationships (i.e., relationship indicators  in ) of host objects (i.e., host resources  through ), beginning at the selected resource host object (logical volume resource -) in the repository , to identify successive host and storage objects  (i.e., resources  through  below the selected resource -) linked in an operational path  ending at least one storage object  that is a storage device. The going down function thus identifies each host and storage resource allocated for use during access to data in the storage device object by the selected host object resource -. It is assumed for this discussion that the user has initially selected a host resource  through . If the user does not initially select a host resource, but instead for example selects a storage resource  for application of a management action such as deallocation, no going down function is required.","As illustrated in , the relationship indicators (some examples of which are labeled ) having arrowheads extending downward beginning at the logical volume resource - and ending at the two storage device resources - and - indicate (i.e., point to) resources identified along the relationship path of each relationship indicators  containing the arrowhead. Sub-steps  through  provide further details of contingent processing operations of the going down function provided according to example embodiments of the invention to handle situations involving replicated resources. A replicated resource is a resource such as a logical volume that is replicated for redundancy purposes and is provided special processing in this embodiment.","In step , the resource manager  identifies existence of a set of replicated resources in the set of downward resources. The set of replicated resources includes a replicated instance of a detected replicated resource and any resources operationally related to the replicated instance of the detected replicated resource. In other words, in step  the resource manager identifies a resource encountered during application of the going down function that is has a replicated resource counterpart.","In step , in response to identifying existence of the replicated resource, the resource manager  prompts a user to determine if the set of replicated resources are to be included in the application of the series of resource traversal functions. At this point, the user has the option to include the replicated resource as well as any resources hierarchically related below the replicated copy of the resource within the going down function processing. One purpose of this processing is that if a management action is applied to a resource that is replicated, the management application  will also apply the management application to the replicated instance of a resource or, alternatively, the replicated instance of the resource will in some manner be affected by application of the management application to the first instance of the resource. As such, since application of the management action is likely to affect the replicated instance of the resource, the processing steps  through  provide the user the chance to include the replicated resource and any of its child resources within the going down resource traversal function.","In step , the resource manager  receives a replication response from the user  indicating whether or not the user desires to include the replicated instance of the resource in the going down function processing.","In step , if the replication response from the user  indicates the set of replicated resources are to be included in the application of the series of resource traversal functions, then the resource manager  applies the series of resource traversal functions to the set of replicated resources as well as to the series of discover resources normally perform an as explained. Accordingly, this embodiment of the invention of further enhances the user's knowledge prior to application of a management action by including information regarding replicated resources that may be affected by application of the management action.","Referring briefly now to , based on the explanation above of the going down function, the resource manager  has identified a multipath device resource -, the host device resources - through - and storage device resources - and - as storage area network resources that may be affected by the management action if it were to be applied to the selected resource -. The heavy lines with arrowheads in  extending downward through the set of resources beginning at the logical volume resource - indicate the traversal relationship paths followed during application of the going down function to arrive at the lowest level storage device resources - and -.","After application of the going down function in step  (,  and  as explained above), processing proceeds to step  (in ) for application of the going up function. Processing details of the going up function will now be explained with respect to the flowchart of processing steps shown in .",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 6","FIG. 3","FIG. 7","FIG. 6"],"b":["120","204"]},"In step  in , the resource manager  applies a going up function as explained above in step  . Processing details of the going up function are explained with respect to sub-steps  through  below.","In step , the resource manager  identifies host objects  (i.e., resources  through  in ) in the repository  that are i) operationally linked to each host and storage object  identified during application of the going down function but in a direction upwards in the hierarchically arranged order of objects in the repository; and ii) that are not directly within the data flow paths identified in the going down function () from the selected resource host object (i.e., the logical volume -) to the storage device objects - and -. The going up function thus identifies additional objects representing resources in the network environment that may be affected by the management action upon the selected resource - but starting from the storage resources - and -.","In other words, directing attention to , in step  the resource manager  begins at the lowest level or starting storage device resources - and - identified from application of the going down function in step  and begins navigating resource indicator paths  upwards in the resource hierarchy along the lines indicated by arrowheads extending upward. At each newly discovered resource, any upwardly extending resource indicator paths  that may branch out from a newly discovered resource are followed until top-level objects such as databases , file systems  or volume groups  are reached. All resources encountered during this processing (and that were not already encountered in the going down function) are added to the collective set of resources that may be affected by application of the management action.","The network environment  may include multiple host computer systems . As such, there is a chance that multiple host resources in different hosts  access a resource such as a storage device object  within the data storage system  (i.e., from different host computer systems ). In such situations, sub-steps  through  provide for this contingency and allow the user to determine whether or not he or she desires to have the going up resource traversal function include resources discoverable within another host computer system(s) - through -P () that also reference, for example, a storage device resource  discovered during application of the going down function in a first host computer system -.","In step , the resource manager  determines if alternate host resources exist. The alternate host resources include any host device resources of host computer systems - through -P other than a host computer system - containing the selected resource - and that share data allocated on any storage device resources  identified during application of the going down function for the selected resource -. If alternate host resources exist, the resource manager performs the processing steps  through .","In step , the resource manager  prompts the user  to determine if the alternate host resources are to be included in the application of the going up and closure (to be explained) resource traversal functions. This prompt can be presented on a graphical user interface within the display  of the management computer system .","In step , the resource manager  receives a multiple-host response from the user  indicating whether or not the user desires to include resources from another host computer system that references a resource discovered during the going down function.","In step , if the multiple-host response from the user  indicates the alternate host resources are to be included in the application of the going up and closure resource traversal functions, then the resource manager  includes the alternate host resources in application of the going up and closure resource traversal functions.","Referring briefly now to , based on the explanation above of the going up function, the resource manager  has identified additional top-level ending resources including logical volumes - and -, database - and file systems - and - as being additional resources that may be affected by the management action if it were to be applied to the selected resource -. These additional resources were not previously discovered during application of the going down function as illustrated the example in . Again, the heavy lines with arrowheads in  extending upward through the set of resources beginning at storage device resources - and - indicate the traversal of relationship paths followed during application of the going up function to arrive at the newly discovered top level resources -, -, - and - each indicated by background shading. These top-level resources -, -, - and -, as well as any other resources along the paths in  may be impacted by the management action if applied to the logical volume -. The resource manager  adds all resources discovered during application of the going up function to the set of action-affected resources.","After application of the going up function in step  as explained above, processing proceeds to step  for application of the closure function. Processing details of the closure function will now be explained with respect to the flowchart of processing steps shown in .",{"@attributes":{"id":"p-0086","num":"0085"},"figref":["FIG. 8","FIG. 3","FIG. 9","FIG. 8","FIG. 8"],"b":["120","205"]},"In step  in , the resource manager  applies a closure function to the repository containing objects as explained above with respect to step  in . Processing step  indicates details of application of the closure function according to one example embodiment of the invention.","In step , to apply the closure function, the resource manager  identifies closure objects in the repository by recursively re-applying an operation of the going up and going down functions to all the additional newly discovered objects (i.e., representing resources) representing resources in the network environment that may be affected by the management action upon the selected resource that were identified during operation of the going up function. In other words, the closure application in this example embodiment of the invention is a re-application of the going down and going up processing of  but that is performed upon each of the resources discovered during application of the going up function explained above. Any newly discovered objects found by going down and going up from closure are again processed. This continues repeatedly until no new objects are discovered. The result of closure is a collection of additional objects that could be affected by applying a management action to any of the original objects.","In one embodiment, the going down and going up functions performed during closure differ from the initial going down and going up functions in that they ignore as a starting point, for the going down function in closure, any Volume Groups or any similar objects that represent groups of resources, rather than being resources themselves. This is illustrated in  since during application of an iteration of the going down function in closure, the Volume group - is not used as a starting point, even though it is discovered during application of the going up function. Accordingly, volume - and host device - and storage device - are not discovered since the relationships of these the originate from the volume group -.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":["FIG. 10","FIG. 11","FIG. 3"],"b":["108","119","206"]},{"@attributes":{"id":"p-0091","num":"0090"},"figref":["FIG. 11","FIG. 3"],"b":"207"},"In step  as explained above, the resource manager  receives a final selection of resource representations in the network environment that represent resources to which a management action is to be applied. The final selection is made from the collective set of action-affected resources that relate to operation of the selected resource, such as the set of background and\/or non-background shaded resources illustrated . At this point processing, the resource manager  presents a user  with the list of resources with a highlighted and\/or non-highlighted background as illustrated in . The resources can be presented as illustrated in  (e.g., as a graphical depiction of the host and storage resources, or in another form such as in a table or list. The resource manager  automatically pre-selects those background shaded resources (from the going down and going up functions) for application of the management action on behalf of the user. However, the set of closure-only resources indicate resources that were not previously discovered by the going down or going up functions, and thus do not have a highlight background (but are included in the set of action-affected or discovered resources since they do have arrowheads extending towards them).","Depending upon the implementation, the different resources identified in the collective set of action-affected resources in  can be color-coordinated to indicate which resource traversal function identified those resources exclusively. As an example, all resources identified only by the closure function can be indicated as having a pink or other unique-colored background or shading or no shading (as in the example in ) in order to convey to the user that those resources are the closure resources and are not currently included in the set of resources to which the action will be applied.","In addition, as shown in , the closure resources can be indicated as being unselected for application of the management command whereas the other resources discovered in accordance with the going down and going up functions can be indicated as being selected (i.e., shaded) for application of the management command. In other words, even though the user selected the volume group - in the aforementioned example for application of the management command such as deallocation of storage space associated with the volume group -, the other resources discovered during the initial going down and going up functions (as opposed to those function being used during closure) can be displayed as being selected and shaded for application of this deallocation management action. However, in accordance with this example embodiment of the invention, those resources discovered as a result of the closure function application are indicated as possibly being affected by application of the deallocation management command via arrowheads but are also shown in  as not currently selected (i.e., not shaded) for application of the management action.","At this point, the user  has the option of selecting or unselecting resources for addition or removal from the collective set of action-affected resources to which the management action will be applied. In other words, in step , the user is able to add or remove resources in the final set of resources to which the management action will be applied. Details of processing step  are shown in sub-steps  to .","In step , the resource manager  determines if any resources selected from the final selection of resource representations in the network environment are resources identified within the set of closure resources in the network environment. As noted above, if the user decides to include closure resources for application of the management command to the selected resource -, the user may select any initially unselected closure resources to which the management action is to be applied (as noted above, the closure resources are initially unselected). If the user decides to include closure resources in the set of resources to which the management action will be applied, processing proceeds to perform steps  and . As an example from , if the user selects one of the set of closure-only resources (these resources were not previously discovered by the going down or going up functions, they were only discovered by the closure function), the processing of steps  and  is performed.","In step , the resource manager  re-applies the series of resource traversal functions including the going down function, the going up function and the closure function to any selected closure resources selected from the final selection of resource representations in the network environment.","In step , the resource manager  re-selects a final selection of resource representations in the network environment that represent resources to which a management action is to be applied. In other words, in step , after reapplication of the resource traversal functions to the selected top-level closure resources, the user is again presented with the opportunity to reselect more or less resources to which the management action is to be applied. Again, if the user selects additional closure-only identified resources identified during the second application of the closure function, processing can again returned to step . This process can be repeated until either the user selects no closure-only identified resources or until all resources have been identified to which any closure resources relate.","In an alternative embodiment, all resources on a single host computer system that are discovered during application of the going down, going up and closure function processing are included in the set of resources to which the management action is applied. However, application of the resource traversal functions may end up discovering a storage device that is shared between resources of two host computer system. In such cases, any resources that are discovered on the other host computer systems (after prompting the user as explained above) are not included as shaded for application of the management command.","Upon completion of the processing in , embodiments of the invention apply the management function to the selected resources as explained in step  of . In this manner, embodiments of the invention provide management applications that apply management functionality, actions or commands to particular resources with a network with the ability to discover related resources in a hierarchical arrangement of resources and allow the user to remain fully informed about resource dependencies within a complex network environment . Accordingly, resources that may experience a negative effect from application of a management command to another resource may be discovered and identified prior to actual application of the management command. This provides a significant advantage over conventional management applications since embodiments of the invention determine, prior to application of the management action, what the ramifications of the action might be upon other resources with the network environment thus preventing accidental damage, disturbance or disrupts to those other resources.",{"@attributes":{"id":"p-0101","num":"0100"},"figref":["FIG. 12","FIGS. 2 and 10"],"b":["110","110","110","111","112","113","114","114","110","100","130","110"]},"The memory system  may be any type of computer readable medium that is encoded with a management application - and resource manager application - that each represent software code such as data and\/or logic instructions (e.g., stored in the memory or on another computer readable medium such as a disk) that embody the processing functionality of embodiments of the invention as explained above. The processor  can access the memory system  via the interconnection mechanism  in order to launch, run, execute, interpret or otherwise perform the logic instructions of the applications - and - in order to produce a corresponding management and resource manager processes - and -. In other words, the processes - and - represent one or more portions of the applications - and - performing (e.g., executing) within or upon the processor  in the computer system . It is to be understood that the resource manager  operating as explained in former embodiments is represented in  by any combination of the applications - and - and\/or the processes - and -.","Is to be understood that embodiments of the invention include the applications - and - (i.e., the un-executed or non-performing logic instructions and\/or data) encoded within a fixed or removable computer readable medium such as a floppy disk, hard disk or in an optical medium, or in a memory system such as in firmware, read only memory (ROM), or, as in this example, as executable code within the memory system  (e.g., within random access memory or RAM). It is also to be understood that other embodiments of the invention provide the applications - and - operating within the processor  as processes - and -. While not shown in this example, those skilled in the art will understand that the computer system  may include other processes and\/or software and hardware components, such as an operating system, which have been left out of this illustration for ease of description of the invention. Thus embodiments of the invention include a management application configured with a resource manager program existing as either code in unexecuted form on a computer readable medium (e.g., as a software program on a transportable medium such as a CDROM) or as an executing software process or as a computer system configured to operate as explained herein.","Alternative arrangements of the invention include rearranging the processing steps explained above in the flow charts in such a way that the overall effect of the invention is the same. It is to be thus understood by those skilled in the art that the particular arrangement of processing steps in many instances does not specify implementation of embodiments of the invention. As such, those skilled in the art of software development and computer-related technologies will understand that there can be many ways and orders of representing the processing operations explained above and such alternative embodiments of the software code will still achieve the overall effects, features and advantages of the invention as explained herein. In addition, embodiments of the invention are not limited to operation on the computer systems shown above or in a storage area network environment. The system of the invention can operate on shared computing resources, or can be distributed among any number of computer systems and can be embodied in any type of management application. Accordingly, embodiments of the invention are not limited to operation in a storage area network management application, but are intended to be generally applicable to any type of application for which resources depend upon one another. Accordingly, embodiments of the invention are not limited to the processing arrangements explained above."],"heading":["SUMMARY","DETAILED DESCRIPTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing and other objects, features and advantages of the invention will be apparent from the following more particular description of preferred embodiments of the invention, as illustrated in the accompanying drawings in which like reference characters refer to the same parts throughout the different views. The drawings are not necessarily to scale, with emphasis instead being placed upon illustrating the embodiments, principles and concepts of the invention.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
