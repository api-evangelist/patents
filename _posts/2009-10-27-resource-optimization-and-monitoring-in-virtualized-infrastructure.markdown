---
title: Resource optimization and monitoring in virtualized infrastructure
abstract: A method includes monitoring a resource consumption of one or more virtual machines on a host computer in a computer network, and suspending the one or more virtual machines based on the resource consumption to free one or more resources on the host computer. The method also includes losslessly handling a request intended for the suspended one or more virtual machines to seamlessly resume the suspended one or more virtual machines. The request includes a network traffic intended for the suspended one or more virtual machines and/or a non-network request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08924534&OS=08924534&RS=08924534
owner: VMware, Inc.
number: 08924534
owner_city: Palo Alto
owner_country: US
publication_date: 20091027
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Virtualization may enable multiple operating systems to run on one physical host computer. The number of virtual machines (VMs) per physical host computer has seen an increase in recent times with the advent of powerful hardware. As hardware becomes even more powerful, higher consolidation ratios of VMs on a host computer may be expected. As higher workloads are being consolidated in a host computer, the advantage a customer\/user has may directly be proportional to the workloads and\/or the number of applications being involved.",{"@attributes":{"id":"p-0003","num":"0002"},"figref":"FIG. 1","b":["100","108","112","116","108","112","116","110","110","110","110","114","114","114","114","118","118","118","118","1","102","2","104","3","106","108","112","108","112","108","112","116","108","112","116","100","120","124","122"],"sub":["1","2","3 ","N","1","2","3 ","N","1","2","3 ","N "]},"In one aspect, a method includes monitoring a resource consumption of one or more virtual machines on a host computer in a computer network and suspending the one or more virtual machines based on the resource consumption to free one or more resources on the host computer. The method also includes losslessly handling a request intended for the suspended one or more virtual machines to seamlessly resume the suspended one or more virtual machines. The request includes a network traffic intended for the suspended one or more virtual machines and\/or a non-network request.","In another aspect, a method includes suspending one or more virtual machines on a host computer in a computer network based on a resource consumption to free one or more resources on the host computer, and queuing a request intended for the suspended one or more virtual machines at an appliance virtual machine. The method also includes sending a broadcast packet data from the appliance virtual machine to seamlessly resume the suspended one or more virtual machines, and routing the request intended for the suspended one or more virtual machines to the resumed one or more virtual machines based on the queue at the appliance virtual machine.","In yet another aspect, a computer network includes a cluster of a number of host computers. Each of the plurality of host computers includes one or more virtual machines. The computer network also includes a kernel module to monitor a resource consumption of the one or more virtual machines on a corresponding host computer, and an appliance virtual machine, coupled to a virtual switch in the kernel module and configured to enable routing of a request intended for the one or more virtual machines.","The one or more virtual machines are suspended by the kernel module when the resource consumption of the one or more virtual machines is less than a threshold value. A request intended for the suspended one or more virtual machines is queued at the appliance virtual machine. A broadcast packet data is sent from the appliance virtual machine to seamlessly resume the suspended one or more virtual machines. The request intended for the suspended one or more virtual machines is routed through the appliance virtual machine to the resumed one or more virtual machines based on the queue at the appliance virtual machine.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2","b":["200","200","212","202","204","208","212","204","208","202","202","202","202"]},"In one or more embodiments, appliance VM  may reside on a host computer in a datacenter. In one or more embodiments, appliance VM  may have two virtual network interface cards (vNICs)  associated with vswitch  and vswitch . In one or more embodiments, vNICs  may logically couple appliance VM  or any VM to the corresponding virtual interfaces, i.e., vswitch  and vswitch , and may enable appliance VM  or any other VM to send and receive network traffic through the interfaces. In one or more embodiments, one vNIC  may be in the public network, and may be connected to vswitch  having a physical network interface card (pNIC)  as an uplink. In other words, connectivity to the external physical world may be provided through pNIC . Therefore, vswitch  is shown as vswitch (w\/uplink)  in . In one or more embodiments, another vNIC  may be a part of a private network, and may be connected to vswitch  having no uplink. Therefore, vswitch  may have no connectivity to the external physical world, and is shown as vswitch (w\/o uplink)  in .",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 3","FIG. 2"],"b":["200","302","302","208","202","304","302","208","302","212","302","202"]},"In one or more embodiments, the VM kernel module  may monitor one or more of a central processor (e.g., Central Processing Unit (CPU)) utilization by VM , a memory utilization by VM , network Input\/Output (I\/O) by VM , and storage I\/O by VM . In one or more embodiments, information regarding the aforementioned resource utilization may be sent to the user interface (UI), management Application Programming Interfaces (APIs), and\/or appliance VM .","In one or more embodiments, an \u201cidling\u201d state of VM  may be defined as a state of minimal use of resources available for use by VM . In one or more embodiments, resources available to VM  may be user assigned. For example, a user may assign 4 GB of memory in the physical box, out of which only 1 GB may be used. In one or more embodiments, the user may define a threshold value of use of each of the resources, below which VM  may be considered to be \u201cidling.\u201d In one embodiment, a profile for resource utilization by VM  may be set-up to determine \u201cidling.\u201d","For example, the threshold value for memory utilization may be 10% of the user assigned memory. In one embodiment, data associated with modified memory pages may be used to determine memory usage. Here, the lesser the number of modified pages, the lesser the memory consumption. In another example, the threshold value for central processor (e.g., CPU) utilization may be 2%. Further, for example, the network I\/O associated with VM  may be monitored, i.e., the transmitted\/received packet count for VM . In one or more embodiments, when the packet count is nearly static or very low, which indicates no network activity or low network activity, VM  may be considered to be \u201cidling.\u201d In one or more embodiments, network data may be sifted through carefully to account for broadcast\/multicast packets. In one or more embodiments, unicast packet data associated with VM  may alone be analyzed.","In yet another example, the threshold value for storage utilization may be 25% of the allocated storage. Here, storage I\/O for VM  is taken into account along with read\/write storage. In one or more embodiments, statistics for the abovementioned resource utilization in VM  may be reported to the user as a scheduled task. In one or more embodiments, the \u201cidling\u201d may be defined at one or more of an individual VM level, datacenter level, virtual application level, and host computer level. In one or more embodiments, the user may be prompted with benchmark suggestions, if required.","In one or more embodiments, once the threshold values for resource utilization have been set, the VM kernel module  monitors VM  (or a number of VMs) for \u201cidling\u201d candidates defined by the specified criteria. In one or more embodiments, a UI display of the VMs being monitored may be provided, along with the results stored. In one or more embodiments, when VM  is in an \u201cidling\u201d state, a fully automated decision may be taken in a policy driven manner. In one embodiment, the decision may also be user prompted.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 3","b":["302","208","202","302","202","302","212","302","208","202","302","202","212","302","302","302","208","202"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 4","FIG. 2","FIG. 3"],"b":["200","302","302","302","208","212","302","302","202","302","208","202"]},"In one or more embodiments, the routing information of appliance VM  may be updated once VM  is moved to vswitch , to which appliance VM  also is coupled. In one or more embodiments, appliance VM  may save identification data (e.g., Media Access Control (MAC) address, Internet Protocol (IP) information) associated with VM . In one or more embodiments, as all requests, i.e., network traffic destined for VM , may have to go through appliance VM , appliance VM  may cause a physical switch (not shown) coupled to pNIC  to update a table (e.g., Content Addressable Memory (CAM) table), thereby allowing traffic destined for VM  to first be routed to appliance VM . In one or more embodiments, appliance VM  may, therefore, act as a gateway for VM . In one or more embodiments, non-network requests may also be destined for VM .","In one or more embodiments, non-network requests may include at least one of network protocol requests, storage protocol requests, communication between a number of VMs (including VM ) on a host computer, and communication between VM  and the associated host computer. For example, communication between a number of VMs on a host computer and communication between VM  and the associate host computer may be enabled through a Virtual Machine Communication Interface (VMCI).","In one or more embodiments, once appliance VM  updates the routing information thereof for VM  (or a number of VMs in the general case), the VM kernel module  may suspend VM  (see ). In one or more embodiments, just prior to the suspension of VM , the configuration of VM  may be saved. In one or more embodiments, as discussed above, command completion may be ensured prior to the suspension of VM .","In one or more embodiments, the monitoring data, the actions taken and\/or the VMs suspended may be presented to the user via the UI through appliance VM  or the virtual center UI. In one or more embodiments, the monitoring data may enable the tracking of VMs not being used, and the time of non-use of the VMs. For example, the data presented to the user through the UI may indicate a number of VMs, a number of suspended VMs, time of inactivity of VMs, resources associated with inactive VMs and\/or actions taken till the time of presentation of the data.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 5","FIG. 5"],"b":["302","502","302","212","504","302","506","302","202","302"]},"In one or more embodiments, if VM  resides on the same host computer as appliance VM , operation  may involve decoupling of VM  from the current vswitch to which VM  is coupled, and coupling of VM  to vswitch  to which appliance VM  is coupled. In one or more embodiments, if VM  resides on a different host computer, operation  may involve migration of VM  to the host computer on which appliance VM  resides, and coupling of VM  to vswitch  to which appliance VM  is coupled. In one or more embodiments, operation  may involve updating of the routing information of appliance VM . In one or more embodiments, VM  may then be suspended in operation .","In one or more embodiments, a suspended VM  may be powered on by a user. In one or more embodiments, suspended VM  may be powered on automatically when there is a request destined for VM . In one or more embodiments, when the user powers on VM , the VM kernel module  may resume VM  and, from the information available from the appliance VM , may move VM  to the appropriate vswitch or to an appropriate host computer through migration (e.g., using VMware\u00ae's VMotion\u2122). In one or more embodiments, prior to migration of VM  to another host computer, a memory snapshot (e.g., including registers, instructions) of VM  may be taken as the host computers share a common storage. In one or more embodiments, VM  may also continue to use the same vswitch  to which appliance VM  may be coupled. In one or more embodiments, in this case, all requests for VM  may go through appliance VM .","In one or more embodiments, traffic specific to suspended VM  may first reach appliance VM , which may, based on the suspended state of VM , first save the packets in the traffic destined for suspended VM . In one or more embodiments, appliance VM  may then send network messages in the form of broadcast packets (e.g., wake-on-LAN (WOL)) to \u201cwake up\u201d VM .","In one or more embodiments, VM  may then be \u201cwoken up,\u201d and resumed through the aid of the broadcast packets. In one or more embodiments, the network messages may ensure that VM  is fully resumed prior to the signaling of the success of the resume operation back to appliance VM . In one or more embodiments, when VM  comes back \u201conline,\u201d either on the same host computer as appliance VM  or a new host computer, appliance VM  may transmit the packets in the traffic destined for VM  to VM .","The abovementioned process is summarized in the flowchart shown in . In one or more embodiments, operation  may involve checking for suspension of VM . In one or more embodiments, if VM  is suspended, operation  may involve appliance VM  saving network traffic, i.e., packets, intended for suspended VM . In one or more embodiments, operation  may involve sending broadcast packets from appliance VM  to \u201cwake up\u201d VM . In one or more embodiments, operation  may involve sending the packets destined for suspended VM  to the \u201cwoken up\u201d VM .","In one or more embodiments, non-network requests intended for suspended VM  may be communicated to suspended VM  through the VM kernel module . In one or more embodiments, suspended VM  may, again, be \u201cwoken up.\u201d Therefore, in one or more embodiments, requests intended for the suspended VM  may be losslessly handled.","In one or more embodiments, when VM  is in a suspended state for a time period exceeding another threshold value, VM  may be construed as not being actively used. In one or more embodiments, an administrator or the user may be prompted with an option to permanently free up resources related to VM  or an option to continue to monitor VM  for longer. In one or more embodiments, this may be interpreted as a way to identify unused capacity in the datacenter, and a chance to optimize.","The abovementioned process is summarized in the flowchart shown in . In one or more embodiments, operation  may involve checking as to whether VM  is suspended for a time longer than a threshold value. In one or more embodiments, if VM  has been suspended for a time longer than the threshold value, operation  may involve providing an option to permanently free resources related to VM . In one or more embodiments, if the user chooses to permanently free resources related to VM , operation  may involve freeing the resources related to VM  permanently. In one or more embodiments, if VM  has not been suspended for a time longer than the threshold value, VM  may continue being monitored in operation . In one or more embodiments, if the user chooses not to permanently free resources related to VM , VM  may, again, continue being monitored as in operation .","In one or more embodiments, VM  may continue to share vswitch  with appliance VM , after VM  has been \u201cwoken up\u201d as described above. In one or more embodiments, the user may be prompted with an option to move the resumed VM  to a different vswitch, in which case VM  may be decoupled from vswitch  and coupled to the new vswitch. In one or more embodiments, Distributed Resource Scheduler (DRS) algorithms may be employed to move VM  to a host computer different from the one on which appliance VM  is resident, based on the resource requirements of VM  and\/or the resource utilization on the host computer to which VM  is moved.","The abovementioned process is summarized in the flowchart shown in . In one or more embodiments, operation  may involve providing an option to move the \u201cwoken up\u201d VM  to a new vswitch. In one or more embodiments, operation  may be an option provided as part of a DRS algorithm to check if moving VM  to a new vswitch in a new host computer different from that on which appliance VM  is resident is required. In one or more embodiments, operation  may involve moving VM  to a vswitch in a different host computer based on the requirement in operation . In one or more embodiments, if moving VM  to a new switch is not required in operation , operation  may involve resuming VM  using the same vswitch . In one or more embodiments, if moving VM  to a new host computer is not required in operation , operation  may involve coupling VM  to a new vswitch in the same host computer to resume VM .","In one embodiment, a resource pool or cluster of host computers may each have one appliance VM . In one or more embodiments, as appliance VM  and the virtual center may communicate with each other, settings for the entire data center need not be maintained in appliance VM . In one or more embodiments, uniform granular policies may, therefore, be applied via the virtual center for the entire datacenter.","In one or more embodiments, vNIC  may have an identification data associated thereof analogous to pNIC . In one or more embodiments, the destinations of packets arriving at the physical switch may be identified using the destination identification data (e.g., destination MAC address). In one or more embodiments, therefore, the physical switch may know the port associated with the destination identification data. In one or more embodiments, in order to build a table (e.g., MAC lookup table) of the identification data and the associated ports, the physical switch may continuously monitor the packets arriving at the physical switch.","In one or more embodiments, as the identification data of vNIC  may be registered and the identification data of pNIC  may be the same for all VMs (considering a number of VMs on a host computer) on a particular host computer, the time-out problem associated with the flushing of identification data of a suspended VM  during handling of traffic directed to the suspended VM  may be avoided by having appliance VM  up at all times. In one or more embodiments, network traffic directed to suspended VMs may be routed to the appropriate destinations through the aid of appliance VM .","In one or more embodiments, as a separate table indicating destination identification data of network traffic may be maintained at appliance VM , packets in the network traffic may be placed in a queue. In one or more embodiments, because the packets in the network traffic may be queued by appliance VM  and later transmitted to VM  during the resumption thereof, there may be no data loss during the entire duration between the suspension and the resumption of VM . Similarly, in one or more embodiments, non-network requests may be queued by appliance VM  and later transmitted to VM  during the resumption thereof, leading to no data loss during the duration between the suspension and the resumption of VM . In other words, requests intended for suspended VM  may, therefore, be losslessly handled. In one or more embodiments, VM  may appear \u201calive\u201d to an end user even during a state of suspension.","In one or more embodiments, the user may have his environment optimized and may have the ability to power on more VMs on the same hardware, thereby executing more application workloads. In one or more embodiments, in a setup where the user pays a cloud\/hosting service provider on a per VM basis, resource utilization and optimization may be done such that VMs are made active only during a time of the day when the network experiences peak loads. In one or more embodiments, the cost per VM, therefore, may be reduced and resources available to each VM may be increased. In one or more embodiments, the reduction of resources needed to spawn additional VMs may lead to savings on power and cooling costs. Even if new VMs may not be powered on, a host computer that is loaded less may consume less power and need less cooling, resulting in cost savings to the customer.","In one or more embodiments, resources may be released in a limited manner to allow a limited number of VMs to be powered on. For example, if a VM  suspended due to inactivity requires 1 GB of memory to resume and is assigned 2 GB of memory, only 1 GB of memory may be released to the unallocated pool to ensure that VM  gets the 1 GB required to resume. In one or more embodiments, this may also ensure that VM  is not left waiting for resources upon resumption. Further, in one or more embodiments, this may ensure that the user does not cause the system to operate at a higher clock rate than normal unnecessarily.","In one or more embodiments, resource reservation may not be provided to VMs. For example, a predetermined amount of resources (e.g., 512 MB of RAM) may not be needed to be allocated to a VM. In one or more embodiments, this may result in the resource allocation being comprehensive and dynamic.","In one or more embodiments, \u201cfreed up\u201d resources may be kept track of to enable the broadcast of messages to VM system  when the host computer may be operating at a higher clock rate than normal. In one or more embodiments, the tracking of \u201cfreed up\u201d resources may enable a hard resource limit to be imposed on new VMs being powered on.","In one or more embodiments, resource consumption in VM system  may be balanced by migrating VMs (e.g., using VMware\u00ae's VMotion\u2122) across multiple host servers.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 9","b":["902","904"]},"In one or more embodiments, operation  may involve losslessly handling a request intended for the suspended one or more VMs to resume the suspended one or more VMs. In one or more embodiments, the request may include a network traffic intended for the suspended one or more VMs and\/or a non-network request that includes a storage protocol request and\/or a network protocol request.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 10","b":["1002","1004","202"]},"In one or more embodiments, operation  may involve sending a broadcast packet data from appliance VM  to seamlessly resume the suspended one or more virtual machines. In one or more embodiments, operation  may involve routing the request intended for the suspended one or more virtual machines to the resumed one or more virtual machines based on the queue at appliance VM .","With the above embodiments in mind, it should be understood that the invention can employ various computer-implemented operations involving data stored in computer systems. These operations are those requiring physical manipulation of physical quantities. Any of the operations described herein that form part of the invention are useful machine operations. The invention also relates to a device or an apparatus for performing these operations. In one embodiment, the apparatus can be specially constructed for the required purpose (e.g. a special purpose machine), or the apparatus can be a general-purpose computer selectively activated or configured by a computer program stored in the computer. In particular, various general-purpose machines can be used with computer programs written in accordance with the teachings herein, or it may be more convenient to construct a more specialized apparatus to perform the required operations.","The embodiments of the present invention can also be defined as a machine that transforms data from one state to another state. The transformed data can be saved to storage and then manipulated by a processor. The processor thus transforms the data from one thing to another. Still further, the methods can be processed by one or more machines or processors that can be connected over a network. The machines can also be virtualized to provide physical access to storage and processing power to one or more users, servers, or clients. Thus, the virtualized system should be considered a machine that can operate as one or more general purpose machines or be configured as a special purpose machine. Each machine, or virtual representation of a machine, can transform data from one state or thing to another, and can also process data, save data to storage, display the result, or communicate the result to another machine.","The invention can also be embodied as computer readable code on a computer readable medium. The computer readable medium is any data storage device that can store data, which can thereafter be read by a computer system. Examples of the computer readable medium include hard drives, network attached storage (NAS), read-only memory, random-access memory, CD-ROMs, CD-Rs, CD-RWs, magnetic tapes and other optical and non-optical data storage devices. The computer readable medium can include computer readable tangible medium distributed over a network-coupled computer system so that the computer readable code is stored and executed in a distributed fashion.","Although the method operations were described in a specific order, it should be understood that other housekeeping operations may be performed in between operations, or operations may be adjusted so that they occur at slightly different times, or may be distributed in a system which allows the occurrence of the processing operations at various intervals associated with the processing, as long as the processing of the overlay operations are performed in the desired way.","Although the foregoing invention has been described in some detail for purposes of clarity of understanding, it will be apparent that certain changes and modifications can be practiced within the scope of the appended claims. Accordingly, the present embodiments are to be considered as illustrative and not restrictive, and the invention is not to be limited to the details given herein, but may be modified within the scope and equivalents of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 4","FIG. 2","FIG. 3"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
