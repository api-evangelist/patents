---
title: Logical object search framework and application programming interface
abstract: A method, computer program product, and system for executing and administering queries in a data management system, and particularly a relational data management system. Logical objects can be queried by providing a translation from a logical query in a pre-defined logical schema to a physical query against the physical data management system, such as by translating a database query constructed using an Object Query Language (OQL) into a query in Structured Query Language (SQL) without the user needing to know the details of the physical data management system such as the structure of the underlying relational databases.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09165043&OS=09165043&RS=09165043
owner: 
number: 09165043
owner_city: 
owner_country: 
publication_date: 20091125
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["1. Technical Field","The present invention relates generally to a logical object search framework and application programming interface (API), and more particularly to using a logical object search framework and API to execute and administer queries in a data management system.","2. Discussion of Related Art","In today's information-driven economy, the ability of an enterprise to efficiently store, update, and use information can be critical to the enterprise's ability to serve its customers and compete in the economy. An entity such as a business enterprise can model a concept of an entity relating to that enterprise and use such modeling information to maintain and use information relating to that entity. Some examples of entities that can be modeled by an enterprise include customer, product, bill of materials etc. An enterprise can maintain and model data relating to these entities in either a relational programming environment or in an object-oriented environment such as the commonly used Java environment. In a relational system, data is maintained in one or more data tables, where each row refers to an instance of the entity. In an object system, an entity concept is modeled using classes, where each instance of the class, called an object, refers to an instance of the entity, with characteristics of those objects being known as \u201cattributes\u201d of that object. In order to bridge the two systems, object-relational modeling (ORM) techniques are used to enable an enterprise to use data maintained in relational databases in an object-oriented environment.","Accordingly, embodiments of the present invention include a method of processing a query, comprising providing a pre-defined logical schema to a user of a database system comprising at least two relational database entities storing data therein, receiving a logical query for data stored in the database system from the user, where the logical query is written in an object-oriented query language according to the pre-defined logical schema, and comprises two or more predicates and an operator specifying an action to take with one or more of the predicates, in response to receiving the logical query, interpreting the logical query using the pre-defined logical schema to determine which of the relational database entities is associated with each predicate, requesting each relational database entity to translate each of its associated predicates, receiving a translated predicate query for each predicate from its associated relational database entity, where each translated predicate query is written in a relational query language and is a translation of one of the object-oriented predicates in the logical query, combining each received translated predicate query into a master query using the operator, executing the master query against the database system, in response to executing the master query, receiving a query result set from the database system, and providing the query result set to the user.","Other embodiments of the present invention include a computer program product comprising a computer useable medium having a computer readable program, where the computer readable program when executed on a computer causes the computer to provide a pre-defined logical schema to a user of a database system comprising at least two relational database entities storing data therein, receive a logical query for data stored in the database system from the user, where the logical query is written in an object-oriented query language according to the pre-defined logical schema, and comprises two or more predicates and an operator specifying an action to take with one or more of the predicates, in response to receiving the logical query, interpret the logical query using the pre-defined logical schema to determine which of the relational database entities is associated with each predicate, request each relational database entity to translate each of its associated predicates, receive a translated predicate query for each predicate from its associated relational database entity, where each translated predicate query is written in a relational query language and is a translation of one of the object-oriented predicates in the logical query, combine each received translated predicate query into a master query using the operator, execute the master query against the database system, in response to executing the master query, receive a query result set from the database system, and provide the query result set to the user.","Still other embodiments of the present invention include a system comprising a memory having a pre-defined logical schema stored thereon, a database memory having at least two relational database entities storing data thereon and a processor configured with logic to provide the pre-defined logical schema to a user, receive a logical query for stored data from the user, where the logical query is written in an object-oriented query language according to the pre-defined logical schema, and comprises two or more predicates and an operator specifying an action to take with one or more of the predicates, in response to receiving the logical query, interpret the logical query using the pre-defined logical schema to determine which of the relational database entities is associated with each predicate, request each relational database entity to translate each of its associated predicates, receive a translated predicate query for each predicate from its associated relational database entity, where each translated predicate query is written in a relational query language and is a translation of one of the object-oriented predicates in the logical query, combine each received translated predicate query into a master query using the operator, execute the master query against the at least two relational database entities, in response to executing the master query, receive a query result set from the at least two relational database entities, and provide the query result set to the user.","The above and still further features and advantages of embodiments of the present invention will become apparent upon consideration of the following detailed description thereof, particularly when taken in conjunction with the accompanying drawings wherein like reference numerals in the various figures are utilized to designate like components.","Referring now to the Figures, an exemplary system according to an embodiment of the present invention is illustrated in . The system shown in  is particularly suited to the execution and administration of master data retrieval in a Master Data Management (MDM) system. The system includes a search framework and API , memory , database management system (DBMS) , data storage system  containing data, and authorization system , all of which are connected over networks , , ,  to each other and to clients . The system  may include additional servers, clients, and other devices not shown, and individual components of the system may occur either singly or in multiples, for example, there may be more than one data storage area in the system.","Generally, clients  provide an interface to the functions provided by the search framework and API , for example, mechanisms for querying the databases, etc. The end-user clients  may be implemented by any quantity of conventional or other computer systems or devices (e.g., computer terminals, personal computers (e.g., IBM\u00ae-compatible, Apple\u00ae Macintosh\u00ae computer, tablet, laptop, etc.), cellular telephone, personal data assistant (e.g., PALM\u00ae PRE\u2122, TREO\u2122 smartphone, iPhone\u00ae mobile digital device, etc.), and may include any commercially available operating system (e.g., AIX\u00ae, Linux\u00ae, OS_X\u00ae, Sun\u2122 Solaris\u2122, UNIX\u00ae, Windows\u00ae, etc.) and any commercially available or custom software (e.g., browser software, communications software, word processing software, etc.). These systems may include types of displays and input devices (e.g., keyboard, mouse, voice recognition, etc.) to enter and\/or view information. (IBM\u00ae and AIX\u00ae are trademarks of International Business Machines Corporation; Apple\u00ae, Macintosh\u00ae, iPhone\u00ae, and OS X\u00ae are trademarks of Apple, Inc.; PALM\u00ae, PRE\u2122, and TREO\u2122 are trademarks of Palm, Inc.; Linux\u00ae is a trademark of Linus Torvalds; Sun\u2122 and Solaris\u2122 are trademarks of Sun Microsystems, Inc.; UNIX\u00ae is a trademark of The Open Group; and Windows\u00ae is a trademark of Microsoft Corporation.)","The search framework and API  may be implemented in the form of a processing system, or may be in the form of software. A processing system may be implemented by any conventional or other computer or processing systems preferably equipped with a display or monitor, a base (e.g., including the processor, memories and\/or internal or external communications devices (e.g., modem, network cards, etc.) and optional input devices (e.g., a keyboard, mouse or other input device)). If embodied in software, the search framework and API  may be available on a recordable medium (e.g., magnetic, optical, floppy, Digital Versatile Disc (DVD, Compact Disc (CM, etc.) or in the form of a carrier wave or signal for downloading from a source via a communication medium (e.g., bulletin board, network, Local Area Network (LAN), Wide Area Network (WAN), Intranet, Internet, etc.). For example, the search framework and API  can be implemented as software, for example one or more daemons, software modules, or APIs.","Memory  may be implemented by any conventional or other memory or storage device (e.g., Random Access Memory (RAM), cache, flash, etc.), and may include any suitable storage capacity. Memory  may store a pre-defined logical schema, logical queries, predicate queries, master queries, java filters, and result sets, as is further described below.","The DBMS  may be any suitable database management system, and may be a Master Data Management system such as IBM\u00ae InfoSphere\u00ae Master Data Management Server, Microsoft SQL Server\u00ae 2008 R2 Master Data Services, or Sun Master Data Management (MDM) Suite, for example. In the depicted embodiment, the DBMS comprises a database server , a query parser , and a query optimizer . (InfoSphere\u00ae is a trademark of International Business Machines Corporation.)","Data storage system  may be implemented by any quantity of any type of conventional or other databases (e.g., network, hierarchical, relational, object, etc.) or storage structures (e.g., files, data structures, web-based storage, disk or other storage, etc.). The databases or storage structures , ,  may store any desired information arranged in any fashion (e.g., tables, hierarchical, relations, objects, etc.), and may store additional information such as metadata in addition to documents. For example, the databases or storage structures , ,  may be any suitable data storage structure such as an enterprise data source (e.g., DB2\u00ae, Oracle\u00ae, IBM\u00ae Enterprise Content Management (ECM) systems, ERP systems, etc.), personal and intra-organization data sources (e.g., spreadsheets (e.g., Microsoft\u00ae Excel\u00ae), databases (e.g., Microsoft\u00ae Access\u00ae, MySQL\u2122), SharePoint\u00ae, Quickr\u00ae, eXtensible Markup Language (XML), etc.), or web-based data sources such as public databases (e.g., tax records, real estate records, court documents, etc.) and the like. Authorization system  may be implemented by any suitable authorization or access control system, and may be a single system or individual systems associated with one or more data storage structure in the data storage system . (DB2\u00ae and Quickr\u00ae are trademarks of International Business Machines Corporation; Oracle\u00ae is a trademark of Oracle Corporation; Excel\u00ae, Access\u00ae, SharePoint\u00ae are trademarks of Microsoft Corporation; and MySQL\u2122 is a trademark of Sun Microsystems, Inc.)","The networks , , ,  may be implemented by any quantity of any suitable communications media (e.g., WAN, LAN, Internet, Intranet, wired, wireless, etc.). The computer systems of the present invention embodiments may include any conventional or other communications devices to communicate over the networks via any conventional or other protocols, and may utilize any type of connection (e.g., wired, wireless, etc.) for access to the network. It is understood that any of the client , search framework and API , memory , DBMS , data storage system , and authorization system  may be local to one or more components of system , or may be remote from and in communication with one or more other components of system  via one or more networks , , , .","In operation, the search framework and API  provides a way to query logical objects by providing a translation from a logical query in a pre-defined schema to a physical query against the physical data storage system . For example, the search framework and API  may translate a database query constructed using an Object Query Language (OQL) to a query in Structured Query Language (SQL) without the user needing to know the details of the physical data storage system  such as the structure of the underlying relational databases. In these embodiments, this translation is provided by means of mapping the relational schemas utilized in the data storage system  and DBMS  to a single pre-defined logical schema, for example a product classification with category hierarchies.","The pre-defined logical schema may take various forms, for example in a retail MDM system, the master data may be modeled in two or three dimensions, for example, product data, common categorization data, and location-specific data. Thus, a set of objects such as Item, Catalog, Spec, Category, Hierarchy and Location may be used to model the merchandise in these dimensions. Item may correspond to a product in a retail store, such as a television, and has a common set of basic attributes, which can be defined in \u2018Spec\u2019. For management purposes, items can be grouped using a \u2018Catalog\u2019 object, which categorizes the items based on their general type, for example \u2018Books\u2019, \u2018Electronics\u2019, \u2018Garden Supplies\u2019, or \u2018Media\u2019. Items in a catalog can be further grouped into \u2018Category\u2019, for example, \u2018Audio\u2019, \u2018Computers\u2019, \u2018Photo\u2019 or \u2018Televisions\u2019. A category may have sub-categories, and so each category can be in a \u2018Hierarchy\u2019. Each \u2018Category\u2019 has a set of basic attributes, which can be defined in \u2018Spec\u2019. The items may also have location-specific attributes, and may also be grouped using a \u2018Location\u2019 object, which has a set of basic attributes, which can be defined in \u2018Spec\u2019.","In this way, a set of logical objects (e.g., Item, Catalog, Spec, etc.) may be used to model any type of retail business system, or a different set of logical objects may be used to model any type of business or MDM system. The search framework and API  itself models the relationship between logical objects, but allows a developer or system administrator to specify the particular retrieval logic in each object. For example, the search framework and API  may model the relationship between \u2018Item\u2019, \u2018Category\u2019 and \u2018Hierarchy\u2019 as item.category.hierarchy.name=\u2018Electronics Classification\u2019, where a period is used to link two logical objects. This representation indicates that an item belongs to a category in the hierarchy \u2018Electronics Classification\u2019.","The use of the pre-defined schema vastly simplifies the user's ability to run logical or business queries against physical databases of varying form, for example a single MDM system may integrate databases of multiple types from multiple vendors, without requiring the use of multiple database schemas to run a query. In the present embodiments the user need not know the details of the underlying physical databases, which reduces the cost of training and implementation for complex MDM systems.","For example, as shown in , a database query  requesting a result set containing all televisions available in the San Antonio Metropolitan area with a price point of $1250 or less is constructed using an object-oriented query language and the pre-defined logical schema. The search framework and API  translates and facilitates running this search against the underlying relational database table  depicted in FIG. B, which maintains data in one or more data tables, where each row refers to an instance of the entity (e.g., a particular product), and each column refers to an attribute of the entity (e.g., the source vendor, the model number, the price, the available shipping zones for this product, etc.).","Generally, the search framework and API  that has been previously described performs the steps of . Referring now to , the reference numeral  generally designates a flow chart depicting a process for executing a search query in a Master Data Management (MDM) system. In step , the search framework and API  receives from the client a logical query written in an object-oriented query language, according to the pre-defined logical schema. In step , the search framework and API  interprets the logical query using the pre-defined logical schema to determine the physical entities that are the subject of the query (e.g., a particular database), any predicates specified for the determined entities, and the conjunctions and groupings (operators) specified between the determined predicates.","In step , the search framework and API  directs each of the queried entities to translate the determined predicates specified for it into a database-specific query language, such as SQL, and to build a predicate query that can be directly run against the physical data storage system. The search framework and API  also directs each entity to obtain authorization for the client to access the queried data, whereupon each MDM entity may communicate with the authorization system to perform this authorization check. If the appropriate authorization rule can be translated into a database-specific query (e.g., a SQL query), then the authorization query can be appended to the raw predicate query, otherwise the authorization rule can be transmitted as an authorization filter (e.g., a java filter) that is executed against the search result set before it is consumed by the client.","In step , the search framework and API  receives the individual predicate queries from each of the queried entities, along with any appended authorization queries or java filters. In step , the search framework and API  combines the individual predicate queries into a master query by appropriately nesting, grouping, performing union or intersection, or the like on the individual predicate queries. In step , the search framework and API  runs the master query against the physical data storage system, and in step  the search framework and API  receives a result set from the data storage system. If any authorization filters were received by the search framework and API , then in step  the search framework and API  applies these filters to the result set before, in step , sending the filtered result set to the client.","The search framework and API  also provides administration of queries and result sets to the system, for example storing query parameters, queries, and result sets in the memory. For example, the search framework and API  can provide the following API functionality:","SearchManager\u2014a class for handling searches;","Searchable\u2014a seachable interface is implemented by every MDM entity that needs to be available for searching;","SearchQuery\u2014the Query object is used to specify a search query. This object accepts the search query as a string and allows the consumer of the API to specify some options for running the query;","SearchResult\u2014the SearchResult object encapsulates the ResultSet of a query;","SearchResultIterator\u2014the SearchResultIterator object allows the consumer of the search API to iterate over the ResultSet of a query in the SearchResult object;","SavedSearchParameter\u2014the SavedSearchParameter object is used to store a list of personalized search parameters;","SavedSearchQuery\u2014the SavedSearchQuery object is used to create a specific named query and store it in memory; and","SavedSearchResult\u2014the SavedSearchResult object allows the user to save the actual ResultSet of a particular query, along with any specified parameter values, and to specify a name for the set of objects.","As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable medium may be, for example, but is not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device. Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java\u2122, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. (Java\u2122 is a trademark of Sun Microsystems, Inc.) The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","It is to be understood that the software for the computer systems of the present invention embodiments may be implemented in any desired computer language and could be developed by one of ordinary skill in the computer arts based on the functional descriptions contained in the specification and flow charts illustrated in the drawings. By way of example only, the software may be implemented in the C#, C++, Python, Java, or PHP programming languages. Further, any references herein of software performing various functions generally refer to computer systems or processors performing those functions under software control.","The computer systems of the present invention embodiments may alternatively be implemented by any type of hardware and\/or other processing circuitry. The various functions of the computer systems may be distributed in any manner among any quantity of software modules or units, processing or computer systems and\/or circuitry, where the computer or processing systems may be disposed locally or remotely of each other and communicate via any suitable communications medium (e.g., LAN, WAN, Intranet, Internet, hardwire, modem connection, wireless, etc.).","Aspects of the present invention are described with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks. The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operation steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","A processing system suitable for storing and\/or executing program code may be implemented by any conventional or other computer or processing systems preferably equipped with a display or monitor, a base (e.g., including the processor, memories and\/or internal or external communications devices (e.g., modem, network cards, etc.) and optional input devices (e.g., a keyboard, mouse or other input device)). The system can include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code, bulk storage, and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution. Input\/output or I\/O devices (including but not limited to keyboards, displays, pointing devices, etc.) can be coupled to the system either directly or through intervening I\/O controllers. Network adapters may also be coupled to the system to enable the system to become coupled to other processing systems or remote printers or storage devices through intervening private or public networks. Modems, cable modem and Ethernet cards are just a few of the currently available types of network adapters.","The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, method and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the Figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometime be executed in the reverse order, depending on the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more features, integers, steps, operations, elements, components, and\/or groups thereof.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIGS. 2A and 2B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
