---
title: Token-based secure data management
abstract: In some implementations, tokens that are representative of sensitive data may be used in place of the sensitive data to maintain the security of the sensitive data. For example, data may be separated into sensitive data and nonsensitive data, and at least the sensitive data is securely delivered to a data storage service. The data storage service generates a token that is representative of the sensitive data and stores the sensitive data as secure data. The data storage service may deliver the token to an entity that also receives the nonsensitive data, and the entity may use the token in place of the sensitive data. In some implementations, different tokens are generated each time the same piece of sensitive data is submitted for storage as secure data. Further, in some implementations, access policies define authorizations regarding which entities are able to resolve a token to access the actual sensitive data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09419841&OS=09419841&RS=09419841
owner: Amazon Technologies, Inc.
number: 09419841
owner_city: Seattle
owner_country: US
publication_date: 20110629
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION","CONCLUSION"],"p":["Some types of businesses or other enterprises may receive or generate data that may be private, secret, confidential, proprietary, or that is otherwise sensitive, such that the data should be maintained in a secure manner. Further, sensitive data is often managed and shared by internal services within an enterprise during the performance of enterprise operations. Because internal services are typically provided within an enterprise's own network, intranet, or the like, interactions are often assumed to be secure. In addition, users of internal services may be able to access enterprise data that would never be exposed publicly, such as customer information, proprietary information, financial information, and the like. Accordingly, some enterprises may have safeguards that limit access of internal users and applications to sensitive data. However, enforcing these safeguards may interfere with the legitimate need for access to certain information or services.","Secure Data Storage","This disclosure includes techniques and arrangements for securing data. In some implementations, a data storage service receives sensitive data to be securely stored. The data to be securely stored may be delivered to the data storage service in an encrypted form, such as from a data storer, from an original source of the data, from an encryption source or the like. The data storage service may determine or may be provided with a data type for the data and an identifier (ID) associated with the data, such as a user ID corresponding to a particular user to which the data pertains, a transaction ID corresponding to a particular transaction, or the like. The data storage service generates a token for the data and provides the token to the data storer for use as a proxy for the actual data. In some implementations, the token may include a randomly generated number or character string. For example, in some implementations, the token may include the user ID, the data type and the character string.","Following generation of a token based on the received sensitive data, the token may be passed back to the data storer and used by the data storer in place of the actual sensitive data when the data is used by the data storer or requested by another entity within the enterprise. Thus, the sensitive data may remain securely stored, while the token that represents the data may be passed among various entities within the enterprise and applied to various uses, all with lower levels of access authorizations and security than would be required if the sensitive data itself were being shared.","When an entity has a legitimate need for the actual sensitive data, the entity may submit the token to the data storage service. The data storage service may check the authorization of the requesting entity based at least in part on access policies established for the particular entity. If the access policies indicate that the requesting entity is authorized to access the sensitive data, the data storage service may encrypt the sensitive data and provide the sensitive data to the requesting entity.","As an example, suppose a first entity receives user data from a user. The user data may include both sensitive data and nonsensitive data. The sensitive data may be stored in the secure data storage and the first entity receives a token representing the sensitive data. In some implementations, the sensitive data is separated from the nonsensitive data before reaching the first entity, and the sensitive data is passed directly to the data storage service. Accordingly, the sensitive data may bypass the first entity altogether, and the first entity receives only the token representing the sensitive data.","Next, suppose that a second entity (i.e., a data consumer) that has a legitimate need for the sensitive data of the user submits a request to the first entity (i.e., a data provider) to obtain the sensitive data. Rather than passing the sensitive data (which the first entity may not possess anyway), the first entity provides the token representing the sensitive data to the second entity. Accordingly, communications between the first entity and the second entity may be unsecured and the second entity may perform various functions as discussed below without actually resolving the token representing the sensitive data. Furthermore, when the second entity does actually require the sensitive data for performing a legitimate operation, the second entity may submit the token to the data storage service to obtain the actual sensitive data in a secure manner such as through encrypted delivery or the like.","Implementations herein include the ability to designate virtually any type of data for storage at the data storage service. Further, some implementations enable return of only partial data to particular data consumers based on determined authorization of the particular data consumer for access to particular information. Thus, if a token represents a certain quantity of information, different data consumers submitting the token to the data storage service will automatically receive different amounts or portions of the information depending on particular access policies established for each particular data consumer with respect to the particular type of data. For example, suppose that a data storer stores data that may include users' nine-digit postal codes. Accordingly, a low-privilege storage service may include for each user a token that represents the postal code that includes customer ID, data type (i.e., postal code) and a unique character string. A plurality of different data consumers may obtain tokens representing the postal codes from the low-privilege storage service. Based on the need for information predetermined for each data consumer, a first data consumer that returns the token to the data storage service may be provided with only the first five digits of the nine-digit postal code, while a second service consumer may be provided with the entire nine-digit postal code, and a third service consumer may receive no postal code information at all when the token is submitted to the data storage service. In some instances, all the service consumers may submit the same token using the same call (such as to the same application programming interface (API)), but may be provided different portions or different subsets of the same information based on their previously demonstrated need for the information, as may be established by the access policies checked by the data storage service prior to responding to each call.","Furthermore, in some implementations, entities that will handle data as a data provider (service provider) and\/or a data consumer (service consumer) may be required to register in advance with a security service provided by the data storage service or by a separate security service. For example, each entity that provides data to other entities may register as a service provider, while each entity that consumes data provided by another entity may be required to register as a service consumer to receive particular types and amounts of data provided by a particular service provider. Prospective data consumers may apply to the security service to access data from a particular data provider. In some instances, the security service may collect information from prospective data consumers to determine whether to authorize access by the prospective data consumer. For example, the security service and\/or the data provider may determine what types of data each particular data consumer should be able to access, whether the particular data consumer needs all of the particular data, or just a portion thereof, and the like. Following approval of the data consumer's application by the data provider of the registered service, the security service can implement access policies that include authorization information that defines the types and amounts of information that each data consumer is able to access, obtain or utilize from each data provider. In some implementations, the security service may be provided by the data storage service. In other implementations, the security service may be a separate entity and the data storage service is a data provider registered with the security service.","Some implementations herein are described in the environment of a user providing sensitive data to an enterprise, such as during a transaction, or the like. However, the implementations herein are not limited to the particular examples of user data, data obtained during transactions, or data generated by entities, and may be extended to other types, sources, or applications of private, confidential, secret or proprietary data, as will be apparent to those of skill in the art in light of the disclosure herein.","Example Architectures",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 1A","FIG. 1A"],"b":["100","102","100","100","102","104","102","106","106","106","102","106","106"]},"In the illustrated example, one or more users , such as an external user (e.g., a customer, potential customer or other member of the public) an internal user (e.g., an employee or application of an enterprise), or other type of user, depending on the purpose of the system , may be in communication with a server . For example, the user  may communicate user data  to the data storer  through the server  using any of a variety of user devices such as personal computers or workstations -, e-book readers and tablet devices -, laptop computers and netbooks -, cellular telephones and smart phones -, or any other suitable communication devices. In this example, the user data  may include both a sensitive user data portion that is to be stored as secure data  and a nonsensitive user data portion for which secure data storage is not used. The server  may receive the user data  and may use an encryption component  to encrypt the sensitive portions of the user data  to generate encrypted data  for delivery to the data storage service . The nonsensitive portions of the user data  may be passed in the clear (i.e., without encryption), or may be separately encrypted for delivery to the data storer .","As one nonlimiting example, suppose that the data storer  is a retail website and the user  enters the user data  into a form  as part of a transaction, such as an online transaction. For example, the form  may be displayed to the user  by one of the user devices , such as through a web browser or application. Suppose that the form  collects some private or sensitive data, such as credit card information, Social Security number, driver's license number, nine digit postal code, telephone number, or other information that the data storer  or enterprise has determined should be protected or kept secure. In some implementations, the user data  may be transmitted from the user device  to the server  in a secure manner, such as using HTTPS (hypertext transfer protocol secure), SSL\/TLS (secure sockets layer\/transport layer security), a VPN (virtual private network), or other secure communication technology. Upon receipt of the user data  at the server , the encryption component  may encrypt at least the sensitive portion of the user data  that will be stored as secure data  and forward the encrypted data  to the data storer . As discussed additionally below, in some implementations, the data storer , the data storage service , or a separate security service (not shown in ) may determine in advance which data or types of data should be securely stored in the data storage service . For example, the form  may be configured to designate which portions of the user data  collected by the form  should be stored as secure data . As one nonlimiting example, the name of a form field that collects secure data may be prefixed with a string that indicates that the value entered into this field should be treated as secure data. Further, in some implementations, the server  may be a proxy that handles communications with one or more users  on behalf of the data storer . However, in other implementations, the server  may be operated by the data storer  and may also execute other services and perform other functions of the data storer .","As mentioned above, the server  receives the user data  and encrypts at least the sensitive portion thereof that is to be treated as secure data. The encrypted data  is passed to the data storer  and from there to the data storage service . Alternatively, the server  may pass the encrypted data  directly to the data storage service , bypassing the data storer , while passing the nonsensitive portion of the user data  to the data storer . In some implementations, the encryption component  may encrypt the sensitive portion of the user data  for decryption only by the data storage service , and may encrypt the nonsensitive portion of the user data  for decryption only by the data storer . Further, in other implementations, as mentioned above, the nonsensitive portion of the user data  may be sent to the data storer  in the clear.","The data storage service  may include a token module  that may generate and manage a plurality of tokens . In some implementations, such as in the illustrated example, each token  may be represented as a triple that includes a user ID , a data type , and a random string . For example, each user  may be assigned or may designate a unique user ID . In some implementations, the user ID  may correspond to an account, a name, an email address, or other identification information of the user . Alternatively, in some implementations, transaction IDs or other types of IDs may be assigned and used in place of user ID . The data type  identifies the type of data that a particular token represents, such as credit card number, telephone number, driver's license number, Social Security number, nine-digit zip code, street address, apartment access code, and so forth. As mentioned above, virtually any type of data may be stored as the secure data . In some implementations, the data type  may be indicated by the name of the form field of the form  into which the data was entered. Further, for each token , the token module  generates the random character string . In some implementations, a new random character string  is generated for each input of encrypted data, even if the information has been received previously for the particular user . For example, the random string may include a predetermined number of characters, such as 16, 20, 24, or 32 characters, etc. Additionally, in some implementations, the token  may merely include the data type  and the random character string , while in yet other implementations, the token  may include only the random character string .","The data storage service  receives the encrypted data  corresponding to the sensitive portion of the user data  that was submitted by the user , and decrypts the encrypted data  using one of the keys  possessed by the data storage service . For example, the data storage service  and the encryption component  may use an asymmetric key encryption arrangement in which the encryption component  uses a public key of the data storage service  to encrypt the encrypted data . The data storage service  uses one of keys  as a corresponding private key to decrypt the encrypted data . For example, the data storage service  may include a security module  to manage the decryption of the encrypted data . The token module  may generate one or more tokens  as described above from the decrypted encrypted data . Following generation of the one or more tokens , the security module  may store the sensitive portion of the user data  obtained from the encrypted data  as the secure data . In some implementations, the secure data  may be encrypted before or during storing of the secure data  by the data storage service . Furthermore, a pointer to the newly stored secure data  may be correlated with the corresponding newly generated token(s) .","In addition, in some implementations, one or more pieces of the secure data  may have a time to live (TTL) assigned, which designates a lifespan of the data. For example, certain data types may automatically have a specified TTL assigned to them. When the TTL has expired, the security module  may delete the corresponding piece of secure data  from the data storage service . Furthermore, when a piece of secure data  is deleted from the data storage service , in some implementations, the security module  may send instructions to one or more other entities in the system that maintain a token  corresponding to the deleted piece of secure data  to instruct the one or more other entities to delete the particular token  corresponding to the deleted piece of secure data .","Following the generation of the one or more tokens  from the encrypted data , the one or more tokens  representing the encrypted data  (i.e., representing the sensitive portion of the user data ) are passed to the data storer . The data storer  may then treat the one or more tokens  in the same manner as it would the actual sensitive portion of the user data . For example, the data storer  may store the one or more tokens  along with the nonsensitive portion of the user data  as data  in a low-privilege storage service . Accordingly, the one or more tokens  may be stored with the related nonsensitive portion of the user data  from the same user, same transaction, etc., as data . Alternatively, in some implementations, the data storer  may store the data  locally, may pass the data  to another data consumer (not shown in ), or the like. Still alternatively, in some implementations, both the sensitive and the nonsensitive portions of the user data  may be encrypted by the server  and passed to the data storage service . The data storage service  may generate one or more tokens  for the sensitive portion of the user data  and pass the one or more tokens  and the nonsensitive portion of the user data  to the data storer . Other variations will also be apparent to those of skill in the art in view of the disclosure herein.","In some implementations, the system  may utilize access policies  that are applied when an entity attempts to access data in the system . In some implementations, the access policies  may be applied to control access to the nonsensitive portion of the user data , as well as to control access to the token(s)  and the secure data . In other implementations, the access policies  may be applied only by the data storage service  when an entity attempts to resolve a token to retrieve secure data . Thus, in some implementations, only the data storage service  maintains and applies the access policies , and the access policies  are only applied when a data consumer attempts to resolve a token  to obtain access to the secure data . As discussed additionally below, when the token  is received, the data storage service  checks the access policies  with respect to the requesting data consumer and provides the secure data  in accordance with the access policies . In these implementations, for example, the low-privilege storage service  may not include, or may not apply the access policies  at all when a data consumer makes a request for access to the data , such as a request to access the nonsensitive user data  and\/or the token(s) .","In other implementations, any data provider in the system  may maintain and apply access policies . For example, as illustrated in , the low-privilege storage service , as a data provider, may check the access policies  to determine authorizations of each data consumer that requests access to data  provided by the low-privilege storage service . In these implementations, the low-privilege storage service  may include an instance of a security client  that may apply the access policies  to incoming requests for access to the data . In some implementations, the access policies  may be determined by the security module  of the data storage service . Alternatively, the access policies  may be determined by a separate security service, as discussed in some implementations below.","In the illustrated example, the security module  may determine authorizations of each entity for accessing particular types of data stored in the system . For example, each entity that provides data to another entity may register their service with the security module . Any entity in the system  that desires, as a data consumer, to access the data provided by a particular data provider, may apply to the security module  for authorization to access some or all of the data provided by the particular data provider. Access policies  may then be established for the particular data consumer with respect to the data provided by the particular data provider. When a particular data consumer requests data from a particular data provider, the particular data provider may apply the access policies  to determine the type and amount of data that the particular data consumer is authorized to receive.","As an example, suppose the data storer  sends a request to the low-privilege storage service  to access the data  related to a particular user . Further, suppose that the access policies  specify that the data storer  may store the data  and also retrieve the data . Consequently, in response to the access request, the security client  at the low-privilege storage service  may review, based on the access polices , the authorization of the data storer , and provide the requested data  to the data storer  in accordance with the access policies . On the other hand, suppose that the data storer  sends a token  to the data storage service  to attempt to resolve the token  and obtain the corresponding secure data . Further, suppose that the access policies  indicate that the data storer  is not authorized to receive the secure data . In that situation, the request from the data storer  will be denied by the data storage service  based on the access policies . Additional details for establishing and applying the access policies  are described below.","Further, the low-privilege storage service  may include various other components, such as one or more service applications and one or more APIs (not shown in ) to enable the low-privilege storage service  to provide data as a data provider to data consumers, as discussed below. Similarly, the data storage service  may include one or more APIs  for responding to data requests, such as for providing tokens  in response to receiving encrypted data and for providing encrypted sensitive data in response to receiving a token.","The data storage service , data storer , server , and low-privilege storage service  may communicate with one another and other entities in the system  through one or more communication links . Furthermore, the server  may communicate with the one or more users  through one or more communication links . Each of these communication links ,  may be the same communication link or different communication links. For example, the communications links ,  may be any of a direct connection, a local area network (LAN), a wide area network (WAN), a virtual private network (VPN) or any combination thereof, and may include both wired and wireless communication technologies using any suitable protocols and communication techniques. In some implementations, the data storage service , data storer , server  and low-privilege storage service  may be located at a data center, server farm or other single physical location, while the one or more users  access the server  over the Internet. In other implementations, the data storage service , data storer , server , low-privilege storage service , and users  may be located in diverse locations that are physically remote from one another and the communication links ,  may include the Internet or other long distance communication network.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 1B","FIG. 1A","FIG. 1B","FIG. 1B"],"b":["100","150","152","154","156","152","154","156","108","154","156","154","102","106","154","150","102","154","102","124","154","102","124","150","124","156","150","124","156","150","156","124","158","138","102","124","138","150"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 1C","b":["124","100","124","160","102","106","102","162","160","102","122","124","124","126","128","160","130"],"i":["a","a","a","a"]},"Subsequently, suppose that the same piece of sensitive data  is submitted again to the data storage service , e.g., as part of a different transaction, from a different entity, or the like, as indicated by arrow (). The token module  generates a second token (), different from the first token (), that may include the same user ID , the same data type  and a second random string () that is different from the first random string (). Further, suppose that the same piece of sensitive data  is submitted again to the data storage service , e.g., as part of a different transaction, from a different entity, or the like, as indicated by arrow (). The token module  generates a third token (), different from the first token () and the second token (), that may include the same user ID , the same data type , and a third random string () that is different from the first random string () and the second random string (). Consequently, each time the piece of sensitive data  is submitted to the data storage service  for storage as secure data , a different token  having a different random string  is generated in response.","In some implementations, the piece of sensitive data  may be stored separately each time as secure data , thus resulting in three instances of secure data . In other implementations, the piece of sensitive data  may be stored as a single instance of the secure data  in response to the first submission (), and the subsequently generated tokens (i.e., tokens () and ()) may be correlated to one or more pointers to the single instance of the secure data . Other possible variations will also be apparent to those of skill in the art in view of the disclosure herein.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 2","b":["200","100","102","138","202","108","150","202","204","202","124","106","102"]},"As an example, suppose that an entity, such as a first data consumer , submits a data request  to the low-privilege storage service  to obtain user information for a particular user . Furthermore, suppose that the data request  includes a request for user information that is included in the secure data , such as a credit card number, Social Security number, driver's license number, or other sensitive user data. The low-privilege storage service  may return a token - that represents the secure data  in place of the actual secure data  requested, as well as any requested nonsensitive data -. In the implementations in which the low-privilege storage service  uses the access policies  for determining whether to provide data to the first data consumer , the security client  at the low-privilege storage service  may check the access policies  to determine authorizations of the first data consumer . When the access policies  indicate that the first data consumer  is authorized to receive the requested nonsensitive data - of the particular user and a token - that represents the requested sensitive data of the particular user, the low-privilege storage service  provides this information to the first data consumer .","The first data consumer  receives the token - and nonsensitive data - for the particular user, and then forwards the token - to the data storage service  to resolve the token -. The security module  at the data storage service  receives the token - sent by the first data consumer  in the request, and determines from the access policies  whether the first data consumer  is authorized to receive secure data . If the access policies  indicate that the first data consumer  is authorized to receive the requested secure data  corresponding to the token -, the security module may identify the secure data  corresponding to the token -, such as based on a pointer, stored memory address, storage block, or the like, and may retrieve the corresponding secure data . Furthermore, the security module  may use one of keys  to encrypt the retrieved security data as encrypted secure data . For example, the data storage service  may include a public key as one of keys  corresponding to a private key  maintained by the first data consumer . The security module  may send the encrypted secure data  corresponding to the token - to the first data consumer . The first data consumer  may receive the encrypted secure data  and use the key  to decrypt and utilize the encrypted secure data .","As a further nonlimiting example, suppose that the encrypted secure data  provides a nine digit postal code of the particular user. Suppose that it is subsequently decided that the first data consumer  does not require the entire nine digit postal codes of users to perform its function and that the first five digits of the postal code are sufficient. Consequently, the access policies  may be updated to indicate that the first data consumer  only needs the first five digits of the postal code rather than the entire nine digits. Subsequently, when the first data consumer  next submits a token  to be resolved for obtaining the postal code of a user, the security module , when checking the access policies  for the first data consumer , determines that only the first five digits of the postal code should be returned. Consequently, the security module  returns only the first five digits of the postal code as the encrypted secure data , rather than the nine digits that were returned previous to the change in the access policies . Thus, even though the first data consumer  makes the same call to the data storage service , the data passed back is different due to the change in the access policies . Similar changes to access policies  may be performed for various other types of sensitive data, such as Social Security number, driver's license number, or the like. Furthermore, because only a portion of the secure data  is returned, in some implementations, the secure data may be returned in an unencrypted form rather than as encrypted secure data . Additionally, while the foregoing functions have been described as being performed by the security module , in other implementations, the functions may be performed by one or more of the APIs .",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 3","b":["300","100","200","102","302","304","306","302","142","140","306","304","306","302","308","138","142","138","140","302","302","138","124","2","302","124","2","306","304","302","138","140","142","124","2","140"]},"As one nonlimiting concrete example, suppose that the third data consumer  requires the driver's license number of the particular user for performing a particular function, such as authorizing a purchase. The second data consumer  obtains, from the low-privilege storage service , the token - that represents the driver's license number of the particular user. For example, the token - may include the user ID of the particular user, the data type, e.g., \u201cDL\u201d for driver's license, and a random character string previously generated by token module  when the token - was first created. The token - representing the driver's license number of the particular user is delivered by the second data consumer  to the third data consumer  as part of a service provided by the second data consumer .","Upon receiving the token -, the third data consumer may submit the token - to the data storage service  to resolve the token - and obtain the drivers license number of the particular user. For example, the data storage service  receives the token - and locates the secure data  corresponding to the token -, i.e., the drivers license number. The security module  uses an appropriate one of the keys  corresponding to the third data consumer  to encrypt the driver's license number to generate the encrypted secure data . The encrypted secure data  is sent to the third data consumer  where it is decrypted using an appropriate private key  of the third data consumer . The third data consumer  may then use the decrypted driver's license number for authorized purposes.","Furthermore, it may be noted that while the second data consumer is able to retrieve the token - from the low-privilege storage service  and pass the token - to the third data consumer , the second data consumer  may not have authorization to resolve the token - or obtain the corresponding secure data . For example, the access policies  may indicate that the second data consumer  is only authorized to retrieve and manipulate the token -, rather than the actual secure data .",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 4","b":["400","100","102","402","404","1","404","2","404","3","406","404","408","410","406","404","408","410","408","410","404","404"]},"The transactions  are placed by the fraudster , and at least a portion of the customer attribute information  and\/or the order attribute information  determined to be sensitive data for each transaction  may be encrypted either by the retail website  or by a proxy server , as described above with respect to , to generate encrypted data . The encrypted data  may be delivered to the data storage service . In response to receiving the encrypted data , corresponding tokens  may be provided to the retail website  for each transaction .","Suppose that the retail website  discovers that the third transaction - is a fraudulent transaction, but has no knowledge of other fraudulent transactions. The retail website  may provide one or more tokens - corresponding to the transaction - to a fraud detection service . A fraud monitoring component  of the fraud detection service  may submit the one or more tokens - to the security module  on the data storage service . With the submission of the one or more tokens -, the fraud monitoring component  may request that the security module  provide one-way hashes of the secure data  corresponding to the tokens - and further provide one-way hashes of the secure data  corresponding to all other tokens  of the same data type(s) created within a specified time period, such as the past day, past week, past month, etc. Nonlimiting examples of suitable hash algorithms that may be used by the security module  include SHA1, SHA-256 and MD5.","Upon receiving the requested hashes  of the secure data , the fraud monitoring component  may compare hashes of each requested data type with the hashes corresponding to the one or more tokens -. Accordingly, from the hashes , the fraud monitoring component  can identify whether any other transactions received have used the same customer attribute information  and\/or order attribute information , without having access to the actual content of the secure data . The fraud monitoring component  can identify other transactions that used at least some of the same information ,  for further investigation. Thus, implementations herein enable a fraud detection service  to identify links between disparate secure data  without having to actually reveal the secure data  to the fraud detection service . Consequently, the secure data  remains secure while fraud monitoring and detection is enabled. Further, the secure data  may be similarly linked for other purposes without revealing the content of the secure data  to an entity performing the linking operation.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 5","b":["500","100","102","502","140","500","502","504","502","504","506","508","508","102","138","302","500","510","510","206","306","302","508","510"]},"In some implementations, the security module  may receive registration requests from the service providers  for registering their services with the security service . Thus, the data storage service  may register its services (e.g., APIs ) with the security service . Additionally, the security service  may receive applications for access to services from the service consumers . The security service  and\/or each service provider  registering a service may determine access policies  for each service with respect to each service consumer . For example, each service consumer  may apply to the security service  for access to a particular service provided by one of the service providers . The security service  may forward the application to the corresponding service provider  to gain approval of the service provider , determine appropriate access policies and authorizations for each service consumer , and so forth. Following registration of a service, each service provider  may be provided with an instance of the security client , such as a runtime client, that monitors incoming requests from the service consumers , authenticates the requests from the service consumers , and determines that data provided to the service consumers is in accordance with the access policies  applicable to the particular service consumer . Further, the security client  may periodically synchronize the access policies  with the security service  to ensure that the access policies  are up to date. In some implementations, the security service  may be configured as and may operate in the same or in a similar manner to the security service described in U.S. patent application Ser. No. 13\/162,343, filed Jun. 16, 2011, to the same inventors as herein, the entire disclosure of which is incorporated herein by reference. Additionally, in some implementations, as discussed above, the functionality of the security service  may be incorporated into the data storage service , such as into security module , thus eliminating the separate security service . Further, as mentioned above, in some instances, only the data storage service  may maintain or enforce the access policies .","Example Processes",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIGS. 6-8"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 6","b":["600","102","600","102","110"]},"At block , data that includes sensitive data is received. For example, in some implementations, a user may enter user data into a form in a web browser, or may otherwise provide user data to an enterprise, such as in part of an online transaction. In other implementations, an entity may generate or derive data that includes sensitive data. Additionally, in some implementations, the data may be proprietary information, confidential information, or the like.","At block , the data is separated into sensitive data and nonsensitive data. For example, in some implementations, the data may be separated based on designated fields in a form into which the data was entered. In other implementations, the data may be separated into sensitive data and nonsensitive data based on other considerations, such as may be specified by a security service, access policies, or the like. In some implementations, a server  that may be a proxy, a website host, or the like, separates the data into the sensitive data and nonsensitive data, while in other implementations, the separation may take place at the data storage service . Typically, it is desirable to encrypt at least the sensitive data as early as possible for secure delivery to the data storage service .","At block , the token module  of the data storage service  generates at least one token to represent the sensitive data. For example, the sensitive data may be identified according to data type and the token module may generate a separate token for each different data type of sensitive data received. In some implementations, the token includes at least a randomly generated character string. Further, in some implementations, the token may also include a data type. Further, in some implementations, the token may also include a user ID or transaction ID.","At block , the data storage service  stores the sensitive data as secure data. For example, the sensitive data may be stored in a physically secure location, and may be virtually secure in that only a limited number of authorized individuals or entities are permitted to access to the secure data.","At block , the nonsensitive data is provided to an entity and the token that represents the sensitive data is provided to the entity in place of the sensitive data. For example, as mentioned above, the nonsensitive data may be delivered directly to an entity that is handling the transaction with the user, while the sensitive data is delivered to the data storage service  and the data storage service delivers the token to the entity. Alternatively, in other implementations, the nonsensitive data and the sensitive data may both be delivered to the data storage service , and the data storage service  may deliver both the nonsensitive data and the sensitive data to the entity handling the transaction with the user. Other variations are also possible, as will be apparent to those of skill in the art in view of the disclosure herein.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 7","b":["700","102"]},"At block , the data storage service  receives a token representative of sensitive data from a data consumer in a request to access the sensitive data. For example, the data consumer may submit the token to an API provided by the data storage service  to resolve the token and receive the sensitive data corresponding to the token.","At block , the data storage service refers to access policies to determine the authorizations of the particular data consumer for accessing the particular sensitive data corresponding to the submitted token. For example, as mentioned above, the data storage service may maintain access policies that define the authorizations of each data consumer authorized to access the secure data stored by the data storage service .","At block , the data storage service provides the sensitive data to the data consumer in accordance with the access policies. For example, if the data consumer is authorized to full access of the sensitive data, the data storage service  may encrypt the sensitive data using a public key corresponding to a private key maintained by the data consumer, and deliver the encrypted sensitive data to the data consumer. Alternatively, if the data consumer is authorized to access only a portion of the sensitive data, the data storage service may deliver the portion of the sensitive data to the data consumer. As an example, if the sensitive data is a number such as a credit card number, Social Security number, driver's license number, nine-digit postal code, or the like, the data consumer might be authorized to receive only several digits of the number. Of course, if the data consumer is not authorized to access any of the sensitive data, the data storage service  may return a message to that effect in response to receiving the token.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 8","b":["700","102"]},"At block , the data storage service  receives a token representative of a piece of secure data from an entity. For example, a fraud detection service or other entity may submit a token and request a hash of the secure data corresponding to the token, as well as hashes of secure data of a plurality of other tokens of the same data type.","At block , the data storage service  computes the hash of the content of the secure data corresponding to the token submitted by the entity and computes hashes of the content of the secure data corresponding to a plurality of other tokens of the same data type, such as tokens for data receive over a specified period of time. The data storage service may use any one of the hash algorithms specified above or another suitable one-way hash algorithm.","At block , the data storage service  provides the computed hashes to the entity to enable the entity to link different pieces of the secure data to one another without having to access the content of the secure data. For example, the entity, upon receiving the hashes may compare the hashes to identify any identical hashes, which are indicative of identical secure data content. In some cases, depending on the data type this may be indicative of fraud or other misconduct, and may warrant further investigation by the entity.","The example processes described herein are only examples of processes provided for discussion purposes. Numerous other variations will be apparent to those of skill in the art in light of the disclosure herein. Further, while the disclosure herein sets forth several examples of suitable frameworks, architectures and environments for executing the processes, implementations herein are not limited to the particular examples shown and discussed.","Example Computing Devices",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 9","b":["900","102","102","102","102","102"]},"In the illustrated example, the storage service computing device  includes one or more processors , a memory , and one or more communication interfaces . The memory  may include volatile and nonvolatile memory and\/or removable and non-removable media implemented in any type of technology for storage of information, such as computer-readable instructions, data structures, program modules or other data. Such memory includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, solid state storage, magnetic disk storage, RAID storage systems, storage arrays, network attached storage, storage area networks, or any other medium which can be used to store the desired information and which can be accessed by a computing device. Depending on the configuration of the computing device , the memory  may be a type of computer readable storage media and may be a non-transitory storage media.","The memory  may be used to store any number of functional components that are executable by the processors . In many implementations, these functional components comprise instructions or programs that are executable by the processors  and that, when executed, implement operational logic for performing the actions attributed above to the data storage service . Functional components stored in the memory  may include the security module  and the token module , as described above, which may be executed on the processors  for implementing the various functions and features of the data storage service  described herein. Additional functional components stored in the memory  may include an operating system  for controlling and managing various functions of the storage service computing device . The memory  may also store the secure data , the tokens , the keys , the access policies , and the APIs . Furthermore, in the case that there is a separate security service , as discussed above with reference to , the memory  may include an instance of the security client . The storage service computing device  may also include many other logical, programmatic and physical components, of which those described above are merely examples that are related to the discussion herein.","The communication interface(s)  may include one or more interfaces and hardware components for enabling communication with various other devices, such as data provider computing devices, data consumer computing devices, and\/or user devices over communication links , . For example, communication interface(s)  may facilitate communication through one or more of the Internet, cable networks, cellular networks, wireless networks (e.g., Wi-Fi, cellular) and wired networks. Various different approaches to implementations described herein can be implemented in various environments. For example, the communication links ,  may include any appropriate network, including an intranet, the Internet, a cellular network, a LAN, WAN, VPN or any other such network or combination thereof. Components used for such a system can depend at least in part upon the type of network and\/or environment selected. Protocols and components for communicating via such networks are well known and will not be discussed herein in detail.","Data storage service computing device  may further be equipped with various input\/output devices . Such devices may include a display, various user interface controls (e.g., buttons, joystick, keyboard, touch screen, etc.), audio speakers, connection ports and so forth.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 10","b":["1000","1000","138","206","302","306","104","110","402","414","502","114","1000","1002","1004","1006","1002","1004","902","904"]},"The memory  may be used to store any number of functional components that are executable on the processors . In many implementations, these functional components comprise instructions or programs that are executable by the processors  and that implement operational logic for performing the actions attributed above to the data providers. In addition, the memory  may store various types of data that are referenced by the executable components.","The memory  may store one or more service application(s)  and one or more APIs , which may be executed on the processors  to provide data or other services, as discussed above. For example, the APIs  may be called to provide, to authorized data consumers, requested data , such as nonsensitive data  and\/or tokens . In some implementations, the memory  may also store the access policies  as described above. Further, in some implementations, an instance of the security client  may be included for enforcing the access policies . Memory  may also store an operating system  that may manage and coordinate the various functions of the data provider computing device .","The communication interface(s)  may include one or more interfaces and hardware components for enabling communication with various other devices, such as the storage service computing devices, data consumer computing devices, and\/or user devices over communication links , . For example, communication interface(s)  may facilitate communication through one or more of the Internet, cable networks, cellular networks, wireless networks (e.g., Wi-Fi, cellular) and wired networks.","The service provider computing device  may further be equipped with various input\/output devices . Such devices may include a display and various user interface controls (e.g., buttons, joystick, keyboard, touch screen, etc.), audio speakers, connection ports and so forth.","Furthermore, this disclosure provides various example implementations, as described and as illustrated in the drawings. However, this disclosure is not limited to the implementations described and illustrated herein, but can extend to other implementations, as would be known or as would become known to those skilled in the art. Reference in the specification to \u201cone implementation,\u201d \u201cthis implementation,\u201d \u201cthese implementations\u201d or \u201csome implementations\u201d means that a particular feature, structure, or characteristic described is included in at least one implementation, and the appearances of these phrases in various places in the specification are not necessarily all referring to the same implementation.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described. Rather, the specific features and acts are disclosed as example forms of implementing the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The detailed description is set forth with reference to the accompanying figures. In the figures, the left-most digit(s) of a reference number identifies the figure in which the reference number first appears. The use of the same reference numbers in different figures indicates similar or identical items or features.",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIGS. 1A-1C"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
