---
title: Grid computing control system
abstract: Embodiments of the present invention provide a method for grid computing access control and a system thereof. A command is received from a user. The authorization of the user to execute the command is verified. A system parameter is monitored during execution of the command.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07421500&OS=07421500&RS=07421500
owner: Hewlett-Packard Development Company, L.P.
number: 07421500
owner_city: Houston
owner_country: US
publication_date: 20030110
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["Embodiments of the present invention relate to a grid computing environment, and more particularly to access control and account management of an interactive session.","Grid computing is a method of harnessing the power of many computational resources in a network. Grid computing is a distributed computer infrastructure involving large-scale sharing, innovative applications and\/or high performance processing and network bandwidth.","Referring to , a grid computing environment according to the conventional art is shown. As depicted in , the grid computing environment comprises a plurality of heterogeneous computing nodes distributed across multiple administrative domains. Multiple virtual organizations (e.g., VO X, VO Y, VO Z) exist over the heterogeneous nodes. A node (hereinafter also referred to as a computing resource) may be a part of several virtual organizations. An end-user (e.g., USER M, USER N, USER O) may need to access remote nodes either in the same administrative domain  or across domains , , and may desire interactive sessions with these nodes.","The interactivity may be either graphical or text-based. Exemplary interactive session may include, graphics visualization applications, engineering application like computer aided design or mechanical computer aided design (CAD\/MCAD), digital content creation, streaming media, video games, text editing, command line interactions, e-mail applications, and the like. The end-user should also be able to view the graphical and multimedia output of the submitted jobs and application through such graphical interactive sessions. The interaction of the enduser with the remote node may also involve the execution of both installed applications and user specified binaries.","Traditionally, grid computing has provided for the execution of batch jobs in the scientific and academic community. Batch execution on a grid computing environment requires authentication, authorization, resource access, resource discovery, and other services. In support of batch processing of jobs on a grid computing environment, protocols, services, application programming interfaces, and software development kits have been developed. The conventional method and system are not particularly suited for interactive grid computing sessions.","Access control to remote nodes is challenging in a grid interactive environment. Malicious users might take advantage of the interactivity by identifying and exploiting potential security loopholes. For example, malicious users may be able to submit unauthorized jobs to the remote machine. Session and account management is also challenging in a grid interactive environment. Without access control during an interactive session, an end-user may be permitted unrestricted access time to the remote node. Furthermore, quality of service and\/or other performance metrics are difficult to deliver in graphical interactive sessions.","A grid computing infrastructure that can hide the complexities of resource management from the user and that can provide secure graphical and multimedia interactive sessions would be an improvement over the conventional art.","Embodiments of the present invention provide a method for grid computing access control and a system thereof. In one embodiment, a command is received from a user. The authorization of the user to execute the command is verified. A system parameter is monitored during execution of the command.","Reference will now be made in detail to the embodiments of the invention, examples of which are illustrated in the accompanying drawings. While the invention will be described in conjunction with these embodiments, it will be understood that they are not intended to limit the invention to these embodiments. On the contrary, the invention is intended to cover alternatives, modifications and equivalents, which may be included within the spirit and scope of the invention as defined by the appended claims. Furthermore, in the following detailed description of the present invention, numerous specific details are set forth in order to provide a thorough understanding of the present invention. However, it is understood that the present invention may be practiced without these specific details. In other instances, well-known methods, procedures, components, and circuits have not been described in detail as not to unnecessarily obscure aspects of the present invention.","Embodiments of the present invention provide an access control system supporting graphical interactive sessions on a grid computing environment. In one embodiment, the access control system comprises a grid interactive shell and a grid monitoring system. The grid interactive shell restricts access permission to execute requested applications and commands submitted interactively by an end-user. The grid interactive shell may also check system resources for provisioning quality of service guarantees before allowing an application to run. The grid monitoring agents monitor the system and session parameters so as to enforce the access control policies during a graphical interactive session.","In another embodiment, the grid computing control system comprises a grid interactive shell, for receiving a request to execute a command and\/or application on a computing resource, a grid monitoring system, and a plurality of system policy files. The grid interactive shell is coupled to an operating system of the computing resource. The grid monitoring system is coupled to the interactive shell and the operating system of the computing resource. The plurality of system policy files are coupled to the grid interactive shell and the grid monitoring system.","In one embodiment, the grid interactive shell comprises a command interpreter, for parsing said command. An access control subsystem, for verifying a first plurality of system and session parameters, is also provided by the grid interactive shell. In one embodiment, the access control subsystem comprises one or more modules such as an executables and file access control module, a user binaries module, a session access control module, a quality of service access control module, and\/or the like.","In one embodiment, the grid monitoring system comprises a plurality of monitoring agents, for monitoring a second plurality of system and session parameters. The grid monitoring system also includes a log file, for recording a plurality of system and session data. In one embodiment, the grid monitoring system comprises one or more modules such as a session specific policy module, a quality of service guarantees module, an intrusion detection module, an intrusion prevention module, and\/or the like.","Referring now to , a block diagram of a system  providing access control for graphical interactive sessions in a grid computing environment, in accordance with one embodiment of the present invention, is shown. As depicted in , access control, between commands and\/or applications  and an operating system kernel , is provided by a grid interactive shell , system policy files  and a grid monitoring system .","In the present embodiment, the access control system  provides end-users an interactive shell called the grid interactive shell . The grid interactive shell  restricts access permission to execute requested applications and commands submitted interactively by an end-user. The grid interactive shell  may also allow end-users to log onto a remote node. The grid interactive shell  may also check system resource for provisioning quality of service guarantees before allowing an application to run.","The grid monitoring system  provides for actively monitoring the system and session parameters so as to enforce session, application, and user policies during execution of user requested commands and\/or applications. In an optional feature of the present embodiment, the grid monitoring system  also interfaces with the grid interactive shell , to provide relevant system and session information. The system and session information enables the grid interactive shell  to make access control decisions based on dynamic information gathered from the system.","The system policy files  are used by the grid interactive shell  and the grid monitoring system  to enforce the access control policies. The system policy files contain policy rules and data for each session and\/or user.","Referring now to , a block diagram of a grid interactive shell , in accordance with one embodiment of the present invention, is shown. As depicted in , the grid interactive shell  comprises a command interpreter  and an access control subsystem . The grid interactive shell  is an extension to a command shell. The grid interactive shell  accepts commands for execution. The grid interactive shell  also accepts requests to execute applications that are already installed on the remote machine by a system administrator. The grid interactive shell  may also accept request to execute applications that are not already installed on the remote machine and are user specified binary files. A request to execute an application may be given in the form of a command.","During an interactive session, an end-user submits a request to start a command or application  to the grid interactive shell . The command  is first parsed by the command interpreter , and then passed onto the access control subsystem . The access control subsystem  performs various access control checks. If one or more access control checks fail, a failure message is returned back to the user and the request to start the application and\/or command is denied. If the access control subsystem checks succeed, then the command and\/or application is started by the grid interactive shell and the graphical output, if any, can be viewed through a remote graphical display.","The access control subsystem  may comprise a plurality of modules such as: an executables and files access control module , a user binaries access control module , a session access control module , a quality of service access control module , and\/or the like. The executables and files access control module  verifies that the requested command and\/or application does not belong to a list of disallowed executables, is not invoked with a list of disallowed arguments and\/or options, and\/or does not access disallowed files and directories. The executables and files access control module  may also attempt to determine the files and directories that would be accessed, and compares them with the list in the system policy file . In an optional feature of the present embodiment, verification may be enforced through the system policy file , which enumerates the list of disallowed executable, disallowed executable arguments, disallowed files, and\/or disallowed directories for the user.","The user binaries access control module  is responsible for verifying a trusted signature for user specified binaries. A user binary is typically an application that the user wishes to load onto a grid resource. The module checks a user signature from an existing trusted service. Alternatively, if an existing trusted service is unavailable to the user, the present embodiment may provide a virtual machine environment for executing the user's binaries. The decision to allow a virtual machine environment may be controlled based on a system policy file  for the user.","The session access control model  verifies that the requested command and\/or application does not violate session specific policies, such as usage time for the session, maximum number of processes and\/or applications launched during the session, maximum number of socket connections allowed during the session, and\/or maximum disk quota used during the session. In an optional feature of the present embodiment, the grid interactive shell  may be provided with the current usage values for these parameters by the grid monitoring system . In another optional feature of the present embodiment, the policy and actions to be taken on violation of the session policies may be specified in another system policy file .","The quality of service access module  verifies that the requested command and\/or application would not violate quality of service guarantees for itself and\/or other running jobs. The module verifies that system resources are available to meet quality of service guarantees for the requested command and\/or application. If the requested application cannot be provided sufficient system resources, the quality of service access module  may deny access to execute the application and notify the user of the failure.","In an optional feature of the present embodiment, another system policy file  may be utilized to determine quality of service levels. A system policy file  may contain information about the acceptable quality of service guarantee levels for each application. Each such quality of service guarantee levels would translate to specific system resource requirements.","In another optional feature of the present embodiment, if an advance reservation is in place for the interactive session, the quality of service access module  may first verify if executing the requested command and\/or application with the quality of service guarantee requirement level, will exceed the advanced reservation limits. If so, or if there is no advance reservation in place, the quality of service access control module can interface with the grid monitoring system  to determine the system load and estimated system availability information. If the estimated available resources can accommodate the requested application, at an acceptable quality of service level, then the quality of service access module  would allow access to execute the application. The quality of service access module  may also provision and reserve the resources for the application, based on a policy decision.","Referring now to , a block diagram of a grid monitoring system , in accordance with one embodiment of the present invention, is shown. As depicted in , the grid monitoring system  comprises monitoring agents . The grid monitoring system  may also comprise a grid monitoring agents log file . The grid monitoring agents  may comprise a plurality of modules such as: a session specific policy module , a quality of service guarantees module , an intrusion detection module , an intrusion prevention module , and\/or the like. Some of the agents - may be associated with a specific session, while others may be system wide agents that monitor all the sessions started through the grid interactive shell . The agents - may also log their information in log files , as well as interface to the grid interactive shell , other peer monitoring agents , other monitoring systems (not shown) and\/or the like, as needed.","The session specific policy module  monitors session specific parameters. Session specific policies may include specific policies such as usage time for the session, number of processes spawned during the session, number of socket connections opened during the session, disk quota usage for the session, central processing unit usage for the session, and\/or the like. The session specific policy module  may utilize the system policy files  to determine acceptable limits. The system policy files  may for example define the maximum usage limits of these parameters. In an optional feature of the present embodiment, if the session specific policy module  observes a violation of the defined session policies, an appropriate action may be taken as defined in the system policy files .","The quality of service guarantees module  is responsible for monitoring and enforcing the quality of service guarantees for commands and\/or applications. The quality of service guarantees module  monitors parameters such as central processing unit utilization, network bandwidth available for each application, and\/or the like. In an optional feature of the present embodiment, the module  may also interface with the grid interactive shell quality of service module and respond to requests made thereby.","The intrusion detection module  monitors parameters such as internet protocol (IP) addresses of incoming connections, transmission control protocol (TCP) connection information, and\/or the like. In an optional feature of the present embodiment, the intrusion detection module  may also interface with peer agents on other grid enabled machines. Interfacing with peer agents allows the agents to share intrusion detection information, thus forming a distributed intrusion detection system for grid environments.","The intrusion prevention module  monitors parameters such as IP addresses of outgoing connections and\/or the like. The intrusion prevention module  may selectively block connections to certain IP addresses as a precautionary measure to prevent possible intrusion and spreading of worms\/viruses to other nodes. Hence, the intrusion prevention module  serves to prevent intrusion from hacked or malicious binary code started by the grid user on the remote node.","Upon a violation of policies, the monitoring agents  may send a signal to the grid interactive shell  whereby an appropriate action is taken. An exemplary default action may be to terminate all the processes started during the session and thereafter end the session.","Referring now to , a diagram of system policy file classifications, in accordance with one embodiment of the present invention, is shown. As depicted in , the system policy files may be classified into the following categories: session policy files, account policy files, application policy files, quality of service policy files, and\/or the like.","The system policy files are controlled by a system administrator. Furthermore, each of the policy files may be customized for a given user of the system. The session policy files contain policy information for each session. Exemplary policies are accounting and pricing policies, central processing and process usage policies, file system and disk quota usage policies. The policy files may also specify the default action to be taken on a violation of these policies.","The account policy files may contain policy information associated with account pools. There may be separate policies for controlled normal users and controlled super users. The operating system of a particular computing resource provides for normal users and super users. The access of the normal user and super user are each restricted by applicable access control policy files, resulting in controlled normal users and controlled super users. Exemplary policies may include a list of allowed executables and files for a given account pool that a controlled normal user or controlled super user may access on a given computing resource.","The application policy files contain policy information for applications that would be started by the grid environment. There may be two kinds of applications, installed applications and user specified binaries.","The quality of service policy files may contain information for quality of service metrics. An exemplary quality of service metric for graphical sessions to remote nodes may comprise a minimum frame rate. Each acceptable frame rate requirement may translate to specific quality of service requirements for the application and the remote display server on the remote node.","Referring now to , system policy files in accordance with an exemplary embodiment of the present invention is shown. As depicted in , the exemplary policy files include account policy files, a session policy file, and a quality of service policy file. The exemplary account policy files include a list of disallowed executable and a list of disallowed files. The exemplary session policy file includes a session max value and a default action. The exemplary quality of service policy file includes an acceptable frame rate for various application classes.","Referring now to , a flow diagram of a process performed by an access control system, in accordance with one embodiment of the present invention, is shown. As depicted in , the account management process begins with a user presenting credential to a middleware infrastructure, at step . The user's credentials are authenticated at step . Authentication may require that the end-user previously requests and obtains a grid certificate. An authentication manager mutually authenticates the user with various computing resources in the grid.","The grid environment uses dynamic and\/or template accounts to provide resource virtualization for the grid environment. The scalability and manageability of the system is enhanced if grid users are not required to have personal user accounts on each computing resource that are a part of the grid. Instead, a system administrator adds the user once to a directory maintained by the virtual organization in which the user has obtained membership. For organizational account, an entry may be added once for the organization in the directory. An organization account is an organization wide common account shared by all the member of the virtual organization.","Upon a successful authentication, an appropriate account pool for the user is determined, at step . Each pool is associated with a set of policy files, which are customized to the target users of the particular pool. As a result, a dynamic account for the requested session is established for the authorized user. The selection of a pool and the binding of the user to an available dynamic account from that pool may be based on the grid credentials presented.","Any node that participates in a given virtual account will check the user's membership with the directory, and authorize the use as a dynamic account if the user does not have a static account. The dynamic account is chosen from a pool of dynamic accounts maintained for the particular virtual organization. Each dynamic account is a full-fledged account created on the computing resource, but without a permanent real-world user associated with it. Unlike normal user accounts that belong permanently to their real-world owners, a dynamic account is bound to a user temporarily.","After the successful selection and binding of user to a dynamic account, the access control system and the monitoring agents are invoked. A window manager, terminal windows running the grid interactive shell, and other programs specified in the window manager's startup files are started as processes owned by the allocated dynamic account.","In a Linux implementation, a virtual network connection (VNC) server is started or remote display server. The grid monitoring system is also started simultaneously. A web browser of the end-user receives an hypertext markup language (HTML) code containing a VNC applet code snippet for the VNC server. Upon execution of the applet, a VNC connection is established between the end-user's web browser and the remote node. Alternatively, VNCviewer application may be utilized, if it is desired not to use the Java applet based approach. The VNC viewer is preinstalled on the end-user's machine. Upon a successful VNC authentication, the user is presented with a controlled KDE desktop environment containing only the applications and menus the user is allowed to access. The KDE desktop environment is pre-configured by a system administrator for each pool of accounts. Other desktops like gnome could also be provided and customized.","In a Linux implementation, the grid interactive shell may be implemented as an extension to the popular GNU bash shell for Linux. The shell source code is modified so as to include the access control modules. In a Windows implementation, the grid interactive shell may be implemented as an extension of Cygwin open source bash shell. The shell source code is modified to add in the access control modules. The system policy files are implemented as text files stored in the Windows File system. The access control modules read in the system policies from the files.","Upon establishment of a dynamic account for the session, requests for executing a command and\/or application submitted  by the user is parsed at step . The parsed requests are processed by the access control subsystem. The access control subsystem may include an executables and files access control module , which verifies that the requested command and\/or application does not belong to a list of disallowed executables, is not invoked with a list of disallowed arguments and\/or options, and does not access disallowed files and directories. If a request contains a user binary, a user binaries access control module  verifies the signature of user specified binaries. A session access control model  verifies that the requested command and\/or application does not violate session specific policies. A quality of service access module  verifies that the requested command and\/or application would not violate quality of service guarantees for itself and other running graphics jobs.","If the respective conditions are successfully verified, the process continues with the next step. If the condition is not verified, the user may be notified of the failure and the session terminated (, ).","At step , if the access control checks succeed, then the command and\/or application is started by the grid interactive shell and the graphical output, if any, can be viewed through the remote graphical display.","At steps , , , , the execution of the requested command and\/or application is monitored. Monitoring may include checking session specific parameters, checking and enforcing the quality of service guarantees, and detecting and\/or prevent intrusion. Such monitoring agents , , , , may be executed serially and\/or in parallel with each other and the command or application being monitored. If the monitoring agents , , ,  detect a violation, an appropriate action may be taken as defined in a system policy file. Alternatively, the user may be notified of the failure and the session terminated .","At step , the dynamic account is freed at the termination time agreed upon for the session. After the termination time, the grid monitoring agents may terminate the processes still running with the particular account as owner, and may delete all files owned by the account. The dynamic account is then returned to the pool, at step . Alternatively, the grid monitoring agents may archive the files created by the user on a server maintained by the virtual organization. Subsequent sessions for this user would retrieve the files from the archive. The selection of a pool and the binding of the user to an available dynamic account from that pool are based on the grid credentials presented by a user.","Embodiments of the present invention may be practiced as an extension of existing grid middleware infrastructure. Embodiments of the present invention advantageously provide a comprehensive access control methodology for graphical interactive sessions. The access control is in addition to those provided by the operating system. The access control system is modular and rule based allowing for fine grained access control and easy extensibility. The extensibility allows for adding and removing access control modules in the grid interactive shell, or monitoring agents in the grid monitoring system, as appropriate for a particular implementation.","The foregoing descriptions of specific embodiments of the present invention have been presented for purposes of illustration and description. They are not intended to be exhaustive or to limit the invention to the precise forms disclosed, and obviously many modifications and variations are possible in light of the above teaching. The embodiments were chosen and described in order to best explain the principles of the invention and its practical application, to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the Claims appended hereto and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated by way of example and not by way of limitation, in the figures of the accompanying drawings and in which like reference numerals refer to similar elements and in which:","Prior Art  shows a grid computing environment according to the conventional art.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIGS. 7A-7B"}]},"DETDESC":[{},{}]}
