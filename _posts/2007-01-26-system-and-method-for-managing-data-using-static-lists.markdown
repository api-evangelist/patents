---
title: System and method for managing data using static lists
abstract: A method and system are provided in which static lists facilitate arbitrary grouping of items of data independent of their locations and in ways that are meaningful to the user. A static list is a set of items defined by a root item, a direction, and the entry relationships with that root item in that direction. The static list also defines the properties that each entry relationship in the list is required to have. Verbs are provided to manage a static list. A verb is an action that may be performed on the items in the static list, and includes, among others, move, copy, add, remove, and delete. A view is provided to specify characteristics for displaying data from a static list, including visibility, order, and formatting, among other characteristics.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07711754&OS=07711754&RS=07711754
owner: Microsoft Corporation
number: 07711754
owner_city: Redmond
owner_country: US
publication_date: 20070126
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This application is a continuation of U.S. application Ser. No. 10\/693,666, filed on Oct. 24, 2003, entitled \u201cSYSTEM AND METHOD FOR MANAGING DATA USING STATIC LISTS\u201d and incorporated herein by reference.","In general, the present invention relates to data storage systems and, in particular, to systems and methods for managing data using static lists.","As the use of electronic media to store text, music, pictures, and other types of data grows and the restrictions on data storage capacities lessen, computer users find themselves faced with enormous numbers of files to manage. Conventional file systems, such as those based on a file allocation table, or FAT file system, can make management of files difficult. For example, the traditional directory access to files that is provided with conventional file systems assumes that the users wishes to maintain their files in a hierarchical directory tree. However, besides being location dependent, a hierarchical organization may not be the most advantageous way to access the files from the user's point of view.","In the context of the Windows\u00ae operating system user interface, one technique for making access to files easier is the shortcut. A shortcut that provides a link to a file may be created on the desktop or in a folder, and is a quick way to start a program or open a file or folder without having to go to its permanent location. But shortcuts may not be reliable since they are not updated to reflect changes in the location or status of the underlying file. For example, moving the file to a different directory results in an error when accessing the shortcut.","Another technique for making access to files easier is the playlist. Media players offer users playlists as a way to organize certain types of files for later playback. For example, in the Windows Media Player\u00ae, the playlist contains references to music files for playback through the media player in a designated order. But playlists suffer from the same drawback as shortcuts in that the references in the playlist are not updated to reflect changes in the location or status of the underlying files. If a music file is moved or deleted, the user must hunt through all of his or her playlists to update or remove the outdated references.","Both the shortcut and playlist model of accessing files are further limited by their inability to provide to the user with alternative ways to access items other than through another folder, or in a certain order.","To overcome the above-described problems, a system, method, and computer-accessible medium for managing data using static lists are provided. Static lists facilitate arbitrary grouping of items of data independent of their locations and in ways that are meaningful to the user.","In accordance with one aspect of the present invention, a static list is a set of items defined by a root item, a direction, and the entry relationships with that root item in that direction. The items in the set are determined by following the entry relationships with the root item. The direction is either to or from the root item, depending on whether the root item is the target or the source of the entry relationship. The static list also defines the properties that each entry relationship in the list is required to have.","In accordance with another aspect of the present invention, verbs are provided to manage a static list. A verb is an action that may be performed on the items in the static list, and includes, among others, move, copy, add, remove, and delete. The actions performed on the items include actions performed on the entry relationships between the item and the root item.","In accordance with a further aspect of the present invention, a view is provided to specify characteristics for displaying data from a static list, including visibility, order, and formatting, among other characteristics.","In accordance with yet another aspect of the present invention, using static lists, the user is able to propagate certain security attributes to the items in the list so that others may access them via the list. The user may also add other information to the list as metadata to enhance the usefulness of the list and the items contained therein.","In accordance with a still further aspect of the present invention, using static lists, each item in the list is automatically managed so that the references to the data are always valid, even when the location, status, or other characteristic of the data changes.","In accordance with yet other aspects of the present invention, a computer accessible medium for managing data using static lists is provided. The computer accessible medium comprises data and computer executable components to create and manage static lists. The data defines the static list and the items contained therein. The computer executable components are capable of performing actions generally consistent with the above-described method.","The following discussion is intended to provide a brief, general description of a computing system suitable for implementing various features of the invention. While the computing system will be described in the general context of a personal computer usable in a distributed computing environment, where complementary tasks are performed by remote computing devices linked together through a communication network, those skilled in the art will appreciate that the invention may be practiced with many other computer system configurations, including multiprocessor systems, minicomputers, mainframe computers, and the like. In addition to the more conventional computer systems described above, those skilled in the art will recognize that the invention may be practiced on other computing devices, including laptop computers, tablet computers, personal digital assistants (PDAs), and other devices upon which computer software or other digital content is installed.","While aspects of the invention may be described in terms of programs executed by applications in conjunction with a personal computer, those skilled in the art will recognize that those aspects also may be implemented in combination with other program modules. Generally, program modules include routines, programs, components, data structures, etc., which perform particular tasks or implement particular abstract data types.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 1","b":["150","130","120","150","130","120"]},"A relationship  is an association between two items. Each relationship refers to two items  called a source  or a target , depending on direction of the relationship . Source items  originate the relationship , and target items  receive the relationship .","An extension  is similar to an item , in that it contains properties  defined by a type . But extensions  are associated with exactly one item  and have different types .","The type  defines the structure of an item , relationship , or extension  by defining its properties. Since types  can be used with items, relationships, or extensions, they are commonly referred to as item types, relationship types, or extension types.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 2","FIG. 2"],"b":["220","220","210","150","230","220","150","230","104","102"]},"Any combination of an item , a relationship type , and a direction \/ determines a static set . For example, the set of authors of a document can be found by following author relationships from the document root item, as can the set of document authored by a person by following the same relationship in the other direction.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 3","FIGS. 5 and 6"],"b":["310","220","150","310","320","330","320","330","130","102","104","110","340","350","130","110","130","310","110","130"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 4","FIG. 5"],"b":["410","110","130","320","310","102","510","510","320","520","520","510","510","530","540","340","530","530","520","520","540","540","520","520"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 6","FIG. 5"],"b":["320","650","660","600","350","320","600","350","340","620","630","350","610","320","640"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 7","b":["710","720","720","720","720","720","720"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 8","FIG. 7","FIG. 5","FIG. 6","FIG. 5"],"b":["800","810","810","720","720","520","520","820","820","530","530"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 9","FIG. 8","FIG. 8"],"b":["900","910","810","910","920","920","130","110","910","130","340","320","150","720","720","810"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 10","FIGS. 8 and 9"],"b":["1010","1020","1020","1030","130","130","150","110","310","1010","310","130","1030","130"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 11","b":["1100","1102","1122","1124","1126","1122","1124","1128","1130","1132","1102","1128","1102","1134","1138","1140","1142","1144","1134","1138","1142","1126","1154","1156","1160","1102"]},"A number of program modules may be stored in the drives and RAM , including an operating system , one or more application programs , other program modules , such as the extensions and interfaces of the present invention, and program data , including the command item and insert location data of the present invention. A user may enter commands and information into the personal computer  through input devices such as a keyboard  or a mouse . Other input devices (not shown) may include a microphone, touch pad, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus, but may be connected by other interfaces (not shown), such as a game port or a universal serial bus (USB). A display device  is also connected to the system bus  via a display subsystem that typically includes a graphics display interface (not shown) and a code module, sometimes referred to as a display driver, to interface with the graphics display interface. While illustrated as a stand-alone device, the display device  could be integrated into the housing of the personal computer . Furthermore, in other computing systems suitable for implementing the invention, such as a PDA, the display could be overlaid with a touch-screen. In addition to the elements illustrated in , client devices also typically include other peripheral output devices (not shown), such as speakers or printers.","The personal computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a server, a router, a peer device, or other common network node, and typically includes many or all of the elements described relative to the personal computer . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . The LAN  and WAN  may be wired, wireless, or a combination thereof. Such networking environments are commonplace in offices, enterprise-wide computer networks, Intranets, and the Internet.","When used in a LAN networking environment, the personal computer  is connected to the LAN  through a network interface . When used in a WAN networking environment, the personal computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via the user input interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communication link between the computers may be used. In addition, the LAN  and WAN  may be used as a source of nonvolatile storage for the system.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 12","FIG. 7","FIG. 8","FIG. 3","FIG. 5"],"b":["1210","1220","520","720","520","720","710","810","340"]},"In one embodiment, processing continues at process block , where the user can elect to apply a previously defined View  to the list in order to display, at process block , the list contents in a user interface such as the user interface  depicted in .",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 13","b":["1310","1320","1330","1340","1350"]},{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 14","FIG. 13"],"b":["1410","1420","1430","1440"]},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 15","b":["1510","1520"]},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 16","b":["1610","1620"]},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 17","b":["1710","1720","104","1730"]},{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 18","FIG. 11"],"b":["1102","1810","1830","150","310","1830","1810","1102","1840","1840","150","1840","1102","1830"]},"The XML file  further permits the processing system  to store and track user-defined arbitrary metadata  to represent the properties  of the items  and the relationships . In such an implementation, the properties  are identified by their assigned globally unique identification (GUID) plus the property identification, also referred to in the Windows\u00ae operating system as the PROPERTYKEY. The metadata  may also be advantageously employed to propagate certain security features for the static list to the referenced items .",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 19","FIG. 11"],"b":["1900","1102","320","1910","1910","1920","150","110","1910"]},"In an example scenario, a user wants to produce a list of documents used to give presentations to clients about his company's new product, a brake pad. The documents include various Word\u00ae documents that describe the brake pad technology in depth, a PowerPoint\u00ae presentation, pictures of the brake pads, and even some video files shown the brake pads in action using an infrared camera. The user gives the presentation to different clients having different needs, cares, and wants. As a result, the user wishes to customize the presentation. Using static lists, the user can create different static lists, each with references to the same items, but in a different order (to tune the presentation to the audience). The user can also include different important properties. For example, for one client the sales price on all items is shown in the clear (and may even be specific to a client), whereas for other clients, the sales price is masked. In yet another example, the user may include properties that reveal the latest details of guarantees and awards they have won.","In the example scenario, the static lists are maintained automatically. When the user deletes one of the documents from one of the lists, the document is still available in all of the other lists where it is referenced. On the other hand, when the user deletes one of the documents from the folder where it resides, all lists referencing that document are updated to remove the reference so that the reference does not display as a dead link.","As a result of the foregoing, the user can advantageously create an unlimited number of static lists customized for a particular audience, and yet avoid the hassles of managing all of the references in those lists.","While the presently preferred embodiments of the invention have been illustrated and described, it will be appreciated that various changes may be made therein without departing from the spirit and scope of the invention. For example, it should be noted that either of the above-described implementations may be employed on a processing system  regardless of what type of file system is employed. It may be advantageous to represent a static list as an XML file , even on processing systems  capable of using containers , where interoperability with systems using more conventional file systems is desired. Moreover, in other embodiments, regardless of the type of file system employed, the items in the static list may be presented to the user using any user interface, including in a folder of the Windows\u00ae Shell user interface. As various operations are performed on the static list or the items in the list, the operations are either handled by the folder or delegated to a target of the referenced item, i.e., the target item.","While the preferred embodiment of the invention has been illustrated and described, it will be appreciated that various changes can be made therein without departing from the spirit and scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing aspects and many of the attendant advantages of this invention will become more readily appreciated as the same become better understood by reference to the following detailed description, when taken in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 9","FIG. 8"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 19"}]},"DETDESC":[{},{}]}
