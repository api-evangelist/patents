---
title: Using wildcards in semantic parsing
abstract: A method and apparatus perform semantic parsing by designating one or more words in an input text stream as wildcards. Under some embodiments, partially constructed parses formed from other words in the text stream are used to control when a later word will be identified as a wildcard. In particular, if a partial parse is expecting a semantic token that begins with a wildcard, the next word in the input text segment is designated as a wildcard term. If none of the existing partial parses are expecting a semantic token that begins with a wildcard, the next word is not designated as a wildcard
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07464032&OS=07464032&RS=07464032
owner: Microsoft Corporation
number: 07464032
owner_city: Redmond
owner_country: US
publication_date: 20050614
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS"],"p":["This application is a divisional of and claims priority from U.S. patent application Ser. No. 09\/934,224 filed on Aug. 21, 2001 and entitled METHOD AND APPARATUS FOR USING WILDCARDS IN SEMANTIC PARSING, which is hereby incorporated by reference.","In natural language understanding, a computer system receives a string of input text and attempts to identify a semantic meaning represented by the input text. In many systems, this can be achieved by parsing the input text into semantic tokens and combining the semantic tokens to form larger tokens until a single token spans the entire text segment.","To construct a semantic parser, the designer of the parser must identify the words and\/or semantic tokens that can be represented by a higher level semantic token. For the conversion from words to semantic tokens, this involves identifying the different words that a user could use to express the semantic idea represented by the semantic token.","In some situations, it is difficult or impossible to list all of the possible ways in which a user will express a semantic idea. For example, it is extremely difficult, if possible, to anticipate the ways in which a user will express the subject of a meeting. Because of this, most semantic parsers are underdefined in that they are not able to identify the meaning of possible text inputs from a user. Thus, a semantic parser is needed that is more robust in accepting unpredictable text.","A method and apparatus perform semantic parsing by designating one or more words in an input text stream as wildcards. Under some embodiments, partially constructed parses formed from other words in the text stream are used to control when a later word will be identified as a wildcard. In particular, if a partial parse is expecting a semantic token that begins with a wildcard, the next word in the input text segment is designated as a wildcard term. If none of the existing partial parses are expecting a semantic token that begins with a wildcard, the next word is not designated as a wildcard.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1","b":["100","100","100","100"]},"The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, telephony systems, distributed computing environments that include any of the above systems or devices, and the like.","The invention may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.","With reference to , an exemplary system for implementing the invention includes a general-purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus also known as Mezzanine bus.","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk  such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies.","A user may enter commands and information into the computer  through input devices such as a keyboard , a microphone , and a pointing device , such as a mouse, trackball or touch pad. Other input devices (not shown) may include a joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . In addition to the monitor, computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a hand-held device, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 2","b":["200","200","202","204","206","208","210"]},"Memory  is implemented as non-volatile electronic memory such as random access memory (RAM) with a battery back-up module (not shown) such that information stored in memory  is not lost when the general power to mobile device  is shut down. A portion of memory  is preferably allocated as addressable memory for program execution, while another portion of memory  is preferably used for storage, such as to simulate storage on a disk drive.","Memory  includes an operating system , application programs  as well as an object store . During operation, operating system  is preferably executed by processor  from memory . Operating system , in one preferred embodiment, is a WINDOWS\u00ae CE brand operating system commercially available from Microsoft Corporation. Operating system  is preferably designed for mobile devices, and implements database features that can be utilized by applications  through a set of exposed application programming interfaces and methods. The objects in object store  are maintained by applications  and operating system , at least partially in response to calls to the exposed application programming interfaces and methods.","Communication interface  represents numerous devices and technologies that allow mobile device  to send and receive information. The devices include wired and wireless modems, satellite receivers and broadcast tuners to name a few. Mobile device  can also be directly connected to a computer to exchange data therewith. In such cases, communication interface  can be an infrared transceiver or a serial or parallel communication connection, all of which are capable of transmitting streaming information.","Input\/output components  include a variety of input devices such as a touch-sensitive screen, buttons, rollers, and a microphone as well as a variety of output devices including an audio generator, a vibrating device, and a display. The devices listed above are by way of example and need not all be present on mobile device . In addition, other input\/output devices may be attached to or found with mobile device  within the scope of the present invention.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3","b":["300","300","303","302","304","304","306"]},"The word in the candidate list is \u201cpopped\u201d or removed from the candidate list by a rule engine . Rule engine  uses the popped word to access a semantic rule set  to identify semantic tokens and the related rules that are activated by the popped word. A semantic token is said to be activated by a word or other semantic token according to a related rule when the word or other semantic token is the first child node in the related rule for the semantic token. In a left-to-right parser, the first child node is the left-most child. For example, the semantic token <Meeting Property> is defined with the rule <ABOUT><SUBJECT>, where <ABOUT> is the left-most child node and <SUBJECT> is the right-most child node.","If the activated semantic token is only partially defined by the current word according to the related rule, a partial parse of the semantic token is formed and is added to chart . If the activated semantic token is fully defined by the current word, the semantic token is placed in candidate list .","The word from the candidate list is also compared to partial parses in chart  to determine if any of the partial parses can be extended by the popped word. Partial parses that can be extended but not completed by the word are extended to form new partial parses, and the new partial parses are placed in the chart with the previous forms of the partial parses. Partial parses that are extended and completed by the word result in new full parses, that are added to both chart  and candidate list .","Under many embodiments, before a semantic token is placed in candidate list , it is scored by a metric calculator  based on some scoring metric. Under one embodiment, the scoring metric is based on the number of words covered by the semantic token, the number of levels of semantic tokens formed beneath the semantic token, and the total number of semantic tokens beneath the semantic token. The score provided to a semantic token is used to order the tokens in candidate list  so that semantic tokens that are more likely to appear in the final parse are popped before other tokens.","Rule engine  removes the semantic tokens placed in the candidate list one at a time. For each semantic token, rule engine  determines if another semantic token is activated by the popped semantic token and whether any partial parses can be extended based on the popped semantic token. It then updates the chart and candidate list. This continues until all of the semantic tokens have been removed from the candidate list. At that point, the next word in the text segment is added to the candidate list.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 4"},"The method of  is described below with reference to the tables of ,  and , which show the items that are added to chart  after particular values have been popped from candidate list . In particular, ,  and  show the items added to the chart as the phrase \u201cSchedule a meeting to discuss the bonus structure at 4:00\u201d is parsed under the present invention. In ,  and , the items added to the chart are shown in a column labeled \u201cITEMS ADDED TO CHART CONTENTS\u201d and the last entity taken from the candidate list is shown in a column labeled \u201cPOPPED FROM CANDIDATE LIST\u201d. The parse shown in ,  and  utilizes a grammar that contains the following definitions:",{"@attributes":{"id":"p-0037","num":"0036"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<START> \u2192 <SCH.NEW MEETING>"]},{"entry":[{},"<START> \u2192 <EMAIL BODY>"]},{"entry":[{},"<SCH.NEW MEETING> \u2192 <SCH.MEETING>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<MEETING PROP.> <DATE>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<SCH.MEETING> \u2192 schedule a meeting"]},{"entry":[{},"<MEETING PROP.> \u2192 <ABOUT><SUBJECT>"]},{"entry":[{},"<DATE> \u2192 at <TIME>"]},{"entry":[{},"<TIME> \u2192 <NUMBER> o'clock"]},{"entry":[{},"<SUBJECT> \u2192 <WILDCARD>"]},{"entry":[{},"<ABOUT>\u2192 to discuss"]},{"entry":[{},"<LOCATION> \u2192 at Redmond"]},{"entry":[{},"<CANCEL MEETING> \u2192 meeting today is cancelled"]},{"entry":[{},"<EMAIL BODY> \u2192 <WILDCARD> <CLOSING>"]},{"entry":[{},"<NUMBER> \u2192 one | two | three | four | ......"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In step  of , the first word in the input text string is marked as activating a wildcard token if the start symbol of the grammar, <START>, can begin with a wildcard. As shown below, marking a word as activating a wildcard token causes the wildcard token to be introduced into the candidate list at the same time that the word is introduced into the candidate list.","At step , the first word in the text string is selected and at step  is placed into the candidate list. At step , the selected word is examined to determine if it is marked as activating a wildcard. If it is marked as activating a wildcard, a wildcard token is placed in the candidate list at step .","At step , the top entry in the candidate list is popped from the candidate list, and at step  tokens activated by the first entry, together with the related rule, are placed in the chart.","The effects of steps  and  on the first word in a text string can be seen in  where the word \u201cSchedule\u201d is popped from the candidate list, causing the token <SCH.MEETING> to be added to the chart. In , the <SCH.MEETING> token is shown along with the related rule to indicate how much of the token has been found in the text string. In particular, the notation a\u2022bc is used to indicate the extent to which the token has been parsed where a, b, and c are all children of the token and the \u201c\u2022\u201d is to the right of the last child of the token in the rule that has been popped from the candidate list. Thus, in entry  of , the <SCH.MEETING> token is set equal to \u201cschedule\u2022a meeting\u201d to indicate that the full semantic token is formed from the three terminal nodes \u201cschedule\u201d, \u201ca\u201d and \u201cmeeting\u201d and that thus far only the terminal node \u201cschedule\u201d has been found. If the dot is not at the end of the related rule for a token, the token forms a partial parse; if the dot is at the end of the related rule, the token is called a full parse.","Note that although only a single token is shown as being activated in entry  for the terminal word \u201cSchedule\u201d, those skilled in the art will recognize that in most systems, many more tokens would be activated for this word. The single token is shown in  to clarify and simplify the description of the present invention.","At step  of , the word popped from the candidate list is used to extend any existing parses in the chart. During the first pass through step , there are no partial parses in the chart, so there are no parses to extend at step .","At step , new partial parses are examined to determine if any of the partial parses are expecting a semantic token that can begin with a wildcard. If any of the new partial parses are expecting such a semantic token, the next word in the text string is marked as activating a wildcard.","Note that by only designating words as activating the wildcard semantic token when the word is the first word in the text string and the grammar start symbol <START> can begin with a wildcard; or when a partial parse is expecting a token that can begin with a wildcard, the present invention avoids activating the wildcard semantic token for every word in the input text string. This greatly simplifies the complexity of parsing the text since semantic tokens that begin with a wildcard do not have to be introduced into the chart for each word in the input text string. Instead, a top down filter is applied that only causes the <WILDCARD> semantic token to be introduced when a higher level semantic token is expecting a wildcard.","Under one embodiment, to determine whether a token can begin with a wildcard, an entry in a database for each token is examined. These entries are formed before parsing begins by first finding the lowest level semantic tokens (preterminals) that can begin with a wildcard and then finding each higher level token in which the lower level token appears as the first token in the higher level token. For example, for semantic tokens A, B, C, D, E, F, G, and H that have the following relationship:","H=FG","F=E","E=CD","C=<WILDCARD>AB","The semantic token C would first be marked as being able to begin with a wildcard, then semantic token E would be marked as being able to begin with a wildcard token based on the fact that it begins with semantic token C. Next, semantic token F would be designated as being able to begin with a wildcard since it could be formed directly from semantic token E. Lastly, semantic token H would be marked as being able to begin with wildcard since it can be formed from semantic tokens F and G.","Note that semantic tokens, even when marked as being able to begin with a wildcard, do not have to begin with a wildcard. For example, semantic token F above is defined as being activated by semantic token E. However, semantic token F may also be designated as being activated by semantic token I. If semantic token I does not begin with a wildcard, it is possible to have semantic token F activated even when a wildcard is not popped from the candidate list.","After step , the process of  continues at step , where the candidate list is examined to determine if it is empty. If it is not empty, the top entry in the candidate list is popped at step . In the example of , this return to step  causes the wildcard token to be popped from the candidate list and any tokens activated by a wildcard are placed in the chart at step .","Steps  and  are shown in  by entry , which shows that the semantic token <EMAIL BODY> has been placed in the chart based on the <WILDCARD> semantic token being removed from the candidate list. The selection of the wildcard token from the candidate list also activates a <SUBJECT> semantic token. However, the <SUBJECT> token is fully defined by the <WILDCARD> token. Because of this, the <SUBJECT> token is placed in both the chart and candidate list  as a fully parsed semantic token.","At step , the chart is examined to determine if any partial parses in the chart are expecting a wildcard. If they are expecting a wildcard, the partial parses are extended.","The process then continues at step  where the new partial parses are checked to see if any of them are expecting a token that can begin with a wildcard. The candidate list is then checked at step  to see if it is empty. Since the candidate list now contains the <SUBJECT> semantic token, the <SUBJECT> semantic token is popped from the candidate list at step  as shown in entry  of . At step  the tokens activated by the <SUBJECT> token are placed in the chart. Note that in , the <SUBJECT> token does not activate any higher level semantic tokens, so no items are added to the chart.","For the <SUBJECT> semantic token, there are no parses in the chart that can be extended by the semantic token at step . As such, the process of  continues at step . Since no new partial parses have been introduced, the process then continues at step  where the candidate list is examined to determine if it is empty. In the example of , after the <SUBJECT> semantic token has been removed, the list is empty and the process of  continues at step  where the next word in the input string is selected and is placed in the candidate list at step . The steps of  are then repeated until all of the words in the input text string have been processed.","In the example of , the next word selected from the input string is the word \u201ca\u201d. When this word is popped from the candidate list, as shown in entry , no additional semantic tokens are activated. However, the semantic token <SCH.MEETING> has its partial parse extended resulting in a new partial parse for <SCH. MEETING> being added to the chart with the dot moved to the right of the word \u201ca\u201d. Since the word \u201ca\u201d does not match the partial parse for <EMAIL BODY>, the parse for that token is not extended.","Under most embodiments of the present invention, partial parses are prohibited from being extended by complete constituents if the constituents are too far removed from the partial parse. In some embodiments, a constituent is too far removed if any words in the input text are skipped when extending the partial parse. In other embodiments, word skipping is allowed so that the system is more robust to grammatical noise in the input text. In the case of the partial parse for <EMAIL BODY>, the partial parse will not be extended further because \u201ca\u201d did not activate the <CLOSING> semantic token.","The next word taken from the input string and placed in the candidate list is the word \u201cmeeting\u201d. When this word is popped from the candidate list, it activates a semantic token <CANCEL MEETING> as shown by entry  of . The word \u201cmeeting\u201d also completes the parse of the semantic token <SCH.MEETING>, resulting in a new full parse for <SCH. MEETING> that is added to the chart and the candidate list.","The semantic token <SCH.MEETING> is then popped from the candidate list as shown by entry . This semantic token causes a higher level semantic token <SCH. NEW MEETING> (short for schedule new meeting) to be activated.","After the <SCH.MEETING> token has been popped from the candidate list, the candidate list is empty and the next word in the input text string is added to the candidate list. The next word is the word \u201cto\u201d which is popped from the candidate list in entry  of . As shown in entry , the word \u201cto\u201d activates the semantic token <ABOUT>.","In , the word \u201cdiscuss\u201d is the next word to be popped from candidate list. As shown in entry , the word \u201cdiscuss\u201d does not activate any new semantic tokens. However, the term \u201cdiscuss\u201d completes the partial parse for the semantic token <ABOUT>. Because of this, a full parse for the semantic token <ABOUT> is added to the candidate list and the chart.","As shown in entry  of , when the semantic token <ABOUT> is removed from the candidate list, it activates a higher level semantic token <MEETING PROP.> (short for \u201cmeeting property\u201d). This higher level semantic token has two children, the semantic token <ABOUT> and the semantic token <SUBJECT>. As shown above, the <SUBJECT> semantic token is activated by the <WILDCARD> semantic token. Because of this, the <MEETING PROP.> semantic token is expecting a semantic token <SUBJECT> that can begin with a <WILDCARD>. As such, at step , the next word in the input string is marked as activating a wildcard.","In the example of ,  and , the next word in the input string is the word \u201cthe\u201d. As the word \u201cthe\u201d is placed into the candidate list, it causes the <WILDCARD> semantic token to be generated and placed in the candidate list too. As shown by entry  of , the word \u201cthe\u201d does not cause any changes to the entries in the chart.","Entry  of  shows the items added to the chart contents when the <WILDCARD> semantic token for the word \u201cthe\u201d is taken from the candidate list. This semantic token activates the <EMAIL BODY> semantic token, which is placed in the chart. It also activates and completes the <SUBJECT> token causing a full parse for the <SUBJECT> semantic token to be placed in the candidate list and the chart.","In entry , the <SUBJECT> token is popped from the candidate list and is used to extend the <MEETING PROP.> semantic token to a full parse. This causes a full parse for the <MEETING PROP.> token to be added to the candidate list and the chart. The <SUBJECT> semantic token otherwise does not effect the contents of the chart.","In entry , the <MEETING PROP.> semantic token is popped from the candidate list. This causes the partial parse of the <SCH. NEW MEETING> semantic token to be extended by one child token, as indicated in  with the new partial parse that has the dot moved to the right of the <MEETING PROP.> token.","After the <MEETING PROP.> token is removed from the candidate list, the candidate list is once again empty, and the next term \u201cbonus\u201d in the text string can be added to the candidate list. The removal of the term \u201cbonus\u201d from the candidate list has no effect on the contents of the chart, as shown in entry .","The next word to be added and popped from the candidate list is the word \u201cstructure\u201d. As shown in entry  of , the word \u201cstructure\u201d does not activate any semantic tokens and therefore does not change the contents of the chart.","The next term to be taken from the input string is the word \u201cat\u201d. As shown in entry  of , when the word \u201cat\u201d is popped from the candidate list, it activates two semantic tokens: <DATE> and <LOCATION>.","The word \u201cfour\u201d is the next word to be placed in and taken from the candidate list, as shown in entry  of . The word \u201cfour\u201d causes the activation of the semantic token <NUMBER> and in fact completes the parse for the token <NUMBER>. As such, a full parse for the token <NUMBER> is added to the chart and the candidate list.","In entry , the semantic token <NUMBER> is popped from the candidate list. This causes the semantic token <TIME> to be activated.","After the semantic token <NUMBER> has been removed from the candidate list, the candidate list is once again empty and the next word \u201co'clock\u201d can be placed in and taken from the candidate list. When the word \u201co'clock\u201d is removed from the candidate list, it does not activate any new semantic tokens, but causes the semantic token <TIME> to be extended so that a full parse of that token is completed and placed into the candidate list and the chart. The semantic token <TIME> is popped from the candidate list as shown in entry . This semantic token completes the partial parse of the semantic token <DATE>. The full parse is then placed into the candidate list and the chart. The <DATE> semantic token is removed from the candidate list as shown by entry  and thereby completes the partial parse of the semantic token <SCH. NEW MEETING>. This causes a full parse of the semantic token <SCH. NEW MEETING> to be added to the candidate list and the chart. It is then popped from the candidate list as shown in entry  to form the full parse of the input text segment. Thus, the input text segment \u201cSchedule a meeting to discuss the bonus structure at 4:00 is converted into the semantic representation provided by the <SCH. NEW MEETING> token.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 8","FIGS. 5","FIG. 8","FIG. 8"],"b":["6","7"]},"Note that although not shown in the diagrams of ,  and , in most embodiments, its preferred that terms be used in a non-wildcard sense before being used in a wildcard sense. Thus, if a decision is to be made between two parses that span the same set of text, a parse that does not involve a wildcard will be preferred over a parse that utilizes a wildcard.","Although the present invention has been described with reference to preferred embodiments, workers skilled in the art will recognize that changes may be made in form and detail without departing from the spirit and scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIGS. 5","b":["6","7"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 8","FIGS. 5"],"b":["6","7"]}]},"DETDESC":[{},{}]}
