---
title: Controlling animation frame rate of applications
abstract: Many computer applications incorporate and support animation (e.g., interactive user interfaces). Unfortunately, it may be challenging for computer applications and rendering systems to render animation frames at a smooth and consistent rate while conserving system resources. Accordingly, a technique for controlling animation rendering frame rate of an application is disclosed herein. An animation rendering update interval of an animation timer may be adjusted based upon a rendering system state (e.g., a rate of compositing visual layouts from animation frames) of a rendering system and/or an application state (e.g., a rate at which an application renders frames) of an application. Adjusting the animation rendering update interval allows the animation timer to adjust the frequency of performing rendering callback notifications (work requests to an application to render animation frames) to an application based upon rendering system performance and application performance.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08593463&OS=08593463&RS=08593463
owner: Microsoft Corporation
number: 08593463
owner_city: Redmond
owner_country: US
publication_date: 20091027
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Many user interfaces and computer applications incorporate animation to provide a robust user experience. However, animating objects may be stressful on computing systems, which may cause slowdowns and jerky animation due to over consumption of system resources (e.g., a rendering system and\/or an application may be overburdened due to a lack of available resources needed to produce smooth rendering of animation frames). In order to balance a smooth consistent frame rate, current application programmer interfaces (APIs) may provide timing mechanisms that notify an application when it is time to render an animation frame. Unfortunately, current APIs may not take into account overall rendering system performance, application performance, and other system environmental factors when deciding how frequently to notify the application.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","Among other things, one or more systems and\/or techniques for controlling animation rendering frame rate of an application is disclosed herein. An animation timer may be configured to notify an application to render animation frames based upon an animation rendering update interval. That is, the animation timer may be configured to perform a rendering callback instruction to the application (e.g., a notification to the application that it is time to render an animation frame) upon lapse of the animation rendering update interval (e.g., a \u201ctick\u201d of the animation timer). It may be appreciated that the animation timer may be configured to operate over a period of time spanning multiple animation rendering update intervals. Thus, the animation timer may perform multiple rendering callback instructions to the application to produce a sequence of animation frames that a rendering system may display over time as an animation on a monitor.","The animation timer takes into account a rendering system state, an application state, and\/or a computing environment state when determining and adjusting the animation rendering update interval. It may be appreciated that the animation rendering update interval may be a time period that the animation timer waits between sending notifications to the application of when it is time for the application to render an animation frame. The animation rendering update interval associated with the application may be adjusted based upon performance of the rendering system (e.g., composition rate of rendered animation frames into visual layouts), performance of the application (e.g., actual frame rendering rate), and\/or other computer environment factors (e.g., is battery or A\/C used for power).","In one example, if the rendering system is overstressed (e.g., a drop in frame rate is detected), then the animation rendering update interval may be increased to reduce the frequency of rendering callback instructions to the application, thus slowing down the rate at which the application creates and sends rendered animation frames to the rendering system, which may reduce stress on the rendering system. In another example, if the application is overstressed (e.g., the application is creating frames slower than excepted), then the animation rendering update interval may be increased to reduce the frequency of rendering callback instructions to the application, thus reducing the stress placed upon the application by the rendering callback instructions of the animation timer. In yet another example, the animation timer may notify the application that it is rendering animation frames slower than a minimum acceptable frame rate and may instruct the application to reduce its current rendering load (e.g., the application reduces the amount of drawing on the frame). It may be appreciated that the animation timer may also decide whether to temporarily shut off animation until the application and\/or the rendering system are less burdened and capable of efficiently handling the rendering tasks.","To the accomplishment of the foregoing and related ends, the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects, advantages, and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.","The claimed subject matter is now described with reference to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident, however, that the claimed subject matter may be practiced without these specific details. In other instances, structures and devices are illustrated in block diagram form in order to facilitate describing the claimed subject matter.","Many application program interfaces (APIs) utilize animation timing mechanisms to facilitate animation of objects. An animation timer may be implemented along with one or more applications and rendering systems to accomplish animation. For example, one or more applications may initialize an animation timer to provide notifications of when the respective applications are to render animation frames (e.g., frames for a user interface). Upon notification (e.g., a rendering callback instruction) from the animation timer, one or more applications may generate a rendered animation frame. A rendering system may capture the rendered animation frames and store them within one or more buffers associated with the one or more applications. The rendering system may composite together rendered animation frames from the one or more buffers into a visual layout and output the visual layout to a display device. For example, a rendering system may composite a first rendered frame of a first application and a second rendered frame of a second application to generate a visual layout. The rendering system may arrange a portion of the first rendered frame behind a portion of the second rendered frame because the second application is in the foreground, while the first application is in the background.","When animating objects, it may be challenging to provide animations that are rendered at a frame rate that is smooth and consistent. It may also be difficult to mitigate burdensome consumption of system resources used for rendering while the system is already busy. In one example, a rendering system may experience slow down (e.g., a drop in composition rate) due to a lack of system resources. In another example, an application may experience slow down (e.g., a decrease in frame rate per second\u2014fps) due to, for example, rendering of complex and detailed frames. Current animation timers do not take into account various factors when determining how frequently the animation timer notifies the application to create a rendered animation frame. For example, an application may experience significant slowdown during execution, yet many animation timers may continue at a burdensome rate to notify the application to create rendered animation frames (e.g., the application is already overburdened, yet the animation timer continuously overloads the application with requests to perform additional work to render animation frames), thus increasing the likelihood of slow and\/or jerky animation.","Accordingly, one or more techniques and\/or systems for controlling animation rendering frame rate of an application is provided herein. An animation timer may be configured to take into account rendering system performance (e.g., composition rate), application performance (e.g., actual frame rendering rate), and\/or other computer environment factors (e.g., is battery or A\/C power currently used) when determining an animation rendering update interval (e.g., a time period the animation timer waits before performing a rendering callback instruction to notify the application of when it is time to render an animation frame). This allows the animation timer to increase and\/or decrease the frequency of performing rendering callback instructions based upon performance of the rendering system, the application, and\/or other computer environment factors. This allows the animation timer to fine tune how often the application is notified to render animation frames, thus increasing or decreasing the stress placed upon the application and\/or the rendering system.","One embodiment of controlling animation rendering frame rate of an application is illustrated by an exemplary method  in . At , the method begins. At , a rendering system state of a rendering system and\/or an application state of an application are determined. The rendering system state, for example, may be determined based upon a composition rate of the rendering system (e.g., a rate at which visual layouts are created from one or more rendered animation frames stored in one or more buffers associated with particular applications). The application state, for example, may be determined based upon an average frame rate at which the application is rendering. It may be appreciated that additional factors, such as a computer environment state may be taken into account (e.g., a computer power supply setting, a hardware component state\u2014utilization of various hardware based timers, a multimedia component state\u2014utilization of various multimedia timers, etc.).","At , an animation rendering update interval associated with the application may be adjusted based upon the rendering system state and\/or the application state. In one example, the animation rendering update interval may be increased because of a performance slowdown of the rendering system as indicated by the rendering system state and\/or because of a performance slowdown of the application as indicated by the application state. Increasing the animation rendering update interval decreases the frequency at which rendering callback instructions are performed, thus reducing the load upon the application (e.g., the application is not overloaded with notifications to render animation frames) and\/or reducing the load upon the rendering system (e.g., the application creates and sends rendered animation frames to the rendering system less frequently). If the rendering system state indicates undesirable composition rate, then there is no point for the application to render animation frames faster than the rendering system is compositing the rendered animation frames (e.g., frames may be skipped because of the slower frame rendering rate of the rendering system).","In another example, the animation rendering update interval may be decreased to increase the frequency of rendering callback instructions because additional resources and\/or processing power may be available within the rendering system as indicated by the rendering system state and\/or the application as indicated by the application state. Decreasing the animation rendering update interval increases the frequency at which rendering callback instructions are performed (e.g., the animation timer waits shorter periods of time between performing rendering call back instructions), thus increasing animation performance by instructing the application to render animation frames at a higher frequency. At , the method ends.","It may be appreciated, that a rendering callback instruction may be performed when the animation rendering update interval lapses. The rendering callback instruction may instruct the application to render an animation frame. The rendered animation frame may be stored in a buffer. The rendering system may composite together rendered animation frames from one or more buffers to create a visual layout.","A second embodiment of controlling animation rendering frame rate of an application is illustrated by an exemplary method  in . At , the method begins. At , an exposed API is queried to determine a composition rate of a rendering system. For example, the rendering system may expose a service from which a composition rate of the rendering system may be determined. At , an application may be monitored to determine an average rendering animation frame rate. At , a computer environment state may be determined. For example, the computer environment state may be based upon whether a computing environment executing the rendering system and the application is utilizing battery or A\/C power. This may indicate whether the computing environment may have additional computing power available for rendering animation frames at a higher rate. Additionally, the computer environment state may be based upon whether other multimedia and\/or hardware functionality and\/or timers are available to facilitate animation frame rate rendering.","At , an animation rendering update interval of the application may be adjusted based upon the composition rate, the average rendering frame rate, and\/or the computer environment state. For example, the animation rendering update interval may be increased or decreased to adjust the frequency at which rendering callback instructions are performed, thus dynamically adjusting the rendering load upon the application and\/or the rendering system to improve animation (e.g., create a smoother animation experience for users) based upon the rendering system, the application, and\/or the computer environment performance.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3","b":["300","300","302","1","308","2","310","316","318","302","1","308","2","310","302","1","304","1","308","302","2","306","2","310","302","302","100","200","1","308","2","310"]},"Application ()  may be notified by the rendering system  with the rendering callback instruction ()  to render an animation frame (e.g., a car image). The rendered animation frame may be added  to a buffer associated with application () . Application ()  may be notified by the rendering system  with the rendering callback instruction ()  to render an animation frame (e.g., a phone image and \u201cItems for sale\u201d text). The rendered animation frame may be added  to a buffer associated with application () . The rendering system  may be configured to read rendered animation frames (e.g., the added  rendered animation frame of application ()  and the added  rendered animation frame of application () ) from one or more buffers. The rendering system  may be configured to composite the rendered animation frames into a visual layout. For example, the phone car image frame may be composited with the phone image and \u201citems for sale\u201d frame to create a visual layout that may be displayed upon the monitor . It may be appreciated that the example system  of  is just one example of how a rendering system and an application may (inter)operate.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4","b":["400","414","414","402","412","412"]},"The system  may comprise the animation timer  configured to control animation rendering frame rate of one or more applications (e.g., a first application, a second application, the application ). The animation timer  may comprise a sleep component , a monitoring component , a rendering throttle component , and\/or an event component . The monitoring component  may be configured to determine a rendering system state  of the rendering system  and\/or an application state  of the application . The rendering system state , for example, may be a composition rate of the rendering system  (e.g., the rate at which the rendering system  composites rendered animation frames of applications into a visual layout). It may be appreciated that the rendering system state  may comprise factors other than the composition rate. For example, the rendering system state  may be based upon resource availability to rendering system, rendering system overall execution performance, rendering system load, and\/or other factors associated with rendering system performance. The application state , for example, may be the rate at which the application  is rendering animation frames. It may be appreciated that the application state  may comprise other factors than the rendering animation frame rate. For example, other performance indicators of the application's execution state may be taken into account, such as, raw CPU usage (e.g. a spreadsheet calculating formulas it comprises whilst it animates a progress bar graphic), and\/or I\/O activity (e.g., network or disk data transfer).","The monitoring component  may also be configured to determine a computing environment state. The computing environment state may, for example, comprise a computer power supply setting, a hardware component state (e.g., do other hardware timers exist), a multimedia component state (e.g., do other multimedia timers exist), and\/or other environmental factors that may affect animation rendering frame rate (e.g., existence of other resources that may be utilized in enhancing animation rendering frame rate). It may be appreciated that the rendering throttle component  may adjust an animation rendering update interval  based upon the computing environment state.","The rendering throttle component  may be configured to adjust the animation rendering update interval  based upon the rendering system state  and\/or the application state . It may be appreciated that the animation rendering update interval  is a period of time in which the animation timer  waits between performing rendering callback instructions  (e.g., instructions notifying the application  that it is time to render an animation frame) to the application . In one example, the rendering throttle component  may increase the animation rendering update interval  to decrease a frequency of performing rendering callback instructions  to the application  based upon the rendering system state  and\/or the application state . That is, if the performance of the rendering system  and\/or the performance of the application  are below a desired threshold, then the rendering throttle component  may increase the time between notifications to the application  to render animation frames, thus reducing the load upon the application  and\/or the rendering system .","In another example, the animation rendering update interval  may be decreased to increase a frequency of performing rendering callback instructions  to the application  based upon the rendering system state  and\/or the application state . This allows the animation timer  to increase a frame rendering rate of the application  because, for example, the application  and\/or the rendering system  have the performance capacity to handle the increased frame rendering rate.","The event component  may be configured to notify  the application  of a pre-update event opportunity before the animation timer  changes state and\/or a post-update event opportunity after the animation timer  changes state (e.g., the animation rendering update interval expires whereupon the animation timer performs a rendering callback instruction, thus changing state). This allows the application  to perform pre-update and\/or post-update processing, such as, setting bit flags, execute application specific code, trigger a particular layout based upon a change occurring during the animation state change.","The sleep component  may be configured to receive a disable signal and\/or idle signal  from the rendering system . The sleep component  may instruct the animation timer  to enter a sleep mode until receiving a wakeup signal from the application . This allows resources to be conserved because the animation timer  may enter a sleep mode when the application is not rendering animation frames, for example.","It may be appreciated that the animation timer  may be abstracted from the rendering system  and\/or the application  (e.g., a stand alone platformized component providing an interface to interact with a variety of clients), thus allowing various clients to utilize the animation timer . It may be appreciated that the animation timer  may be configured to adjust its own operation in order to increase overall computing system efficiency. In one example, resource usage of the animation timer  may be adjusted based upon available system resources (e.g., increase or decrease resource utilization and processing, utilize alternative system resources). In another example, the precision of the animation timer may be adjusted based upon the application state  (e.g., a less precise timing technique may be utilized for applications that do not care about high precision timing).",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 5","b":["502","516","508","502","504","506","504","512","514","506","516","516","502","518","510","510"]},"In one example, the monitoring component  may determine that the application  is rendering animation frames at 60 fps, the normal application state . The monitoring component  may determine that the rendering system  has a compositing rate of 30 fps, the overloaded rendering system state , which indicates that the rendering system's performance may be below a desired performance level due to, for example, a lack of execution resources and\/or an overload of work to perform.","The rendering throttle component  may increase the animation rendering update interval  (e.g., increasing the time the animation timer  waits between notifying the application  to render an animation frame), which decreases a frequency at which rendering callback instructions to the application are performed. The decrease in frequency of performing rendering callback instructions  in effect decreases the rate at which the application  generates animation frames for the rendering system, thus decreasing the load upon the rendering system  because of the slow down of new animation frames to composite into a visual layout. If the rendering throttle component  did not slow down the rate at which the application  rendered new animation frames, many animation frames (e.g., every other animation frame) may be lost due to the overloaded rendering system compositing visual layouts at half the rate the application was rendering animation frames, thus producing a less than desirable visual experience for a user.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 6","b":["602","616","610","602","604","606","604","612","614","606","616","616","602","618","610","610"]},"In one example, the monitoring component  may determine that the application  is rendering animation frames at 14 fps, the overloaded application state , thus indicating the application's performance may be below a desired level due to, for example, a lack of execution resources and\/or an overload of work to perform. The monitoring component  may determine that the rendering system  has a compositing rate of 60 fps, the normal rendering system state . Because the application state is overloaded, the rendering throttle component  may increase the animation rendering update interval  (e.g., increasing the time the animation timer  waits between notifying the application  to render an animation frame), which decreases a frequency at which rendering callback instructions to the application  are performed. Decreasing the frequency of performing rendering callback instructions  may reduce the burden placed upon the application  because the animation timer  requests the application  to render animation frames less frequently (e.g., decrease the amount of requests to the application to perform rendering work).",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 7","b":["702","716","710","702","704","706","704","712","708","714","710","704","718","718","710","706","716","718"]},"In one example, the monitoring component  may determine the overloaded application state  of the application . The monitoring component  may derive an application rendering rate based upon the overloaded application state . The monitoring component  may compare the application rendering rate with the minimum acceptable frame rate  to determine whether the application rendering rate falls below the minimum acceptable frame rate . If the application rendering rate falls below the minimum acceptable frame rate , then the rendering throttle component  may notify the application  to reduce the current rendering load . For example, the application  may be rendering animation frames comprising large amount of rendering data. The rendering throttle component  may notify the application to reduce the quality of the rendering animation frames to increase the animation rendering rate (e.g., a lower quality animation frame may take less time to generate than a higher quality animation frame, thus increasing the animation rendering rate).",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 8","b":["802","802","804","806","808","804","814","810","810","814","804","812","802","810","812","804","816","802","812"]},"Still another embodiment involves a computer-readable medium comprising processor-executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer-readable medium that may be devised in these ways is illustrated in , wherein the implementation  comprises a computer-readable medium  (e.g., a CD-R, DVD-R, or a platter of a hard disk drive), on which is encoded computer-readable data . This computer-readable data  in turn comprises a set of computer instructions  configured to operate according to one or more of the principles set forth herein. In one such embodiment , the processor-executable instructions  may be configured to perform a method , such as the exemplary method  of  and\/or the exemplary method  of , for example. That is, the processor-executable instructions  may implement the exemplary methods  and\/or  as an application program interface (API) which may be executed via one or more processors. In another such embodiment, the processor-executable instructions  may be configured to implement a system, such as the exemplary system  of  and\/or the exemplary system  of , for example. Many such computer-readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims.","As used in this application, the terms \u201ccomponent,\u201d \u201cmodule,\u201d \u201csystem\u201d, \u201cinterface\u201d, and the like are generally intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a controller and the controller can be a component. One or more components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","Furthermore, the claimed subject matter may be implemented as a method, apparatus, or article of manufacture using standard programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof to control a computer to implement the disclosed subject matter. The term \u201carticle of manufacture\u201d as used herein is intended to encompass a computer program accessible from any computer-readable device, carrier, or media. Of course, those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 10","FIG. 10"]},"Although not required, embodiments are described in the general context of \u201ccomputer readable instructions\u201d being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media (discussed below). Computer readable instructions may be implemented as program modules, such as functions, objects, Application Programming Interfaces (APIs), data structures, and the like, that perform particular tasks or implement particular abstract data types. Typically, the functionality of the computer readable instructions may be combined or distributed as desired in various environments.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 10","FIG. 10"],"b":["1010","1012","1012","1016","1018","1018","1014"]},"In other embodiments, device  may include additional features and\/or functionality. For example, device  may also include additional storage (e.g., removable and\/or non-removable) including, but not limited to, magnetic storage, optical storage, and the like. Such additional storage is illustrated in  by storage . In one embodiment, computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage  may also store other computer readable instructions to implement an operating system, an application program, and the like. Computer readable instructions may be loaded in memory  for execution by processing unit , for example.","The term \u201ccomputer readable media\u201d as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory  and storage  are examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, Digital Versatile Disks (DVDs) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .","Device  may also include communication connection(s)  that allows device  to communicate with other devices. Communication connection(s)  may include, but is not limited to, a modem, a Network Interface Card (NIC), an integrated network interface, a radio frequency transmitter\/receiver, an infrared port, a USB connection, or other interfaces for connecting computing device  to other computing devices. Communication connection(s)  may include a wired connection or a wireless connection. Communication connection(s)  may transmit and\/or receive communication media.","The term \u201ccomputer readable media\u201d may include communication media. Communication media typically embodies computer readable instructions or other data in a \u201cmodulated data signal\u201d such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.","Device  may include input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, infrared cameras, video input devices, and\/or any other input device. Output device(s)  such as one or more displays, speakers, printers, and\/or any other output device may also be included in device . Input device(s)  and output device(s)  may be connected to device  via a wired connection, wireless connection, or any combination thereof. In one embodiment, an input device or an output device from another computing device may be used as input device(s)  or output device(s)  for computing device .","Components of computing device  may be connected by various interconnects, such as a bus. Such interconnects may include a Peripheral Component Interconnect (PCI), such as PCI Express, a Universal Serial Bus (USB), firewire (IEEE 1394), an optical bus structure, and the like. In another embodiment, components of computing device  may be interconnected by a network. For example, memory  may be comprised of multiple physical memory units located in different physical locations interconnected by a network.","Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example, a computing device  accessible via a network  may store computer readable instructions to implement one or more embodiments provided herein. Computing device  may access computing device  and download a part or all of the computer readable instructions for execution. Alternatively, computing device  may download pieces of the computer readable instructions, as needed, or some instructions may be executed at computing device  and some at computing device .","Various operations of embodiments are provided herein. In one embodiment, one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media, which if executed by a computing device, will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further, it will be understood that not all operations are necessarily present in each embodiment provided herein.","Moreover, the word \u201cexemplary\u201d is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as \u201cexemplary\u201d is not necessarily to be construed as advantageous over other aspects or designs. Rather, use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application, the term \u201cor\u201d is intended to mean an inclusive \u201cor\u201d rather than an exclusive \u201cor\u201d. That is, unless specified otherwise, or clear from context, \u201cX employs A or B\u201d is intended to mean any of the natural inclusive permutations. That is, if X employs A; X employs B; or X employs both A and B, then \u201cX employs A or B\u201d is satisfied under any of the foregoing instances. In addition, the articles \u201ca\u201d and \u201can\u201d as used in this application and the appended claims may generally be construed to mean \u201cone or more\u201d unless specified otherwise or clear from context to be directed to a singular form.","Also, although the disclosure has been shown and described with respect to one or more implementations, equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components (e.g., elements, resources, etc.), the terms used to describe such components are intended to correspond, unless otherwise indicated, to any component which performs the specified function of the described component (e.g., that is functionally equivalent), even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition, while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations, such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore, to the extent that the terms \u201cincludes\u201d, \u201chaving\u201d, \u201chas\u201d, \u201cwith\u201d, or variants thereof are used in either the detailed description or the claims, such terms are intended to be inclusive in a manner similar to the term \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
