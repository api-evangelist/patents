---
title: Policy enforcement in a virtualized environment
abstract: Policy enforcement in an environment that includes virtualized systems is disclosed. Virtual machine information associated with a first virtual machine instance executing on a host machine is received. The information can be received from a variety of sources, including an agent, a log server, and a management infrastructure associated with the host machine. A policy is applied based at least in part on the received virtual machine information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09619260&OS=09619260&RS=09619260
owner: Palo Alto Networks, Inc.
number: 09619260
owner_city: Santa Clara
owner_country: US
publication_date: 20150402
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO OTHER APPLICATIONS","BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This application is a continuation of co-pending U.S. patent application Ser. No. 13\/528,748, entitled POLICY ENFORCEMENT IN A VIRTUALIZED ENVIRONMENT filed Jun. 20, 2012 which is incorporated herein by reference for all purposes.","Increasingly, businesses and other entities are using virtualized computing resources (whether running on purchased or leased computer hardware). Virtualized environments are generally very dynamic\u2014virtual machines can easily be spun up, shut down, and moved. A given physical machine may support tens or hundreds of virtual machines and if that machine fails, the images running on the physical machine can be rapidly migrated to one or multiple other physical machines. Unfortunately, virtualized environments can pose problems for firewall rules which tend to rely on static information, such as static IP addresses.","The invention can be implemented in numerous ways, including as a process; an apparatus; a system; a composition of matter; a computer program product embodied on a computer readable storage medium; and\/or a processor, such as a processor configured to execute instructions stored on and\/or provided by a memory coupled to the processor. In this specification, these implementations, or any other form that the invention may take, may be referred to as techniques. In general, the order of the steps of disclosed processes may be altered within the scope of the invention. Unless stated otherwise, a component such as a processor or a memory described as being configured to perform a task may be implemented as a general component that is temporarily configured to perform the task at a given time or a specific component that is manufactured to perform the task. As used herein, the term \u2018processor\u2019 refers to one or more devices, circuits, and\/or processing cores configured to process data, such as computer program instructions.","A detailed description of one or more embodiments of the invention is provided below along with accompanying figures that illustrate the principles of the invention. The invention is described in connection with such embodiments, but the invention is not limited to any embodiment. The scope of the invention is limited only by the claims and the invention encompasses numerous alternatives, modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the invention. These details are provided for the purpose of example and the invention may be practiced according to the claims without some or all of these specific details. For the purpose of clarity, technical material that is known in the technical fields related to the invention has not been described in detail so that the invention is not unnecessarily obscured.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":["126","110","126","112","116","106","108"]},"Communications between virtual servers - and resources outside of enterprise network  (e.g., communications received from laptop  via network ) pass through data appliance , which is placed at the perimeter of enterprise network . Such communications may take place using any appropriate communication protocol such as Hypertext Transfer Protocol (HTTP), Secure Sockets Layer (SSL), and File Transfer Protocol (FTP). In the example shown in , data appliance  is a firewall and is configured to enforce policies (also referred to herein as \u201crules\u201d) with respect to the communications it receives. Other types of devices can also be configured to provide the functionality described herein as being performed by data appliance . Examples include routers, gateways, intrusion detection systems, intrusion prevention systems, and other appropriate devices.","Other network topologies can also be used in conjunction with the techniques described herein. Examples of such topologies include networks having multiple data appliances; networks where at least some of the network nodes are located at a hosting company's data center; and networks in which data appliance  is configured to enforce policies with respect to traffic that stays within enterprise network  instead of or in addition to outside traffic.","As explained above, data appliance  is configured to enforce various policies. Such policies can apply to particular devices (e.g., virtual server ), particular users, and\/or groups (e.g., of devices or users). As one example, a policy can specify that access to virtual server  via HTTPS is permitted by anyone (including an arbitrary member of the public using laptop ). As another example, a policy can specify that access to virtual server  via SSH is permitted by members of the Engineering group, and denied to anyone else. As yet another example, a policy can specify that virtual machines that are running the Ubuntu Linux operating system are allowed to communicate with known-malicious website  (e.g., because they are hardened research images), but no other nodes in network  are allowed to do so. Other types of actions can also be specified, such as policies requiring that certain types of access be logged. Other types of policies can also be specified, as applicable, such as quality of service policies, instead of or in addition to access\/security policies.","Also included in the environment shown in  are agent  and log server , both of which are configured to collect virtual machine information (hereinafter \u201cVM information\u201d) from hosts, such as host , and to provide the information to data appliance . The virtual machine information can be collected in a variety of ways. For example, agent  can us an application programming interface (API) provided by the host operating system on host  to collect information about the virtual machines running on it (e.g., virtual machine ). As another example, suppose host  lacks such an API. Host  can be configured to log information (including information pertaining to its virtual machines  and ) to a log server . Log server  can be configured to provide the information to agent , which in turn provides the information to data appliance , or log server  can provide the information directly to data appliance  directly, as applicable. As will be described in more detail below, the collected VM information can be used by data appliance  to enforce policies.","As shown in , agent  is physically separate from data appliance . The functionality of agent  can also be incorporated into data appliance  (or another device) and standalone agent  (and\/or log server ) omitted as applicable.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 2","FIG. 2"],"b":["202","206","112","116","120","102"]},"Included in a given record, such as record , is various information pertaining to the virtual machine instance, such as the operating system (), IPv4\/IPv6 addresses (, ), and an identifier of the host (). As will be described in more detail below, the information included in the records can be used by data appliance  to enforce policies.","The records can also be used to create dynamic groups (represented as \u201cdynamic address objects\u201d). Two examples of dynamic group definitions are depicted in . The first dynamic group () will include any virtual machine images on the portion of the enterprise network assigned to the Engineering department (). The network (specifically, network=Engineering) is used as a filter. The second dynamic group () will include any virtual machine images running on host machine  (). Multiple filters can also be combined, and Boolean or other operators can be employed to form more complex dynamic groups, such as a group that includes those virtual machines running a specific version of Windows 7 that are also either (a) running on host , and\/or (b) are in the Sales network. Dynamic group definitions are configurable (e.g., by an administrator) and stored () in some embodiments on data appliance . In various embodiments, records, such as record , are augmented through the use of tags. For example, an administrator can specify a tag of \u201cWindows\u201d that is applicable to any version of a Windows-based operating system (e.g., Windows 95 and Windows 7). Such user-defined tags or other attributes can also be used as filters.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 4A","FIG. 4A"],"b":["402","402","142","102","102"]},"Policies, such as policy , are compiled () and, at runtime, used in enforcement by data appliance . Specifically, during compilation, the dynamic address object (\u201cdyn-grp1\u201d) will be replaced with the IP address of each virtual machine matching that group's definition, based on the information stored in VM information repository . As will be described in more detail below, when the IP address of a particular virtual machine changes (or when any other change implicating a rule is made), the VM information for the virtual machine in repository  will be updated, and any applicable firewall rules updated as well.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 4B","b":["402","112","404","116","406"]},"Suppose virtual machine , which is shown in  as being hosted by host , is migrated to host  as indicated by line . One reason for the migration is if host  has a hardware or other failure. The IP address of virtual machine  changes as a result of the migration (i.e., from 172.16.0.4 to 10.5.125.34).  shows policy  as recompiled after virtual machine  is migrated. Specifically, IP address 404 has been changed () to reflect the current IP address of virtual machine  after migration.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 5","b":["102","102","502","504","102","510","102","102","506","508","102","512","512","104","120","102"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 6","FIG. 6"],"b":["102","602","112","602","104","106","602","120","102","104","102","116","114","144"]},"As previously explained, the received VM info is used to compile rules () enforceable by data appliance . At , such rules (corresponding to policies) are enforced. As one example, at , policy  is enforced with respect to virtual machine , whose IP address (assuming the machine has not yet migrated) is included in compiled rule . As another example, if an image is cloned, policies can automatically be enforced against the new image based on any matches of attributes of that image's VM information with filters. Rules can be recompiled, as needed.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 7","FIG. 7"],"b":["102","702","112","106","108","104","106","104","108","120","112","102","704","104","106","104","102","202","144","108","108","120","104","102","112","144"]},"Indications of changes in VM information can also be received in other ways. For example, agent  can be configured to periodically pull information from sources such as log server , perform a diff or other comparison, and provide updates to data appliance .","At , a determination is made as to whether any firewall rules need to be recompiled based on the changed information. As one example, when virtual machine  migrates from host  to host , rule  will need to be recompiled (as rule ) so that policy  continues to be satisfied. As another example, other attributes of a virtual machine might change, but, if such attributes are not used as filters (e.g., in any dynamic address objects), there will be no need to recompile any rules.","Finally, at , any implicated rules are recompiled.","Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding, the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed embodiments are illustrative and not restrictive."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various embodiments of the invention are disclosed in the following detailed description and the accompanying drawings.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
