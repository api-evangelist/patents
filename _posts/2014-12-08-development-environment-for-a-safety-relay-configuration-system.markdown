---
title: Development environment for a safety relay configuration system
abstract: A safety relay configuration system for configuring safety functions to be carried out by a safety relay is provided. The configuration system comprises a number of features that facilitate intuitive and simplified configuration of an industrial safety relay, including but not limited to features that guide the user through the configuration process using an intuitive sequential procedure that provides feedback and prompts based on user interaction, enforce design consistency throughout the configuration project by intelligently limiting user selections, and visually organize configuration and status information in a manner that efficiently utilizes display space and allows the user to quickly evaluate available configuration options.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09361073&OS=09361073&RS=09361073
owner: Rockwell Automation Technologies, Inc.
number: 09361073
owner_city: Mayfield Heights
owner_country: US
publication_date: 20141208
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","DESCRIPTION","DETAILED DESCRIPTION"],"p":["This application claims priority to U.S. Provisional Application Ser. No. 61\/922,513, filed on Dec. 31, 2013, entitled \u201cSAFETY RELAY CONFIGURATION SYSTEM,\u201d the entirety of which is incorporated herein by reference.","The subject matter disclosed herein relates generally to configuration systems and graphical interfaces for configuration and monitoring of an industrial safety relay","The following presents a simplified summary in order to provide a basic understanding of some aspects described herein. This summary is not an extensive overview nor is intended to identify key\/critical elements or to delineate the scope of the various aspects described herein. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.","In one or more embodiments, a system for configuring an industrial safety relay is provided, comprising a configuration component configured to create a configuration program for a safety relay based on configuration input that manipulates one or more graphical function block elements; and a graphical interface component configured to receive the configuration input and to display the one or more graphical function block elements, wherein the graphical interface component is further configured to organize the one or more graphical function block elements into four columns of an editing window.","Also, according to one or more embodiments, a non-transitory computer-readable medium is provided having stored thereon instructions that, in response to execution, cause a system to perform operations, the operations comprising displaying one or more graphical function block elements relating to a configuration program for a safety relay, wherein the displaying comprises organizing the one or more graphical function block elements into four columns of an editing window; and creating a configuration program for a safety relay based on configuration input received via manipulation of the one or more graphical function block elements.","Also, one or more embodiments provide a method for configuring an industrial safety system, comprising displaying, by a system comprising at least one processor, one or more graphical function block elements relating to a configuration program for a safety relay, wherein the displaying comprises organizing the one or more graphical function block elements into four columns of an editing window; and creating, by the system, a configuration program for a safety relay based on configuration input received via manipulation of the one or more graphical function block elements.","To the accomplishment of the foregoing and related ends, certain illustrative aspects are described herein in connection with the following description and the annexed drawings. These aspects are indicative of various ways which can be practiced, all of which are intended to be covered herein. Other advantages and novel features may become apparent from the following detailed description when considered in conjunction with the drawings.","Various aspects of this disclosure are now described with reference to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of one or more aspects. It should be understood, however, that certain aspects of this disclosure may be practiced without these specific details, or with other methods, components, materials, etc. In other instances, well-known structures and devices are shown in block diagram form to facilitate describing one or more aspects.","As used in this application, the terms \u201ccomponent,\u201d \u201csystem,\u201d \u201cplatform,\u201d \u201clayer,\u201d \u201ccontroller,\u201d \u201cterminal,\u201d \u201cstation,\u201d \u201cnode,\u201d \u201cinterface\u201d are intended to refer to a computer-related entity or an entity related to, or that is part of, an operational apparatus with one or more specific functionalities, wherein such entities can be either hardware, a combination of hardware and software, software, or software in execution. For example, a component can be, but is not limited to being, a process running on a processor, a hard disk drive, multiple storage drives (of optical or magnetic storage medium) including affixed (e.g., screwed or bolted) or removably affixed solid-state storage drives; an object; an executable; a thread of execution; a computer-executable program, and\/or a computer. By way of illustration, both an application running on a server and the server can be a component. One or more components can reside within a process and\/or thread of execution, and a component can be localized on one computer and\/or distributed between two or more computers. Also, components as described herein can execute from various computer readable storage media having various data structures stored thereon. The components may communicate via local and\/or remote processes such as in accordance with a signal having one or more data packets (e.g., data from one component interacting with another component in a local system, distributed system, and\/or across a network such as the Internet with other systems via the signal). As another example, a component can be an apparatus with specific functionality provided by mechanical parts operated by electric or electronic circuitry which is operated by a software or a firmware application executed by a processor, wherein the processor can be internal or external to the apparatus and executes at least a part of the software or firmware application. As yet another example, a component can be an apparatus that provides specific functionality through electronic components without mechanical parts, the electronic components can include a processor therein to execute software or firmware that provides at least in part the functionality of the electronic components. As further yet another example, interface(s) can include input\/output (I\/O) components as well as associated processor, application, or Application Programming Interface (API) components. While the foregoing examples are directed to aspects of a component, the exemplified aspects or features also apply to a system, platform, interface, layer, controller, terminal, and the like.","As used herein, the terms \u201cto infer\u201d and \u201cinference\u201d refer generally to the process of reasoning about or inferring states of the system, environment, and\/or user from a set of observations as captured via events and\/or data. Inference can be employed to identify a specific context or action, or can generate a probability distribution over states, for example. The inference can be probabilistic\u2014that is, the computation of a probability distribution over states of interest based on a consideration of data and events. Inference can also refer to techniques employed for composing higher-level events from a set of events and\/or data. Such inference results in the construction of new events or actions from a set of observed events and\/or stored event data, whether or not the events are correlated in close temporal proximity, and whether the events and data come from one or several event and data sources.","In addition, the term \u201cor\u201d is intended to mean an inclusive \u201cor\u201d rather than an exclusive \u201cor.\u201d That is, unless specified otherwise, or clear from the context, the phrase \u201cX employs A or B\u201d is intended to mean any of the natural inclusive permutations. That is, the phrase \u201cX employs A or B\u201d is satisfied by any of the following instances: X employs A; X employs B; or X employs both A and B. In addition, the articles \u201ca\u201d and \u201can\u201d as used in this application and the appended claims should generally be construed to mean \u201cone or more\u201d unless specified otherwise or clear from the context to be directed to a singular form.","Furthermore, the term \u201cset\u201d as employed herein excludes the empty set; e.g., the set with no elements therein. Thus, a \u201cset\u201d in the subject disclosure includes one or more elements or entities. As an illustration, a set of controllers includes one or more controllers; a set of data resources includes one or more data resources; etc. Likewise, the term \u201cgroup\u201d as utilized herein refers to a collection of one or more entities; e.g., a group of nodes refers to one or more nodes.","Various aspects or features will be presented in terms of systems that may include a number of devices, components, modules, and the like. It is to be understood and appreciated that the various systems may include additional devices, components, modules, etc. and\/or may not include all of the devices, components, modules etc. discussed in connection with the figures. A combination of these approaches also can be used.","The safety relay configuration systems, software, and graphical interfaces described herein comprise a number of features that facilitate intuitive and simplified configuration of an industrial safety relay. These include features that guide the user through the configuration process using an intuitive sequential procedure that provides feedback and prompts based on user interaction, enforce design consistency throughout the configuration project by intelligently limiting user selections, visually organize configuration and status information in a manner that efficiently utilizes display space and allows the user to quickly evaluate available configuration options, and provides other benefits to be described in more detail herein.",{"@attributes":{"id":"p-0098","num":"0097"},"figref":"FIG. 1","b":["102","108","108","108","108"]},"Safety relay  is programmable, allowing the user to configure the function of each input and output terminal and to develop logic that controls the behavior of each relay output based on the states of the safety device inputs. Accordingly, safety relay configuration system  is designed to communicate with safety relay  and to execute a configuration application that allows the user to configure and program safety relay . Safety relay configuration system  can communicate with safety relay  using any suitable communication means, including communication via a local connection between the configuration system and the safety relay  (e.g., universal serial bus, RS232, etc.), or over a networked connection (e.g., Ethernet, Modbus, Common Industrial Protocol, Controlnet, Devicenet, etc.). In one or more embodiments, safety relay configuration system  can also communicate with safety relay  remotely via the Internet.","Once communication between the safety relay configuration system  and safety relay  is established, the configuration system can download configuration data  to the safety relay based on configuration and programming input provided to the configuration system by the user. For example, the user can develop safety relay logic within the development environment of the configuration application executed by the configuration system , and download the developed program to safety relay . Additionally, safety relay configuration system  can read and display status data  from the safety relay . The configuration system can render status data  on a graphical environment having a similar structure to the development environment used to create the safety relay logic, allowing the user to monitor the statuses of the input devices and relay outputs within the logic environment.",{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 2"},"One or more embodiments of safety relay configuration system  can include a graphical interface component , a communication component , a safety relay configuration component , one or more processors , and memory . In various embodiments, one or more of the components -, the one or more processors , and memory  can be electrically and\/or communicatively coupled to one another to perform one or more of the functions of the safety relay configuration system . In some embodiments, components - can comprise software instructions stored on memory  and executed by processor(s) . The safety relay configuration system  may also interact with other hardware and\/or software components not depicted in . For example, processor(s)  may interact with one or more external user interface devices, such as a keyboard, a mouse, a display monitor, a touchscreen, or other such interface devices.","Graphical interface component  can be configured to receive user input and to render output to the user in any suitable format (e.g., visual, audio, tactile, etc.). User input can be, for example, safety relay terminal configuration input, safety device selection input, function block selection and configuration input, user responses to prompts provided by the graphical interface component , or other such data. Communication component  can be configured to communicatively interface with the safety relay and exchange data between the relay and the configuration system. Communication between the configuration system and the safety relay can be via a local communication link such as USB, RS232, or the like, or via a remote connection over a network or the Internet.","Safety relay configuration component  can be configured to execute a safety relay configuration application having features and graphical interface characteristics to be described in more detail herein. The one or more processors  can perform one or more of the functions described herein with reference to the systems and\/or methods disclosed. Memory  can be a computer-readable storage medium storing computer-executable instructions and\/or information for performing the functions described herein with reference to the systems and\/or methods disclosed.",{"@attributes":{"id":"p-0105","num":"0104"},"figref":"FIG. 3","b":["302","302","308","306","304","310"]},"The device toolbox area  can include a catalog drop-down window . When expanded, catalog drop-down window  can display a list of available devices  for selection by the user for inclusion in the current project. The list of available devices  can be organized according to device type, with each device type displayed as an expandable node. For example, selecting the \u201cSafety\u201d node  can reveal a list of available safety relays. In some embodiments, hovering a cursor over one of the devices in the list invokes a pop-up window containing additional information about the selected device. A device from the list of available devices  can be added to the project organizer area  by double-clicking on the selected device in the list, or by dragging the selected device to the project organizer area . In either case, selection of a device from the list of available devices  causes the selected device to appear in the project organizer area , as shown in . Adding a device to the project organizer area  makes that device available for creation of a new project.",{"@attributes":{"id":"p-0107","num":"0106"},"figref":["FIGS. 5and 5","FIG. 5","FIG. 5"],"b":"308","i":"b. "},"Turning now to , selection of a safety relay or other device within the project organizer area  (e.g., a safety relay or other device previously selected from the device toolbox area  for inclusion in the project organizer area ) creates a new project for the selected device. In the illustrated example, a GSR830 safety relay is to be configured and programmed. Accordingly, a device icon corresponding to this type of safety relay is selected from the project organizer area , which launches a \u201ccontroller details\u201d view within the device details area . In the present example, a project tab  is displayed at the top of the device details area , which corresponds to the new project.",{"@attributes":{"id":"p-0109","num":"0108"},"figref":"FIG. 7","b":["310","310","702","704","704"]},"Device graphic view area  displays the name of the project and a graphical representation  of the selected safety device. If the safety relay configuration system is currently connected to the safety device, the device graphic view area  can also display operational status information for the device, such as the current mode of the device (program mode, running, etc.), whether the device is currently faulted, identification of the fault, etc. The user can also switch the mode of the safety relay between program mode and running mode from this area. This area also indicates whether the current project has been verified (e.g., the program has been checked for errors or inconsistencies prior to download), and displays a verification identifier for verified projects.","The user can also add configurations for any plug-in modules installed on the safety relay from the device graphic view area . In some embodiments, this can be performed by right-clicking or otherwise selecting an empty slot on the graphical representation of the safety relay, as illustrated in . This invokes a pop-up configuration window  that allows the user to select a category of the plug-in module (e.g., communication module, digital I\/O module, or specialty module), and to select a particular model of the plug-in module within the selected category. Once selected, a graphical representation of the plug-in module appears on the graphical representation of the safety relay, as illustrated in .","Returning now to , device tree area  provides navigation to various configurable aspects of the selected safety device, including but not limited to the communication ports of the safety relay, the devices visual indicators (e.g., LEDs or other indicators), embedded inputs and outputs, and any plug-in modules that are attached to the safety relay (e.g., expansion I\/O modules).","Device configuration property pane  allows the user to view and edit the current configuration of the selected safety relay. When the user selects an item from the device tree area , the device configuration property pane displays detailed configuration information for the selected item.","Selection of a logic editor button on the device toolbar area  launches a safety logic editor, as illustrated in . In some embodiments, the safety logic editor will be opened in a new tab . In the illustrated example, a toolbox area  containing selectable safety functions is located on the left-hand side of the screen, and a safety logic editor toolbar  is located across the top of the window. The safety logic editor pane  allows the user to create, view, and edit safety logic and configuration data for the safety relay associated with the current project. In , the safety logic editor pane  is depicted in its blank state, which is presented to the user when a new project is created. As will be described in more detail herein, the safety relay configuration system allows the user to build safety logic programs for the safety relay by adding function blocks to available memory spaces  on the safety logic editor pane .","As illustrated in , the safety logic editor pane  comprises a grid of four columns\u2014Safety Monitoring, Logic Level A, Logic Level B, and Safety Outputs\u2014with each column comprising a number of available memory spaces . Function blocks can be added to the respective memory spaces  by selecting the function blocks from the toolbox area . Function blocks can be organized within the toolbox area  according to device type, logic function, safety monitoring function, or other suitable categories. The categories can be displayed as nodes within toolbox area , such that selection of a node expands the selections available within the selected category.","The Safety Monitoring column of the safety logic editor pane  will typically contain function blocks corresponding to safety input devices to be monitored by the safety relay (e.g., gate switches, light curtains, safety mats, emergency stop buttons, pull cords, etc.). The Logic Level A and B columns are used to contain logical operations that act on the safety inputs in a manner determined by the user in order to control how the safety inputs control that states of the safety outputs. The Safety Output column will typically contain function blocks corresponding to safety outputs of the safety relay. As will be described in more detail herein, the safety relay configuration system allows each function block to be configured directly on the function block graphic, and allows the user to draw connection lines between function block inputs and outputs in order to build a complete safety relay program that can be downloaded to and executed on the safety relay.","An example workflow is now described with reference to  in order to provide a general overview of the process for building safety relay programs according to one or more embodiments. In this example, a gate switch is to be monitored by the safety relay, and the user is to develop logic for controlling a safety relay output based on the monitored status of the gate switch. Accordingly, a Gate Switch function block  selected from the Safety Monitoring Functions tree of the toolbox area and dragged to an available memory space of the safety monitoring column of the safety logic editor pane . As will be described in more detail herein, the safety relay configuration system automatically assigns to available (unused) input terminal addresses  to the Gate Switch function block  when the function block is added to the program. If desired, these input terminal addresses can be changed if the user wishes to assign different input terminals to the Gate Switch function block . Other configuration settings for the Gate Switch function block  can be set through interaction with the Gate Switch function block , as will be described in more detail herein.","Next, the user selects a Safety Output function block  from the Safety Output Functions tree of the toolbox area and drags this function block to an available memory space of the Safety Outputs column of the safety logic editor pane . Similar to the Gate Switch function block , the safety relay configuration system will automatically assign two available (unused) safety relay output terminal addresses  to the Safety Output function block . These output addresses can be changed by the user if desired through interaction with the function block on the editor pane. Other configuration settings for the Safety Output function block  can be set through interaction with the function block. For example, the Reset Type for the Safety Output function block  can be changed from Manual to Automatic by selecting the appropriate setting from a drop-down box on the function block.","In this example, no logical operators are to be performed on the gate switch status, but instead the safety output is to be directly controlled by the status of the gate switch. Accordingly, the user can directly connect the output of the Gate Switch function block  to the input of the Safety Output function block . This can be performed, for example, by clicking on the input of the Safety Output function block  (which is colored blue to indicate that no connection has yet been made), then clicking on the output of the Gate Switch function block  (similarly colored blue when no connection is yet made). In response to these selections, the safety relay configuration system automatically creates two Pass Through blocks between the Gate Switch and Safety Output function blocks in the Logic Level A and B columns, respectively, and draws a connection line between the two function blocks through the two Pass Through blocks. The Pass Through blocks perform no logical functions, but merely pass status information, unchanged, from their inputs to their outputs.","Once the logic program is completed, the user can compile and download the program to the safety relay by selecting appropriate controls on the device toolbar area .",{"@attributes":{"id":"p-0121","num":"0120"},"figref":"FIG. 12","b":["1202","1210","1214","1216","1218","1220","1202","1210","1204","1202","1210","1204","1208","1206","1222","1208"]},"The output of the Emergency Stop function block  is also connected to an OFF Delay function block  in the Safety Output column (via two Pass Through function blocks). By this configuration, the OFF Delay function block  controls the output terminal designated in the address window  based on the output of the Emergency Stop function block .","Reset function block  has been designated an available input terminal address in address window , and has been linked to the Immediate OFF function block  by reference using the Reset Input window  on the Immediate OFF function block . In this way, the Reset function block , controlled by input address specified in , is configured to reset the Immediate OFF function block .","In addition to development, the safety logic layout depicted in  can also be used to monitor the safety relay logic during runtime after the logic has been downloaded to the relay. During runtime monitoring, live status information corresponding to the respective safety monitoring devices and outputs can be overlaid over their respective function blocks. Additionally, the function blocks can include color animation that changes the color of the function blocks based on their respective current statuses.",{"@attributes":{"id":"p-0125","num":"0124"},"figref":"FIGS. 13-22"},{"@attributes":{"id":"p-0126","num":"0125"},"figref":"FIG. 13","b":["1302","1304","1302","1302","1312"]},"Test Source windows  assign the test sources that are to source the 24V test pulses for channels A and B, respectively. These test pulses are used to detect shorts to B and channel-to-channel shorts to other inputs, as will be described in more detail herein.","The Inputs window  toggles the function block  between dual normally closed (NC), dual output signal switching device (OSSD), and single inputs. The Pulse Testing window  defines whether Test Pulsing is enabled on the input channels. If the Pulse Testing window  is enabled, the Test Source windows  will be made available for editing.","When an input filter time is specified in the input filter time window , for the specified length of time, an input channel is allowed to go to the Safe state while the other channel is in the Active state without the output of the function block  going to its Safe state. However, the output will transition to the Safe state when both input channels are in the Safe state at the same time.",{"@attributes":{"id":"p-0130","num":"0129"},"figref":"FIG. 14","b":["1402","1402","1402","1406","1408"]},{"@attributes":{"id":"p-0131","num":"0130"},"figref":"FIG. 15","b":["1502","1504","1504","1506","1502","1508","1510","1512","1514"],"i":["a ","b"]},{"@attributes":{"id":"p-0132","num":"0131"},"figref":["FIG. 16","FIG. 15"],"b":["1602","1604","1604","1602","1606","1608","1610","1612","1602","1506"],"i":["a ","b"]},{"@attributes":{"id":"p-0133","num":"0132"},"figref":"FIG. 17","b":["1702","1702","1704","1704","1706","1706","1","1","2","2","1708","1708","1","2","3","4","1","2","3","4"],"i":["a ","b ","a ","b "]},"The Sensor Synch Time window  configures the maximum amount of time allowed between clearing or blocking of the muting sensor inputs before generating a fault. The Max Mute Time window  specifies the maximum amount of time during which the Muting function block  lets the protective function of the light curtain be disabled before generating a fault.","Additional settings can be viewed by selecting either the Override Settings drop-down  or the Advanced Settings drop-down .  illustrates Muting function block  with the Override Settings and Advance Settings expanded.","Override Settings include an Override window  that, when enabled, allows a temporary bypass of the muting instruction's function. The Max Override Time window  specifies the amount of time the instruction lets the override feature energize the output of the instruction. The Inputs window  defines the number of input channels for the Override switch. The Pulse Testing window  defines whether the inputs for the Override switch are to be pulse tested. The Test Source A window  and Test Source B window  assign a test source for sourcing the 24V pulse testing for each channel of the override switch.","The Advanced Settings can include a Light Curtain Discrepancy Time window  that sets the amount of time that the light curtain or the override switch inputs are allowed to be in an inconsistent state before an instruction fault is generated.","When an input filter time is specified in the Muting Sensors Input Filter window , an input channel of the muting sensor is allowed to go to the Safe state for the specified length of time while the other channel is in the Active state without the output of the instruction going to its Safe state. However, the output will go to the Safe state when both input channels are in the safe state at the same time. Light Curtain Input Filter window  and Override Input Filter window  are similar settings for the light curtain input channels and override input channels, respectively.",{"@attributes":{"id":"p-0139","num":"0138"},"figref":"FIG. 19","b":["1902","1906","1902","1904"]},{"@attributes":{"id":"p-0140","num":"0139"},"figref":"FIG. 20","b":["2002","2002","2004","2006"]},{"@attributes":{"id":"p-0141","num":"0140"},"figref":"FIG. 21","b":["2102","2102","2104","2106","2108"]},"When an input filter time is entered in the input filter window , an input channel is allowed to go to the Safe state for the designated length of time while the other channel is in the Active state without the output of the function block  going to its Safe state. The output will go to the safe state, however, when both input channels are in the safe state at the same time.",{"@attributes":{"id":"p-0143","num":"0142"},"figref":["FIG. 22","FIG. 22"],"b":["2202","2202","2208","2202","2214","2216","2214","2216","2214","2216","2208"],"i":["a ","a","b ","b"]},"In 2 N.C.\/N.O mode, input corresponds to the normally open contact for the right button of the two-handed control, input corresponds to the normally closed contact for the right button, input corresponds to the normally open contact for the left button, and input corresponds to the normally-closed contact for the left button. In 2 N.O. mode, only two inputs will be available on the function block, corresponding to the normally open contacts for the right and left buttons, respectively.","Test Source A window  and Test Source B window  assign the test sources that are to provide the 24V pulses for input channels A and B, respectively, for detection of shorts to 24V or channel-to-channel shorts to other inputs on the safety relay.","The Pulse Testing window  sets whether test pulsing is enabled on the input channels. The Test Source A and B windows will only appear on the function block  if the Pulse Testing window is set to \u201cEnabled.\u201d","When an input filter time is specified in the Input Filter window , an input channel of the function block is allowed to go to the Safe state for the specified length of time while the other channel is in the Active state without the output of the function block  going to its Safe state. The output of the function block will go to the Safe state when both input channels are in the Safe state at the same time.",{"@attributes":{"id":"p-0148","num":"0147"},"figref":"FIGS. 23-27"},{"@attributes":{"id":"p-0149","num":"0148"},"figref":"FIG. 23","b":["2302","2310","2306","2310","2310"]},"The Immediate ON function block  also monitors a feedback channel for the field outputs (which can be specified in Feedback window ) and generates a fault if the channels do not indicate the desired state of the associated outputs within a defined time (e.g., 150 ms). The feedback will typically be measured from a device either directly or indirectly controlled by the output of the instruction.","The Monitored Input window  is only visible of the Reset Type window  is set to \u201cManual,\u201d and sets the output of the function block Active after the monitored logical input signal transition from the Safe state to the Active state, and the Reset input transitions from a zero to a one and back to a zero within a defined time (e.g., 250 ms).",{"@attributes":{"id":"p-0152","num":"0151"},"figref":"FIG. 24","b":["2402","2412","2408","2412","2408","2412"]},"The ON Delay function block  also monitors a feedback channel for the field outputs (defined in the Feedback window ) and generates a fault if the channels do not indicate the desired state of the associated outputs within a defined time (e.g., 150 ms). The feedback is typically from a device either directly or indirectly controlled by the output of the function block .","The Time Delay window  specifies how long to delay activating the output of the function block  after the logical input signal transitions from the Safe state to the Active state and, if Manual reset is enabled, the reset input transitions from a zero to a one and back to a zero.","The Reset Input window  is visible only if Manual reset is enabled, and sets the output Active after the monitored logical input signal transitions to the Active state, and the Reset input transitions from a zero to a one and back to a zero within a defined time (e.g., 250 ms).",{"@attributes":{"id":"p-0156","num":"0155"},"figref":"FIG. 25","b":["2502","2514","2510","2514","2510","2514"]},"The OFF Delay function block  also monitors a feedback channel for the field outputs (specified by the Feedback window ) and generates a fault if the channels do not indicate the desired stat of the associated outputs within a defined time (e.g., 150 ms). The feedback is typically from a device that is either directly or indirectly controlled by the output of the function block .","The Time Delay window  sets how long to delay transitioning the output of the function block  after the logical input signal transitions form the Active state to the Safe state.","When the Retriggerable window  is set to Enabled, the Time Delay to transition the output of the function block  will be cancelled should the logical input signal transition from the Safe state back to the Active state, and the output will remain in the Active state. If this window is set to Disabled, once the time delay has begun timing, it cannot be reset.","The Reset Input window  sets the monitored reset input. This window is only visible if the Reset Type is set to Manual.",{"@attributes":{"id":"p-0161","num":"0160"},"figref":"FIG. 26","b":["2602","2610","2602","2614","2610","2614","2602"]},"The Jog Time window  sets the time for which the output of the Jog function block will stay in the Active state after the logical input  transitions from the Active state to the Safe state and, in the case of Manual reset, the reset input transitions from a zero to a one and back to zero.","The Feedback window  specifies the feedback from a device either directly or indirectly controlled by the output of the Jog function block .","The Reset Input window  sets the monitored reset input, and is only visible when the Reset Type is set to Manual. In Manual reset mode, the output is set Active after the monitored logical input  transitions from the Safe state to the Active state, and the Reset input transitions from a zero to a one and back to a zero within a defined time (e.g., 250 ms).",{"@attributes":{"id":"p-0165","num":"0164"},"figref":["FIGS. 27and 27","FIG. 27"],"b":["2702","2704","2704","2702","2706"]},"The graphical interface for the safety relay configuration system includes a number of features intended to provide an intuitive development environment and simplify the relay configuration workflow. These features include, but are not limited to, guiding the user through the process of creating an error-free and internally consistent relay configuration application by limiting user choices at certain selection steps, providing wizards that explain configuration steps and minimize tool training time, arranging function blocks on the development window in a linear, organized fashion, and other such aspects. Various graphical interface features for the safety relay configuration system are now described in connection with . Although these features are discussed individually in the following description, it is to be appreciated that some embodiments of the present disclosure may include only one of the described features, a combination of two or more of the described features, or all of the described features without departing from the scope of this disclosure.","As noted above, some safety relays are designed to generate test outputs that can be used in combination with a safety input to detect short-circuits or cross-channel faults. As illustrated in , when an external input contact of a safety relay  is closed on an electro-mechanical safety device, a 24V test pulse is output from the test output terminal to facilitate diagnosis of field wiring and input circuitry. Using this function, short-circuits between input terminals and 24V power, or between input signal lines and open circuits, can be detected. In the illustrated example, test source output terminal T provides a test pulse to input terminal IN to facilitate detection of a short-circuit between input terminal IN and 24V power source terminal IN+. Likewise, test source output terminal T provides 24V test pulses to input terminal IN to facilitate detection of a short-circuit between input terminals IN and IN.","In order to support dual-channel and triple-channel electro-mechanical safety devices, the safety relay  can support up to three unique pulsing schemes to ensure that a cross fault between any two (or three) channels can be detected. In some embodiments, these three unique pulsing schemes can comprise respective 24V pulse trains that are out of synch with one another, as illustrated in . In this way, the safety relay can identify which of the three pulse schemes\u2014Type A, Type B, or Type C\u2014is being seen by a particular input terminal, and confirm that the terminal is receiving the expected test pulse. The safety relay can also determine whether application of a test pulse on a first input terminal causes the same test pulse to be detected on a different input terminal, indicating a short between the two terminals.","One or more embodiments if the safety relay configuration system can intelligently manage the test output pulse test type to ensure that every electro-mechanical safety device in the system has a unique pulsing scheme for each of the safety device's channels. This feature is illustrated in . illustrates an example safety monitoring function block  for a dual-channel safety device. Function block  includes to Test Source windows\u2014Test Source A and Test Source B \u2014which allow the user to select the two test sources (unique test pulsing schemes) to be assigned to the respective two channels of the device. All safety monitoring functions for dual-channel safety devices will include these two Test Source windows (function blocks for three-channel devices will include three such Test Source assignment windows, as illustrated in ). The terminal assigned to Test Source A (terminal  in ) takes on the test output Type A pulsing scheme, while the terminal assigned to Test Source B (terminal  in ) takes on the test output Type B pulse scheme.","Once a pulsing scheme has been assigned to a terminal on a safety monitoring function block, that terminal can only be used on test sources that have the same Type label throughout the rest of the project. That is, since terminal  has been assigned to Test Source A on function block , terminal  can henceforth only be used for other Test Source A assignments, since a given terminal cannot be assigned to two different pulse schemes. Since assignment of two different pulse schemes to the same terminal would result in a program error, the safety relay configuration system can prevent the user from inadvertently assigning two different pulse schemes to a terminal by intelligently limiting the available terminal selections on other function blocks in the project. For example, as shown in , when the user selects the Test Source A window  on a different function block , a drop-down selection menu  is displayed. Selection menu  displays available multi-purpose terminals, allowing the user to select a terminal to be assigned to Test Source A. However, terminal  is made unavailable for selection (grayed out) on selection menu , and thus cannot be assigned to Test Source A, since terminal  has already been assigned to Test Source B on function block . Only unassigned terminals or terminals that have previously been assigned to Test Source A are made available on selection menu . In this way, the safety relay configuration system forces the user to remain consistent with previous test source assignments, preventing assignment of two different sources to the same terminal.","In a related aspect, one or more embodiments of the safety relay configuration system can automatically assign appropriate test source terminals to a safety monitoring function block when the function block is added to the project in the editing environment. For example, as illustrated in , terminals  and  have been assigned to Test Source A and B, respectively of safety monitoring function block . These terminals may have been selected by the user, or may have been automatically assigned by the configuration system when function block  was added based on the availability and suitability of terminals  and . Since terminals  and  have been assigned to function block , each additional function block designed to monitor a dual-channel electro-mechanical safety device\u2014e.g., function block \u2014will automatically have terminals  and  assigned to their Test Source A and Test Source B windows when the function block  is added to the project.","In another aspect, one or more embodiments of the safety relay configuration system support organized multi-column combo boxes (or terminal selection graphic window) that organizes the set of available terminals into three or more columns, as illustrated in . Conventional combo boxes typically have only a single column drop-down that limits the number of options that can be displayed on the screen. By contrast, the safety relay configuration system disclosed herein can utilize a three-column terminal selection window graphic with organization section bands for differentiating between groups of options in the combo box. The terminal selection window graphic segregates the set of available terminals according to two or more terminal categories to yield respective two or more terminal groups, and the two or more terminal groups comprise respective title bars displaying respective names of the two or more terminal categories. The two or more terminal categories can comprise at least one of embedded safety inputs, multi-purpose terminals, expansion module inputs, networked inputs, or other suitable categories. In example illustrated in , a user has selected an input of a safety monitoring function block, so that an input terminal of the safety relay can be assigned to the selected function block input. Selection of the input causes a combo box  to be display, which allowed the user to select an input terminal to be assigned to the function block input. Combo box  contains three separate groups of terminals corresponding to different categories of terminals, which are suitably labeled using organization section bands , , and . The organizational section bands also serve to separate the terminal groups. The terminals are organized into three columns to allow more terminals to be displayed than would be possible with a single-column. In the illustrated example, the first group of terminals (labeled with organization section band ) comprises embedded safety inputs, which are integrated safety input terminals of the safety relay. The second group of terminals (labeled with organization section band ) comprise multi-purpose terminals, which are integrated terminals of the safety relay which can be flexibly configured as needed. The third group of terminals (labeled with organization section band ) comprise plug-in inputs, which are input terminals off a plug-in expansion module that was added to the safety relay.","Also, one or more embodiments of the safety relay configuration system can support intelligent test source assignments for safety mat monitoring function blocks.  illustrates a simplified electrical schematic for a safety mat . Safety mats typically consist of two conductive plates held apart by non-conductive separators. Each conductive plate\u2014channel A and channel B of the safety mat\u2014are alternately sourced by test sources of safety relay . Test source T and Test Source T of safety relay  are routed through channels A and B of safety mat , and then to safety inputs I and I of safety relay . The act of stepping on safety mat  compresses the separators between the two plates, allowing the plates to make contact and creating a cross between the two channels (represented by switch ). The safety mat monitoring function block of the safety relay configuration system configures the safety relay to monitor for the cross between the channels to determine that the mat is occupied.","This configuration requires a unique pair of test sources to test the two channels, otherwise nuisance faults (cross channel faults) would be injected on other electro-mechanical safety devices that utilize these test sources when the safety mat is occupied. Accordingly, one or more embodiments of the safety relay configuration system can ensure that a unique pair of test sources are used with a safety mat monitoring function block (note that on other types of electro-mechanical safety devices it would be more efficient to re-use test sources). As illustrated in , when a safety mat function block  is added to the project, the editing environment determines unused test sources and automatically assigns these unused test sources as the test sources for the safety mat function block . In the illustrated example, since previously-added function block  has been assigned terminals  and  for its Test Source A and Test Source B, respectively, the safety relay configuration system automatically assigns the next two available test source terminals\u2014 and \u2014to Test Source A and Test Source B, respectively, of safety mat function block . This ensures that the safety mat function block  is assigned a unique pair of test source terminals, thereby preventing cross channel faults.","In another aspect, the safety relay configuration system can provide a function block editing environment that supports signal flow line routing rules that yield easily followed signal flow lines for fixed horizontal distanced function blocks. As illustrated in , a signal flow line  is typically used to logically tie the output  of one function block to an input  of another function block. In one or more embodiments, the editing environment of the safety relay configuration system can enforce a fixed horizontal distance between function blocks, resulting in columns of function blocks, as illustrated in . When the X,Y coordinate locations of function blocks are restricted in this fashion, a line drawing rule set can be designed that results in aesthetically consistent, easily followed flow lines throughout the project. For example, the system can enforce a line drawing rule specifying that a first instance of a line break (that is, a 90 degree bend in order to connect to an input on a different horizontal level) within a column must break 90 degrees from horizontal 24\/25ths of the horizontal distance between two columns, while a second instance of a line break in the column must break 90 degrees from the horizontal 23\/25ths of the horizontal distance between the two columns. Such rules will maintain that no wiring connection from two separate output pins will share the same vertical line location on the graphical interface.","In a related aspect, the various organization elements and their spacing on the function block editing environment can have respective fixed widths, allowing a full, completed safety relay configuration to be printable without compression.","Also, as illustrated in , the function blocks of the safety relay configuration system's editing environment can be expanded and collapsed to facilitate viewing or hiding of safety parameters associated with the function blocks. illustrates an example Emergency Stop function block  in its default presentation. In this default view, only a selected subset of parameters are visible (e.g., the Test Source settings), and the advanced settings hidden. Selecting the Advanced Settings label  on the function block  expands the function block to reveal additional safety parameters that can be configured for the function block, as illustrated in . These aspects can facilitate printing the configuration in a manner that captures all safety-related parameters. Moreover, these aspects allow the user to configure each function block via settings located directly on the function block (rather than on a separate window), and to hide less critical parameters while monitoring of the safety function during runtime.",{"@attributes":{"id":"p-0178","num":"0177"},"figref":["FIGS. 38and 38","FIG. 39"],"b":["3802","3902","3806","3804","3804","3802","3804"]},"However, for function blocks for which a safety-rated terminal is not requires, such as Reset function block  in , the available non-safety-rated plug-in terminals are presented in combo box  for selection by the user and assignment to input  (in addition to the safety-rated terminals, which may also be assigned to the non-safety-rated function block ). By presenting non-safety-rated terminals for selection and assignment only to non-safety-rated function blocks, the configuration system drives the user to apply standard (non-safety-rated) input signals only to function blocks for which there is no requirement for a safety-rated signal.","One or more embodiments of the safety relay configuration system can also reduce the number of signal flow lines on a project by supporting function block references between function blocks. This aspect allows a first function block whose output is acting on another function block located multiple columns adjacent to the first function block to make an association by a combo box selection rather than by creating a signal flow wire that spans multiple columns  illustrates an example of this type of function block referencing. In this example, safety output function block  is linked to the Reset function block  by selecting the name of function block  (\u201cSMF ,\u201d found in the name bar  of Reset function block ) in the Reset Input window  of safety output function block . This name-based referencing mitigates the need to create a signal flow line between the Reset function block  and the safety output function block .","One or more embodiments of the safety monitoring configuration system can also provide a real-time graphical representation of an amount of memory consumed in the function block editor against a total available memory. As illustrated in , this can be achieved using a memory map in which available memory is represented as individual blank function block targets . When a function block (e.g., function block ) is assigned to a blank function target, either by dragging-and-dropping the function block  to the target or through other assignment means, the blank target disappears and the selected function block is displayed in its place. The label in the name bar of the function block (SMF ) corresponds to the memory location of the function block. The number of available blank function block targets  is analogous to the amount of remaining memory space available for addition of more function blocks. When all blank function block targets  have received a function block assignments, no more function blocks can be added to the project intuitively convey an amount of available memory remaining for addition of function blocks to a project.","In one or more embodiments, when a safety monitoring function block is added to a project, as illustrated in , an input reference container  and a signal flow line  between the input reference container  and the function block can be automatically created. Automatically adding the input reference container and signal flow line in this manner can reduce the number of steps required to be taken by the user when adding and configuring a function block.","As illustrated in , the number of input reference containers and associated signal lines that are automatically added to a function block is dependent on the number of inputs required by the function block. For example, safety monitoring function block  in  is a two-channel device requiring two input assignments. Accordingly, to input reference containers  and associated signal flow lines are automatically added to the function block. Similarly, safety input function block  requires four inputs (two N.O. and two N.C. inputs), and so the development environment automatically adds four input reference containers  and associated signal flow lines to when function block  is added to the project. In addition, one or more embodiments of the safety relay configuration system can automatically assign available input terminals to the input reference containers when the function block is added.","In another aspect, certain function blocks supported by the safety monitor configuration system can include hardware configuration parameters for input terminals associated therewith. That is, once an input is assigned to a function block, as illustrated in , the input's hardware configurations can be set via parameter settings on the function block. This can be beneficial for safety relay configurations, since dual-channel safety monitoring functions require two input terminals (e.g., input terminals ) with identical filter times. By including an input filter parameter  on the function block itself, the system enforces application of the same input filter for both terminals.","Similar to the input reference containers, the safety relay configuration system can also automatically create output reference containers and signal flow lines between the output reference containers and the function block when the function block is added to the project. As illustrated in , output reference containers  and associated signal lines are automatically created when function block  is added to the project. In addition, a blank output reference container  and associated signal flow line is added, allowing the user to associate an additional output terminal to the output of safety output function block  if desired. If left blank, this blank output reference container  has no impact on the safety logic. If a terminal selection is made for the blank output reference container , an additional output reference container  is added, as shown in , and a new blank output reference container  is added.","As illustrated in , function blocks supported by the configuration system editing environment can include controls that enable not only assignment of an output terminal to an output of a safety output function block , but also configuration of hardware-related behaviors for the assigned terminal. For example, combo box  allows the user to enable or disable pulse testing for the output terminal assigned in output address container . Combo box  for configuration of the terminal's hardware characteristics can be dynamically updated to display only valid hardware configurations for the particular terminal selected in output address container .","As illustrated in , actionable items on a function block within the logic editor can be differentiated with a distinguishable color to inform the user that the items can be selected or edited.","As illustrated in , the function blocks supported by the editing environment can be organized such that configuration parameters reside in white-banded regions that span the width of the function block, with grey bars separating selected configurable areas.  is an example, non-limiting function block color and dimensional design. It is to be appreciated, however, that the function block design is not limited to the particular colors and dimensions depicted in , and that alterations to this design are within the scope of one or more embodiments of this disclosure.","Also, one or more embodiments of the safety relay configuration system can support multi-purpose terminals capable of acting as either a safety-rated input or a single-wire safety input based on the type of safety monitoring function to which the terminal is assigned. For example, as illustrated in , since terminal EI_ is assigned to the input of a Single-Wire Safety function block , the terminal is configured as a single-wire safety input. If terminal EI_ is alternatively assigned to the input of a Light Curtain function block , as illustrated in , the terminal is configured as a normally-closed safety input.","Similarly, the system can also support multi-purpose output terminals capable of acting as safety-rated outputs or single-wire safety outputs depending on the hardware configuration selected for the output terminal on the function block. For example, in , output terminal EO_ is configured as a safety output with pulse testing, based on selection of \u201cPT\u201d in corresponding combo box . If combo box  is alternatively set to \u201cSWS,\u201d as illustrated in , output terminal EO_ is configured as a single-wire safety output.","In another example, a multi-purpose terminal can be configured to act as either a safety-rated normally-closed input, a safety-rated normally open input, a safety-rated output with pulse testing, a safety-rated output without pulse testing, or as a test pulse terminal depending on either hardware configuration parameters set for the terminal via the function block, or on the particular type of function block to which the multi-purpose terminal is assigned. For example, in , multi-purpose terminal MP_ is assigned as an output to a safety output function  by selection of the terminal in output address combo box , and is configured as a safety output with pulse testing by selection of \u201cPT\u201d (pulse test) in hardware configuration combo box . In , terminal MP_ is alternatively configured as a safety output without pulse testing by selecting \u201cNo PT\u201d in combo box .","In , multi-purpose terminal MP_ is configured as a normally-closed safety input when the terminal is assigned to an input of a light curtain safety monitoring function block  using input address combo box . In , terminal MP_ is configured as a normally-open safety input when the terminal is assigned to a normally open (N.O.) input of a Safety Device safety monitoring function block  using input address combo box . In , multi-purpose input terminal MP_ is configured as a test source when the terminal is assigned to Test Source A of safety monitoring function block  using combo box . Thus, the safety relay configuration system allows a multi-purpose terminal of the safety relay to be easily configured to perform one of multiple functions through assignment and\/or configuration of the terminal directly on a function block in the editing environment.","As illustrated in , each function block can comprise circle-shaped signal flow wiring pins representing input and output points that can be connected on a function block. The circular wiring pins can be inset and located such that the edge of the pin touches the border of the function block. Unassigned pins, such as pin  can be colored differently than pins that have been assigned, such as pin . For example, unassigned pins can be colored blue, while connected pins can be colored grey.","As noted above, some safety relays supported by the safety relay configuration system described herein can support addition of plug-in expansion modules (see ) configured with additional input and\/or output terminals, thereby increasing the number of available terminals for monitoring or output functions. Accordingly, one or more embodiments of the configuration system can automatically map expansion I\/O as available terminals in the function block editing environment. This mitigates the need to perform an additional action to map hardware to memory registers before they can be assigned in a logic editor.","To demonstrate this, illustrates an open address selection combo box  for a function block when no expansion I\/O is configured (i.e., no expansion plug-in module is configured for the project). Since there is no available expansion I\/O, only embedded I\/O terminals (embedded safety input terminals and multi-purpose terminals) are displayed in the combo box. To configure expansion I\/O corresponding to a plug-in module added to the safety relay, the user can add the expansion I\/O to the hardware view, as shown in . Once configured in this manner, the I\/O terminals of the plug-in module are made available as valid selections in their own new category in combo box , as shown in . The act of selecting one of the terminals creates the configuration mapping, as opposed to requiring a separate user action to set up the mapping.","One or more embodiments of the safety relay configuration system can also support a Global Emergency Stop function block. An example Global Emergency Stop function block  is illustrated in . Any safety output function block\u2014such as function block \u2014that is enabled to monitor Global Emergency Stop function block  will go to the safe state (OFF) in the event the Global Emergency Stop function block  is not Active (ON). Since most safety applications require an emergency stop, this functionality enables the user to eliminate a logical AND of the emergency stop with other monitored input conditions.","Some embodiments of the safety relay configuration system can also support creation of Modbus input coils that can always be assigned in the safety logic editor.  illustrates an open address selection combo box  that includes a category for Modbus inputs. As a result of this functionality, the user does not have to create the Modbus input registers; rather, the Modbus input registers are always available as selection. The consequence of assigning a coil that is not actually written to by another Modbus device is insignificant, since the coil will always stay at a value of 0, the safe state of the safety relay.",{"@attributes":{"id":"p-0198","num":"0197"},"figref":"FIG. 58"},"The safety relay configuration system can also be configured to dynamically change the tooltip that displays when hovering a cursor over a function block based on the state of the function block. For example, information relating to fault conditions associated with a function block while monitoring the safety relay during runtime can be displayed in a tooltip window when the cursor is hovered over the function block, as illustrated in . Function blocks can also be configured to change red in color in response to detection of a fault condition associated with the function blocks. When the function block is not experiencing an alarm condition, the tooltip can instead display a message indicating the function of the function block.","Also, embodiments of the safety relay configuration system can include an export feature that exports safety configuration logic to a safety function list. In this way, a list of safety functions can be derived from a safety logic configuration created in the logic editor. Since each safety monitoring function represents a monitored safety device on a machine, and each safety output function represents the final control element on a machine, each safety function on the machine can be identified by tracing each safety monitoring function (e.g., safety monitoring function blocks  and  of ) to each safety output function it acts on in the logic configuration (e.g., safety output function block ). The result can be exported by the configuration system, allowing the user to easily document the safety-related functions for their machines.  illustrates a portion of example safety function documentation resulting from the mapping and exporting.","One or more embodiments of the safety relay configuration system can also support configuration of safety relay LED (light emitting diode) indicators. In this way, users can configure LEDs of the safety relay, via the relay configuration system, to enunciate user-defined status conditions. illustrates an example LED configuration interface  that can be invoked within the development environment of the safety relay configuration system. Using this LED configuration interface , the user can configure one or more LEDs on the safety relay to reflect a user-defined status. To simplify the LED configuration process, the LED configuration interface  includes a Type Filter column  that allows the user, for a given LED, to first select one of several status groupings (e.g., Terminal Status, Safety Monitoring Function Status, Safety Output Function Status, etc.). After a status grouping is selected, a specific list related to the selected status grouping is presented in the corresponding Value combo box . illustrates an example scenario in which Terminal Status is selected as the Type Filter for LED . Accordingly, when the Value combo box for LED  is expanded, a list of terminals  available on the safety relay is displayed. Selection of a terminal from the list of terminals  configures LED  to control its state based on the status of the selected terminal. By allowing the user to configure the behavior of individual LEDs on the safety relay, the safety relay configuration system affords a greater degree of flexibility in communicating the status details through the LEDs compared with traditional fixed LED function mapping.","As noted above, the safety relay configuration system can also be used to monitor the safety relay logic during runtime after the relay logic has been developed and downloaded to the safety relay. The monitoring interface can include a number of graphical features that can help the user to quickly assess the current status of the safety system. For example, during runtime monitoring, the system can cause a safety output function block to blink between two different colors (e.g., gray and green) when the safety circuit associated with the safety output function block is in condition to be reset but is awaiting a reset command. This scenario occurs when all required input conditions for the safety circuit are satisfied, but the reset command has not yet been received from the user. As illustrated in , the system can cause the input signal flow line  connected to the input of safety output function block  to turn green when all required input conditions for the safety output function block  are satisfied. The outputs  of safety output function block  remain gray (not energized) since the reset signal has not yet been received. To alert the user that the safety circuit associated with safety output function block  is ready to be reset, the system can cause the function block to blink between two colors (e.g., green and gray) to indicate that a reset is required before the outputs  will energize, as illustrated in ","Embodiments, systems, and components described herein, as well as industrial control systems and industrial automation environments in which various aspects set forth in the subject specification can be carried out, can include computer or network components such as servers, clients, programmable logic controllers (PLCs), communications modules, mobile computers, wireless components, control components and so forth which are capable of interacting across a network. Computers and servers include one or more processors\u2014electronic integrated circuits that perform logic operations employing electric signals\u2014configured to execute instructions stored in media such as random access memory (RAM), read only memory (ROM), a hard drives, as well as removable memory devices, which can include memory sticks, memory cards, flash drives, external hard drives, and so on.","Similarly, the term PLC as used herein can include functionality that can be shared across multiple components, systems, and\/or networks. As an example, one or more PLCs can communicate and cooperate with various network devices across the network. This can include substantially any type of control, communications module, computer, Input\/Output (I\/O) device, sensor, actuator, and human machine interface (HMI) that communicate via the network, which includes control, automation, and\/or public networks. The PLC can also communicate to and control various other devices such as I\/O modules including analog, digital, programmed\/intelligent I\/O modules, other programmable controllers, communications modules, sensors, actuators, output devices, and the like.","The network can include public networks such as the internet, intranets, and automation networks such as control and information protocol (CIP) networks including DeviceNet, ControlNet, and Ethernet\/IP. Other networks include Ethernet, DH\/DH+, Remote I\/O, Fieldbus, Modbus, Profibus, CAN, wireless networks, serial protocols, and so forth. In addition, the network devices can include various possibilities (hardware and\/or software components). These include components such as switches with virtual local area network (VLAN) capability, LANs, WANs, proxies, gateways, routers, firewalls, virtual private network (VPN) devices, servers, clients, computers, configuration tools, monitoring tools, and\/or other devices.","In order to provide a context for the various aspects of the disclosed subject matter,  as well as the following discussion are intended to provide a brief, general description of a suitable environment in which the various aspects of the disclosed subject matter may be implemented.","With reference to , an example environment  for implementing various aspects of the aforementioned subject matter includes a computer . The computer  includes a processing unit , a system memory , and a system bus . The system bus  couples system components including, but not limited to, the system memory  to the processing unit . The processing unit  can be any of various available processors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit .","The system bus  can be any of several types of bus structure(s) including the memory bus or memory controller, a peripheral bus or external bus, and\/or a local bus using any variety of available bus architectures including, but not limited to, 8-bit bus, Industrial Standard Architecture (ISA), Micro-Channel Architecture (MSA), Extended ISA (EISA), Intelligent Drive Electronics (IDE), VESA Local Bus (VLB), Peripheral Component Interconnect (PCI), Universal Serial Bus (USB), Advanced Graphics Port (AGP), Personal Computer Memory Card International Association bus (PCMCIA), and Small Computer Systems Interface (SCSI).","The system memory  includes volatile memory  and nonvolatile memory . The basic input\/output system (BIOS), containing the basic routines to transfer information between elements within the computer , such as during start-up, is stored in nonvolatile memory . By way of illustration, and not limitation, nonvolatile memory  can include read only memory (ROM), programmable ROM (PROM), electrically programmable ROM (EPROM), electrically erasable PROM (EEPROM), or flash memory. Volatile memory  includes random access memory (RAM), which acts as external cache memory. By way of illustration and not limitation, RAM is available in many forms such as synchronous RAM (SRAM), dynamic RAM (DRAM), synchronous DRAM (SDRAM), double data rate SDRAM (DDR SDRAM), enhanced SDRAM (ESDRAM), Synchlink DRAM (SLDRAM), and direct Rambus RAM (DRRAM).","Computer  also includes removable\/non-removable, volatile\/non-volatile computer storage media.  illustrates, for example a disk storage . Disk storage  includes, but is not limited to, devices like a magnetic disk drive, floppy disk drive, tape drive, Jaz drive, Zip drive, LS-100 drive, flash memory card, or memory stick. In addition, disk storage  can include storage media separately or in combination with other storage media including, but not limited to, an optical disk drive such as a compact disk ROM device (CD-ROM), CD recordable drive (CD-R Drive), CD rewritable drive (CD-RW Drive) or a digital versatile disk ROM drive (DVD-ROM). To facilitate connection of the disk storage  to the system bus , a removable or non-removable interface is typically used such as interface .","It is to be appreciated that  describes software that acts as an intermediary between users and the basic computer resources described in suitable operating environment . Such software includes an operating system . Operating system , which can be stored on disk storage , acts to control and allocate resources of the computer . System applications  take advantage of the management of resources by operating system  through program modules  and program data  stored either in system memory  or on disk storage . It is to be appreciated that one or more embodiments of the subject disclosure can be implemented with various operating systems or combinations of operating systems.","A user enters commands or information into the computer  through input device(s) . Input devices  include, but are not limited to, a pointing device such as a mouse, trackball, stylus, touch pad, keyboard, microphone, joystick, game pad, satellite dish, scanner, TV tuner card, digital camera, digital video camera, web camera, and the like. These and other input devices connect to the processing unit  through the system bus  via interface port(s) . Interface port(s)  include, for example, a serial port, a parallel port, a game port, and a universal serial bus (USB). Output device(s)  use some of the same type of ports as input device(s) . Thus, for example, a USB port may be used to provide input to computer , and to output information from computer  to an output device . Output adapters  are provided to illustrate that there are some output devices  like monitors, speakers, and printers, among other output devices , which require special adapters. The output adapters  include, by way of illustration and not limitation, video and sound cards that provide a means of connection between the output device  and the system bus . It should be noted that other devices and\/or systems of devices provide both input and output capabilities such as remote computer(s) .","Computer  can operate in a networked environment using logical connections to one or more remote computers, such as remote computer(s) . The remote computer(s)  can be a personal computer, a server, a router, a network PC, a workstation, a microprocessor based appliance, a peer device or other common network node and the like, and typically includes many or all of the elements described relative to computer . For purposes of brevity, only a memory storage device  is illustrated with remote computer(s) . Remote computer(s)  is logically connected to computer  through a network interface  and then physically connected via communication connection . Network interface  encompasses communication networks such as local-area networks (LAN) and wide-area networks (WAN). LAN technologies include Fiber Distributed Data Interface (FDDI), Copper Distributed Data Interface (CDDI), Ethernet\/IEEE 802.3, Token Ring\/IEEE 802.5 and the like. WAN technologies include, but are not limited to, point-to-point links, circuit switching networks like Integrated Services Digital Networks (ISDN) and variations thereon, packet switching networks, and Digital Subscriber Lines (DSL).","Communication connection(s)  refers to the hardware\/software employed to connect the network interface  to the system bus . While communication connection  is shown for illustrative clarity inside computer , it can also be external to computer . The hardware\/software necessary for connection to the network interface  includes, for exemplary purposes only, internal and external technologies such as, modems including regular telephone grade modems, cable modems and DSL modems, ISDN adapters, and Ethernet cards.",{"@attributes":{"id":"p-0215","num":"0214"},"figref":"FIG. 65","b":["6500","6500","6502","6502","6500","6504","6504","6504","6502","6504","6500","6506","6502","6504","6502","6508","6502","6504","6510","6504"]},"What has been described above includes examples of the subject innovation. It is, of course, not possible to describe every conceivable combination of components or methodologies for purposes of describing the disclosed subject matter, but one of ordinary skill in the art may recognize that many further combinations and permutations of the subject innovation are possible. Accordingly, the disclosed subject matter is intended to embrace all such alterations, modifications, and variations that fall within the spirit and scope of the appended claims.","In particular and in regard to the various functions performed by the above described components, devices, circuits, systems and the like, the terms (including a reference to a \u201cmeans\u201d) used to describe such components are intended to correspond, unless otherwise indicated, to any component which performs the specified function of the described component (e.g., a functional equivalent), even though not structurally equivalent to the disclosed structure, which performs the function in the herein illustrated exemplary aspects of the disclosed subject matter. In this regard, it will also be recognized that the disclosed subject matter includes a system as well as a computer-readable medium having computer-executable instructions for performing the acts and\/or events of the various methods of the disclosed subject matter.","In addition, while a particular feature of the disclosed subject matter may have been disclosed with respect to only one of several implementations, such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore, to the extent that the terms \u201cincludes,\u201d and \u201cincluding\u201d and variants thereof are used in either the detailed description or the claims, these terms are intended to be inclusive in a manner similar to the term \u201ccomprising.\u201d","In this application, the word \u201cexemplary\u201d is used to mean serving as an example, instance, or illustration. Any aspect or design described herein as \u201cexemplary\u201d is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the word exemplary is intended to present concepts in a concrete fashion.","Various aspects or features described herein may be implemented as a method, apparatus, or article of manufacture using standard programming and\/or engineering techniques. The term \u201carticle of manufacture\u201d as used herein is intended to encompass a computer program accessible from any computer-readable device, carrier, or media. For example, computer readable media can include but are not limited to magnetic storage devices (e.g., hard disk, floppy disk, magnetic strips . . . ), optical disks [e.g., compact disk (CD), digital versatile disk (DVD) . . . ], smart cards, and flash memory devices (e.g., card, stick, key drive . . . )."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 39"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 40"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 41"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 42"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 43"},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 44"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 45"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 46"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 46"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 47"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 48"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 49"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 50"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 51"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 51"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 52"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 52"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 53"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 53"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 53"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 53"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 53"},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 54"},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 55"},{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 55"},{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 55"},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 56"},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 57"},{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 58"},{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 59"},{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 60"},{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 61"},{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 62"},{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 62"},{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 63"},{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 63"},{"@attributes":{"id":"p-0089","num":"0088"},"figref":"FIG. 64"},{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 65"}]},"DETDESC":[{},{}]}
