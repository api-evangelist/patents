---
title: Method of performing software updates (installations), on networked 32/64-bit microsoft computers in an automated environment without introducing a possible security threat
abstract: A method of monitoring all network communications, including a real-time analysis of intercepting all networked connections and closing those network connections, including all connections across the Internet, except for those specific connections that will function to update a networked computer with new software or updates to existing software.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08375418&OS=08375418&RS=08375418
owner: CW International, LLC
number: 08375418
owner_city: Ellwood City
owner_country: US
publication_date: 20070907
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims benefit of priority to U.S. Provisional Patent Application No. 60\/824,823, filed Sep. 7, 2006, which is herein incorporated in its entirety by reference.","1. Field of Invention","This method of invention relates generally to the field of network utility professional programming, and more particularly but not exclusively, to monitoring network communication connections, methods of intercepting network communications connections and closing all networked connections, except those connections that function to update a networked computer with new software or updated software.","2. Background of Invention","As networking and automation expands in business and organizations, one of the most important new technical capabilities in today's modern network computing, is the ability for organizations to automatically install new software, or automatically update existing software across a network. In essence, organizations have the capability to allow \u201cconnectivity\u201d from their Local Area Network, (LAN), to the Internet and any other public network (organization), which in turn can update that particular network with new software, or updates to the current software installed within the network. For example, it is very common for an anti-virus vendor to update individual PCs attached to a network via the Internet with new file signature data more than once during any given 24 hour period. Another example is the use of network management tools, which have the ability to automatically update large networks (i.e., wide area networks\u2014WANs), with any kind of software, from small individual programs to a major operating system (O\/S) service pack update.","Another issue, is that a 32\/64-bit Microsoft computer automatically creates hidden \u201cadministrative shares\u201d for its logical drives C:, D:, etc., which it names C$, D$, etc., respectively. The 32\/64-bit Microsoft computer also creates an Admin$ hidden share for the \\WINNT or \\Windows folder. Domain administrators design these shares for remote access support. By default, if these administrative shares are deleted, they are automatically recreated when the computer is rebooted. These active \u201cadministrative shares\u201d allow any individual user, to remotely log into a 32\/64-bit Microsoft computer, if the remote user knows the system name and password of that particular computer. Other shares may also be of issue, including, but not limited to, an ipc$ share, which is a network share that is used to facilitate communication between processes and computers. This share is often used to exchange authentication data between computers.","The biggest issue with the majority of the network management tools available to perform automatic network updates is that they require their solutions be applied in the form of configuration \u201cabsolutes\u201d, that is, \u201cone size fits all,\u201d without any consideration for how the networked computer should function when it is not receiving automatic authorized software updates, but operating in a normal production environment. As an example, many networked solutions require that an \u201cadministrative share\u201d be configured into each networked computer, to allow the network management tool that resides on a remote computer, to access and update each networked computer anytime the network is operational. If the \u201cadministrative share\u201d is configured and active during the entire time each networked computer is turned on, then this \u201cadministrative share\u201d allows an individual user, who is connected via a network computer and is probing the network with various tools, to possibly obtain an authorized system name and password to a networked computer and then remotely login to the networked computer (i.e., a successful unauthorized security penetration of the networked computer).","Because of the problems described in the previous paragraphs, a new technology (such as, for example, a utility) is needed that has the ability to allow network management tool(s) to securely perform automated software updates on, a networked computer, for example, a 32\/64-bit Microsoft PC or Server. In addition, the utility should also insure the security of the networked computer during the time of the automated software updates and during those periods that the networked computer is not receiving any automated software updates from the network management tool(s).","In accordance with an embodiment of the present invention, a method includes executing and performing an analysis of a networked 32\/64-bit Microsoft computer's, for example, a 32\/64-bit Microsoft PC's and\/or server's, internal communications configuration, and then configuring the computer to allow network management tool(s) to perform automated software updates on the networked 32\/64-bit Microsoft PC and\/or Server, while also insuring the security of the networked computer during the time of the automated software updates and during those periods that the networked computer is not receiving any automated software updates from the network management tool(s).","In the description herein, general details are provided in flow diagrams, to provide a general understanding of the programming methods that will assist in an understanding of embodiments of the inventive methods. One skilled in the relevant art of programming will recognize, however, that the invention method can be practiced without one or more specific details, or in other programming methods. Terms referenced throughout this specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present inventive method. Thus, the appearance of the phrases \u201cin one embodiment\u201d or \u201cin an embodiment\u201d in places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.","As an overview, the ability for a programmer to design and develop an operating system (O\/S) utility may be based on the capabilities of the O\/S NetAPI functions, Winsock and those functions that allow an interface to gather information critical to files that reside within the O\/S Winsock. In accordance with one or more embodiments of the present invention, the O\/S utility may be developed or implemented in a variety of programming languages ranging from low-level, programming languages (e.g., but not limited to, assembler) to high-level programming languages (e.g., but not limited to, C++, Visual Basic, Java, Java Beans, etc.). The O\/S utility may be stored or encoded as an executable file on a machine-readable and\/or a computer-readable medium (e.g., but not limited to, a floppy disk, a hard drive, a flash drive, a bubble memory, a Read Only Memory (ROM), a Random Access Memory (RAM), or the like) and\/or hardwired into one or more integrated circuits (e.g., an Electrically Erasable Programmable Read Only Memory (EEPROM), an Erasable Programmable Read Only Memory (EPROM), etc.).","In accordance with one or more embodiments of the present invention, the O\/S utility may be developed or implemented in a variety of programming languages ranging from low-level, programming languages (e.g., but not limited to, assembler) to high-level programming languages (e.g., but not limited to, C++, Visual Basic, Java, Java Beans, etc.). The O\/S utility may be stored or encoded as an executable file on a machine-readable and\/or a computer-readable medium (e.g., but not limited to, a floppy disk, a hard drive, a flash drive, a bubble memory, a Read Only Memory (ROM), a Random Access Memory (RAM), or the like) and\/or hardwired into one or more integrated circuits (e.g., an Electrically Erasable Programmable Read Only Memory (EEPROM), an Erasable Programmable Read Only Memory (EPROM), etc.).",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 1","FIG. 1"],"b":["110","200","300","400","500","505","505","600","505","700","800"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 2","FIG. 2"],"b":["201","200","210","220","210","220","230","231","232","240","241","241","242","300"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 3","FIG. 3"],"b":["301","300","310","320","330","340","400"]},"Referring back to , there is shown the retrieving () all communications connection policies (i.e., TCP connection policies), which specifically are retrieved by executing a fopen( ) function, a fread( ) function, and decrypted by establishing an interlink\/interface into an operating system crypto API. When the policy data file is decrypted, it is applied to the functions that initiate extended parallel threads to monitor all formal TCP connections to determine () whether each network connection is from an approved connection from the private access network. For example, the software update policy defines a specific IP address, such as the following: Allow Software Updates (Installations)\u2014example 100.200.100.101.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 4","FIG. 4"],"b":["500","510","520"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 5","FIG. 5"],"b":["510","511","512","513","514","515","519","516","519","518","516","517"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 6","FIG. 6"],"b":["520","521","522","524","523"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 7","FIG. 7","FIG. 7"],"b":["700","710","715","710","715","700","720","710","700","730","710","740","715","715","710","710"]},"It is contemplated that embodiments of the present invention may also be used with computer\/server systems that include additional elements not included in computer system  in . For example, these addition elements may include, but are not limited to, additional processing units (e.g., parallel processing units, graphics processing units, etc.), bridges and\/or interfaces to a variety of peripherals (e.g., monitor, keyboard, mouse, printer, joystick, biometric devices, speakers, external communications devices (e.g., a LAN, a WAN, a modem, a router, etc.)).","Additionally, any configuration of the computer system in  may be used with the various embodiments of the present invention. The executable instructions (i.e., computer program) implementing the present invention may be stored in any memory or storage device accessible to processing unit , for example, but not limited to, volatile memory , mass storage device , or any other local or remotely connected memory or storage device.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 8","FIG. 8","FIG. 8"],"b":["810","815","820","825","830","840","810","845","825","830","840","810","850","810","855","810","810","860","865","850","860","815","825","870","820","875","820"]},"Thus, various embodiments provide one or more means for executing and performing an analysis of a networked 32\/64-bit Microsoft computer's and\/or server's internal communications configuration, configuring the computer to allow network management tool(s) to perform automated software updates on the networked 32\/64-bit Microsoft PC and\/or Server, but also insuring the security of the networked computer and\/or server during the time of the automated software updates and during those periods that the networked computer and\/or server is not receiving any automated software updates from the network management tool(s).","In accordance with one or more embodiments, each of the features of the present invention may be separately and independently claimed. Likewise, in accordance with one or more embodiments, each utility program, program, and\/or code segment\/module may be substituted for an equivalent means capable of substantially performing the same function(s).","In accordance with an embodiment of the present invention, a method may include reading a networked computer's software update policy, performing an analysis of the networked computer, monitoring all formal connections and enforcing the formal software update policy as defined by a software update policy file.","In accordance with an embodiment of the present invention, a method as substantially shown and described herein.","In accordance with another embodiment of the present invention, a system and method as substantially shown and described herein.","In accordance with yet another embodiment of the present invention, a computer and method as substantially shown and described herein.","In accordance with still another embodiment of the present invention, a network computer and method as substantially shown and described herein.","Although the present invention has been disclosed in detail, it should be understood that various changes, substitutions, and alterations can be made herein. Moreover, although software and hardware are described to control certain functions, such functions can be performed using either software, hardware or a combination of software and hardware, as is well known in the art. Other examples are readily ascertainable by one skilled in the art and can be made without departing from the spirit and scope of the present invention as defined by the following claims."],"BRFSUM":[{},{}],"heading":["FIELD OF INVENTION","SUMMARY","DETAILED DESCRIPTION OF ILLUSTRATED EMBODIMENTS"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":["Non-limiting and non-exhaustive embodiments of the present invention are described with reference to the following figures, wherein like reference numerals refer to like parts throughout the various views unless otherwise precisely specified.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
