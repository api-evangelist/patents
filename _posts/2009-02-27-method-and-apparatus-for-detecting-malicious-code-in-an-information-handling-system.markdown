---
title: Method and apparatus for detecting malicious code in an information handling system
abstract: A method for detecting malicious code on an information handling system includes executing malicious code detection code (MCDC) on the information handling system. The malicious code detection code includes detection routines. The detection routines are applied to executable code under investigation running on the information handling system during the execution of the MCDC. The detection routines associate weights to respective executable code under investigation in response to detections of a valid program or malicious code as a function of respective detection routines. Lastly, executable code under investigation is determined a valid program or malicious code as a function of the weights associated by the detection routines. Computer-readable media and an information handling system are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07930751&OS=07930751&RS=07930751
owner: Symantec Corporation
number: 07930751
owner_city: Mountain View
owner_country: US
publication_date: 20090227
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application is a divisional of U.S. application Ser. No. 10\/231,557, filed Aug. 30, 2002, now U.S. Pat. No. 7,748,039 which is incorporated by reference herein in its entirety.","The present disclosure relates generally to information handling systems, and more particularly to a method and apparatus for detection of malicious computer code in the form of a Trojan horse in an information handling system.","Trojan Horses (\u201cTrojans\u201d) are a particular type of malicious code. Malicious code is code that executes on an information handling system, typically a computer, but it can also be a Personal Digital Assistant or other information handling device, and is intended to damage the computer, alter the computer without the permission of the computer's user, or use the computer against the wishes of the computer's user. The Trojan horse is executable code that can exist in one of many forms. For example, some but not all of the forms that Trojans can be instantiated in executable code are as one or more programs, threads inside other programs, plugins or shared modules loaded by other programs, or modules loaded into operating system kernel memory in the manner of a device driver or loadable kernel module. A Trojan is a form of malicious code that enables a person to remotely control someone else's computer. The person who remotely controls the computer is known as the \u201cEvil Hacker\u201d while the person whose computer is being remotely controlled is known as the \u201cInnocent Victim\u201d. BackOrifice 2000, SubSeven, NetBus and OptixPro are all examples of Trojans. Trojans are sometimes referred to as \u201cback-doors\u201d or \u201chacker back-doors.\u201d","Most Trojans have two components, the client program (Trojan Client) that is run on the Evil Hacker's computer and the server program (Trojan Server) that is run on the Innocent Victim's computer. Some Trojans have only a Trojan Server that can be remotely controlled through manually entered commands rather than through the programmatic interface of a Trojan Client.","Trojans can be used by Evil Hackers to disrupt the normal operation of the Innocent Victim's computer, to spy on the Innocent Victim, to steal money from the Innocent Victim, or to steal intellectual property from the Innocent Victim. The Evil Hacker often uses the Innocent Victim's computer to perform these malicious activities in order to harm the organization to which the Innocent Victim belongs. Trojans can thus harm computer systems, whether or not the particular computer systems belong to an individual, a company, organization, or government.","There are many ways to infect a computer with a Trojan including sending the Innocent Victim the Trojan Server disguised as a valid program, copying the Trojan Server onto the Innocent Victim's computer, or exploiting a vulnerability in the Innocent Victim's computer to place the Trojan Server on the computer.","Several techniques exist that are effective for detecting some forms of malicious code. For example, some types of malicious code can be detected by examining the binary code image of the running program or the binary image of the program when it is stored on a storage device. Many malicious code programs can be identified by a unique bit or byte pattern. The unique bit or byte pattern can comprise the entire image of the program while it is in memory or while it is stored on disk. The signature can also be a bit or byte pattern that is a portion of the program in memory or on disk. Once the unique sequence has been identified, a signature can be developed to identify the sequence. The signature is often the bit or byte pattern itself or it is in the form of a checksum. A detection program can then search for a malicious code program using the signature to identify the unique bit or byte sequence. Trojans, however, can be configured so that they have no easily identifiable signature. Trojans have configuration parameters that change the bit or byte sequences in the program and make it difficult or impossible to provide a unique signature. There are many tools available that can be used to reconfigure a Trojan so that it will not have a known signature.","Another technique used to identify malicious code examines the behavior of a Trojan Server while the Trojan Server is loaded and installed on a computer. With such a technique, a loaded and installed program is first placed into a Sandbox. The Sandbox comprises a restricted area on the computer where the program (e.g., Trojan Server) can be examined safely. While such an approach may be effective for preventing some Trojan infection, the approach does not however detect Trojan Servers once they are already installed on a computer. Such an approach does not detect many Trojan Servers because Trojans do not exhibit their most characteristic behaviors while they are being loaded or installed, but rather they come alive and exhibit their malicious behavior after they have been loaded and installed.","Accordingly, it would be desirable to provide an improved method for detecting Trojans in a computer system and overcoming problems in the art discussed above.","A method for detecting malicious code on an information handling system includes executing malicious code detection code on the information handling system. The malicious code detection code includes detection routines. The detection routines are applied to executable code under investigation running on the information handling system during the execution of the malicious code detection code. The detection routines assign weights to respective executable code under investigation in response to detections of a valid program or malicious code as a function of respective detection routines. Lastly, executable code under investigation is determined a valid program or malicious code based on scores that are determined as a function of the weights assigned by the detection routines. Computer-readable media and an information handling system are also disclosed.","In , a system block diagram of an information handling system  for implementing the method of detecting a Trojan according to one embodiment of the present disclosure is shown. Information handling system  including one or more of: a central processing unit (CPU) , memory , input\/output (I\/O) devices, such as a display, a keyboard, a mouse, and associated controllers, collectively designated by a reference numeral , a hard disk drive , or other storage devices or media drives, such as may include a floppy disk drive, a CD-ROM drive, a DVD drive, and the like, collectively designated by a reference numeral , or various other subsystems, such as a network interface card, wireless communication link, etc, collectively designated by a reference numeral , all interconnected, for example, via one or more buses, shown collectively as a bus . Examples of information handling system may include a computer system, a personal digital assistant, a thin client device, a thick client device, or similar information handling device.","In one embodiment, information handling system (IHS)  is configured with a suitable operating system to install and run executable code, programs, etc., from one or more computer readable media , such as a floppy disk, CD-ROM, DVD, or the like. Information handling system  may further be configured for communicating with another information handling system , for example, through a network  via a suitable communication link or links. The operating system of IHS  may also be configured to install and run programs, download data, etc., via network . The illustrative embodiments of the present disclosure may be practiced over an Intranet, the Internet, virtual private network, or other suitable communication network.","According to one embodiment, the method of Trojan detection is implemented in the form of computer software, the computer software comprising instructions executable by the CPU of a computer system, for example, an Innocent Victim's computer system. The instructions include suitable program code processable by the computer system for performing the various functions as described herein. The various functions as discussed herein can be programmed using programming techniques well known in the art.","A novel method for detecting Trojans includes a method for detecting a server portion of a Trojan residing on a target computer system, for example, an innocent victim computer system. Furthermore, the method identifies the server portion of the Trojan when the server portion is executing on the target computer. As briefly discussed above, most Trojans have two components, a client program (Trojan Client) that is run on an Evil Hacker's computer and the server program (Trojan Server) that is run on the Innocent Victim's computer.","Accordingly, the method of detecting a Trojan includes a procedure for detecting a Trojan Server, i.e. the portion of a Trojan that resides on the Innocent Victim's computer system. The procedure can be embodied in a computer program, for example, a Trojan detection program. The Trojan detection program detects the presence of a Trojan while it is executing on a computer.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2","b":["40","40","42","44","42","46","48","50","60"]},"In one embodiment, the Trojan detection program operates as follows. The Trojan detection program executes at any time, on an as-needed basis, a periodic basis, a random basis, another scheduled basis, or on an event driven basis in response to a particular event according to the particular requirements of a given situation. When the Trojan detection program executes, it examines the characteristics and behaviors of all computer programs that are executing at the current time on the subject computer system. The Trojan detection program evaluates each computer program that is running on the computer system under investigation, to determine whether the running computer program is a valid program or a Trojan.","The Trojan detection program  contains detection routines , including valid program detection routines  and Trojan detection routines . The valid program detection routines  include one or more routines identified by v, v, v, . . . , vin . The valid program detection routines  are configured to determine whether the program under investigation has characteristics and behaviors usually associated with a valid program. The Trojan detection routines  include one or more routines identified by t, t, t, . . . , tin . The Trojan detection routines  are configured to determine whether the program under investigation has characteristics and behaviors usually associated with a Trojan.","In one embodiment, the valid program detection routines  and the Trojan detection routines  are configured to gather information about each program under investigation by examining the program itself and by looking for information about the program in the operating system . The detection routines  access information from the operating system  using application programming interfaces (APIs)  to the operating system. The API's  can include documented API's, undocumented API's, direct access to resources of the computer or information handling system such as memory or network connections, or kernel or device driver interfacing. The detection routines  gather information from the program itself by examining one or more of a binary image of the program that is stored in memory, a binary image of the program that is stored on disk or other media, the characteristics and behavior of the program, and any other related programs (such as libraries used by the program under investigation), represented by reference numerals  and  in .","For example, a detection routine  can be configured to take into account the following. Many Trojans log keystrokes on the Innocent Victim's computer and transmit the keystroke data from the Innocent Victim's computer to the Evil Hacker's computer. In one embodiment, a Trojan detection routine  determines whether or not the program being examined is logging keystrokes. Since there are many different ways for a program to log keystrokes, one or more of the Trojan detection routines  can be configured to examine the program under investigation to determine whether the program is using any of a number of different mechanisms for logging keystrokes.","The Trojan detection program  further includes a scoring algorithm . The scoring algorithm calculates two scores\u2014a valid program score  and a Trojan score . If the result of a valid program detection routine  indicates that the characteristic or behavior of the program being examined was that of a valid program, then a weight, W, is associated with the routine and that weight contributes positively to the valid program score . A weight, W, is assigned to each valid program detection routine, for i=1 to M, where M is the number of the valid program detection routine.","If the result of a Trojan detection routine  indicates that the characteristic or behavior of the program being examined was that of a Trojan, then a weight, W, is associated with the routine and that weight contributes positively to the Trojan score . A weight, W, is assigned each Trojan detection routine, for j=1 to N, where N is the number of the Trojan detection routine.","According to one embodiment, the scoring algorithm  comprises an algorithm that includes an algebraic formula for determining the two scores  and . The scoring algorithm is dependent on the valid program detection routines  and the weights, W, associated with each valid program detection routine, in addition to, the Trojan detection routines  and the weights W, associated with each Trojan detection routine. The algebraic formula or equation can also be made arbitrarily complex, for example, to include associating weights to one or more to combinations of detection routines .","In one embodiment, the scoring algorithm  includes an algebraic equation defined as a sum of weighted values. For example, the algebraic equation for the valid program detection routines can include an equation as given by:",{"@attributes":{"id":"p-0028","num":"0027"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mi":"VALIDSCORE","mo":"=","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"M"},"mo":"\u2062","msub":{"mi":["W","i"]}}},"mo":","}}},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":"where W=weight of a valid detection routine vfor i=1 to M."}}}},"Similarly, the algebraic equation for the Trojan detection routines can include an equation as given by:",{"@attributes":{"id":"p-0030","num":"0030"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mi":"TROJANSCORE","mo":"=","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"j","mo":"=","mn":"1"},"mi":"N"},"mo":"\u2062","msub":{"mi":["W","j"]}}},"mo":","}}},"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":"where W=weight of a Trojan detection routine tfor j=1 to N."}}}},"In another embodiment, more complex forms of the scoring algorithm  can be implemented in the form of more sophisticated algebraic formulae.","If a program under investigation exceeds a valid program score threshold, V, then it is determined that the program is a valid program. If that program exceeds a Trojan score threshold, T, then it is determined that the program is a Trojan program. If a program is deemed to be valid using the valid algorithm, then it is sometimes removed from consideration from additional Trojan score routines.","Executable code and\/or programs under investigation may also have some of the characteristics and behaviors of valid programs and some of the characteristics and behaviors of Trojans. If a program does not exceed either threshold or if a program does not have a significant difference between the valid program score  and the Trojan score , then according to another embodiment of the present disclosure, the method identifies the program in another category of Suspicious","Programs or Anomalous Programs.","In one embodiment, the method for detecting malicious code on a computer system includes executing a malicious code detection program on the computer system. The malicious code detection program includes detection routines. The malicious code detection program applies the detection routines to programs running on the computer system during the execution of the malicious code detection program. The detection routines are assigned weights that are factored by a scoring algorithm to determine a composite score based on the results of the detection routines and their associated weights. For example, a malicious code detection routine has a weight associated with it, such that if the malicious code detection routine determines that a given code under investigation is a Trojan, then the weight is applied positively towards the malicious code score for the code under investigation. Lastly, the malicious code detection program determines whether one or more programs of all programs running on the computer system during operation of the malicious code detection program is a valid program or malicious code as a function of the weights assigned to the detection routines.","In another embodiment, the method is configured to detect malicious code in the form of a Trojan horse on a computer having an operating system. The method includes executing a malicious code detection program on the computer. Detection routines of the malicious code detection program are configured to gather information about programs running on the computer during execution of the malicious code detection program. The detection routines include at least one selected from the group consisting of a) examining each executable code or program itself and b) searching for information about each executable code or program in the operating system. For example, examining code or a program can include examining a binary image of the same, wherever the binary image may reside, within the IHS or in computer readable media accessible to the IHS. In addition, the detection routines further consist of valid program detection routines and malicious code detection routines.","The malicious code detection program applies the detection routines to the programs running on the computer. In response to a detection of a valid program or malicious code, the detection routines assigns weights to respective programs under test as a function of a respective detection routine. Lastly, the malicious code detection program determines whether a program is a valid program or malicious code as a function of the weights assigned by the detection routines. Determining whether the program is a valid program or malicious code involves the scoring of an execution of each detection routine as a function of a respective weight. A scoring algorithm is used to identify a program as malicious code in response to a valid score and a malicious code score, as discussed herein.","In yet another embodiment, the method for detecting malicious code on a computer system includes executing detection routines, the detection routines having been configured to examine at least one selected from the group consisting of characteristics and behaviors of programs running on the computer system. For example, the detection routines can be configured to access process behavior data of a program running on the computer system. In addition, the characteristics and behaviors may include one or more of logging keystrokes, saving a display screen view, uploading files, downloading files, running programs, and controlling a display screen of the computer system.","Subsequent to execution of one or more of the detection routine, weights are assigned as a function of the examined characteristics and behaviors, the assigned weights indicative of a valid program or malicious code as a function of respective detection routines. Lastly, the method determines whether a program is malicious code as a function of the weights assigned by the detection routines.","In the embodiment of the previous paragraph, the detection routines include valid program detection routines and malicious code detection routines. The valid program detection routines are configured to determine whether the program exhibits at least one or more characteristics and behaviors associated with a valid program. The malicious code detection routines are configured to determine whether the program exhibits at least one or more characteristics and behaviors associated with malicious code.","In one embodiment, the method of detecting Trojans is carried out in the form of a computer program. The computer program is executed on a desired computer system for detecting any potential Trojans present on the computer system. Execution of the computer program continues until all active programs on the computer system have been tested and evaluated. Alternatively, other criteria may is be established for a duration of testing with the Trojan detection program. For example, execution of the malicious code detection program can be configured to occur in response to one or more of a random initiation and a periodic initiation.","According to another embodiment, the Trojan detection program comprises a small program configured for being delivered quickly, as well as, for being executed quickly. The Trojan detection program can be delivered to the innocent victim's computer over a network, such as a Local Area Network (LAN), Wide Area Network (WAN), Internet, intranet, or any other global computer network . The Trojan detection program may also be delivered via suitable computer readable media, such as, media  shown in .","While not stopping an infection of the computer system with Trojans, the method of the present embodiments identifies a Trojan when executing on a computer system. The method of identifying a Trojan could be combined with other methods, for example, a method for detecting infection, resulting in a more robust computer system malicious code protection implementation.","Although only a few exemplary embodiments have been described in detail above, those skilled in the art will readily appreciate that many modifications are possible in the exemplary embodiments without materially departing from the novel teachings and advantages of the embodiments of the present disclosure. Accordingly, all such modifications are intended to be included within the scope of the embodiments of the present disclosure as defined in the following claims. In the claims, means-plus-function clauses are intended to cover the structures described herein as performing the recited function and not only structural equivalents, but also equivalent structures."],"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
