---
title: Automatic testing of graphics programs
abstract: A method and system to automatically test graphical output. A graphical output is generated in a format that permits automatic comparison with a reference graphic. The reference graphic is created and retained in the test format. The test format reference graphic is compared with the test format output graphic. The results of the comparison are used to generate a report of the discrepancies between the reference graphic and the output graphic.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07417632&OS=07417632&RS=07417632
owner: SAP AG
number: 07417632
owner_city: Walldorf
owner_country: DE
publication_date: 20041202
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["1. Field","Embodiments of the invention relate to graphical testing. More specifically, embodiments of the invention relate to automated testing of graphical outputs of computer programs.","2. Background","A time consuming and expensive part of any software development is testing to insure that the developed software behaves in the expected and desired manner. Such testing must be repeated any time there is a code change in the software. This testing is particularly problematic in the context of programs that produce graphical output, such as business graphics, Gantt charts, etc. One problem with graphical output is that it cannot be tested in an automated fashion. Current testing protocols require visual inspection of all possible picture types that the software can produce against a master picture for the particular data set. This visual inspection is both time consuming and unreliable. The visual inspector may easily overlook small details of potentially very large graphic images. Additionally, such testing relies on the visual acuity of the particular tester, which may have high variability from one to the next. This further exacerbates the quality control problems of this testing regimen.",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1","b":["100","102","102","102","164","114","110","100","102","160","160","166","168","1","168","166","114","168","1","168","166"]},"A display  may also be communicatively coupled to processor . Display  has a display area, which includes a menu space  and a graphics space . The menu space  includes tool bars and menu headings, which may form the basis of a window. A graphics space  generally includes the content of that window. A printer  may also be communicatively coupled to the processor .","The processor  has a process space . Within the process space, a graphics program  may execute. As used herein, a graphics program is any program which generates graphical output, such as business graphics charting programs, etc. Typically, when the graphics program generates graphics commands as output, driven to the display via a graphics library. This operation is referred to herein as the normal mode.","In one embodiment, graphics program  provides an application programming interface (API) to permit a plug-in  to engage the graphics program to facilitate testing. The plug-in  includes a hook routine  which diverts the graphics commands from the graphics program  to a test format library , when the system is in a test mode. When the system is in the normal mode, the hook routine  does not divert the graphics command, but rather passes them to a standard library to be drawn to the display in the normal way.","In some embodiments, a reference graphic generation mode is provided. In reference graphic generation mode, the test case is provided to the graphics program  and the graphics commands output by the graphics program are diverted to an appropriate library to generate the reference graphic. In one embodiment, the graphics commands are sent to more than one library to generate a reference graphic in a plurality of formats. The generated reference graphics are then stored in association with the test case from which they were created. In another embodiment, the reference graphics and test cases may be provided by an external source and merely loaded into memory.","In some embodiments, in test mode the hook routine  may both divert and pass the graphics commands such that they are sent simultaneously or serially to both the test format library and the standard library. The graphic may then be simultaneously drawn to the screen and tested as explained below.","In some embodiments, test format library  may generate graphic output in a vector format, such as SVG format. Other vector format graphic libraries could be used. In another embodiment, the test format library  may generate a raster format, such as a bitmap, e.g., a JPEG or GIF format. The output of test format library  is the graphical output in a test format graphic, which in one example would be SVG format. Alternatively, a bitmap may be used as the test format. As explained below, using the bitmap as the test format provides benefits over the prior visual testing, but SVG as the test format may provide additional benefits.","SVG is a description language for graphics controlled by the W3C consortium and is non-proprietary. SVG is based on extensible markup language (XML) syntax and this permits graphics to be described as text. Particularly, a graphical image is described in terms of graphical elements, such as lines, angles, polygons, ellipses, text, etc. More complex objects, such as a half circle can also be defined and referenced using SVG. Generation of an SVG graphic results in an XML representation of the graphic. XML has the advantage of being both human and machine readable.","A test suite  may include several test modules to test various types of software. For example, test suite  may include a graphics test module . Graphics test module  may include several routines, including a reference retrieval routine , a comparison routine , a report routine  and a highlighting routine . In some embodiments, the highlighting routine may be a subroutine of the report routine or be called by the report routine .","In a test mode, hook routine  diverts graphical output from graphics program  through test format library , which generates the test format graphic to be supplied to graphic test module . In one embodiment, when graphic test module  receives the test format graphic, a reference retrieval routine  retrieves an appropriate reference graphic from repository  in non-volatile storage . Alternatively, as a prerequisite for entering test mode, reference retrieval routine  may load the relevant reference graphics into a volatile memory, such as the processor's internal cache (not shown) or dynamic random access memory (DRAM) (not shown). The reference retrieval routine may then retrieve the reference graphics from volatile memory as needed and\/or requested by the comparison routine .","Comparison routine  performs an automatic comparison between the test format graphic and the reference graphic provided by the reference retrieval routine . Where the test format graphic is a bitmap, a bit by bit comparison may be performed to identify pixels that are different between the test graphic and the reference graphic. Alternatively, if the test format graphic is in an SVG format, a tag-by-tag comparison may be performed by stepping through the corresponding XML tags to identify differences. Because XML is text based, this is effectively a text comparison. If the text representation (XML representation) of the test graphic matches the reference graphic the test graphic passes. If not the test graphic fails.","The comparison routine  provides the results of the comparison to the report routine, which in various embodiments of the invention may generate different types of reports. In one embodiment, the report routine  generates a text report, which may be output to either the display  or printer . In another embodiment, report routine  may generate both a text report and highlight discrepancies in the graphics in the graphics space  of display . The report routine  may use a highlighting routine  to accomplish a desired highlighting. By highlighting, it is meant that the area highlighted is set off in some manner from its surroundings. In various embodiments, this may take the form of a color change either background or the element itself, a change in brightness, a bounding circle or bounding box, arrows, or any other mechanism by which emphasis can be placed on a portion of a graphic.","In one embodiment, a text report may appear in a separate window  tiled over the graphic space. The window  may include a scroll bar  to permit a user to scroll through the report so it does not occupy an unnecessarily large portion of the graphics space. In some embodiments, the window  may be moveable and\/or scalable within the graphics space . The graphic to be tested may concurrently be displayed in the graphic space  with the discrepancies highlighted. In this case, a bounding circle  highlights a portion of line , which extends too far. Similarly, a bounding circle  highlights angle , which is not exactly 90 degrees. The corresponding text report in window  shows that line  is too long and angle  is not 90 degrees. However, the report may be of any level of detail, including an indication of precisely how many pixels or degrees as the case may be, the relevant graphic element is from the reference graphic. Additionally, in one embodiment where SVG is used the report may be in the form of an identification of the differences between the XML tags as found by the comparison routine . For example, a portion of the report may read \u201cline  is length X and should be length Y\u201d or \u201cline  ends at X, and should end at X.\u201d",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2","b":["200","214","216","218","214","216","218","220","212"]},"At decision block , if the system is not in reference graphic generation mode, a determination is made if the system is in test mode at decision block . If the decision is not in test mode, it is deemed to be in normal mode and the graphics command generated are merely drawn to the display at block . Alternatively, if the system is in test mode at decision block . Test format graphic is generated at block . To get the test format graphic, the system may divert the graphics commands from a graphics program to a test format library. The generated test graphic is passed to the test suite for testing. At block , a reference graphic is retrieved from storage. As noted previously, the storage may be a reference graphic repository, non-volatile storage or may be previously loaded into volatile memory. In some embodiments, more than one format of the reference graphic is retained in the reference repository. In such embodiments, the retrieved reference graphic should be of the same format as the test graphic generated.","At block , the test format of the reference graphic and the test format of the test graphic are compared. In one embodiment in which a bitmap is used as the test format, the comparison will generate a list of pixels that differ between the test graphic and the reference graphic. In another embodiment, using SVG as the test format, the comparison may identify discrepancies in lines, angles, or other graphical elements less granular than pixels.","The results of the comparison may be reported to a user at block . In one embodiment, the report may take the form of a purely text report driven to the display, the printer, or both. In another embodiment, the report may be a purely graphical report driven to the display, the printer, or both. In another embodiment, the report may combine both a text and graphic report and drive it to the display, the printer, or both.","Notably, the developer of the graphics program need not concern itself with the test format to be used whether SVG or otherwise. By providing the simple API that permits the plug-in to divert the graphics commands, the testing can proceed independently of the hardware platform, programming language and graphics libraries used. While it is still necessary to create the reference cases to test against, it is not necessary that they are developed in the same languages as the test case. For example, a case may exist where a graphic is ported from, e.g., Java to C++, it is still desirable to produce the same output. In some embodiments, the described system permits cross language testing as the testing is independent of the development language and the language in which the reference cases were created.","A developer of the graphics program can facilitate both the reference graphic creation mode and the test mode with the addition of minimal code. The added code should i) initialize a non standard graphic library (e.g., the SVG library), ii) draw the picture into the non-standard context (e.g., the SVG context) iii) store the picture (reference graphic) using an API provided by the test suite, and iv) call the test suite to perform comparisons. Reference graphic generation mode uses i, ii, and iii, while test mode uses i, ii, iv. These four additions should require minimal coding and do not require code to draw the graphic twice.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3","b":["302","304","306","308"]},"A determination is made at decision block  whether a generation of graphical report is desired. If a graphical report should be generated, a test graphic is drawn to the graphic space of a display at block . Any differences found during the comparison may be highlighted at block . At decision block , a determination is made whether to generate a text report. In most instances, it will be desirable to generate a text report in addition to the graphical report. If the text report should be generated at block  or if no graphical report should be generated, the text report is generated to report the differences from the comparison at block . The generated report, text, graphical or both may be driven to the display, the printer, or both. In this manner, the output of graphics programs may be automatically tested saving both time and development costs while simultaneously increasing the accuracy of the testing.","While embodiments of the invention are discussed above in the context of flow diagrams reflecting a particular linear order, this is for convenience only. In some cases, various operations may be performed in a different order than shown or various operations may occur in parallel. It should also be recognized that some operations described with respect to one embodiment may be advantageously incorporated into another embodiment. Such incorporation is expressly contemplated.","Elements of embodiments may also be provided as a machine-readable medium for storing the machine-executable infractions. The machine-readable medium may include, but is not limited to, flash memory, optical disks, CD-ROMs, DVD ROMs, RAMs, EPROMs, EEPROMs, magnetic or optical cards, or other type of machine-readable media suitable for storing electronic instructions.","It should be appreciated that reference throughout this specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Therefore, it is emphasized and should be appreciated that two or more references to \u201can embodiment\u201d or \u201cone embodiment\u201d or \u201can alternative embodiment\u201d in various portions of this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures or characteristics may be combined as suitable in one or more embodiments of the invention.","In the foregoing specification, the invention has been described with reference to specific embodiments thereof. It will, however, be evident that various modifications and changes can be made thereto without departing from the broader spirit and scope of the invention as set forth in the appended claims. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
