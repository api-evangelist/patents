---
title: Enhanced data security through file access control of processes in a data processing system
abstract: A software system for controlling the unauthorized transfer of data from a data processing system to a network is provided. A file monitor module monitors requests made by a process to access a data file within the computer system, and cross-checks the data file name against a protected file list database. If the file is listed in the protected file list database, the process name is added to a process list for the data file. A process monitor module monitors all processes contained in the process list, and if a process in the process list transfers the data file to another process, the receiving process is added to the process list. An upload monitor module searches the process list for any process that requests a network data transfer. The upload monitor module holds the transfer request for any process listed within the process list, and displays a warning message to the system user indicating that a process having had access to protected data is requesting network access to upload a data file. The data file is permitted to be transferred to the network in response to a user authorization command or the transfer request is cancelled.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08150984&OS=08150984&RS=08150984
owner: International Business Machines Corporation
number: 08150984
owner_city: Armonk
owner_country: US
publication_date: 20031023
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["The present invention relates in general to data security in a data processing system, and in particular to improved data security through file access control within a data processing system of file uploads to a network.","The increased use of the Internet, intranets and extranets for gaining access to computer systems and networks has led to a commensurate increase in unauthorized access or attempted access to these systems and networks. This activity is unauthorized whether or not its purpose is of a malicious nature. As a result, intrusion prevention, detection and correction technologies have taken on a more significant role in computer system and network security.","Networked computing systems often incorporate a variety of security measures to protect against a wide variety of unauthorized intrusions, access, or attacks against the computing system that can result in degraded performance, loss of service to authorized clients, loss of content on the system, etc. There are many different types of security attacks, and different attacks require different security countermeasures in the endpoint systems (client and servers) and networks. For example, a \u201cTrojan horse\u201d attack may result when an unauthorized executable program is downloaded to the endpoint system either accidentally or hidden within a legitimate program downloaded by the user of the endpoint system. This Trojan horse may cause an unauthorized transfer of data to the external network.","Security tools often address these types of attacks with security functions such as access control list (ACL) enforcement. ACL enforcement entails having each resource within an endpoint system maintain an ACL that lists permitted actions that can be performed by a particular user acting in a particular role, as indicated by a user context (such as an instance where a user has successfully provided a validated identification to the system, usually through some \u201clogin\u201d mechanism). Private data stored within the endpoint system is specified in an ACL naming the applications that can use the data and the terms under which they can use it. However, in the case of a security breach such as a Trojan horse, the hidden process has entered with proper authorization from the user when the embodying legitimate program was downloaded, and so is permitted the necessary access rights in the ACL. Therefore, a subsequent upload of private data stored on the endpoint system to the network cannot be prevented because the sub-process or thread of the Trojan horse process has the user's privileges within the endpoint system.","One method to reduce the possible damage that can be done when running unknown applications is for the user to logon to a computer with a user account that has less access rights and\/or less privileges than the user would have to the system or network resources if logged on with a superior user account. This method takes advantage of existing computer security system models that determine each user's access to network resources based on permissions granted in the ACL in accordance to that user's credentials. This method would limit any potential damage done by unknown executable code to the exposure of the reduced access rights and\/or privileges. There are a number of problems with this method, however. This method requires the user be diligent in logging in as appropriate for a given task. Moreover, such a method is tedious and impractical for most systems and users because network connections are constantly required for most users and applications. Last, damage can be done to the limits of the access rights of the user account.","Another method to reduce possible unauthorized transmission of data by unknown applications running in the computer system is to provide a network monitor that prevents the transmission of large data files without an explicit user acknowledgement. Unfortunately, this method does not protect many smaller files that may contain extremely private information, include tax returns, bank account files, and medical records, for example. These types of files contain highly personal data but would not necessarily contain a large enough amount of data to set off a warning by a network monitor.","Another method of reducing possible damage from malicious uploading of data files from an end user system is the use of a network firewall. However, these firewall systems are network based, thereby only preventing the uploading of files to an unauthorized network. Firewall systems do not have the capability of preventing the unauthorized uploading of data files to an authorized network.","It can be seen that what is needed is enhanced data security in a data processing system that overcomes these problems with the prior art security measures and would prevent the malicious uploading of files to a network. It would be desirable to protect private files from both authorized and unauthorized users, avoid the tedious and unreliable use of multiple user accounts, protect all private files regardless of size, and prevent unauthorized uploading to both authorized and unauthorized networks.","In accordance with the present invention, improved methods, systems and articles of manufacture for controlling the transfer of data from a data processing system to a network. One preferred method of the present invention comprises the steps of creating a file list of one or more data files to be controlled, creating a process list for each data file in the file list, wherein each process list identifies one or more processes executing in the data processing system that has accessed the process list's associated data file, receiving a request from a requesting process executing in the data processing system to transfer data from the data processing system to the network, determining if the requesting process is identified in a created process list, requesting authorization to perform the requested transfer of data from the data processing system to the network if the requesting process is identified in a created process list, and performing the requested transfer of data from the data processing system to the network upon receipt of the authorization.","All objects, features, and advantages of the present invention will become apparent in the following detailed written description.","In the following detailed description of exemplary embodiments of the invention, reference is made to the accompanying drawings which form a part hereof, and in which is shown by way of illustration specific exemplary embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the invention, and it is to be understood that other embodiments may be utilized and that logical, mechanical, electrical and other changes may be made without departing from the spirit or scope of the present invention. The following detailed description is, therefore, not to be taken in a limiting sense, and the scope of the present invention is defined only by the appended claims.","The detailed description is divided into four sections. In the first section, the hardware and the operating environment in conjunction with which embodiments of the invention may be practiced are described. In the second section, a file access control system of one embodiment of the invention is presented. Finally, in the third section, methods of the file access control system in accordance with an embodiment of the invention are provided.","Hardware and Operating Environment","Referring to , a diagram of the hardware and operating environment in conjunction with which embodiments of the invention may be practiced is shown. The description of  is intended to provide a brief, general description of suitable computer hardware and a suitable computing environment in conjunction with which the invention may be implemented. Although not required, the invention is described in the general context of computer-executable instructions, such as program modules, being executed by a computer, such as a personal computer. Generally, program modules include routines, programs, files, components, data structures, etc., that perform particular tasks or implement particular abstract data types.","Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, network PCS, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","The exemplary hardware and operating environment of  for implementing the invention includes a general purpose computing device in the form of a computer , including a processing unit , a system memory , and a system bus  that operatively couples the various system components, including system memory  to processing unit . There can be one or more of processing unit , such that computer  has a single central-processing unit (CPU), or a plurality of processing units, commonly referred to as a parallel processing environment. The computer  may be a conventional computer, a distributed computer, or any other type of computer; the invention is not so limited.","The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory, which may also be referred to as simply the memory, is a hierarchical system that includes a dynamic storage device such as random access memory (RAM)  and a static storage device such as Read Only Memory (ROM)  and mass storage devices , , , all for storing data and programs. The system memory components are shown conceptually as single monolithic entities, but it is well known that system memory is often arranged in a hierarchy of caches and other memory devices. A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within the computer , such as during start-up, is stored in ROM . The computer  further includes a hard disk drive  for reading from and writing to a hard disk, not shown, a magnetic disk drive  for reading from or writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media.","The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical disk drive interface , respectively. The drives and their associated computer-readable media provide nonvolatile storage of computer-readable instructions, data structures, program modules and other data for the computer . It should be appreciated by those skilled in the art that any type of computer-readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, random access memories (RAMs), read only memories (ROMs), and the like, may be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk, magnetic disk , optical disk , ROM , or RAM , including an operating system , one or more application programs , other program modules , and program data . A user may enter commands and information into the personal computer  through input devices such as a keyboard  and pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, game port, or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor, computers typically include other peripheral output devices (not shown), such as speakers and printers.","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as remote computer . These logical connections are achieved by a communication device coupled to or a part of the computer . The remote computer  may be another computer, a server, a router, a network PC, a client, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local-area network (LAN)  and a wide-area network (WAN) . Such networking environments are commonplace in office networks, enterprise-wide computer networks, intranets and the Internet, which are all types of networks.","When used in a LAN-networking environment, the computer  is connected to the local network  through a network interface or adapter , which is one type of communications device. When used in a WAN-networking environment, the computer  typically includes a modem , a type of communications device, or any other type of communications device for establishing communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device. It is appreciated that the network connections shown are exemplary and other means of and communications devices for establishing a communications link between the computers may be used.","The hardware and operating environment in conjunction with which embodiments of the invention may be practiced has been described. The computer in conjunction with which embodiments of the invention may be practiced may be a conventional computer, a distributed computer, or any other type of computer; the invention is not so limited. Such a computer typically includes one or more processing units as its processor, and a computer-readable medium such as a memory. The computer may also include a communications device such as a network adapter or a modem, so that it is able to communicatively couple other computers.","System of a Preferred Embodiment","In this section of the detailed description, a description of a computerized system according to an embodiment of the invention is provided. The description is provided by reference to  which shows a block diagram of various major components of a system of the invention, and , which show details of data structures used by the system.","In , a system according to an embodiment of the invention includes an operating system  and process . As shown, the operating system  includes a kernel module  and a service module . Those skilled in the art will recognize that other components of operating systems exist. Only those components necessary to provide an enabling description of the invention have been provided.","Kernel module  provides the core components of operating system . Included in kernel module  are an file manager , a process manager , an input\/output (IO) manager , a file system manager , and an access control module . These core components provide the basic services required to control the execution of various applications like process , and also to manage the devices attached to the computer system. Because of the specialized processing performed by the kernel and its modules, it is desirable for the kernel components to run at a higher priority and in a protected memory area. Those of ordinary skill within the art will appreciate that the operating system  also may include other components, not shown in ; only those parts necessary to describe the invention in an enabling manner are provided.","File manager  maintains and manages files defined within the system. Files have properties that are typically used to describe various aspects of the components of the system. Many different types of files may exist in the system, and each file is assigned two unique identifiers known as a Globally Unique Identifier (GUID) to distinguish it from the other files. GUIDs are 128 bit numbers and are guaranteed not to be re-used by another application. The first identifier is the File Type GUID, which identifies the particular type of file being managed by the file manager. The second identifier is the File GUID, which uniquely identifies the particular file within a group of files of the same type.","Process manager  controls the execution of processes within the system. A process is typically thought of as an instance of an executable computer program. A process typically has a priority assigned to it, and may require resources from several components of the operating system. In addition, processes typically have the USERID and GROUPIDs of the user invoking the process associated with them. Process manager  controls the execution of the potentially many different processes competing for system resources and processing time.  shows a single process , however, those of ordinary skill in the art will recognize that many other processes not shown may be simultaneously executing in the system and controlled by process manager .","IO manager  controls input and output to the various devices connected to the computer system. These devices include disk drives (both fixed and removable), network interfaces, communications interfaces (both serial and parallel), and display devices.","File system manager  maintains and coordinates access to the file system. The file system manager arbitrates access to files by processes, and maintains the data structures describing the structure and organization of the files and folders comprising the file system.","Access control module  provides a centralized, standard mechanism to evaluate whether or not various requests for operations affecting files should be granted or denied. In one embodiment of the invention, access control module  is a kernel module of the operating system. The access control module defines an access control-application programming interface (API)  for various components to submit file access requests, and to communicate results back to the requester. Access control module  applies the method described in the next section of the detailed specification to the data structures described below in reference to ) and () to evaluate the requests.","Service module  is a process or thread that provides one of a variety of services to various applications running on the system. In one embodiment of the invention, service module  is a directory service. In an alternative embodiment of the invention, service module  is a database engine. Those of ordinary skill in the art will recognize that other service modules exist on various operating systems and can be adapted to the system of the invention.","Process  in the block diagram represents a typical application running under the control of the process manager  of operating system . Typically, process  requires the services of the file manager , the file system manager , and various service modules  during its execution.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIGS. 3A and 3B","FIG. 3A"],"b":["302","300","22","302","240","300","306","300","240","300","205","300","205","300"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 3B","FIG. 3B"],"b":["310","300","312","314","316","302","304","306"]},"Each process running within the system is given a unique identifier. For example, a process is identified by \u201cPk\u201d, where \u201ck\u201d is an integer number assigned to a single process. If a process running in the computer system opens, reads or otherwise accesses a file contained within the protected file list database , that process' unique identifier is added to the process list corresponding to the accessed data file within the process list database . Also, if a first process transfers data that may contain data from a protected data file to a second process running within the computer system, that second process' unique identifier is also added to the process list for the corresponding data file. For example, as seen in , the process list  for the file named \u201cmyTaxData\u201d contains a \u201cProcess List 1\u201d that lists all processes that have opened or read the \u201cmyTaxData\u201d data file, and a \u201cProcess List 2\u201d that lists all processes that have received data from another process listed in \u201cProcess List 1.\u201d","With reference now to , a more detailed block diagram of access control module  is depicted. Access control module  includes three monitor modules for implementing the preferred embodiment. A file monitor  monitors at Access Control API  for requests made by a process  to access a data file within the computer system. File monitor  cross-checks the file name of the file being accessed against the protected file list database  to determine if the file is a protected file. If the file is listed in the protected file list database , file monitor  will create a process list for the data file within process list database  and add the unique identifier of the process accessing the data file to the data file's process list. If a process list for that data file already exists within process list database , then file monitor  adds the unique identifier for the process accessing the data file to the existing process list. File monitor  also manages the protected file database , and is responsible for adding a filename to the protected file list database  when a \u201cProtectedFileRegister file_name\u201d command is executed.","Access control module  contains a process monitor . Process monitor  monitors all processes contained within process list database . If a process listed within the process list database  transfers or provides access to the data file associated with the process list to another process within the computer system, process monitor  adds the receiving process to the process list database  within the process list for the data file. To protect against a process avoiding the access control mechanism by renaming or recreating a file or portions thereof, process monitor  will add a new process list to process list database  for each data file written with the data contents of a protected data file, or otherwise created or renamed by a process listed within the process list database , whether or not the data content of the newly created file is known. Process monitor  will also add the filename for the newly created or renamed file to the protected file list database . Process monitor  is also responsible for managing the process list database . If a process is terminated within the computer system, references to the process within process list database  are deleted by process monitor . Also, if a file is deleted from the computer system, the file's process list is deleted from the process list database  by process monitor .","Access control module  contains an upload monitor . When a process  attempts to transfer a data file to a network, the requested data transfer is sent to service module  for distribution to I\/O manager  for execution. All such transfer requests must pass through access control module  and are monitored by upload monitor . Upload monitor  searches the process list database  for the name of any process requesting a network data transfer. If upload monitor  determines that the process is listed within the process list database , it holds the transfer request and displays a warning message to the system user indicating that a process having had access to protected data on the computer system is requesting network access to upload a data file. Then, in response to a user command or indication, or an automated procedure or algorithm, upload monitor  will permit the transfer request to proceed to I\/O manager  for execution or will cancel the transfer request.","Methods of the File Access Control System of a Preferred Embodiment","In this section of the detailed description, a description of the methods performed by the file access control system according to an embodiment of the invention is provided. The description is provided by reference to , which show flow diagrams of various major methods of the preferred embodiment.","With reference now to , there is shown a flow diagram of a process performed by the file monitor for adding a file to the process list in accordance with a preferred embodiment of the present invention. Process  begins at step , when a data file (Fl) is opened or read by a process (Pk) executing within the computer system. At step , it is determined if the opened or read file is within a protected list within the protected file list database. If so, the method proceeds to step , where the process is added to the process list of the protected data file. Thereafter, at step , the system operates with normal file monitoring operation.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 6","b":["600","602","604","606","404","606","608"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 7","b":["700","702","703","708","704","708","706","708"]},"With reference now to , there is shown a flow diagram of a method performed by an upload monitor, in accordance with the preferred embodiment of the present invention. Process  begins at step  when a process executing within the data processing system attempts to transmit data over a network. The method proceeds to step , where it is determined if the process attempting to transmit data over the network is a process within any process list contained within the process list database. If not, the process proceeds to step , where the upload monitor permits the data to be sent over the network. If the determination at step  is that the process is on a process list, the process proceeds to step , where the upload monitor holds the data request (or the actual data) and shows a warning to the system user indicating that a process listed on the a process list has attempted to transfer data to the network, and in a preferred embodiment listing the file being transferred. The method proceeds to step , where it is determined if the user will permit the requested data transfer by the process. If so, the process proceeds to step , where the data is transferred over the network. If not, the process proceeds to step , where the process is not permitted to make the file transfer to the network.","While the invention has been particularly shown and described with reference to a preferred embodiment, it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention. For example, the present invention may be implemented using any combination of computer programming software, firmware or hardware. As a preparatory step to practicing the invention or constructing an apparatus according to the invention, the computer programming code (whether software or firmware) according to the invention will typically be stored in one or more machine readable storage mediums such as fixed (hard) drives, diskettes, optical disks, magnetic tape, semiconductor memories such as ROMs, PROMs, etc., thereby making an article of manufacture in accordance with the invention. The article of manufacture containing the computer programming code is used by either executing the code directly from the storage device, by copying the code from the storage device into another storage device such as a hard disk, RAM, etc. or by transmitting the code for remote execution. The method form of the invention may be practiced by combining one or more machine-readable storage devices containing the code according to the present invention with appropriate standard computer hardware to execute the code contained therein. An apparatus for practicing the invention could be one or more computers and storage systems containing or having network access to computer program(s) coded in accordance with the invention.","While this invention is described in terms of the best mode for achieving this invention's objectives, it will be appreciated by those skilled in the art that variations may be accomplished in view of these teachings without deviating from the spirit or scope of the present invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["This invention is described in a preferred embodiment in the following description with reference to the drawings, in which like numbers represent the same or similar elements, as follows:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIGS. 5-8"}]},"DETDESC":[{},{}]}
