---
title: Secure network channel
abstract: Methods and systems for establishing a secure network channel between two or more devices in a communication network are disclosed. In exemplary implementations the network may be a UPnP network. A first device passes authentication information to at least a second device to permit the second device to authenticate the first device. Optionally, the first device may request to authenticate the second device, in which authentication information associated with the second device is passed to the first device. The first device uses this information to authenticate the second device. At least one of the first and second device may store authentication information in an data store associated with the device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07600113&OS=07600113&RS=07600113
owner: Microsoft Corporation
number: 07600113
owner_city: Redmond
owner_country: US
publication_date: 20040220
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","CONCLUSION"],"p":["The described subject matter relates to electronic computing, and more particularly to establishing a secure network channel in a communication network.","Universal Plug and Play (UPnP) provides a network architecture that facilitates adding and removing devices from a network. For instance, the UPnP architecture allows a user to simply \u201cplug\u201d a new device into a network coupling, and thereafter the network will automatically determine the characteristics of the new device and subsequently coordinate interaction between this new device and others in the network based on the determined characteristics. The UPnP architecture is particularly well suited for networks associated with a local setting, such as a home, a business, a school, etc. The term \u201cUniversal Plug and Play\u201d derives from functionality provided in the earlier developed device Plug and Play (PnP) device. PnP provides a flexible technique for automatically adding and removing peripherals to a standalone computer device, such as a PC.","UPnP devices are commonly used in relatively localized network environments, such as in a home or business. In the home environment, for instance, a network built in accordance with the UPnP architecture may interconnect a collection of media source devices and a collection of media rendering devices. An exemplary media source device might comprise a personal computer that stores a collection of music, video, pictures, etc., or may comprise various types of jukebox devices. An exemplary media rendering device might comprise a TV, stereo, personal computer, and so on. A control point (such as a personal computer) can then be used to route resource information from one of the media source devices to a selected media rendering device.","However, existing networks that include UPnP devices do not perform the above-described transfer of resource information in a well-controlled, secure, and responsible fashion. For instance, there exists the risk that an individual that is not affiliated with the network including UPnP devices might tap into the network in an unauthorized manner. For instance, the network may be implemented using wireless links (in whole or in part). In these networks, there exists the risk that an unauthorized individual might intentionally or inadvertently gain access to the resources provided by the UPnP architecture. Similar risks are present in other kinds of networks. Further, the functionality provided for networks that include UPnP devices is designed to ensure continuity with wide area IP network functionality. While this provides many advantages, it also introduces the risk that users in the wide area network environment might intentionally or inadvertently find a way to tap into the home network environment. Since the UPnP architecture does not provide a suitable mechanism for controlling or blocking the routing of information, there is a chance that these kinds of unauthorized users might gain access to the network's entire collection of media and informational resources or control the UPnP devices on the network.","Accordingly, there is a need in the art for a technique for securing channels in a communication network, such as a network including UPnP devices.","Described herein are methods and systems for establishing a secure communication channel in a network. In exemplary implementations, a secure communication channel is established between a UPnP device and a UPnP control point. In alternate implementations, information used to establish the secure communication channel between a UPnP device and a UPnP control point may be used to establish a secure communication channel between other devices in the network. The systems and methods are generally applicable to communication networks other than UPnP networks.","Described herein are exemplary systems and methods for securing a channel in a communication network. The methods described herein may be embodied as logic instructions on one or more computer-readable media. When executed on a processor, the logic instructions cause a general purpose computing device to be programmed as a special-purpose machine that implements the described methods. The processor, when configured by the logic instructions to execute the methods recited herein, constitutes structure for performing the described methods. In alternate embodiments the logic instructions may be embodied as firmware or hardwired into electronic circuitry.","UPnP Network Architecture",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","100","102","104","106","108","110","112"]},"The UPnP devices (, , and ) can include a variety of media rendering devices. Exemplary devices include computers of all types, CD\/DVD players\/jukeboxes, TVs, VCRs, MP3 players, stereo systems, electronic picture frames (EPFs), various types of still and video cameras, and so on. More specifically, a so-called UPnP device conceptually defines a container that can include actual devices, services, etc. A service, in turn, defines various functions performed by an UPnP device that are made available to other UPnP devices. For instance, one exemplary service might pertain to a chronological function provided by a clock. In general, a service models its functionality using state variables and exposes various actions associated with the model to other UPnP devices. In the exemplary case of , the UPnP device  includes a device  that provides a service . UPnP device  includes a device  that provides services  and . UPnP device  includes a root device  that provides services  and . The root device , in turn, includes an embedded device  that provides a service .","The communication network  can couple the devices (, , ) together using the Transmission Control Protocol and the Internet Protocol (TCP\/IP). The network  can also freely draw from a number of other standard protocols, such as Hypertext Transfer Protocol (HTTP), Simple Object Access Protocol (SOAP), General Event Notification Architecture (GENA), and so on. The network  can be physically implemented using a variety of hardwired and\/or wireless communication mechanisms, such as phone lines, power lines, Infrared Data Association (IrDa), Ethernet, Radio Frequency (RF) coupling, and so on.","The control points (, ) define agents that can discover and control other UPnP devices. In an exemplary implementation a control point may be embodied as, e.g., a media server, which may be implemented using one or more types of computers, application-specific logic modules, etc. A UPnP device may include one or more control points integrated therewith.","UPnP Network Operations",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2","b":["100","202","112"]},"A discovery function  pertains to procedures whereby devices advertise their services to control points. Devices can perform this advertisement by sending out a multicast variant of HTTP (i.e., HTTP-MU). A control point subsequently responds using HTTPU (i.e., a unicast variant of HTTP). The discovery function  makes use of General Event Notification Architecture (GENA) and Simple Device Discovery Protocol (SSDP) to carry out the above-noted exchange between UPnP devices and control points. Further, a newly added control point can also search for UPnP devices and services coupled to the network.","A description function  pertains to a procedure whereby a control point that has discovered a UPnP device can determine more information regarding the UPnP device. The UPnP device responds by sending information to the control point, where such information is presented, using the extensible markup language (XML). Such information defines details regarding the type of UPnP device (e.g., manufacturer, model name and number, serial number, etc.), the services it offers, uniform resource locators (URLs) for interacting with the device, and so on.","A control function  involves transmitting a control message from the control point to the UPnP device. The UPnP architecture  uses SOAP to transmit this message. SOAP messages contain action requests. The UPnP device executes the action specified in the SOAP message and then responds to the control point. The response contains action-specific values or fault codes.","An eventing function  pertains to a procedure whereby a control point monitors events associated with services provided by the UPnP architecture . More specifically, a service can send an event when its model changes state. The process of \u201cpublishing\u201d these state changes is referred to as eventing. The control point can subscribe to receive various events by sending a subscription message to a service of interest.","Finally, a presentation function  entails retrieving a page of information from a UPnP device using a presentation URL associated with this UPnP device. The control point can initiate the presentation process by issuing an HTTP GET request to the UPnP device. The presentation function  allows a user to view the status of the device and\/or control the device.","The UPnP Forum's web site (i.e., http:\/\/upnp.org\/) provides more detailed information regarding the UPnP architecture and related topics.","Referring again to , described herein are techniques for establishing a secure channel between a UPnP device ,  and a UPnP control point , . Following the UPnP discovery function, a UPnP device and a control point mutually authenticate and exchange keys using a security protocol such as, e.g., the Transport Layer Security Protocol (TLS). The particular encryption algorithms may be negotiated as part of the TLS message exchange. Subsequent UPnP actions, such as description, control, eventing, and presentation actions use HTTPS to access the respective URLs. The authentication applies to all UPnP actions (i.e., all URLs pertaining to description, control, eventing, and presentation) between the authenticated pair of device and CP. The authentication information may be cached and may remain valid as long as the device is associated with the control point.","The authentication processes described herein may use either a shared master key or public key infrastructure (PKI) techniques. The shared master key uses a long number (typically at least a 64 bit number) transferred out of band between a device and a control point. A session key is generated from the shared master key. There are various ways to convey this information out of band, including, e.g., requiring the user to enter a number at the device and\/or the control point, establishing a temporary physical connection (e.g., via a cable) between the device and the control point, or transferring the shared master key via a USB memory stick or other hardware device that can be connected sequentially to the device and the control point.","Public key infrastructure is typically used for the secure transactions on public communication networks such as, e.g., the internet, in which communicating entities are not known to each other. In application, the device and the control point contain a pair of public and private keys, based on which a master session key is generated. A certificate from a trusted party (e.g., a certificate authority) is used to certify the device authenticity. Minimal user interaction is required to confirm the proper device.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 3"},"At operation  the control point retrieves the device description according to the URLs contained in the SSDP multicast advertisements using, e.g., an HTTP request. When the description page is retrieved, an authentication process is invoked to establish a secure connection between the device and the control point. In an exemplary implementation, the authentication process includes at least one of a TLS authentication process , and an HTTP authentication process . Details of these authentication processes are discussed below.","At operation  the device returns the device description to the control point. In an exemplary implementation the device description includes details of the device such as, e.g., model type, name, serial number, and services offered by the device. If the device desires a secure channel for communication with the control point, then the location URL for the root device starts with HTTPS, rather than HTTP. The TLS parameters are cached and remain active for the duration of the session and reused for other connections belonging to the same session.","At operation  the control point requests a service description from the device, e.g., by issuing an HTTPS Get Service URL inquiry. The service description is retrieved using the cached TLS session parameters. At operation  the device returns the service description, again using the cached TLS session parameters.","At operation  the control point issues a SOAP control request to the device, and at operation  the device sends a response to the control point.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 4","b":["410","415","425","425","425"],"i":["a ","b"]},"At operation  the device returns the service description to the control point over the secure channel. At operation  the control point requests a service description from the device, and at operation  the device returns the service description. At operation  the control point issues a SOAP control request to the device, and at operation  the device sends a response to the control point.","Secure UpNP Protocol",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 5","b":["518","514","520","540","542","540","518"]},"In brief, the protocol stack includes a network interface layer , an IP layer , and a TCP layer  and a UDP layer  above the IP layer. An HTTP-U\/HTTP-MU layer resides above the UDP layer , while the TSL\/SSL layer  is interposed between the TCP layer  and the HTTP layer . Three protocols are provided above the HTTP layer: an SSDP layer , a GENA layer , and a SOAP layer . A UPnP API  provides an interface to a UPnP application .","Authentication Operations","Overview",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 6","FIGS. 3-4","FIG. 7"],"b":["610","540","518","615","622","625","618","620"]},"By contrast, if the device is unable to verify the control point certificate , then the device may invoke an HTTP authentication request. At operation  a device secret such as, e.g., a PIN number is transmitted to the control point. The secret comprises two parts, the PIN itself and a hash of the certificate sent to the CP. An HTTP authentication procedure  is invoked to authenticate the control point. If the authentication procedure  is successful, then the control point certificate  presented to the device may be stored persistently at the data store . The next time no user interaction is required as the certificate can be easily matched. Following authentication an encrypted channel is established, at operation . The authentication process is described in greater detail below, with reference to .","TLS\/SSL Handshake",{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 7","b":"615"},"In an exemplary implementation authentication and negotiation of the cipher suite is based on the TLS protocol, which is described in detail in RFC2246, The TLS Protocol, Version 1.0, the disclosure of which is incorporated by reference herein. The UPnP control point communicates with the UPnP device in a client-server relationship. At operation  the UPnP client transmits a ClientHello message to the UPnP device. The message includes the Protocol Version, a data structure with a 28 Byte random value, a Session ID, a list of cipher suites (e.g., RSA with RC4 and MD5; DH with DSS, 3DES and SHA), and a list of supported compression methods. The Session ID identifies the connection between the device and the UPnP control point. It is empty for a new connection.","At operation  the device returns a ServerHello message to the control point. The message includes the cipher suite and compression method selected from the list received in the ClientHello, a random number generated by the device and a Session ID. If the Session ID in the ClientHello message can be matched to an existing Session ID, then the matching Session ID is returned to the control point, and both CP and device proceed to transmitting finished messages at operations  and . By contrast, if the Session ID can not be matched or was empty, a new Session ID is generated and returned to the control point.","At operation  the device sends a certificate (e.g., an X.509v3 certificate or a chain of X.509v3 certificates) following the ServerHello message. The certificate contains a key that matches the agreed key exchange mechanism that is negotiated as part of the cipher suites. At operation  the device sends a server key exchange message that includes one or more server parameters and a signature. This message is sent only for some key exchange methods for which the certificate does not contain enough information to establish a pre-master secret. The RSA key exchange method does not require this message.","At operation  the device may send a certificate request to the UPnP control point. The request contains a list of certificate types and acceptable certification authorities. At operation  the UPnP device sends a ServerHello Done message to the control point. This message indicates the end of the ServerHello message exchange.","At operation  the UPnP control point forwards a certificate (e.g., an X.509v3 certificate or a chain of X.509v3 certificates) to the UPnP device. At operation  the UPnP control point transmits a client key exchange message to the UPnP device. The message includes the pre-master secret, 48 byte structure of random number and version is with the public key from the received certificate and sent to the device. The message format (e.g., RSA, Diffie Hellman) depends on the key exchange method implemented. At operation  the UPnP control point sends a certificate verify message to the UPnP device. This message explicitly verifies the certificate sent by the control point. The concatenation of all exchanged handshake messages not including this message is signed using, e.g., MD5 or SHA hash functions.","At operations  and  the UPnP control point and the UPnP device compute their respective master secrets. In an exemplary implementation the device uses its private key to decrypt the pre-master secret transmitted in operation . The control point and the device each convert their pre-master secret into the master secret. Following successful handshake operations all data that are exchanged between the device and the control point via HTTPS are encrypted using the selected encryption algorithm.","At operations  and  finished messages are exchanged for verification of key exchange and authentication. The finished messages are protected by the negotiated keys and algorithms. The concatenation of all exchanged handshake messages not including this message is signed using MD5 or SHA hash functions.","Device Authentication","Device authentication uses public key infrastructure (PKI) authentication. PKI relies on a public\/private key pair that is unique to the device. The private key is never revealed to the outside. The public key of the device is part of the device certificate. Depending on the level of security required, the certificate can be issued by a trusted certificate authority, part of a certificate chain, with the root element issued by a trusted certificate authority, or be a self-signed certificate. The control point verifies the certificate sent by the device using the public key of the configured certificates.","Control Point Authentication","In an exemplary implementation the control point is authenticated using a certificate or credentials entered by a user. Exemplary credentials may include a password\/PIN combination that the device matches with values in a data store. If the device requires control point authentication, then the device may request PIN\/password authentication from the control point, e.g., using the format and protocol defined in RFC 2617: HTTP Basic and Digest Access Authentication, the disclosure of which is hereby incorporated by reference. Since there is already an encrypted channel between the device and the control point, HTTP basic authentication suffices. However, HTTP digest authentication is advantageous because the original PIN\/Password is never sent over the wire. In addition, the device can implement features that make attacks more difficult, i.e., the number of wrong password entries can be limited.","The first URL containing HTTPS received by the control point triggers the TLS handshake operations, returns an unauthorized status code (e.g., ), and includes a WWW authenticate header field that contains the authentication method (i.e., basic or digest) and a challenge. When HTTP basic authentication is used, the control point responds with the credentials as base64 encoded concatenation of user name, column, and password. The user may enter the credentials manually or by alternate means. The format of the credentials is at the discretion of the device implementer. For example, the username (login) can be omitted and the number of retries can be limited or combined with a timeout to limit the vulnerability to brute force attacks.","The PIN\/password combination may be used to authenticate the control point based on a secret known to the device. In addition, the PIN\/password combination may be used to verify the device certificate based on a hash of the certificate information. The length of the PIN\/password combination is a trade off between vulnerability (i.e., security) and convenience (i.e., usability). Since control point user interfaces may have limited input capabilities and limited support for character sets (i.e., single button, numeric, full alphanumeric, etc.), the PIN should be limited, e.g., to numeric values.","An ideal PIN should have 100 or more random digits that follow predetermined rules that make guessing of the PIN more difficult. Since a long PIN is user unfriendly if manually conveyed, shorter PINs are typically deployed. The PIN number is known to the device and should be conveyed out of band to the control point. In an exemplary implementation the PIN may be displayed on a sticker on the device, in a manual associated with the device, or on a GUI associated with the device. Alternatively, a memory device such as, e.g., a flash memory may be used to convey the PIN between a device and a control point.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 8","FIG. 8"],"b":["800","800","810","815","815","820"]},"If a device and a control point have a secure relationship by design then no user interaction is required. Instead, the device and the control point authenticate each other automatically using pre-existing certificates. This is the case when a manufacturer packages a device and a control point (e.g., an UPnP stereo and its UPnP speakers) together.","Automatic authentication can be accomplished by matching certificates at the device and the control point. During TLS negotiation the device and control point exchange their respective certificates, which are compared with a stored list of trustworthy devices and control points, respectively. If there is a match, then no further authentication operations are required. The PIN or\/and the certificate sent by the control point can be stored in a persistent manner following initial successful authentication.","Certificates","In an exemplary implementation certificates are used during TLS authentication to certify the identity of the device and the control point. The certificate is unique to the device or control point, and contains information pertinent to the specific device or control point, including its public key. Certificates may be issued by a trusted authority or a delegate. If there is not the strong requirement to establish a unique identity, then self signed (issued) certificates can be used. The format of the certificate may follow the common X.509v3 standard, as depicted in Table 1, below.",{"@attributes":{"id":"p-0073","num":"0072"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Type","Element","Usage","Example"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Basic","Version","TLS","3"]},{"entry":["Elements","Certificate Serial",{},"1234567"]},{"entry":[{},"Number"]},{"entry":[{},"Signature",{},"RSA"]},{"entry":[{},"Algorithm ID"]},{"entry":[{},"Issuer",{},"Verisign"]},{"entry":[{},"Validity Period",{},"Nov. 09, 2001 -"]},{"entry":[{},"Subject",{},"Jan. 07, 2015"]},{"entry":[{},{},"Serial Number","12131234234234."]},{"entry":[{},{},"Model Number","KX133-04."]},{"entry":[{},{},"Manufacturer","factoryname.com"]},{"entry":[{},{},"(link)"]},{"entry":[{},"Subject Public Key"]},{"entry":[{},"Information"]},{"entry":[{},"Issuer Unique"]},{"entry":[{},"Identifier"]},{"entry":[{},"Subject Unique"]},{"entry":[{},"Identifier"]},{"entry":["Extensions","Extension Type","Firmware","00.310"]},{"entry":[{},"Extension Value","Version"]},{"entry":["Signature","Certification",{},"5938f9908916cca32"]},{"entry":[{},"Authority's"]},{"entry":[{},"Digital Signature",{},"321916a184a6e7583"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"Certificates may be loaded along with the corresponding private key onto the device (or control point) during the manufacturing process or during initial setup. The control point must contain a certificate from the trusted root certificate authority since it holds the public key that is used to verify the signature for the root certificate that is part of the certificate chain passed to the control point. The control point may have certificates of its own to authenticate itself to the device for pre-authentication. The device may contain the chain of certificates necessary to verify its identity in addition to the private key that matches the issued certificate.","Certificate Management","In an exemplary implementation trusted certificates are used in the authentication process.  is a schematic illustration of an exemplary certification hierarchy. A trusted root certification authority issues certificates, considered to be the root certificates . Since this scheme is not scalable, a hierarchy of certificate authorities may be established, with lower-tier certificate authorities issuing certificates to their respective clients. Lower-tier certificate authorities can also manufacture certificates. To verify a device certificate issued by a second or lower-tier certificate authority requires the chain of certificates including the root certificate. The root certificate verifies the certificate issued by the second-tier, which in turn verifies the certificate issued by the next lower tier until the device certificate is certified.","In application, during the manufacturing process of one or more devices , , etc., a private\/public key pair is generated. The private keys , are stored in a suitable memory location on the respective devices , . The public keys become part of the device certificates , , which are signed by the manufacturer using the manufacturer's private key. The manufacturer certificate  is issued (i.e., signed) by the root certificate authority.","When device is manufactured (or set-up), copies of the device certificate , the manufacturer's certificate \u2032, and the root certificate \u2032 are stored in a suitable memory associated with the device , thus creating a chain of certificates. Similarly, when device is manufactured (or set-up), copies of the device certificate , the manufacturer's certificate \u2032, and the root certificate \u2032 are stored in a suitable memory associated with the device , thus creating a chain of certificates. The root certificate containing the public key of the root certificate authority is stored on the control point . This allows the control point  to verify the signature of the manufacturer's certificate  and, by implication, the chain of certificates that the respective devices present to the control point .","For pre-authenticated device and control point pairs, the control point is assigned its own certificate that indicates the type, manufacturer, and serial number. The device contains a list of valid, (i.e., pre-authenticated) control points. During the TLS handshake process the information presented in the control point's certificate is compared with the list of valid control points stored with the device. If there is a match between the certificate information and the data in the list, then a pre-authenticated device is assumed and no further user interaction is required.","Once a control point is authenticated successfully its information may be added to the list of pre-authenticated control points that are contained in the device.","In an alternate implementation certificates can be issued by a network device, which becomes the de-facto certification authority for the network. A device that is connected out of band signs the unique device certificate and copies the signed certificate together with its own root certificate onto the device and control point. The device may be implemented as a smartcard device or a personal computer that is plugged into an interface such as, e.g., a USB interface. In this event the signed certificate can be transferred via dedicated network cable, flash card or similar.","In another implementation the control point may not possess a certificate for authentication. In this case, HTTP authentication may be used to establish a trust relationship between a device and the control point. A PIN may be entered at the control point (or conveyed by other means). The control point may return a self-signed certificate to the device to facilitate pre-authentication. Following successful HTTP authentication, the self-signed certificate can be added to the list of trusted certificates.","In another implementation, self signed certificates can be used. The certificate and its corresponding private key can be loaded on the device. The control point uses hash authentication for the device. If the control point cannot find a valid root certificate or the certificate in its store, then it queries the user for the PIN. Since the PIN includes credentials and a hash of the certificate, it verifies the validity of the certificate. Once verified, the certificate may be stored in a data store associated with the control point. The PIN may also be stored in a data store associated with the control point to avoid having the user enter the PIN a second time during subsequent HTTP authentication. Processing self-signed certificates uses a certificate verification algorithm that includes the PIN query and hash certification.","There are many other ways of creating and distributing certificates such as generating the certificate and the corresponding private key by a separate device, e.g., a PC. The key pair may be conveyed out of band, e.g., via flash memory, to the device and control point and thus resembling a shared key.  is a schematic illustration of a key exchange procedure in which the key pair is conveyed via flash memory, and  is a schematic illustration of a key file format that may be used in the conveying the public\/private key pair. An exemplary authentication method will be explained with reference to .","Referring to , assume a user wished to provide authentication between a personal computer  and a plurality of devices such as, e.g., printers ,  and a PDA . Each of the devices and the PC include the infrastructure necessary to support public key encryption. More particularly, personal computer  includes both a public key  and a private key . Similarly, printer  includes both a public key  and a private key , printer  includes both a public key  and a private key , and PDA  includes both a public key  and a private key .","The user connects a USB flash memory to the personal computer , e.g., via a USB port. An application executing on the personal computer  writes the personal computer's certificate  and the contents of a discovery request (i.e., a probe)  to a record  in a configuration file on the flash memory. An application executing on the personal computer  computes a hash (e.g., SHA) over the entire record and generates a signature  using the personal computer's private key. The discovery message has a unique message ID and may have a limited scope, e.g. printers.","The user then removes the USB flash memory from the personal computer and connects it to one of the remote devices such as, e.g., the printer . An application executing on the printer reads the personal computer's record  from the configuration file on the flash memory device, verifies it based on the signature , and matches the discovery message with its own capabilities. If there is a match, then the printer  stores the certificate from the personal computer  in a suitable memory location (e.g, a certificate store). In addition, the printer  generates a record  in the flash configuration file and writes the contents of the corresponding discovery  and a description to the flash configuration file. The printer  computes a hash (SHA) over the record, signs it with its private key (RSA), and appends the signature  to the record  on the flash configuration file.","This process is repeated for each device (i.e., printer , PDA , etc.) the user wishes to authenticate with the personal computer . Thus, the configuration file in the flash memory will have the PC record  plus n additional entries, where n corresponds to the number of devices with which the PC is to be authenticated. In , the nrecord is indicated with the character n, rather than a digit.","The user re-inserts the USB flash memory back into the personal computer . An application on the personal computer reads the device discovery and description from the file, verifies them and places the embedded certificates into the trusted device certificate store. In an exemplary implementation the personal computer  can use the device public key to verify that the record was signed by the owner of the device private key. The personal computer  can then compute the hash of the device discovery and description and verifies that it matches the signed hash value. The subsequent TLS authentication matches the exchanged certificates with the ones in the respective certificate stores at the PC and the device.","Media Server Application","In another implementation the secure channel established between a UPnP control point and a UPnP device can be used to bootstrap a secure channel connection for a communication link between a UPnP A\/V media server and a UPnP A\/V media renderer. This approach is applicable if the communication protocol between a UPnP A\/V media server and a UPnP A\/V media renderer is based on HTTP Get for the media data.",{"@attributes":{"id":"p-0092","num":"0091"},"figref":["FIG. 13","FIG. 13"],"b":["1300","1300","1310","1312","1314","1320","1310","1312","1314"]},"In the embodiment illustrated in  the control point  is implemented as a separate device. In alternate embodiments the control point  may be integrated with either the media server , the media renderer , or another UPnP device in the network . If the control point is integrated with either the media server  or the media renderer , then only a single communication connection is needed.","In an exemplary implementation the communication network  may be implemented as an IP network. However, the particular protocol suite implemented by the communication network  is not critical.","In operation, a secure communication channel  may be established between the media server  and the control point  using the techniques described above. Similarly, a secure communication channel  may be established between the media renderer  and the control point  using the techniques described above. The secure channels ,  may be used to convey session certificates pertaining. The control point can issue self-signed certificates or use certificates from a third party entity such as, e.g., the content owner.","When the secure connections are established the certificates are loaded to the media server  and the media renderer , respectively. In an exemplary implementation the certificates may be transmitted in the optional UPnP PrepareForConnection message. The media renderer  fetches the content using HTTPS GET (as opposed to HTTP Get). This will invoke mutual authentication of the media server  and the media renderer , as described above. Since both sides have valid certificates no user interaction is required. The certificate may contain an expiration date and time that allow access for a limited period of time.","Following successful TLS authentication a secure, i.e. encrypted channel, is established between the media server  and the media renderer . Due to the high data rate and the processing required for encryption hardware encryption may be necessary.","An Exemplary Operating Environment","The operations described above may be implemented as logic instructions executable on a suitable computer processor. In an exemplary implementation the UPnP control point may be implemented on a personal computer.  illustrates an exemplary computing environment suitable for implementing a UPnP control point. Although one specific configuration is shown, a UPnP control point be implemented in other computing configurations.","The computing environment  includes a general-purpose computing system in the form of a computer . The components of computer  can include, but are not limited to, one or more processors or processing units , a system memory , and a system bus  that couples various system components including the processor  to the system memory .","The system bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. An example of a system bus  would be a Peripheral Component Interconnects (PCI) bus, also known as a Mezzanine bus.","Computer  typically includes a variety of computer readable media. Such media can be any available media that is accessible by computer  and includes both volatile and non-volatile media, removable and non-removable media. The system memory  includes computer readable media in the form of volatile memory, such as random access memory (RAM) , and\/or non-volatile memory, such as read only memory (ROM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within computer , such as during start-up, is stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently operated on by the processing unit .","Computer  can also include other removable\/non-removable, volatile\/non-volatile computer storage media. By way of example,  illustrates a hard disk drive  for reading from and writing to a non-removable, non-volatile magnetic media (not shown), a magnetic disk drive  for reading from and writing to a removable, non-volatile magnetic disk  (e.g., a \u201cfloppy disk\u201d), and an optical disk drive  for reading from and\/or writing to a removable, non-volatile optical disk  such as a CD-ROM, DVD-ROM, or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are each connected to the system bus  by one or more data media interfaces . Alternatively, the hard disk drive , magnetic disk drive , and optical disk drive  can be connected to the system bus  by a SCSI interface (not shown).","The disk drives and their associated computer-readable media provide non-volatile storage of computer readable instructions, data structures, program modules, and other data for computer . Although the example illustrates a hard disk , a removable magnetic disk , and a removable optical disk , it is to be appreciated that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes or other magnetic storage devices, flash memory cards, CD-ROM, digital versatile disks (DVD) or other optical storage, random access memories (RAM), read only memories (ROM), electrically erasable programmable read-only memory (EEPROM), and the like, can also be utilized to implement the exemplary computing system and environment.","Any number of program modules can be stored on the hard disk , magnetic disk , optical disk , ROM , and\/or RAM , including by way of example, an operating system , one or more application programs , other program modules , and program data . Each of such operating system , one or more application programs , other program modules , and program data  (or some combination thereof) may include an embodiment of a caching scheme for user network access information.","Computer  can include a variety of computer\/processor readable media identified as communication media. Communication media typically embodies computer readable instructions, data structures, program modules, or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above are also included within the scope of computer readable media.","A user can enter commands and information into computer system  via input devices such as a keyboard  and a pointing device  (e.g., a \u201cmouse\u201d). Other input devices  (not shown specifically) may include a microphone, joystick, game pad, satellite dish, serial port, scanner, and\/or the like. These and other input devices are connected to the processing unit  via input\/output interfaces  that are coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port, or a universal serial bus (USB).","A monitor  or other type of display device can also be connected to the system bus  via an interface, such as a video adapter . In addition to the monitor , other output peripheral devices can include components such as speakers (not shown) and a printer  which can be connected to computer  via the input\/output interfaces .","Computer  can operate in a networked environment using logical connections to one or more remote computers, such as a remote computing device . By way of example, the remote computing device  can be a personal computer, portable computer, a server, a router, a network computer, a peer device or other common network node, and the like. The remote computing device  is illustrated as a portable computer that can include many or all of the elements and features described herein relative to computer system .","Logical connections between computer  and the remote computer  are depicted as a local area network (LAN)  and a general wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet. When implemented in a LAN networking environment, the computer  is connected to a local network  via a network interface or adapter . When implemented in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the wide network . The modem , which can be internal or external to computer , can be connected to the system bus  via the input\/output interfaces  or other appropriate mechanisms. It is to be appreciated that the illustrated network connections are exemplary and that other means of establishing communication link(s) between the computers  and  can be employed.","In a networked environment, such as that illustrated with computing environment , program modules depicted relative to the computer , or portions thereof, may be stored in a remote memory storage device. By way of example, remote application programs  reside on a memory device of remote computer . For purposes of illustration, application programs and other executable program components, such as the operating system, are illustrated herein as discrete blocks, although it is recognized that such programs and components reside at various times in different storage components of the computer system , and are executed by the data processor(s) of the computer.","Although the described arrangements and procedures have been described in language specific to structural features and\/or methodological operations, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or operations described. Rather, the specific features and operations are disclosed as preferred forms of implementing the claimed present subject matter."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
