---
title: System for information life cycle management model for data migration and replication
abstract: The invention provides a system for information lifecycle management of storage data on a storage network architecture. The system provides for bi-directional data transfer between an information lifecycle management controller, a host file system storage area network and an information lifecycle management storage area network. The information lifecycle management controller helps manage the data storage file transfers between the subsystems of the host file system storage area network and information lifecycle management storage area network. The method provides an information lifecycle management shim program, which resides in the host computer of the host file system storage area network, for hostless information lifecycle management of the data storage files. The system further provides a user-defined information lifecycle management of the migration, replication, copying, and backing up of the storage data files.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07007048&OS=07007048&RS=07007048
owner: Storage Technology Corporation
number: 07007048
owner_city: Louisville
owner_country: US
publication_date: 20030529
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT(S)"],"p":["1. Field of the Invention","The present invention relates to a system for information life cycle data storage management in a tiered storage area network.","2. Background Art","The storage area network (SAN) has become a necessity for virtually every sector of commerce where there is a requirement for storing data with high capacity, high speed, and increased reliability. SANs offers businesses a reduction in information technology costs in the management of storage data. SANs perform operations such as disk mirroring, data backup, data restoration, data archival, data retrieval, data migration between storage devices, and data sharing.","Typically, SANs interconnect data storage devices with respective user host computers that are usually configured as file servers; this configuration is called a host file system (HFS) SAN. HFS SANs use application software code to run on these host server computers to manage data storage. The software code resides and runs on the customer's host server which manages and migrates the data. However, when the software code resides and runs on the host computer server, it decreases the efficiency and capability of the host computer server.","Persistent storage device mediums come in different tiers or echelons of performance. High performance storage devices, like magnetic disk drives, are the most expensive and fastest. However, when large amounts of storage data that is rarely accessed and used is maintained on these top level storage devices, it can drastically waste the storage capacity and performance of the storage device and thus is not cost effective. Lower end performance storage devices, like tape drives, offer great capacity for storage at less cost, but offer slow performance speeds. Ideally, storage data that is rarely accessed and used would be stored on the lower end performance storage devices. Therefore, storage data that is accessed often and would require greater speed and reliability should reside on higher end storage devices like magnetic disk drives.","Thus there exists a need for a SAN data storage architecture that imposes minimal execution burden on customer hosts for file system metadata and event acquisition. The SAN management application code does not reside or run on the customer host server and can be kept outside of the customer host server to optimize the host computer server performance.","Furthermore, there also exists a need for uniform information lifecycle management of user files spanning a disparate collection of file systems. The user desires the ability to manage data outside of the host computer with greater uniformity, flexibility and precision using lifecycle management of information.","Effective management of the tiers of storage devices is desired for maximum optimization of the storage devices. These tiers of storage can be managed more efficiently with an information lifecycle management method and system. Savings can be realized when using the storage devices to run at optimum efficiency.","According to the present invention, a tiered information lifecycle management system interconnects a host file system (HFS) storage area network (SAN), an information lifecycle management (ILM) SAN, an ILM controller, and an ILM database (DB). The ILM controller controls hostless data transfer between the HFS SAN and the ILM SAN. The ILM controller further controls hostless data transfer between the HFS SAN and the ILM SAN in accordance with storage policies. The ILM DB is operable with the ILM controller for tracking data storage information of the data stored in the HFS SAN and the ILM SAN.","The HFS SAN of the present invention includes the interconnection of a switch, a host computer, and a HFS SAN subsystem. The switch may be a fibre channel switch or the like. The host computer and the HFS SAN subsystem are connected to the ILM controller with a bi-directional communication network link. The HFS SAN subsystem consists of a logical unit number (LUN) port, a host file system, and an ILM head having an ILM control port and an ILM data port.","In another aspect of the invention, the connection between the HFS SAN subsystem and the ILM controller is between the ILM controller and the ILM control port of the ILM head. The connection between the HFS SAN subsystem and the switch is between the switch and the LUN port of the HFS SAN subsystem.","In another aspect of the invention, the ILM SAN includes the interconnection of an ILM switch and an ILM head. The ILM switch is connected to an ILM data port of the HFS SAN subsystem and an ILM data port of an ILM SAN subsystem with a bi-directional communication network link. The ILM SAN subsystem includes an ILM file system and an ILM head having an ILM control port and an ILM data port.","In another aspect of the invention, the connection between the ILM SAN subsystem and the ILM controller is between the ILM controller and the ILM control port of the ILM SAN subsystem. The connection between the ILM SAN subsystem and the ILM switch is between the ILM switch and the ILM data port of the ILM SAN subsystem.","In another aspect of the invention, the host computer may include a plurality of host computers. The HFS SAN subsystem may include a plurality of HFS SAN subsystems. The ILM SAN subsystem may include a plurality of ILM SAN subsystems. The HFS SAN subsystem includes a plurality of host file systems, and a plurality of logical unit number (LUN) ports.","In another aspect of the invention, the host computer includes an ILM shim program, which is operable for monitoring all data storage activities in the HFS SAN. The ILM shim program is operable for communicating with the ILM controller of any data storage activity occurring in the HFS SAN.","In another aspect of the invention, the ILM controller is operable with the ILM shim program for tracking the location of storage data on the HFS SAN subsystem which was written by the host computer. The ILM controller hostlessly transfers the stored data on the HFS SAN subsystem to the ILM SAN subsystem according to storage policies associated with the stored data. The ILM controller is operable with the ILM shim program for identifying a request by the host computer for the stored data from the HFS SAN subsystem. When in response to the request, the ILM controller hostlessly transfers the stored data from the ILM SAN subsystem to the HFS SAN subsystem for access by the host computer.","According to another aspect of the invention, a tiered information lifecycle management system includes a host file system (HFS) storage area network (SAN), an ILM shim program, an information lifecycle management (ILM) SAN connected to the HFS SAN, an ILM controller, and an ILM database (DB) connected to the ILM controller.","The HFS SAN includes a switch connected to a plurality of host computers and a plurality of HFS SAN subsystems. The ILM SAN includes an ILM switch connected to the plurality of HFS SAN subsystems and a plurality of ILM SAN subsystems.","The ILM controller is connected to the plurality of host computers, the plurality of ILM SAN subsystems, and the plurality of HFS SAN subsystems. The ILM controller controls hostless data transfer between the HFS SAN and the ILM SAN for data storage in accordance with storage policies.","The ILM DB is operable with the ILM controller for tracking information of storage files stored in the HFS SAN subsystems and the ILM SAN subsystems.","According to yet another aspect of the present invention, a tiered information lifecycle management system operable for hostless data transfer includes a host file system (HFS) storage area network (SAN), an information lifecycle management (ILM) SAN connected to the HFS SAN, an ILM controller connected to the ILM SAN and the HFS SAN, and an ILM database (DB) connected to the ILM controller.","The HFS SAN includes a host computer with an ILM shim program operable for monitoring data activities in the HFS SAN and a plurality of HFS SAN subsystems. The ILM SAN includes a plurality of ILM SAN subsystems.","The ILM controller controls hostless data transfer between the HFS SAN and the ILM SAN. The ILM controller further controlling hostless data transfer between the HFS SAN and the ILM SAN for data storage in accordance with storage policies when notified by the ILM shim program of data activities.","The ILM DB is operable with the ILM controller to catalog data storage information of data stored in the HFS SAN subsystems and the ILM SAN subsystems.","In another aspect of the invention, the ILM controller recognizes a migration command for a data storage file based on a storage policy. The ILM controller obtains information, regarding stored location in a source HFS SAN subsystem of the data storage file, from the ILM shim program. The ILM controller selects a sink ILM SAN subsystem for the data storage file to be migrated according to the storage policy. The source HFS SAN subsystem communicates the migration command with the sink ILM SAN subsystem. The ILM controller commands the source HFS SAN subsystem to transfer the data storage file to be migrated to the sink ILM SAN subsystem. The ILM controller of the sink ILM SAN subsystem notifies the ILM controller of completed data storage file transfer. The ILM DB stores information regarding the migration of the data storage file.","In another aspect of the invention, the ILM controller recognizes a recall command for a data storage file from the ILM shim program based on a storage policy. The ILM controller obtains information, regarding stored location in the source ILM SAN subsystem of the data storage file, from the ILM DB. The ILM controller selects a sink HFS SAN subsystem for the data storage file to be recalled according to the storage policy. The source ILM SAN subsystem, where the storage file to be recalled is stored, communicates the recall command with the sink HFS SAN subsystem. The ILM controller commands the source ILM SAN subsystem, where the data storage file to be recalled is stored, to transfer the data storage file to be recalled to the sink HFS SAN subsystem. The ILM control port of the sink HFS SAN subsystem notifies the ILM controller of completed data storage file transfer. The ILM controller notifies the ILM shim that the storage data file transfer is complete and to proceed with the file recall. The ILM shim then notifies the host computer to access the recalled data storage file.","In another aspect of the invention, the ILM controller recognizes a replication command for a data storage file based on a storage policy. The ILM controller obtains information, regarding the stored location in either the source HFS SAN subsystem or the source ILM SAN subsystem of the data storage file to be replicated, from the ILM shim or the ILM DB. The ILM controller selects either a sink HFS SAN subsystem or a sink ILM SAN subsystem for the data storage file to be replicated according to the storage policy. If the data storage file to be replicated will be stored on a sink HFS SAN subsystem, the ILM controller requests the ILM shim to prepare the host file system to receive the file to be replicated. The ILM controller commands the source HFS SAN subsystem or the source ILM SAN subsystem, where the data storage file to be replicated is stored, to copy the data storage file to be replicated to the sink HFS SAN subsystem or the sink ILM SAN subsystem according to the storage policy. The sink HFS SAN subsystem or the sink ILM SAN subsystem notifies the ILM controller of a completed storage data file copy. The ILM DB then stores the information regarding the replication of the storage data file.","In another aspect of the invention, the ILM controller recognizes a move command for a data storage file based on a storage policy. The ILM controller obtains information from the ILM DB or ILM shim program regarding the stored location of the data storage file to be moved based on the storage policy. The ILM controller selects either a sink HFS SAN subsystem or a sink ILM SAN subsystem for the data storage file to be moved according to the storage policy. If the data storage file to be moved will be stored on a sink HFS SAN subsystem, the ILM controller requests the ILM shim to prepare the host file system to receive the file to be moved. The ILM controller commands the source HFS SAN subsystem or the source ILM SAN subsystem, where the storage data file is stored, to transfer the data storage file to the sink HFS SAN subsystem or the sink ILM SAN subsystem according to the storage policy. The sink HFS SAN or the sink ILM SAN subsystem notifies the ILM controller of completed data storage file move. The ILM DB stores information regarding the movement of the data storage file.","In another aspect of the invention, the ILM controller recognizes a promotion command for a data storage file from the ILM shim program of one of the plurality of host computers based on a storage policy. The ILM controller obtains information regarding the stored location in the ILM SAN subsystem of the data storage file to be promoted from the ILM DB. The ILM controller requests the ILM shim to prepare the host file system to receive the file to be promoted. The ILM controller commands the ILM SAN subsystem, where the data storage file to be promoted is stored, to transfer the data storage file to the HFS SAN subsystem for the host computer based on the storage policy. The ILM controller notifies the ILM shim program of completed promotion of the data storage file. The ILM shim program then notifies the host computer to access the promoted data storage file.","In yet another aspect of the invention, the ILM controller performs hostless back up of storage data files in the plurality of HFS SAN subsystems to the plurality of ILM SAN subsystems as defined by the storage policy.","The ILM shim program also recognizes copy-on-X event commands for a data storage file according to a copy-on-X event storage policy. The ILM shim notifies the ILM controller of the copy-on-X event command for a data storage file. The ILM controller copies the data storage file to the one of the plurality of HFS SAN subsystems or one of the plurality of ILM SAN subsystems according to the copy-on-X event storage policy.","Now referring to the figures,  is a star network topology  of the present invention. The network nodes in the star network can be either host file system (HFS) storage area network (SAN) subsystem nodes  or information lifecycle management (ILM) SAN nodes . The term ILM subsystem may refer to either HFS SAN subsystem  or ILM SAN subsystem , which may be any StorageTek\u00ae subsystem with an embedded ILM Head. Each node , is an ILM subsystem outfitted with file transfer capabilities. Network link  in the star network topology supports bi-directional file transfers between any two nodes, ILM subsystems  and , on the network as specified by the storage resource manager (SRM) called the ILM Controller. The star hub is a high-bandwidth network switch called ILM Switch . Dotted line  clarifies the division between HFS SAN subsystem nodes  and ILM SAN subsystem nodes .",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 2","b":["40","42","30","40","42"]},"HFS SAN  is a traditional SAN model consisting of host computer  connected via switch  to one or more logical unit numbers (LUN)  on one or more HFS SAN subsystems . The switch  may be a fibre channel switch. Host computer  creates file systems on LUNs  for user file storage.","ILM SAN  consists of ILM switch  and ILM SAN subsystem . ILM SAN subsystem  is essentially a large, flat file system that serves as one-dimensional storage for migrated or replicated files. ILM SAN subsystem  may be a StorageTek\u00ae Virtual Storage Manager (VSM) .","ILM switch  is also connected to HFS SAN subsystem  via ILM data port . The network allows the file transfer between HFS SAN subsystem  and ILM SAN subsystem . HFS SAN subsystem  is connected to ILM SAN switch  through ILM Data Port . ILM Data Port  may be a fast Ethernet port and ILM switch  may be a network switch.","ILM Controller  communicates with ILM subsystems ,, host computers , ILM shim , and ILM database (DB) . ILM Heads  in the ILM subsystems , and ILM Controller may be peer nodes on the same transmission control protocol\/internet protocol (TCP\/IP) network . Control network  may be a separate TCP\/IP based network that interconnects nodes of the ILM Heads  in ILM subsystems ,, ILM Controller , and ILM shims  installed on customer hosts . Control network  facilitates all file transfer operations between ILM subsystems , and provides a channel for transmitting and receiving file system metadata, file system event information, and network resource management orders. ILM Controller  directs all file transfers between any two ILM subsystems , for migration or replication based on user-specified data management policies. ILM control port  is operable for network communication with the ILM Controller .",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIGS. 3","i":["a ","b "],"b":["3","22","24"]},"HFS SAN subsystem  consists of LUN port , ILM data port , ILM control port , ILM Head , and host file system . HFS SAN subsystem  may have a plurality of host file systems , and a plurality of LUN ports . HFS SAN subsystems  are connected to customer hosts  as a direct attach storage devices also called logical unit numbers (LUNs).","ILM SAN subsystem  consists of ILM Data Port , ILM Control Port , ILM Head , and ILM File System . However, unlike HFS SAN subsystems , ILM SAN subsystems  do not contain host LUNs . ILM SAN subsystems  are not mapped or mounted by customer hosts . Customer hosts  cannot directly access ILM SAN subsystems .","ILM Head  creates and maintains ILM file systems  of ILM SAN subsystem . ILM Head  transfers files to and from other ILM subsystems ,. ILM Head  can communicate commands, metadata, and status with other ILM subsystems ,  and ILM Controller . ILM Head  may be Linux-based and may create a single Unix file system utilizing the entire subsystem capacity for the one-dimensional file store ILM file system . ILM Head  may use stock file transfer protocol (FTP) for file transfers between any ILM SAN subsystems . ILM Head  may use a modified FTP for file transfers involving HFS SAN subsystems .","ILM subsystems , exchange files through their respective ILM data port . ILM subsystem , can exchange files with any other ILM subsystem , through point-to-point file transfers.","The file transfers performed in the present invention are \u201chostless\u201d. ILM file transfers are conducted directly between ILM subsystems , , in a point-to-point fashion and without involving host computers . ILM Head  may be embedded in all storage products. The present invention governs the entire storage network by controlling operations, file system metadata, and file system events.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 4","FIG. 4"],"b":["28","22","24","22","24","62","22","66"]},"\u201cAny-to-any\u201d grid defines a network transport layer that is the basis for present invention. The basic unit of operation on this grid is the point-to-point reliable file transfer operation between any ILM subsystem , nodes, designated as source and sink nodes. The present invention uses FTP for reliable transfers instead of a network file system protocol. Network file system protocol is extremely inefficient with network bandwidth and less reliable than FTP. Also, network file system protocol poses a significant administrative burden compared to FTP.","ILM shim file system primitives and the ILM Head primitives together comprise an ILM Storage application programming interface (API) for ILM applications running on the ILM Controller  platform. The ILM Storage API provides methods for file system metadata services, file system event acquisition, point-to-point file transfers, and network resource management. ILM controller application programs use the Storage API to implement information lifecycle management and storage resource management policies.","The host software thin client is called an ILM Shim . The ILM shim  acquires file system metadata, acquires event information, and performs file system operations. ILM shim  provides a normalized access method for all user files, which allows the ILM Controller  to manage the universe of user files consistently, with a uniform syntax and rule set, regardless of the underlying HFS type. ILM controller  may supplement a storage operating system.","ILM file system shim  would be placed on host  to intercept essential file system primitives including, but not limited to: open( ), close( ), create( ), delete( ), and write( ). The shim would front-end the normal processing for these primitives and would also communicate with the ILM Controller . ILM shims  also serve file data-block number lists, lock\/unlock\/delete user files, and watch any file system events. Some platforms may support shims as loadable file system drivers. ILM shims on other platforms may require more direct methods of obtaining control, for example by redirecting the vectors for these primitives.","File system metadata services provide the basis for a universal access method for user files on HFS SAN subsystems , independent of the underlying file system format. For a given a hostname, LUN  and filename, the Storage API will contact the ILM Shim on this host  to obtain the logical block numbers comprising the given file on the specified LUN . When forwarded by ILM Controller  to ILM Head  on corresponding HFS SAN subsystem , this metadata can then be used as a virtual \u201cfile name\u201d for point to point file transfer operations.","File system event acquisition services are used to monitor file system operations such as open, close, create, delete, read and write. Event driven ILM applications running on the ILM controller  can provide services such as file migration, hostless backup\/restore and copy on write. Event acquisition services also provide a means for ILM applications to obtain file system reference strings via the ILM Shim. A reference string is collection of file system event descriptors concatenated in their natural order of occurrence. In addition to the obvious online applications of a reference string, it is also possible to store reference strings for offline analysis, e.g., workload characterization, file reference pattern analysis (i.e., \u201cworking set\u201d analysis) and file access trend analysis. The results of these analyses could serve as inputs to other ILM applications.","Point-to-point file transfer services allow applications to migrate, move, and replicate user files within the network of the present invention by directing the ILM Heads  on the source and sink subsystems, which may be ILM subsystems ,, to perform a file transfer operation.","Network resource management services provide a means for the present invention to control applications to manage the network elements. Examples may include storage provisioning, node maintenance, network expansion, and the like. The present invention supports \u201chostless\u201d data migration ala traditional Hierarchical Storage Management (HSM), and hostless data replication in an off-line fashion, as opposed to online mirroring. The management of storage data is virtually \u201chostless\u201d, however the present invention may require minimal interaction with the host file system.","The present invention provides a system for a file to be replicated from one ILM subsystem , to another ILM subsystem. Replication is when an exact duplicate of the file is created, either in the same ILM subsystem , or a different ILM subsystem ,.","The present invention provides a system for the migration of a user data storage file from the HFS SAN  to ILM SAN subsystem . Migration is when a file is moved initially from HFS SAN  to ILM SAN subsystem . A representation of the user data storage file, acting as a placeholder, still exists in the host file system even though the data resides elsewhere. Migration may also occur within ILM SAN  in accordance with the storage policy. Files replicated on one or more ILM SAN subsystems , may also be migrated.","The migration of a user data storage file begins with customer host  creating a file in a local file system. The file system maps to a SCSI logical unit number (LUN)  on the source subsystem, which may be a StorageTek\u00ae Shared Virtual Array subsystem, within HFS SAN . The present invention then determines if the file is eligible for migration per storage policy. If the file not eligible, the migration process stops. If the file is eligible, ILM Controller  requests a list of data block numbers from the source file system ILM shim  installed on the customer host . ILM shim  then determines the ordered list of logical block numbers, which comprise the data blocks for the file to be migrated. ILM shim  then sends this list to ILM controller . ILM controller  selects the sink subsystem, which may be ILM SAN subsystem ,, to receive the migrated file. ILM controller  then sends a migration request to the ILM Head  on source ILM subsystem ,. The migration request specifies: the LUN  address of the source file system, the ordered block-number list for the file to be migrated, and sink ILM subsystem , address. ILM Head  opens ILM data port  connection to sink ILM subsystem , using FTP. ILM Head  then places a copy of the file on the sink device via FTP. FTP program is modified to accept an ordered list of logical block numbers as the source file name, and to retrieve these blocks from LUN . When transfer is complete, the ILM Head  closes ILM data port  connection and notifies ILM Controller  that the operation is complete. The user file migration process ends when ILM Controller  catalogs the status of this file as migrated in ILM DB  using an encoding scheme that uniquely identifies this particular file as having originated on a particular host LUN  and host file system .","During migration, the data blocks held by the file are not deleted on the source file system , in order to prevent an out-of-space condition from occurring during a recall operation. However, the present invention can delete these blocks and leave behind an empty placeholder file of the same name. ILM shims  can issue a message during recall if insufficient space exists in the sink file system. When a message issues for insufficient space in sink file system, the user or an administrator will have to clear some space in host file system  in order to recall the file.","The present invention provides a system for recalling a migrated user data storage file. The recall process begins when the host system opens a file. ILM shim  then intercepts the open call and forwards a synchronous open request to ILM Controller . ILM controller  determines if the file has been migrated. If the file is not migrated, the recall process then concludes when ILM Controller  notifies ILM shim  that the file can now be opened in the normal fashion. If the file is migrated, ILM Controller  recalls the file to the host file system  from source ILM subsystem ,. First, ILM Controller  accesses the ILM database  to determine where the file resides in ILM subsystem ,, the source subsystem. Next, ILM Controller  obtains from ILM shim  the ordered block-number list for the file to be recalled. This block number list comprises host file system  data block locations in the sink subsystem, HFS LUN . ILM Controller  directs source subsystem ILM Head  to transfer the file to the sink subsystem. This transfer process is similar to the migration process. The file transfer process uses a modified FTP process that accepts an ordered logical block-number list as a sink file name and stores the file content in these blocks. After the file transfer is complete, source subsystem ILM Head  deletes the file from ILM subsystem ,. After the file is deleted, ILM Head  notifies ILM Controller  that the recall is complete. The process ends when ILM Controller  deletes the migration notation for this file from ILM Database . ILM controller  then notifies the ILM shim  to resume the native open method.","In an alternative method to recall a migrated file, ILM shim  replaces the migrated file with an empty placeholder file. ILM Controller  asks ILM shim  to re-allocate the data blocks before the recall is performed. Reallocation may be performed by writing one byte in each block to be allocated. If ILM shim  cannot allocate enough data blocks to store the recalled file, ILM Controller  directs the shim to ask the user to clear some space in host file system  and try again.","The present invention also provides a system for the replication of a user data storage file. Storage policy specifications may direct ILM Controller  to replicate a user file on a host file system  that is mapped to a different HFS SAN subsystem , where both the source and sink devices are HFS SAN subsystems. The replication process has elements in common with the migration and recall methods described above.","ILM Controller  selects sink HFS SAN subsystem  and LUN  in accordance with storage policy. ILM Controller  then directs sink file system ILM shim  to allocate sufficient space, if possible, to receive the replicated file, and obtains from ILM shim  the logical block-number set that will comprise the replica. ILM Controller  then consults source file system ILM shim  to acquire the block-number set comprising the source file. ILM Controller  then directs the source ILM Head  to transfer these blocks to sink HFS SAN subsystem . ILM controller  may use a modified FTP process that accepts ordered block-number lists as both the source and sink file names. The replication process terminates upon conclusion of the file transfer. The replica is stored in HFS SAN subsystem  and not in ILM SAN subsystem . ILM Controller  does not catalog this replica in ILM DB .","The present invention also provides a method for replication of a migrated file, where a migrated file is replicated on a different ILM SAN subsystem . This is where both the source and sink devices are ILM SAN subsystems . The file transfer between ILM SAN subsystems  uses a stock FTP process since the source and sink files can be referred to by name. Also, it is not necessary to allocate space for the replica in advance of the transfer, but it is necessary to ensure the transfer completes successfully. ILM Controller  then catalogues the replica in ILM DB . The replica is not stored in HFS SAN . The replica is purely an ILM object, and is it not directly accessible from any host system.","The present invention also provides a method for migration of a migrated file. Migrated file migration is similar to the process for replication of a migrated file, however, the file is moved rather than replicated in accordance with storage policy. In a typical hierarchical storage management (HSM) progression, migrated files are in turn demoted to the next storage performance echelon, ILM subsystem ,. The next storage performance echelon is usually more cost-effective than the storage tier from which the file is being migrated.","The present invention also provides a method for moving a file from one host file system  to another host file system  mapped or mounted by the same host or a different host. Moving a file also means to relocate the file within HFS SAN  or within ILM SAN . The present invention provides a method for moving a file between ILM SAN subsystems ,.","The present invention also provides a method for promoting a migrated file from ILM SAN subsystem  to its host file system  of origin on HFS SAN subsystem . Promoted means the data associated with an HSM-migrated file is moved or recalled to host file system  where the data originated, whereupon the file is no longer considered migrated.","The present invention also provides additional administrative functions that enable the customer to manage ILM file system contents ,. Administration functions may include provision of additional storage, manual replication of files, movement of files and migration of files.","The present invention may also provide a method for offline replication of data files such as hostless backup and data duplication. Hostless backup intervals may be defined by storage policy. Replication capability may be invoked to copy a user file to an ILM subsystem ,. Additional storage policies can specify migration and deletion criteria for the backup copy.","The present invention also provides a \u201cCopy-on-X\u201d capability as defined by the user. The user file is replicated on ILM subsystem , in accordance with storage policy whenever the ILM Controller  detects a Copy-on-X event. ILM shim  notifies ILM Controller  of all copy-on-X event primitives. Primitives may include, but are not limited to: close( ), write( ) and delete( ). ILM controller  can manage the replication to HFS SAN subsystem  or ILM SAN subsystem , according to storage policy.","In a Copy-on-write event, the file is automatically replicated just before the first update is applied, providing a generational version control capability. In a copy-on-delete event, the file is automatically replicated just before it is deleted, providing data archival capability. During a copy-on-create event, the file is automatically replicated when it is closed upon creation, providing data protection capability.","While embodiments of the invention have been illustrated and described, it is not intended that these embodiments illustrate and describe all possible forms of the invention. Rather, the words used in the specification are words of description rather than limitation, and it is understood that various changes may be made without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIGS. 3","i":["a ","b "],"b":"3"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
