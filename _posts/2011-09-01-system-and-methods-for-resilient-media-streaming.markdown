---
title: System and methods for resilient media streaming
abstract: A computer implemented method of streaming media on a computing device is disclosed in which a streaming protocol adapter is provided on the computing device for streaming media to a local streaming client on the computing device with enhanced resiliency. The streaming adapter downloads one or more stream files that include the media file formatted for delivery according to a transfer protocol, and also include streaming template transactions for supporting communicating from the streaming adapter to the streaming client. The streaming client may be a standard real-time streaming protocol (RTSP) client, and the streaming adapter may be an RTSP adapter.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09276979&OS=09276979&RS=09276979
owner: VUCLIP (SINGAPORE) PTE. LTD.
number: 09276979
owner_city: Singapore
owner_country: SG
publication_date: 20110901
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is a National Phase application claiming the benefit of No. PCT\/CA2011\/050533 filed on Sep. 1, 2011, in English, which further claims priority to U.S. Provisional Application No. 61\/379,185, titled \u201cSYSTEMS AND METHODS FOR RESILIENT MEDIA STREAMING\u201d and filed on Sep. 1, 2010, the entire contents of which are incorporated herein by reference.","This disclosure relates to systems and methods for streaming media content, and more particularly, this disclosure relates to systems and methods for resiliently streaming media from a server to a mobile computing device over a wireless network.","Mobile applications that employ wireless networks for connecting with one or more server entities face multiple challenges. For example, the underlying wireless transport network is likely to fail more often than when connecting over wired networks, and thus the assumption that network connections will remain connected most of the time is generally not true for mobile applications. As a result, applications designed with such assumptions (such as traditional software applications) do not yield a good quality of experience for end users running applications on mobile devices.","While smartphones are often equipped with platforms that support advanced application programming interfaces (APIs) for streaming media content, some mobile devices and embedded systems, such as feature phones, are often provided with relatively simple APIs that are restricted in functionality. In particular, many mobile devices are designed to operate on the Java Micro Edition (Java ME or J2ME) Platform and the entry level Symbian platform, which often restricts media streaming applications to applications that require a continuous connection between the computing device and a remote server.","Such devices (and many server applications such as web services, video streaming servers, and file transfer protocol FTP servers) are session based, and are not designed for mobile client applications that may get disconnected during a data or media streaming session. A disconnection typically requires the client application to start afresh, which is highly undesirable from a user perspective, particularly when streaming media content.","Media content may be streamed to a mobile client using the Real Time Streaming Protocol (RTSP), which is often supported by feature phones operating on the J2ME platform and most smart phones. RTSP is an application-level protocol for control over the delivery of data with real-time properties. RTSP provides an extensible framework to enable controlled, on-demand delivery of real-time data, such as audio and video. Sources of data can include both live data feeds and stored data such as media files. This protocol is intended to control multiple data delivery sessions, provide a means for choosing delivery channels such as User Datagram Protocol (UDP), multicast UDP) and Transport Control Protocol (TCP), and provide a means for choosing delivery mechanisms based upon various streaming protocols, such as RTP (as defined in RFC 1889). This protocol requires a steady network connection between the client and the server. Network disconnections can prematurely interrupt and stop a media session, resulting in a poor quality of experience for the user. Therefore, while some solutions exist for streaming media to mobile devices with moderate computing power such as feature phones, or to smart phones under low-speed network conditions, the session-based nature of the existing streaming solutions often leads to poor playback and user experience.","A computer implemented method of streaming media on a computing device is disclosed in which a streaming protocol adapter is provided on the computing device for streaming media to a local streaming client on the computing device with enhanced resiliency. The streaming adapter downloads one or more stream files that include the media file formatted for delivery according to a transfer protocol, and also include streaming template transactions for supporting communicating from the streaming adapter to the streaming client. The streaming client may be a standard real-time streaming protocol (RTSP) client, and the streaming adapter may be an RTSP adapter.","Accordingly, in a first aspect, there is provided a computer implemented method of streaming media on a computing device, the computing device including a streaming client, the method comprising the steps of: identifying a local streaming adapter and a selected media file for playback on the computing device; sending a request from the streaming client to the local streaming adapter for playback of the selected media file, identifying a location of one or more stream files on a remote server, wherein the one or more stream files includes the selected media file formatted for delivery according to a transfer protocol and further includes streaming template transactions for supporting communicating from the local streaming adapter to the streaming client; downloading the one or more stream files to the local streaming adapter; and streaming the selected media file from the local streaming adapter to the streaming client, wherein streaming transactions sent from the local streaming adapter to the streaming client are obtained from the streaming template transactions.","In another aspect, there is provided a method of transcoding a media file for use in locally streaming the media file between a local streaming adapter and a streaming client, wherein the local streaming adapter and the streaming client reside on a computing device, the method comprising the steps of: transcoding the media file for transport according to a transfer protocol, thereby obtaining a transcoded media file; generating streaming protocol template transactions for supporting communicating from the local streaming adapter to the streaming client, wherein the streaming protocol template transactions include transactions that would be sent from a streaming sever to the streaming client under ideal network conditions; and storing the transcoded media file and the streaming protocol template transactions on a server, wherein the transcoded media file and the streaming protocol template transactions are made available for downloading by the local streaming adapter.","In another aspect, there is provided a computer-readable storage medium comprising instructions for locally streaming a media file on a computing device, wherein execution of the instructions by one or more processors of the computing device causes the one or more processors to carry out the steps of: identifying a local streaming adapter and a selected media file for playback on the computing device; sending a request from a streaming client to the local streaming adapter for playback of the selected media file, identifying a location of one or more stream files on a remote server, wherein the one or more stream files includes the selected media file formatted for delivery according to a transfer protocol and further includes streaming template transactions for supporting communicating from the local streaming adapter to the streaming client; downloading the one or more stream files to the local streaming adapter; and streaming the selected media file from the local streaming adapter to the streaming client, wherein streaming transactions sent from the local streaming adapter to the streaming client are obtained from the streaming template transactions.","In another aspect, there is provided a computer implemented method of connecting a first computing device and a second computing device such that an application running on the first computing device perceives the connection as being resilient, the method comprising the steps of: receiving, on the first computing device, a request from the application to create a connection between the first computing device and the second computing device; creating a local endpoint socket on the first computing device, such that a first connection is formed between a socket on the first computing device and the local endpoint socket via a loopback connection; redirecting the request to the local endpoint socket; establishing a second connection between the local endpoint socket and the second computing device according to the request; monitoring the second connection; and in the event of a disconnection of the second connection, reconnecting second connection.","In another aspect, there is provided a computer-readable storage medium comprising instructions for connecting a first computing device and a second computing device such that an application running on the first computing device perceives the connection as being resilient, wherein execution of the instructions by one or more processors of the computing device causes the one or more processors to carry out the steps of: receiving, on the first computing device, a request from the application to create a connection between the first computing device and the second computing device; creating a local endpoint socket on the first computing device, such that a first connection is formed between a socket on the first computing device and the local endpoint socket via a loopback connection; redirecting the request to the local endpoint socket; establishing a second connection between the local endpoint socket and the second computing device according to the request; monitoring the second connection; and in the event of a disconnection of the second connection, reconnecting second connection.","In another aspect, there is provided a computer implemented method of transferring a file from a server to a computing device, the server including an application adapter maintaining a local loopback connection within the server, the method comprising the steps of: receiving, at the application adapter, a request from the computing device to transfer the file; providing the request to the server and initiating the transfer of the file from the server to the client application; monitoring the connection between the application adapter and computing device; in the event of a disconnection of the connection, caching a response from the server; and upon reconnection of the connection between the application adapter and the computing device, retrieving the cached portion of the file and resuming the transfer of the file.","In another aspect, there is provided a computer-readable storage medium comprising instructions for transferring a file from a server to a computing device, the server including an application adapter maintaining a local loopback connection within the server, wherein execution of the instructions by one or more processors of the computing device causes the one or more processors to carry out the steps of: receiving, at the application adapter, a request from the computing device to transfer the file; providing the request to the server and initiating the transfer of the file from the server to the client application; monitoring the connection between the application adapter and computing device; in the event of a disconnection of the connection, caching a response from the server; and upon reconnection of the connection between the application adapter and the computing device, retrieving the cached portion of the file and resuming the transfer of the file.","A further understanding of the functional and advantageous aspects of the disclosure can be realized by reference to the following detailed description and drawings.","Various embodiments and aspects of the disclosure will be described with reference to details discussed below. The following description and drawings are illustrative of the disclosure and are not to be construed as limiting the disclosure. Numerous specific details are described to provide a thorough understanding of various embodiments of the present disclosure. However, in certain instances, well-known or conventional details are not described in order to provide a concise discussion of embodiments of the present disclosure.","As used herein, the terms, \u201ccomprises\u201d and \u201ccomprising\u201d are to be construed as being inclusive and open ended, and not exclusive. Specifically, when used in the specification and claims, the terms, \u201ccomprises\u201d and \u201ccomprising\u201d and variations thereof mean the specified features, steps or components are included. These terms are not to be interpreted to exclude the presence of other features, steps or components.","As used herein, the term \u201cexemplary\u201d means \u201cserving as an example, instance, or illustration,\u201d and should not be construed as preferred or advantageous over other configurations disclosed herein.","As used herein, the terms \u201cabout\u201d and \u201capproximately\u201d, when used in conjunction with ranges of dimensions of particles, compositions of mixtures or other physical properties or characteristics, are meant to cover slight variations that may exist in the upper and lower limits of the ranges of dimensions so as to not exclude embodiments where on average most of the dimensions are satisfied but where statistically dimensions may exist outside this region. It is not the intention to exclude embodiments such as these from the present disclosure.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 1","b":["100","110","120","110","130","140","150","110"]},"Unlike conventional streaming systems involving a remote RTSP server and an RTSP client, the present embodiment incorporates the RTSP adapter  and the RTSP client  locally on a computing device. The RTSP client  and RTSP adapter  communicate using a standard RTSP channel  and streaming data is delivered via a standard real time transport protocol such as RTP, shown in the Figure as RTP channel .","Media files, such as encoded video files, may be stored on the remote media server . As described in more detail below, a media encoder  processes the media files and generates a stream file to be downloaded by the RTSP adapter  running on the computing device.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 3","b":["200","200"]},"Computing device  includes at least one processing unit  and memory . Processing unit  executes computer-executable instructions and may include one or more processors. In a multi-processing system, multiple processors execute computer-executable instructions for increased processing power. Memory  may be volatile memory (e.g., registers, cache, RAM), non-volatile memory (e.g., ROM, EEPROM, flash memory, etc.), or a combination thereof. Software is stored in memory  for implementing the methods described in the proceeding embodiments.","Computing device  may include additional components. Computing device  may include one or more media output devices , one or more input devices , and one or more communication interfaces or connections . Computing device  may further include a storage unit or apparatus , which may be removable or non-removable. For example, storage unit or apparatus  may include magnetic disks, magnetic tapes or cassettes, CD-ROMs, DVDs, or any other medium which can be used to store information and which can be accessed within the computing device .","An interconnection mechanism interconnects the components of the computing device. An example interconnection mechanism is shown as bus . Typically, operating system software such as J2ME (not shown) provides an operating environment for other software (e.g. APIs) executing in the computing device , and coordinates activities of the components of the computing device .","Media output device  may be a display, speaker or another media device that provides media output from the computing device . Input device  may be a touch input device such as a keyboard, mouse, pen, or trackball, a voice input device, a scanning device, or another device that provides input to the computing device .","Communication interface  enables communication over a communication medium to another computing entity, such as remote server  in . The communication medium conveys information such as computer-executable instructions, audio or video input or output, or other data in a modulated data signal. A modulated data signal is a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media include wired or wireless techniques implemented with an electrical, optical, RF, infrared, acoustic, or other carrier.","The systems and methods can be described in the general context of computer-readable media. Computer-readable media are any available media that can be accessed within a computing environment. By way of example, and not limitation, with the computing device , computer-readable media may include memory , storage unit or apparatus , communication media, and combinations of any of the above.","The systems and methods can be described in the general context of computer-executable instructions, such as those included in program modules, being executed in a computing environment on a target real or virtual processor. Generally, program modules include routines, programs, application programming interfaces, libraries, objects, classes, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The functionality of the program modules may be combined or split between program modules as desired in various embodiments. Computer-executable instructions for program modules may be executed within a local or distributed computing environment.","Referring again to , the stream file encoder  converts the media file into a stream file containing a sequence of RTSP template transactions and RTP transactions that would be provided by a standard RTSP server under perfect network conditions, e.g. network conditions that are absent of discernable quality of service degradations. The content of the stream file  is schematically illustrated in , which shows a generic example format of such a file (the header in this example file is show in bold text). Stream file  includes one or more RTSP transactions , followed by one or more RTP transactions  including the media content.","The RTSP adapter  downloads the stream file and uses its content sequentially to communicate with RTSP client . RTSP adapter  reads the responses from the stream file in the forward direction and moves its read pointer past the last response read. Every RTSP request issued by RTSP client  is matched with the first RTSP response available in the stream file. Once matched, next match is determined starting from the end of last response read. Accordingly, RTSP  client perceives that it is communicating with an RTSP server instead of local RTSP adapter .","The stream file is stored on remote server  for downloading by local RTSP adapter . Remote server  may be any server capable of providing the stream file, including, but not limited to, a web server and file transfer protocol (FTP) server. Alternatively, media server , stream file encoder , and remote server  may be provided as a single remote server. In another embodiment, the stream file, once encoded by stream file encoder , may be distributed to one or more proxy servers, caching servers, or servers in a content delivery network.","Referring now to , a block diagram is provided illustrating an example system for streaming media in which media streaming controller  is provided for interacting with a user operating the computing device and providing media content and location information to the RTSP adapter . The system further includes a standard RTSP client , and a remote server , as described above. The remote server  can be a standard web server or a proprietary server. It noted that in this example, only the server resides remotely, while all other components reside on the computing device (which may be, for example, a mobile device). In this example, media streaming controller  interacts with the user (for example, via a user interface provided on the computing device) and presents a number of media files that are available to be streamed.","Media Streaming Controller  obtains this list of media files from remote Server . Media Streaming Controller  can be configured to connect with a specific remote server  or a user may choose to provide an address of the remote server. The list of media files contains a file reference, such as a remote URL, that indicates the location of the stream file on server . When a user chooses to stream one of the media files, media streaming controller  contacts RTSP adapter  and requests that it to configure a local port for a standard RTSP session with the local standard RTSP client  and also indicates the location of remote server . Media streaming controller  then launches local standard RTSP client  and passes a standard RTSP link that points to the local port configured with RTSP adapter . An example of such a local RTSP URL could be rtsp:\/\/127.0.0.1:7689\/video3679.3gp. In this example, the RTSP adapter  is listening on local port 7689 and acts as an RTSP server to standard RTSP client .","A specific example of a stream file is shown below. A brief explanation of each portion of the file is provided in italicized form for each separate section of the file defined by a header.","The following section below provides an example template for an RTSP response that the RTSP adapter will send as a response to a client's first \u201cRTSP DESCRIBE\u201d request.",{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003RTSP DESCRIBE 421 RTSP\/1.0 200 OK"},{"entry":"\u2003\u2003Server: DSS\/5.5.5 (Build\/489.16; Platform\/Win32; Release\/Darwin;"},{"entry":"state\/beta; )"},{"entry":"\u2003\u2003Cseq: 2"},{"entry":"\u2003\u2003Last-Modified: Fri, 08 Jun 2007 19:43:22 GMT"},{"entry":"\u2003\u2003Cache-Control: must-revalidate"},{"entry":"\u2003\u2003Content-length: 627"},{"entry":"\u2003\u2003Date: Fri, 08 Jun 2007 19:44:37 GMT"},{"entry":"\u2003\u2003Expires: Fri, 08 Jun 2007 19:44:37 GMT"},{"entry":"\u2003\u2003Content-Type: application\/sdp"},{"entry":"\u2003\u2003x-Accept-Retransmit: our-retransmit"},{"entry":"\u2003\u2003x-Accept-Dynamic-Rate: 1"},{"entry":"\u2003\u2003Content-Base: rtsp:\/\/192.168.1.101\/q.3gp\/"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The following provides an example template for an RTSP response that the RTSP adapter will send as a response to a client's second \u201cRTSP DESCRIBE\u201d request. In this example, an RTSP client issues two DESCRIBE requests; the first response from the adapter indicates the presentation description is in Session Description Protocol (SDP); the second response provides the SDP response.",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003RTSP DESCRIBE 197"},{"entry":"\u2003\u2003v=0"},{"entry":"\u2003\u2003o=StreamingServer 3390320674 1181331802000 IN IP4"},{"entry":"\u2003\u2003192.168.1.101"},{"entry":"\u2003\u2003s=\\q.3gp"},{"entry":"\u2003\u2003u=http:\/\/\/"},{"entry":"\u2003\u2003e=admin@"},{"entry":"\u2003\u2003c=IN IP4 0.0.0.0"},{"entry":"\u2003\u2003b=AS:70"},{"entry":"\u2003\u2003t=0 0"},{"entry":"\u2003\u2003a=control:*"},{"entry":"\u2003\u2003a=maxprate:21.000000"},{"entry":"\u2003\u2003a=range:npt=0- 349.60000"},{"entry":"\u2003\u2003RTSP DESCRIBE 430"},{"entry":"\u2003\u2003m=video 0 RTP\/AVP 96"},{"entry":"\u2003\u2003b=AS:26"},{"entry":"\u2003\u2003b=AS:24"},{"entry":"\u2003\u2003a=maxprate:15"},{"entry":"\u2003\u2003a=rtpmap:96 MP4V-ES\/90000"},{"entry":"\u2003\u2003a=control:trackID=3"},{"entry":"\u2003\u2003a=cliprect:0,0,144,176"},{"entry":"\u2003\u2003a=framesize:96 176-144"},{"entry":"\u2003\u2003a=fmtp:96 profile-level-"},{"entry":"id=1;config=000001B008000001B50EE040C0CF00000100000001200084"},{"entry":"40FA282C2090A31F"},{"entry":"\u2003\u2003m=audio 0 RTP\/AVP 97"},{"entry":"\u2003\u2003b=AS:12"},{"entry":"\u2003\u2003b=AS:9"},{"entry":"\u2003\u2003a=maxprate:21"},{"entry":"\u2003\u2003a=rtpmap:97 MP4A-LATM\/22050\/1"},{"entry":"\u2003\u2003a=control:trackID=4"},{"entry":"\u2003\u2003a=fmtp:97 profile-level-id=15;object=2;cpresent=0;"},{"entry":"\u2003\u2003config=400027103FC0"},{"entry":"\u2003\u2003RTSP SETUP 407"},{"entry":"\u2003\u2003RTSP\/1.0 200 OK"},{"entry":"\u2003\u2003Server: DSS\/5.5.5 (Build\/489.16; Platform\/Win32; Release\/Darwin;"},{"entry":"state\/beta; )"},{"entry":"\u2003\u2003Cseq: 3"},{"entry":"\u2003\u2003Last-Modified: Fri, 08 Jun 2007 19:43:22 GMT"},{"entry":"\u2003\u2003Cache-Control: must-revalidate"},{"entry":"\u2003\u2003Session: 14057427978270"},{"entry":"\u2003\u2003Date: Fri, 08 Jun 2007 19:44:37 GMT"},{"entry":"\u2003\u2003Expires: Fri, 08 Jun 2007 19:44:37 GMT"},{"entry":"\u2003\u2003Transport:"},{"entry":"RTP\/AVP;unicast;mode=play;source=192.168.1.101;client_port=24824-"},{"entry":"24825;server_port=6970-6971;ssrc=00000709"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The following provides an example template for adapter's response to a client's RTSP SETUP request. A RTSP SETUP request\/response negotiates how media stream is to be transported.",{"@attributes":{"id":"p-0054","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003RTSP SETUP 407"},{"entry":"\u2003\u2003RTSP\/1.0 200 OK"},{"entry":"\u2003\u2003Server: DSS\/5.5.5 (Build\/489.16; Platform\/Win32; Release\/Darwin;"},{"entry":"state\/beta; )"},{"entry":"\u2003\u2003Cseq: 4"},{"entry":"\u2003\u2003Session: 14057427978270"},{"entry":"\u2003\u2003Last-Modified: Fri, 08 Jun 2007 19:43:22 GMT"},{"entry":"\u2003\u2003Cache-Control: must-revalidate"},{"entry":"\u2003\u2003Date: Fri, 08 Jun 2007 19:44:37 GMT"},{"entry":"\u2003\u2003Expires: Fri, 08 Jun 2007 19:44:37 GMT"},{"entry":"\u2003\u2003Transport:"},{"entry":"RTP\/AVP;unicast;mode=play;source=192.168.1.101;client_port=16804-"},{"entry":"16805;server_port=6970-6971;ssrc=00004011"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The following provides an example template for the adapter's response to the client's RTSP PLAY request. An RTSP PLAY causes media streams to be played.",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003RTSP PLAY 303"},{"entry":"\u2003\u2003RTSP\/1.0 200 OK"},{"entry":"\u2003\u2003Server: DSS\/5.5.5 (Build\/489.16; Platform\/Win32; Release\/Darwin;"},{"entry":"state\/beta; )"},{"entry":"\u2003\u2003Cseq: 5"},{"entry":"\u2003\u2003Session: 14057427978270"},{"entry":"\u2003\u2003Range: npt=0.00000-349.60000"},{"entry":"\u2003\u2003RTP-Info:"},{"entry":"url=rtsp:\/\/192.168.1.101\/q.3gp\/trackID=3;seq=26810;rtptime=27175,"},{"entry":"url=rtsp:\/\/192.168.1.101\/q.3gp\/trackID=4;seq=6241;rtptime=23464"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The following are examples of blocks of RTP data that are included in the stream file. The RTSP adapter will feed this RTP data to the client in the same manner as an RTSP server.",{"@attributes":{"id":"p-0058","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RTP 17"]},{"entry":[{},"[17 bytes of binary RTP data]"]},{"entry":[{},"RTP 1024"]},{"entry":[{},"[1024 bytes of binary RTP data]"]},{"entry":[{},"...."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"As shown in , an RTSP based streaming solution makes use of three separate protocols: RTSP for negotiating a streaming session with the server; RTP for packetizing and delivering the actual media content (e.g. audio and\/or video information); and RTCP for monitoring ongoing RTP sessions. Connections between RTSP adapter  and RTSP client  are provided directly within the computing device, since both applications are operating on a common computing platform (such as the J2ME platform). As a result of the local implementation of the RTSP adapter and RTSP client, there are no inherent QoS issues related to the local RTSP transport. Despite the lack of need for QoS monitoring, a standard RTCP channel is employed so that the standard RTSP client provided on the computing device perceives a standard connection with an RTSP server rather than the local RTSP adapter .","The system described above is employed to stream media content on a local computing device, where the RTSP adapter  running locally behaves like a local RTSP server. The following section describes a method for streaming media content according in one example implementation, with reference to .","Initially, the RTSP client application running on the computing device is provided with an RTSP link for playback that points via a URL to the local RTSP adapter. A list of media that contains such RTSP links is provided by the server. Each of these links points to the local device. RTSP adapter may then use the filename of such an RTSP link to determine the actual remote stream file. An example link is:","rtsp:\/\/127.0.0.1\/video3456.3gp.","The filename portion of the local RTSP URL is mapped by the RTSP adapter to identify the actual location of the remote stream file. There are many ways of achieving this mapping. In one embodiment, the filename in the local RTSP URL is combined with a known base HTTP URL to determine the remote stream file location. For example, local RTSP link shown above can be mapped to the URL http:\/\/www.mycompany.com\/store\/video3456.stream for locating the stream file on the remote server.","In step , a user operating the computing device selects the URL. The standard RTSP client issues an RTSP request at step , which is sent to the RTSP adapter to stream the given RTSP URL (pointing to the local RTSP adapter).","Provided that the request is an RTSP request (see step ), the RTSP adapter proceeds by identifying the remote stream file by looking up the given URL. This may be achieved as shown in , where a Media Streaming Controller has been employed to present a list of media files available for streaming to the user, and where the Media Streaming Controller further provides this list to the RTSP adapter along with the location, on the remote server, of the stream file corresponding to each media file. As shown in step , the RTSP adapter then communicates with the remote server via the URL and subsequently begins downloading the stream file over HTTP. If, on the other hand, the client request was a RTCP report, or any other form of communication, the RTSP adapter silently ignores the request, as shown in steps  and . RTCP requests may be ignored since QoS will not be degraded over such a local and direct connection.","The RTSP adapter may buffer the downloaded media file, and once the RTSP adapter has downloaded a sufficient portion of the stream file, it begins responding to the standard RTSP client. In one embodiment, the RTSP adapter waits until at least one block of RTP data has been received. In another embodiment, a smart buffering method is performed. The adapter first measures the current data rate and determines the total length of the stream file (which can be obtained from the server based on the list of media files). The adapter then determines the play time of the entire stream file, for example, using the information provided in the RTSP DESCRIBE response. The adapter then determines the minimum number of bytes that are to be downloaded so that the remaining portion of the steam file can be downloaded within the play time.","The response is selected by matching the RTSP protocol request from the RTSP client based on the sequential ordering of the headers (the transactions) in the downloaded stream file, as shown in step . The RTSP adapter thus simply provides the response based on its RTSP template transactions within from the stream file. It is noted that step  refers to all RTSP headers, including DESCRIBE, SETUP, PLAY, PAUSE, and TEARDOWN requests.","The RTSP adapter accepts RTSP requests until it receives an RTSP PLAY request, after which it starts sending RTP data to RTSP client. Referring now to step , if the RTSP protocol request based on the first header of the stream file is RTSP PLAY, then the adapter responds by sending the RTP payloads contained within the stream file to the appropriate local port of the standard RTSP client, as indicated in step . As shown in step , the RTSP adapter will also open up local ports for RTCP, and provide RTCP responses to the RTSP client. However the adapter will always indicate a good network condition and QoS via the RTCP reports.","As shown in step , if the request was neither RTSP PLAY nor RTSP TEARDOWN, then step  is repeated and the adapter accepts additional RTSP requests from the RTSP client. Notably, only the RTSP portion of the protocol is request\/response based. The RTSP client need not issue requests after the RTSP PLAY request is made, during the time interval over which the media file is streamed according to RTP. Accordingly, the RTSP adapter spontaneously sends RTP data to the RTSP client after an RTSP PLAY request is made. The next RTSP request originating from the RTSP client may be RTSP PAUSE or TEARDOWN. Both of these requests are handled by the RTSP adapter without consulting the stream file, as per the RTSP protocol.","If, as shown in step , the RTSP request is RTSP teardown, the RTSP adapter tears down the RTSP session in step  and the session is stopped in step .","Locally streaming the media file on the computing device solves a number of problems associated with media delivery, especially with the delivery is provided over a wireless network. Most importantly, by locally streaming the media file, disconnections or variability in the network do not affect the ongoing local RTSP session. As a result, the RTSP connection is not broken during the playback of a media file when a temporary network disconnection occurs, and the user is not forced to re-establish the connection.","In one embodiment, the device running the RTSP client and RTSP adapter can pre-buffer a sufficient quantity of media data based on the current data rate for an uninterrupted streaming experience.","A benefit of the system and method disclosed above is that there is no need for a traditional RTSP server. For example, the media to be streamed can be delivered as files over HTTP by a traditional HTTP server. This can significantly improve the server scalability, since the stream file may be delivered over Content Data Networks (CDN) such as Akamai or Amazon Cloud Front.","Furthermore, as noted above, a standard RTSP client can be used as the media player on the computing device, which enables all RTSP capable devices to play media resiliently, even over very poor network connections. This is of particular importance to simpler media devices that include standard RTSP clients, such as feature phones, and to more powerful media devices that are forced to operate under low-speed networks such as 2.5G or 2.75G.","The stream file can be delivered by a wide range of delivery technologies. In particular, the streaming RTSP adapter need only implement the client portion of the delivery technology. For example, for HTTP transfer, the RTSP adapter implements the HTTP client functionality; while for FTP, the RTSP adapter implements the FTP client functionality.","It is to be understood that the scope of the embodiments described above is not intended to be limited to RTSP as a streaming protocol. Any streaming protocol involving communications between a client and a server can be used in this technique, where the server is effectively replaced by a local adapter that mimics the communication of the server. The adapter would obviously be different for different streaming protocols. One non-limiting example of an alternative streaming protocol that may be employed is the real time messaging protocol (RTMP). Furthermore, the scope of the embodiments is not limited to RTP as a transfer protocol.","Furthermore, the stream file containing the streaming protocol template transactions and the media file encoded according to a transfer protocol may be provided as multiple files that the adapter may download, as opposed to a single file as described above. In one embodiment, the streaming protocol transactions are provided in one or more transaction files, and the transport protocol transactions are provided in a transport file. In one embodiment, the one or more transaction files may be downloaded in advance or provided to the adapter in advance of the issuing of a transaction request by the streaming client.","In another embodiment, additional resiliency is provided for the preceding embodiments by improving the resiliency in the application layer of the OSI protocol stack. This allows one to employ the aforementioned methods without requiring any network infrastructure changes. A socket is a well known connection mechanism for client server applications. All operating systems (both desktop and mobile) provide an API and library to use sockets for the development of client-server applications.","This embodiment provides a resilient socket for use in mobile applications, which exposes the same API to client applications to use, but provides some extra functionality not available on conventional sockets. A resilient socket provides the following features. Most importantly, a resilient socket automatically and transparently reconnects with a server upon disconnection due to network failure. Additionally, a resilient socket automatically and transparently switches from one network to another (e.g., from cellular to WiFi) if one becomes available, and will optionally intelligently instigate a query for searching any available network connections (e.g., WiFi). Accordingly, a resilient socket provides the benefit of giving the impression that its connectivity with the server has never gone down during a disconnection event, which allows a client application using a resilient socket to be oblivious to network problems. As further described below, a client application requiring the use of a resilient socket invokes a resilient socket API to configure a local socket end point (a local IP address and a port) for communicating with a remote server.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 6","b":["510","520","510","530","520","560","530","570","530","550","545","555","570","555","550","555","550","555","550","555"]},"Accordingly, local end point socket  performs as a local proxy server socket, and a client application using the socket service perceives that it is communicating directly with a remote service. This configuration allows standard (and now local) socket connection  to appear to be always connected, even if connection  becomes disconnected. The client application therefore perceives standard socket connection  to be highly resilient. In other words, since connection  is not implemented over a remote network, there is no chance of it being disconnected for poor network conditions. It is noted that while the present example illustrates the embodiment in the context of the resilient connection of a computing device (running a client application) to a remote server, the system and method of the present embodiment may be employed to provide a resilient connection between any two computing devices. Furthermore, the resilient socket may be implemented for any one or more of uploading files, downloading files, and communicating in one or more directions.",{"@attributes":{"id":"p-0082","num":"0081"},"figref":["FIG. 7","FIG. 7"],"b":["550","530","520","610","615","550","630","640"]},"This local IP address and port is configured by the resilient socket system to communicate with mycompany.com:8080. The client application will thereafter connect with the local endpoint via its standard socket implementation. Although the client application perceives that data is being obtained from local end point , this end point merely acts as a proxy for server socket , which is the actual source of data.","As illustrated in , only the TCP\/IP connection between the local end point  and server socket component  at mycompany.com goes over a network and is susceptible to disconnection due to poor network condition. If this connection does get disconnected, the resilient socket service running at the local point  will reestablish the connection with . This connection reestablishment is transparent to the client application  and its connection  with the local endpoint .",{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 8"},"In step  of , a request is made by a user operating a web browser (on a computing device) to download and play a video, which initially resides at remote location http:\/\/mycompany.com\/video.mp4. The resilient socket system residing on the computing device is employed to capture the request and create a local endpoint at localhost:6789 in step . The resilient socket thus directs the download request to this endpoint. In step , the local endpoint receives the request for the video download and opens up an HTTP session with mycompany.com:80.","Having made the connection with the remote server (mycompany.com), the local endpoint receives data from mycompany.com:80 in step  and sends it to the web browser on the computing device. The resilient socket service running at the local end point records a measure of the amount of the video file that has been downloaded up to each moment in time, which allows for rapid reconnection and continuation of the download in the event of a disconnection. In step , provided that a portion of the file remains to be downloaded, it is detected whether or not the connection to the remote server continues to exist in step . If the connection remains active, then step  is repeated and the download continues directly. However, if the connection has been broken, the resilient socket service running at the local end point reconnects with the remote server in step , and adjusts the HTTP range header to the point in the file at which the connection was interrupted. Having re-established the connection and determined the last saved point in the file, the download is continued at step . The download is terminated in step  when all of the file has been downloaded.","The preceding embodiment of implementing a resilient socket may be further configured to include a resilient application adapter for the cases where the remote server application must maintain a steady connection with its client for its operation. An example of such service could be a custom file transfer application where a file must be transferred in its entirety through a steady connection; disconnection would require downloading the file from the beginning. In one embodiment of the resilient system described here introduces resiliency to such fragile services. Referring to , an example implementation is illustrated in which the resilient socket embodiment of  is shown as further including resilient application adapter , which connects to remote socket  of server . Local end point  of device  connects to application adapter  over connection .","As shown in the Figure, the application adapter  is co-located with the remote server such that the TCP connection  between the adapter and the server socket  is a loopback connection.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":["FIG. 10","FIG. 9"],"b":["800","810","820"]},"The application adapter initiates the request to the destination server at mycompany.com:80 in step , and receives a response. In step , a determination is made as to whether or not the connection between the application adapter and the local end point remains alive.","If the connection is alive, then the transfer is continued in steps  and , where data is exchanged between the application adapter and the local end point, and the subsequently the data is exchanged between the local end point and the custom client. When all data are exchanged the communication ends.","On the contrary, if, when executing step , it is determined that the connection between the local endpoint and the application adapted has been severed, step  is executed, where the adapter caches the response and waits for the endpoint to reconnect via the resilient socket implemented at the client (alternatively, the application adapter may itself attempt to reconnect with the local endpoint). After having made the reconnection in step , the application adapter retrieves the cache data and\/or reads new data from the client endpoint to determine the relevant file location at which to re-initiate the download in step . After having determined this location, step  is implemented to resume the download. This process is continued until the file has been downloaded as determined in step  and .","The specific embodiments described above have been shown by way of example, and it should be understood that these embodiments may be susceptible to various modifications and alternative forms. It should be further understood that the claims are not intended to be limited to the particular forms disclosed, but rather to cover all modifications, equivalents, and alternatives falling within the spirit and scope of this disclosure."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Embodiments will now be described, by way of example only, with reference to the drawings, in which:",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
