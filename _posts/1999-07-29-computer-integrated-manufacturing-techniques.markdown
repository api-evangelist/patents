---
title: Computer integrated manufacturing techniques
abstract: The present invention provides a novel distributed factory system framework including a novel factory automation lifecycle () having lifecycle activities for SW developing and integrating (), installing and administrating (), factory modeling (), manufacturing planning (), manufacturing controlling, monitoring and tracking () and analyzing of manufacturing results (). The factory lifecycle comprises framework components. The distributed factory system framework also includes application components and software building blocks. The framework components are adapted for managing the application components, while the application components are utilized to provide instructions for managing a process such as a wafer fab. The building blocks are adapted for forming or modifying framework and application components. The distributed factory system framework provides computer implemented methods for integrating processing systems and facilitates process and equipment changes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07069101&OS=07069101&RS=07069101
owner: Applied Materials, Inc.
number: 07069101
owner_city: Santa Clara
owner_country: US
publication_date: 19990729
---

{"@attributes":{"id":"description"},"GOVINT":[{},{}],"p":["This invention was made with United States Government support under Cooperative Agreement No. 70NANB7H3043 awarded by NIST. The United States Government has certain rights in the invention.","The present invention relates to techniques for computer integrated manufacturing.","A semiconductor device such as an IC (integrated circuit) generally has electronic circuit elements such as transistors, diodes and resistors fabricated integrally on a single body of semiconductor material. The various circuit elements are connected through conductive connectors to form a complete circuit which can contain millions of individual circuit elements. Integrated circuits are typically fabricated from semiconductor wafers in a process consisting of a sequence of processing steps. This process, usually referred to as wafer fabrication or wafer fab, includes such operations as oxidation, etch mask preparation, etching, material deposition, planarization and cleaning.","A summary of an aluminum gate PMOS (p-channel metal oxide semiconductor transistor) wafer fab process  is schematically shown in , illustrating major processing steps  through , as described in W. R. Runyan et al., , Addison-Wesley Publ. Comp. Inc., p.48, 1994. Each of these major processing steps typically include several sub steps. For example, a major processing step such as metallization to provide an aluminum layer by means of sputter deposition in a wafer fab chamber is disclosed in U.S. Pat. No. 5,108,570 (R. C. Wang, 1992). This sputter deposition process is schematically shown in sub steps  through  of process , see .",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIGS. 1 and 2"},"Effective wafer inventory management is necessary for maintaining inventories of unprocessed or partly processed wafers at a minimum and thereby minimizing the unit cost of the semiconductor devices which are produced in the wafer fab. Minimizing inventories of wafers in process also has a wafer yield benefit because it is well known that the longer wafers are in the process, the lower their yield. Wafer inventory management typically uses scheduling techniques to maximize equipment capabilities in view of the demand for processed wafers, for example by scheduling parallel and series processing steps to avoid processing bottlenecks. It is well known to those of ordinary skill in the art that in-process wafer inventory management is facilitated by in-process wafer tracking, such as tracking wafer lots and wafer cassettes throughout a wafer fab. Effective inventory management of a wafer fab also requires a low incidence of bottlenecks or interruptions due to unscheduled down times which can for example be caused by unscheduled maintenance, interruptions resulting from processing parameters which are outside their specified limits, unavailability of required materials such as a process gas, unavailability of necessary maintenance replacement parts or unavailability of a processing tool such as a chamber.","Many components or sub-systems of a wafer fab are automated in order to achieve a high degree of processing reliability and reproducibility and to maximize yields. Wafer fab tools such as chambers are typically controlled by a computer using a set of instructions which are generally known as a recipe for operating the process which is executed by the tool. However, it is recognized that a high degree of automation wherein various processes and metrologies are integrated, is difficult to achieve due to the complexity and inter dependency of many of the wafer fab processes, see for example Peter van Zandt, 3ed., McGraw-Hill, pp. 472\u2013478, 1997. Manufacturing systems such as a wafer fab are known to utilize software which provides an MES (manufacturing executions systems) function. Desirably, a wafer fab MES should be integrated for an entire wafer fab in order to achieve centralized wafer fab management and control. However, it is well known to those of ordinary skill in the art that a commercial wafer fab typically includes semiconductor processing tools from different equipment manufacturers, resulting in tool compatibility difficulties when attempts are made to develop an integrated MES. Another shortcoming of currently available wafer fab MES is the need for extensive software programming for each process change in the wafer fab, such as is necessary for changing a recipe, adding or replacing a tool, or changing the wafer fab to make a different wafer product.","It is well known to those of ordinary skill in the art that the functions of semiconductor manufacturing equipment, including for example a wafer fab, can be defined in basic equipment states such as the six states schematically illustrated in , see 10-96, (), published by Semiconductor Equipment and Materials International (SEMI), pp. 1\u201323, 1996. The semiconductor industry typically uses these six equipment states to measure and express equipment RAM (reliability availability and maintainability), based on functional equipment issues which are independent of who performs the function. These six basic equipment states include non-scheduled time  (), unscheduled downtime , scheduled downtime , engineering time , standby time  and productive time . Non-scheduled time  represents the time period wherein the equipment is not scheduled to be used, for example unworked shift. Unscheduled downtime  concerns time periods wherein the equipment is not in a condition to perform its intended function, e.g. during equipment repair. Scheduled downtime  occurs when the equipment is capable of performing its function but is not available to do this, such as process setup or preventive maintenance. Engineering time  concerns the time period wherein the equipment is operated to conduct engineering tests, for example equipment evaluation. Standby time  is a time period wherein the equipment is not operated even though it is in a condition to perform its intended function and is capable of performing its function, for example no operator is available or there is no input from the relevant information systems. Productive state  represents the time period wherein the equipment is performing its intended function, such as regular production and rework.","Total time period , see , is the total time during the period being measured; this includes the six equipment states , , , ,  and . Operations time  concerns the total time period of states , , ,  and . Operations time  includes equipment downtime  consisting of states  and , and equipment uptime . Equipment uptime  includes engineering time  and manufacturing time  which consists of standby time  and productive time .",{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIGS. 4 and 5","FIG. 3","FIG. 4","FIG. 5"],"b":["114","102","116","102","130","132","134","136","116","118","120","118","104","106","104","140","142","144","146","148","106","150","152","154","156","158","159"]},"Equipment uptime , depicted in , consists of engineering time  and manufacturing time . Engineering time  includes process experiments  and equipment experiments . Manufacturing time  consists of standby time  and productive time . Standby time  includes time during which there is no operator , no product , no support tool  or when an associated cluster module is down . Productive time  concerns a time period during which there is regular production , work for a third party , rework  or an engineering run . The various equipment states as described in connection with  provide a basis for communicating and evaluating RAM related equipment information in the semiconductor industry. RAM related equipment information includes topics which are well known to those of ordinary skill in the art such as: equipment reliability, equipment availability, equipment maintainability and equipment utilization, see for example SEMI E10-96 at pp. 6\u201311. Generally, MES functions can be employed to keep track of information regarding equipment states in manufacturing systems such as a wafer fab.","Advances in semiconductor materials, processing and test techniques have resulted in reducing the overall size of the IC circuit elements, while increasing their number on a single body. This requires a high degree of product and process control for each processing step and for combinations or sequences of processing steps. It is thus necessary to control impurities and particulate contamination in the processing materials such as process gases. Also, it is necessary to control processing parameters such as temperature, pressure, gas flow rates, processing time intervals and input sputter power. As illustrated in , a wafer fab includes a complex sequence of processing steps wherein the result of any particular processing step typically is highly dependent on one or more preceding processing steps. For example, if there is an error in the overlay or alignment of etch masks for interconnects in adjacent IC layers, the resulting interconnects are not in their proper design location. This can result in interconnects which are packed too closely, forming electrical short defects between these interconnects. It is also well known that two different processing problems can have a cumulative effect. For example, a misalignment of interconnect etch masks which is not extensive enough to result in an electrical short, can still contribute to causing an electrical short if the process is slightly out of specification for allowing (or not detecting) particulate contamination having a particle size which would not have caused an electrical short if the interconnect masks had been in good alignment.","Processing and\/or materials defects such as described above generally cause a reduced wafer fab yield, wherein the yield is defined as the percentage of acceptable wafers that are produced in a particular fab. In-process tests and monitoring of processing parameters are utilized to determine whether a given in-process product or process problem or defect indicates that intervention in the process run is necessary, such as making a processing adjustment or aborting the run. Consequently, product and process control techniques are used extensively throughout a wafer fab. When possible, yield problems are traced back to specific product or processing problems or defects to ultimately improve the yield of the wafer fab. High yields are desirable for minimizing manufacturing costs for each processed wafer and to maximize the utilization of resources such as electrical power, chemicals and water, while minimizing scrap re-work or disposal.","It is known to use SPC (statistical process control) and SQC (statistical quality control) methods to determine suitable wafer fab control limits and to maintain the process within these limits, see for example R. Zorich, , Academic Press Inc., pp. 464\u2013498, 1991. SPC and SQC methodologies suitable for a wafer fab include the use of control charts, see for example R. Zorich at pp. 475\u2013498. As is well known to those of ordinary skill in the art, a control chart is a graphical display of one or more selected process or product variables, such as chamber pressure, which are sampled over time. The target value of a particular variable and its upper and lower control limits are designated on the chart, using well known statistical sampling and computation methods. The process is deemed out of control when the observed value of the variable, or a statistically derived value such as the average of several observed values, is outside the previously determined control limits. Control limits are typically set at a multiple of the standard deviation of the mean of the target value, such as for example 2\u03c3 or 3\u03c3. The target value is derived from a test run or a production run which meets such wafer fab design criteria as yield, process control and product quality. SPC and SQC are considered synonymous when used in the above context, see R. Zorich at p. 464.","Accordingly, a need exists for methods and techniques which provide improved computer implemented integration of semiconductor manufacturing techniques in order to optimize process control, quality, yield and cost reduction. Also, there is a need for centralized wafer fab management and control through a computer integrated manufacturing system which facilitates processing or equipment changes without extensive software programming.","The present invention provides novel techniques for computer integrated manufacturing, particularly for manufacturing integrated circuit structures such as semiconductor wafers. These novel techniques provide the needed improvements in computer integration.","In one embodiment of the present invention a novel factory automation lifecycle is provided which includes SW for lifecycle activities for developing and integrating, installing and administrating, factory modeling, manufacturing planning, manufacturing controlling, monitoring and tracking, and lifecycle activities for analyzing manufacturing results. Output from an analyzing manufacturing results lifecycle activity can provide an input to other lifecycle activities, such as the factory modeling lifecycle activity. Framework components are associated with various lifecycle activities.","In another embodiment of the present invention a novel method for managing a processing system is provided which includes utilizing framework software components, application software components and software building blocks. The application components provide instructions for managing the system while the framework components are employed to manage the application components. The building blocks are adapted for forming or modifying framework and application components. A factory automation lifecycle includes the framework components. A novel tool integration component is employed by the novel method to communicate instructions to processing tools of the system. The tool integration component comprises a tool interface program and a tool integration component adapter. Instructions for managing the system can be modified by inputting data.","In still another embodiment of the present invention a novel method for processing a product includes determining the specifications for processing the product and then managing the process by means of a novel distributed factory system framework which includes framework components, application components and SW building blocks. The novel distributed factory system can be modified, if necessary, by inputting data. Computer implemented instructions for managing are formed by application components. These instructions are communicated to the process for manufacturing a product, for example by utilizing a tool integration component. The instructions are then implemented in the process, for example for fabricating integrated circuit structures.","In yet another embodiment of the present invention a novel method for starting a wafer fab run includes determining the sequence of processing steps and subsequently forming a workflow defining this sequence in a visual workflow component. The visual workflow component is included in a novel distributed factory system framework comprising framework components and application components. A request is then made to the visual workflow component to start the run by means of a work in progress management component or a GUI.","In another embodiment of the present invention an apparatus is provided including product processing equipment, a central processing unit, a link for operably linking the processing equipment to the central processing unit, a memory for storing digitally coded data structures, and data structures comprising a novel factory automation lifecycle. The present embodiment also provides for data structures including application components and building block components.","In still another embodiment of the present invention a distributed factory system framework is provided for managing a processing system, including a digitally coded first data structure comprising framework components, a second data structure including application components and a link for communicating digitally coded instructions to the processing system.","In yet another embodiment of the present invention a novel apparatus is provided comprising processing equipment and a novel distributed factory system framework for managing a processing system.","In additional embodiments of the present invention, novel data storage devices are provided comprising data structures such as novel factory automation lifecycle activity data structures, framework component data structures, application component data structures and building block data structures.","While describing the invention and its embodiments, certain terminology will be utilized for the sake of clarity. It is intended that such terminology includes the recited embodiments as well as all equivalents.","In one embodiment of the invention a DFS\/F (distributed factory system framework) SW (software) environment is provided to automate, integrate and coordinate factory MES (manufacturing execution system(s)) comprising equipment steps, decision steps and data steps which can be present in a processing, manufacturing or fabricating system or facility such as a wafer fab for processing or fabricating semiconductor structures, such as IC (integrated circuit) structures. The expression \u201cFW\u201d (framework) as defined herein, includes a collection of linked SW structures, components or classes that provide a functionality or a set of services. The expression \u201cMES\u201d as defined herein, includes a collection of SW data structures for starting processing related tasks, managing and\/or controlling work in progress and facilitating the use of resources, such as materials, equipment, information and historical data for the execution of processing\/ manufacturing\/fabrication tasks, optionally including testing and data gathering tasks. The expression \u201cIC structures\u201d as defined herein, includes completely formed ICs and partially formed ICs.","DFS\/F of the present invention includes a novel FALC (factory automation lifecycle) , shown in , to form an overall structure for integrated factory automation MES. FALC  is adapted for integrating, automating, managing or controlling various manufacturing related aspects of a processing, manufacturing or fabricating system or facility, thereby forming a factory model. These aspects can include wafer fab related equipment, such as wafer fab tools, methods such as wafer fab processing procedures, materials such as wafer fab process gases, inventory control, such as in-process wafer inventory control, work in process status determinations, evaluating in-process test data, monitoring equipment functions and quality management features, such as SPC (statistical process control). The novel lifecycle additionally facilitates the integration of tools, equipment or software from different tool, equipment or software suppliers to provide a coordinated manufacturing or fabricating facility wherein several tools are integrated.","Novel FALC , depicted in , includes an SW developing and integrating lifecycle activity , an installing and administrating lifecycle activity , a factory modeling lifecycle activity , a manufacturing planning lifecycle activity , a manufacturing controlling, monitoring and tracking lifecycle activity  and an analyzing of manufacturing results lifecycle activity . As schematically shown in , selected output from analyzing of manufacturing results lifecycle activity  can provide feedback to other lifecycle activities of the lifecycle, such as SW developing and integrating lifecycle activity , factory modeling lifecycle activity  and manufacturing planning lifecycle activity . The output and input interactions between these lifecycle activities will be described in more detail in connection with the description of lifecycle activity  for analyzing the manufacturing results.","The various lifecycle activities of FALC  of the present invention comprise SW. Hardware parts, equipment or assemblies are needed to support, operate or utilize the SW, which provides the functionality of the six lifecycle activities of FALC . The FALC  software includes FW SW components. The FW components define common system or factory operation rules and services and they are employed to provide services to application SW components which manage\/control processing functions or systems, for example factories including fabricating facilities and various combinations of wafer fab tools, through interaction with the control system of processing equipment, such as on-board wafer fab tool controllers. Application components are adapted to meet the specific requirements of the process and the processing equipment, such as a wafer fab recipe. In other words, repeat processing runs of the same type of product in the same equipment using the same processing conditions does not require a modification in the application components. However, a change in materials, products, equipment or processing conditions typically requires modification of the data of one or more application components. For example, a change in a processing condition requires a corresponding change in one or more application components in order to provide the changed instructions to the equipment. FW components provide the services which enable a user to modify one or more application components to match novel DFS\/F to a new processing condition or to a different material or tool. A novel FALC, such as FALC , can be adapted to new processing conditions, materials or equipment through data input, provided the adaptation does not require a change to a processing system which is substantially different. For example, the SW code of several application components of a wafer fab FALC is different from the SW code of the corresponding components of a FALC for a batch manufacturing process of a pharmaceutical product. Application components of the novel DFS\/F communicate with equipment such as individual wafer fab tools through protocols and interfaces as will be described more fully in connection with TIC (tool integration component).","FW and application SW elements are referred to as components because they are separate SW entities, each with its own database, server, and standard GUI. The components inter-operate through a public set of communication standards such as DCOM (MICROSOFT\u00ae\u2014Microsoft is a registered trademark of Microsoft Corporation, Redmond, Wash. distribute common object model) APIs (application programming interface) or CORBA (common object request broker architecture). SW common building blocks are provided in DFS\/F to facilitate the creation of new FW and application components and to modify existing FW and application components. These building blocks typically include GUI (graphical user interface), server and DB (database) elements. Typically, DFS\/F and FALC  components and SW building blocks are processed by one or more central processing units for data processing or one or more computers. Central processing units and computers which are suitable for the embodiments of the present invention are well known to those of ordinary skill in the art.","The six lifecycle activities of FALC , see , include the following functions. SW developing and integrating lifecycle activity  is adapted for defining a common structure for factory objects and servers. This common structure simplifies the formation of DFS\/F compliant applications. Installing and administrating lifecycle activity  installs MES applications. It is necessary to register the capabilities of the MES applications with the DFS\/F to make it possible to integrate the MES applications jointly with the capabilities of other applications. Lifecycle activity  also monitors and controls the software comprising the factory's MES. Additionally, it regulates access to MES capabilities, providing a common security service. Factory modeling lifecycle activity  is adapted for coordinating the formation of a consistent factory model in multiple manufacturing related applications. For example, the introduction of a new product typically requires changes in multiple applications, such as adding the product in both a WIP (work in progress) application and in a planning application. Lifecycle activity  is also adapted for defining the manner in which multiple applications will work together, for example defining how a WIP application and an equipment application can operate together to ensure that the correct equipment is used to manufacture a given product. SW of factory modeling lifecycle activity  is adapted for planning, controlling and tracking the manufacturing once a model of the factory's MES functions has been built by using factory modeling related SW.","Manufacturing planning lifecycle activity , depicted in , gathers status information from multiple applications in order to provide a planning application component. Additionally, lifecycle activity  develops and distributes manufacturing plans\/schedules to the application components which manage the factory resources. Manufacturing controlling, monitoring and tracking lifecycle activity  is provided to coordinate the functioning of manufacturing application components in the execution of the manufacturing plan\/schedule, to produce products according to the steps which are defined in the factory model. Analyzing manufacturing results lifecycle activity  is adapted for combining information from application components for analysis. It correlates data in different application components for data analysis and defines, detects and responds to specific factory events. This lifecycle activity is adapted for comparing actual production with planned production and indicating when an updated plan is needed through inputs to SW developing and integrating lifecycle activity , factory modeling lifecycle activity , and\/or manufacturing planning lifecycle activity . As illustrated in , feedback loops from lifecycle activity  to these lifecycle activities form FALC  feedback cycles as follows. Feedback from lifecycle activity  to lifecycle activity  forms a SW developing cycle  while feedback from lifecycle activity  to lifecycle activity  provides a modeling cycle . An executing cycle  is formed in the feedback loop from lifecycle activity  to lifecycle activity . While the six lifecycle activities of novel FALC  have been depicted and described in a sequential manner, it will be understood that the SW associated with each of these lifecycle activities typically proceeds concurrently with one or more of the other lifecycle activities.","FALC  of the present invention described above is one facet of novel DFS\/F. Two other facets of DFS\/F are defined as: system layers and N tiers. The system layers aspect of novel DFS\/F is described in Table I.",{"@attributes":{"id":"p-0045","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE I"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"DFS\/F System Layers"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"1. Base technology:"},{"entry":"This includes the basic technology building blocks for DFS\/F such as"},{"entry":"messaging, graphical user interface (GUI) construction, use of for example"},{"entry":"MTS (Microsoft transaction manager) for server construction, and"},{"entry":"mapping objects to a relational database for persistence."},{"entry":"2. Common building blocks:"},{"entry":"This includes common items such as user-defined attributes, versioning,"},{"entry":"history and classification schemes. Typical common building blocks are"},{"entry":"listed and described in Table II."},{"entry":"3. Framework components:"},{"entry":"FW components manage the overall operation of the factory system"},{"entry":"through the process of building a factory model, manufacturing products"},{"entry":"according to the model, and then assessing the outcome to determine the"},{"entry":"need for improvements. FALC 200 includes these components. Typical"},{"entry":"FW components are listed and described in Table III."},{"entry":"4. Application components:"},{"entry":"These components comprise factory resource management functionality,"},{"entry":"such as material management, equipment management and tool integration"},{"entry":"such as VFEI (virtual factory equipment interface) level communications"},{"entry":"with tools. Typical application components are listed and described in"},{"entry":"Table IV."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The common building blocks of the novel DFS\/F are typically utilized to form or modify FW and application components. Representative building blocks are shown in Table II.",{"@attributes":{"id":"p-0047","num":"0046"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE II"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Common Building Blocks"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1.","Server construction building block which includes interfacing"]},{"entry":[{},"between server API (application programming interface) and factory"]},{"entry":[{},"object instantiation (construction of an object instance)."]},{"entry":["2.","Persistence building block for generating object to SQL\/ODBC"]},{"entry":[{},"(structure query language\/open DB connection) mapping."]},{"entry":["3.","DFS\/F common GUI controls building block to provide the common"]},{"entry":[{},"controls for the construction of the GUIs."]},{"entry":["4.","Publish and subscribe messaging building block for publish subscribe"]},{"entry":[{},"messaging, which differs from synchronous DCOM messaging."]},{"entry":["5.","Dynamic API discovery building block used by FW components to"]},{"entry":[{},"discover services provided by DFS\/F components."]},{"entry":["6.","Associations building block to connect objects across DFS\/F"]},{"entry":[{},"components. Representative uses include linking modeling data to"]},{"entry":[{},"answer \u201cwhere used\u201d questions and linking MES execution"]},{"entry":[{},"information, such as quality data, to equipment history."]},{"entry":["7.","History building block to provide a common service to store and"]},{"entry":[{},"retrieve the history of factory events."]},{"entry":["8.","Generic service executor building block to execute the different types"]},{"entry":[{},"of DFS\/F services including: (1) synchronous services, (2) long"]},{"entry":[{},"running services which are implemented through a completion"]},{"entry":[{},"callback protocol and (3) GUI based services that are implemented"]},{"entry":[{},"through a link between other services and a target computer desktop."]},{"entry":["9.","Classifications building block which provides a common service to"]},{"entry":[{},"classify factory objects for queries and analysis."]},{"entry":["10.","Customer defined attributes building block for extending the DFS\/F"]},{"entry":[{},"component based object models. DFS\/F typically provides user"]},{"entry":[{},"extensible attribute models which support expansion of the model"]},{"entry":[{},"based on the user's needs."]},{"entry":["11.","State models building block includes a service to define and then"]},{"entry":[{},"operate state models, such as tracking states for equipment, material"]},{"entry":[{},"and ECNs (engineering change notice). A state model building block"]},{"entry":[{},"can be defined such that it tracks unplanned downtime of the various"]},{"entry":[{},"chambers of a cluster tool."]},{"entry":["12.","Namespace building block defines management areas within DFS\/F"]},{"entry":[{},"data models."]},{"entry":["13.","Schedule\/datebook building block to support scheduling and add the"]},{"entry":[{},"capability for each factory object to have a datebook showing future"]},{"entry":[{},"events and history enhancements to indicate how a particular schedule"]},{"entry":[{},"was followed."]},{"entry":["14.","Templates building block provides services to define base definitions"]},{"entry":[{},"that can be shared among factory objects. For example, this building"]},{"entry":[{},"block can be used to define common characteristics for all memory"]},{"entry":[{},"products."]},{"entry":["15.","Versioned objects building block includes services to manage and"]},{"entry":[{},"track changes in factory model objects over time, e.g. for example"]},{"entry":[{},"managing and tracking changes in the definition of a particular"]},{"entry":[{},"product over time."]},{"entry":["16.","Navigation building block to view the relationship between factory"]},{"entry":[{},"objects such as a material lot history."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0048","num":"0047"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE III"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Framework Components"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1.","SC (security component) provides basic security having 3 security"]},{"entry":[{},"modes: (1) defining user roles, (2) assigning users to roles and (3)"]},{"entry":[{},"defining access to DFS\/F objects and methods by role."]},{"entry":["2.","GCC (GUI console component) is a container supporting navigation"]},{"entry":[{},"and showing of data between DFS\/F GUIs. Custom and\/or third"]},{"entry":[{},"party applications can be added to the console toolbar. A custom"]},{"entry":[{},"environment can be created by adding GUIs and factory objects. The"]},{"entry":[{},"console can include a transaction view, i.e. full screen, cascade,"]},{"entry":[{},"tile and icons. A GUI console navigator allows browsing and"]},{"entry":[{},"selecting DFS\/F factory objects and has search capability based"]},{"entry":[{},"on server-supplied search criteria. For example, it provides"]},{"entry":[{},"navigation and data sharing between ActiveX GUIs."]},{"entry":["3.","PLMC (performance & license management component) for tracking"]},{"entry":[{},"and regulating system usage of components."]},{"entry":["4.","SMC (saga management component) provides support for \u201clong"]},{"entry":[{},"running\u201d transactions that should be treated as a unit but take too"]},{"entry":[{},"long to rely on standard DB locking techniques."]},{"entry":["5.","CRC (context resolution component) aids in MES execution by"]},{"entry":[{},"linking context to results, insuring that the appropriate instructions"]},{"entry":[{},"are delivered to any resource by allowing users to flexibly model how"]},{"entry":[{},"resource selections are made."]},{"entry":["6.","CMC (configuration management component) provides the"]},{"entry":[{},"management of factory model changes across components."]},{"entry":["7.","CC (calendar component) provides calendar and shift definitions for"]},{"entry":[{},"scheduling and reporting."]},{"entry":["8.","VWC (visual workflow component) defines and executes"]},{"entry":[{},"manufacturing processes and is capable of executing predetermined"]},{"entry":[{},"business processes. VWC defines business processes graphically as"]},{"entry":[{},"a sequence\/network of service invocations from a palette of DFS\/F"]},{"entry":[{},"services. Other DFS\/F components utilize the VWC for process"]},{"entry":[{},"definitions. For example, the WIP management component uses"]},{"entry":[{},"VWC services to define how products are produced and uses it"]},{"entry":[{},"to execute the processing of material lots. VWC process"]},{"entry":[{},"definition capability includes the exchange of data between"]},{"entry":[{},"service invocations and control structures to determine\/select"]},{"entry":[{},"the path(s) through predefined business processes. VWC is adapted"]},{"entry":[{},"for executing business processes autonomously, i.e. functioning"]},{"entry":[{},"independently of other SW components, and is capable of"]},{"entry":[{},"responding to automated inputs as well as to user inputs."]},{"entry":["9.","RCC (resource coordination component) is responsible for"]},{"entry":[{},"having active resources available at dispatch stations. Matches"]},{"entry":[{},"resources to common jobs\/batches employing BRC. Together with"]},{"entry":[{},"BRC it coordinates rendezvous of active and passive resources."]},{"entry":["10.","EVMC (event monitor component) monitors\/subscribes to events"]},{"entry":[{},"published by DFS\/F services. A DFS\/F service can be executed"]},{"entry":[{},"(including launching a VWC job) when a monitored event"]},{"entry":[{},"occurs. EVMC supports vigilant manufacturing through"]},{"entry":[{},"the creation of factory monitors."]},{"entry":["11.","BRC (bill of resources component) establishes the resources across"]},{"entry":[{},"multiple DFS\/F components needed to launch a batch process, i.e. a"]},{"entry":[{},"batch process involving the coordinated action of multiple resources."]},{"entry":["12.","DMC (data manager component) consolidates data from FW"]},{"entry":[{},"components and application components for reporting and analysis. It"]},{"entry":[{},"is based on DW (data warehouse) technology and can provide sample"]},{"entry":[{},"DW star schema and reports. DMC can access DBs for unstructured"]},{"entry":[{},"data analysis."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0049","num":"0048"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE IV"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Application Components"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1.","QMC (quality management component) provides quality analysis and"]},{"entry":[{},"flexible data collection. It is able to determine corrective"]},{"entry":[{},"manufacturing tactics in order to ensure conformance to"]},{"entry":[{},"predetermined business rules."]},{"entry":["2.","TIC (tool integration component) providing two way communications"]},{"entry":[{},"between DFS\/F and diverse equipment types. It is adapted for"]},{"entry":[{},"communicating through tool protocols such as SECS (SEMI -"]},{"entry":[{},"Semiconductor Equipment and Materials International - Equipment"]},{"entry":[{},"Communication Standard), GEM (generic equipment model) and"]},{"entry":[{},"VFEI (virtual factory equipment interface). SECS, GEM and"]},{"entry":[{},"VFEI are tool protocols which are well known to those of"]},{"entry":[{},"ordinary skill in the art."]},{"entry":["3.","EMC (equipment management component) resolves the different"]},{"entry":[{},"equipment states in SEMI E10 states, using a novel hierarchical"]},{"entry":[{},"model to track individual tools in chambers in cluster tools."]},{"entry":["4.","RMC (recipe management component) providing definition, selection"]},{"entry":[{},"and distribution of recipes to equipment such as fab tools."]},{"entry":["5.","DSC (dispatching and scheduling component) for scheduling and"]},{"entry":[{},"dispatching of factory tasks including processing and maintenance."]},{"entry":["6.","MHC (material handling component) for interfacing with materials"]},{"entry":[{},"handling equipment."]},{"entry":["7.","WMC (WIP -work in progress- management component) is provided"]},{"entry":[{},"to support tracking of wafers, lots, batches and carrier,"]},{"entry":[{},"supporting proactive business decisions for example: \u201cif, then\u201d."]},{"entry":[{},"WIP offers cluster tool visibility and control thereby providing"]},{"entry":[{},"MES to wafer lots inside the cluster tool."]},{"entry":["8.","Legacy system interface which is a component to access"]},{"entry":[{},"existing factory software."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"A third facet of DFS\/F of the present invention comprises the various tiers which can be present in the FW components, application components and common building blocks. For example, this can be a 3 tier facet as follows. A first tier includes clients using services from other SW programs or components, e.g. visual WF jobs, GUIs and customer programs, such as VB (virtual Basic). A second tier comprises application or FW servers using for example MTS\/DCOM to communicate DCOM. A third tier includes a DB engine, such as Oracle using an ODB (open database connectivity) interface. All DFS\/F components employ these three tiers, while common building blocks can be used in one or more of these tiers depending on the structure and function of the building block.","FW components are associated with various lifecycle activities of FALC . Representative examples of these associations are shown in Table IV.",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE V"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"FW Components Associated With FALC 200 lifecycle activities"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FALC 200",{}]},{"entry":["lifecycle activity","FW Component"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["220","SC, GCC, PLMC, SMC"]},{"entry":["230","CRC, CMC, CC"]},{"entry":["250","VWC, RCC, EVMC, BRC"]},{"entry":["260","DMC"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"FW components of an FALC of the present invention, such as FALC , are adapted for interacting with each other, thereby working together. For example, a factory model can be revised as illustrated in , by utilizing an exchange of messages between a GCC (GUI console component) , a CMC (configuration management component)  and a VWC (visual workflow component) . Changes in the factory model are collected to form an ECN (engineering change notice) in a CMC such as CMC  depicted in . The ECN is opened  () to collect the changes in the factory model. The resulting ECN data  are employed by GCC  during the editing of the VWC workflow . The workflow is displayed and edited through a GUI  contained within GCC . The changed VWC workflow is returned to VWC in step , and VWC  then adds the changed workflow to the CMC ECN in step .","Any application component of the novel DFS\/F can participate in the DFS\/F by implementing the needed services from the appropriate FW components, thereby forming a plug and play type of SW framework, as is schematically illustrated in , employing FW or application servers working together through exchanges of messages. As shown in , FW components using FW component servers for CMC , VWC , DMC , EMC , GCC  and SC  use common service protocols to provide services to application components using application component servers for EMC , WMC , DSC , QMC , TIC  and gateway component . These services communicate through common service protocols  using for example DCOM communications. This SW technique of the present invention enables a user to modify processing and equipment MES instructions through data inputs rather than coding thus eliminating the need for time consuming programming changes requiring specialized skills. The application components require effective communications with integrated pieces of equipment such as wafer fab tools and materials handling equipment in order to execute the MES instructions to the controllers of wafer fab tools and\/or other equipment. Typical controllers include processors for example micro processors such as on-board computers, computer operated software and mechanical\/electrical controllers such as switches and electrical circuits employing for example a variable resistor such as a potentiometer.","DFS\/F of the present invention includes a novel TIC application component (Table IV) for facilitating communications between various DFS\/F components and equipment, such as wafer fab tools, by providing the basic equipment control building blocks which can be assembled in a VWC (Table III) workflow to control a machine. TIC provides services which include sending and receiving VFEI messages or commands to and from equipment. A sequence of these commands or messages represents a business logic such as commands to control a tool. These types of sequences can be defined in a VWC workflow. TIC provides the building blocks which are used to send commands or messages to a tool and to receive messages or information from the tool, and to communicate the received messages or information to other DFS\/F components. TIC is part of the communications link between DFS\/F and equipment such as wafer fab tools.","TIC of the present invention comprises a novel combination of a TIP (tool interface program) and a novel TIC adapter. TIP is provided for each machine or tool type to translate VFEI commands or messages to an interface, such as SECS, of a machine and its controls such as control SW. Equipment which is adapted for communicating with novel DFS\/F will have a TIP instance, i.e. a SW process dedicated to the equipment, running as an intermediary between the equipment and the DFS\/F. An example of a suitable communication protocol between a TIP instance for a machine and DFS\/F is a VFEI on DCOM protocol. Additionally it is contemplated to provide a novel VFEI+ on DCOM protocol wherein VFEI+ will include enhancements for administration, for modeling and for the RPC (remote procedure call) nature of DCOM. It is contemplated to distribute TIP on several computers, for example where these computers are utilized in computer integrated wafer fab tools employing TIP SW.","A TIC adapter of the present invention is an intermediary between DFS\/F and TIPs for example by allowing other DFS\/F components to access tool capabilities through generalized commands which the adapter then adapts to the needs of the tool's specific TIP instances. This is illustrated in the following example for collecting measurements using a metrology tool in a wafer fab having different tools available for collecting the measurements. These novel techniques are adapted for embedding the collection process in a VWC WF which then enables a user, such as a process technician or engineer, to send identical measurement requests to TIC. The TIC adapter then translates the request into tool specific VFEI requests based on the particular tool which is selected at run time. These techniques of the present invention are capable of defining for example a single QMC (quality management component) data collection plan which can then be used for different tools collecting the same types of data, because the TIC adapter can translate the data parameter names from the generic name in the QMC plan to the specific names required by specific equipment types or tools.","Advantageously, a TIC adapter can also perform a protocol conversion between DFS\/F style communications and the TIPs. This is a useful function because many DFS\/F components are constructed using MTS and are designed to be transactional and stateless. For example, DFS\/F servers both request and process services are either \u201csynchronous\u201d, i.e. services that are expected to be completed within a predictably short completion time of one second or less, and services that are considered long running and that use an LRSP (long running service protocol). As defined herein, the term \u201clong running service\u201d includes services having a completion time which cannot be predicted and which are thus unsuitable for DB locking techniques which are typically employed in connection with conventional services, such as synchronous services. It is contemplated to process the service by an MTS based server using a relatively short lived MTS thread and wherein any longer term state is saved in a DB. It is also contemplated that service requests can be based on a DCOM RPC style model, where a service is requested which is then followed by a returned reply The TIC adapter is an intermediary between DFS\/F and TIPs.","An example of a novel TIC is illustrated in , showing a novel DFS\/F  including TIC  of the present invention. In the present example, a distributed computer having nodes A, B and C was used. DFS\/F components  communicated with fab tools  and  by means of TIC . MES instructions for tools  and  were sent by components  to novel TIC adapter  of TIC . For example, instructions for starting the processing of a material can be communicated from a DFS\/F component , such as a VWC workflow, to tool  through TIC . The TIC adapter was accessed through an MTS server on node A. The instructions for tool  were communicated from TIC adapter , through a VFEI protocol on DCOM , to a TIP instance  on node B. TIP instance  then communicated these instructions to tool  using SECS protocol  of tool . Similarly, the instructions for tool  were communicated from TIC adapter  to a TIP instance  on node C, through a VFEI protocol on DCOM . TIP instance  communicated the instructions to tool  using SECS protocol  of tool . Also a DB (not shown) can be provided which can be accessed by TIC adapter  to store and retrieve TIC data such as the network locations of specific TIPs, using such methods and techniques as are well known to those of ordinary skill in the art.","TICs of the present invention employ Microsoft DCOM messaging technology to send messages between DFS\/F components of the present invention and a TIC adapter, and between a TIC adapter and tool interface program instances according to the present invention. A TIC adapter is constructed using common building blocks of the present invention such as those described in Table II. An inventive TIC adapter can be constructed using a Microsoft transaction server. The adapter is capable of simultaneously managing messages from many DFS\/F components and many TIP instances. A TIC adapter of the present invention is capable of saving information such as pending event requests, i.e. the instruction to a TIP regarding a request that a tool should report a particular status or operating event. The information can for example be saved using Oracle database technology using such techniques as are well known to those of ordinary skill in the art.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 10","b":["610","612","614","612","616","618","614","620","610","622","612","622","624","626","614","612","622","612","628","630","614","614"]},"As shown in the above examples, application components such as TIC, communicate with and utilize FW components such as VWC (Table III). Additionally, a particular FW component can communicate with another FW component and utilize its services. For example, all FW components can use the common security FW component to regulate access to the services which these FW components provide, as is illustrated in .","Plug and play capabilities of a VWC are illustrated for example by WFs wherein the VWC is a technique for defining a business process as a WF which is subsequently executed as a job. WFs are graphical representations of business processes defined for manufacturing a product such as a semiconductor structure typically including many processing steps, equipment steps, movement steps, decision steps and data steps. Each of these steps is defined as a step in a WF. WFs can include movements, decisions, quality activities and equipment commands. WFs are built using drag and drop techniques in a computer graphical environment using techniques which are well known to those or ordinary skill in the art. Once defined, a WF is executed as a job. For example, a WF can be executed to create a lot of a product.","DFS\/F of the present invention can be utilized to start production, such as a wafer fab run, by means of the WIP management application component (Table IV) as follows. A user, such as a process engineer, defines how a particular product is made by creating a WF in VWC that defines the sequence of steps needed to make the product. This sequence can for example include a wafer fab recipe. The user then starts the lot by using the WIP management application component service or GUI requesting VWC to start the WF for the lot. In summary, WIP uses VMC as a service for defining the processing steps and subsequently for actually manufacturing\/fabricating production lots.","Building blocks provide common functionality to the novel DFS\/F techniques to facilitate the construction of application and FW components. For example, a DFS\/F classification building block (Table II) can be used in the EMC application component (Table IV) to classify equipment. It can also be used in the WIP management application component (Table IV) to classify products. This building block includes the three DFS\/F tiers. A first tier uses a DFS\/F GUI within the GCC to view and modify or update classification information. A second tier includes SW code\/logic that is provided in the component server, such as EMC or WMC servers. This particular SW defines how the classifications are specified. For example, this SW enables a user to classify a particular wafer fab tool as an etcher. The classification building block SW is used in the component servers through for example a C++ inheritance capability, i.e. the capability to pass resources or attributes from component servers down to the specifics of a particular product, process or machine. A third tier comprises a DB table definition that is employed by the component server logic for storing and retrieving classification information.","Digitally coded data structures or information of novel DFS\/F or its components and building blocks can be stored on a removable electronic data storage medium or device, such as computer floppy disks, removable computer hard disks, magnetic tapes and optical disks, to facilitate the use of the same technique at different processing locations. Alternatively, the data structure or information can be stored on a non-removable electronic data storage medium, including a medium positioned at a location which is remote from the tool, using such storage devices as are well known to those of ordinary skill in the art. The data structures or information can be communicated from a remote location to a central data processing unit or to a computer using communications techniques which are well known to those of ordinary skill in the art including hard wire connections, wireless connections and data communications methods utilizing one or more modems or techniques using one or more computers commonly known as servers. Once DSF\/F or its components or building blocks are installed, they are commonly stored in a data storage device or memory of a dedicated computer or a distributed computer system which is integrated with the processing system and its equipment, using such data storage techniques as are well known to those of ordinary skill in the art.","It is contemplated to provide novel products comprising digitally coded data structures or information of novel DFS\/F or its components or building blocks, stored in memory such as a removable electronic data storage medium or device. It is also contemplated to provide a novel computer integrated apparatus having a memory or data storage device for storage of electronic or digital data, a central processing unit or a computer, and processing equipment wherein DFS\/F or its components or building blocks are stored in the data storage device.","The invention has been described in terms of the preferred embodiment. One skilled in the art will recognize that it would be possible to construct the elements of the present invention from a variety of means and to modify the placement of components in a variety of ways. While the embodiments of the invention have been described in detail and shown in the accompanying drawings, it will be evident that various further modifications are possible without departing from the scope of the invention as set forth in the following claims."],"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
