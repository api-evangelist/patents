---
title: Integration of VoIP address discovery with PBXs
abstract: A system for verifying VoIP call routing information. The system may include an apparatus integrated with a private branch exchange (PBX). The apparatus may store at least one call attribute of a public switched telephone network (PSTN) call initiated to a destination telephone number. The apparatus may verify a destination Voice-over-Internet-Protocol (VoIP) call agent for the destination telephone number based on demonstrated knowledge of the PSTN call. The apparatus may route a new call either over a VoIP network to the destination VoIP call agent or over a circuit switched network based on whether the destination VoIP call agent is verified for the destination telephone number.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08228903&OS=08228903&RS=08228903
owner: Cisco Technology, Inc.
number: 08228903
owner_city: San Jose
owner_country: US
publication_date: 20090630
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims priority under 35 U.S.C. \u00a7120 to U.S. patent application Ser. No. 11\/780,928, \u201cUSING PSTN REACHABILITY TO VERIFY VOIP CALL ROUTING INFORMATION\u201d filed Jul. 20, 2007, the entire contents of which are hereby incorporated herein by reference.","This disclosure relates generally to Voice over Internet Protocol (VoIP).","Voice over Internet protocol (VoIP) systems manage the delivery of voice information over the Internet. VoIP involves sending voice information in digital form in discrete packets rather than using the traditional circuit-committed protocols of the public switched telephone network (PSTN). VoIP is also referred to as IP Telephony, Internet telephony, Broadband telephony, Broadband Phone, and Voice over Broadband. A major advantage of using VoIP is that it avoids the tolls charged by ordinary telephone service providers. As such, VoIP systems are becoming ever more common within enterprises.","A VoIP call typically involves a signaling session and a media session. The signaling can be accomplished using various protocols such as Session Initiation Protocol (SIP), H.323 Protocol, or any other suitable signaling protocols. SIP is an application-layer control (signaling) protocol that is used for creating, modifying, and terminating sessions with one or more participants. These sessions can include Internet telephone calls, multimedia distribution, and multimedia conferences. SIP clients use Transmission Control Protocol (TCP) or User Datagram Protocol (UDP) to connect to SIP servers and other SIP endpoints. H.323 defines the protocols that provide audio-visual communication sessions on any packet network; and is commonly used in VoIP and IP-based videoconferencing.","Media streams may be sent using the Real-time Transport Protocol (RTP). RTP helps to ensure that packets get delivered in a timely way. Media streams also involve UDP packets, and are transmitted at regular intervals. Media streams are typically encoded using a speech compression algorithm.","Typically, a call agent handles VoIP call routing for VoIP clients. The call agent typically makes a VoIP call using a destination telephone number. This number can be associated with a client on the same call agent, in which case the call is sent directly to that client. Or, the number might be associated with a client associated with a different agent within the same enterprise. In that case, the call agent sends the call to that agent, using configured rules that define how to route the call. When users within the enterprise communicate with users outside of the enterprise, the call is terminated on a PSTN gateway and routed off to the PSTN. This, however, eliminates many of the benefits of VoIP.","Service providers are now beginning to offer \u201cSIP Trunk\u201d services, whereby an enterprise can connect their calls via a SIP link to the service provider instead of through an enterprise gateway. This technique has many of the same limitations as a direct gateway interconnect, since the service provider typically routes the call to a gateway. Furthermore, SIP trunks are not likely to be much cheaper than time-division multiplexing (TDM) trunks, because there is little business incentive for a service provider to make them more cost effective.","Within enterprises or groups of enterprises, two call agents may connect to each other directly over IP, without requiring an intermediate service provider for voice services. One solution for accomplishing this is to statically configure direct SIP or H.323 trunks between call agent or call manager instances in different enterprises. While this may work for small-scale close-knit communities, it becomes very burdensome for even a few dozen interconnected sites and limits its advantages to VoIP calls within the community. Ideally, VoIP should be as easily interconnected as email\u2014any enterprise should just be able to connect to any other enterprise, without configuration. Because of the expense of existing equipment, administrators may be reluctant to replace an installed private branch exchange (PBX) with a new VoIP system.","Particular implementations facilitate the exchange and security of VoIP calls over public packet-based communications networks. According to particular implementations, the present invention enables a call agent to use the PSTN system to verify ownership of numbers at another call agent.","As described in further detail below, in one implementation, a call agent claiming ownership to one or more telephone numbers may modify a registry of VoIP call routing information with address blocks containing telephone numbers and\/or prefixes in association with a network address of a call agent. This registry is accessible to multiple call agents across a network. The registry may be a maintained in a central repository or in a distributed system, such as a peer-to-peer (P2P) network, where each call agent is a peer operative to exchange VoIP call routing information with other peers.","The registry may include a hash-based access mechanism to protect unfettered access to the VoIP call routing information. For example, instead of each entry of the registry including a telephone number or prefix (or block of telephone numbers) stored unencrypted, the entry contains a hashed value of each telephone number or prefix. To create an entry in the registry, a call agent may hash each of its claimed telephone numbers and prefixes and place each into the registry. Similarly, an originating (calling) call agent, responsive to a call initiation message identifying a destination telephone number, may determine the IP address of a destination call agent by hashing the destination telephone number and looking it up in the registry. In one implementation, the originating call agent searches the registry for a matching entry, where a matching entry would contain an IP address corresponding to the destination call agent. As described in more detail below, the originating call agent may have the destination telephone number, while the hash in the registry may be of a prefix that covers the destination telephone number. Accordingly, in one implementation, if there is not a matching entry for the hashed destination telephone number, the originating call agent may strip the last digit of the number, hash it, and perform another search. The originating call agent may repeat this process until a match is found or until the number of remaining digits is reached to a predefined threshold number.","However, the usage of the registry alone is not sufficient for secure operation of the system. The principle challenge to solve is to be certain that the entries in the registry are correct. In particular, it must be verified that the call agent that has written an entry or series of entries into the registry is truly the \u201cowner\u201d of those numbers. Here, \u201cownership\u201d implies the property that, had the call actually been routed over the PSTN, it would arrive at that same agent or an agent within the same enterprise. As described in further detail below, in one implementation, an originating call agent may validate ownership of a telephone number by making a PSTN call to the destination call agent claiming to own the telephone number. Both call agents record attributes of the PSTN call. PSTN call attributes may include, for example, a start time, an end time if applicable, a call length, caller ID, and other attributes of the call. Either during or after the call, the originating call agent transmits a request, over IP, for PSTN call attributes to the destination call agent. If the destination call agent had not received the PSTN call, it will not have access to these attributes. Therefore, if it can provide these attributes to the originating call agent, it can demonstrate its ownership of the destination number. Depending on whether the destination call agent responds successfully, the originating call agent may apply an appropriate policy (e.g., store data associated with the verified call agent in the cache so that, for example, future calls can be connected immediately over VoIP, continue the PSTN call, etc.).","As described in further detail below, in one implementation, a destination call agent may verify the caller identification (ID) provided in a VoIP call signaling message sent by an originating call agent by validating the originating call agent against the cache or against the registry. In one implementation, the destination call agent may also verify the caller ID provided by the originating call agent by making a PSTN call to the number provided in the caller ID, where both call agents record the PSTN call attributes. Either during or after the call, the destination call agent transmits, over IP, a request for PSTN call attributes to the originating call agent. Depending on whether the originating call agent successfully responds to the request, the originating call agent may apply an appropriate policy (e.g., display the caller ID or permit the call for a verified call agent, etc.). In one example, the originating call agent may be integrated with a PBX, where the PBX initiates PSTN calls and the call agent discovers and\/or validates destination call agents and routes VoIP calls to the validated destination call agents instead of over the PSTN.","The present invention is defined by the following claims, and nothing in this section should be taken as a limitation on those claims. Further aspects and advantages of the invention are discussed below in conjunction with the example embodiments.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1","b":["20","20","20","20","22","20","20","20","20","24","24","24","24","26","20","20","20","20","28","28"],"i":["a","b","c","d ","a","b","c","d ","a","b","c","d ","a","b","c","d ","a","h "]},"In one implementation, a call agent  may be an IP-PBX hosting call manager application, such as Cisco Call Manager (CCM), or any node hosting VoIP call manager functions. In another implementation, the call agent  may be an IP to IP gateway, such as a Session Border Controller (SBC) or Back-to-Back User Agent (B2BUA) connected to an existing TDM PBX, IP PBX, or other voice or voice over IP equipment. In another implementation, call agent  may be a firewall or border router at the edge or near the edge of the IP network . In yet another implementation, the call agent  may be a softswitch. In one implementation, the call agents  may perform the processes described below, including functionalities directed to accessing registries of VoIP call routing information, making and receiving PSTN and VoIP calls and verifying other call agents. In particular implementations, call agents  may possibly have media gateway functionalities. In one implementation, a client  may be a phone operably connected to a network or directly to a call agent . Alternatively or in addition, the client  may be a VoIP client.","A call agent , when implemented on an IP-PBX, may switch calls between VoIP clients  on local lines while allowing all VoIP clients  to share a certain number of external PSTN network phone lines. The call agent  may also switch calls between a VoIP user and a traditional telephone user, or between two traditional telephone users in the same way that a conventional PBX does.","In particular implementations, the call agents  are operative to connect through the public Internet  to form a P2P network for the purpose of maintaining a distributed registry of VoIP call routing information. In another implementation, call agents  all access a centralized or hierarchically structured common store, such as a database Domain Name System (DNS) servers for the purpose of storing and accessing the registry of VoIP call routing information. In one implementation, each call agent  is operable to maintain and access a cache, where the cache may be a local cache that resides in the call agent  or may be external to but accessible by call agents  of the P2P network. As discussed below, the local cache contains validated VoIP call routing information. Each call agent  is also operable to access a registry of VoIP call routing information. A given call agent  may access its cache or the registry to store or to look up VoIP call routing information of other call agents to make VoIP calls, as well as to verify other call agents.","A PSTN  is a circuit-switched network, comprising all or a subset of the world's public circuit-switched telephone networks. The PSTN may include partial fixed-line analog telephone systems, and partial digital telephone systems, as well as mobile telephone systems. An advantage of utilizing the PSTN  is that it may operatively connect many enterprises in the world that have PSTN connectivity and possibly caller ID and connected party ID.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 2","b":["200","200","202","204","200","206","208","210","202","206","212","206","208","214","216","206","200","218","220","208","200","208"]},"The elements of hardware system  are described in greater detail below. In particular, network interface  provides communication between hardware system  and any of a wide range of networks, such as an Ethernet (e.g., IEEE 802.3) network, etc. Mass storage  provides permanent storage for the data and programming instructions to perform the above described functions implemented in the system controller, whereas system memory  (e.g., DRAM) provides temporary storage for the data and programming instructions when executed by processor . I\/O ports  are one or more serial and\/or parallel communication ports that provide communication between additional peripheral devices, which may be coupled to hardware system .","Hardware system  may include a variety of system architectures, and various components of hardware system  may be rearranged. For example, cache  may be on-chip with processor . Alternatively, cache  and processor  may be packed together as a \u201cprocessor module,\u201d with processor  being referred to as the \u201cprocessor core.\u201d Furthermore, certain implementations of the present invention may not require nor include all of the above components. For example, the peripheral devices shown coupled to standard I\/O bus  may couple to high performance I\/O bus . In addition, in some implementations a single bus may exist with the components of hardware system  being coupled to the single bus. Furthermore, hardware system  may include additional components, such as additional processors, storage devices, or memories.","As discussed above, in one embodiment, the operations of the gateway or call manager described herein are implemented as a series of software routines run by hardware system . These software routines comprise a plurality or series of instructions to be executed by a processor in a hardware system, such as processor . Initially, the series of instructions are stored on a storage device, such as mass storage . However, the series of instructions can be stored on any suitable storage medium, such as a diskette, CD-ROM, ROM, etc. Furthermore, the series of instructions need not be stored locally, and could be received from a remote storage device, such as a server on a network, via network\/communication interface . The instructions are copied from the storage device, such as mass storage , into memory  and then accessed and executed by processor .","An operating system manages and controls the operation of hardware system , including the input and output of data to and from software applications (not shown). The operating system provides an interface between the software applications being executed on the system and the hardware components of the system. According to one embodiment of the present invention, the operating system is the Windows\u00ae 95\/98\/NT\/XP operating system, available from Microsoft Corporation of Redmond, Wash. However, other embodiments of the present invention may be used with other suitable operating systems, such as the Apple Macintosh Operating System, available from Apple Computer Inc. of Cupertino, Calif., UNIX operating systems, LINUX operating systems, and the like.","In one embodiment, VoIP call routing information is maintained in a registry accessible to one or more call agents . In one implementation, the registry may be discoverable and publicly accessible. In one embodiment, the VoIP call routing information may include a set of entries, each including a telephone number or a prefix that represents a range of telephone numbers (or a set of telephone numbers or prefixes). For example, a given enterprise may own the telephone number +1-408-876-5432 and an address block of telephone numbers +1-973-952-5000 through +1-973-952-5999. As such, the call agent  of the enterprise may create two entries and would register, for each, a mapping that associates its identity with the number or prefix. In one implementation, the key for the mapping is the number or prefix of the number, including the digits only. In the example above, one key would be 14088765432, and the other would be 19739525. As such, in one implementation, each call agent may register blocks of telephone numbers that it owns by treating the prefix as a number and entering it in the registry. The identity information may include a network address (e.g., IP address, port number, hostname, etc.) or any other type of information that identifies a call agent.","In one embodiment, participation in the P2P network may require the call agent to have a predefined minimum number (e.g., a few dozen) of TCP connections to other nodes in the network. Those connections may be established dynamically, with the peers learned through the P2P protocols. In one implementation, registration into the P2P network may involve running an algorithm to select a peer to which a write operation should take place. That peer, in turn, passes the write onto another peer, and so on. This results in the data being stored and distributed across the call agents participating in the P2P network.","As discussed above, the registry of VoIP call routing information may include a hash-based mechanism protecting against unfettered access to the registry. That is, the telephone numbers or prefixes in the registry entries are hashed values. To store an entry in the registry, a call agent may first hash its associated phone number or prefix before storing it in the registry in association with its identity. The call agent may hash the telephone number or prefix using any suitable hash algorithm, such as MD5 and SHA1. Generally, a strong hash function should be used to ensure that the hashed value is unique to a given telephone number or prefix. By hashing the prefix or phone number, a given call agent may advertise number blocks in a secure manner. For example, using hashed telephone numbers or prefixes prevents telemarketers, spammers and spitters (VoIP spammers) from simply collecting telephone numbers from the registry. A user would need to know the correct telephone number first before attempting a successful search of the registry for VoIP call routing information. Otherwise, it would be computationally expensive (because of the computing resources required to compute the hash) to attempt to learn a significant amount of the VoIP call routing information maintained in the registry by repeatedly selecting a telephone number or prefix, computing a hash value and looking it up against the registry.","Topologically, the registry of VoIP call routing information may be maintained in a variety of ways. In one implementation, the registry may be maintained using a P2P network. The P2P network may be made up of all or some of the call agents in the system, or the registry can be maintained in a different P2P network, accessed by all of the call agents in the system. When a P2P network is utilized, each node in the P2P network (which may be the call agents), will end up maintaining a subset of the information in the registry, depending on the P2P protocols that are in use. Any suitable P2P protocol or technique may be used, including Chord, CAN, Bamboo, Kademlia, and so on.","In some embodiments that utilize a centralized registry system, a central server may maintain the registry, where the registry may be a central repository accessible by one or more call agents. In one embodiment, a given call agent may send a phone number or prefix to a central data store, and the central data store will store it. Other call agents may query the central data store, and retrieve the mapping from the phone number to the identity of the call agent. In another embodiment, the central registry may hash the phone number or prefix and store the hashed phone number or prefix in the registry.","In some embodiments that utilize a hierarchical registry system, such as the domain name system (DNS), a given call agent may transform the phone number or prefix into a hierarchical identifier, for example, by utilizing a telephone number mapping protocol, such as the Electronic Numbering (ENUM) protocol defined by the IETF in RFC 2916. The call agent may then use this identifier to write the VoIP call routing information into the hierarchical system at the appropriate location. The servers in the hierarchy may be the same as the call agents, or different. If the DNS is used as the hierarchical system, this may be a public DNS or a private DNS.","In some embodiments, a given call agent may receive a telephone number in a call initiation message from an originating client or an originating call agent, and then use the telephone number to lookup VoIP call routing information in the registry. In one embodiment, the call agent may search the registry for each of the N\u22121 prefixes of the N-digit destination number. Searches may be based on exact matches, as opposed to hierarchical matches. In other words, one address block should be found, and if more than one address block is found, the most specific one is used. Assuming there is a matching entry in the registry, the identity of the terminating call agent for that number or number block (which includes the IP address and port number of the destination call agent) that was found may be cached to avoid queries in the future.","In particular embodiments, where the registry stores hashed telephone numbers or prefixes, a look up process implemented on a call agent may perform the following operations in order to look up VoIP call routing information.  illustrates an example process flow implemented at a call agent directed to looking up VoIP call routing information in the registry. Responsive to some event (such as receiving a call initiation message identifying a telephone number), the look up process computes a hash of an identified telephone phone number (). The look up process then accesses the registry and determines if there is a matching entry, or specifically, if the hashed telephone number matches (based on an exact string match) any hashed numbers in the registry (). If so, VoIP call routing information corresponding to the matching entry is returned () and possibly used in some other process implemented by the call agent. For example, in one embodiment, the IP address of the destination call agent corresponding to the telephone number may be used to route a VoIP call.","If there is no matching entry, the look up process determines if the telephone number is stripped to a minimum threshold number of digits (). In one embodiment, the minimum threshold may be a predefined number of digits. For example, the minimum threshold number may be 1 digit (e.g., the smallest country code possible). If the telephone number is stripped to a minimum threshold number of digits, the look up process returns a \u201cnot found\u201d message (). The call agent  may respond to this message in a variety of manners depending on the context. For example, in one implementation, an originating call agent may attempt to make a PSTN call or may deny the call, optionally notifying the originating client of the call denial and optionally providing a reason for denying the call.","If the destination phone number is not stripped to a minimum threshold number, the look up process strips the last digit of the telephone number (). The originating call agent then re-computes the hash of the modified telephone number () and determines if the re-computed hashed telephone number matches any hashed telephone numbers in the registry (). The call agent may continue this process until a matching entry is found or until the destination phone number has been stripped down to the minimum threshold number.","This process provides security to the system, because without a legitimate phone number, it would be computationally expensive to acquire phone numbers. In one embodiment, policies may be applied to detect suspicious nodes that transmit queries that result in greater than a threshold number of failures over a sliding window of time.","As described in more detail below, a given call agent may use the facilities of a PSTN to validate VoIP call routing information in the registry. For example, a call agent may verify that another call agent can legitimately claim ownership of a telephone number it wrote into the registry. Here, \u201cownership\u201d may imply the property that, had the call been made over the PSTN, the call would have been routed to the call agent which wrote the entry into the registry, or if not that call agent, another call agent under the same administrative control. For example, a call agent, responsive to an identified telephone number, may make a PSTN call to that telephone number over PSTN . Generally, if the call agent claiming ownership of the destination telephone number is authentic, it will receive the PSTN call over PSTN  and will thus have an opportunity to record one or more attributes of the PSTN call, such as start time, end time, calling party identifier, and the like. The PSTN call attribute information can be used as a shared secret to allow the first call agent to validate the other call agent. As described in more detail below, verification of a call agent may occur during or after a PSTN call.","In the implementation described below, a given call agent may store verified VoIP call routing information in a local cache. The call agent, responsive to a call initiation message identifying a destination telephone number, may selectively place a PSTN or VoIP call to a given destination telephone number depending on the presence, or absence, of validated VoIP call routing information in the cache that corresponds to the destination telephone number. Matching validated routing information in the cache generally means that the terminating call agent has been verified. The originating call agent may then place a VoIP call by transmitting a call initiation message to the terminating call agent. If no validated match is found in the cache, but the number is in the cache as a consequence of a previous query to the registry, the call agent may place a PSTN call and validate the call agent. If no match is found in the cache at all, the call agent may query the registry for the number as described above, in addition to placing a PSTN call.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 4","FIG. 4"],"b":["24","28","402"],"i":["a","a"]},"The originating call agent accesses its cache to determine if there is a matching validated cache entry, whereby the cached address block is associated with the destination number, and the destination number has been validated previously (). If there is a matching validated entry in the cache, the originating call agent makes a VoIP call, transmitting signaling messages to the terminating call agent associated with the matching address block in the local cache (). This signaling message can be sent directly to the destination call agent, or can be sent through intermediate servers or providers.","If there is no matching validated address block in the cache, the originating call agent makes a PSTN call to the destination telephone number (). As  shows, the originating call agent may also look up, using the telephone number, the terminating call agent in the registry (), if the destination number is not in the cache at all. More specifically, in one embodiment, the originating call agent may use the destination phone number to look up VoIP call routing information of the destination call agent in the registry (see Section C, above). If a matching entry is found (), the originating call agent may record one or more attributes of the PSTN call to be used in a subsequent verification process. In the implementation shown, the originating call agent, after the PSTN call ends (), records one or more PSTN call attributes in a data store (e.g. a called-out database) (), and adds the terminating call agent to a verification task list (). In one implementation, the data store may be a temporary data store that stores the information for a period of time, or it may be a database with persistent storage. In another implementation, the PSTN call attributes can be recorded for every call, and then the registry can be queried as part of the procedures followed when executing the verification task list.","A variety of PSTN call attributes can be stored. In one implementation, the PSTN call attributes may include a PSTN call start time, a PSTN call stop time, call length (e.g., how long the call lasted), a caller ID of the calling client, and any other information that the originating VoIP network may be used to verify that the destination received the PSTN call. Other PSTN call attributes may include signatures of the voice data as computed by the originating and terminating gateways. For example, the call agents may compute the amount and start times of silent periods during a call, or a spectral signature of the voice data during the call. Other PSTN call attributes may include a sequence of DTMF tones that the originating gateway may transmit during some point in the call (e.g., just prior to call termination).","One advantage of the implementations describe herein is that they may be used with telephone numbers. Another advantage is that implementations described herein are undetectable by service providers. Because enterprises may still make PSTN calls, implementations described herein may reduce the volume of such PSTN calls.","Furthermore, other implementations are possible. For example, even if matching VoIP call routing information is found in the cache, the originating call agent (according to some randomized or other process) may nevertheless select the entry for re-validation, causing the call agent to make a PSTN call and to add the call agent to a verification list. Still further, call agent may apply an aging algorithm to its cache to flush old entries.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 5","FIG. 5"],"b":["502","504","506","508"]},"If the originating call agent performs the verification after the PSTN call, the originating call agent may perform the verification at various times depending on the specific implementation. For example, the originating call agent may perform verification immediately after the PSTN call. In other implementations, the originating call agent may verify multiple destination call agents in a batch process run at off-peak periods. In one implementation, the originating call agent may verify the destination call agent at a random time after the call is completed. The originating call agent may perform one or more verification operations upon a triggering event such as when receiving a new call initiation message.","As described in more detail below, the verification may be a knowledge-based verification, where the originating call agent queries the destination call agent for PSTN call attributes corresponding to one or more prior PSTN calls. The PSTN call attributes may be conceptualized as \u201cshared secrets\u201d that only those two call agents would know.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 6","FIG. 6"],"b":"602"},"The call agents may communicate according to a variety of different protocols. For example, in one implementation, the \u201ccalled-in\u201d database maintained by a destination call agent may be accessible to a verifying call agent by using a directory access. The originating call agent may send a query using the destination phone number as a key, and the terminating agent would return the recorded PSTN attributes for calls with that destination phone number. Any number of protocols can be used for this purpose, including standard database and directory protocols, such as LDAP and SQL, or HTTP queries, SOAP queries, or any other suitable technology for querying for a piece of data and getting a response.","In an alternative implementation, an actual authentication protocol can be used to improve security. In this implementation, the PSTN call attributes are mapped to a username and password, and then a traditional authentication or login protocol can be used to verify the data. For example, the user name may be the destination number and start time of the PSTN call, and the password may be the stop time of the PSTN call. As another example, the username can be the destination number and a random time in the middle of the call, and the password can be the start and stop times of the call. As another example, the username can be the destination number and caller ID, and the password can be the start time and stop time of the call. In one implementation, the PSTN call attributes may include information associated with the content of the PSTN call. For example, during a given PSTN call, both the originating and destination call agents may execute a silence detection algorithm to detect silence and talking. The VoIP may then generate a PSTN call signature or fingerprint based on the detected silence and talking patterns. This fingerprint or signature can be used as part of the username and\/or password. For example, the username could be the destination number and start time of the call, and the password could be the fingerprint. Or, the username could be the destination number and signature over the first half of the call, and the password is the signature over the second half.","In one implementation, the PSTN call attributes may include a call signature or fingerprint. In one implementation, the originating call agent may execute frequency spectrum analysis or speech recognition algorithms to generate the call signature or fingerprint. In one implementation, the originating call agent may, prior to the end of the PSTN call, send a random string using dual-tone multi-frequency (DTMF) values that both call agents record. The call signature or fingerprint may then include the DTMF bits. In one implementation, the query may provide the destination call agent minimal information such as the call start time. Based on the limited information, the destination call agent may ascertain the appropriate information to provide.","When the originating call agent receives a response to the query for PSTN call attributes (), the originating call agent determines if the PSTN call attributes are confirmed (). In one implementation, the PSTN call attributes are confirmed if the PSTN call attributes in the response from the destination call agent match the PSTN call attributes that the originating call agent stored in the \u201ccalled out\u201d database. In one implementation, when an authentication or log-in protocol is utilized, the PSTN call attributes are confirmed if the log-in or authentication protocol succeeds. In one implementation, the authentication protocol may function without transmitting the PSTN call attributes from either call agent during authentication. For example, the authentication protocol may be based on an Encrypted Key Exchange (EKE) protocol that provides zero-knowledge password proof. In one implementation, the validation may fail due to a given PSTN call being forwarded to an illegitimate call agent.","If the PSTN call attributes are confirmed, the originating call agent applies an appropriate policy for verified destination call agents (). For example, the originating call agent mark the entry in the cache for this number as being validated, resulting in future VoIP calls subsequently being made to that call agent, as discussed above. That is, if the VoIP routing information is validated for the first time, the originating call agent will find a matching entry in the cache the next time, and will thus able to make a VoIP call to the now verified call agent. As such, no subsequent search to the registry would be necessary.","Furthermore, the verifying call agent may establish a connection to the verified call agent for routing of VoIP call initiation messages. In one implementation, once a Transmission Control Protocol (TCP)\/Transport Layer Security (TLS) connection is established, the originating call agent may send an SIP invite directly to the destination call agent. In one implementation, a given call agent may maintain multiple TCP\/TLS connections up to a predefined number (e.g., 1,000 connections), after which the call agent may terminate an inactive or the least active connection.","If the PSTN call attributes are not confirmed, the originating call agent applies an appropriate policy for unverified destination call agents (). For example, the originating call agent may log the verification failure in the cache, generate an alert message, add the call agent to a black list and the like, etc.","Implementations of the verification process may be optimized in a variety of ways. In one implementation, even if a given phone number or prefix is stored\/validated in the cache, the verification may be augmented to cause a revalidation. For example, in one implementation, the originating call agent may randomly select some calls to re-verify that the destination call agent still owns the particular phone number of phone number block. In one implementation, the originating call agent may re-verify a predefined percentage of the calls (e.g., 5%) or a random number of calls. In another implementation, the call agent may timeout the validation after a configured period of time, for example, one month, so that re-verification is performed once a month.","In another optimization, when a particular number in a block has been verified, other numbers in that same block can also be considered verified. For example, if number A and number B within a block have been verified, the call agent can consider all numbers between A and B within that block to also be verified. In one implementation, this automatic verification can happen only when numbers A and B are close to each other, for example within 1000 numbers.","In another implementation, the shared secret may be defined based on the last N PSTN calls, improving the security of the mechanism. In one embodiment, instead of basing the PSTN call attributes on the last N calls between any two telephone numbers in a given block, the PSTN call attributes may be based on the last N calls between specific telephone numbers. In one implementation, if the originating call agent may validate a predefined number or predefined percentage of telephone phone numbers of a given address block (e.g., 2 out of 50 telephone numbers, or 4%), the originating call agent may accept the remaining telephone numbers of the address block for future calls.","In one implementation, if the destination call agent is verified before the PSTN call ends, the originating call agent may optionally permit the PSTN call to continue even with the successful verification. As such, the VoIP call may be used for enhanced features on top of the voice portion of the calls (e.g., the PSTN call). For example, the originating call agent may use the PSTN call for voice and use the VoIP call for enhanced features such as video, sound, presence, Instant Messaging (IM), and\/or data applications.","Accordingly, implementations provide advantages such as preventing call agents from claiming ownership to a telephone number that they actually do not own. Also, implementations do not require any special PSTN configurations.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIGS. 7A and 7B","FIG. 7A"],"b":"702"},"The originating call agent accesses its cache to determine if there is a validated matching entry with an address block associated with the destination number (). If so, the originating call agent makes a VoIP call ().","If there is not a matching validated entry in the cache, the originating call agent looks up the destination call agent in the registry (). If a match is not found (), the originating call agent makes a PSTN call ().","If a match is found (), the originating call agent still makes a PSTN call () and also performs the following steps. The originating call agent records the PSTN call attributes in a data store (e.g. a called-out database) (). As described above, in one implementation, the data store may be a temporary data store that stores the information for a period of time. In one implementation, the PSTN call attributes may include a PSTN call start time, a caller ID of the destination client, voice signature information (such as spectral analysis or silence\/activity periods), DTMF, and any other information that the originating call agent may use to verify that the destination call agent is connected during the PSTN call.","Referring to , while the PSTN call is still in progress, the originating call agent transmits a query for PSTN call attributes to the destination VoIP (). In particular implementations, the query may request that the destination call agent provides similar information as the query described above in connection with step  of , except that the PSTN call attributes would not include a call stop time or a call length, as the PSTN call would still be in progress.","In one implementation, when the destination call agent receives a PSTN call, the destination call agent forwards the PSTN call to the destination client, and records the PSTN call attributes in a data store (e.g. a called-in database). Upon receiving the query for PSTN call attributes, the destination call agent sends a response. When the originating call agent receives the response to the query for PSTN call attributes (), the originating call agent determines if the PSTN call attributes are confirmed (). If the PSTN call attributes are confirmed, the originating call agent applies an appropriate policy for verified destination call agents (). For example, the originating Call agent may cache the VoIP call routing information, so future calls may go over VoIP. Or, it may transfer the PSTN call in-progress to a VoIP call. If the PSTN call attributes are not confirmed, the originating Call agent applies an appropriate policy for unverified destination call agents (). For example, the originating call agent may log the verification failure in the cache, generate an alert message, end the call, etc.","In one embodiment, if an attacker claims a telephone number that the attacker does not actually own, no call will ever be made to the attacker over VoIP, because the terminating call agent of the attacker would not be able to successfully respond to a query for PSTN call attributes, since the PSTN call would have gone to the actual owner of the telephone number.","In one embodiment, if an attacker claims ownership to a larger prefix than the attacker actually owns, the attacks may not be detected initially but would probably be detected. This is because some of the calls can be expected to be made over the PSTN, thereby assuring that the falsified numbers are eventually tried and detected. In one implementation, an enterprise may require that a PSTN call be made at least once to any particular destination telephone number. While this may cause more PSTN calls to be made, it would eliminate such attacks.","Because the registry is not used at the initial call setup time, any latency has no impact on call setup delays. Indeed, call setup times using implementations disclosed herein will be faster than even over the PSTN, because the originating call agent communicates directly with the destination call agent. In many cases, not even a Transmission Control Protocol (TCP) connection setup is required, because such a connection may have already been established and maintained as a consequence of a previous call to that terminating call agent.","However, in another implementation, when a PSTN call arrives at the terminating call agent, the terminating call agent holds the call and does not deliver it yet to the terminating client. Rather, it examines the caller ID from the PSTN call setup message, and queries the registry for this number. If a match is found, the terminating call agent further holds the call in anticipation of receiving a request to verify the PSTN call attributes. Once this validation has succeeded, the originating call agent can place a VoIP call, and the terminating call agent can reject the PSTN call and proceed with the VoIP call. This eliminates the need for a PSTN call to actually be completed, but increases call setup delays as a consequence.","Furthermore, implementations disclosed herein are failsafe in that the originating call agent may make PSTN calls even when the destination call agent is verified against the cache or against the registry. In other words, even if a given originating call agent crashes and recovers, losing its cache, or if the registry is compromised in some way, or any of a number of problems occur, the worst case is that calls still get routed over the PSTN. As such, the end user experiences no disruption in service. Some P2P VoIP overlay network providers need to provide centralized servers that hand out user names within their network and hand out certificates. Because implementations described herein utilize telephone numbers that have already been issued to an enterprise, no such central services are required.","As described in more detail below, the cache maintained by the call agent and the registry may be used to verify caller ID information in received VoIP calls. For example, when a given destination call agent receives a call initiation message over a packet-based communications network (e.g., SIP invite) having an associated caller ID containing a phone number, the destination VoIP may verify the caller ID against the cache of the call agents and\/or against the public registry. This provides two levels of validation.",{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 8","FIG. 8"],"b":["802","804","806"]},"If the caller ID has not been verified, but matches a number in the cache, or the caller ID does not match any number in the cache, the destination call agent may look for a matching entry in the registry (, ). If there is a matching entry in the registry or in the cache, and the identity of the call agent in the registry entry (which may have been cached) matches the identity of the agent that sent the call setup request (based on matching certificates used in TLS procedures, or based on matching IP addresses, or any other suitable means of comparison) the destination call agent applies one or more policies for originating call agents that are validated by the registry (). Similar to the one or more policies that may be applied in step , in particular implementations, the destination call agent may indicate to the user of the destination client that the sender (originating call agent) is verified (and optionally indicate a second level of validation), may show the caller ID, may permit the call, etc. If the caller ID does not match a phone number in the registry, the destination call agent applies one or more policies for unvalidated originating call agents (). For example, in one embodiment, the destination call agent may indicate to the user of the destination client that the sender is unverified, or may show no caller ID, or may deny the call, etc.","Because a malicious call agent may provide a false caller ID, this process enables a given call agent to provide caller ID information to two levels of verification. As described above, the VoIP may utilize the cache or the registry to verify the caller ID against previous verifications or against an IP address and port number, the former of which cannot be falsified. Accordingly, implementations described herein have an advantage of preventing caller ID spoofing. For example, if an originating call agent of an enterprise launches a SIP call with a fake caller ID, the fake caller ID may match an entry corresponding to a call agent of a different enterprise.","In one implementation, in addition to verifying the caller ID against the cache or against the registry, the destination call agent may also verify the originating call agent according to the verification processes described above in connection with , , A, and B. As such, an originating call agent using a fake ID would not be able to successfully respond to a request for PSTN call attributes.","In one embodiment, the originating and destination call agents may verify each other based on the same call. For example, in one implementation, the originating call agent may make both a PSTN call and a VoIP call to the destination call agent. When receiving the PSTN call, if the destination call agent determines that the caller ID corresponds to another call agent in the network, the destination call agent holds the PSTN call for predefined time period (e.g., a few seconds). When the VoIP call arrives, mutual authentication is performed. In other words, the originating and destination call agents verify each other as described above. If mutual authentication succeeds, the PSTN call is rejected and the VoIP call proceeds.","This approach provides highly reliable validation of the advertised number blocks in the P2P network, as well as provides a VoIP anti-spam function. In one implementation, if an originating call agent is making too many VoIP calls, even though it is validated, the terminating call agent can reject incoming VoIP calls from that call agent, and redirect it to utilize the PSTN instead. This passes costs onto the originating call agent and therefore helps alleviate VoIP spam.","Also, because this technique uses telephone phone numbers, it makes it difficult for a spammer to change identifiers. Changing identifiers in email is inexpensive and easy, because domains and user IDs within a domain are practically free and in infinite supply. This is not so with telephone numbers, which are a more expensive and a finite resource. Furthermore, because telephone numbers are used, an enterprise that is spamming can be traced back through its service provider. Black lists also become much more effective, because of the finite namespaces of phone numbers. As described above, implementations of the present invention provide a fully, 100% distributed solution that allows any enterprise to make a VoIP call to any other enterprise in the world, without any central coordination, central services, or configuration. It is completely plug-n-play, and is very secure. Another advantage of the implementations described herein is that they do require any special functionality from PSTN providers. The implementations describe above enable call agents to connect to each other directly over IP without requiring an intermediate service provider for voice services. Connections are seamless for end users, because they can make and receive calls with the phone numbers they already use.","An administrator may not want to replace a private branch exchange (PBX) in an enterprise with the call agent  that discovers and verifies VoIP call agents. However, the administrator does not have to replace the PBX with the call agent . Instead, the PBX may be integrated with the call agent  so that the PBX handles calls for the clients , but the call agent  still discovers and verifies VoIP call agents.",{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIG. 9","b":["900","910","24","900","24","910","28","900","900","24"]},"The PBX  may be any component to route telephony connections between clients in an enterprise and the PSTN . Examples of the PBX  include a time-division multiplexing (TDM) PBX, a hybrid PBX that includes TDM and IP trunk interfaces, an IP PBX that includes IP only trunk interfaces, or any other component that performs call switching logic and call control. Addition examples of the PBX  include any type of call agent, an integrated services router (ISR), an IP to IP gateway, such as a Session Border Controller (SBC) or Back-to-Back User Agent (B2BUA), a firewall, a border router, a softswitch, and any other component that may route calls between clients in the enterprise and the PSTN . The PBX  may be in communication with the call agent  over an IP network, a TDM trunk, or any other type of communication channel that transports call control messages. The PBX  may also be in communication with the clients  and the PSTN . The PBX  may be in communication with the PSTN  over an IP network, a TDM trunk, or any other type of communication channel that transports call control messages. The PBX  may route calls among the clients , when the calls are internal to the enterprise served by the PBX . In a configuration where the PBX  is not integrated with the call agent , the PBX  may route outgoing calls over the PSTN , where the outgoing calls are external to the enterprise served by the PBX . Also in the configuration where the PBX  is not integrated with the call agent , the PBX  may route incoming PSTN calls to the appropriate respective ones of the clients .","As described above, the call agent  may use call attributes  of PSTN calls to discover and verify VoIP call agents. The call agent  may store the validated VoIP call routing information  in a memory, a cache, a database, or any other data storage device. Alternatively or in addition, the call agent  may route calls to verified VoIP call agents over the Internet  instead of over the PSTN  based on the validated VoIP call routing information . Where the system  is configured to integrate the call agent  and the PBX , the call agent  may receive the call attributes  to discover and verify VoIP call agents in any number of approaches described below. Alternatively or in addition, the call agent  may route the calls over the Internet  instead of over the PSTN  based on the validated VoIP call routing information  using any number of approaches described below.","In one example of the system  configured to integrate the PBX  with the call agent , the PBX  is configured to hairpin incoming PSTN calls and outgoing external calls through the call agent . In particular, the PBX  is configured to route incoming PSTN calls through the call agent . For example, when an incoming PSTN call is received at the PBX , the PBX may route the incoming PSTN call to the call agent . The call agent  may then route the incoming PSTN call back to the PBX . The PBX  may subsequently route the incoming PSTN call to the appropriate client . Similarly, the PBX  is configured to route outgoing external calls through the call agent . For example, when the PBX  receives an outgoing external call from one of the clients , the PBX  routes the outgoing external call to the call agent . The call agent  receives the call initiation message for the outgoing external call from the PBX . If the call agent  finds a validated route for the external call, then the call agent  sends the outgoing external call over the Internet  to the corresponding validated VoIP call agent. For example, the call agent  may transmit a corresponding call initiation message to the validated VoIP call agent. However, if the call agent  fails to find the validated route, then the call agent routes the outgoing external call back to the PBX . The PBX  then routes the outgoing external call over the PSTN .","Because the call agent  is on the call path for calls to and from the PSTN , the call agent  receives the corresponding call attributes . For example, the call agent  may receive the start and stop times of either an outgoing external call or an incoming PSTN call when the call agent  receives the call initiation message and the call termination message corresponding to the call. The call agent  may, for example, validate itself as a destination call agent using the call attributes  of the incoming PSTN call, the outgoing external call, or both. Alternatively or in addition, the call agent  may validate another call agent as an originating call agent using the call attributes  of the incoming PSTN call, the outgoing external call, or both.","In a second example of the system  configured to integrate the PBX  with the call agent , the PBX  is configured to route outgoing external calls to the call agent , and the call agent  is configured to reject the outgoing external calls if the call agent  cannot find corresponding validated VoIP call agents. For example, when the PBX  receives a request to initiate an outgoing external call from one of the clients , the PBX  routes the outgoing external call to the call agent . If the call agent  finds a validated route for the outgoing external call, then the call agent  sends the outgoing external call over the Internet  to the corresponding validated VoIP call agent. However, if the call agent  fails to find a validated route for the outgoing external call, then the call agent  rejects the call. Upon receiving a rejection of the outgoing external call, the PBX  sends the outgoing external call over the PSTN . As with outgoing external calls, the PBX  is configured to route incoming PSTN calls to the call agent . The call agent  may be configured to always reject the incoming PSTN calls. For example, when the PBX  receives an incoming PSTN call, the PBX  routes the incoming PSTN to the call agent . The call agent  rejects the incoming PSTN call. Upon receipt of the rejection, the PBX  sends the incoming PSTN call to the appropriate one of the clients .","In the second example, the call agent  may not receive the end time of the calls made between the clients  and the PSTN . The call agent  may receive the start time and caller ID information from the call initiation message received from the PBX  for the outgoing external calls and the incoming PSTN calls. However, after the call agent  rejects the calls to be routed between the clients  and the PSTN , the call termination messages associated with the incoming and outgoing PSTN calls do not pass through the call agent . In addition, the call agent  may not have knowledge of whether any of the incoming or outgoing PSTN calls were eventually setup successfully.","To compensate for not having the end time of the PSTN calls, the call agent  may verify the destination VoIP call agent at a random time after the call is completed. Alternatively or in addition, the username and password used to validate the destination VoIP call agent may be based on information that does not include the end time of the PSTN calls. For example, the username may be computed as a concatenation of the called number and the calling number for a call. The password may include the start time of the call. By verifying the destination VoIP call agent a random length of time after the call was initiated, additional entropy is added to the system . The larger the random window of time in which the destination call agent may be validated after the call, the more entropy is added.","If the call was initiated over the PSTN  to\u2014but not established with\u2014a destination PBX integrated with the destination VoIP call agent, then the destination PBX may not receive a call initiation message from the PSTN . Consequently, the destination VoIP call agent integrated with the destination PBX will not receive the call initiation message and will not receive corresponding call attributes for the call. During the validation process, the originating call agent will demonstrate proof of knowledge of the call, but the destination VoIP call agent will not. Therefore, the validation process continues to work as desired even if the originating call agent cannot determine whether the initiated PSTN call is ultimately established.","In a third example of the system  configured to integrate the PBX  with the call agent , the call agent  may receive call attributes  and\/or route calls to validated VoIP call agents by using computer telephony integration (CTI). A CTI interface provides a programmatic interface to call control services. Examples of CTI interfaces include CSTA (Computer-Supported Telecommunications Applications), JTAPI (Java Telephony API), TSAPI (Telephony Services Application Programming Interface) and TAPI (Telephony Application Programming Interface). The PBX  may provide a CTI interface through which the PBX  and the call agent  may communicate. In one implementation, a CTI module separate from the call agent  and the PBX  may handle communications between the PBX  and the call agent . In a different implementation, the call agent  may include the CTI module. In yet another implementation, the PBX  may include the CTI module. The CTI module may invoke programmatic subroutines in the CTI interface. The PBX  may callback to the CTI module in accordance with the CTI interface.","During operation of the system  in the third example, the PBX  may receive a request from one of the clients  to initiate a first outgoing external call to a destination telephone number. The PBX , through the CTI interface, notifies the call agent  that the outgoing external call is to be placed. In the notification, the call agent  receives call attributes of the first outgoing external call, such as the calling party, the called party, and the start time of the first outgoing external call. The call agent  instructs the PBX  through the CTI interface to initiate the first outgoing external call over the PSTN . In response, the PBX  accordingly establishes the first outgoing external call over the PSTN . When the first outgoing external call terminates, the PBX  notifies the call agent  through the CTI interface. Through the call termination notification, the call agent  receives the end time of the first outgoing external call.","Once in possession of the call attributes of the first outgoing external call to the destination telephone number, the call agent  may begin the validation process. If the call agent  learns a VoIP route to the validated VoIP call agent corresponding to the destination telephone number, then the call agent  may store the VoIP route in the cache of validated VoIP call routing information .","The next time the PBX  receives a request from one of the clients  to initiate a second outgoing external call, the PBX  notifies the call agent  through the CTI interface that the outgoing external call is to be placed. If the second outgoing external call is to a telephone number that fails to match one of the entries in the validated VoIP call routing information , then the call agent  may instruct the PBX  through the CTI interface to initiate the second outgoing external call over the PSTN . However, if the telephone number matches one of the entries in the validated VoIP call routing information, then the call agent  selects an invalid number from a pool of invalid telephone numbers . The invalid number may be any telephone number that unreachable on the PSTN  from the call agent . For example, a telephone number that includes a non-existent area code may be an invalid number. The call agent  associates the telephone number of the second outgoing external call with the invalid number. The call agent  instructs the PBX  through the CTI interface to route the call to the invalid number. The PBX  is configured to route a call initiated to any of the telephone numbers in the pool of invalid telephone numbers  to the call agent . Consequently, the PBX  routes the second outgoing external call to the call agent . When the call agent  receives the call to the invalid telephone number, the call agent  looks up the telephone number associated with the invalid telephone number. The call agent  then sends the second outgoing external call to the destination VoIP call agent that owns the telephone number. The call agent  may replace the invalid telephone number with the associated telephone number before transmitting the call initiation request to the destination VoIP call agent. The call agent  may dissociate the invalid telephone number from the telephone number, so that the invalid telephone number may later be assigned to another telephone number. In other examples using the CTI interface, validation may be based on N number of PSTN calls instead of just the first outgoing external call.","When the PBX  receives an incoming PSTN call, the PBX  notifies the call agent  through the CTI interface that the incoming PSTN call was received. The call agent  instructs the PBX  through the CTI interface to proceed with routing the incoming PSTN call to the appropriate one of the clients . Accordingly, the PBX  routes the incoming PSTN call to the client. When the incoming PSTN call terminates, the PBX  notifies the call agent  through the CTI interface that the call is terminating and\/or has terminated. Through the CTI notifications, the call agent  receives the call attributes  for the incoming PSTN call.","In a fourth example of the system  configured to integrate the PBX  with the call agent , the PBX  is configured to route outgoing external calls to the call agent , and the call agent  is configured to reject the outgoing external calls if the call agent  cannot find corresponding validated VoIP call agents. Unlike in the second example described above, the PBX  is configured to route incoming PSTN calls to the clients instead of to the call agent . The call agent  receives the call attributes of incoming PSTN calls from call detail records (CDRs) instead of from call initiation messages and\/or call termination messages. A CDR may be an entry generated by the PBX  that includes call attributes of calls that pass through the PBX . For example, the CDR may include the number making the call, the number receiving the call, the call start time, and the duration of the call. The term \u201cCDR\u201d is a general term that may include a station messaging detail record (SMDR). The call agent  is configured to retrieve the call attributes of call from the CDRs generated by the PBX .","In a fifth example of the system  configured to integrate the PBX  with the call agent , access to the PSTN  may be moved from the PBX  to the call agent. The PBX  may be configured to route outgoing external calls to the call agent . If the call agent  finds a validated route for one of the external calls, then the call agent  may send the external call over the Internet  to the corresponding validated VoIP call agent. However, if the call agent  fails to find the validated route, then the call agent  may route the external call over the PSTN . Incoming PSTN calls pass through the call agent  to the PBX . Because the call agent  is on the call path for outgoing external calls and incoming PSTN calls, the call agent  receives the corresponding call attributes  for the calls. Because the outgoing external calls pass through the call agent , the call agent  may route the outgoing external calls based on whether matching VoIP routes are in the cache of validated VoIP call routing information .",{"@attributes":{"id":"p-0108","num":"0107"},"figref":["FIG. 10","FIG. 10"],"b":"910"},"The operation may begin at block  by storing call attributes of a PSTN call initiated to a destination telephone number. For example, the call agent  may store the call attributes in memory. In one example, the operation may also include extracting the call attributes of the PSTN call from a call initiation message received from the PBX  before storing the call attributes.","The operation may continue at block  by verifying a destination VoIP call agent for the destination telephone number based on demonstrated knowledge of the PSTN call. For example, verifying the destination VoIP call agent may include using the call attributes of the PSTN call as a shared secret with the destination VoIP call agent that received the PSTN call.","The operation may continue at block  by routing a new call over the VoIP network to the destination VoIP call agent if the destination VoIP call agent is verified. For example, routing the new call over the VoIP network may include receiving a first call initiation message from the PBX  and transmitting a second call initiation message to the destination VoIP call agent.","Alternatively, the operation may continue at block  by routing the new call over the PSTN  if the destination VoIP call agent is not verified for the destination number. For example, routing the new call over the PSTN  may include receiving a call initiation message from the PBX  and sending a rejection to the PBX  in response to the call initiation message.",{"@attributes":{"id":"p-0113","num":"0112"},"figref":["FIG. 11","FIG. 11"]},"The operation may begin at block  by receiving a CTI notification that a new call is to be initiated at the PBX  to a destination telephone number. In response, the operation may additionally include searching for a validated VoIP route in the validated VoIP call routing information .","If the validated VoIP route is not found, then the operation may continue at block  by transmitting a CTI message to the PBX  indicating that the PBX  is to make the new call over the PSTN . However, if the validated VoIP route is found, then the operation may continue at block  by transmitting an invalid telephone number to the PBX  via the CTI interface. The invalid telephone number may be selected from the pool of invalid telephone numbers  and may be associated with the destination number.","The operation may proceed to block  by receiving a call initiation message from the PBX. The call initiation message may be to the invalid telephone number. The operation may proceed by at block  by transmitting a call initiation message to the destination VoIP call agent, where the call initiation message is to the destination telephone number instead of to the invalid telephone number.","The priority U.S. patent application Ser. No. 11\/780,928, \u201cUSING PSTN REACHABILITY TO VERIFY VOIP CALL ROUTING INFORMATION\u201d filed Jul. 20, 2007, describes storing, verifying, and routing. For example, Paragraph 50 of U.S. patent application Ser. No. 11\/780,928 describes an apparatus configured to store at least one call attribute of at least one public switched telephone network (PSTN) call initiated to a destination telephone number. Paragraphs 51-52 describe the apparatus configured to verify a destination Voice-over-Internet-Protocol (VoIP) call agent for the destination telephone number based on demonstrated knowledge of the at least one PSTN call. Paragraphs 58-59 describe the apparatus configured to route a call either over a VoIP network to the destination VoIP call agent or over a circuit switched network based on whether the destination VoIP call agent is verified for the destination telephone number.","The present invention has been explained with reference to specific embodiments. For example, while embodiments of the present invention have been described as operating in connection with P2P networks and PSTN networks, the present invention may be used in connection with any suitable network environment.","Different components provide different functions for implementing the functionality of the various embodiments. The respective logic, software or instructions for implementing the processes, methods and\/or techniques discussed above are provided on computer-readable storage media or memories or other tangible media, such as a cache, buffer, RAM, removable media, hard drive, other computer readable storage media, or any other tangible media or any combination thereof. The tangible media include various types of volatile and nonvolatile storage media. The functions, acts or tasks illustrated in the figures or described herein are executed in response to one or more sets of logic or instructions stored in or on computer readable storage media. The functions, acts or tasks are independent of the particular type of instructions set, storage media, processor or processing strategy and may be performed by software, hardware, integrated circuits, firmware, micro code and the like, operating alone or in combination. Likewise, processing strategies may include multiprocessing, multitasking, parallel processing and the like. In one embodiment, the instructions are stored on a removable media device for reading by local or remote systems. In other embodiments, the logic or instructions are stored in a remote location for transfer through a computer network or over telephone lines. In yet other embodiments, the logic or instructions are stored within a given computer, central processing unit (\u201cCPU\u201d), graphics processing unit (\u201cGPU\u201d), or system. Logic encoded in one or more tangible media for execution is defined as instructions that are executable by the processor and that are provided on the computer-readable storage media, memories, or a combination thereof.","Any of the devices, features, methods, and\/or techniques described may be mixed and matched to create different systems and methodologies. While the invention has been described above by reference to various embodiments, it should be understood that many changes and modifications can be made without departing from the scope of the invention. It is therefore intended that the foregoing detailed description be regarded as illustrative rather than limiting, and that it be understood that it is the following claims, including all equivalents, that are intended to define the spirit and scope of this invention."],"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","DESCRIPTION OF EXAMPLE EMBODIMENTS","Overview","Example Embodiments"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 7A and 7B"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
