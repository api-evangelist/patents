---
title: Component based information linking during claim processing
abstract: A computer program is provided for developing component based software capable of linking insurance-related information. The program includes a data component that stores, retrieves and manipulates data utilizing a plurality of functions. Also provided is a client component that includes an adapter component that transmits and receives data to/from the data component. The client component also includes a business component that serves as a data cache and includes logic for manipulating the data. A controller component is also included which is adapted to handle events generated by a user utilizing the business component to cache data and the adapter component to ultimately persist data to a data repository. In use, the client component is provided with insurance-related information concerning an individual and an event. The user is then able to input information concerning the involvement of the individual in the event. In addition, the user is able to link the individual to the event. Finally, the linked information concerning the individual, the event and the involvement of the individual in the event are displayed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07979382&OS=07979382&RS=07979382
owner: Accenture Global Services Limited
number: 07979382
owner_city: Dublin
owner_country: IE
publication_date: 19990504
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DISCLOSURE OF THE INVENTION","DETAILED DESCRIPTION","Business Rule Placement","Window Processing Framework","Window Initialization ","Window Control State Management ","Window Data Validation ","Window Save Processing ","Window Shutdown Processing ","Additional Standard Methods","Business Objects","Business Logic","Managing Life Cycle State","Business Logic","Operating on Groups of Business Objects","Business Object Structures","Cloning Business Objects","Half-Baked Business Objects","CCAs","Retrieving Business Objects","Refreshing Business Objects","Adding Business Objects","Updating Business Objects","Deleting Business Objects","Server Component","Designing for Reuse","Error Handling","General Information","Server Component Errors","CCAs, CCIs, Business Objects, and Forms","User Interface Controller Errors","Localization","Requirements and Scope","Localizable Literals Repository","Flexible Interface ","Data Localization","Leverage Windows Operation System","Logical Unit of Work","Architecture API Hierarchy","Arch Object","CodesMan","TextMan","IdMan","RegMan","LogMan","ErrMan","UserMan","SecurityMan","Codes Framework","General Requirements","Infrastructure Approach","Localization Support Approach","Codes Expiration Approach","Updating Local CodeDecodes","Code Access APIs","Relational Codes Access APIs","Message Logging","Best Practices","Usage","Database Log","Local Log","Data Access","The \u201cExecuteQuery\u201d Method","Selecting Records","Inserting Records","Updating Records","Deleting Records","Database Locking Framework","Solution Options","Usage","Large Result Set","Scrollable Result Set Client Requirements","Bounded Query","Application Responsibility","Example","Operation of Example with Data","Security Framework","Description","Security Framework","Relationships","Client Profile","Security Object","Server Security APIs","Implementation Examples","Task Engine Application","Claim Folder","Claim Folder Tree and Menu Design","Claim History","Forms and Correspondence","File Notes","Address Book","Index","Injury","Negotiation","Organization","Participant","Performer","Task Assistant","Event Processor\/Task Engine"],"p":["The present invention relates to information management and more particularly to linking information during insurance claim processing utilizing a computer system.","Computers have become a necessity in life today. They appear in nearly every office and household worldwide. A representative hardware environment is depicted in prior art , which illustrates a typical hardware configuration of a workstation having a central processing unit , such as a microprocessor, and a number of other units interconnected via a system bus . The workstation shown in  includes a Random Access Memory (RAM) , Read Only Memory (ROM) , an I\/O adapter  for connecting peripheral devices such as disk storage units  to the bus , a user interface adapter  for connecting a keyboard , a mouse , a speaker , a microphone , and\/or other user interface devices such as a touch screen (not shown) to the bus , communication adapter  for connecting the workstation to a communication network (e.g., a data processing network) and a display adapter  for connecting the bus  to a display device . The workstation typically has resident thereon an operating system such as the Microsoft Windows NT or Windows\/95 Operating System (OS), the IBM OS\/2 operating system, the MAC OS, or UNIX operating system.","Object oriented programming (OOP) has become increasingly used to develop complex applications. As OOP moves toward the mainstream of software design Object oriented programming (OOP) has become increasingly used to develop complex applications. As OOP moves toward the mainstream of software design and development, various software solutions require adaptation to make use of the benefits of OOP. A need exists for these principles of OOP to be applied to a messaging interface of an electronic messaging system such that a set of OOP classes and objects for the messaging interface can be provided.","OOP is a process of developing computer software using objects, including the steps of analyzing the problem, designing the system, and constructing the program. An object is a software package that contains both data and a collection of related structures and procedures. Since it contains both data and a collection of structures and procedures, it can be visualized as a self-sufficient component that does not require other additional structures, procedures or data to perform its specific task. OOP, therefore, views a computer program as a collection of largely autonomous components, called objects, each of which is responsible for a specific task. This concept of packaging data, structures, and procedures together in one component or module is called encapsulation.","In general, OOP components are reusable software modules which present an interface that conforms to an object model and which are accessed at run-time through a component integration architecture. A component integration architecture is a set of architecture mechanisms which allow software modules in different process spaces to utilize each others capabilities or functions. This is generally done by assuming a common component object model on which to build the architecture. It is worthwhile to differentiate between an object and a class of objects at this point. An object is a single instance of the class of objects, which is often just called a class. A class of objects can be viewed as a blueprint, from which many objects can be formed.","OOP allows the programmer to create an object that is a part of another object. For example, the object representing a piston engine is said to have a composition-relationship with the object representing a piston. In reality, a piston engine comprises a piston, valves and many other components; the fact that a piston is an element of a piston engine can be logically and semantically represented in OOP by two objects.","OOP also allows creation of an object that \u201cdepends from\u201d another object. If there are two objects, one representing a piston engine and the other representing a piston engine wherein the piston is made of ceramic, then the relationship between the two objects is not that of composition. A ceramic piston engine does not make up a piston engine. Rather it is merely one kind of piston engine that has one more limitation than the piston engine; its piston is made of ceramic. In this case, the object representing the ceramic piston engine is called a derived object, and it inherits all of the aspects of the object representing the piston engine and adds further limitation or detail to it. The object representing the ceramic piston engine \u201cdepends from\u201d the object representing the piston engine. The relationship between these objects is called inheritance.","When the object or class representing the ceramic piston engine inherits all of the aspects of the objects representing the piston engine, it inherits the thermal characteristics of a standard piston defined in the piston engine class. However, the ceramic piston engine object overrides these ceramic specific thermal characteristics, which are typically different from those associated with a metal piston. It skips over the original and uses new functions related to ceramic pistons. Different kinds of piston engines have different characteristics, but may have the same underlying functions associated with it (e.g., how many pistons in the engine, ignition sequences, lubrication, etc.). To access each of these functions in any piston engine object, a programmer would call the same functions with the same names, but each type of piston engine may have different\/overriding implementations of functions behind the same name. This ability to hide different implementations of a function behind the same name is called polymorphism and it greatly simplifies communication among objects.","With the concepts of composition-relationship, encapsulation, inheritance and polymorphism, an object can represent just about anything in the real world. In fact, the logical perception of the reality is the only limit on determining the kinds of things that can become objects in object-oriented software. Some typical categories are as follows:\n\n","With this enormous capability of an object to represent just about any logically separable matters, OOP allows the software developer to design and implement a computer program that is a model of some aspects of reality, whether that reality is a physical entity, a process, a system, or a composition of matter. Since the object can represent anything, the software developer can create an object which can be used as a component in a larger software project in the future.","If 90% of a new OOP software program consists of proven, existing components made from preexisting reusable objects, then only the remaining 10% of the new software project has to be written and tested from scratch. Since 90% already came from an inventory of extensively tested reusable objects, the potential domain from which an error could originate is 10% of the program. As a result, OOP enables software developers to build objects out of other, previously built objects.","This process closely resembles complex machinery being built out of assemblies and sub-assemblies. OOP technology, therefore, makes software engineering more like hardware engineering in that software is built from existing components, which are available to the developer as objects. All this adds up to an improved quality of the software as well as an increased speed of its development.","A computer program is provided for developing component based software capable of linking insurance-related information. The program includes a data component that stores, retrieves and manipulates data utilizing a plurality of functions. Also provided is a client component that includes an adapter component that transmits and receives data to\/from the data component. The client component also includes a business component that serves as a data cache and includes logic for manipulating the data. A controller component is also included which is adapted to handle events generated by a user utilizing the business component to cache data and the adapter component to ultimately persist data to a data repository. In use, the client component is provided with insurance-related information concerning an individual and an event. The user is then able to input information concerning the involvement of the individual in the event. In addition, the user is able to link the individual to the event. Finally, the linked information concerning the individual, the event and the involvement of the individual in the event are displayed.","Programming languages are beginning to fully support the OOP principles, such as encapsulation, inheritance, polymorphism, and composition-relationship. With the advent of the C++ language, many commercial software developers have embraced OOP. C++ is an OOP language that offers a fast, machine-executable code. Furthermore, C++ is suitable for both commercial-application and systems-programming projects. For now, C++ appears to be the most popular choice among many OOP programmers, but there is a host of other OOP languages, such as Smalltalk, Common Lisp Object System (CLOS), and Eiffel. Additionally, OOP capabilities are being added to more traditional popular computer programming languages such as Pascal.","The benefits of object classes can be summarized, as follows:\n\n","Class libraries are very flexible. As programs grow more complex, more programmers are forced to reinvent basic solutions to basic problems over and over again. A relatively new extension of the class library concept is to have a framework of class libraries. This framework is more complex and consists of significant collections of collaborating classes that capture both the small scale patterns and major mechanisms that implement the common requirements and design in a specific application domain. They were first developed to free application programmers from the chores involved in displaying menus, windows, dialog boxes, and other standard user interface elements for personal computers.","Frameworks also represent a change in the way programmers think about the interaction between the code they write and code written by others. In the early days of procedural programming, the programmer called libraries provided by the operating system to perform certain tasks, but basically the program executed down the page from start to finish, and the programmer was solely responsible for the flow of control. This was appropriate for printing out paychecks, calculating a mathematical table, or solving other problems with a program that executed in just one way.","The development of graphical user interfaces began to turn this procedural programming arrangement inside out. These interfaces allow the user, rather than program logic, to drive the program and decide when certain actions should be performed. Today, most personal computer software accomplishes this by means of an event loop which monitors the mouse, keyboard, and other sources of external events and calls the appropriate parts of the programmer's code according to actions that the user performs. The programmer no longer determines the order in which events occur. Instead, a program is divided into separate pieces that are called at unpredictable times and in an unpredictable order. By relinquishing control in this way to users, the developer creates a program that is much easier to use. Nevertheless, individual pieces of the program written by the developer still call libraries provided by the operating system to accomplish certain tasks, and the programmer must still determine the flow of control within each piece after it's called by the event loop. Application code still \u201csits on top of\u201d the system.","Even event loop programs require programmers to write a lot of code that should not need to be written separately for every application. The concept of an application framework carries the event loop concept further. Instead of dealing with all the nuts and bolts of constructing basic menus, windows, and dialog boxes and then making these things all work together, programmers using application frameworks start with working application code and basic user interface elements in place. Subsequently, they build from there by replacing some of the generic capabilities of the framework with the specific capabilities of the intended application.","Application frameworks reduce the total amount of code that a programmer has to write from scratch. However, because the framework is really a generic application that displays windows, supports copy and paste, and so on, the programmer can also relinquish control to a greater degree than event loop programs permit. The framework code takes care of almost all event handling and flow of control, and the programmer's code is called only when the framework needs it (e.g., to create or manipulate a proprietary data structure).","A programmer writing a framework program not only relinquishes control to the user (as is also true for event loop programs), but also relinquishes the detailed flow of control within the program to the framework. This approach allows the creation of more complex systems that work together in interesting ways, as opposed to isolated programs, having custom code, being created over and over again for similar problems.","Thus, as is explained above, a framework basically is a collection of cooperating classes that make up a reusable design solution for a given problem domain. It typically includes objects that provide default behavior (e.g., for menus and windows), and programmers use it by inheriting some of that default behavior and overriding other behavior so that the framework calls application code at the appropriate times.","There are three main differences between frameworks and class libraries:\n\n","Thus, through the development of frameworks for solutions to various problems and programming tasks, significant reductions in the design and development effort for software can be achieved. A preferred embodiment of the invention utilizes HyperText Markup Language (HTML) to implement documents on the Internet together with a general-purpose secure communication protocol for a transport medium between the client and the Newco. HTTP or other protocols could be readily substituted for HTML without undue experimentation. Information on these products is available in T. Berners-Lee, D. Connoly, \u201cRFC 1866: Hypertext Markup Language-2.0\u201d (November 1995); and R. Fielding, H, Frystyk, T. Berners-Lee, J. Gettys and J. C. Mogul, \u201cHypertext Transfer Protocol\u2014HTTP\/1.1: HTTP Working Group Internet Draft\u201d (May 2, 1996). HTML is a simple data format used to create hypertext documents that are portable from one platform to another. HTML documents are SGML documents with generic semantics that are appropriate for representing information from a wide range of domains. HTML has been in use by the World-Wide Web global information initiative since 1990. HTML is an application of ISO Standard 8879; 1986 Information Processing Text and Office Systems; Standard Generalized Markup Language (SGML).","To date, Web development tools have been limited in their ability to create dynamic Web applications which span from client to server and interoperate with existing computing resources. Until recently, HTML has been the dominant technology used in development of Web-based solutions. However, HTML has proven to be inadequate in the following areas:\n\n","Sun Microsystem's Java language solves many of the client-side problems by:\n\n","With Java, developers can create robust User Interface (UI) components. Custom \u201cwidgets\u201d (e.g., real-time stock tickers, animated icons, etc.) can be created, and client-side performance is improved. Unlike HTML, Java supports the notion of client-side validation, offloading appropriate processing onto the client for improved performance. Dynamic, real-time Web pages can be created. Using the above-mentioned custom UI components, dynamic Web pages can also be created.","Sun's Java language has emerged as an industry-recognized language for \u201cprogramming the Internet.\u201d Sun defines Java as: \u201ca simple, object-oriented, distributed, interpreted, robust, secure, architecture-neutral, portable, high-performance, multithreaded, dynamic, buzzword-compliant, general-purpose programming language. Java supports programming for the Internet in the form of platform-independent Java applets.\u201d Java applets are small, specialized applications that comply with Sun's Java Application Programming Interface (API) allowing developers to add \u201cinteractive content\u201d to Web documents (e.g., simple animations, page adornments, basic games, etc.). Applets execute within a Java-compatible browser (e.g., Netscape Navigator) by copying code from the server to client. From a language standpoint, Java's core feature set is based on C++. Sun's Java literature states that Java is basically, \u201cC++ with extensions from Objective C for more dynamic method resolution.\u201d","Another technology that provides similar function to JAVA is provided by Microsoft and ActiveX Technologies, to give developers and Web designers wherewithal to build dynamic content for the Internet and personal computers. ActiveX includes tools for developing animation, 3-D virtual reality, video and other multimedia content. The tools use Internet standards, work on multiple platforms, and are being supported by over 100 companies. The group's building blocks are called ActiveX Controls, small, fast components that enable developers to embed parts of software in hypertext markup language (HTML) pages. ActiveX Controls work with a variety of programming languages including Microsoft Visual C++, Borland Delphi, Microsoft Visual Basic programming system and, in the future, Microsoft's development tool for Java, code named \u201cJakarta.\u201d ActiveX Technologies also includes ActiveX Server Framework, allowing developers to create server applications. One of ordinary skill in the art readily recognizes that ActiveX could be substituted for JAVA without undue experimentation to practice the invention.","One embodiment of the present invention is a server based framework utilizing component based architecture. Referring to , one embodiment of the present invention includes an Architecture Object , an Application Object , a User Interface Form , a User Interface Controller , a Client Component Adapter , a COM Component Interface , and a Server Component .","In general, the components of the present invention operate as shown in . In step , data is stored in an object of the component. In step , functions which manipulate the object are encapsulated with the object data. Later, in step , the stored object data can be manipulated by other components utilizing the functions of step .","Architecture Object","The Architecture Object  provides an easy-to-use object model that masks the complexity of the architecture on the client. The Architecture Object  provides purely technical services and does not contain any business logic or functional code. It is used on the client as the single point of access to all architecture services.","On the server side, the Architecture Object  is supplemented by a set of global functions contained in standard VB modules","The Architecture Object  is responsible for providing all client architecture services (i.e., codes table access, error logging, etc.), and a single point of entry for architecture services. The Architecture Object  is also responsible for allowing the architecture to exist as an autonomous unit, thus allowing internal changes to be made to the architecture with minimal impact to application.","The Architecture Object  provides a code manager, client profile, text manager, ID manager, registry manager, log manager, error manager, and a security manager. The codes manager reads codes from a local database on the client, marshals the codes into objects, and makes them available to the application. The client profile provides information about the current logged-in user. The text manager provides various text manipulation services such as search and replace. The ID manager generates unique IDs and timestamps. The registry manager encapsulates access to the system registry. The log manager writes error or informational messages to the message log. The error manager provides an easy way to save and re-raise an error. And the security manager determines whether or not the current user is authorized to perform certain actions.","Application Object","The Application Object  has a method to initiate each business operation in the application. It uses late binding to instantiate target UI controllers in order to provide autonomy between windows. This allows different controllers to use the Application Object  without statically linking to each and every UI controller in the application.","When opening a UI controller, the Application Object  calls the architecture initialization, class initialization, and form initialization member functions.","The Application Object  keeps a list of every active window, so that it can shut down the application in the event of an error. When a window closes, it tells the Application Object , and is removed from the Application Object's  list of active windows.","The Application Object  is responsible for instantiating each UI Controller , passing data\/business context to the target UI Controller , and invoking standard services such as initialize controller, initializing Form and Initialize Architecture. The Application Object  also keeps track of which windows are active so that it can coordinate the shutdown process.","UI Form","The UI form's  primary responsibility is to forward important events to its controller . It remains mostly unintelligent and contains as little logic as possible. Most event handlers on the form simply delegate the work by calling methods on the form's controller .","The UI form  never enables or disables its own controls, but ask its controller  to do it instead. Logic is included on the UI form  only when it involves very simple field masking or minor visual details.","The UI form  presents an easy-to-use, graphical interface to the user and informs its controller  of important user actions. The UI form  may also provide basic data validation (e.g., data type validation) through input masking. In addition, the UI form is responsible for intelligently resizing itself, launching context-sensitive help, and unload itself.","User Interface Controller","Every UI Controller  includes a set of standard methods for initialization, enabling and disabling controls on its UI form , validating data on the form, getting data from the UI form , and unloading the UI form .","UI Controllers  contain the majority of logic to manipulate Business Objects  and manage the appearance of its UI form . If its form is not read-only, the UI Controller  also tracks whether or not data on the UI form  has changed, so as to avoid unnecessary database writes when the user decides to save. In addition, controllers of auxiliary windows (like the File-Save dialog box in Microsoft Word), keep track of their calling UI controller  so that they can notify it when they are ready to close.",{"@attributes":{"id":"p-0065","num":"0088"},"figref":"FIG. 2C","b":["236","238","240"]},"A UI Controller  defines a Logical Unit of Work (LUW). If an LUW involves more than one UI Controller , the LUW is implemented as a separate object.","The UI Controller  is responsible for handling events generated by the user interacting with the UI form  and providing complex field validation and cross field validation within a Logical Unit of Work. The UI Controller  also contains the logic to interact with business objects , and creates new business objects  when necessary. Finally, the UI Controller  interacts with Client Component Adapters  to add, retrieve, modify, or delete business objects , and handles all client-side errors.","Business Objects","The Business Object's (BO)  primary functionality is to act as a data holder, allowing data to be shared across User Interface Controllers  using an object-based programming model.","BOs  perform validation on their attributes as they are being set to maintain the integrity of the information they contain. BOs  also expose methods other than accessors to manipulate their data, such as methods to change the life cycle state of a BO  or to derive the value of a calculated attribute.","In many cases, a BO  will have its own table in the database and its own window for viewing or editing operations.","Business Objects  contain information about a single business entity and maintain the integrity of that information. The BO  encapsulates business rules that pertain to that single business entity and maintains relationships with other business objects (e.g., a claim contains a collection of supplements). Finally, the BO  provides additional properties relating to the status of the information it contains (such as whether that information has changed or not), provides validation of new data when necessary, and calculates attributes that are derived from other attributes (such as Full Name, which is derived from First Name, Middle Initial, and Last Name).","Client Component Adapters","Client Component Adapters (CCAs)  are responsible for retrieving, adding, updating, and deleting business objects in the database. CCAs  hide the storage format and location of data from the UI controller . The UI controller  does not care about where or how objects are stored, since this is taken care of by the CCA .","The CCA  marshals data contained in recordsets returned by the server into business objects . CCAs  masks all remote requests from UI Controller  to a specific component, and act as a \u201chook\u201d for services such as data compression, and data encryption.","COM Component Interface","A COM Component Interface (CCI)  is a \u201ccontract\u201d for services provided by a component. By \u201cimplementing\u201d an interface (CCI) , a component is promising to provide all the services defined by the CCI .","The CCI  is not a physical entity (which is why it is depicted with a dotted line). It's only reason for existence is to define the way a component appears to other objects. It includes the signatures or headers of all the public properties or methods that a component will provide.","To implement a CCI , a server component exposes a set of specially named methods, one for each method defined on the interface. These methods should do nothing except delegate the request to a private method on the component which will do the real work.","The CCI  defines a set of related services provided by a component. The CCI allows any component to \u201chide\u201d behind the interface to perform the services defined by the interface by \u201cimplementing\u201d the interface.","Server Component","Server components  are course grained and transaction oriented. They are designed for maximum efficiency.","Server Components  encapsulate all access to the database, and define business transaction boundaries. In addition, Server Components  are responsible for ensuring that business rules are honored during data access operations.","A Server Component  performs data access operations on behalf of CCAs  or other components and participates in transactions spanning server components  by communicating with other server components . The Server Component  is accessible by multiple front end personalities (e.g., Active Server Pages), and contains business logic designed to maintain the integrity of data in the database.",{"@attributes":{"id":"p-0081","num":"0104"},"figref":"FIG. 2D","b":["242","244","222","210","246","222"]},"Overview","The distribution of business rules across tiers of the application directly affects the robustness and performance of the system as a whole. Business rules can be categorized into the following sections: Relationships, Calculations, and Business Events.","Relationships Between Business Objects","Business Objects  are responsible for knowing other business objects  with which they are associated.","Relationships between BOs  are built by the CCA  during the marshaling process. For example, when a CCA  builds a claim BO , it will also build the collection of supplements if necessary.","Calculated Business Data","Business rules involving calculations based on business object  attributes are coded in the business objects  themselves. Participant Full Name is a good example of a calculated attribute. Rather than force the controllers to concatenate the first name, middle initial, and last name every time they wanted to display the full name, a calculated attribute that performs this logic is exposed on the business object. In this way, the code to compose the full name only has to be written once and can be used by many controllers .","Another example of a calculated attribute is the display date of a repeating task. When a task with a repeat rule is completed, a new display date must be determined. This display date is calculated based on the date the task was completed, and the frequency of repetition defined by the repeat rule. Putting the logic to compute the new display date into the Task BO  ensures that it is coded only once.","Responses to Business Events","Business rules that relate to system events and involve no user interaction are enforced on the server components.","Completion of a task is a major event in the system. When a task is completed, the system first ensures that the performer completing the task is added to the claim. Then, after the task is marked complete in the database, it is checked to see if the task has a repeat rule. If so, another task is created and added to the database. Finally, the event component is notified, because the Task Engine may need to react to the task completion.","Consider the scenario if the logic to enforce this rule were placed on the UI controller .","The controller  calls the Performer Component to see if the performer completing the task has been added to the claim. If the performer has not been added to the claim, then the controller  calls the performer component again to add them.","Next, the controller  calls the Task Component to mark the task complete in the database. If the task has a repeat rule, the controller  computes the date the task is to be redisplayed and calls the Task Component again to add a new task. Lastly, the controller  calls the Event Component to notify the Task Engine of the task completion.","The above implementation requires five network round trips in its worst case. In addition, any other controller  or server component  that wants to complete a task must code this logic all over again. Enforcing this rule in the task server component  reduces the number of network round trips and eliminates the need to code the logic more than once.","Responses to User Events","All responses to user events are coordinated by the controller . The controller  is responsible for actions such as enabling or disabling controls on its form, requesting authorization from the security component, or making calls to the CCA .","Authorization","All logic for granting authorization is encapsulated inside the security component. Controllers  and components  must ask the security component if the current user is authorized to execute certain business operations in the system. The security component will answer yes or no according to some predefined security logic.",{"@attributes":{"id":"p-0095","num":"0118"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Summary"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Type of Business Rule","Example","Responsibility"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Maintaining relationships","Claim keeps a collection of supplements","Business Objects"]},{"entry":"between BOs"},{"entry":["Building relationships","CCA builds the claim's collection of","CCAs"]},{"entry":["between BOs","supplements"]},{"entry":["Calculated Business Data","Participant calculates its full name","Business Objects"]},{"entry":["Responses to Business","Task Component collaborates with other","Components"]},{"entry":["Events","components"]},{"entry":["Requesting Authorization","Task Library controller asks the","Controllers and"]},{"entry":[{},"security component if the current user","Components"]},{"entry":[{},"is allowed to access Task Library"]},{"entry":["Granting Authorization","Security component determines whether","Security Component"]},{"entry":[{},"or not the current user can access Task"]},{"entry":[{},"Library"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"The Default Window Framework provides default window processing for each window contained within the system. This default processing aides the developer in developing robust, maintainable UIs, standardizes common processes (such as form initialization) and facilitates smooth integration with architecture services.",{"@attributes":{"id":"p-0097","num":"0120"},"figref":"FIG. 3","b":"300"},"The Window Processing Framework  encompasses the following:","Window Initialization ;","Window Save Processing ;","Window Control State Management ;","Window Data Validation ;","Window Shutdown Processing .","Window Initialization Processing : After creating a controller  for the desired window, the App object  calls a set of standard initialization functions on the controller  before the form  is displayed to the user. Standardizing these functions makes the UIs more homogeneous throughout the application, while promoting good functional decomposition.","Window Save Processing : Any time a user updates any form text or adds an item to a ListBox, the UI Controller  marks the form as \u201cdirty\u201d. This allows the UI controller  to determine whether data has changed when the form closes and prompt the user to commit or lose their changes.","Window Control State Management : Enabling and disabling controls and menu options is a very complex part of building a UI. The logic that modifies the state of controls is encapsulated in a single place for maintainability.","Window Data Validation : Whenever data changes on a form, validation rules can be broken. The controller is able to detect those changes, validate the data, and prompt the user to correct invalid entries.","Window Shutdown Processing : The Window Shutdown framework provides a clear termination path for each UI in the event of an error. This reduces the chance of memory leaks, and General Protection failures.","Benefits","Standardized Processing: Standardizing the window processing increases the homogeneity of the application. This ensures that all windows within the application behave in a consistent manner for the end users, making the application easier to use. It also shortens the learning curve for developers and increases maintainability, since all windows are coded in a consistent manner.","Simplified Development: Developers can leverage the best practices documented in the window processing framework to make effective design and coding decisions. In addition, a shell provides some \u201ccanned\u201d code that gives developers a head start during the coding effort.","Layered Architecture: Because several architecture modules provide standardized processing to each application window, the core logic can be changed for every system window by simply making modifications to a single procedure.","To open a new window, the App Object  creates the target window's controller  and calls a series of methods on the controller  to initialize it. The calling of these methods, ArchInitClass, InitClass, InitForm, and ShowForm, is illustrated below.","ArchInitClass","The main purpose of the ArchInitClass function is to tell the target controller  who is calling it. The App Object  \u201cdoes the introductions\u201d by passing the target controller  a reference to itself and a reference to the calling controller . In addition, it serves as a hook into the controller  for adding architecture functionality in the future.",{"@attributes":{"id":"p-0109","num":"0132"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Sub ArchInitClass(objApp As Object, objCallingCTLR As"]},{"entry":[{},"Object)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 remember who called me"]},{"entry":[{},"Set m_objApp = objApp"]},{"entry":[{},"Set m_objCallingCTLR = objCallingCTLR"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"This function provides a way for the App Object  to give the target controller  any data it needs to do its processing. It is at this point that the target controller  can determine what \u201cmode\u201d it is in. Typical form modes include, add mode, edit mode, and view mode. If the window is in add mode, it creates a new BO  of the appropriate type in this method.",{"@attributes":{"id":"p-0111","num":"0134"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Public Sub InitClass(colPrevSelection As CArchCollection)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If colPrevSelection Is Nothing Then"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 no accounts were previously selected"]},{"entry":[{},"Set m_colPrevSelection = New CArchCollection"]},{"entry":[{},"Set m_colNewSelection = New CArchCollection"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 some accounts may have already been selected"]},{"entry":[{},"Set m_colPrevSelection = colPrevSelection"]},{"entry":[{},"Set m_colNewSelection = colPrevSelection.Clone( )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End If"]},{"entry":[{},"Set m_colResults = New CArchCollection"]},{"entry":[{},"DetermineFormMode( )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"The InitForm procedure of each controller  coordinates any initialization of the form  before it is displayed. Because initialization is often a multi-step process, InitForm creates the window and then delegates the majority of the initialization logic to helper methods that each have a single purpose, in order to follow the rules of good functional decomposition. For example, the logic to determine a form's  state based on user actions and relevant security restrictions and move to that state is encapsulated in the DetermineFormState method.",{"@attributes":{"id":"p-0113","num":"0136"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Public Sub InitForm( )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 create my form"]},{"entry":[{},"Set m_frmCurrentForm = New frmAccountSearch"]},{"entry":[{},"\u2018 figure out the state of my form based on arguments I"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"received in InitClass and"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 enable\/disable the appropriate controls"]},{"entry":[{},"DetermineFormState( )"]},{"entry":[{},"\u2018 fill my form with data"]},{"entry":[{},"PopulateForm( )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"PopulateForm is a private method responsible for filling the form with data during initialization. It is called exactly once by the InitForm method. PopulateForm is used to fill combo boxes on a form , get the details of an object for an editing window, or display objects that have already been selected by the user, as in the following example.",{"@attributes":{"id":"p-0115","num":"0138"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Private Sub PopulateForm( )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim acct As CAccount"]},{"entry":[{},"Dim item As GTListItem"]},{"entry":[{},"\u2018 display any accounts already selected by the user"]},{"entry":[{},"\u2018 create and add a ListItem for every Account in the"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"previous selection collection"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"With frmCurrentForm.lvwResults.ListItems"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".Clear"]},{"entry":[{},"For Each acct In m_colPrevSelection"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set item = .Add(, acct.Number, acct.Number)"]},{"entry":[{},"item.SubItems(1) = acct.Name"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Next"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End With"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"The ShowForm method simply centers and displays the newly initialized form .",{"@attributes":{"id":"p-0117","num":"0140"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Public Sub ShowForm( )"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 center my form"]},{"entry":[{},"frmCurrentForm.Move(Screen.Width \u2212 frmCurrentForm.Width) \/"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"2,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"(Screen.Height \u2212 frmCurrentForm.Height)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\/ 2"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 display my form"]},{"entry":[{},"frmCurrentForm.Show vbModal"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Sub"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"It is often necessary to enable or disable controls on a form  in response to user actions. This section describes the patterns employed by the Component Based Architecture for MTS (CBAM) to manage this process effectively.","Form Mode","It is helpful to distinguish between form mode and form state. Form mode indicates the reason the form  has been invoked. Often, forms  are used for more than one purpose. A common example is the use of the same form to view, add, and edit a particular type of object, such as a task or a claim. In this case, the form's modes would include View, Add, and Update.","The modes of a form  are also used to comply with security restrictions based on the current user's access level. For example, Task Library is a window that limits access to task templates based on the current user's role. It might have a Librarian mode and a Non-Librarian mode to reflect the fact that a non-librarian user cannot be allowed to edit task templates. In this way, modes help to enforce the requirement that certain controls on the form  remain disabled unless the user has a certain access level.","It is not always necessary for a form  to have a mode; a form might be so simple that it would have only one mode\u2014the default mode. In this case, even though it is not immediately necessary, it may be beneficial to make the form \u201cmode-aware\u201d so that it can be easily extended should the need arise.","Form State","A form  will have a number of different states for each mode, where a state is a unique combination of enabled\/disabled, visible\/invisible controls. When a form  moves to a different state, at least one control is enabled or disabled or modified in some way.","A key difference between form mode and form state is that mode is determined when the controller  is initialized and remains constant until the controller  terminates. State is determined when the window initializes, but is constantly being reevaluated in response to user actions.","Handling UI Events","When the value of a control on the form  changes, it is necessary to reevaluate the state of the controls on the form (whether or not they are enabled\/disabled or visible\/invisible, etc.). If changing the value of one control could cause the state of a second control to change, an event handler is written for the appropriate event of the first control.","The following table lists common controls and the events that are triggered when their value changes.",{"@attributes":{"id":"p-0126","num":"0149"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Control","Event"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"TextBox","Change"]},{"entry":[{},"ComboBox","Change"]},{"entry":[{},"ListBox","Click"]},{"entry":[{},"CheckBox","Click"]},{"entry":[{},"Option Button","Click"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The event handler calls the DetermineFormState method on the controller .","Setting the State of Controls","It is essential for maintainability that the process of setting the state of controls be separate from the process for setting the values of those controls. The DetermineFormState method on the controller  forces this separation between setting the state of controls and setting their values.","DetermineFormState is the only method that modifies the state of any of the controls on the form . Because control state requirements are so complex and vary so widely, this is the only restriction made by the architecture framework.","If necessary, parameters are passed to the DetermineFormState function to act as \u201chints\u201d or \u201cclues\u201d for determining the new state of the form . For complex forms, it is helpful to decompose the DetermineFormState function into a number of helper functions, each handling a group of related controls on the form or moving the form  to a different state.","Example","The Edit\/Add\/View Task Window has three modes: Edit, Add, and View. In Add mode, everything on the form is editable. Some details will stay disabled when in Edit mode, since they should be set only once when the task is added. In both Add and Edit modes, the repeat rule may be edited. Enabling editing of the repeat rule always disables the manual editing of the task's due and display dates. In View mode, only the Category combo box and Private checkbox are enabled.",{"@attributes":{"id":"p-0132","num":"0155"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2018 Edit\/Add\/View Task Form"},{"entry":"Private Sub txtName_Change( )"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"myController.DetermineFormState"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Sub"},{"entry":"\u2018 Edit\/Add\/View Task Controller"},{"entry":"Public Sub DetermineFormState( )"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"Select Case m_nFormMode"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2018 In Edit Mode, enable only \u201ceditable\u201d details and"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Repeat Rule editing if necessary"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmFormModeEdit"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EnableAddDetails False"]},{"entry":[{},"EnableEditDetails True"]},{"entry":[{},"EnableViewDetails True"]},{"entry":[{},"If m_frmCurrentForm.chkRepetetiveTask.Checked Then"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EnableEditRepeatRule True"]},{"entry":[{},"EnableEditDisplayDueDates False"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EnableEditRepeatRule False"]},{"entry":[{},"EnableEditDisplayDueDates True"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End If"]},{"entry":[{},"If m_nFormDirty Then EnableSave True Else"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"EnableSave False"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2018 In Add Mode, enable all details and Repeat Rule"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"editing if necessary"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmFormModeAdd"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EnableAddDetails True"]},{"entry":[{},"EnableEditDetails True"]},{"entry":[{},"EnableViewDetails True"]},{"entry":[{},"If m_frmCurrentForm.chkRepetetiveTask.Checked Then"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EnableEditRepeatRule True"]},{"entry":[{},"EnableEditDisplayDueDates False"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EnableEditRepeatRule False"]},{"entry":[{},"EnableEditDisplayDueDates True"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End If"]},{"entry":[{},"If m_nFormDirty Then EnableSave True Else"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"EnableSave False"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2018 In View Mode, disable everything except a few"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"details"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmFormModeView"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EnableAddDetails False"]},{"entry":[{},"EnableEditDetails False"]},{"entry":[{},"EnableViewDetails True"]},{"entry":[{},"EnableEditRepeatRule False"]},{"entry":[{},"EnableEditDisplayDueDates False"]},{"entry":[{},"EnableSave False"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case Else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Select"]},{"entry":[{},"Exit Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ErrorHandler:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2018 error handling"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Sub"},{"entry":"\u2018 Edit\/Add\/View Task Controller"},{"entry":"Private Sub EnableAddDetails(bYesNo As Boolean)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 Enable or disable controls that should be available only"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"when the task is being added."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"With frmCurrentForm"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".Name.Enabled = bYesNo"]},{"entry":[{},".Description.Enabled = bYesNo"]},{"entry":[{},".Type.Enabled = bYesNo"]},{"entry":[{},".Level.Enabled = bYesNo"]},{"entry":[{},".Source.Enabled = bYesNo"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},"Exit Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ErrorHandler:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2018 error handling logic"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Sub"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Window data validation is the process by which data on the window is examined for errors, inconsistencies, and proper formatting. It is important, for the sake of consistency, to implement this process similarly or identically in all windows of the application.","Types of Validation","Input Masking","Input masking is the first line of defense. It involves screening the data (usually character by character) as it is entered, to prevent the user from even entering invalid data. Input masking may be done programmatically or via a special masked text box, however the logic is always located on the form, and is invoked whenever a masked field changes.","Single-Field Range Checking","Single-field range checking determines the validity of the value of one field on the form by comparing it with a set of valid values. Single-field range checking may be done via a combo box, spin button, or programmatically on the form, and is invoked whenever the range-checked field changes.","Cross-Field Validation","Cross-field validation compares the values of two or more fields to determine if a validation rule is met or broken, and occurs just before saving (or searching). Cross-field validation may be done on the Controller  or the Business Object , however it is preferable to place the logic on the Business Object  when the validation logic can be shared by multiple Controllers .","Invalid data is caught and rejected as early as possible during the input process. Input masking and range checking provide the first line of defense, followed by cross-field validation when the window saves (or searches).","Single-Field Validation","All single-field validation is accomplished via some sort of input masking. Masks that are attached to textboxes are used to validate the type or format of data being entered. Combo boxes and spin buttons may also be used to limit the user to valid choices. If neither of these are sufficient, a small amount of logic may be placed on the form's event handler to perform the masking functionality, such as keeping a value below a certain threshold or keeping apostrophes out of a textbox.","Cross-Field Validation","When the user clicks OK or Save, the form calls the IsFormDataValid on the controller to perform cross-field validation (e.g., verifying that a start date is less than an end date). If the business object  contains validation rules, the controller  may call a method on the business object  to make sure those rules are not violated.","If invalid data is detected by the controller , it will notify the user with a message box and, if possible, the indicate which field or fields are in error. Under no circumstances will the window perform validation when the user is trying to cancel.","Example",{"@attributes":{"id":"p-0141","num":"0164"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 Generic Edit Form"]},{"entry":[{},"Private Sub cmdOK_Click( )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 shut down if my data is valid."]},{"entry":[{},"\u2018 saving\/canceling will occur in my controller's"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"QueryUnload function"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"If IsFormDataValid Then Unload Me"]},{"entry":[{},"Exit Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},"Public Function IsFormDatavalid( ) As Boolean"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 assume success"]},{"entry":[{},"IsFormDataValid = True"]},{"entry":[{},"\u2018 evaluate all validation rules"]},{"entry":[{},"With frmCurrentForm"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 make sure start date is earlier than end date"]},{"entry":[{},"If .txtStartDate.Text > .txtEndDate.Text Then"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IsFormDataValid = False"]},{"entry":[{},"MsgBox cmMsgInvalidEndDate"]},{"entry":[{},".txtEndDate.SetFocus"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ElseIf . . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2018 more validation rules"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End If"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},"Exit Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2018 error handling logic"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Function"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Window \u201cSave Processing\u201d involves tracking changes to data on a form  and responding to save and cancel events initiated by the user.","Tracking Changes to Form Data","Each window within the CBAM application contains a field within its corresponding control object known as the dirty flag. The dirty flag is set to True whenever an end user modifies data within the window. This field is interrogated by the UI Controller  to determine when a user should be prompted on Cancel or if a remote procedure should be invoked upon window close.","The application shell provides standard processing for each window containing an OK or Save button.","Saving","The default Save processing is implemented within the UI Controller  as follows:","The UI Controller is Notified that the OK button has been clicked. Then the controller  checks its Dirty Flag. If flag is dirty, the controller  calls the InterrogateForm method to retrieve data from the form  and calls a server component  to store the business object  in the database. If the Dirty Flag is not set, then no save is necessary. The window is then closed.","Canceling","When the user cancels a window, the UI Controller  immediately examines the Dirty Flag. If the flag is set to true, the user is prompted that their changes will be lost if they decide to close the window.","Once prompted, the user can elect to continue to close the window and lose their changes or decide not to close and continue working.","In the event of an error, it is sometimes necessary to shutdown a window or to terminate the entire application. It is critical that all windows follow the shutdown process in order to avoid the GPFs commonly associated with terminating incorrectly. Following is how the window\/application is shutdown.","Shutdown Scope","The scope of the shutdown is as small as possible. If an error occurs in a controller  that does not affect the rest of the application, only that window is shut down. If an error occurs that threatens the entire application, there is a way to quickly close every open window in the application. The window shutdown strategy is able to accommodate both types of shutdowns.","Shutdown","In order to know what windows must be shut down, the architecture tracks which windows are open. Whenever the App Object  creates a controller , it calls its RegCTLR function to add the controller  to a collection of open controllers. Likewise, whenever a window closes, it tells the App Object  that it is closing by calling the App Object's  UnRegCTLR function, and the App Object  removes the closing controller  from its collection. In the case of an error, the App Object  loops through its collection of open controllers, telling each controller to \u201cquiesce\u201d or shutdown immediately.","GeneralErrorHandler","The GeneralErrorHandler is a method in MArch.bas that acts as the point of entry into the architecture's error handling mechanism. A component or a controller will call the GeneralErrorHandler when they encounter any type of unexpected or unknown error. The general error handler will return a value indicating what the component or controller should do: (1) resume on the line that triggered the error (2) resume on the statement after the line that triggered the error (3) exit the function (4) quiesce (5) shutdown the entire application.",{"@attributes":{"id":"p-0153","num":"0176"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ErrorHandler:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Select Case CStr(Err.Number)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 handle a search with no result error"]},{"entry":[{},"Case cmErrNoClaimTreeData"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MsgBox cmMsgNoResultsQuery, vbInformation"]},{"entry":[{},"frmCurrentForm.StatusBar.Panels(1) ="]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"cmNoResultsQuery"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018Sets mouse pointer back to default"]},{"entry":[{},"frmCurrentForm.Mousepointer = vbDefault"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case Else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim nResumeCode As Integer"]},{"entry":[{},"nResumeCode ="]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GeneralErrorHandler(objApp.objArch.AsMsgStruct, cmController,"},{"entry":"-"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"cmClassName,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"cmMethodName)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Select Case CStr(nResumeCode)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmErrorResume"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Resume"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmErrorResumeNext"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Resume Next"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmErrorExit"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Exit Sub"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmErrorQuiesce"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Quiesce"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case Else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"objApp.Shutdown"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End Select"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End Select"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Sub"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In order to prevent recursive calls the GeneralErrorHandler keeps a collection of controllers that are in the process of shutting down. If it is called twice in a row by the same controller , it is able to detect and short-circuit the loop. When the controller  finally does terminate, it calls the UnRegisterError function to let the GeneralErrorHandler know that it has shut down and removed from the collection of controllers.","Shutdown Process","After being told what to do by the GeneralErrorHandler, the controller  in error may try to execute the statement that caused the error, proceed as if nothing happened, exit the current function, call its Quiesce function to shut itself down, or call the Shutdown method on the App Object  to shut the entire application down.","Searching","Controllers  that manage search windows have a public method named Find<Noun>s where <Noun> is the type of object being searched for. This method is called in the event handler for the Find Now button.","Saving","Any controller  that manages an edit window has a public method called Save that saves changes the user makes to the data on the form . This method is called by the event handlers for both the Save and OK buttons (when\/if the OK button needs to save changes before closing).","Closing","A VB window is closed by the user in several ways: via the control-box in upper left corner, the X button in upper right corner, or the Close button. When the form closes, the only method that will always be called, regardless of the way in which the close was initiated, is the form's  QueryUnload event handler.","Because of this, there cannot be a standard Close method. Any processing that must occur when a window closes is to be done in the QueryUnload method on the controller  (which is called by the form's QueryUnload event handler).","The VB statement, Unload Me, appears in the Close button's event handler to manually initiate the unloading process. In this way, the Close button mimics the functionality of the control box and the X button, so that the closing process is handled the same way every time, regardless of how the user triggered the close. The OK button's event handler also executes the Unload Me statement, but calls the Save method on the controller first to save any pending changes.","Business Objects  are responsible for containing data, maintaining the integrity of that data, and exposing functions that make the data easy to manipulate. Whenever logic pertains to a single BO  it is a candidate to be placed on that BO. This ensures that it will not be coded once for each controller  that needs it. Following are some standard examples of business object logic.","Overview","The \u201cstate\u201d of a business object  is the set of all its attributes. Life cycle state refers only to a single attribute (or a small group of attributes) that determine where the BO  is in its life cycle. For example, the life cycle states of a Task are Open, Completed, Cleared, or Error. Business objectives usually involve moving a BO toward its final state (i.e., Completed for a Task, Closed for a Supplement, etc.).","Often, there are restrictions on a BO's movement through its life cycle. For example, a Task may only move to the Error state after first being Completed or Cleared. BOs provide a mechanism to ensure that they do not violate life cycle restrictions when they move from state to state.","Approach","A BO  has a method to move to each one of its different life cycle states. Rather than simply exposing a public variable containing the life cycle state of the task, the BO exposes methods, such as Task.Clear( ), Task.Complete( ), and Task.MarkInError( ), that move the task a new state. This approach prevents the task from containing an invalid value for life cycle state, and makes it obvious what the life cycle states of a task are.","Example",{"@attributes":{"id":"p-0165","num":"0188"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 CTask Business Object"]},{"entry":[{},"Public Sub MarkInError( )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"Select Case m_nLifeCycleState"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2018 move to error only if I've already been completed or"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"cleared"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmTaskCompleted, cmTaskCleared"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"m_nLifeCycleState = cmTaskInError"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 otherwise, raise an error"]},{"entry":[{},"Case Else"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise cmErrInvalidLifeCycleState"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Select"]},{"entry":[{},"Exit Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Overview","Sometimes, a BO  acts as a container for a group of other BOs. This happens when performing operations involving multiple BOs. For example, to close, a claim ensures that it has no open supplements or tasks. There might be a method on the claim BO\u2014CanClose( )\u2014that evaluates the business rules restricting the closing of a claim and return true or false. Another situation might involve retrieving the open tasks for a claim. The claim can loop through its collection of tasks, asking each task if it is open and, if so, adding it to a temporary collection which is returned to the caller.","Example",{"@attributes":{"id":"p-0167","num":"0190"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 Claim Business Object"]},{"entry":[{},"\u2018 Error handling omitted for clarity"]},{"entry":[{},"Public Function CanClose( ) As Boolean"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"CanClose = HasOpenTasks( ) And HasOpenSupplements( )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Function"]},{"entry":[{},"Public Function HasOpenTasks( ) As Boolean"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 assume that I have open tasks"]},{"entry":[{},"HasOpenTasks = True"]},{"entry":[{},"\u2018 loop through all my tasks and exit if I find one that is"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"open"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim task As CTask"]},{"entry":[{},"For Each task In m_colTasks"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If task.IsOpen( ) Then Exit Function"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Next task"]},{"entry":[{},"\u2018 I must not have any open tasks"]},{"entry":[{},"HasOpenTasks = False"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Function"]},{"entry":[{},"Public Function HasOpenSupplements( ) As Boolean"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 assume that I have open supplements"]},{"entry":[{},"HasOpenSupplements = True"]},{"entry":[{},"\u2018 loop through all my supplements and exit if I find one"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"that is open"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim supp As CSupplement"]},{"entry":[{},"For Each supp In m_colSupplements"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If supp.IsOpen( ) Then Exit Function"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Next supp"]},{"entry":[{},"HasOpenSupplements = False"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Function"]},{"entry":[{},"Public Function GetOpenTasks( ) As Collection"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim task As CTask"]},{"entry":[{},"Dim colOpenTasks As Collection"]},{"entry":[{},"For Each task In m_colTasks"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If task.IsOpen( ) Then colOpenTasks.Add task, task.Id"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Next task"]},{"entry":[{},"Set GetOpenTasks = colOpenTasks"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Function"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Overview","When a BO  is added or updated, it sends all of its attributes down to a server component  to write to the database. Instead of explicitly referring to each attribute in the parameter list of the functions on the CCA  and server component , all the attributes are sent in a single variant array. This array is also known as a structure.","Approach","Each editable BO  has a method named AsStruct that takes the object's member variables and puts them in a variant array. The CCA  calls this method on a BO  before it sends the BO  down to the server component  to be added or updated. The reason that this is necessary is that, although object references can be passed by value over the network, the objects themselves cannot. Only basic data types like Integer and String can be sent by value to a server component . A VB enumeration is used to name the slots of the structure, so that the server component  can use a symbolic name to access elements in the array instead of an index. Note that this is generally used only when performing adds or full updates on a business object .","In a few cases, there is a reason to re-instantiate the BO  on the server side. The FromStruct method does exactly the opposite of the AsStruct method and initializes the BO  from a variant array. The size of the structure passed as a parameter to FromStruct is checked to increase the certainty that it is a valid structure.","When a BO  contains a reference to another BO , the AsStruct method stores the primary key of the referenced BO . For example, the Task structure contains a PerformerId, not the performer BO  that is referenced by the task. When the FromStruct method encounters the PerformerId in the task structure, it instantiates a new performer BO and fills in the ID, leaving the rest of the performer BO empty.","Example",{"@attributes":{"id":"p-0172","num":"0195"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 CTask Business Object"]},{"entry":[{},"\u2018 enumeration of all task attributes"]},{"entry":[{},"Public Enum TaskAttributes"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"cmTaskId"]},{"entry":[{},"cmTaskName"]},{"entry":[{},":"]},{"entry":[{},"cmTaskDescription"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Enum"]},{"entry":[{},"\u2018 all task attributes declarations here"]},{"entry":[{},"\u2018 all setter and getter functions here"]},{"entry":[{},"Public Function AsStruct( ) As CTask"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 create and fill structure"]},{"entry":[{},"Dim vStruct(cmTaskNumOfAttributes \u2212 1) As Variant"]},{"entry":[{},"vStruct(cmTaskId) = m_vId"]},{"entry":[{},"vStruct(cmTaskName) = m_sName"]},{"entry":[{},"vStruct(cmTaskPerformerId) = m_vPerformerId"]},{"entry":[{},":"]},{"entry":[{},"vStruct(cmTaskDescription) = m_sDescription"]},{"entry":[{},"AsStruct = vStruct"]},{"entry":[{},"Exit Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Function"]},{"entry":[{},"Public Sub FromStruct(vStruct As Variant)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 check size of vStruct"]},{"entry":[{},"If Ubound(vStruct) <> (cmTaskNumOfAttributes \u2212 1) Then"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise cmErrInvalidParameters"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 update my values from the structure"]},{"entry":[{},"m_vId = vStruct(cmTaskId)"]},{"entry":[{},"m_sName = vStruct(cmTaskName)"]},{"entry":[{},"m_vPerformer.Id = vStruct(cmTaskperformerId)"]},{"entry":[{},":"]},{"entry":[{},"m_sDescription = vStruct(cmTaskDescription)"]},{"entry":[{},"Exit Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Overview","Often a copy of a business object  is made. Cloning is a way to implement this kind of functionality by encapsulating the copying process in the BO  itself. Controllers  that need to make tentative changes to a business object  simply ask the original BO  for a clone and make changes to the clone. If the user decides to save the changes, the controller  ask the original BO to update itself from the changes made to the clone.","Approach","Each BO  has a Clone method to return a shallow copy of itself. A shallow copy is a copy that doesn't include copies of the other objects that the BO  refers to, but only a copy of a reference to those objects. For example, to clone a task, it does not give the clone a brand new claim object; it gives the clone a new reference to the existing claim object. Collections are the only exception to this rule\u2014they are always copied completely since they contain references to other BOs.","Each BO  also has an UpdateFromClone method to allow it \u201cmerge\u201d a clone back in to itself by changing its attributes to match the changes made to the clone.","Example",{"@attributes":{"id":"p-0176","num":"0199"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 CTask Business Object"]},{"entry":[{},"Public Function Clone( ) As CTask"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 create clone object"]},{"entry":[{},"Dim tskClone As CTask"]},{"entry":[{},"Set tskClone = New CTask"]},{"entry":[{},"\u2018 fill clone with my data"]},{"entry":[{},"With tskClone"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".Id = m_vId"]},{"entry":[{},".Name = m_sName"]},{"entry":[{},".PerformerId = m_vPerformerId"]},{"entry":[{},"Set .Performer = m_prfPerformer"]},{"entry":[{},":"]},{"entry":[{},".Description = m_sDescription"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},"Set Clone = tskClone"]},{"entry":[{},"Exit Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err. Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Function"]},{"entry":[{},"Public Sub UpdateFromClone(tskClone As CTask)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 set my values equal to the clone's values"]},{"entry":[{},"With tskClone"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"m_vId = .ID"]},{"entry":[{},"m_sName = .Name"]},{"entry":[{},"m_vPerformerId = .PerformerId"]},{"entry":[{},"Set m_prfPerformer = .Performer"]},{"entry":[{},":"]},{"entry":[{},"m_sDescription = .Description"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},"Exit Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Overview","BOs  occasionally are filled only half-full for performance reasons. This is done for queries involving multiple tables that return large data sets. Using half-baked BOs  can be an error prone process, so it is essential that the half-baking of BOs are carefully managed and contained.","In most applications, there are two kinds of windows\u2014search windows and edit\/detail windows. Search windows are the only windows that half-bake BOs . Generally, half-baking only is a problem when a detail window expecting a fully-baked BO receives a half-baked BO from a search window.","Approach","Detail windows refresh the BOs  they are passed by the search windows, regardless of whether or not they were already fully-baked. This addresses the problems associated with passing half-baked BOs and also helps ensure that the BO  is up-to-date.","This approach requires another type of method (besides Get, Add, Update, and Delete) on the CCA : a Refresh method. This method is very similar to a Get method (in fact, it calls the same method on the server component) but is unique because it refreshes the data in objects that are already created. The detail window's controller  calls the appropriate CCA  passing the BO  to be refreshed, and may assume that, when control returns from the CCA , the BO  will be up-to-date and fully-baked.","This is may not be necessary if two windows are very closely related. If the first window is the only window that ever opens the second, it is necessary for the second window to refresh the BO  passed by the first window if it knows that the BO  is baked fully enough to be used.","CCAs  are responsible for transforming data from row and columns in a recordset to business objects , and for executing calls to server components  on behalf of controllers .","Overview","After asking a component to retrieve data, the CCA  marshals the data returned by the component into business objects  that are used by the UI Controller .","Approach","The marshaling process is as follows:","CCAs  call GetRows on the recordset to get a copy of its data in a variant array in order to release the recordset as soon as possible. A method exist to coordinate the marshaling of each recordset returned by the component.","Only one recordset is coordinated in the marshaling process of a single method. A method exist to build a BO from a single row of a recordset. This method is called once for each row in the recordset by the marshaling coordination method.","Example",{"@attributes":{"id":"p-0187","num":"0210"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 Task CCA"]},{"entry":[{},"Public Function GetAllTasks( ) As Collection"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 call a helper method to retrieve tasks"]},{"entry":[{},"Dim vRows As Variant"]},{"entry":[{},"vRows = RetrieveAllTasks"]},{"entry":[{},"Dim i As Integer"]},{"entry":[{},"Dim task As CTask"]},{"entry":[{},"Dim colTasks As Collection"]},{"entry":[{},"Set colTasks = New Collection"]},{"entry":[{},"\u2018 vRows is dimmed as column, row. Loop til I run out of"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"rows."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For i = 0 To Ubound(vRows, 2)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 build BO using helper method"]},{"entry":[{},"Set task = BuildTaskFromRow(vRows, i)"]},{"entry":[{},"\u2018 add to collection with ID as the key"]},{"entry":[{},"colTasks.Add task, task.Id"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Next i"]},{"entry":[{},"Set MarshalTasks = colTasks"]},{"entry":[{},"Exit Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Function"]},{"entry":[{},"Private Function RetrieveAllTasks( ) As Variant"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 call my component and get a recordset full of all tasks"]},{"entry":[{},"Dim rs As ADOR.Recordset"]},{"entry":[{},"Set rs = tskComp.GetAllTasks( )"]},{"entry":[{},"\u2018 get data in variant array from the recordset"]},{"entry":[{},"GetAllTasks = rs.GetRows"]},{"entry":[{},"\u2018 release the recordset ASAP"]},{"entry":[{},"rs.Close"]},{"entry":[{},"Set rs = Nothing"]},{"entry":[{},"Exit Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Function"]},{"entry":[{},"Private Function BuildTaskFromRow(vRows As Variant,"]},{"entry":[{},"nCurrentRow As Integer, "]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Optional task As CTask) As"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"CTask"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 create task if it wasn't passed"]},{"entry":[{},"If task Is Nothing Then Set task = New CTask"]},{"entry":[{},"\u2018 fill task with data"]},{"entry":[{},"With task"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".Id = vRows(0, nCurrentRow)"]},{"entry":[{},".Name = vRows(1, nCurrentRow)"]},{"entry":[{},".PerformerId = vRows(2, nCurrentRow)"]},{"entry":[{},":"]},{"entry":[{},".Description = vRows(32, nCurrentRow)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},"Set BuildTaskFromRow = task"]},{"entry":[{},"Exit Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Function"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Overview","The logic to refresh BOs  is very similar to the logic to create them in the first place. A \u201crefresh\u201d method is very similar to a \u201cget\u201d method, but must use BOs  that already exist when carrying out the marshalling process.","Example",{"@attributes":{"id":"p-0189","num":"0212"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2018 Task CCA"},{"entry":"Public Sub RefreshTask(task As CTask)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 call a helper method to retrieve tasks"]},{"entry":[{},"Dim vRow As Variant"]},{"entry":[{},"vRow = RetrieveTaskWithId(task.Id)"]},{"entry":[{},"BuildTaskFromRow vRow, i, task"]},{"entry":[{},"Exit Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ErrorHandler:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Sub"},{"entry":"Private Function RetrieveTaskWithId(vId As Variant) As Variant"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 call my component and get a recordset full of all tasks"]},{"entry":[{},"Dim rs As ADOR.Recordset"]},{"entry":[{},"Set rs = tskComp.GetTaskWithId(vId)"]},{"entry":[{},"\u2018 get data in variant array from the recordset"]},{"entry":[{},"RetrieveTaskWithId = rs.GetRows"]},{"entry":[{},"\u2018 release the recordset ASAP"]},{"entry":[{},"rs.Close"]},{"entry":[{},"Set rs = Nothing"]},{"entry":[{},"Exit Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ErrorHandler:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Function"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Overview","Controllers  are responsible for creating and populating new BOs . To add a BO  to the database, the controller  must call the CCA , passing the business object  to be added. The CCA  calls the AsStruct method on the BO , and pass the BO structure down to the component to be saved. It then updates the BO  with the ID and timestamp generated by the server. Note the method on the CCA  just updates the BO .","Example",{"@attributes":{"id":"p-0191","num":"0214"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 Task CCA"]},{"entry":[{},"Public Sub AddTask(task As CTask)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 call component to add task passing a task structure"]},{"entry":[{},"Dim vIdAndTimestamp As Variant"]},{"entry":[{},"vIdAndTimestamp = tskComp.AddTask(task.AsStruct( ))"]},{"entry":[{},"\u2018 update ID and Timestamp on task"]},{"entry":[{},"task.Id = vIdAndTimestamp(0)"]},{"entry":[{},"task.TimeStamp = vIdAndTimestamp(1)"]},{"entry":[{},"Exit Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Overview","The update process is very similar to the add process. The only difference is that the server component only returns a timestamp, since the BO already has an ID.","Example",{"@attributes":{"id":"p-0193","num":"0216"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 Task CCA"]},{"entry":[{},"Public Sub UpdateTask(task As CTask)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 call component to update task passing a task structure"]},{"entry":[{},"Dim lTimeStamp As Long"]},{"entry":[{},"lTimeStamp = tskComp.AddTask(task.AsStruct( ))"]},{"entry":[{},"\u2018 update Timestamp on task"]},{"entry":[{},"task.TimeStamp = lTimeStamp"]},{"entry":[{},"Exit Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Deleting Overview","Like the add and the update methods, delete methods take a business object  as a parameter and do not have a return value. The delete method does not modify the object  it is deleting since that object will soon be discarded.","Example",{"@attributes":{"id":"p-0195","num":"0218"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 Task CCA"]},{"entry":[{},"Public Sub DeleteTask(task As CTask)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error Goto ErrorHandler"]},{"entry":[{},"\u2018 call component to update task passing a the ID and"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Timestamp"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tskComp.DeleteTask task.Id, task.TimeStamp"]},{"entry":[{},"Exit Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Server components  have two purposes: enforcing business rules and carrying out data access operations. They are designed to avoid duplicating logic between functions.","Enforcing Encapsulation","Each server component  encapsulates a single database table or a set of closely related database tables. As much as possible, server components  select or modify data from a single table. A component occasionally selects from a table that is \u201cowned\u201d or encapsulated by another component in order to use a join (for efficiency reasons). A server component  often collaborates with other server components to complete a business transaction.","Partioning Logic Between Multiple Classes","If the component becomes very large, it is split into more than one class. When this occurs, it is divided into two classes\u2014one for business rules and one for data access. The business rules class implements the component's interface and utilizes the data access class to modify data as needed.","Example",{"@attributes":{"id":"p-0199","num":"0222"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Private Function MarkTaskInError(vMsg As Variant, "}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"vTaskId As Variant, "]},{"entry":[{},"lTimestamp As Variant, "]},{"entry":[{},"sReason As String) As Long"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error GoTo ErrorHandler"]},{"entry":[{},"Const cmMethodName = \u201cMarkTaskInError\u201d"]},{"entry":[{},"\u2018 set the SQL statement"]},{"entry":[{},"Dim sSQL As String"]},{"entry":[{},"sSQL = cmSQLMarkTaskInError"]},{"entry":[{},"\u2018 get a new timestamp"]},{"entry":[{},"Dim lNewTimeStamp As Long"]},{"entry":[{},"lNewTimeStamp = GetTimeStamp( )"]},{"entry":[{},"\u2018 create and fill a collection of arguments to be merged"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"with"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 the SQL by the ExecuteQuery method"]},{"entry":[{},"Dim colArgs As CCollection"]},{"entry":[{},"Set colArgs = New CCollection"]},{"entry":[{},"With colArgs"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".Add lNewTimeStamp"]},{"entry":[{},".Add cmDBBooleanTrue"]},{"entry":[{},".Add sReason"]},{"entry":[{},".Add vTaskId"]},{"entry":[{},".Add lTimestamp"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},"\u2018 run the SQL and set my return value"]},{"entry":[{},"ExecuteQuery vMsg, cmUpdate, sSQL, colArguments: =colArgs"]},{"entry":[{},"MarkTaskInError = lNewTimeStamp"]},{"entry":[{},"\u2018 tell MTS I'm done"]},{"entry":[{},"GetObjectContext.SetComplete"]},{"entry":[{},"Exit Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ErrorHandler:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2018 do error handling here"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Function"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"With the exception of \u201cClass_Initialize\u201d, \u201cClass_Terminate\u201d, and methods called within an error handler, every function or subroutine has a user defined \u2018On Error GoTo\u2019 statement. The first line in each procedure is: On Error GoTo ErrorHandler. A line near the end of the procedure is given a label \u201cErrorHandler\u201d. (Note that because line labels in VB 5.0 have procedure scope, each procedure can have a line labeled \u201cErrorHandler\u201d). The ErrorHandler label is preceded by a Exit Sub or Exit Function statement to avoid executing the error handling code when there is no error.","Errors are handled differently based on the module's level within the application (i.e., user interface modules are responsible for displaying error messages to the user).","All modules take advantage of technical architecture to log messages. Client modules that already have a reference to the architecture call the Log Manager object directly. Because server modules do not usually have a reference to the architecture, they use the LogMessage( ) global function complied into each server component.","Any errors that are raised within a server component  are handled by the calling UI controller . This ensures that the user is appropriately notified of the error and that business errors are not translated to unhandled fatal errors.","All unexpected errors are handled by a general error handler function at the global Architecture module in order to always gracefully shut-down the application.","The error handler for each service module contains a Case statement to check for all anticipated errors. If the error is not a recoverable error, the logic to handle it is first tell MTS about the error by calling GetObjectContext.SetAbort( ). Next, the global LogMessage( ) function is called to log the short description intended for level one support personnel. Then the LogMessage( ) function is called a second time to log the detailed description of the error for upper level support personnel. Finally, the error is re-raised, so that the calling function will know the operation failed.","A default Case condition is coded to handle any unexpected errors. This logs the VB generated error then raises it. A code sample is provided below:","Following is an example of how error handling in the task component is implemented when an attempt is made to reassign a task to a performer that doesn't exist. Executing SQL to reassign a task to a non-existent performer generates a referential integrity violation error, which is trapped in this error handler:",{"@attributes":{"id":"p-0208","num":"0231"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2018Class Declarations"},{"entry":"Private Const cmClassName = \u201cCTaskComp\u201d"},{"entry":"Public Sub ReassignTask(...)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error GoTo ErrorHandler"]},{"entry":[{},"Private Const cmMethodName = \u201cReassignTask\u201d"]},{"entry":[{},"Private Const cmErrReassignTask = \u201cCould not reassign"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"task.\u201d"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},":"]},{"entry":[{},"\u2018 logic to reassign a task"]},{"entry":[{},":"]},{"entry":[{},"GetObjectContext.SetComplete"]},{"entry":[{},"Exit Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ErrorHandler:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sShortDescr As String"]},{"entry":[{},"sShortDescr = cmErrReassignTask"]},{"entry":[{},"\u2018 log short description as warning"]},{"entry":[{},"LogMessage vMsg, Err.Number, cmSeverityWarning,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"cmClassName, cmMethodName, sShortDescr"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sLongDescr As String"]},{"entry":[{},"Select Case Err.Number"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmErrRefIntegrityViolation"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GetObjectContext.SetAbort"]},{"entry":[{},"sLongDescr = \u201cReferential integrity violation \u2013"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"tried \u201d "}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"& \u201cto reassign task to a non-existant"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"performer.\u2003\u201d "}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"& \u201cAssociation ID: \u201d & sAssnId "]},{"entry":[{},"& \u201cAssociation Type: \u201d & sAssnType "]},{"entry":[{},"& \u201cOld Performer Id: \u201d & sOldPerformerId "]},{"entry":[{},"& \u201cNew Performer Id: \u201d & sNewPerformerId"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 log long description as severe"]},{"entry":[{},"LogMessage vMsg, Err.Number, cmSeveritySevere,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"cmClassName, cmMethodName, "}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"sLongDescr"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},":"]},{"entry":[{},"\u2018 more error handling"]},{"entry":[{},":"]},{"entry":[{},"Case Else"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 let architecture handle unanticipated error"]},{"entry":[{},"Dim nResumeCode As Integer"]},{"entry":[{},"nResumeCode = GeneralErrorHandler(vMsg, cmServer,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"cmClassName, cmMethodName)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Select Case nResumeCode"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmErrorResume"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Resume"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmErrorResumeNext"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Resume Next"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmErrorExit"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Exit Sub"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case Else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GetObjectContext.Abort"]},{"entry":[{},"Err.Raise Err.Number"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End Select"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End Select"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Sub"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"All CCI's, CCA's, Business Objects, and Forms raise any error that is generated. A code sample is provided below:",{"@attributes":{"id":"p-0210","num":"0233"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Sub SubName( )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error GoTo ErrorHandler"]},{"entry":[{},"<the procedure's code here>"]},{"entry":[{},". . . . . . . . ."]},{"entry":[{},"Exit Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The user interface controllers  handle any errors generated and passed up from the lower levels of the application. UI modules are responsible for handling whatever errors might be raised by server components  by displaying a message box to the user.","Any error generated in the UI's is also displayed to the user in a dialog box. Any error initiated on the client is logged using the LogMessage( ) procedure. Errors initiated on the server will already have been logged and therefore do not need to be logged again.","All unexpected errors are trapped by a general error method at the global architecture module. Depending on the value returned from this function, the controller may resume on the statement that triggered the error, resume on the next statement, call its Quiesce function to shut itself down, or call a Shutdown method on the application object to shutdown the entire application.","No errors are raised from this level of the application, since controllers handle all errors. A code sample of a controller error handler is provided below:",{"@attributes":{"id":"p-0215","num":"0238"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2018Class Constants"},{"entry":"Private Const cmClassName As String = \u201c<ComponentName>\u201d"},{"entry":"Sub SubName ( )"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error GoTo ErrorHandler"]},{"entry":[{},"Const cmMethodName As String = \u201c<MethodName>\u201d"]},{"entry":[{},":"]},{"entry":[{},":"]},{"entry":[{},"<the procedure's code here>"]},{"entry":[{},":"]},{"entry":[{},":"]},{"entry":[{},"Exit Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ErrorHandler:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Select Case CStr(Err.Number)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case . . . "]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018display the error to the user"]},{"entry":[{},"\u2018 perform any necessary logic"]},{"entry":[{},"Exit Sub (or Resume, or Resume Next)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},":"]},{"entry":[{},":"]},{"entry":[{},"Case Else"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim nResumeCode As Integer"]},{"entry":[{},"nResumeCode = GeneralErrorHandler (vMsg,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"cmController, cmClassName, cmMethodName)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Select Case CStr(nResumeCode)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Case cmErrorResume"]},{"entry":[{},"\u2003Resume"]},{"entry":[{},"Case cmErrorResumeNext"]},{"entry":[{},"\u2003Resume Next"]},{"entry":[{},"Case cmErrorExit"]},{"entry":[{},"\u2003Exit Sub"]},{"entry":[{},"Case cmErrorQuiesce"]},{"entry":[{},"\u2003Quiesce"]},{"entry":[{},"Case Else"]},{"entry":[{},"\u2003objApp.SHUTDOWN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End Select"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End Select"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Sub"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The CBAM application is constructed so that it can be localized for different languages and countries with a minimum effort or conversion.","The CBAM architecture provides support for certain localization features:","Localizable Resource Repository;","Flexible User Interface Design;","Date Format Localization; and","Exposure of Windows Operation System Localization Features.",{"@attributes":{"id":"p-0218","num":"0241"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Localization Approach Checklist"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Supported via","Supported via",{}]},{"entry":[{},"Architecture","Architecture","Best Practices and"]},{"entry":["Localization Feature","Service","API's","Assumptions*"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Language Code","\u2713",{},{}]},{"entry":"(Locale Identifier)"},{"entry":["Time Zones",{},{},"\u2713"]},{"entry":["Date\/Time",{},"\u2713"]},{"entry":["Name",{},{},"\u2713"]},{"entry":["Telephone Numbers",{},{},"\u2713"]},{"entry":["Functions to Avoid",{},{},"\u2713"]},{"entry":["Weights and Measures",{},{},"\u2713"]},{"entry":["Money",{},{},"\u2713"]},{"entry":["Addresses\/Address Hierarchies",{},{},"\u2713"]},{"entry":["Menus, Icons, Labels\/Identifiers",{},{},"\u2713"]},{"entry":"on Windows"},{"entry":["Messages\/Dialogs","\u2713"]},{"entry":["String Functions, Sort Order and","\u2713"]},{"entry":"String Comparison"},{"entry":["Code Tables","\u2713"]},{"entry":["Drop-Down Lists","\u2713"]},{"entry":["Form & Correspondence",{},{},"\u2713"]},{"entry":"Templates"},{"entry":["Online and Printed Documentation",{},{},"\u2713"]},{"entry":["Database (DB2)",{},{},"\u2713"]},{"entry":["3Party Controls",{},{},"\u2713"]},{"entry":["Miscellaneous",{},{},"\u2713"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"The CBAM application has an infrastructure to support multiple languages. The architecture acts as a centralized literals repository via its Codes Table Approach.","The Codes Tables have localization in mind. Each row in the codes table contains an associated language identifier. Via the language identifier, any given code can support values of any language.","Flexible user interface  and code makes customization easy. The  illustrates how different languages are repainted and recompiled. For example, both a English UI , and a French UI  are easily accommodated. This entails minimal effort because both UIs share the same core code base . Updates to the UIs are merely be a superficial change.","Generic graphics are used and overcrowding is avoided to create a user interface which is easy to localize.","Language localization settings affect the way dates are displayed on UI's (user interfaces). The default system display format is different for different Language\/Countries. For Example:\n\n","The present inventions UI's employ a number of third-party date controls including Sheridan Calendar Widgets (from Sheridan Software) which allow developers to set predefined input masks for dates (via the controls' Property Pages; the property in this case is \u201cMask\u201d).","Although the Mask property can be manipulated, the default setting is preferably accepted (the default setting for Mask is \u201c0\u2014System Default\u201d; it is set at design time). Accepting the default system settings eliminates the need to code for multiple locales (with some possible exceptions), does not interfere with intrinsic Visual Basic functions such as DateAdd, and allows dates to be formatted as strings for use in SQL.","The test program illustrated below shows how a date using the English (United Kingdom) default system date format is reformatted to a user-defined format (in this case, a string constant for use with DB2 SQL statements):",{"@attributes":{"id":"p-0227","num":"0252"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Const cmDB2DateAndTime = \u201cmm-dd-yyyy-h.mm.ss\u201d"]},{"entry":[{},"Private Sub cmdConvToDB2_Click( )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sDB2Date As String"]},{"entry":[{},"sDB2Date = Format$ (SSDateCombol.Date,"]},{"entry":[{},"cmDB2DateAndTime)"]},{"entry":[{},"txtDB2String.Text = sDB2Date"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The CBAM architecture exposes interface methods on the RegistryService object to access locale specific values which are set from the control panel.","The architecture exposes an API from the RegistryService object which allows access to all of the information available in the control panel. Shown below is the signature of the API:",{"@attributes":{"id":"p-0230","num":"0255"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"336pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"GetRegionalInfo (Info As RegionalInfo) As String"},{"entry":"Where RegionalInfo can be any of the values in the table below:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"336pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"RegionalInfo Values"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CmLanguageId","CmDTDateSeparator","cmDayLongNameMonday","cmMonthLongNameJan"]},{"entry":["CmLanguageLocalized","CmDTTimeSeparator","cmDayLongNameTuesday","cmMonthLongNameFeb"]},{"entry":["CmLanguageEnglish","CmDTShortDateFormat","cmDayLongNameWednesday","cmMonthLongNameMar"]},{"entry":["CmLanguageAbbr","CmLDTongDateFormat","cmDayLongNameThursday","cmMonthLongNameApr"]},{"entry":["CmLanguageNative","CmDTTimeFormat","cmDayLongNameFriday","cmMonthLongNameMay"]},{"entry":["CmCountryId","CmDTDateFormatOrdering","cmDayLongNameSaturday","cmMonthLongNameJun"]},{"entry":["CmCountryLocalized","CmDTLongDateOrdering","cmDayLongNameSunday","cmMonthLongNameJul"]},{"entry":["CmCountryEnglish","CmDTTimeFormatSpecifier","cmDayAbbrNameMonday","cmMonthLongNameAug"]},{"entry":["CmCountryAbbr","CmDTCenturyFormatSpecifier","cmDayAbbrNameTuesday","cmMonthLongNameSep"]},{"entry":["CmCountryNative","CmDTTimeWithLeadingZeros","cmDayAbbrNameWednesday","cmMonthLongNameOct"]},{"entry":["CmLanguageDefaultId","CmDTDayWithLeadingZeros","cmDayAbbrNameThursday","cmMonthLongNameNov"]},{"entry":["CmCountryDefaultId","CmDTMonthWithLeadingZeros","cmDayAbbrNameFriday","cmMonthLongNameDec"]},{"entry":[{},"CmDTDesignatorAM","cmDayAbbrNameSaturday","cmMonthAbbrNameJan"]},{"entry":[{},"CmDTDesignatorPM","cmDayAbbrNameSunday","cmMonthAbbrNameFeb"]},{"entry":[{},{},{},"cmMonthAbbrNameMar"]},{"entry":[{},{},{},"cmMonthAbbrNameApr"]},{"entry":[{},{},{},"cmMonthAbbrNameMay"]},{"entry":[{},{},{},"cmMonthAbbrNameJun"]},{"entry":[{},{},{},"cmMonthAbbrNameJul"]},{"entry":[{},{},{},"cmMonthAbbrNameAug"]},{"entry":[{},{},{},"cmMonthAbbrNameSep"]},{"entry":[{},{},{},"cmMonthAbbrNameOct"]},{"entry":[{},{},{},"cmMonthAbbrNameNov"]},{"entry":[{},{},{},"cmMonthAbbrNameDec"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0231","num":"0256"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Private Sub Command1_Click( )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"MsgBox \u201cThis is the language id for English: \u201d & "]},{"entry":[{},"GetRegionalInfo (cmLanguageId)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The Logical Unit of Work (LUW) pattern enables separation of concern between UI Controllers  and business logic.","Overview","Normally, when a user opens a window, makes changes, and clicks OK or Save, a server component  is called to execute a transaction that will save the user's changes to the database. Because of this, it can be said that the window defines the boundary of the transaction, since the transaction is committed when the window closes.","The LUW pattern is useful when database transactions span windows. For example, a user begins editing data on one window and then, without saving, opens another window and begins editing data on that window, the save process involves multiple windows. Neither window controller  can manage the saving process, since data from both windows must be saved as an part of an indivisible unit of work. Instead, a LUW object is introduced to manage the saving process.","The LUW acts as a sort of \u201cshopping bag\u201d. When a controller  modifies a business object , it puts it in the bag to be paid for (saved) later. It might give the bag to another controller  to finish the shopping (modify more objects), and then to a third controller who pays (asks the LUW to initiate the save).","Approach","Controllers  may have different levels of LUW \u201cawareness\u201d:","Requires New: always creates a new LUW;","Requires: requires an LUW, and creates a new LUW only if one is not passed by the calling controller;","Requires Existing: requires an LUW, but does not create a new LUW if one is not passed by the calling controller. Raises an error if no LUW is passed; and","Not Supported: is not capable of using an LUW.","Controllers  that always require a new LUW create that LUW in their ArchInitClass function during initialization. They may choose whether or not to involve other windows in their LUW. If it is desirable for another window to be involved in an existing LUW, the controller  that owns the LUW passes a reference to that LUW when it calls the App Object  to open the second window. Controllers  that require an LUW or require an existing LUW accept the LUW as a parameter in the ArchInitClass function.","LUWs contain all the necessary logic to persist their \u201ccontents\u201d\u2014the modified BOs . They handle calling methods on the CCA  and updating the BOs  with new IDs and\/or timestamps.","Following is an overview of the architecture object model, including a description of each method and the parameters it accepts. Additional sections address the concepts behind specific areas (code caching, message logging, and data access) in more detail.",{"@attributes":{"id":"p-0240","num":"0265"},"figref":"FIG. 5","b":"200"},"The following are APIs located on the Arch Object  which return either a retrieved or created instance of an object which implements the following interfaces:","CodesMan( ) ;","TextMan( ) ;","IdMan( ) ;","RegMan( ) ;","LogMan( ) ;","ErrMan( ) ;","UserMan( ) ; and","SecurityMan( ) .","AsMsgStruct( )","This method on the Arch Object returns a variant structure to pass along a remote message.",{"@attributes":{"id":"p-0243","num":"0268"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Syntax:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function AsMsgStruct( ) As Variant"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Example:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim vMsg As Variant"]},{"entry":[{},"vMsg = objArch.AsMsgStruct"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following are APIs located on the interface of the Arch Object  named CodesMan :","CheckCacheFreshness( );","FillControl(ctlControl, ncategory, nFillType, [nCodeStatus], [colAssignedCodes]);","FilterCodes(colAllCodes, nCodeStatus);","GetCategoryCodes(nCategory);","GetCodeObject(nCategory, sCode);","GetResourceString(lStringId);","GetServerDate( );","RefreshCache( );","RemoveValidDates(sCode, colPassedInAssignedCodes); and","SetServerDate(dtServerDate).","CheckCacheFreshness( )","Checks whether the cache has expired, if so refresh.",{"@attributes":{"id":"p-0246","num":"0271"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Syntax:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Sub CheckCacheFreshness( )"]},{"entry":[{},"End Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Example:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CheckCacheFreshness"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"This API is used to fill listboxes or comboboxes with values from a list of CodeDecodes. Returns a collection for subsequent lookups to Code objects used to fill controls.",{"@attributes":{"id":"p-0248","num":"0273"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function FillControl (ctlControl As Object, nCategory"]},{"entry":[{},"As CodeDecodeCats, nFillType As CodeDecodeLengths,"]},{"entry":[{},"Optional nCodeStatus As CodeDecodeFilters ="]},{"entry":[{},"cmValidCodes, Optional colAssignedCodes As"]},{"entry":[{},"CCollection) As CCollection"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Parameters:"},{"entry":"ctlControl: A reference to a passed in listbox or combobox."},{"entry":"nCategory: The integer based constant which classified these"},{"entry":"CodeDecodes from others. Several of the valid constants include:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"cmCatTaskType = 1"]},{"entry":[{},"cmCatSource"]},{"entry":[{},"cmCatTaskStatus"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"nFillType: The attribute of the CodeDecode which you want to fill."},{"entry":"Several of the valid values include:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"cmCode"]},{"entry":[{},"cmShortDecode"]},{"entry":[{},"cmLongDecode"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"nCodeStatus: Optional value which filters the Code Decodes according to"},{"entry":"their Effective and Expiration dates. Several of the valid constants include:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"cmAllCodes","Pending + Valid + Expired Codes"]},{"entry":[{},"cmPendingCodes","Codes whose effective date is greater than the"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"current date"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"cmValidCodes","Not Pending or Expired codes"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"colAssignedCodes: Used when filling a control which should fill and"},{"entry":"include assigned values."},{"entry":"Example:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018Declare an instance variable for States collection on object"]},{"entry":[{},"Private colStates As CCollection"]},{"entry":[{},"\u2018Call FillControl1 API, and set local collection inst var to collection"]},{"entry":[{},"of codes which were used to fill the control1. This collection will be"]},{"entry":[{},"used for subsequent lookups."]},{"entry":[{},"Set colStates = objArch.CodesMan.FillControl"]},{"entry":[{},"(frmCurrentForm.cboStates, cmCatStates, cmLongDecode)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Returns a collection of code\/decodes that are filtered using their effective and expiration dates based on which nCodeStatus is passed from the fillcontrol method.",{"@attributes":{"id":"p-0250","num":"0275"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Function FilterCodes(colAllCodes As CCollection,"]},{"entry":[{},"nCodeStatus As CodeDecodeFilters) As CCollection"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"colAllCodes:"]},{"entry":[{},"nCodeStatus:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Set colFilteredCodes = FilterCodes(colCodes, nCodeStatus)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetCategoryCodes( )"},{"entry":"Returns a collection of CCode objects given a valid category"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetCategoryCodes(nCategory As CodeDecodeCats)"]},{"entry":[{},"As CCollection"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"nCategory:"]},{"entry":[{},"The integer based constant which classified these CodeDecodes from"]},{"entry":[{},"others."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim colMyStates As CCollection"]},{"entry":[{},"Set colMyStates ="]},{"entry":[{},"objArch.CodesMan.GetCategoryCodes (cmCatStates)"]},{"entry":[{},"\u2018Below shows an example of"]},{"entry":[{},"looking up the Code value for the currently"]},{"entry":[{},"selected state."]},{"entry":[{},"With frmCurrentForm.cboStates"]},{"entry":[{},"If .ListIndex > \u22121 Then"]},{"entry":[{},"Dim objCode As CCode"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set objCode = colStates(.ItemData (.ListIndex))"]},{"entry":[{},"sStateCode = objCode.Code"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End If"]},{"entry":[{},"End With"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetCode Object( )"},{"entry":"Returns a valid CCode object given a specific category and code."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetCodeObject(nCategory As CodeDecodeCats,"]},{"entry":[{},"sCode As String) As CCode"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"nCategory: The integer based constant which classified these"]},{"entry":[{},"CodeDecodes from others."]},{"entry":[{},"sCode: A string indicating the Code attribute of the CodeDecode"]},{"entry":[{},"object."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"frmCurrentForm.1b1State ="]},{"entry":[{},"objArch.CodesMan.GetCodeObject(cmGetStates,"]},{"entry":[{},"\u201cIL\u201d).LongDecode"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetResourceString( )"},{"entry":"Returns a string from the resource file given a specific string ID."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Function GetResourceString(1StringId As Long) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"1StringId: The id associated with the string in the resource file."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"sMsg = arch.CodesMan.GetResourceString(CLng(vMessage))"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetServerDate( )"},{"entry":"Returns the date from the server."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Function GetServerDate( ) As Date"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"SetServerDate CCA.GetServerDate"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"RefreshCache( )"},{"entry":"Refreshes all of the code obhjects in the cache."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Sub RefreshCache( )"]},{"entry":[{},"End Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"m_Cache.RefreshCache"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Removes all valid codes from the passed in assigned codes collection, which is used to see which codes are assigned and not valid.",{"@attributes":{"id":"p-0252","num":"0277"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Sub RemoveValidCodes(sCode As String,"]},{"entry":[{},"colPassedInAssignedCodes As CCollection)"]},{"entry":[{},"End Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"sCode: Name of code"]},{"entry":[{},"colPassedInAssignedCodes: Codes already in use."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Example:"},{"entry":"RemoveValidCodes codCode.Code, colPassedInAssignedCodes"},{"entry":"SetServerDate( )"},{"entry":"Sets the server date."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Sub SetServerDate(dtServerDate As Date)"]},{"entry":[{},"End Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"dtServerDate: Date of Server."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SetServerDate CCA.GetServerDate"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following are APIs located on the interface of the Arch Object  named TextMan .","PairUpAposts( );","PairUpAmps( ); and","MergeParms( ).","PairUpAposts ( )","Pairs up apostrophes in the passed string.",{"@attributes":{"id":"p-0255","num":"0280"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function PairUpAposts(sOriginalString As String) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"sOriginalString: string passed in by the caller"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sString As String"]},{"entry":[{},"sString = objArch.TextMan.PairUpAposts(\u201cThis is Monika's string\u201d)"]},{"entry":[{},"\u2018expected return: sString = \u201cThis is Monika''s string\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Pair UpAmps( )"},{"entry":"Pairs up ampersands in the passed string."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function PairUpAmps(sOriginalString As String) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"sOriginalString: string passed in by the caller"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sString As String"]},{"entry":[{},"sString = objArch.TextMan.PairUpAmps(\u201cForms&Corr\u201d)"]},{"entry":[{},"\u2018expected return: sString = \u201cForms&&Corr\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"MergeParms( )"},{"entry":"Merges string with the passed parameters collection."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function MergeParms(sString As String, colParms As"]},{"entry":[{},"CCollection) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"sOriginalString: string passed in by the caller"]},{"entry":[{},"colParms As Ccollection:"]},{"entry":[{},"collection of the parameters passed in by the caller"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sString As String"]},{"entry":[{},"sString = objArch.TextMan.MergeParms (sString, colParms)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following are APIs located on the interface of the Arch Object  named IdMan :","GetGUIDO;","GetSequenceID( );","GetTimeStamp( );","GetTrackingNbr( ); and","GetUniqueId( ).","GetGUID ( )",{"@attributes":{"id":"p-0257","num":"0282"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetGUID( )"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim vNewGuid As Variant"]},{"entry":[{},"vNewGuid = objArch.IdMan.GetGUID"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetSequenceId( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetSequenceId(sTemplateType As CounterName)"]},{"entry":[{},"As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"sTemplateType: The string specifying the template requesting a"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"sequence Id (i.e. cmCountFC = Forms & Corr)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Example:"},{"entry":"frmCurrentForm.txtTemplateNumber ="},{"entry":"objArch.IdMan.GetSequenceId(cmCountFC)"},{"entry":"GetTimeStamp( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetTimeStamp( )"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim nNewTimeStamp As Long"]},{"entry":[{},"nNewTimeStamp = objArch.IdMan.GetTimeStamp"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetTrackingNbr( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetTrackingNbr( )"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set objTechArch = New CTechArch"]},{"entry":[{},"sUniqueTrackNum = objTechArch.IdMan.GetTrackingNbr"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetUniqueId( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetUniqueId( )"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim vUid As Variant"]},{"entry":[{},"vNewUid = objArch.IdMar.GetUniqueId"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following are APIs located on the interface of the Arch Object  named RegMan :","GetCacheLife( );","GetClientDSN( );","GetComputerName( );","GetDefaultAndValidate( );","GetFCArchiveDirectory( );","GetFCDistributionDirectory( );","GetFCMasterDirectory( );","GetFCUserDirectory( );","GetFCWorkingDirectory( );","GetHelpPath( );","GetLocalInfo( );","GetLogLevel( );","GetRegionalInfo( );","GetRegValue( );","GetServerDSN( );","GetSetting( );","GetTimerLogLevel( );","GetTimerLogPath( ); and","GetUseLocalCodes( ).",{"@attributes":{"id":"p-0259","num":"0284"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetCacheLife( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetCacheLife( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetCacheLife"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetClientDSN( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetClientDSN( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetClientDSN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetComputerName( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetComputerName( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetComputerName"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetDefaultAndValidate( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Function GetDefaultAndValidate(sKey As String) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"sKey: The key within the registry of which the user is requesting"]},{"entry":[{},"(i.e.: Help Path)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sDefault As String"]},{"entry":[{},"sDefault = objArch.RegMan.GetDefaultAndValidate (sKey)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetFCArchiveDirectory( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetFCArchiveDirectory( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetFCArchiveDirectory"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetFCDistributionDirectory( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetFCDistributionDirectory( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetFCDistributionDirectory"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetFCMasterDirectory( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetFCMasterDirectory( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetFCMasterDirectory"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetFCUserDirectory( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetFCUserDirectory( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetFCUserDirectory"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetFCWorkingDirectory( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetFCWorkingDirectory( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetFCWorkingDirectory"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetHelpPath( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetHelpPath( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetHelpPath"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetLocalInfo( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetLocalInfo( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetLocalInfo"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetLogLevel( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetLogLevel( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetLogLevel"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetRegionalInfo( )"},{"entry":"Allows access to all locale specific values which are set from control"},{"entry":"panel."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetRegionalInfo(Info As RegionalInfo) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Info: string containing the regional information. Several of the valid"]},{"entry":[{},"constants include:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"cmLanguageId = &H1","language id"]},{"entry":[{},"cmLanguageLocalized = &H2","localized name of language"]},{"entry":[{},"cmLanguageEnglish = &H1001","English name of language"]},{"entry":[{},"cmLanguageAbbr = &H3","abbreviated language name"]},{"entry":[{},"cmLanguageNative = &H4","native name of language"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetRegionalInfo"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetRegValue( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetRegValue( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetRegValue"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetServerDSN( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetServerDSN( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetServerDSN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetSetting( )"},{"entry":"Get setting from the registry."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetSetting (sKey As String) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"sKey: The key within the registry of which the user is requesting (i.e.:"]},{"entry":[{},"Help Path)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"GetHelpPath = GetSetting (cmRegHelpPathKey)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetTimerLogLevel( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetTimerLogLevel( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetTimerLogLevel"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetTimerLogPath( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetTimerLogPath( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetTimerLogPath"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetUseLocalCodes( )"},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetUseLocalCodes( ) As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim s As String"]},{"entry":[{},"s = objArch.RegMan.GetUseLocalCodes"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"LPSTRToVBString( )"},{"entry":"Extracts a MB string from a buffer containing a null terminated string."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Function LPSTRToVBString$ (ByVal s$)"]},{"entry":[{},"End Function"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following are APIs located on the interface of the Arch Object  named LogMan :","LogMessage( );","WriteToDatabase( ); and","WriteToLocalLog( ).","LogMessage( )","Used to log the message. This function will determine where the message should be logged, if at all, based on its severity and the vMsg's log level.",{"@attributes":{"id":"p-0262","num":"0287"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Public Sub LogMessage (vMsg As Variant, "]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1Severity As Long, "]},{"entry":[{},"sClassName As String, "]},{"entry":[{},"sMethodName As String, "]},{"entry":[{},"sVersion As String, "]},{"entry":[{},"1ErrorNum As Long, "]},{"entry":[{},"Optional sText As String = vbNullString)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End Sub"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"vMsg: the standard architecture massage"]},{"entry":[{},"1Eeverity: the severity of the message"]},{"entry":[{},"sClassName: the nane of the class logging the message"]},{"entry":[{},"sMethodName: the nane of the method logging the message"]},{"entry":[{},"sVersion: the version of the binary file (EXE or DLL) that contains"]},{"entry":[{},"the method logging message"]},{"entry":[{},"1ErrorNum: the number of the current error"]},{"entry":[{},"sText: an optional parameter containing the text of the message. If"]},{"entry":[{},"omitted, the text will be looked up in a string file or the generic VS"]},{"entry":[{},"error description will be used"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If Err.Number <> 0 Then"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"' log message"]},{"entry":[{},"Arch.LogMan.LogMessage (vMsg, cmSeverityFatal,"]},{"entry":[{},"\u201cCOrganizationCTLR\u201d,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u201cInitForm\u201d,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GetVersion( ), Err.Number,"]},{"entry":[{},"Err.Description)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"' re-raise the error"]},{"entry":[{},"Err.Raise Err.Number"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End If"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Used to log the message to the database on the server using the CLoggingComp. This function returns the TrackingId that is generated by the CLoggingObject.",{"@attributes":{"id":"p-0264","num":"0289"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Sub WriteToDatabase(vMsg As Variant, msgToLog As"]},{"entry":[{},"CMessage)"]},{"entry":[{},"End Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"vMsg: the standard architecture message"]},{"entry":[{},"msgToLog: a parameter containing the text of the message."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If msgToLog. IsLoggabJeAtLevel (m_lLocalLogLevel) Then"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"WriteToDatabase vMsg, msgToLog"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End If"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Used to log the message to either a flat file, in the case of Windows 95, or the NT Event Log, in the case of Windows NT.",{"@attributes":{"id":"p-0266","num":"0291"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Syntax:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Sub WriteToLocalLog(msgToLog As CMessage)"]},{"entry":[{},"End Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Parameters:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"msgToLog: a parameter containing the text of the message."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Example:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ErrorHandler:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"WriteToLocalLog msgToLog"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following are APIs located on the interface of the Arch Object  named ErrMan :","HandleError( );","RaiseOriginal( );","ResetError( ); and","Update( ).","HandleError( )","This method is passed through to the general error handler in MArch.bas",{"@attributes":{"id":"p-0269","num":"0294"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function HandleError (vMsg As Variant, nCompType As"]},{"entry":[{},"CompType, sClassName"]},{"entry":[{},"As String, sMethodName As String) As ErrResumeCodes"]},{"entry":[{},"End Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"vMsg:","General Architecture Information"]},{"entry":[{},"nCompType:","Contains tier information (Client or Server)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"sClassName:","Class which raised the error."]},{"entry":[{},"sMethodName:","Method which raised the error."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Raise Original( )"},{"entry":"This method is used to Reset the error object and raise."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Sub RaiseOriginal( )"]},{"entry":[{},"End Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"objArch.ErrMan.RaiseOriginal"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"ResetError( )"},{"entry":"This method is used to reset attributes."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Sub ResetError( )"]},{"entry":[{},"End Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"objArch.ErrMan.ResetError"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Update( )"},{"entry":"This method is used to update attributes to the values of VBs global Error"},{"entry":"object."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Sub Update( )"]},{"entry":[{},"End Sub"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"objArch.ErrMan.Update"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following are APIs located on the interface of the Arch Object  named UserMan .","UserId;","EmployeeId;","EmployeeName;","EmployeeFirstName;","EmployeeLastName;","EmployeeMiddleInitial;","GetAuthorizedEmployees;","IsSuperOf( );","IsRelativeOf( ); and","IsInRole( ).","UserId( )",{"@attributes":{"id":"p-0271","num":"0296"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Syntax:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Property Get UserId( ) As String"]},{"entry":[{},"End Property"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Example:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sNewUserId As String"]},{"entry":[{},"sNewUserId = objArch.UserMan.UserId"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EmployeeId( )"]},{"entry":[{},"Syntax:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Property Get EnployeeId( ) As String"]},{"entry":[{},"End Property"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Example:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sNewEmployeeId As String"]},{"entry":[{},"sNewEmployeeId = objArch.UserMan.EmployeeId"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EmployeeName( )"]},{"entry":[{},"Syntax:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Property Get EmployeeName( ) As String"]},{"entry":[{},"End Property"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Example:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sName As String"]},{"entry":[{},"sName = objArch.UserMan.EmployeeName"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EmployeeFirstName( )"]},{"entry":[{},"Syntax:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Property Get EmployeeFirstName( ) As String"]},{"entry":[{},"End Property"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Example:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sFName As String"]},{"entry":[{},"sFName = objArch.UserMan.EmployeeFirstName"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EmployeeLastName( )"]},{"entry":[{},"Syntax:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Property Get ErnployeeLastName( ) As String"]},{"entry":[{},"End Property"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Example:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sLName As String"]},{"entry":[{},"sLName = objArch.UserMan.EmployeeLastName"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"EmployeeMiddleInitial( )"]},{"entry":[{},"Syntax:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Property Get EmployeeMiddleInitial( ) As String"]},{"entry":[{},"End Property"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Example:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sMI As String"]},{"entry":[{},"sMI = objArch.UserMan.EmployeeMiddleInitial"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Creates a collection of user's supervisees from the dictionary and returns GetAuthorizedEmployees\u2014collection of authorized employees",{"@attributes":{"id":"p-0273","num":"0298"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetAuthorizedEmployees( ) As CCollection"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim colAuth As Collection"]},{"entry":[{},"colAuth = objArch.UserMan.GetAuthorizedEmployees"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"IsSuperOf( )"},{"entry":"Checks if the current user is supervisor of the passed in user."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function IsSuperOf(sEmpId As String) As Boolean"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"sEmpId: string containing Employee ID number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim bIsSuperOfMonika As Boolean"]},{"entry":[{},"bIsSuperOfMonika = objArch.UserMan.IsSuperOf(\u201cTS012345\u201d)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"IsRelativeOf( )"},{"entry":"Checks if the passed in user is relative of the current user."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function IsRelativeOf(sEmpId As String) As Boolean"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"sEmpId: string containing Employee ID number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim bIsRelativeOfMonika As Booleen"]},{"entry":[{},"bIsRelativeOfMonika = objArh.UserMan.IsRelativeOf(\u201cTS012345\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"IsInRole( )"},{"entry":"Checks to see if the current user is in a certain role."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function IsInRole(sRole As String) As Boolean"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"sRole: string containing role"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim bIsInRoleTaskLibrarian As Boolean"]},{"entry":[{},"bIsInRoleTaskLibrarian = objArch.UserMan.IsInRole (\u201cTA\u201d)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The following APIs are located on the interface of the Arch Object  named SecurityMan .","EvalClaimRules;","EvalFileNoteRules;","EvalFormsCorrRules;","EvalOrgRules;","EvalRunApplicationRules;","EvalRunEventProcRules;","EvalTaskTemplateRules;","EvalUserProfilesRules;","IsOperAuthorized;","GetUserId; and","OverrideUser.","EvalClaimRules( )","This API references business rules for Claim security checking and returns a boolean if rules are met.",{"@attributes":{"id":"p-0276","num":"0301"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Function EvalClaimRules(1BasicOp As cmBasicOperations,"]},{"entry":[{},"vContextData As Variant) As Boolean"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1BasicOp: a basic operation the current user is wishing to perform"]},{"entry":[{},"(i.e. Delete)"]},{"entry":[{},"vContextData: a variant array holding relevant business objects or"]},{"entry":[{},"other information."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Select Case 1Operation"]},{"entry":[{},"Case cmWorkOnClaim"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IsOperAuthorized =","EvalClamRules(cmVieW, vContextData)"]},{"entry":[{},{},"And "]},{"entry":[{},{},"EvalClaimRules (cmEdit, vContextData)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"This API references business rules for FileNote security checking and returns a boolean if rules are met.",{"@attributes":{"id":"p-0278","num":"0303"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Function EvalFileNoteRules(1BasicOp As"]},{"entry":[{},"cmBasicOperations, vContextData"]},{"entry":[{},"As Variant) As Boolean"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1BasicOp: a basic operation the current user is wishing to perform"]},{"entry":[{},"(i.e. Delete)"]},{"entry":[{},"vContextData: a variant array holding relevant business objects or"]},{"entry":[{},"other information."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Select Case 1Operation"]},{"entry":[{},"Case cmDeleteFileNote"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IsOperAuthorized = EvalFileNoteRules (cmDelete,"]},{"entry":[{},"vContextData)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"This API references business rules for Forms and Corr security checking and returns a boolean if rules are met.",{"@attributes":{"id":"p-0280","num":"0305"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Function EvalFormsCorrRules(1BasicOp As"]},{"entry":[{},"cmBasicOperations) As Boolean"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1BasicOp: a basic operation the current user is wishing to perform"]},{"entry":[{},"(i.e. Delete)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Select Case 1Operation"]},{"entry":[{},"Case cmMaintainFormsCorr"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IsOperAuthorized =","EvalFormsCorrRules(cmEdit) And "]},{"entry":[{},{},"EvalFormsCorrRules(cmDelete) And "]},{"entry":[{},{},"EvalFormsCorrRules(cmAdd)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"This API references business rules for Event Processor security checking and returns a boolean if rules are met.",{"@attributes":{"id":"p-0282","num":"0307"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Function EvalOrgRules(lBasicOp As cmBasicOperations)"]},{"entry":[{},"As Boolean"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lBasicOp: a basic operation the current user is wishing to perform"]},{"entry":[{},"(i.e. Delete)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Select Case lOperation"]},{"entry":[{},"Case cmMaintainOrg"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IsOperAuthorized =","EvalOrgRules(cmAdd) And "]},{"entry":[{},{},"EvalOrgRules(cmEdit) And "]},{"entry":[{},{},"EvalOrgRules(cmDelete)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"This API references business rules for running the application and returns a boolean if rules are met.",{"@attributes":{"id":"p-0284","num":"0309"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Function EvalRunApplicationRules(lBasicOp As"]},{"entry":[{},"cmBasicOperations) As Boolean"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lBasicOp: a basic operation the current user is wishing to perform"]},{"entry":[{},"(i.e. Delete)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Select Case lOperation"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmRunApplication"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IsOperAuthorized = EvalRunApplicationRules(cmExecute)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"This API references business rules for Event Processor security checking and returns a boolean if rules are met.",{"@attributes":{"id":"p-0286","num":"0311"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Function EvalRunEventProcRules(lBasicOp As"]},{"entry":[{},"cmBasicOperations) As Boolean"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lBasicOp: a basic operation the current user is wishing to perform"]},{"entry":[{},"(i.e. Delete)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Select Case lOperation"]},{"entry":[{},"Case cmRunEventProcessor"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IsOperAuthorized = EvalRunEventProcRules(cmExecute)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"This API references business rules for Task Template security checking and returns a boolean if rules are met.",{"@attributes":{"id":"p-0288","num":"0313"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Function EvalTaskTemplateRules(lBasicOp As"]},{"entry":[{},"cmBasicOperations) As Boolean"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lBasicOp: a basic operation the current user is wishing to perform"]},{"entry":[{},"(i.e. Delete)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Select Case lOperation"]},{"entry":[{},"Case cmMaintainTaskLibrary"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IsOperAuthorized =","EvalTaskTemplateRules(cmAdd) And "]},{"entry":[{},{},"EvalTaskTemplateRules(cmEdit) And "]},{"entry":[{},{},"EvalTaskTemplateRules(cmDelete)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"This API references business rules for Task Template security checking and returns a boolean if rules are met.",{"@attributes":{"id":"p-0290","num":"0315"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Function EvalUserProfileRules(lBasicOp As"]},{"entry":[{},"cmBasicOperations, vContextData As Variant) As Boolean"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"lBasicOp: a basic operation the current user is wishing to perform"]},{"entry":[{},"(i.e. Delete)"]},{"entry":[{},"vContextData: a variant array holding relevant business objects or"]},{"entry":[{},"other information."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Select Case lOperation"]},{"entry":[{},"Case cmIsRelativeOf"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IsOperAuthorized =","EvalUserProfileRules(cmView,"]},{"entry":[{},{},"vContextData) And "]},{"entry":[{},{},"EvalUserProfileRules(cmAdd,)"]},{"entry":[{},{},"vContextData) And "]},{"entry":[{},{},"EvalUserProfileRules(cmEdit,)"]},{"entry":[{},{},"vContextData) And "]},{"entry":[{},{},"EvalUserProfileRules(cmDelete,"]},{"entry":[{},{},"vContextData)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GetUserId( )"},{"entry":"Returns the login name\/user id of the current user."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function GetUserId() As String"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sUserId as String"]},{"entry":[{},"sUserId = GetUserId"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"This API references business rules and returns a boolean determining whether the user has security privileges to perform a certain operation.",{"@attributes":{"id":"p-0292","num":"0317"},"tables":{"@attributes":{"id":"TABLE-US-00050","num":"00050"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Syntax:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Function IsOperAuthorized(vMsg, as variant, nOperation as"]},{"entry":[{},"cmOperations, vContext As Variant) As Boolean"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"vMsg: the standard architecture message"]},{"entry":[{},"nOperation: an enumeration containing name of operation to be"]},{"entry":[{},"checked."]},{"entry":[{},"vContext: a variant array holding relevant business objects or"]},{"entry":[{},"other"]},{"entry":[{},"information."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim bCanIDoThis As Boolean"]},{"entry":[{},"bCanIDoThis = objArch.SecurityMan.IsOperAuthorized(vMsg,"]},{"entry":[{},"aOperationName, vContext)"]},{"entry":[{},"TlbEditIcon.Enabled = bCanIDoThis"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Override User()"},{"entry":"Re-initializes for a different user."},{"entry":"Syntax:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Public Sub OverrideUser(Optional sUserId As String, Optional"]},{"entry":[{},"dictRoles As CDictionary, Optional dictSubs As CDictionary)"]},{"entry":[{},"End Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parameters:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"sUserId:"]},{"entry":[{},"dictRoles:"]},{"entry":[{},"dictSubs:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Dim x As New CTechArch"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"x.SecurityMan.OverrideUser \u201cEveryone\u201d, New CDictionary,"]},{"entry":[{},"New CDictionary"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Separate tables (CodesDecodes) are Created for storing the static values.","Only the references to codes\/decodes are stored in business tables (e.g., Task) which utilize these values. This minimizes the size of the business tables, since storing a Code value takes much less storage space than its corresponding Decode value (e.g., For State, \u201cAL\u201d is stored in each table row instead of the string \u201cAlabama\u201d).","CodeDecodes are stored locally on the client workstation in a local DBMS. On Application startup, a procedure to ensure the local tables are in sync with the central DBMS is performed.","The present invention's Code Decode Infrastructure  Approach outlines the method of physically modeling codes tables. The model allows codes to be extended with no impact to the physical data model and\/or application and architecture.  shows the physical layout of CodeDecode tables according to one embodiment of the present invention.","Infrastructure","The physical model of the CodeDecode infrastructure  does the following:","Supports relational functionality between CodeDecode objects;","Supports extensibility without modification to the DBMS or Application Architecture;","Provides a consistent approach for accessing all CodeDecode elements; and","Is easily maintainable.","These generic tables are able to handle new categories, and modification of relationships without a need to change the DBMS or CodeDecode Application Architecture.","Benefits of this model are extensibility and maintainability. This model allows for the modifications of code categories without any impact to the DBMS or the Application Architecture code. This model also requires fewer tables to maintain. In addition, only one method is necessary to access CodeDecodes.","Table Relationships and Field Descriptions:",{"@attributes":{"id":"p-0300","num":"0000"},"ul":{"@attributes":{"id":"ul0013","list-style":"none"},"li":{"@attributes":{"id":"ul0013-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0014","list-style":"none"},"li":["(pk) indicates a Primary Key\n\nCode_Category \n","C_Category (pk): The category number for a group of codes","C_Cache (currently not utilized): Can indicate whether the category should be cached in memory on the client machine","T_Category: A text description of the category (e.g., Application Task Types, Claim Status, Days of Week)","D_Last_Update: The date any data within the given category was last updated; this field is used in determining whether to update a category or categories on the local data base"]}}}},"Relationships\n\n","Relationships\n\n","Relationships\n\n","Enabling Localization","Codes have support for multiple languages. The key to this feature is storing a language identifier along with each CodeDecode value. This Language field makes up a part of the compound key of the Code_Decode table. Each Code API lookup includes a system level call to retrieve the Language system variable. This value is used as part of the call to retrieve the values given the correct language.","Maintaining Language Localization Setting","A link to the Language system environment variable to the language keys is stored on each CodeDecode. This value is modified at any time by the user simply by editing the regional settings User Interface available in the Microsoft Windows Control Panel folder.","Handling Time Sensitive Codes becomes an issue when filling controls with a list of values. One objective is to only allow the user to view and select appropriate entries. The challenge lies in being able to expire Codes without adversely affecting the application. To achieve this, consideration is given to how each UI will decide which values are appropriate to show to the user given its current mode.","The three most common UI modes that affect time sensitive codes are Add Mode, View Mode, and Edit Mode.","Add Mode","In Add Mode, typically only valid codes are displayed to the user as selection options. Note that the constant, cmValidCodes, is the default and will still work the same even when this optional parameter is omitted.\n\n","In View Mode, the user is typically viewing results of historical data without direct ability to edit. Editing selected historical data launches another UI. Given this the controls are filled with valid and expired codes, or in other words, non-pending codes.\n\n","In Edit Mode, changes are allowed to valid codes but also expired codes are displayed if already assigned to the entity.\n\n","The Local CodeDecode tables are kept in sync with central storage of CodeDecodes. The architecture is responsible for making a check to see if there are any new or updated code decodes from the server on a regular basis. The architecture also, upon detection of new or modified CodeDecode categories, returns the associated data, and performs an update to the local database.  is a logic diagram for this process .","After an API call, a check is made to determine if the Arch is initialized . If it is a check is made to determine if the Freshness Interval has expired . If the Freshness Interval has not expired, the API call is complete . However, if either the Arch is not initialized or the Freshness Interval has expired, then the \u201cLastUpdate\u201d fields for each category are read from the CodeDecode and passed to the server . Then new and updated categories are read from the database . Finally the Local database is updated .","The following are APIs located on the interface of the Arch Object  named CodesMan .","GetCodeObject(nCategory, sCode);","GetCategoryCodes(nCategory);","FillControl(ctlControl, ncategory, nFillType, [nCodeStatus], [colAssignedCodes]).","GetCodeObject: Returns a valid CCode object given a specific category and code.","Syntax:",{"@attributes":{"id":"p-0315","num":"0000"},"ul":{"@attributes":{"id":"ul0030","list-style":"none"},"li":{"@attributes":{"id":"ul0030-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0031","list-style":"none"},"li":["GetCodeObject(nCategory, sCode)\n\nParameters:\n","ncategory: The integer based constant which classified these CodeDecodes from others.","sCode: A string indicating the Code attribute of the CodeDecode object.\n\nExample:\n","frmCurrentForm.lblState=objArch.CodesMan.GetCodeObject (cmCatStates, \u201cIL\u201d).LongDecode"]}}}},"GetCategoryCodes: Returns a collection of CCode objects given a valid category","Syntax:",{"@attributes":{"id":"p-0317","num":"0000"},"ul":{"@attributes":{"id":"ul0032","list-style":"none"},"li":{"@attributes":{"id":"ul0032-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0033","list-style":"none"},"li":["GetCategoryCodes(nCategory)\n\nParameters:\n","nCategory: The integer based constant which classified these CodeDecodes from others.\n\nExample:\n"]}}}},{"@attributes":{"id":"p-0318","num":"0376"},"tables":{"@attributes":{"id":"TABLE-US-00051","num":"00051"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Dim colMyStates As CCollection"},{"entry":"Set colMyStates = objArch.CodesMan.GetCategory(cmCatStates)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"FillControl: This API is used to fill listboxes or comboboxes with values from a list of CodeDecodes. Returns a collection for subsequent lookups to Code objects used to fill controls.","Syntax:",{"@attributes":{"id":"p-0320","num":"0000"},"ul":{"@attributes":{"id":"ul0034","list-style":"none"},"li":{"@attributes":{"id":"ul0034-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0035","list-style":"none"},"li":["FillControl(ctlControl, nCategory, nFillType, [nCodeStatus], [colAssignedCodes])\n\nParameters:\n","ctlControl: A reference to a passed in listbox or combobox.","nCategory: The integer based constant which classified these CodeDecodes from others.","nFillType: The attribute of the CodeDecode which you want to fill. Valid values include:"]}}}},{"@attributes":{"id":"p-0321","num":"0382"},"tables":{"@attributes":{"id":"TABLE-US-00052","num":"00052"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"cmCode"]},{"entry":[{},"cmShortDecode"]},{"entry":[{},"cmLongDecode"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0036","list-style":"none"},"li":{"@attributes":{"id":"ul0036-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0037","list-style":"none"},"li":"nCodeStatus: Optional value which filters the Code Decodes according to their Effective and Expiration dates. Valid constants include the following:"}}}},{"@attributes":{"id":"p-0322","num":"0384"},"tables":{"@attributes":{"id":"TABLE-US-00053","num":"00053"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["cmAllCodes","Pending + Valid + Expired Codes"]},{"entry":["cmPendingCodes","Codes whose effective date is greater than the"]},{"entry":"current date"},{"entry":["cmValidCodes","Not Pending or Expired Codes"]},{"entry":["cmExpiredCodes","Codes whose expired date is greater than the"]},{"entry":"current date"},{"entry":["cmNonPendingCodes","Valid + Expired Codes"]},{"entry":["cmNonValidCodes","Pending + Expired Codes"]},{"entry":["cmNonExpiredCodes","Pending + Valid Codes"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"ul":{"@attributes":{"id":"ul0038","list-style":"none"},"li":{"@attributes":{"id":"ul0038-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0039","list-style":"none"},"li":["colAssignedCodes: Used when filling a control which should fill and include assigned values.\n\nExample:\n","\u2018Declare an instance variable for States collection on object","Private colStates As CCollection","\u2018Call FillControl API, and set local collection inst var to collection of codes which were used to fill the control. This collection will be used for subsequent lookups."]}}}},{"@attributes":{"id":"p-0323","num":"0389"},"tables":{"@attributes":{"id":"TABLE-US-00054","num":"00054"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Set colStates = objArch.CodesMan.FillControl"},{"entry":"(frmCurrentForm.cboStates, cmCatStates, cmLongDecode)"},{"entry":"\u2018Below shows an example of looking up the Code value for the currently"},{"entry":"selected state."},{"entry":"With frmCurrentForm.cboStates"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If .ListIndex > \u22121 Then"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim objCode As CCode"]},{"entry":[{},"Set objCode = colStates(.ItemData(.ListIndex))"]},{"entry":[{},"sStateCode = objCode.Code"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End If"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End With"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Code objects returned via the \u201cGetCodeObject\u201d or \u201cGetCategoryCodes\u201d APIs can have relations to other code objects. This allows for functionality in which codes are associated to other individual code objects.","The APIs used to retrieve these values are similar to those on the CodesMan interface. The difference, however is that the methods are called on the Codes object rather that the CodesManager interface: Listed below again are the APIs.","GetCodeObject(nCategory, sCode);","GetCategoryCodes(nCategory);","FillControl(ctlControl, nCategory, nFillType, [nCodeStatus], [colAssignedCodes]).","Given below is some sample code to illustrate how these APIs are also called on Code objects.",{"@attributes":{"id":"p-0327","num":"0393"},"tables":{"@attributes":{"id":"TABLE-US-00055","num":"00055"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"GetCodeObject Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim objBondCode As CCode"]},{"entry":[{},"Set objBondCode ="]},{"entry":[{},"objArch.CodesMan.GetCodeObject(cmCatLOB, \u201cB\u201d)"]},{"entry":[{},"Dim objSuretyCode As CCode"]},{"entry":[{},"Set objSuretyCode ="]},{"entry":[{},"objBondCode.GetCodeObject(cmCatSupplement, \u201cB01\u201d)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"GetCategory Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim objBondCode As CCode"]},{"entry":[{},"Set objBondCode ="]},{"entry":[{},"objArch.CodesMan.GetCodeObject(cmCatLOB, \u201cB\u201d)"]},{"entry":[{},"Dim colSupplements As CCollection"]},{"entry":[{},"Set colSupplements = objBondCode.GetCategory(cmCatSupplement)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"FillControl Example:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim objBondCode As CCode"]},{"entry":[{},"Set objBondCode ="]},{"entry":[{},"objArch.CodesMan.GetCodeObject(cmCatLOB, \u201cB\u201d)"]},{"entry":[{},"Dim colSupplements As CCollection"]},{"entry":[{},"Set colSupplements ="]},{"entry":[{},"objBondCode.FillControl(frmForm.cboSupplements,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"cmCatSupplements,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"cmLongDecode)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The message logging architecture allows message logging in a safe and consistent manner. The interface to the message logging component is simple and consistent, allowing message logging on any processing tier. Both error and informational messages are logged to a centralized repository.","Abstracting the message logging approach allows the implementation to change without breaking existing code.","Messages are always logged by the architecture when an unrecoverable error occurs (i.e., the network goes down) and it is not explicitly handled. Message logging may be used on an as-needed basis to facilitate the diagnosis and fixing of SIRs. This sort of logging is especially useful at points of integration between classes and components. Messages logged for the purpose of debugging have a severity of Informational, so as not to be confused with legitimate error messages.","A message is logged by calling the LogMessage( ) function on the architecture.","Description of Parameters:","vMsg: the standard architecture message","lSeverity: the severity of the message","sClassName: the name of the class logging the message","sMethodName: the name of the method logging the message","sVersion: the version of the binary file (EXE or DLL) that contains the method logging the message","lErrorNum: the number of the current error","sText: an optional parameter containing the text of the message. If omitted, the text will be looked up in a string file or the generic VB error description will be used.","sText: an optional parameter containing the text of the message. If omitted, the text will be looked up in a string file or the generic VB error description will be used.","lLoggingOptions: an optional parameter containing a constant specifying where to log the message (i.e., passing cmogToDBAndEventViewer to LogMessage will log the error to the database and the event viewer.)","Logging Levels","Before a message is logged, its severity is compared to the log level of the current machine. If the severity of the message is less than or equal to the log level, then the message is logged.","Valid values for the log level are defined as an enumeration in VB. They include:",{"@attributes":{"id":"p-0334","num":"0400"},"tables":{"@attributes":{"id":"TABLE-US-00056","num":"00056"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Value","Name","Description","Example"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","CmFatal","A critical condition that closes or","Application Server"]},{"entry":[{},{},"threatens the entire system","crash"]},{"entry":["1","CmSevere","A condition that closes or threatens a","Network failure"]},{"entry":[{},{},"major component of the entire system"]},{"entry":["2","CmWarning","A warning that something in the system","Optimistic locking"]},{"entry":[{},{},"is wrong but it does not close or","error"]},{"entry":[{},{},"threaten to close the system"]},{"entry":["3","CmInformational","Notification of a particular occurrence","Developer debugging"]},{"entry":[{},{},"for logging and audit purposes","information"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0335","num":"0401"},"tables":{"@attributes":{"id":"TABLE-US-00057","num":"00057"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If Err.Number <> 0 Then"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 log message"]},{"entry":[{},"Arch.LogMan.LogMessage(vMsg, cmSeverityFatal,"]},{"entry":[{},"\u201cCOrganizationCTLR\u201d,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u201cInitForm\u201d,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"GetVersion(), Err.Number, Err.Description)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 re-raise the error"]},{"entry":[{},"Err.Raise Err.Number"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End If"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The database log table is composed of the following fields:",{"@attributes":{"id":"p-0337","num":"0403"},"tables":{"@attributes":{"id":"TABLE-US-00058","num":"00058"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["N_MSG_ID","Unique ID of the message"]},{"entry":["D_MSG","Date the message occurred"]},{"entry":["C_ERR_SEV","Severity of the error"]},{"entry":["N_USER_ID","Name of user when error occurred"]},{"entry":["N_MACH_ID","Name of the machine that the error occurred on"]},{"entry":["M_CLASS","Name of the class that the error occurred in"]},{"entry":["M_METHOD","Name of the method that the error occurred in"]},{"entry":["N_CMPNT_VER","Version of the binary file that the error occurred in"]},{"entry":["C_ERR","Number of the error"]},{"entry":["T_MSG","Text of the message"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Messages are always logged to the application server's Event Log; however this is not necessarily true for the database as noted by the optional parameter passed to LogMessage, lLoggingoptions. An administrator with the appropriate access rights can connect to the MTS application server remotely and view its Event Log. Only one MTS package contains the Event Log Component, so that errors will all be written to the same application server Event Log.","Events logged via Visual Basic always have \u201cVBRuntime\u201d as the source. The Computer field is automatically populated with the name of the computer that is logging the event (i.e., the MTS application server) rather than the computer that generated the event (typically a client computer).","The same event details that are written to the database are formatted into a readable string and written to the log. The text \u201cThe VB Application identified by . . . Logged:\u201d is automatically added by VB; the text that follows contains the details of the message.","All but a few exceptional cases use the \u201cExecuteQuery\u201d API. This API covers singular database operations in which there exists a single input and a single output. Essentially should only exclude certain batch type operations.","The Data Access Framework serves the purposes of performance, consistency, and maintainability.","Performance","The \u201cExecuteQuery\u201d method incorporates usage patterns for using ADO in an efficient manner. Examples of these patterns include utilization of disconnected recordsets, and explicitly declaring optional parameters which result in the best performance.","Consistency","This method provides a common interface for development of data access. Given a simple and stable data access interface, best practices can be developed and disseminated.","Maintainability","Since the method is located in a single location, it is very modularized and can be maintained with little impact to its callers.","Application servers often use the ActiveX Data Objects (ADO) data access interface. This allows for a simplified programming model as well as enabling the embodiments to utilize a variety of data sources.","Overview","The \u201cExecuteQuery\u201d method should be used for most application SQL calls. This method encapsulates functionality for using ADO in a effective and efficient manner. This API applies to situations in which a single operation needs to be executed which returns a single recordset object.","Syntax",{"@attributes":{"id":"p-0348","num":"0000"},"ul":{"@attributes":{"id":"ul0040","list-style":"none"},"li":{"@attributes":{"id":"ul0040-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0041","list-style":"none"},"li":"Set obj=ExecuteQuery(vMsg, nTranType, sSQL, [nMaxRows], [adoTransConn], [args])\n\nParameters\n"}}}},"vMsg\n\n","nTranType\n\n","sSQL\n\n","nMaxRows (Optional)\n\n","adoTransConn (Optional)\n\n","args (Optional)\n\n","In one embodiment of the present invention the \u201cExecuteQuery\u201d method resides within the MservArch.bas file. This file should be incorporated into all ServerComponent type projects. This will allow each server component access to this method.","Note: Since this method is a public method in a \u201cbas\u201d module, it is globally available from anywhere in the project.",{"@attributes":{"id":"p-0357","num":"0434"},"tables":{"@attributes":{"id":"TABLE-US-00059","num":"00059"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Public Function ExecuteQuery(vMsg As Variant, "}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"nTranType As TranTypes, "]},{"entry":[{},"sSQL As String, "]},{"entry":[{},"Optional nMaxRows As Integer = 0, "]},{"entry":[{},"Optional adoTransConn As ADODB.Connection, "]},{"entry":[{},"Optional colArguments As CCollection) As Variant"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error GoTo ErrorHandler"]},{"entry":[{},"Const cmMethodName As String = \u201cExecuteQuery\u201d"]},{"entry":[{},"StartTimeLogger vMsg, cmTimerIdDBTotal, cmClassName, cmMethodName"]},{"entry":[{},"\u2018find out if this call is an isolate operation or"]},{"entry":[{},"\u2018part of an ADO (not MTS) transaction"]},{"entry":[{},"Dim isAtomicTrans As Boolean"]},{"entry":[{},"isAtomicTrans = adoTransConn Is Nothing"]},{"entry":[{},"Dim nRecordsAffected As Integer"]},{"entry":[{},"Dim adoRS As New ADODB.Recordset"]},{"entry":[{},"Dim adoConn As ADODB.Connection"]},{"entry":[{},"Dim lAuxErrNumber As Long"]},{"entry":[{},"\u2018open a new connection or keep using the passed in connection"]},{"entry":[{},"Set adoConn = IIf(isAtomicTrans, New ADODB.Connection, adoTransConn)"]},{"entry":[{},"If isAtomicTrans Then"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"adoConn.Open cmODBC_Connect"]},{"entry":[{},"\u2018ADO will wait indefinitely until the execution is complete during"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"performance"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"testing"]},{"entry":[{},"#If IsPerfTest Then"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"adoConn.CommandTimeout = 0"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"#End If"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End If"]},{"entry":[{},"\u2018Make sure date args are formatted for DB2 if appropriate"]},{"entry":[{},"If Not colArguments Is Nothing Then "]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Set colArgunents = FormatArgsForDB2(colArguments)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018merge the passed in arguments with the SQL string"]},{"entry":[{},"sSQL = MergeSQL(sSQL, colArguments)"]},{"entry":[{},"Debug.Print Time & \u201c: \u201d & sSQL"]},{"entry":[{},"\u2018execute the SQL statement depending on the transaction type"]},{"entry":[{},"Select Case CStr(nTranType)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmSelect"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"adoRS.MaxRecords = nMaxRows"]},{"entry":[{},"adoRS.CursorLocation = adUseClient"]},{"entry":[{},"adoRS.Open sSQL, adoConn, adOpenForwardOnly, adLockReadOnly,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"adCmdText"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set adoRS.ActiveConnection = Nothing"]},{"entry":[{},"Set ExecuteQuery = adoRS"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmSelectLocal"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"adoRS.MaxRecords = nMaxRows"]},{"entry":[{},"adoRS.CursorLocation = adUseClient"]},{"entry":[{},"adoRS.Open sSQL, adoConn, adOpenStatic, adLockBatchOptimistic,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"adCmdText"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set adoRS.ActiveConnection = Nothing"]},{"entry":[{},"Set ExecuteQuery = adoRS"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmInsert"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set adoRS = adoConn.Execute(sSQL, nRecordsAffected, adCmdText)"]},{"entry":[{},"If nRecordsAffected <= 0 Then Err.Raise cmErrQueryInsert"]},{"entry":[{},"Set adoRS = Nothing"]},{"entry":[{},"ExecuteQuery = nRecordsAffected"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmUpdate, cmDelete"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set adoRS = adoConn.Execute(sSQL, nRecordsAffected, adCmdText)"]},{"entry":[{},"If nRecordsAffected <= 0 Then Err.Raise cmErrOptimisticLock"]},{"entry":[{},"Set adoRS = Nothing"]},{"entry":[{},"ExecuteQuery = nRecordsAffected"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmSpFileNote"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set adoRS = adoConn.Execute(sSQL, nRecordsAffected, adCmdText)"]},{"entry":[{},"Set adoRS = Nothing"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case Else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Err.Raise cmErrInvalidParameters"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Select"]},{"entry":[{},"StopTimeLogger vMsg, cmTimerIdDBTotal, cmClassName, cmMethodName"]},{"entry":[{},"Exit Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ErrorHandler:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim objArch As Object"]},{"entry":[{},"Set objArch = CreateObject(\u201ccmArch.CTechArch\u201d)"]},{"entry":[{},"Select Case CStr(Err)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmErrQueryInsert, cmErrOptimisticLock, cmErrInvalidParameters"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018Raise error"]},{"entry":[{},"Err.Raise Err"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmErrDSNNotFound"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim sMsgText As String"]},{"entry":[{},"sMsgText = \u201cData Source Name not found.\u201d & vbCrLf & \u201c( \u201d & "]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"CStr(objArch.RegMan.GetServerDSN) & \u201c )\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 Create a new message log and log the message"]},{"entry":[{},"objArch.LogMan.LogMessage vMsg, cmSeverityFatal, cmClassName,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"cmMethodName,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"GetVersion(), cmErrDSNNotFound, sMsgText,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"cmLogToEventViewerOnly"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"lAuxErrNumber = adoConn.Errors(0).NativeError \u2018The error code is stored since"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"217pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"when closing the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"conection it will"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"217pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"be lost"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"If adoConn.State <> adStateClosed Then adoConn.Close"]},{"entry":[{},"Err.Raise cmErrDSNNotFound, , sMsgText"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case Else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018 Create a new message log and log the message"]},{"entry":[{},"objArch.LogMan.LogMessage vMsg, cmSeverityFatal, cmClassName,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"cmMethodName,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"GetVersion(), Err.Number, Err.Description,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"cmLogToEventViewerOnly"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"lAuxErrNumber = adoConn.Errors(0).NativeError \u2018The error code is"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"stored since"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"196pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"when closing the"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"conection it will"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"196pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"be lost"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"If adoConn.State <> adStateClosed Then adoConn.Close"]},{"entry":[{},"Err.Raise lAuxErrNumber"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End Select"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Function"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"ExecuteQuery utilizes disconnected recordsets for \u201cSelect\u201d type statements. This requires that the clients, particularly the CCA's contain a reference to ADOR, ActiveX Data Object Recordset. This DLL is a subset of the ADODB DLL. ADOR contains only the recordset object.","Using disconnected recordsets allows marshalling of recordset objects from sever to client. This performs much more efficiently than the variant array which is associated with using the \u201cGetRows\u201d API on the server. This performance gain is especially apparent when the application server is under load of a large number of concurrent users.",{"@attributes":{"id":"p-0360","num":"0437"},"tables":{"@attributes":{"id":"TABLE-US-00060","num":"00060"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Sample from Client Component Adapter (CCA)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim vAns as Variant"]},{"entry":[{},"Dim adoRS As ADOR.Recordset"]},{"entry":[{},"Set adoRS = objServer.PerformSelect(vMsg, nId)"]},{"entry":[{},"If objRS.EOF Then"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set objRS = Nothing"]},{"entry":[{},"Exit Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End If"]},{"entry":[{},"vAns = adoRS.GetRows"]},{"entry":[{},"Set adoRS = Nothing"]},{"entry":[{},"\u2018Marshall vAns into objects"]},{"entry":[{},". . ."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Sample from Server Component"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Const cmCustSQL = \u201cSelect * from Customer where id = ?\u201d"]},{"entry":[{},"Public Function PerformSelect(vMsg, nId) as Variant"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim colArgs as CCollection"]},{"entry":[{},"Set colArgs = New Ccollection"]},{"entry":[{},"colArgs.Add nId"]},{"entry":[{},"Set PerformSelect = ExecuteQuery(vMsg, cmSelect, sCustSQL, , ,colArgs)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End Function"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Code Clip from ExecuteQuery (Select Section)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmSelect"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"adoRS.MaxRecords = nMaxRows"]},{"entry":[{},"adoRS.CursorLocation = adUseClient"]},{"entry":[{},"adoRS.Open sSQL, adoConn, adOpenForwardOnly, adLockReadOnly, adCmdText"]},{"entry":[{},"Set ExecuteQuery = adoRS"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},". . ."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Inserting records requires certain information pertaining to optimistic locking. On the server a unique value is requested to indicate the last time modified. This unique value is returned back to the requester such that it can be used to later database operations.",{"@attributes":{"id":"p-0362","num":"0439"},"tables":{"@attributes":{"id":"TABLE-US-00061","num":"00061"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Sample from Client Component Adapter (CCA)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim vNewTS as Variant"]},{"entry":[{},"vNewTS = objServer.PerformInsert(vMsg, nId, sName)"]},{"entry":[{},"\u2018Set object's TimeStamp to vNewTS"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Sample from Server Component"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Const cmCustInsertSQL = \u201cInsert Customer (nId, Name,"]},{"entry":[{},"LastUpdated)"]},{"entry":[{},"Values(?, \u2018?\u2019, ?)\u201d"]},{"entry":[{},"Public Function PerformInsert(vMsg, nId, sName) As Variant"]},{"entry":[{},"Dim lCurrTS as Long"]},{"entry":[{},"lCurrTS = GetTimeStamp"]},{"entry":[{},"Dim colArgs as CCollection"]},{"entry":[{},"Set colArgs = New Ccollection"]},{"entry":[{},"colArgs.Add nId"]},{"entry":[{},"colArgs.Add sName"]},{"entry":[{},"colArgs.Add lCurrTS"]},{"entry":[{},"ExecuteQuery(vMsg, cmInsert, sCustInsertSQL, , , colArgs)"]},{"entry":[{},"PerformInsert = lCurrTS"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Code Clip from ExecuteQuery (Insert Section)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmInsert"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set adoRS = adoConn.Execute(sSQL, nRecordsAffected,"]},{"entry":[{},"adCmdText)"]},{"entry":[{},"If nRecordsAffected <= 0 Then Err.Raise cmErrQueryInsert"]},{"entry":[{},"Set adoRS = Nothing"]},{"entry":[{},"ExecuteQuery = nRecordsAffected"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Updating records requires certain information pertaining to optimistic locking. On the server a unique value is requested to indicate the last time modified. Also the last read timestamp is used to validate, during the update, that the record has not been modified since last time read.",{"@attributes":{"id":"p-0364","num":"0441"},"tables":{"@attributes":{"id":"TABLE-US-00062","num":"00062"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Sample from Client Component Adapter (CCA)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim vNewTS as Variant"]},{"entry":[{},"vNewTS = objServer.PerformUpdate(vMsg, 1, \u2018Rick\u2019, 8907654)"]},{"entry":[{},"\u2018 Set object's TimeStamp to vNewTS"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Sample Code Clip from Server Component"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Const cmCustUpdateSQL = "]},{"entry":[{},"\u201cUpdate Customer Set Name = \u2018?\u2019, LastUpdated = ? \u201d & "]},{"entry":[{},"\u201cWhere Id = ? \u201d & "]},{"entry":[{},"\u201cAnd LastUpdated = ? \u201d"]},{"entry":[{},"Public Function PerformUpdate(vMsg, nId, sName, lLastTS) As Variant"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim lCurrTS as Long"]},{"entry":[{},"lCurrTS = GetTimeStamp"]},{"entry":[{},"Dim colArgs as CCollection"]},{"entry":[{},"Set colArgs = New Ccollection"]},{"entry":[{},"colArgs.Add sName"]},{"entry":[{},"colArgs.Add lCurrTS"]},{"entry":[{},"colArgs.Add nId"]},{"entry":[{},"colArgs.Add lLastTS"]},{"entry":[{},"PerformUpdate = ExecuteQuery(vMsg, cmUpdate, sCustUpdateSQL, , , colArgs)"]},{"entry":[{},"PerformUpdate = lCurrTS"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End Function"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Code Clip from ExecuteQuery (Update Section)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmUpdate"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set adoRS = adoConn.Execute(sSQL, nRecordsAffected, adCmdText)"]},{"entry":[{},"If nRecordsAffected < 0 Then Err.Raise cmErrOptimisticLock"]},{"entry":[{},"ExecuteQuery = nRecordsAffected"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In deleting records the last read timestamp is used to validate, during the delete, that the record has not been modified since last time read.",{"@attributes":{"id":"p-0366","num":"0443"},"tables":{"@attributes":{"id":"TABLE-US-00063","num":"00063"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Sample from Client Component Adapter (CCA)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim vAns as Variant"]},{"entry":[{},"vAns = objServer.PerformDelete(vMsg, nId ,lLastTS)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Sample from Server Component"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Const cmCustDeleteSQL = "]},{"entry":[{},"\u201cDelete From Customer \u201d & "]},{"entry":[{},"\u201cWhere Id = ? \u201d & "]},{"entry":[{},"\u201cAnd LastUpdated = ? \u201d"]},{"entry":[{},"Public Function PerformDelete(vMsg, nId lLastTS) As Variant"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim colArgs as CCollection"]},{"entry":[{},"Set colArgs = New Ccollection"]},{"entry":[{},"colArgs.Add nId"]},{"entry":[{},"colArgs.Add lLastTS"]},{"entry":[{},"PerformDelete = ExecuteQuery(vMsg, cmDelete,"]},{"entry":[{},"cmCustDeleteSQL)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Exit Function"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Code Clip from ExecuteQuery (Delete Section)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmDelete"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set adoRS = adoConn.Execute(sSQL, nRecordsAffected,"]},{"entry":[{},"adCmdText)"]},{"entry":[{},"If nRecordsAffected < 0 Then Err.Raise cmErrOptimisticLock"]},{"entry":[{},"ExecuteQuery = nRecordsAffected"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Database Locking ensures the integrity of the database in a multi-user environment. Locking prevents the common problem of lost updates from multiple users updating the same record.","Pessimistic Locking","This policy of locking allows the first user to have full access to the record while following users are denied access or have read only access until the record is unlocked. There are drawbacks to this method of locking. It is a method that is prone to deadlocks on the database as well poor performance when conflicts are encountered.","Optimistic Locking","The optimistic approach to record locking is based on the assumption that it is not normal processing for multiple users to both read and update records concurrently. This situation is treated as exceptional processing rather than normal processing. Locks are not actually placed on the database at read time. A timestamp mechanism is used at time of update or delete to ensure that another user has not modified or deleted the record since you last read the record.","A preferred embodiment of the present invention uses an optimistic locking approach to concurrency control. This ensures database integrity as well as the low overhead associated with this form of locking. Other benefits to this method are increased availability of records to multiple users, and a minimization of database deadlocks.","Table candidates for concurrency control are identified during the \u201cData Modeling Exercise\u201d. The only table which is updated concurrently is the Optimistic Locking mechanism. Once these are identified, the following is added to the application.","Add \u201cN_Last_Updt\u201d field to table in database;","Error Handling routines on those operations which modify or delete from this table; and","Display\/Notification to user that the error has occurred.","The chart below describes the roles of the two basic types of components to enable optimistic locking.","Assumption: The optimistic locking field is of type Date and is named \u201cN_Last_Updt\u201d",{"@attributes":{"id":"p-0374","num":"0451"},"tables":{"@attributes":{"id":"TABLE-US-00064","num":"00064"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Client Components","Server Components"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Read","Store N_Last_Updt value in the","Retrieve data (Always including N_Last_Updt field)."]},{"entry":["Access","business object for use in possible","SELECT Id, FirstName, N_Last_Updt"]},{"entry":[{},"updates or deletes.","FROM Customer"]},{"entry":[{},{},"WHERE id = 10;"]},{"entry":["Inserts","Normal","Dim lCurrTS As Double"]},{"entry":[{},{},"lCurrTS = GetTimeStamp"]},{"entry":[{},{},"INSERT INTO Customer (Id, FirstName, N_Last_Updt)"]},{"entry":[{},{},"VALUES (1, \u201cRick\u201d, lCurrTS);"]},{"entry":[{},{},"Return new timestamp (lCurrTS) as well as new Id"]},{"entry":["Updates","Pass previously read timestamp to","Dim lCurrTS As Double"]},{"entry":[{},"identify whether row was modified.","lCurrTS = GetTimeStamp"]},{"entry":[{},"This is in addition to a unique identifier","UPDATE Customer"]},{"entry":[{},"and whatever data needs to be updated.","SET firstName = \u201cRichard\u201d,"]},{"entry":[{},"Handle exception if record has been","N_Last_Updt = lCurrTS"]},{"entry":[{},"previously modified.","WHERE id = 1"]},{"entry":[{},"Notify user of conflict.","AND LastUpdate = lastReadTimestamp;"]},{"entry":[{},"Rollback any changes.","If no rows are affected, handle and propagate error back"]},{"entry":[{},{},"out to the client."]},{"entry":[{},{},"Return new timestamp (lCurrTS)"]},{"entry":["Deletes","Pass previously read timestamp to","DELETE Customer"]},{"entry":[{},"identify whether row was modified.","WHERE id = 1"]},{"entry":[{},"This is in addition to a unique identifier","AND N_Last_Updt = lastReadTimestamp;"]},{"entry":[{},"Handle exception if record has been","If no rows are affected, handle and propagate error back"]},{"entry":[{},"previously modified.","out to the client."]},{"entry":[{},"Notify user of conflict."]},{"entry":[{},"Rollback any changes."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"When retrieving records from a database, if the search criteria is too broad, the amount of data required to be retrieved from the database and passed across the network will affect user perceived performance. Windows requesting such data will be slow to paint and searches will be slow. The formation of the database queries is made such that a workable amount of data is retrieved. There are a few options for addressing the problems that occur from large result sets. The options are given below in order of preference.","Redesign the interface\/controller to return smaller result sets. By designing the controllers that present the database queries intelligently, the queries that are presented to the database server do not return a result set that is large enough to affect user perceived performance. In essence, the potential to retrieve too many records indicates that the UIs and the controllers have been designed differently. An example of a well designed Search UI is one where the user is required to enter in a minimum search criteria to prevent an excessively large result set.","Have Scrollable Result Sets. The scrolling retrieval of a large result set is the incremental retrieval of a result subset repeated as many times as the user requests or until the entire result set is obtained. Results are retrieved by the Bounded Query Approach where the first record is determined by a where clause with calculated values.","Preferred UI","The preferred displays are as follows:","Returned results are displayed in a GreenTree List Box;","An action button with the label More . . . is provided for the user to obtain the remaining results;","The More button is enabled when the user has performed an initial search and there are still results to be retrieved;","The More button is disabled when there are no more results to retrieve;","The List Box and the Action button is contained within a group box to provide a visual association between the button and the List Box.","Queries that are implemented with the limited result sets are sent to the server. The server implements the executeQuery method to retrieve the recordset as usual. Limited result queries have an order by clause that includes the business required sort order along with a sufficient number of columns to ensure that all rows can be uniquely identified. The recordset is limited by the nMaxRows variable passed from the client incremented to obtain the first row of the next result set. The return from the component is a recordset just the same as with a query that is not limited. The CCA  creates the objects and passes these back to the controller . The Controller  adds this returned collection of object to its collection of objects (an accumulation of previous results) and while doing so will performs the comparison of the last object to the first object of the next row. The values necessary to discriminate the two rows are added to the variant array that is necessary to pass to the component for the subsequent query.","The Controller  on the client retains the values for nMaxRows, the initial SQL statement, and array of values to discern between the last row of the previous query and the first row of the next query. The mechanism by which the controller  is aware that there are more records to retrieve is by checking the number of results is one greater than the max number of rows. To prevent the retrieval of records past the end of file, the controller  disables these functions on the UI. For example, a command button More on the UI, used to requested the data, is disabled when the number of objects returned is less than nMaxRows+1.","Server","The Server component is responsible for creating a collection of arguments and appending the SQL statement to add a where clause that will be able to discriminate between the last row of the previous query and the first row of the next.","CCA","The CCA  processes the recordset into objects as in non limited queries. The CCA  forwards the variant array passed from the Controller  to identify the limited results.","Controller","The controller  has the responsibility of disabling the More control when the end of file has been reached. The controller  populates the variant array (vKeys) with the values necessary to determine start of next query.","A CCA  is coded for a user defined search which has the potential to return a sizable result set. The code example below implements the Bounded Query approach.","On the Server the developer codes the query as follows:",{"@attributes":{"id":"p-0386","num":"0463"},"tables":{"@attributes":{"id":"TABLE-US-00065","num":"00065"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Public Function RetrieveBusinessObjects(vMsg As Variant, ByVal sSql"},{"entry":"As String,"},{"entry":"ByVal nMaxRows As Integer, Optional ByVal vKeys As Variant)"},{"entry":"As Recordset"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"On Error GoTo ErrorHandler"]},{"entry":[{},"\u2018Declare local constants"]},{"entry":[{},"Const cmMethodName As String = \u201cRetrieveBusinessObjects\u201d"]},{"entry":[{},"\u2018Declare local variables"]},{"entry":[{},"Dim cmClassName As String"]},{"entry":[{},"Dim colArgs As New CCollection"]},{"entry":[{},"\u2018initialize instance variables"]},{"entry":[{},"cmClassName = \u201cCSRSTestComp\u201d"]},{"entry":[{},"\u2018fill argument collection"]},{"entry":[{},"Set colArgs = ArgumentsForBusinessObject(vKeys , sSQL)"]},{"entry":[{},"\u2018increment nMaxRows to obtain row for comparison"]},{"entry":[{},"nMaxRows = nMaxRows + 1"]},{"entry":[{},"\u2018ExecuteQuery"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set RetrieveBusinessObjects = ExecuteQuery(vMsg,"]},{"entry":[{},"cmSelectLocal, sQuery,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"nMaxRows, , colArgs)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018Tell MTS we're done"]},{"entry":[{},"GetObjectContext.SetComplete"]},{"entry":[{},"Exit Function"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ErrorHandler:"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Select Case Err.Number"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case Else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim iResumneCode As Integer"]},{"entry":[{},"iResumeCode = GeneralErrorHandler(vMsg, cmServer,"]},{"entry":[{},"cmClassName,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"cmMethodName)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Select Case iResumeCode"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmErrorResume"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Resume"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmErrorResumeNext"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Resume Next"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case cmErrorExit"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Exit Function"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case Else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GetObjectContext.SetAbort"]},{"entry":[{},"Err.Raise Err.Number"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End Select"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"End Select"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Function"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"To determine the additional where clause necessary to determine the starting point of the query, the following method is added:",{"@attributes":{"id":"p-0388","num":"0465"},"tables":{"@attributes":{"id":"TABLE-US-00066","num":"00066"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Private Function ArgumentsForBusinessObject(vKeys As Variant, sSql As"},{"entry":"string )"},{"entry":"As CCollection"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim colArgs As Ccollection"]},{"entry":[{},"Const cmGreaterThanWhereString As String = \u201c ? > ? \u201d"]},{"entry":[{},"Const cmGreaterThanOrEqualWhereString As String = \u201c ? >= ?"]},{"entry":[{},"AND \u201d"]},{"entry":[{},"\u2018 initialize local variables"]},{"entry":[{},"Set colArgs = New Ccollection"]},{"entry":[{},"sSql = sSql + \u201cWHERE\u201d"]},{"entry":[{},"With colArgs"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If vKeys(0) <> Empty Then"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".Add (\u201cN_TASK_TEMPL_ID\u201d)"]},{"entry":[{},".Add (vKeys(0))"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End If"]},{"entry":[{},"\u2018If vKeys(1) <> Nothing Then"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018.Add value2 fieldName"]},{"entry":[{},"\u2018.add vKeys(1)"]},{"entry":[{},"sSql = sSql + cmGreaterThanOrEqualWhereString"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018End If"]},{"entry":[{},"\u2018If vKeys(2) <> Nothing Then"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018.Add value3 fieidName"]},{"entry":[{},"\u2018.add vKeys(2)"]},{"entry":[{},"sSql = sSql + cmGreaterThanOrEqualWhereString"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2018End If"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End With"]},{"entry":[{},"\u2018finalize SQL statement"]},{"entry":[{},"sSql = sSql + cmGreaterThanWhereString"]},{"entry":[{},"Set ArgurmentsForBusinessObject = colArgs"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Function"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"On the CCA , allowance must be made for the passing of the vKeys","Public Function RetrieveBusinessObjects(vMsg As Variant, sSql As String, nMaxRows As Integer, Optional ByVal vKeys As Variant) As CCollection",{"@attributes":{"id":"p-0391","num":"0468"},"tables":{"@attributes":{"id":"TABLE-US-00067","num":"00067"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set percmpComponent = New CSRSTestComp"]},{"entry":[{},"Dim i As Integer"]},{"entry":[{},"Set adoRS = percmpComponent.RetrieveBusinessObjects(vMsg, sSql, nMaxRows,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"vKeys)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2018convert recordset to business objects"]},{"entry":[{},"adoRS.MoveFirst"]},{"entry":[{},"Do Until adoRS.EOF"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Call ConvertToBusinessObject"]},{"entry":[{},"adoRS.MoveNext"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Loop"]},{"entry":[{},"\u2018return the collection of business objects"]},{"entry":[{},"Set RetrieveBusinessObjects = dictBusinessObject"]},{"entry":[{},"Set dictBusinessObject = New CCollection"]},{"entry":[{},"End Function"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The controller initiates the query and updates the variant array of keys and form  properties based on the return. In addition to the code shown for the example below, the More Control is enabled if the search is cleared.",{"@attributes":{"id":"p-0393","num":"0470"},"tables":{"@attributes":{"id":"TABLE-US-00068","num":"00068"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2032declare instance variables"},{"entry":"Private nMaxRows As Integer"},{"entry":"Dim interimResults As CCollection"},{"entry":"Dim vResults As CCollection"},{"entry":"Dim vKeys(3) As Variant"},{"entry":"\u2032declare Constants"},{"entry":"Private Const nDefaultAmount As Long = 50"},{"entry":"Private Const cmRetrieveBusinessObjectSQL = \u201cSELECT * FROM"},{"entry":"NODE_RULE ORDER BY"},{"entry":"_N_TASK_TEMPL_ID\u201d"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"During class initialization perform the following:",{"@attributes":{"id":"p-0395","num":"0472"},"tables":{"@attributes":{"id":"TABLE-US-00069","num":"00069"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Public Sub Class_init( )"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2032obtain settings from registry"]},{"entry":[{},"nMaxRows = CInt (GetSetting(cmRegApp, cmRegArchSection,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"cmLimitedResultAmountKey, lDefaultAmount))"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Call resetSearch"]},{"entry":[{},"Set objCCA = New {CCA class name}"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Sub"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Search reset functionality is kept outside of initialization so this may be called from other parts of the application.",{"@attributes":{"id":"p-0397","num":"0474"},"tables":{"@attributes":{"id":"TABLE-US-00070","num":"00070"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Public Sub resetSearch( )"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Dim I as Integer"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Set vResults = New Ccollection"]},{"entry":[{},"For I = 0 To 3"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Set vKeys(I) = Empty"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Next"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Set vKeys(0) = Empty"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"frmCurrentForm. cmdMore.Enabled = True"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},"Public Sub RetrieveBusinessObjects ( )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Const cmMethodName As String = \u201cretrieveBusinessObjects\u201d"]},{"entry":[{},"Call RetainMouse"]},{"entry":[{},"\u2032 get arch message"]},{"entry":[{},"Dim vMsg As Variant"]},{"entry":[{},"vMsg = objApp.objArch.AsMsgStruct( )"]},{"entry":[{},"\u2032 call the component"]},{"entry":[{},"Dim pair As CArchpair"]},{"entry":[{},"\u2032Declare local variables"]},{"entry":[{},"Dim sSql As String"]},{"entry":[{},"Dim colArgs As CCollectiom"]},{"entry":[{},"Dim cmClassName As String"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Set interimResults = objCCA.RetrieveBusinessObjects (vMsg,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"cmRetrieveBusinessObjectSQL, nMaxRows, vKeys)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ctr = ProcessObjectCollection"]},{"entry":[{},"\u2032stop if size of return is less than the maximum"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"If ctr < nMaxRows + 1 Then frmCurrentForm.cmdMore.Enabled = False"]},{"entry":[{},"\u2032 restore pointer"]},{"entry":[{},"Screen.MousePointer = lPrevptr"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In order to retain the values to discriminate between the last row of the result set and the first row of the next the following method on the controller is used:",{"@attributes":{"id":"p-0399","num":"0476"},"tables":{"@attributes":{"id":"TABLE-US-00071","num":"00071"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Private Function ProcessObjectCollection( ) As Integer"]},{"entry":[{},"\u2032 merge results with the instance variable for the collection"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Dim ctr As Integer"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ctr = 0"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For Each element In interimResults"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ctr = ctr + 1"]},{"entry":[{},"\u2032retain Keys for subsequent Queries"]},{"entry":[{},"With element"]},{"entry":[{},"Select Case ctr"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case nMaxRows"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2032store all values that may be used for row comparison"]},{"entry":[{},"vKeys(0) = .NodeId"]},{"entry":[{},"\u2032add last object to collection"]},{"entry":[{},"vResults.Add element"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case nMaxRows + 1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2032last object only used for comparison"]},{"entry":[{},"\u2032If the proceeding value can be used to uniquely"]},{"entry":[{},"\u2032identify row then delete value from array"]},{"entry":[{},"\u2032 THERE SHOULD BE N \u2212 1 nested If statements where N ="]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"size of vKeys"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2032If .value2 <> vKeys(1) Then"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2032vKeys(2) Empty"]},{"entry":[{},"If .NodeId <> vKeys(0) Then vKeys(1) = Empty"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2032End If"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Case Else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"vResults.Add element"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Select"]},{"entry":[{},"End With"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Next"]},{"entry":[{},"ProcessObjectcollection = ctr"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Function"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0400","num":"0477"},"tables":{"@attributes":{"id":"TABLE-US-00072","num":"00072"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Person"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"First Name","Last Name","Status","Unique ID"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Joy","Andersen","Closed","22"]},{"entry":[{},"Jay","Anderson","Open","12"]},{"entry":[{},"John","Barleycorn","Closed","512"]},{"entry":[{},"John","Barleycorn","Open","32"]},{"entry":[{},"Esther","Davidson","Open","88"]},{"entry":[{},"David","Dyson","Closed","98"]},{"entry":[{},"Bobby","Halford","Open","234"]},{"entry":[{},"Steven","Jackowski","Closed","4"]},{"entry":[{},"Kyle","Johnsen","Open","65"]},{"entry":[{},"Jeff","Johansen","Open","13"]},{"entry":[{},"Mary","Johnson","Closed","24"]},{"entry":[{},"Larry","Olsen","Open","21"]},{"entry":[{},"William","O'Neil","Closed","29"]},{"entry":[{},"Jane","Pick","Open","3285"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},"For this example let nMaxRows=3. The business case calls for the result set to be ordered by the last name, and developer knows that any row can be uniquely identified by the FirstName, LastName, and Unique ID fields so the initial SQL added as a constant in the controller should be;\n\n","The first query is sent with an empty vKeys Array. When the server receives this query, the method ArgumentsForBusinessObject identifies the elements as being empty and does not populate the colArgs. The query is executed with the initial SQL unchanged. The recordset of size nMaxRows+1 is returned to the CCA  and processed the same as non-limited results. The CCA  returns the collection of objects to the controller . The controller  proceeds to populate the vResults collection with the returned objects. vResults is the comprehensive collection of objects returned. When the last object of the first request is reached (at nMaxRows), the values are stored in vKeys as such;","vKeys(0)=LastName (Barleycorn)","vKeys(1)=FirstName (John)","vKeys(2)=Unique_ID ()","When the First Object of the next request is reached (at nMaxRows+1), comparison of the object variables against the vKeys values is performed. Because the last names match, vKeys(2) will not be deleted and no further checks are performed.","Subsequent Query","The subsequent query will pass vKeys along with it. The server creates the collection of arguments from vKeys and append the sSql string in accordance.","The sSql statement that is passed to execute query is\n\n","This sSql and collection is included in the call to ExecuteQuery which merges the arguments with the string relying on the architecture method MergeSQL to complete the SQL statement.","The starting point of the recordset is defined by the WHERE clause and the limit is set by the nMaxRows value.","Query Less Restrictive WHERE Criteria","After the second query the last row of the query is David Dyson and the next is Bobby Halford. Because the last name is different, vKeys will be empty except for vKeys(0)=Dyson.","The ProcessObjectCollection will populate vKeys as follows when processing nMaxRows object:","Keys(0)=LastName (Dyson)","vKeys(1)=FirstName (David)","vKeys(2)=Unique_ID ()","After identifying the differences between vKeys values and the nMaxRows+1 object the vKeys array is updated as follows:","vKeys(0)=LastName (Dyson)","vKeys(1)=Empty","vKeys(2)=Empty","The query that is returned from ArgumentsForBusinessObject is\n\n","After the fifth iteration the result set will only possess 2 records. When the controller  processes the returned collection the counter returned from ProcessObjectCollection is less than nMaxRows+1 which indicates that all records have been retrieved.","Implementation",{"@attributes":{"id":"p-0413","num":"0493"},"figref":"FIG. 8","b":"800"},"It can be seen from  that the Security object  is present at the Client and a Security API is provided at the server. The Security object  provides one method responsible for authorizing any operation, being given the vMsg structure, an operation ID and an optional parameter describing the operation's context.","Client","User Authentication:","User authentication is handled via a method located in the Security object  called IsOperAuthorized. As the Application object loads, it calls the IsOperAuthorized method, with the operation being \u201cLogin\u201d, before executing further processing. This method subsequently calls a authentication DLL, which is responsible for identifying the user as an authorized user within the Corporate Security.","UI Controllers:","The UI Controllers limit access to their functions by restricting access to specific widgets through enabling and disabling them. The logic for the enabling and disabling of widgets remains on the UI Controller , but the logic to determine whether a user has access to a specific functionality is located in the Security object  in the form of business rules. The UI Controller  calls the IsOperAuthorized method in order to set the state of its widgets.","Server","Server security is implemented by restricting access to the data in three different ways:","Server Security Method","Server Components  call the IsOperAuthorized API in the Architecture before executing every operation. In all cases the Security object  returns a boolean, according to the user's access rights and the business rules","SQL Filtering","Includes security attributes, like claim sensitiveness or public\/private file note, into the SQL statements when selecting or updating rows. This efficiently restricts the resulting data set, and avoids the return of restricted data to the client.","Any GUI related security is implemented at the Client using the Security object . The information is available both at the Client Profile and Business Objects  which enables the security rules to be properly evaluated.","IsOperAuthorized is called to set widgets upon the loading of a UI or if there is a change of state within the UI.","User authentication always is used by the Application Objects  in order to validate user privilege to launch the application.","SQL Filtering is used in the cases where sensitive data must not even be available at the Client, or where there is a great advantage on reducing the size of the data set returned to the Client.","SQL Filtering is only used in very rare cases where performance is a serious concern. It is used carefully in order to avoid increased complexity and performance impacts because some queries can be cumbersome and embedding security on them could increase complexity even more.","Overview","The Security object  serves the purpose of holding hard coded business rules to grant or deny user access for various application functions. This information is returned to the UI controllers  which make the necessary modifications on the UI state. The ClientProfile object serves the purpose of caching user specific (and static) security information directly on the client. This information is necessary to evaluate the business rules at the Security object .",{"@attributes":{"id":"p-0428","num":"0508"},"figref":"FIG. 9"},"Architecture Object","The TechArch object is responsible for providing access and maintaining the state of the ClientProfile  and Security objects . The ClientProfile object  is instantiated and destroyed in the TechArch's initialization and terminate methods, respectively. This object is maintained through an instance variable on the TechArch object.","CInitCompCCA","The CInitCompCCA object  provides two services to the architecture object , it serves as an access point to the CInitComp Server , and it Marshalls the query result set into a ClientProfile object .","CInitComp","The CInitComp server object  provides data access to the data that resides in the organization tables . This data is useful on the client to determine level of access to data based on hard coded business rules.","Organization Tables","The Organization tables  contain user, employee and unit information necessary to build the hierarchy of information necessary to determine level of access to sensitive information.","Client Profile","The ClientProfile object  serves the purpose of caching static, user specific security information directly on the client. This information is necessary to determine data access level of information to the user, which is accomplished by passing the necessary values to the Security object .","Security Object","The Security Object  contains business rules used to determine a user's access privileges in relation to specific functions. The object accepts certain parameters passed in by the various UI Controllers  and passes them to through the business rule logic which, in turn, interrogates the Client Profile object  for specific user information.","Attributes","The following are internal attributes for the Client Profile object . These attributes are not exposed to the application and should only be used by the Security object :\n\n","The following are the APIs exposed by the Client Profile object. These APIs are used for security checking by the Security object and should not be used by the developers in any portion of the application.\n\n","The following accessors are used to get data from the Client Profile's object:\n\n","Public Methods","The following API is exposed by the Security Object and is used by the application for security checking:\n\n",{"@attributes":{"id":"p-0439","num":"0000"},"ul":{"@attributes":{"id":"ul0072","list-style":"none"},"li":{"@attributes":{"id":"ul0072-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0073","list-style":"none"},"li":["IsSVCOperAuthorized(vMsg As Variant, sOperations As String, vContext As Variant) as Boolean","This API is called by every method on the server that persists data or can potentially access sensitive data (reactive approach).","IsOperAuthorized(vMsg As Variant, nOperations As cmOperations, vContext As Variant) as Boolean","This API is available for those cases where a proactive security check is needed on the server."]}}}},"The following examples show some ways to implement the options described above:","Client",{"@attributes":{"id":"p-0441","num":"0000"},"ul":{"@attributes":{"id":"ul0074","list-style":"none"},"li":{"@attributes":{"id":"ul0074-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0075","list-style":"none"},"li":"Business Logic"}}}},"IsOperAuthorized\n\n",{"@attributes":{"id":"p-0443","num":"0585"},"tables":{"@attributes":{"id":"TABLE-US-00073","num":"00073"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Private Sub TaskTree_NodeChanged(. . .)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"myController.SetCurrentTask"]},{"entry":[{},"myController.SetState"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},"Private Sub SetState( )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim objSecurity as Object"]},{"entry":[{},"Dim vContext(1) as Object"]},{"entry":[{},"Set objSecurity = taaApp.taoArch.objSecurity"]},{"entry":[{},"vContext(0) = CurrentClaim"]},{"entry":[{},"vContext(1) = CurrentTask"]},{"entry":[{},"tlbEditIcon.Enabled ="]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"objSecurity.IsOperAuthorized(vMsg, cmWorkOnSensitiveClaim,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"vContext)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0078","list-style":"none"},"li":{"@attributes":{"id":"ul0078-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0079","list-style":"none"},"li":"Let's consider the case of the Maintain Correspondence Search window where only a user who is a Forms and Correspondence Librarian should be allowed to delete a template. The following code would be at the Controller:"}}}},{"@attributes":{"id":"p-0444","num":"0587"},"tables":{"@attributes":{"id":"TABLE-US-00074","num":"00074"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Private Sub SetWindowMode( )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim objSecurity as Object"]},{"entry":[{},"Set objSecurity = taaApp.taoArch.objSecurity"]},{"entry":[{},". . ."]},{"entry":[{},"tlbEditIcon.Enabled = objSecurity.IsOperAuthorized(vMsg,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"cmMaintainFormsCorr)"]},{"entry":[{},"End Sub"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"ul":{"@attributes":{"id":"ul0080","list-style":"none"},"li":{"@attributes":{"id":"ul0080-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0081","list-style":"none"},"li":["SQL Filtering:","Let's consider the example of the Draft File Note window, where a user can only look at the draft file notes on which he\/she is the author. At the controller, one would have:"]}}}},{"@attributes":{"id":"p-0445","num":"0590"},"tables":{"@attributes":{"id":"TABLE-US-00075","num":"00075"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Public Sub GetDraftFNotes( )"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Dim objCP as Object"]},{"entry":[{},"Set objCP = taoArch.objClientProfile"]},{"entry":[{},"Dim fntCCA as Object"]},{"entry":[{},"Set fntCCA = taaApp.taoArch.GetCCA(cmCCAFileNote)"]},{"entry":[{},"Call fntCCA.GetADraftFNote (vMsg, objCP.sOrgUserId, colFNotes)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"End Sub"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"ul":{"@attributes":{"id":"ul0082","list-style":"none"},"li":{"@attributes":{"id":"ul0082-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0083","list-style":"none"},"li":"And at the Component, the SQL statement would be:"}}}},{"@attributes":{"id":"p-0446","num":"0592"},"tables":{"@attributes":{"id":"TABLE-US-00076","num":"00076"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Select nFNoteId,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"sFNoteAuthor,"]},{"entry":[{},"dFNoteFinal,"]},{"entry":[{},":"]},{"entry":[{},":"]},{"entry":[{},"From File Note"]},{"entry":[{},"Where sFileNoteSts = \u2018D\u2019"]},{"entry":[{},"And sFNoteAuthor = sAuthor"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"This application runs on the server as a background process or service with no direct interaction with Client applications, so it doesn't need any GUI related security. Basically, its main actions are limited to the generation of new tasks in response to externally generated events or, more specifically, it:\n\n","In this sense, its security is totally dependent on external entities as described below:\n\n","Definition","The Claim Folder manages claim information from first notice through closing and archiving. It does this by providing a structured and easy to use interface that supports multiple business processes for handling claims. The information that it captures is fed to many other components that allow claims professionals to make use of enabling applications that reduce their workload. Because physical claim files are still required, the claim folder provides capabilities that support physical file tracking. It works with the LEGACY system to support all the capabilities that exist within the current system.","The primary processes supported by the Claim Folder are:\n\n","By capturing detailed information on claims, the Claim Folder tries to improve the efficiency of claim professionals in many ways. First, because the information is organized in a logical, easy to use format, there is less digging required to find basic information to support any number of inquiries. Second, the Claim Folder uses its information to support other applications like Forms and Correspondence, so that claim information does not have to be reentered every time it is needed. Third, it provides better ways to find physical files to reduce the time required finding and working with them. Beyond this, there are many other potential uses of claim folder information.","The Claim Folder also tries to overcome some of the current processing requirements that the LEGACY system imposes such as recording losses without claims, requiring policy numbers for claim set-up, requiring reserves for lines, and other restrictions. This will reduce some of the low-value added work required to feed the LEGACY system.","Finally, the Claim Folder organizes and coordinates information on participants and performers so that all people involved in a claim can be identified quickly and easily.","Key Users","Although claim professionals are the primary users of the Claim Folder, any claims professional can utilize the Claim Folder to learn about a claim or answer an inquiry about a claim.","Component Functionality","Because the Claim Folder is the primary entry point for new claims, it needs to capture information necessary to set-up new claims and be able to pass the information to the LEGACY system. Once the information is passed, the LEGACY system owns all information contained in both systems, and it is uneditable in the Claim Folder. However, the Claim Folder has more information than what is contained in the LEGACY system, and therefore allows certain information to be entered and modified once the claim is pushed to the LEGACY system.","The Claim Folder decomposes a claim into different levels that reflect the policy, the insured, the claim, the claimants, and the claimant's lines. Each level has a structured set of information that applies to it. For example, the claim level of the claim has information on the claim status, line of business, and performers. An individual line has information which includes the line type, jurisdiction, and property or vehicle damages. The claimant level contains contact information as well as injury descriptions.","The information at each level is grouped into sections for organization purposes. Each level has a details section that includes the basic information about the level.","The key levels on the Claim Folder and their information sections are:\n\n","Events are triggered in the Claim Folder by performing certain actions like changing a jurisdiction, identifying an injury, or closing a line. Other general events are triggered in the Event Section on most levels by clicking the one that has occurred. These events are processed by the Event Processor and could generate any number of responses. In one embodiment of the present invention, the primary response is to trigger new tasks in the Task Assistant for a claim.","User Interfaces",{"@attributes":{"id":"p-0460","num":"0000"},"ul":{"@attributes":{"id":"ul0098","list-style":"none"},"li":{"@attributes":{"id":"ul0098-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0099","list-style":"none"},"li":["Claim Folder UI","Policy Level\u2014Policy Details Tab","Policy Level\u2014Covered Vehicle Tab","Policy Level\u2014Covered Property Tab","Policy Level\u2014Covered Yacht Tab","Claim level\u2014Claim Details Tab","Claim level\u2014Facts of Loss Tab","Claim level\u2014Events Tab","Claim level\u2014Liability Tab","Line level\u2014Line Details Tab","Line level\u2014Damaged Property Tab","Line level\u2014Damaged Auto Tab","Line level\u2014Damaged Yacht Tab","Line level\u2014Events Tab","Line level\u2014Damages Tab","Line level\u2014Negotiation Tab","Task Assistant","File Notes","Claim History","Search Task Template","Search for Correspondence","Find Claims","Version 7","View File Folder","Print Label"]}}}},"Claim Tree","The claim tree in the Claim Folder window decomposes the claim into policy, insured, claim, claimant, and line levels depending on the specific composition of the claim.","The policy level is always the first node in the claim tree and is identified by the policy number. Before the policy number is entered, the field is listed as \u201cUnknown\u201d. If a claim is uncoded, the field is listed as \u201cUncoded\u201d. Selecting the policy level brings up the policy level tabs in the body of the Claim Folder.","The insured level is always the second node in the claim tree and is identified by the insured's name. Before the insured is identified, the field is listed as \u201cUnknown\u201d. Selecting the insured level brings up the insured participant tabs in the body of the claim folder. Only one insured is listed at this level as identified in the policy level tabs, however, multiple insureds can still be added. Additional insureds are shown in the participant list below the claim tree.","The claim level is always the third node in the claim tree and is identified by the claim number. When the claim level is selected, the claim level tabs appears in the body of the Claim Folder.","After the claim level, all claimants are listed with their associated lines in a hierarchy format. When a claimant is added, a node is added to the tree, and the field identifying the claimant is listed as \u201cUnknown\u201d. Once a participant has been identified, partial or client, the name of the claimant is listed on the level. When the level is selected, the participant level tabs for the claimant is shown in the body of the claim folder.","Line levels are identified by their line type. Before a line type is selected, the line level is listed as \u201cUnknown\u201d. When a line level is selected, the line level tabs for the specific line are shown in the body of the claim folder.","There are several things that can alter the claim tree once it has been set up. First, if a claimant or line is deleted, it is removed from the claim tree. A claim that is marked in error does not change the appearance of the levels. Second, the claim, claimant, and line levels are identified by different icons depending on whether they are pushed to V7 or not. Third, when a line or claimant is offset, it is identified as such.","Participant List","The participant list box contains all the non-claimant and non-insured participants on the claim. (Claimants and insureds are shown in the claim tree and not repeated here.) Participants are shown with their name and role. When a participant is selected, the participant level tabs are displayed in the claim folder.","Claim Folder Menu Items","The claim folder menus contain the actions that a user would need to perform within the claim folder. They can all be accessed through keyboard selection. The menu options become enabled or disabled based on the state of the Claim Folder. The Claim Folder can be in view mode or edit mode for a specific level in the Claim Tree. When the Claim Folder is in edit mode, most options are disabled until the user saves their changes and is returned to view mode. The enabling\/disabling of menu options is also dependent on whether the claim or portions of the claim have been pushed to V7.","Claim Folder Tool Bar","The tool bar represents common action that a user performs that can be easily accessed by clicking the appropriate icon. There are five groups of button on the Claim Folder tool bar that represent, in order, common activities, adding new items to a claim, launching utilities, performing V7 activities, and accessing help functions. The enabling\/disabling of tool bar buttons follows the same logic as for menu items.",{"@attributes":{"id":"p-0471","num":"0663"},"tables":{"@attributes":{"id":"TABLE-US-00077","num":"00077"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Default"]},{"entry":["Control name","Type","Description","Value\/State"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Window Description"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Claim Tree","Tree View","The Claim Tree lists the","The current claim"]},{"entry":[{},{},"policy, insured, all of","tree structure for"]},{"entry":[{},{},"the claimants and their","the selected"]},{"entry":[{},{},"related lines in a claim","claim. The claim"]},{"entry":[{},{},"tree format.","level is selected"]},{"entry":[{},{},{},"and the claim"]},{"entry":[{},{},{},"level tabs are"]},{"entry":[{},{},{},"displayed."]},{"entry":["Participant List","List View","A list of all non-insured","All participants"]},{"entry":[{},{},"and non-claimant","who are not"]},{"entry":[{},{},"participants associated","claimants or"]},{"entry":[{},{},"with a claim.","insureds for the"]},{"entry":[{},{},{},"claim and their"]},{"entry":[{},{},{},"roles"]},{"entry":["Edit Tool Bar Button","Command Button","Changes the tabs for the","Enabled when"]},{"entry":[{},{},"level selected in the","claim is in view"]},{"entry":[{},{},"claim tree or participant","mode."]},{"entry":[{},{},"list view to edit mode."]},{"entry":["Refresh Tool Bar","Command Button","Refreshes the current","Enabled when"]},{"entry":["Button",{},"claim, including all","claim is in view"]},{"entry":[{},{},"Participant and Line","mode."]},{"entry":[{},{},"information."]},{"entry":["Find Tool Bar Button","Command Button","Opens the Claim Search","Enabled"]},{"entry":[{},{},"window to allow the"]},{"entry":[{},{},"user to search for"]},{"entry":[{},{},"another claim"]},{"entry":["Claim Allocation","Command Button","Opens the Claim","Enabled when"]},{"entry":["Tool Bar Button",{},"Allocation window.","claim is in view"]},{"entry":[{},{},{},"mode."]},{"entry":["Manage Physical File","Command Button","Opens the Manage","Enabled when"]},{"entry":["Tool Bar Button",{},"Physical File window,","claim is in view"]},{"entry":[{},{},{},"mode."]},{"entry":["Declare Event Tool","Command Button","Opens the Declare","Enabled when"]},{"entry":["Bar Button",{},"Events window.","claim is in view"]},{"entry":[{},{},{},"mode."]},{"entry":["Claimant Tool Bar","Command Button","Adds claimant and","Enabled when"]},{"entry":["Button",{},"opens Participant tabs in","claim is in view"]},{"entry":[{},{},"edit mode for entry of a","mode. V7 limit"]},{"entry":[{},{},"new claimant level node","for claimants is"]},{"entry":[{},{},{},"999, we will not"]},{"entry":[{},{},{},"edit this here."]},{"entry":["Participant Tool Bar","Command Button","Adds a new participant","Enabled when"]},{"entry":["Button",{},"and opens Participant","claim is in view"]},{"entry":[{},{},"tabs in edit mode.","mode."]},{"entry":["Line Tool Bar Button","Command Button","Adds line and opens","Enabled when"]},{"entry":[{},{},"Line tabs in edit mode","claim is in view"]},{"entry":[{},{},"for entry of a new line","mode and"]},{"entry":[{},{},"level node.","claimant context"]},{"entry":[{},{},{},"selected in claim"]},{"entry":[{},{},{},"tree. V7 limit for"]},{"entry":[{},{},{},"lines is 15 per"]},{"entry":[{},{},{},"claimant, this"]},{"entry":[{},{},{},"button will be"]},{"entry":[{},{},{},"disabled after 15"]},{"entry":[{},{},{},"added."]},{"entry":["Assign Performer","Command Button","Opens Assign Performer","Enabled when"]},{"entry":["Tool Bar Button",{},"window","claim is in view"]},{"entry":[{},{},{},"mode."]},{"entry":["Print Screen Tool Bar","Command Button","Prints the current claim","Enabled"]},{"entry":["Button",{},"folder window."]},{"entry":["Task Assistant Tool","Command Button","Launches Task Assistant","Enabled when"]},{"entry":["Bar Button",{},"for the current claim","claim in view"]},{"entry":[{},{},{},"mode."]},{"entry":["File Notes Tool Bar","Command Button","Launch File Notes for","Enabled when"]},{"entry":["Button",{},"the current claim","claim in view"]},{"entry":[{},{},{},"mode."]},{"entry":["Claim History Tool","Command Button","Launch Claim History","Enabled when"]},{"entry":["Bar Button",{},"for the current claim","claim in view"]},{"entry":[{},{},{},"mode."]},{"entry":["Correspondence Tool","Command Button","Opens Forms and","Enabled when"]},{"entry":["Bar Button",{},"Correspondence window","claim in view"]},{"entry":[{},{},{},"mode."]},{"entry":["Push to V7 Tool Bar","Command Button","Open the terminal","Enabled when"]},{"entry":["Button",{},"emulator window at the","claim is in view"]},{"entry":[{},{},"first V7 setup screen.","mode and claim"]},{"entry":[{},{},{},"status is pre-push"]},{"entry":[{},{},{},"or open and there"]},{"entry":[{},{},{},"are new claimants"]},{"entry":[{},{},{},"or lines to push."]},{"entry":["Make Payment Tool","Command Button","Open the V7 PUEM","Enabled when"]},{"entry":["Bar Button",{},"screen in the terminal","claim had been"]},{"entry":[{},{},"emulator window if a","pushed to V7 and"]},{"entry":[{},{},"claimant or participant","a participant is"]},{"entry":[{},{},"tied to one claimant is","selected."]},{"entry":[{},{},"selected. Otherwise,"]},{"entry":[{},{},"display window that"]},{"entry":[{},{},"requires user to select a"]},{"entry":[{},{},"claimant."]},{"entry":["Help Tool Bar Button","Command Button","Opens Help","Enabled"]},{"entry":["Claim | Edit","Menu Option","Changes Claim tabs into","Enabled when"]},{"entry":[{},{},"Edit mode so that the","claim is in view"]},{"entry":[{},{},"user can make changes","mode."]},{"entry":["Claim | Refresh","Menu Option","Refreshes the current","Enabled when"]},{"entry":[{},{},"claim, including all","claim is in view"]},{"entry":[{},{},"Participant and Line","mode."]},{"entry":[{},{},"information."]},{"entry":["Claim | Find","Menu Option","Opens the Claim Search","Enabled"]},{"entry":[{},{},"window"]},{"entry":["Claim | Save","Menu Option","Save the claim level","Enabled when the"]},{"entry":[{},{},"when it is in edit mode.","claim level is in"]},{"entry":[{},{},{},"edit mode."]},{"entry":["Claim | Claim Status |","Menu Option","Changes the status of","Enabled when"]},{"entry":["First Report",{},"the claim to","claim is in view"]},{"entry":["Complete",{},"\u201cUnassigned\u201d and","mode and claim"]},{"entry":[{},{},"creates First Report","status is \u201cNew\u201d."]},{"entry":[{},{},"Complete Event."]},{"entry":["Claim | Claim Status |","Menu Option","Changes the status of","Enabled when"]},{"entry":["Assignment",{},"the claim to \u201cOpen\u201d and","claim is in view"]},{"entry":["Complete",{},"creates Assignment","mode and claim"]},{"entry":[{},{},"Complete Event.","status is"]},{"entry":[{},{},{},"\u201cUnassigned\u201d."]},{"entry":["Claim | Claim Status |","Menu Option","Initiates the close claim","Enabled when"]},{"entry":["Close",{},"process","claim is in view"]},{"entry":[{},{},{},"mode, V7 claim"]},{"entry":[{},{},{},"status is closed,"]},{"entry":[{},{},{},"and Millennium"]},{"entry":[{},{},{},"Claim Status is"]},{"entry":[{},{},{},"not \u201cClosed\u201d or"]},{"entry":[{},{},{},"\u201cArchived\u201d"]},{"entry":["Claim | Claim Status |","Menu Option","Changes the status of","Enabled when"]},{"entry":["Reopen",{},"the claim to \u201cOpen\u201d.","claim is in view"]},{"entry":[{},{},{},"mode and"]},{"entry":[{},{},{},"\u201cClosed\u201d or"]},{"entry":[{},{},{},"\u201cArchived\u201d."]},{"entry":["Claim | Claim Status |","Menu Option","Marks the current claim","Enabled when"]},{"entry":["Mark In Error",{},"and all of its lines in","claim is in view"]},{"entry":[{},{},"error. Expires all","mode, and not"]},{"entry":[{},{},"participants.","pushed to V7."]},{"entry":["Claim | Allocate","Menu Option","Opens the Claim","Enabled when"]},{"entry":[{},{},"Allocation window.","claim is in view"]},{"entry":[{},{},{},"mode."]},{"entry":["Claim | Manage","Menu Option","Opens Physical File","Enabled when"]},{"entry":["Physical File",{},"window","claim is in view"]},{"entry":[{},{},{},"mode."]},{"entry":["Claim | Declare Event","Menu Option","Opens Declare Event","Enabled when"]},{"entry":[{},{},"window","claim is in view"]},{"entry":[{},{},{},"mode."]},{"entry":["Claim | Close Claim","Menu Option","Closes current claim","Enabled"]},{"entry":["Folder",{},"folder window"]},{"entry":["Edit | Cut","Menu Option","Move selected text to","Disabled"]},{"entry":[{},{},"the clipboard"]},{"entry":["Edit | Copy","Menu Option","Copy selected text to the","Disabled"]},{"entry":[{},{},"clipboard"]},{"entry":["Edit | Paste","Menu Option","Paste text from the","Disabled"]},{"entry":[{},{},"clipboard"]},{"entry":["View | Collapse All","Menu Option","Collapses the claim tree","Enabled"]},{"entry":["View | Expand All","Menu Option","Expand the claim tree","Enabled"]},{"entry":["Policy | Edit","Menu Option","Opens policy tabs in edit","Enabled when"]},{"entry":[{},{},"mode.","claim is in view"]},{"entry":[{},{},{},"mode."]},{"entry":["Policy | Save","Menu Option","Save current policy tab","Enabled when"]},{"entry":[{},{},"information.","policy level is in"]},{"entry":[{},{},{},"edit mode."]},{"entry":["Participant | New |","Menu Option","Opens Participant tabs","Enabled when"]},{"entry":["Claimant",{},"in edit mode for entry of","claim in view"]},{"entry":[{},{},"a new claimant level","mode."]},{"entry":[{},{},"node in the claim tree."]},{"entry":["Participant | New","Menu Option","Opens Participant tabs","Enabled when"]},{"entry":["Insured",{},"in edit mode for entry of","claim in view"]},{"entry":[{},{},"a new insured level node","mode."]},{"entry":[{},{},"in the claim tree."]},{"entry":["Participant | New |","Menu Option","Opens Participant tabs","Enabled when"]},{"entry":["Other",{},"in edit mode for entry of","claim in view"]},{"entry":[{},{},"a new entry in the","mode."]},{"entry":[{},{},"Participant list."]},{"entry":["Participant | Edit","Menu Option","Puts currently selected","Enabled when"]},{"entry":[{},{},"participant tabs into edit","claim is in view"]},{"entry":[{},{},"mode.","mode and"]},{"entry":[{},{},{},"participant"]},{"entry":[{},{},{},"selected in tree or"]},{"entry":[{},{},{},"list box."]},{"entry":["Participant | Save","Menu Option","Saves information","Enabled only"]},{"entry":[{},{},"changed on participant","when a"]},{"entry":[{},{},"tabs and returns claim to","participant level"]},{"entry":[{},{},"view mode.","is in edit mode."]},{"entry":["Participant | Delete","Menu Option","Deletes selected","Enabled only"]},{"entry":[{},{},"participant","when claim is in"]},{"entry":[{},{},{},"view mode and"]},{"entry":[{},{},{},"participant is"]},{"entry":[{},{},{},"selected."]},{"entry":["Line | New","Menu Option","Adds new line to claim","Enabled when"]},{"entry":[{},{},"tree and opens line tabs","claim is in view"]},{"entry":[{},{},"in edit mode.","mode, claimant"]},{"entry":[{},{},{},"has been selected,"]},{"entry":[{},{},{},"and limit of 15"]},{"entry":[{},{},{},"lines per claimant"]},{"entry":[{},{},{},"has not been"]},{"entry":[{},{},{},"exceeded."]},{"entry":["Line | Edit","Menu Option","Puts Line tabs into edit","Enabled when"]},{"entry":[{},{},"mode so that the user","claim is in view"]},{"entry":[{},{},"can change line details","mode and line is"]},{"entry":[{},{},{},"selected."]},{"entry":["Line | Save","Menu Option","Save information","Enabled when a"]},{"entry":[{},{},"entered on line tabs and","line is in edit"]},{"entry":[{},{},"returns claim to view","mode."]},{"entry":[{},{},"mode."]},{"entry":["Line | Change Status |","Menu Option","Changes status of a line","Enabled when"]},{"entry":["Close",{},"in the claim folder to","claim is in view"]},{"entry":[{},{},"\u201cClosed\u201d","mode, a line is"]},{"entry":[{},{},{},"selected, the line"]},{"entry":[{},{},{},"is not closed, and"]},{"entry":[{},{},{},"its V7 status is"]},{"entry":[{},{},{},"closed."]},{"entry":["Line | Change Status |","Menu Option","Changes the status of","Enabled when"]},{"entry":["Reopen",{},"the line selected to","claim is in view"]},{"entry":[{},{},"\u201cOpen\u201d.","mode, a line is"]},{"entry":[{},{},{},"selected, and line"]},{"entry":[{},{},{},"is \u201cClosed\u201d."]},{"entry":["Line | Change Status |","Menu Option","Marks selected line in","Enabled when"]},{"entry":["Mark in Error",{},"error.","claim is in view"]},{"entry":[{},{},{},"mode, a line is"]},{"entry":[{},{},{},"selected, and line"]},{"entry":[{},{},{},"has not been"]},{"entry":[{},{},{},"pushed."]},{"entry":["Line | Allocate","Menu Option","Opens the Claim","Enabled"]},{"entry":[{},{},"Allocation window."]},{"entry":["Performers | Assign","Menu Option","Opens the Assign","Enabled when"]},{"entry":[{},{},"Performers window","claim is in view"]},{"entry":[{},{},{},"mode."]},{"entry":["Performers | View All","Menu Option","Displays all claim","Enabled when"]},{"entry":[{},{},"performers assigned to","claim is in view"]},{"entry":[{},{},"the claim in View","mode."]},{"entry":[{},{},"Performer UI."]},{"entry":["Utilities | Print Screen","Menu Option","Prints current screen.","Enabled"]},{"entry":["Utilities | View Task","Menu Option","Opens Task Assistant","Enabled when"]},{"entry":["Assistant",{},"window for current","claim is in view"]},{"entry":[{},{},"claim.","mode."]},{"entry":["Utilities | Create New","Menu Option","Opens File Notes","Enabled when"]},{"entry":["File Note",{},"window for current","claim is in view"]},{"entry":[{},{},"claim.","mode."]},{"entry":["Utilities | View Claim","Menu Option","Opens Claim History","Enabled when"]},{"entry":["History",{},"window for current","claim is in view"]},{"entry":[{},{},"claim.","mode."]},{"entry":["Utilities | Create","Menu Option","Opens Forms and","Enabled when"]},{"entry":["Correspondence",{},"Correspondence","claim is in view"]},{"entry":[{},{},"window.","mode."]},{"entry":["Version 7 | Push","Menu Option","Launches V7 to start the","Enabled when"]},{"entry":["Claim",{},"push process.","claim is in view"]},{"entry":[{},{},{},"mode and in \u201cPre-"]},{"entry":[{},{},{},"Push\u201d status or"]},{"entry":[{},{},{},"open when there"]},{"entry":[{},{},{},"are unpushed"]},{"entry":[{},{},{},"claimants and"]},{"entry":[{},{},{},"lines."]},{"entry":["Version 7 | Undo","Menu Option","Reverts claim to pre-","Enabled when"]},{"entry":["Push",{},"push status.","claim is in view"]},{"entry":[{},{},{},"mode and status"]},{"entry":[{},{},{},"is \u201cPush-"]},{"entry":[{},{},{},"Pending\u201d."]},{"entry":["Version 7 | Make","Menu Option","Open the V7 PUEM","Enabled when"]},{"entry":["Payment",{},"screen in the terminal","claim had been"]},{"entry":[{},{},"emulator window if a","pushed to V7 and"]},{"entry":[{},{},"claimant or participant","a participant is"]},{"entry":[{},{},"tied to one claimant is","selected."]},{"entry":[{},{},"selected. Otherwise,"]},{"entry":[{},{},"display window that"]},{"entry":[{},{},"requires user to select a"]},{"entry":[{},{},"claimant."]},{"entry":["Help | Contents","Menu Option","Opens help file to","Enabled"]},{"entry":[{},{},"content menu."]},{"entry":["Help | Search For","Menu Option","Open help file to search","Enabled"]},{"entry":["Help On",{},"window."]},{"entry":["Help | About","Menu Option","Opens window","Enabled"]},{"entry":[{},{},"displaying information"]},{"entry":[{},{},"about the application."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Initial","Default","Tah"]},{"entry":[{},"Control Name","Focus","Button","Order"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Window Details"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"77pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Claim Tree","Yes",{},"1"]},{"entry":[{},"Participant List",{},{},"2"]},{"entry":[{},"Claim Menu",{},{},"3"]},{"entry":[{},"Edit Menu",{},{},"4"]},{"entry":[{},"View Menu",{},{},"5"]},{"entry":[{},"Policy Menu",{},{},"6"]},{"entry":[{},"Participant Menu",{},{},"7"]},{"entry":[{},"Line Menu",{},{},"8"]},{"entry":[{},"Performer Menu",{},{},"9"]},{"entry":[{},"Utilities Menu",{},{},"10"]},{"entry":[{},"Version 7 Menu",{},{},"11"]},{"entry":[{},"Help Menu",{},{},"12"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Short Cut","Mnemonic"]},{"entry":["Control Name","Action","Response","Key","Key"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"CAR Diagram"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Claim Tree","Click","Highlights Node in",{},{}]},{"entry":[{},{},"Tree"]},{"entry":[{},{},"Disable participant in"]},{"entry":[{},{},"list view if one selected"]},{"entry":[{},{},"previously"]},{"entry":[{},{},"Shows related tabs in"]},{"entry":[{},{},"view mode."]},{"entry":[{},{},"Enable appropriate"]},{"entry":[{},{},"menu items and tool"]},{"entry":[{},{},"bar buttons."]},{"entry":[{},"Double Click","Level selected in tree"]},{"entry":[{},{},"enters Edit mode."]},{"entry":["All Text Fields","Highlight","Enable Cut and Copy."]},{"entry":["Participant List","Click","Highlights participant"]},{"entry":[{},{},"in list box"]},{"entry":[{},{},"Deselects level in claim"]},{"entry":[{},{},"tree if one selected"]},{"entry":[{},{},"previously"]},{"entry":[{},{},"Shows related tabs in"]},{"entry":[{},{},"view mode."]},{"entry":[{},{},"Enable appropriate"]},{"entry":[{},{},"menu items and tool"]},{"entry":[{},{},"bar buttons."]},{"entry":[{},"Double Click","Participant selected in"]},{"entry":[{},{},"list view enters Edit"]},{"entry":[{},{},"mode."]},{"entry":["Edit Tool Bar Button","Click","Changes the tabs for"]},{"entry":[{},{},"the level selected in the"]},{"entry":[{},{},"claim tree or participant"]},{"entry":[{},{},"list view to edit mode."]},{"entry":["Refresh Tool Bar","Click","Refreshes the current"]},{"entry":["Button",{},"claim, including all"]},{"entry":[{},{},"Participant and Line"]},{"entry":[{},{},"information."]},{"entry":["Find Tool Bar","Click","Opens the Claim"]},{"entry":["Button",{},"Search window to"]},{"entry":[{},{},"allow the user to search"]},{"entry":[{},{},"for another claim"]},{"entry":["Claim Allocation","Click","Opens the Claim"]},{"entry":["Tool Bar Button",{},"Allocation window."]},{"entry":["Manage Physical","Click","Opens the Manage"]},{"entry":["File Tool Bar Button",{},"Physical File window."]},{"entry":["Declare Event Tool","Click","Opens the Declare"]},{"entry":["Bar Button",{},"Events window."]},{"entry":["Claimant Tool Bar","Click","Adds claimant and"]},{"entry":["Button",{},"opens Participant tabs"]},{"entry":[{},{},"in edit mode for entry"]},{"entry":[{},{},"of a new claimant level"]},{"entry":[{},{},"node"]},{"entry":["Participant Tool Bar","Click","Adds new participant"]},{"entry":["Button",{},"and opens Participant"]},{"entry":[{},{},"tabs in edit mode."]},{"entry":["Line Tool Bar","Click","Adds line and opens"]},{"entry":["Button",{},"Line tabs in edit mode"]},{"entry":[{},{},"for entry of a new line"]},{"entry":[{},{},"level node."]},{"entry":["Assign Performer","Click","Opens Assign"]},{"entry":["Tool Bar Button",{},"Performer window"]},{"entry":["Print Screen Tool","Click","Prints the current claim"]},{"entry":["Bar Button",{},"folder window."]},{"entry":["Task Assistant Tool","Click","Launches Task"]},{"entry":["Bar Button",{},"Assistant for the"]},{"entry":[{},{},"current claim"]},{"entry":["File Notes Tool Bar","Click","Launch File Notes for"]},{"entry":["Button",{},"the current claim"]},{"entry":["Claim History Tool","Click","Launch Claim History"]},{"entry":["Bar Button",{},"for the current claim"]},{"entry":["Correspondence","Click","Opens Forms and"]},{"entry":["Tool Bar Button",{},"Correspondence"]},{"entry":[{},{},"window"]},{"entry":["Push to V7 Tool Bar","Click","Open the terminal"]},{"entry":["Button",{},"emulator window at the"]},{"entry":[{},{},"first V7 setup screen."]},{"entry":["Make Payment Tool","Click","Open the V7 PUEM"]},{"entry":["Bar Button",{},"screen in the terminal"]},{"entry":[{},{},"emulator window if a"]},{"entry":[{},{},"claimant or participant"]},{"entry":[{},{},"tied to one claimant is"]},{"entry":[{},{},"selected. Otherwise,"]},{"entry":[{},{},"display window that"]},{"entry":[{},{},"requires user to select a"]},{"entry":[{},{},"claimant."]},{"entry":["Help Tool Bar","Click","Opens Help"]},{"entry":"Button"},{"entry":["Claim | Edit","Click","Changes Claim tabs"]},{"entry":[{},{},"into Edit mode so that"]},{"entry":[{},{},"the user can make"]},{"entry":[{},{},"changes"]},{"entry":["Claim | Refresh","Click","Refreshes the current",{},"Ctrl + R"]},{"entry":[{},{},"claim, including all"]},{"entry":[{},{},"Participant and Line"]},{"entry":[{},{},"information."]},{"entry":["Claim | Find","Click","Opens the Claim",{},"Ctrl + F"]},{"entry":[{},{},"Search window"]},{"entry":["Claim | Save","Click","Save the claim level"]},{"entry":[{},{},"when it is in edit mode."]},{"entry":["Claim | Claim Status","Click","Changes the status of"]},{"entry":["| First Report",{},"the claim to"]},{"entry":["Complete",{},"\u201cUnassigned\u201d and"]},{"entry":[{},{},"creates First Report"]},{"entry":[{},{},"Complete Event."]},{"entry":["Claim | Claim Status","Click","Changes the status of"]},{"entry":["| Assignment",{},"the claim to \u201cOpen\u201d"]},{"entry":["Complete",{},"and creates Assignment"]},{"entry":[{},{},"Complete Event."]},{"entry":["Claim | Claim Status","Click","Initiates the close claim"]},{"entry":["| Close",{},"process"]},{"entry":["Claim | Claim Status","Click","Changes the status of"]},{"entry":["| Reopen",{},"the claim to \u201cOpen\u201d."]},{"entry":["Claim | Claim Status","Click","Marks the current claim"]},{"entry":["| Mark In Error",{},"and all of its lines in"]},{"entry":[{},{},"error. Expires all"]},{"entry":[{},{},"participants."]},{"entry":["Claim | Allocate","Click","Opens the Claim"]},{"entry":[{},{},"Allocation window."]},{"entry":["Claim | Manage","Click","Opens Physical File"]},{"entry":["Physical File",{},"window"]},{"entry":["Claim | Declare","Click","Opens Declare Event"]},{"entry":["Event",{},"window"]},{"entry":["Claim | Close Claim","Click","Closes current claim"]},{"entry":["Folder",{},"folder window"]},{"entry":["Edit | Cut","Click","Move selected text to",{},"Ctrl + X"]},{"entry":[{},{},"the clipboard"]},{"entry":["Edit | Copy","Click","Copy selected text to",{},"Ctrl + C"]},{"entry":[{},{},"the clipboard"]},{"entry":["Edit | Paste","Click","Paste text from the",{},"Ctrl + V"]},{"entry":[{},{},"clipboard"]},{"entry":["View | Collapse All","Click","Collapses the claim tree"]},{"entry":["View | Expand All","Click","Expand the claim tree"]},{"entry":["Policy | Edit","Click","Opens Policy tabs in"]},{"entry":[{},{},"edit mode"]},{"entry":["Policy | Save","Click","Save policy"]},{"entry":[{},{},"information and returns"]},{"entry":[{},{},"tabs to view mode."]},{"entry":["Participant | New |","Click","Opens Participant tabs"]},{"entry":["Claimant",{},"in edit mode for entry"]},{"entry":[{},{},"of a new claimant level"]},{"entry":[{},{},"node in the claim tree."]},{"entry":["Participant | New |","Click","Opens Participant tabs"]},{"entry":["Insured",{},"in edit mode for entry"]},{"entry":[{},{},"of a new insured level"]},{"entry":[{},{},"node in the claim tree."]},{"entry":["Participant | New |","Click","Opens Participant tabs"]},{"entry":["Other",{},"in edit mode for entry"]},{"entry":[{},{},"of a new entry in the"]},{"entry":[{},{},"Participant list."]},{"entry":["Participant | Edit","Click","Puts currently selected"]},{"entry":[{},{},"participant tabs into"]},{"entry":[{},{},"edit mode."]},{"entry":["Participant | Save","Click","Saves information"]},{"entry":[{},{},"changed on participant"]},{"entry":[{},{},"tabs and returns claim"]},{"entry":[{},{},"to view mode."]},{"entry":["Participant | Delete","Click","Deletes selected"]},{"entry":[{},{},"participant"]},{"entry":["Line | New","Click","Adds new line to claim"]},{"entry":[{},{},"tree and opens line tabs"]},{"entry":[{},{},"in edit mode."]},{"entry":["Line | Edit","Click","Puts Line tabs into edit"]},{"entry":[{},{},"mode so that the user"]},{"entry":[{},{},"can change line details"]},{"entry":["Line | Save","Click","Save information"]},{"entry":[{},{},"entered on line tabs and"]},{"entry":[{},{},"returns claim to view"]},{"entry":[{},{},"mode."]},{"entry":["Line | Change Status","Click","Changes status of a line"]},{"entry":["| Close",{},"in the claim folder to"]},{"entry":[{},{},"\u201cClosed\u201d"]},{"entry":["Line | Change Status","Click","Changes the status of"]},{"entry":["| Reopen",{},"the line selected to"]},{"entry":[{},{},"\u201cOpen\u201d."]},{"entry":["Line | Change Status","Click","Marks selected line in"]},{"entry":["| Mark in Error",{},"error."]},{"entry":["Line | Allocate","Click","Opens the Claim"]},{"entry":[{},{},"Allocation window."]},{"entry":["Performers | Assign","Click","Opens the Assign"]},{"entry":[{},{},"Performers window"]},{"entry":["Performers | View","Click","Displays all claim"]},{"entry":["All",{},"performers assigned to"]},{"entry":[{},{},"the claim in View"]},{"entry":[{},{},"Performer UI."]},{"entry":["Utilities | Print","Click","Prints current screen.",{},"Ctrl + P"]},{"entry":"Screen"},{"entry":["Utilities | View Task","Click","Opens Task Assistant"]},{"entry":["Assistant",{},"window for current"]},{"entry":[{},{},"claim."]},{"entry":["Utilities | Create","Click","Opens File Notes"]},{"entry":["New File Note",{},"window for current"]},{"entry":[{},{},"claim."]},{"entry":["Utilities | View","Click","Opens Claim History"]},{"entry":["Claim History",{},"window for current"]},{"entry":[{},{},"claim."]},{"entry":["Utilities | Create","Click","Opens Forms and"]},{"entry":["Correspondence",{},"Correspondence"]},{"entry":[{},{},"window."]},{"entry":["Version 7 | Push","Click","Launches V7 to start"]},{"entry":["Claim",{},"the push process."]},{"entry":["Version 7 | Undo","Click","Reverts claim to pre-"]},{"entry":["Push",{},"push status."]},{"entry":["Version 7 | Make","Click","Open the V7 PUEM"]},{"entry":["Payment",{},"screen in the terminal"]},{"entry":[{},{},"emulator window if a"]},{"entry":[{},{},"claimant or participant"]},{"entry":[{},{},"tied to one claimant is"]},{"entry":[{},{},"selected. Otherwise,"]},{"entry":[{},{},"display window that"]},{"entry":[{},{},"requires user to select a"]},{"entry":[{},{},"claimant."]},{"entry":["Help | Contents","Click","Opens help file to"]},{"entry":[{},{},"content menu."]},{"entry":["Help | Search For","Click","Open help file to search"]},{"entry":["Help On",{},"window."]},{"entry":["Help | About","Click","Opens window"]},{"entry":[{},{},"displaying information"]},{"entry":[{},{},"about the application."]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Control","Data Entity","Edit",{}]},{"entry":["Literal","Length","Type","Tie","Rules*","Error Handling"]},{"entry":{"@attributes":{"namest":"1","nameend":"6","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Data Elements"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Claim Tree",{},"Tree",{}]},{"entry":[{},{},"View"]},{"entry":["- Policy",{},"Tree","Policy"]},{"entry":[{},{},"View","Number"]},{"entry":[{},{},"Node","(Policy)"]},{"entry":["- Insured",{},"Tree","Participant"]},{"entry":[{},{},"View","Preferred"]},{"entry":[{},{},"Node","Name"]},{"entry":[{},{},{},"(Insurance"]},{"entry":[{},{},{},"Involvement)"]},{"entry":["- Claim",{},"Tree","Claim"]},{"entry":[{},{},"View","Number"]},{"entry":[{},{},"Node","(Claim)"]},{"entry":["- Claimant",{},"Tree","Particiapant"]},{"entry":[{},{},"View","Preferred"]},{"entry":[{},{},"Node","Name"]},{"entry":[{},{},{},"(Insurance"]},{"entry":[{},{},{},"Involvement)"]},{"entry":["- Line",{},"Tree","Line Type"]},{"entry":[{},{},"View","(Line)"]},{"entry":["Participant List",{},"List","Participant"]},{"entry":["Box",{},"View","Preferred"]},{"entry":[{},{},{},"Name and"]},{"entry":[{},{},{},"Role"]},{"entry":[{},{},{},"(Insurance"]},{"entry":[{},{},{},"Involvement &"]},{"entry":[{},{},{},"Involvement"]},{"entry":[{},{},{},"Role)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Commit Points"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Claim","| Save Menu Option - Saves all claim level data"]},{"entry":[{},"Policy","| Save Menu Option - Saves all policy level data"]},{"entry":[{},"Participant","| Save Menu Option - Saves all participant level data"]},{"entry":[{},"Line","| Save Menu Option - Saves all line level data"]},{"entry":[{},"Claim","| Close Claim Folder Menu Option - Prompts user to save changes"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0100","list-style":"none"},"li":{"@attributes":{"id":"ul0100-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0101","list-style":"none"},"li":"if in edit mode."}}}},"Definition","Claim history shows information in one user interface that is intended to include all the constituent elements of a claim file. The four types of history included in the component are searchable by common indexing criteria like participant, performer, and claim phase. A caption report can be produced which shows the history selected in a document format.","Value","Claim history provides the users with one common interface through which to view a large variety of information about the claim. It includes all history available on a claim, and is expanded as claim capabilities are built, like incoming mail capture. Users develop customized views of history based on any criteria the history can be indexed by, and these reports are saved as customizable Word documents. The way the history information is indexed provides quick access to pertinent data needed to respond to a variety of requests.","Key Users","All members of the claims organization can use claim history as a way to quickly see all activity performed on a claim. This utility increases the ability to locate key information regarding any claim.","Component Functionality","Claim history is a component that contains a simple process to retrieve history from the other components in the system. It contains no native data itself. Even viewing a history element is done in the component window where the item was first captured.","The second key process of claim history is to produce a caption report of all history elements according to the items the user wants to include.","There are two user interfaces needed for this component that correspond to the two key functions above:\n\n","Definition","The Forms & Correspondence component supports internal and external Claim communication and documentation across all parts of the claims handling process.","The Forms and Correspondence\u2014Create Correspondence function provides the ability to search for a template using various search criteria, select a template for use and then leverage claim data into the selected template.","The Forms and Correspondence\u2014Template Maintenance function is a tool for the librarian to create, delete, and update Correspondence templates and their associated criteria.","Some specific processes supported by Forms & Correspondence are:\n\n","The Forms and Correspondence component supports user in creating documentation.","Leveraging information from the claim directly into correspondence reduces the amount of typing and dictating done to create forms and letters. The typical data available to the templates should include: author, addressee, claim number, date of loss, insured name, policy number, etc. A librarian adds and maintains standardized forms and letters in logical groupings made available for the entire company.","Key Users","Claim employees are the primary users of the Forms and Correspondence component, but it can be used by anyone who has access to the system to create documents using existing templates.","Forms and Correspondence librarians use the system to create, update or remove templates.","Component Functionality","Forms and Correspondence\u2014Create Correspondence","1. Search for a template based on search criteria.","2. Create a correspondence from a template using claim data.","3. Create a correspondence from a template without using claim data.","4. View the criteria for a selected template.","5. View the Microsoft Word template before leveraging any data.","Forms and Correspondence\u2014Template Maintenance","1. Search for a template based on search criteria.","2. Create, duplicate, edit, and delete Correspondence templates and their criteria.","3. Internally test and approve newly created\/edited templates.","4. Properly copy Word templates for NAN distribution.","User Interfaces",{"@attributes":{"id":"p-0488","num":"0000"},"ul":{"@attributes":{"id":"ul0107","list-style":"none"},"li":{"@attributes":{"id":"ul0107-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0108","list-style":"none"},"li":["Search for Correspondence","Correspondence Details","Associate Fields","Maintain Correspondence Search","Correspondence Template Information\u2014Details tab","Correspondence Template Information\u2014Criteria tab","Microsoft Word"]}}}},"Definition","File notes captures the textual information that cannot be gathered in discrete data elements as part of claim data capture. They are primarily a documentation tool, but also are used for internal communication between claim professionals. Users can sort the notes by participant or claim phase (medical, investigation, coverage, etc.) in order to permit rapid retrieval and organization of this textual information.","Value","File notes speeds the retrieval and reporting of claim information. A file notes search utility with multiple indexing criteria provides claim professionals and supervisors with the ability to quickly find a file note written about a particular person or topic. The file notes tool utilizes modern word processing capabilities which speed entry, reduce error, and allow for important information to be highlighted. Furthermore, the categorization and key field search eases the process of finding and grouping file notes. Finally, file notes improves communication as they can be sent back and forth between those involved in managing the claim.","Key Users","All members of the claims organization can utilize file notes. External parties via RMS can view file notes marked General. This utility increases the ability to locate key information regarding a claim. Anyone who wants to learn more about a claim or wants to record information about a claim utilizes the file notes tool.","Component Functionality","File Notes searching is included as part of the claim history component which allows the user to search the historical elements of a claim file including tasks, letters, and significant claim change events.","The user interfaces that are needed for this component are:\n\n","Definition","Address Book is the interface between the claims system and the Client database. The Client application is a new component designed to keep track of people or organizations that interact with RELIANCE for any reason, but claims are most likely the first application to use Client. The Address Book is accessed directly from the Desktop and from the Claim Folder.","The Address Book meets several needs within the claim organization. Although, its primary function is to support the adding of participants to a claim, it acts as a pathway to the Client database for searching out existing participants, and adding new people or organizations to the corporate database.","The Client database maintains information on names, addresses, phone numbers, and other information that always applies to a person or organization no matter what role they play on a claim.","Value","Address Book provides a common definition of people or organizations that interact with RELIANCE, and therefore provides a much more efficient means of capturing this information. Each Client database entry provides the ability to link a person or organization to all the different roles that they play across the organization, and therefore makes retrieving information on a client by client basis quick and easy.","There are many benefits to RELIANCE by having a common address book. Information on people and organizations is leveraged into other activities like enabled tasks that lookup a client's phone numbers when a call needs to be made. Information that has been redundantly stored in the past can be entered once and reused. Once all areas of RELIANCE use the Client application, different areas of the company can share definitions of individuals and organizations.","Component Functionality","Address Book allows users to add, edit and delete records from the Client database. It also provides a robust search facility, including phonetic name searches to find people contained in the Client database.","There are two primary user interfaces for the Address Book:\n\n","The Address Book is created concurrently with the Client application to make sure that a consistent design approach is followed.","Key Users","All members of the claim organization use the Address Book to look up information on people and organizations in the client database. Those who set up and handle claims use the Address Book to identify participants.","User Interfaces",{"@attributes":{"id":"p-0503","num":"0000"},"ul":{"@attributes":{"id":"ul0113","list-style":"none"},"li":{"@attributes":{"id":"ul0113-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0114","list-style":"none"},"li":["Find Client","Maintain Client"]}}}},"Definition","The Index, or Claim Search, component provides the ability to locate claims within the system using various search criteria. The criteria cover a wider variety of search capabilities than exist today including, but not limited to, claim performers, participants, phonetic name searches, addresses, roles, offices, and lines of business. The search results display selected claim, participant, and performer data to help identify each claim.","The Index component also allows easy navigation to various claim components like the Claim Folder, once a claim has been identified. It can be accessed from the Desktop and from any open Claim Folder.","The Index component is designed to support several business processes within the claim organization. Its functions are critical to improving claim staff productivity and customer service in the following areas:\n\n","Index reduces the time required to find existing claims, and also reduces potential rework from not finding claims when they are needed for matching mail or duplicate checks.","Key Users","Claim employees are the primary users of the Index window, but it can be used by anyone who has access to the system to access claims without having to memorize tracking numbers.","Component Functionality","Index is primarily a robust search engine that quickly and efficiently searches for claims. It is not a component that stores its own data, as it is primarily focused on pointing users more quickly and directly to claim data.","Index is composed of one search window that follows the format of all other search windows in the system.","User Interfaces",{"@attributes":{"id":"p-0511","num":"0000"},"ul":{"@attributes":{"id":"ul0117","list-style":"none"},"li":{"@attributes":{"id":"ul0117-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0118","list-style":"none"},"li":"Find Claims"}}}},"Definition","The Injury component captures versions of a claimant's injuries as they progress. This window captures injury information in the form of discrete data fields, reducing the need for free form text file notes. Capturing data, instead of text, allows the injury to be closely tracked and quickly reported. The data can also serve as feedback statistics, i.e. for building best claims practices and in risk selection. The preferred method of identifying and documenting injuries is the ICD-9 code. The user can enter or search for the ICD-9 code using descriptors or numbers.","Value","Data on every injury is captured and summarized in a consistent, accessible format, making recording and reviewing the case considerably less time consuming and more organized, allowing the adjuster to focus on desired outcomes. This \u201csnapshot\u201d of the current status and history of an injury greatly facilitates handing off or file transfers between claim professionals. Additionally, the discrete data field capture enables the use of events to identify action points in the lifecycle of a claim that has injuries.","Key Users","All members of the claims organization can utilize the Injury component. This component increases the ability to locate and summarize key information regarding an injury.","Component Functionality","Injury is an aspect of participant information, which is related to the claimant participants on the claim. The participant component relates clients to all other claim-related entities. Information on injuries will be related to participant records and displayed at the participant level information in the Claim Folder. New entities are needed to implement injury data capture: injury and ICD-9 search. The Injury component interacts with five other components: Claim Folder-which contains Disability Management data about a claimant; Participant-which lists the individuals associated with the claim; as well as File Notes, Task Assistant and the Event Processor. The injury component also uses Microsoft WORD to create a formatted, historical injury report for a particular individual.","The user interfaces that are needed for this component are:\n\n","Definition",{"@attributes":{"id":"p-0517","num":"0750"},"figref":"FIG. 10","b":["1000","1002","1006","1006","1008","1000","1004"]},"Value","Data on every case is summarized in a consistent, accessible format, making recording and reviewing the case considerably less time consuming and more organized, allowing the adjuster to focus on negotiation strategy and desired outcomes. This \u201csnapshot\u201d of the current status greatly facilitates handing off or file transfers between claim professionals. Additionally, the discrete data field capture enables the use of events to identify action points in a negotiation.","Key Users","All members of the claims organization can utilize Negotiation. This component increases the ability to locate and summarize key information regarding a negotiation.","Component Functionality","Negotiation is a type of resolution activity, which is part of the claim component of the claims entity model. The claim component is the central focus of the claims entity model, because it contains the essential information about a claim. The claim component supports the core claim data capture functionality, first notice processes, and resolution activity for claims. The main types\/classes of data within the claim component are: Claim, Claimant, Line, Claim History, Resolution Activity, Reserve Item, and Reserve Item Change. Three entities are needed to implement negotiation: resolution activity, claim and claim history. There is also interaction between the Negotiation component and the Task Assistant, File Notes and Event Processor components.","The user interfaces needed for negotiation are:\n\n","Supporting user interfaces, which are also part of the Claim Folder, include:\n\n","Definition",{"@attributes":{"id":"p-0523","num":"0762"},"figref":"FIG. 11","b":"1100"},"In one embodiment of the organization component , all employee records are kept in a common database  so that they can be attached to the specific claims they work, located in a claim database . The common information that is kept on the employee record includes name, location, phone, and some minimal organizational context information like office or division. This is the minimum required to support the tracking of performers on claims. The employee information  is then linked  to the claim information  and the databases are updated . Having linked the employees  with the claims  they are working on, the database can be searched by employee or claim .","However, this version of the organization can be expanded to include organization relationships (specifically tracking where an employee falls in the organization structure), groups of individuals as performers for claim assignment, and claim allocation within the organization structure. These capabilities are to support any notion of caseload analysis, management reporting, or automated assignment that would need to be included.","Value","By tracking common definitions of employees across claims, indexing capabilities are improved and performers on claims are accurately tracked.","Key Users","The primary users of the organization capabilities are the administrative personnel who set up performers, as well as the technicians who track who is working a claim.","Component Functionality","The design of the minimum scope of the organization component includes a search window to find employees in the organization and a detail window to see specific information on each employee.","User Interfaces",{"@attributes":{"id":"p-0529","num":"0000"},"ul":{"@attributes":{"id":"ul0125","list-style":"none"},"li":{"@attributes":{"id":"ul0125-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0126","list-style":"none"},"li":["Organization Entity Search","Add\/Edit Organization Entity"]}}}},"Definition",{"@attributes":{"id":"p-0530","num":"0770"},"figref":"FIG. 12","b":["1200","1202","1204","1202"]},"The participant component also allows linkages  to be made between participant and to various items on claims. A doctor can be linked to the claimant they treat and a driver can be linked to the damaged vehicle they were driving.","Once a participant has been added to a claim, additional information  that is specific to that claim can be attached. This information includes injury, employment, and many other types of information that are specific to the role that a person or organization plays in a claim.","The business processes primarily supported by Participant  are:\n\n","The primary users of the Participant components  are those who work directly on processing claims. They are the ones who maintain the participant relationships.","Claims professionals who deal with injuries use the Participant tabs in the claim folder to track injuries and manage disabilities for a better result on the claim.","Value","Because the Participant component  only seeks to define the roles that individuals and organization play across all claims, there is no redundant entry of name, address, and phone information. This is all stored in the Address Book .","The number of potential participant roles that can be defined is virtually limitless, and therefore expandable, as the involvement of additional people and organizations needs to be captured.","Component Functionality","Most participant functionality is executed within the context of the Claim Folder. The Claim Folder contains participants levels in two ways. First, claimants are shown in the claim tree on the left-hand side of the window. Below this, other participants are shown in a list. Selecting any participant displays a set of participant information tabs that displays the following information:\n\n","Only the first two tabs will be consistently displayed for all participants. Other tabs can appear based on the role and characteristics of a participant's involvement in a claim.","Adding or editing participant role information is actually done through the Address Book  search window. The process is as simple as finding the Address Book  record for the intended participant and specifying the role the participant plays in the claim. Once this is done, the participant will be shown in the Claim Folder, and additional information can be added.","The notion of a participant is a generic concept that is not specific to claims alone. It is a based on design pattern that can be expanded as additional claims capabilities are built. Any involvement of an individual or an organization can be modeled this way.","User Interfaces",{"@attributes":{"id":"p-0542","num":"0000"},"ul":{"@attributes":{"id":"ul0131","list-style":"none"},"li":{"@attributes":{"id":"ul0131-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0132","list-style":"none"},"li":["Participant Level\u2014Participant Details Tab","Participant Level\u2014Contact Information Tab","Participant Level\u2014Events Tab","Participant Level\u2014Injury Tab (Injury Component)","Participant Level\u2014Disability Management Tab (Injury Component)","View Participant List"]}}}},"Definition","The Performer component allows organizational entities (individuals, groups, offices, etc.) to be assigned to various roles in handling the claim from report to resolution. The Performer component is utilized on a claim-by-claim basis.","A performer is defined as any individual or group that can be assigned to fulfill a role on a claim.","The Performer component supports the assignment processes within the claim handling process. This goes beyond the assignment of claim at FNOL. This component allows the assignment of work (tasks) as well.","Some specific processes supported by Performer are:\n\n","The Performer component allows the assignment of roles or tasks to individuals or groups. The data about performers resides in a common repository: the Organization component.","The Performer component reduces the time required to find employees, teams or any potential performer, and ensures consistency of data.","Key Users","The primary users of the Performer component are those who work directly on processing claims. They are the ones who maintain the assignment of roles or tasks related to a claim.","Component Functionality","The Performer component supports an informational function and an assignment function.\n\n","Definition","The Task Assistant is the cornerstone of a claim professional's working environment. It provides diary functions at a work step level that allow the management of complex claim events. It enables the consistent execution of claim best practices by assembling and re-assembling all of the tasks that need to be performed for a claim based on detailed claim characteristics. These characteristics come from regulatory compliance requirements, account servicing commitments, and best practices for handling all types of claims. The Task Assistant also provides mechanisms that automate a portion of or all of the work in performing a task to assist the claim professional in completing his or her work. Once a task is completed, the Task Assistant generates a historical record to document the claim handler's actions.","The Task Assistant is . . .\n\n","Within the Task Assistant, claim professionals have the ultimate control to determine if and when tasks need to be completed. They also have the ability to add tasks to the list to represent work they do that is not reflected in standard definitions of tasks in the system. This supports a vision of the claim professional as a knowledgeable worker who spends most of his or her time focused on a successful result through investigation, evaluation, and negotiation of the best possible outcome.","Value","The Task Assistant reduces the time required to handle a claim by providing the claim professional with the automatic scheduling of claim activity. It helps the claim professional remember, perform and record tasks completed for every claim. Completed tasks are self-documenting and remain part of the claim history.","The Task Assistant also ensures the consistent handling of claims throughout the organization, and by doing so can significantly impact expenses and loss costs. Furthermore, it helps ensure regulatory compliance and the fulfillment of account promises. It supports the teamwork required in handling difficult claims as a structure communication mechanism.","The automated enablements for tasks reduce the amount of time claim professionals have to spend on low value-added activities such as writing correspondence. They can therefore spend a larger amount of time investigating, evaluating, and negotiating each claim.","Key Users","While claim professionals are the primary users of the Task Assistant, others use the application as well. The entire claims department utilizes the Task Assistant to structure work and communicate with one another. Team leaders use the Task Assistant to conduct file review and to guide the work of the claim professional. Administrative staff use the Task Assistant as a means to receive work and to communicate the completion of that work. Claim professionals use the Task Assistant to complete work and to request assistance from team leaders and specialty claim professionals.","The Task Assistant requires a new type of user to set-up and maintain the variety of tasks that are created. A task librarian maintains the task library, which contains the list of all the standardized tasks across the organization. The librarian defines rules which cause tasks to be placed on task lists based on claim characteristics, dates which define when tasks are due, and task enablement through other applications.","Component Functionality",{"@attributes":{"id":"p-0559","num":"0843"},"figref":"FIG. 13","b":["1300","1302","1304","1306","1308","1308"]},"The key user interfaces for this component are:\n\n","Behind the functioning of the Task Assistant, the Task Engine continually evaluates messages sent from other components and determines based on the rules established by the task librarian, which tasks should be populated on the Task Assistant. Messages are sent to the Task Assistant when something significant occurs in another component. The messages contain the characteristics the Task Engine needs to evaluate in order to place the proper tasks on the task list.","User Interfaces",{"@attributes":{"id":"p-0562","num":"0000"},"ul":{"@attributes":{"id":"ul0142","list-style":"none"},"li":{"@attributes":{"id":"ul0142-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0143","list-style":"none"},"li":["Task Assistant","Reassign Task","Edit\/Add Task","Clear Task","Mark Task In Error","Build Workplan","Participant Search","Participant Phone Number","Phone Task","Personal Profile","Account Search","Organization Search","Performer Search"]}}}},"Definition",{"@attributes":{"id":"p-0563","num":"0863"},"figref":"FIG. 14","b":["1400","1400"]},{"@attributes":{"id":"p-0564","num":"0864"},"figref":"FIG. 15","b":["1404","1404","1406","1006"]},"The only interface the user sees to these components is the task library , which allows task librarians  to define the tasks and the rules that create them which are used by the Task Engine . Working with these components is almost entirely a function performed by specialists who understand the complexity of the rules involved in ensuring events  and tasks  are handled properly.","The event processor  also manages the communication and data synchronization between new claim components and LEGACY claim systems. This single point of contact effectively encapsulates the complex processes of translation and notification of events between the two systems.","Value","The automated determination of event responses provides enormous benefits to system users by reducing the maintenance they have to perform in ensuring the correct disposition of claims. Users trigger events by the data they enter and the system activities they perform, and the system automatically responds with appropriate automated activities like generating tasks.","The task generation rules defined in the Task Library provide an extremely flexible definition of claim handling processes limited only by the data available in the system on which task creation rules can be based. Process changes can be implemented quickly by task librarians, and enforced through the Task Assistant.","Key Users","Although all claim personnel directly benefit from the functioning of the event processor and task assistant, only specially trained users control the processing of these components. Task Librarians using the Task Library user interface handle the process of defining new tasks and the rules that trigger them in the Task Engine.","Operations personnel who ensure that all events are processed correctly and that the appropriate system resources are available to manage the throughput handle event processing.","Component Functionality","As shown in , the Event Processor  utilizes a common queue  of events  that are populated by any component  of the system to identify what events have occurred. Working this queue, the Event Processor determines the appropriate response for an event and provides information to other components that need to process them. The Event Processor does not process any events itself and maintains clear encapsulation of system responsibilities. For example, an event that affects claim data is processed by the claim component.","The Task Engine  follows a process of evaluating events , determining claim characteristics, and matching the claim's characteristics to tasks defined in the Task Library .","The key user interface for the Task Engine  is the Task Library . The Task Library  maintains the templates that contain the fields and values with which tasks are established. A task template might contain statements like \u201cWhen event=litigation AND line of business=commercial auto, then . . . \u201d Templates also identify what a tasks due date should be and how the task is enabled with other applications.","User Interfaces",{"@attributes":{"id":"p-0574","num":"0000"},"ul":{"@attributes":{"id":"ul0144","list-style":"none"},"li":{"@attributes":{"id":"ul0144-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0145","list-style":"none"},"li":["Search Task Template","Search Triggering Templates","Task Template Details"]}}}},"While various embodiments have been described above, it should be understood that they have been presented by way of example only, and not limitation. Thus, the breadth and scope of a preferred embodiment should not be limited by any of the above described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["The foregoing and other objects, aspects and advantages are better understood from the following detailed description of a preferred embodiment of the invention with reference to the drawings, in which:","Prior Art  is a schematic diagram of the present invention; and",{"@attributes":{"id":"p-0017","num":"0020"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0018","num":"0021"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0019","num":"0022"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0020","num":"0023"},"figref":"FIG. 2D"},{"@attributes":{"id":"p-0021","num":"0024"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0025"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0026"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0027"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0025","num":"0028"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0026","num":"0029"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0027","num":"0030"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0028","num":"0031"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0029","num":"0032"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0030","num":"0033"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0031","num":"0034"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0032","num":"0035"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0033","num":"0036"},"figref":"FIG. 15"}]},"DETDESC":[{},{}]}
