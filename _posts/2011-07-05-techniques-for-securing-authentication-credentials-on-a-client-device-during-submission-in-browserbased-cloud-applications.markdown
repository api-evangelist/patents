---
title: Techniques for securing authentication credentials on a client device during submission in browser-based cloud applications
abstract: Techniques for securing authentication credentials on a client device during submission in browser-based cloud applications are disclosed. In one particular embodiment, the techniques may be realized as a method for securing authentication credentials on a client device comprising: detecting, on the client device, display of an authentication form in a browser window associated with a first flow to a target server; accessing, on the client device, one or more authentication credentials associated with a user of the client device; and submitting, to the target server, the one or more authentication credentials via a second flow to the target server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09117061&OS=09117061&RS=09117061
owner: Symantec Corporation
number: 09117061
owner_city: Mountain View
owner_country: US
publication_date: 20110705
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE DISCLOSURE","BACKGROUND OF THE DISCLOSURE","SUMMARY OF THE DISCLOSURE","DETAILED DESCRIPTION OF EMBODIMENTS"],"p":["The present disclosure relates generally to securing authentication credentials and, more particularly, to techniques for securing authentication credentials on a client device during submission in browser-based cloud applications.","Most modern commercial software products allow online users to access applications (e.g., cloud applications) via web interfaces. Such online users typically access these web interfaces using a browser (e.g., web browser) operating on a client device (e.g., a personal computer). In many cases, access to the applications is granted after authentication credentials (e.g., username, password) are entered into an authentication home page. Unfortunately, various third party applications (e.g., key loggers, hooks) residing on a client device may surreptitiously gain access to these authentication credentials as an online user enters the authentication credentials into the authentication home page.","In view of the foregoing, it may be understood that there may be significant problems and shortcomings associated with authentication protection technologies.","Techniques for securing authentication credentials on a client device during submission in browser-based cloud applications are disclosed. In one particular embodiment, the techniques may be realized as a method for securing authentication credentials on a client device comprising: detecting, on the client device, display of an authentication form in a browser window associated with a first flow to a target server; accessing, on the client device, one or more authentication credentials associated with a user of the client device; and submitting, to the target server, the one or more authentication credentials via a second flow to the target server.","In accordance with other aspects of this particular embodiment, the one or more authentication credentials may include at least one of a username and a password.","In accordance with further aspects of this particular embodiment, detecting display of the authentication form may include identifying one or more authentication fields within the authentication form.","In accordance with additional aspects of this particular embodiment, accessing the one or more authentication credentials may include accessing a pre-established password vault associated with the user.","In accordance with other aspects of this particular embodiment, accessing the one or more authentication credentials may include receiving the one or more authentication credentials via a secure window.","In accordance with further aspects of this particular embodiment, submitting, to the target server, the one or more authentication credentials via the second flow may include inputting one or more random credentials into the authentication form; initiating the submission of the one or more random credentials via the authentication form; detecting the initiation of the submission of the one or more random credentials to the target server via the first flow; cancelling the submission of the one or more random credentials to the target server; replacing the one or more random credentials with the one or more authentication credentials in the authentication form; and submitting the authentication form to the target server.","In accordance with additional aspects of this particular embodiment, the first flow may be associated with a traditional process for submitting the one or more authentication credentials to the target server.","In accordance with other aspects of this particular embodiment, the second flow may be associated with an alternative process for submitting the one or more authentication credentials to the target server.","In accordance with further aspects of this particular embodiment, an authentication request result may be received from the target server.","In accordance with additional aspects of this particular embodiment, the authentication request result may include at least one of an authentication cookie, a redirect instruction, and a document.","In accordance with other aspects of this particular embodiment, the authentication request result may be injected into a requesting document.","In accordance with further aspects of this particular embodiment, a home page associated with the authentication form may be displayed.","In another particular embodiment, the techniques may be realized as an article of manufacture for securing authentication credentials on a client device, the article of manufacture comprising: at least one non-transitory processor readable medium; and instructions stored on the at least one medium; wherein the instructions are configured to be readable from the at least one medium by at least one processor and thereby cause the at least one processor to operate so as to: detect, on the client device, display of an authentication form in a browser window associated with a first flow to a target server; access, on the client device, one or more authentication credentials associated with a user of the client device; and submit, to the target server, the one or more authentication credentials via a second flow to the target server.","In accordance with other aspects of this particular embodiment, the one or more authentication credentials may include at least one of a username and a password.","In another particular embodiment, the techniques may be realized as a system for securing authentication credentials on a client device comprising: one or more processors communicatively coupled to a network, wherein the one or more processors are configured to: detect, on the client device, display of an authentication form in a browser window associated with a first flow to a target server; access, on the client device, one or more authentication credentials associated with a user of the client device; and submit, to the target server, the one or more authentication credentials via a second flow to the target server.","In accordance with other aspects of this particular embodiment, the one or more authentication credentials may include at least one of a username and a password.","In accordance with further aspects of this particular embodiment, the one or more processors may be configured to detect display of the authentication form by identifying one or more authentication fields within the authentication form.","In accordance with additional aspects of this particular embodiment, the one or more processors may be configured to access the one or more authentication credentials by accessing a pre-established password vault associated with the user.","In accordance with other aspects of this particular embodiment, the one or more processors may be configured to access the one or more authentication credentials by receiving the one or more authentication credentials via a secure window.","In accordance with further aspects of this particular embodiment, the one or more processors may be configured to submit, to the target server, the one or more authentication credentials via the second flow by inputting one or more random credentials into the authentication form; initiating the submission of the one or more random credentials via the authentication form; detecting the initiation of the submission of the one or more random credentials to the target server via the first flow; cancelling the submission of the one or more random credentials to the target server; replacing the one or more random credentials with the one or more authentication credentials in the authentication form; and submitting the authentication form to the target server.","The present disclosure will now be described in more detail with reference to embodiments thereof as shown in the accompanying drawings. While the present disclosure is described below with reference to embodiments, it should be understood that the present disclosure is not limited thereto. Those of ordinary skill in the art having access to the teachings herein will recognize additional implementations, modifications, and embodiments, as well as other fields of use, which are within the scope of the present disclosure as described herein, and with respect to which the present disclosure may be of significant utility.","Currently, most internet security mechanisms (e.g., encryption techniques) may be designed to protect authentication credentials (e.g., username, password) during transmission to a server (e.g., a target web server) across the Internet. These internet security mechanisms, however, may fail to provide any protection against third party applications (e.g., key loggers, hooks) that seek to surreptitiously gain access to authentication credentials while an online user enters the authentication credentials into a webpage (e.g., an authentication form) of a web interface (e.g., a web interface that provides access to one or more cloud applications) using a web browser operating on a client device (e.g., personal computer). As a result, authentication credentials located on the client device may be easily accessed.","In one embodiment, certain techniques for securing authentication credentials on a client device during submission in browser-based cloud applications are provided. In such an embodiment, a secure authentication system may operate on a client device to ensure that authentication credentials that are being submitted to a target server via a web browser are protected while on the client device. The secure authentication system may provide such protection by providing an alternate flow (e.g., a flow that bypasses the traditional browser flow and keeps the authentication credentials invisible to other browser plug-ins) for communicating authentication credentials to the target server.","The security features of the secure authentication system may be initiated when display of an authentication form (e.g., a webpage that requests a user to provide authentication credentials) in a browser window is detected on the client device. In certain embodiments, the secure authentication system may detect the display of an authentication form by identifying one or more authentication fields (e.g., a username field, a password field), a submit button, or a combination of both within the authentication form.","Once display of the authentication form is detected, the secure authentication system may access a user's authentication credentials. In one embodiment, the authentication credentials may be accessed in a password vault (e.g., a mechanism configured to securely store usernames and passwords associated with a user) that was previously established by the user. In another embodiment, the authentication credentials may be accessed by providing the user with a secure window for entering the authentication credentials. The secure window may include a non-browser window that is separate from the browser window that is displaying the authentication form.","The secure authentication system may then enter random credentials (e.g., a set of random characters that are similar in appearance to the authentication credentials) into the authentication form displayed on the browser window. The process of submitting the random credentials to the target server via the authentication form (e.g., via the traditional browser flow) may be initiated.","The secure authentication system may then detect and cancel the submission of the random credentials via the authentication form (e.g., cancel the authentication request). Instead of allowing the random credentials to be submitted to the target server, the secure authentication system may replace the random credentials with the authentication credentials in the authentication form. The secure authentication system may then submit the authentication credentials to the target server (e.g., via the alternative flow).","Alternatively, the secure authentication system may parse webpage associated with the authentication form to determine where the webpage would send authentication credentials. The secure authentication system may then mimic the behavior of the webpage to submit the authentication credentials to the target server.","If authentication is successful, the secure authentication system may receive an authentication request result (e.g., an authentication cookie, a redirect instruction, a web document) from the target server. The authentication request result may be injected into a requesting web document to gain access to a homepage of the web interface.","Accordingly, the secure authentication system may effectively protect authentication credentials by not allowing the authentication credentials to be typed into the authentication form (e.g., a traditional browser flow) thereby preventing a third party application from accessing the authentication credentials while or after they are entered.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 1","FIG. 1","FIG. 2"],"b":["100","100","100","110","120","140","140","200","110","120","140","140","150","140","160","1","140","160","1","140","142","144","140","140","170","170","180","1","140","140","110","120","150","140","190","120","122","124","126"]},"With reference to computer system  of , modem , network interface , or some other method may be used to provide connectivity from one or more of client  and client  to network . Client  may be able to access information on server A or server B using, for example, a web browser or other client software. Such a client may allow client  to access data hosted by server A or server B or one of storage devices A()-(N), B()-(N), and\/or ()-(N).","Networks  and  may be local area networks (LANs), wide area networks (WANs), the Internet, cellular networks, satellite networks, or other networks that permit communication between client , client , server A, server B, and other devices communicatively coupled to networks  and . Networks  and  may further include one, or any number, of the types of networks mentioned above operating as a stand-alone network or in cooperation with each other. Networks  and  may utilize one or more protocols of one or more clients or servers to which they are communicatively coupled. Networks  and  may translate to or from other protocols to one or more protocols of network devices. Although networks  and  are each depicted as one network, it should be appreciated that according to one or more embodiments, networks  and  may each comprise a plurality of interconnected networks.","Storage devices A()-(N), B()-(N), and\/or ()-(N) may be network accessible storage and may be local, remote, or a combination thereof to client , client , server A, or server B. Storage devices A()-(N), B()-(N), and\/or ()-(N) may utilize a redundant array of inexpensive disks (\u201cRAID\u201d), magnetic tape, disk, a storage area network (\u201cSAN\u201d), an internet small computer systems interface (\u201ciSCSI\u201d) SAN, a Fibre Channel SAN, a common Internet File System (\u201cCIFS\u201d), network attached storage (\u201cNAS\u201d), a network file system (\u201cNFS\u201d), optical based storage, or other computer accessible storage. Storage devices A()-(N), B()-(N), and\/or ()-(N) may be used for backup, replication, or archival purposes.","According to some embodiments, client  and client  may be a smartphone, PDA, desktop computer, a laptop computer, a server, another computer, or another device coupled via a wireless or wired connection to network . Client  and client  may receive data from user input, a database, a file, a web service, and\/or an application programming interface.","Server A and server B may be web servers, application servers, archival platforms, backup servers, backend servers, network storage devices, media servers, email servers, document management platforms, enterprise search servers, or other devices communicatively coupled to network . Server A and server B may utilize one of storage devices A()-(N), B()-(N), and\/or ()-(N) for the storage of application data, replication data, backup data, or other data. Server A and server E may be hosts, such as an application server, which may process data traveling between client  and client  and a backup platform, a backup process, and\/or storage. According to some embodiments, server A and server B may be platforms used for backing up and\/or archiving data.","Authentication form detector module , authentication credentials collector module , authentication interceptor module , authentication form response module , and authentication request result module  are discussed in further detail below.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 2","b":["200","200","200","212","200","214","217","218","220","222","224","226","228","230","232","233","234","237","238","235","290","235","239","240","242","246","212","228","247","212","230","248","212","250","252"]},"Bus  allows data communication between central processor  and system memory , which may include read-only memory (ROM) or flash memory (neither shown), and random access memory (RAM) (not shown), as previously noted. The RAM may be the main memory into which the operating system and application programs may be loaded. The ROM or flash memory can contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components. Applications resident with computer system  may be stored on and accessed via a computer readable medium, such as a hard disk drive (e.g., fixed disk ), an optical drive (e.g., optical drive ), a floppy disk unit , or other storage medium. For example, authentication form detector module , authentication credentials collector module , and authentication interceptor module  may be resident in system memory .","Storage interface , as with the other storage interfaces of computer system , can connect to a standard computer readable medium for storage and\/or retrieval of information, such as a fixed disk drive . Fixed disk drive  may be a part of computer system  or may be separate and accessed through other interface systems. Modem  may provide a direct connection to a remote server via a telephone link or to the Internet via an internet service provider (ISP). Network interface  may provide a direct connection to a remote server via a direct network link to the Internet via a POP (point of presence). Network interface  may provide such connection using wireless techniques, including digital cellular telephone connection, Cellular Digital Packet Data (CDPD) connection, digital satellite data connection or the like.","Many other devices or subsystems (not shown) may be connected in a similar manner (e.g., document scanners, digital cameras and so on). Conversely, all of the devices shown in  need not be present to practice the present disclosure. The devices and subsystems can be interconnected in different ways from that shown in . Code to implement the present disclosure may be stored in computer-readable storage media such as one or more of system memory , fixed disk , optical disk , or floppy disk . Code to implement the present disclosure may also be received via one or more interfaces and stored in memory. The operating system provided on computer system  may be MS-DOS\u00ae, MS-WINDOWS\u00ae, OS\/2\u00ae, OS X\u00ae, UNIX\u00ae, Linux\u00ae, or another known operating system.","Power manager  may monitor a power level of battery . Power manager  may provide one or more APIs (Application Programming Interfaces) to allow determination of a power level, of a time window remaining prior to shutdown of computer system , a power consumption rate, an indicator of whether computer system is on mains (e.g., AC Power) or battery power, and other power related information. According to some embodiments, APIs of power manager  may be accessible remotely (e.g., accessible to a remote backup management module via a network connection). According to some embodiments, battery  may be an Uninterruptable Power Supply (UPS) located either local to or remote from computer system . In such embodiments, power manager  may provide information about a power level of an UPS.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 3","b":["120","120","122","124","126"]},"The description below describes network elements, computers, and\/or components of a system and method for securing authentication credentials on a client device during submission in browser-based cloud applications that may include one or more modules. As used herein, the term \u201cmodule\u201d may be understood to refer to computing software, firmware, hardware, and\/or various combinations thereof. Modules, however, are not to be interpreted as software which is not implemented on hardware, firmware, or recorded on a processor readable recordable storage medium (i.e., modules are not software per se). The modules may be combined, integrated, separated, and\/or duplicated to support various applications. Also, a function described herein as being performed at a particular module may be performed at one or more other modules and\/or by one or more other devices instead of or in addition to the function performed at the particular module. Further, the modules may be implemented across multiple devices and\/or other components local or remote to one another. Additionally, the modules may be moved from one device and added to another device, and\/or may be included in both devices.","A user may attempt to access one or more applications (e.g., one or more cloud applications) via a web interface using a web browser operating on a client device (e.g., client ). After entering an Uniform Resource Locator (URL) associated with the web interface, an authentication form may be received and displayed in a browser window of the web browser. An authentication form may include any webpage that requests a user to provide (e.g., enter) authentication credentials.","Authentication form detector module  may be configured to detect display of the authentication form in the browser window. In one embodiment, the authentication form detector module  may detect the display of an authentication form by identifying one or more authentication fields, a submit button, or a combination of both within the authentication form. For example, the authentication form detector module  may detect the display of an authentication form by identifying a username field and a submit button within the authentication form. In another example, the authentication form detector module  may detect the display of an authentication form by identifying a username field and a password field within the authentication form. In yet another example, the authentication form detector module  may detect the display of an authentication form by identifying a username field, a password field, and a submit button within the authentication form.","In another embodiment, the authentication form detector module  may detect the display of an authentication form by inspecting the URL navigated to identify the term \u201clogin.\u201d In another embodiment, the authentication form detector module  may detect the display of an authentication form by identifying one or more signatures (e.g., stored externally) of one or more authentication forms. In yet another embodiment, the authentication form detector module  may detect the display of an authentication form in response to a user input. For example, a user may navigate to an authentication form and activate a user input (e.g., click a button) to indicate the display of the authentication form.","The authentication credentials collector module  may be configured to access the user's authentication credentials once the display of an authentication form is detected. In one embodiment, the authentication credentials collector module  may access the authentication credentials in a password vault (e.g., a mechanism configured to securely store usernames and passwords associated with a user) that was previously established by the user. In another embodiment, the authentication credentials collector module  may access the authentication credentials by providing the user with a secure window for entering the authentication credentials. The secure window may include a non-browser window that is separate from the browser window that is displaying the authentication form. For example, the secure window may include a private desktop window that is not susceptible to third party applications (e.g., key loggers, screen-shot takers).","The authentication credentials collector module  may then enter random credentials into the authentication form displayed in the browser window. Random credentials may include a set of random characters that are similar in appearance to the authentication credentials. The authentication credentials collector module  may then initiate the process of submission of the authentication form with the random credentials to a target server (e.g., server A).","The authentication interceptor module  may be configured to detect standard browser navigational events. Accordingly, the authentication interceptor module  may detect the submission of the random credentials via the authentication form. Once submission of the random credentials is detected, the authentication interceptor module  may cancel the submission by canceling an authentication request. Instead of allowing the random credentials to be submitted to the target server, the authentication interceptor module  may replace the random credentials with the authentication credentials in the authentication form. The authentication interceptor module  may then open a separate channel (e.g., a Secure Sockets Layer (SSL)\/Transport Layer Security (TLS) channel) and submit the authentication credentials to the target server via the separate channel.","Alternatively, the authentication interceptor module  may parse the webpage associated with the authentication form to determine where the webpage would send authentication credentials. The authentication interceptor module  may then mimic the behavior of the webpage to submit the authentication credentials to the target server via the separate channel.","If authentication is successful, the authentication interceptor module  may receive an authentication request result (e.g., an authentication cookie, a redirect instruction, a web document) from the target server. The authentication interceptor module  may then inject the authentication request result into the requesting web document to gain access to a homepage of the web interface.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 4","b":["140","140","142","144"]},"The description below describes network elements, computers, and\/or components of a system and method for securing authentication credentials on a client device during submission in browser-based cloud applications that may include one or more modules. As used herein, the term \u201cmodule\u201d may be understood to refer to computing software, firmware, hardware, and\/or various combinations thereof. Modules, however, are not to be interpreted as software which is not implemented on hardware, firmware, or recorded on a processor readable recordable storage medium (i.e., modules are not software per se). The modules may be combined, integrated, separated, and\/or duplicated to support various applications. Also, a function described herein as being performed at a particular module may be performed at one or more other modules and\/or by one or more other devices instead of or in addition to the function performed at the particular module. Further, the modules may be implemented across multiple devices and\/or other components local or remote to one another. Additionally, the modules may be moved from one device and added to another device, and\/or may be included in both devices.","As previously described, a user may attempt to access one or more applications (e.g., one or more cloud applications) via a web interface using a web browser operating on a client device (e.g., client ).","The authentication form response module  may be configured to transmit an authentication form to the client device after receiving a request for the web interface from the client device.","The authentication request result module  may be configured to receive the authentication credentials from the client device. After comparing the authentication credentials to previously stored authentication credentials, the authentication request result module  may generate an authentication request result. If authentication is not successful, the authentication request result may indicate an authentication failure. If, however, authentication is successful, the authentication request result may include any, or a combination, of an authentication cookie, a redirect instruction, and another web document (e.g., using AJAX). The authentication request result module  may then transmit the authentication request result to the client device.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 5","FIG. 5"],"b":["120","506","502","502"]},"The secure authentication system operating on the client device may then access authentication credentials associated the user. In one embodiment, the secure authentication system may access the authentication credentials by providing the user with a secure, non-browser window  for entering the authentication credentials. As illustrated, the non-browser window  may be separate from the browser window  that is displaying the authentication form. For example, the non-browser window  may include a private desktop window that is not susceptible to third party applications (e.g., key loggers, screen-shot takers).",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 6","b":["600","602"]},"At block , display of an authentication form in a browser window associated with a first flow to a target server is detected on the client device. In certain embodiments, the authentication form detector module  may detect the display of an authentication form by identifying one or more authentication fields, a submit button, or a combination of both within the authentication form. For example, the authentication form detector module  may detect the display of an authentication form by identifying a username field and a submit button within the authentication form. In another example, the authentication form detector module  may detect the display of an authentication form by identifying a username field and a password field within the authentication form. In yet another example, the authentication form detector module  may detect the display of an authentication form by identifying a username field, a password field, and a submit button within the authentication form.","At block , one or more authentication credentials associated with a user of the client device is accessed on the client device. In one embodiment, the authentication credentials collector module  may access the authentication credentials in a password vault (e.g., a mechanism configured to securely store usernames and passwords associated with a user) that was previously established by the user. In another embodiment, the authentication credentials collector module  may access the authentication credentials by providing the user with a secure window for entering the authentication credentials.","At block , the one or more authentication credentials are submitted to the target server via a second flow to the target server. For example, the second flow may include a flow that bypasses the traditional browser flow and keeps the authentication credentials invisible to other browser plug-ins.","At block , the method  may end.","At this point it should be noted that securing authentication credentials on a client device during submission in browser-based cloud applications in accordance with the present disclosure as described above may involve the processing of input data and the generation of output data to some extent. This input data processing and output data generation may be implemented in hardware or software. For example, specific electronic components may be employed in an authentication interceptor module or similar or related circuitry for implementing the functions associated with securing authentication credentials on a client device during submission in browser-based cloud applications in accordance with the present disclosure as described above. Alternatively, one or more processors operating in accordance with instructions may implement the functions associated with securing authentication credentials on a client device during submission in browser-based cloud applications in accordance with the present disclosure as described above. If such is the case, it is within the scope of the present disclosure that such instructions may be stored on one or more processor readable storage media (e.g., a magnetic disk or other storage medium), or transmitted to one or more processors via one or more signals embodied in one or more carrier waves.","The present disclosure is not to be limited in scope by the specific embodiments described herein. Indeed, other various embodiments of and modifications to the present disclosure, in addition to those described herein, will be apparent to those of ordinary skill in the art from the foregoing description and accompanying drawings. Thus, such other embodiments and modifications are intended to fall within the scope of the present disclosure. Further, although the present disclosure has been described herein in the context of at least one particular implementation in at least one particular environment for at least one particular purpose, those of ordinary skill in the art will recognize that its usefulness is not limited thereto and that the present disclosure may be beneficially implemented in any number of environments for any number of purposes. Accordingly, the claims set forth below should be construed in view of the full breadth and spirit of the present disclosure as described herein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In order to facilitate a fuller understanding of the present disclosure, reference is now made to the accompanying drawings, in which like elements are referenced with like numerals. These drawings should not be construed as limiting the present disclosure, but are intended to be illustrative only.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
