---
title: Expression-based web logger for usage and navigational behavior tracking
abstract: Configurably storing data in a plurality of files based on expressions and conditions associated with the data. Logging software enables tracking of the navigation pattern of users for selected network properties under specified conditions. The logging software is configurable such that most current and future logging specifications may be fulfilled without any code changes to the logging software.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08051066&OS=08051066&RS=08051066
owner: Microsoft Corporation
number: 08051066
owner_city: Redmond
owner_country: US
publication_date: 20090707
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","EXAMPLES","APPENDIX A"],"p":["Embodiments of the present invention relate to the field of data logging. In particular, embodiments of this invention relate to efficiently filter and organize large amounts of relevant data for storage in a data warehouse.","A data warehouse is a database designed to support decision-making in an organization. A typical data warehouse is batch updated on a periodic basis and contains an enormous amount of data. For example, large retail organizations may store one hundred gigabytes or more of transaction history in a data warehouse. In another example, tracking the usage of different resources or properties (e.g., web sites) across a network involves logging billions of hits every day and storing them in the data warehouse. The data in a data warehouse is typically historical and static and may also contain numerous summaries. It is structured to support a variety of analyses, including elaborate queries on large amounts of data that can require extensive searching.","Existing systems require creation of a new service to log information to different files within the data warehouse. Further, existing systems are restrictive in that they fail to allow customization of the files including customization of the columns in the files. Such systems also limit the log cut frequency to hourly and daily values.","A data warehouse may store user navigation data (e.g., clickstream data). Existing systems track the user navigation patterns by generating cookies and storing relevant information on a client device to be later stored in the data warehouse. Further, the existing systems require creation of a new service to track specific properties (e.g., web pages) or require modification to the properties to be tracked. For example, in existing systems, the individual properties read and write cookies that are stored on the client device. However, such de-centralized systems have to update each of the property pages every time a change in cookie behavior is desired.","Accordingly, a configurable logging system that filters, organizes, and stores a large amount of data is desired to address one or more of these and other disadvantages.","Embodiments of the invention include an expression-based data filtering and storage system that divides data (e.g., log data) into different logical and more manageable portions. The invention is configurable such that logging specifications may be fulfilled by simply modifying configuration information. For example, in a software implementation, no modifications would need to be made to the core software implementing the invention to adjust the logging specifications. The invention further tracks the navigation pattern of users for selected resources under specified conditions (e.g., via the configuration information). For example, the invention includes a central server which reads and writes a cookie with the navigation data to enable centralized behavior tracking such as campaign tracking and click stream preparation. The invention is applicable to any web tracking solution and works as an entry point utility to different web data warehousing and data mining platforms. Further, the invention may be incorporated into existing web servers or application programs such as INTERNET INFORMATION SERVICES brand web server software by Microsoft Corp. of Redmond, Wash.","The invention identifies desired data and only stores the identified data in accordance with the configuration information. In this manner, the invention reduces the amount of memory needed and reduces the complexity of post-storage queries by only storing relevant data. The invention pre-filters received data per configuration information to minimize downstream processing and to enable data sampling prior to storage of the data. In one form, the invention receives data and organizes the data in real-time. The invention also enables data sampling, partitioning, cleaning, and transformation prior to storing the data.","In accordance with one aspect of the invention, a method organizes data prior to storing the data. The method includes accessing configuration information associated with the data to be stored. The configuration information includes at least one expression. The method also includes receiving data including at least one condition, evaluating the expression based on the condition, and storing the received data in accordance with the evaluated expression.","In accordance with another aspect of the invention, one or more computer-readable media have computer-executable components for filtering data prior to storing the data. The components include a configuration component to access configuration information associated with the data to be stored. The configuration information includes at least one expression. The components also include an interface component to receive data including at least one condition. The components also include an expression component to evaluate the expression accessed by the configuration component based on the condition received by the interface component. The components also include a storage component to store the data received by the interface component in accordance with the expression evaluated by the expression component.","In accordance with still another aspect of the invention, a system organizes data prior to storing the data. The data includes at least one condition. The system includes a memory area to store configuration information associated with the data to be stored. The configuration information includes at least one expression. The system also includes a computing device to process data. The system also includes a computer-readable medium that stores computer-executable instructions to be executed on the computing device to evaluate the expression based on the condition and to store the received data in accordance with the evaluated expression.","In accordance with yet another aspect of the invention, a method tracks user behavior. The method includes accessing configuration information including at least one expression defining a specific user navigation path. The method also includes receiving, from a computing device, clickstream data including at least one condition. The method also includes analyzing the clickstream data by evaluating the expression using the condition to determine a relationship between the user navigation path and the clickstream data. The method also includes storing the clickstream data in accordance with the determined relationship.","Alternatively, the invention may comprise various other methods and apparatuses.","Other features will be in part apparent and in part pointed out hereinafter.","Corresponding reference characters indicate corresponding parts throughout the drawings.","Data Warehousing","Referring first to , an exemplary embodiment of the invention includes a client\/server network system  and a data collection and warehousing system .  shows the network system  comprising a plurality of servers  and clients . These computers ,  are connected for high-speed data communications over a network , using well-known networking technology. The Internet is one example of network . Servers  accept requests from large numbers of remote network clients . The data servers  provide responses comprising data that potentially includes graphically formatted information pages. In many cases, the data is in the form of hypertext markup language (HTML) documents. In addition to the servers  and clients , the system of  includes a central collection facility or data warehousing system . The data warehousing system  communicates through network  with other network nodes such as servers  and clients , although other means of communication may also be utilized.","Logging software, executing on servers  or other computing devices (e.g., associated with the data warehouse system ), receives log records from a plurality of servers. Each of the log records represents, for example, a request for a web page. The operation of exemplary logging software of the invention is next described.","Operation of the Logging Software","Referring next to , an exemplary flow chart illustrates operation of intelligent logging software. The logging software organizes data prior to storing the data. For example, the logging software may be configured to only log clickstream data from users who click on banner A then banner B. In another embodiment, the logging software operates to only track server X during interval Y. In particular, the logging software accesses configuration information associated with the data to be stored at . For example, the logging software may read configuration information from a central hierarchical database. The configuration information includes at least one expression. An expression includes a combination of symbols (e.g., identifiers, values, and operators) that yields a result (e.g., a value representing a condition) upon evaluation. The web server establishes the configuration information at some time prior to operation of the logging software. For example, the logging software may receive the configuration information from a user. The logging software receives data (e.g., from a computing device) including at least one condition representing the state of an expression or variable at . The logging software authenticates the computing device and opens a plurality of files to store the received data. For example, the received data may include clickstream web data. The logging software evaluates the expression based on the condition at  and formats the data in accordance with the accessed configuration information at  prior to storing the data per the evaluated expression at . For example, the evaluated expression may indicate that only a portion of the received data should be stored.","In one form, the logging software recursively evaluates portions of the expression using the condition. In another form, the logging software evaluates the expression by forwarding the received data to a filter component to evaluate the expression using the condition. The logging software receives the evaluated expression from the filter component. The logging software stores the received log data by preparing column data responsive to the received data, the evaluated expression, and the configuration information. The logging software stores the prepared column data in a file.","The logging software maintains a history of evaluated expressions to track a sequence of the evaluated expressions. For example, the logging component tracks the user behavior by centrally controlling or otherwise managing the reading and writing of cookies on the computing device. The cookie is associated with the computing device generating the received data and indicates the sequence of the evaluated expressions. The logging software supports multiple and conditional cookies as specified by the configuration information. In one embodiment, the logging software receives and evaluates the received data in real-time. In another embodiment, the logging software batches the received data and analyzes the batched data. The invention enables data sampling prior to storage of the data as well as after storage of the data. The invention also enables data sampling, partitioning, cleaning, and transformation prior to storing the data. One or more computer-readable media have computer-executable instructions for performing the method illustrated in .","Exemplary components of the logging software of the invention are next described.","Structure of the Logging Software","Referring next to , an exemplary block diagram illustrates elements in the logging software  of the invention. While described in the context of a web server  generating notifications , the invention is operable with any web server or other data source. In one embodiment, the logging software  is an Internet server application programming interface (ISAPI) filter (e.g., GenLogFilter) responsive to a filter notification  such as SF_NOTIFY_AUTH_COMPLETE received from the web server . In one example, the web server  sends the notification  to the logging software  just after authenticating the user associated with the data and before preparing the response headers. During startup, the logging software  performs configuration initialization, authentication, and file creation. The logging software  also initializes management of log cut data. Log cut data identifies the circumstances (e.g., time intervals) in which a new file is to be opened. At the specified intervals, the logging software  opens a new file to store data. After startup, the logging software  is ready to receive data.","When the web server  receives a user request, the web server  sends the notification  to the logging software . The logging software  performs various operations responsive to receipt of this notification  such as parsing the raw data (e.g., hypertext transfer protocol data) and preparing the column data. The logging software  also writes the data to the log as specified by the configuration information. The logging software  prepares the set-cookie header using the column data and sends the cookie to the client via a web server  function such as AddResponseHeaders. The logging software  performs the exemplary operations when the notification  is received from the web server . The web server  calls another exposed function such as TerminateFilter to stop execution of the logging software . TerminateFilter also frees all resources associated with the logging software .","Referring again to , an exemplary processing environment organizes data prior to storing the data. The environment includes a memory area  storing configuration information, a computing device , and a computer-readable medium . In one embodiment, one or more computer-readable media such as computer-readable medium  have computer-executable components for filtering data prior to storing the data. The components include a configuration component , an interface component , an expression component , and a storage component . The memory area  stores configuration information associated with the data to be stored. The memory area  may be local to or part of the computing device  or, alternatively or in addition, may be centrally located such that other computing devices may also access the memory area . Further, the memory area  may be the same as or different from the computer-readable medium . The computing device  processes the data (e.g., as received from the web server  directly or via another computing device). The computer-readable medium  stores computer-executable instructions to be executed on the computing device  to evaluate the expression based on the condition. The instructions further execute to store the received data (e.g., in another memory area as a plurality of files) in accordance with the evaluated expression. In one embodiment, the computer-executable instructions execute on the computing device  in real-time to receive the data and to filter the received data prior to storage of the data.","The configuration component  accesses configuration information associated with the data to be stored. The configuration information includes at least one expression. The configuration component , when executed, creates structured data with enumerated values associated therewith based on the received configuration information. For example, the configuration component , when executed, reads the configuration information (e.g., from a registry) and translates the read information into a set of structured data with enumerated values for use by the other components. In one embodiment, the configuration component  reads the configuration information (e.g., from a registry) and validates the read configuration information. The configuration component  assigns default values, enumerates column configurations, and assigns indexes in place of column names. The configuration information is available for use by the system components after being parsed and translated by the configuration component .","The interface component  receives data including at least one condition. The expression component  evaluates the expression based on the condition. The expression component , when executed, performs expression parsing and evaluation of different conditions. The expression component  is capable of evaluating expressions having various operators including, but not limited to, \u201cinclude,\u201d \u201cexclude,\u201d \u201cor,\u201d \u201cand,\u201d \u201ccontains,\u201d \u201cnot contains,\u201d \u201cbeginswith,\u201d \u201cnotbeginsWith,\u201d \u201cendswith,\u201d and \u201cnotendswith.\u201d Depending upon the complexity of the expression, the expression component  creates an expression tree which may be evaluated.","The storage component  stores the received data in accordance with the evaluated expression. The storage component , when executed, performs write operations to the disk. In one example, the storage component  performs the disk write asynchronously using two buffers of two megabytes each. The storage component  writes the data to the disk when the buffer is full for the file is being closed. In a multi-threaded application, the web server  may call the storage component  from different threads simultaneously. The asynchronous implementation of the storage component  achieves thread synchronization.","The computer-executable components of the logging software  also include a scheduling component  to create a file for use by the storage component  to store the received data. The scheduling component , when executed, creates a waitable timer object having a configurable interval (e.g., one minute). When this object is signaled at the interval, it compares the difference between the current time and the time stamp of the currently open file. If this difference matches a configurable threshold, it calls a function to create a new file.","The components further include an authentication component  to obtain user information associated with the data received by the interface component . The authentication component , when executed, decrypts an encrypted authentication cookie received with the data from the web server  to obtain the user identifier and other profile information. The authentication component  returns a data structure populated with the user identifier and profile information responsive to receiving a request from the web server .","The components further include a helper component  to parse the data received by the interface component  for use by the expression component . The helper component , when executed, assists in parsing expressions by storing string values and parsed data. A GenLogFilter main component , when executed, initializes the configuration information, initializes the log files, and initializes log cut management.","Configuration Information","The configuration information or data includes various configurable entries including, but not limited to, those described herein. Other structures, formats, and content of the configuration information not disclosed herein are also within the scope of the invention. The configuration information includes configurable log columns. The columns and their positions are specified from the predefined set of columns or may be defined as expressions. Configuration data is added as \u201ctag=value\u201d or as a separate column. The column delimiter and line delimiter are configured based on the input specifications.","The configuration information also specifies a configurable number of files. The logging software  writes to the multiple files based on the evaluated expression. The evaluated expression is based on the presence of some tag or on some specific value or condition in the data incoming from the web server . Configuration information may also specify an error file to store the log entries that do not qualify for any other log file. A default configuration may provide a default error file which may then be altered by the user depending upon the information needed in the error file. The log records that do not qualify for any other log file are written to this error file. The file name of each log file may be specified based on either some predefined values (e.g., date or hour) and may also have some predefined text.","Configuration information also specifies a frequency to initiate the creation of a new log file (e.g., based on duration in minutes or on the size of the log file). At a specified time or size, for example, the logging software  closes the current log file even if the server is not actively receiving data. In one embodiment, the log cut functionality is implemented in the scheduling component .","In an embodiment in which the configuration information is stored in a registry, the registry entries are stored as subkeys and values of a key such as HKEY_LOCAL_MACHINE\\SOFTWARE\\\\GenLogFilter. Sample configuration data are shown in Appendix A.","Referring next to , an exemplary flow chart illustrates expression evaluation by logging software such as logging software . Expression evaluation is initiated at . If an include condition is present at  but evaluates false at , the received data is not stored at . If an include condition is present at , true at , and an exclude condition is not present at  (or is present at , but not true at ), the received data is stored at  (or stored at ). If an exclude condition is present at  and true at  (whether an include condition is present or true), the received data is not stored at .",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 4"},"Exemplary Expressions and Columns","The log file, cookies, tags, and conditions may be written using the following exemplary expressions. Other expressions not shown below are also within the scope of the invention. In operation, names, constants, and subexpressions are substituted for the italic text shown below.\n\n","The data may be organized into exemplary columns such as shown in Table 1.",{"@attributes":{"id":"p-0044","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary column configuration."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["ClientIP","The IP address of the client."]},{"entry":["UserName","The user name of the client, if anonymous"]},{"entry":[{},"this has the blank value."]},{"entry":["HitDate","The date of the hit in the format mm\/dd\/yyyy."]},{"entry":["HitTime","Time in the format hh:mm:ss"]},{"entry":["ServiceFormat","Has the service name such as W3CSVC1."]},{"entry":["ServerName","Name of the server."]},{"entry":["ServerIP","IP address of the server."]},{"entry":["BytesReceived","Contains the size of data received by the server."]},{"entry":["ServiceStatus","Describes the service status (e.g., 200)."]},{"entry":["Method","Either GET or POST depending upon the request."]},{"entry":["Target","The actual target URL without domain name"]},{"entry":[{},"and query string. E.g., \/c.gif"]},{"entry":["UserAgent","The user agent string"]},{"entry":["Referrer","The referrer header."]},{"entry":["GUID","GUID extracted from the Cookie."]},{"entry":["UserID","User Id if present."]},{"entry":["UserPostalCode","User postal code."]},{"entry":["UserCountry","User country."]},{"entry":["UserGender","User Gender."]},{"entry":["UserBDayPrec","User birthday precision."]},{"entry":["UserRegion","User region."]},{"entry":["UserLangPref","User Language ID"]},{"entry":["UserPreferredEmail","User Email address."]},{"entry":["UserWallet","User wallet flag."]},{"entry":["UserOccupation","User occupation character."]},{"entry":["UserBDay","User birthday in format mm\/dd\/yyyy"]},{"entry":["UserFlags","Four byte flags."]},{"entry":["Partner","Partner string extracted from the COOKIE."]},{"entry":["TQS","The complete query string."]},{"entry":["COOKIE","The complete cookie string."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"The variables shown below may be expanded with the exemplary substitutions listed in Table 2.",{"@attributes":{"id":"p-0046","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Exemplary filename substitutions."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"path :="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"drive:\\directory"]},{"entry":[{},"path\\directory"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"directory :="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"filenamepart..."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"filename :="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"filenamepart..."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"filenamepart :="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"string"]},{"entry":[{},"substitution"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"columnlist :="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"column"]},{"entry":[{},"columnlist, column"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"taglist :="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tag"]},{"entry":[{},"taglist, tag"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"valuelist :="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"expression"]},{"entry":[{},"valuelist, expression"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Name","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["<domain>","The registry specified domain name (see under GenLogFilter"]},{"entry":[{},"key)."]},{"entry":["<service>","The registry specified service name (see under GenLogFilter"]},{"entry":[{},"key)."]},{"entry":["<yyyy>","Four digit year"]},{"entry":["<mm>","2 digit month"]},{"entry":["<dd>","2 digit date"]},{"entry":["<starthh>","2 digit start hour"]},{"entry":["<startmm>","2 digit start min"]},{"entry":["<endhh>","2 digit end hour"]},{"entry":["<endmm>","2 digit end min"]},{"entry":["<server>","Name of the server."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0047","num":"0060"},"figref":"FIG. 5","b":["130","130","130","132","134","136","134","132","136"]},"The computer  typically has at least some form of computer readable media. Computer readable media, which include both volatile and nonvolatile media, removable and non-removable media, may be any available medium that can be accessed by computer . By way of example and not limitation, computer readable media comprise computer storage media and communication media. Computer storage media include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. For example, computer storage media include RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium that can be used to store the desired information and that can be accessed by computer . Communication media typically embody computer readable instructions, data structures, program modules, or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. Those skilled in the art are familiar with the modulated data signal, which has one or more of its characteristics set or changed in such a manner as to encode information in the signal. Wired media, such as a wired network or direct-wired connection, and wireless media, such as acoustic, RF, infrared, and other wireless media, are examples of communication media. Combinations of the any of the above are also included within the scope of computer readable media.","The system memory  includes computer storage media in the form of removable and\/or non-removable, volatile and\/or nonvolatile memory. In the illustrated embodiment, system memory  includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. For example,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media.  also shows a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk  such as a CD-ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a non-volatile memory interface, such as interface .","The drives or other mass storage devices and their associated computer storage media discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies.","A user may enter commands and information into computer  through input devices or user interface selection devices such as a keyboard  and a pointing device  (e.g., a mouse, trackball, pen, or touch pad). Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are connected to processing unit  through a user input interface  that is coupled to system bus , but may be connected by other interface and bus structures, such as a parallel port, game port, or a Universal Serial Bus (USB). A monitor  or other type of display device is also connected to system bus  via an interface, such as a video interface . In addition to the monitor , computers often include other peripheral output devices (not shown) such as a printer and speakers, which may be connected through an output peripheral interface (not shown).","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to computer . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. LAN  and\/or WAN  can be a wired network, a wireless network, a combination thereof, and so on. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and global computer networks (e.g., the Internet).","When used in a local area networking environment, computer  is connected to the LAN  through a network interface or adapter . When used in a wide area networking environment, computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, is connected to system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to computer , or portions thereof, may be stored in a remote memory storage device (not shown). By way of example, and not limitation,  illustrates remote application programs  as residing on the memory device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Generally, the data processors of computer  are programmed by means of instructions stored at different times in the various computer-readable storage media of the computer. Programs and operating systems are typically distributed, for example, on floppy disks or CD-ROMs. From there, they are installed or loaded into the secondary memory of a computer. At execution, they are loaded at least partially into the computer's primary electronic memory. The invention described herein includes these and other various types of computer-readable storage media when such media contain instructions or programs for implementing the steps described below in conjunction with a microprocessor or other data processor. The invention also includes the computer itself when programmed according to the methods and techniques described herein.","For purposes of illustration, programs and other executable program components, such as the operating system, are illustrated herein as discrete blocks. It is recognized, however, that such programs and components reside at various times in different storage components of the computer, and are executed by the data processor(s) of the computer.","Although described in connection with an exemplary computing system environment, including computer , the invention is operational with numerous other general purpose or special purpose computing system environments or configurations. The computing system environment is not intended to suggest any limitation as to the scope of use or functionality of the invention. Moreover, the computing system environment should not be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment. Examples of well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, mobile telephones, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like.","The invention may be described in the general context of computer-executable instructions, such as program modules, executed by one or more computers or other devices. Generally, program modules include, but are not limited to, routines, programs, objects, components, and data structures that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.","An interface in the context of a software architecture includes a software module, component, code portion, or other sequence of computer-executable instructions. The interface includes, for example, a first module accessing a second module to perform computing tasks on behalf of the first module. The first and second modules include, in one example, application programming interfaces (APIs) such as provided by operating systems, component object model (COM) interfaces (e.g., for peer-to-peer application communication), and extensible markup language metadata interchange format (XMI) interfaces (e.g., for communication between web services).","The interface may be a tightly coupled, synchronous implementation such as in Java 2 Platform Enterprise Edition (J2EE), COM, or distributed COM (DCOM) examples. Alternatively or in addition, the interface may be a loosely coupled, asynchronous implementation such as in a web service (e.g., using the simple object access protocol). In general, the interface includes any combination of the following characteristics: tightly coupled, loosely coupled, synchronous, and asynchronous. Further, the interface may conform to a standard protocol, a proprietary protocol, or any combination of standard and proprietary protocols.","The interfaces described herein may all be part of a single interface or may be implemented as separate interfaces or any combination therein. The interfaces may execute locally or remotely to provide functionality. Further, the interfaces may include additional or less functionality than illustrated or described herein.","In operation, computer  executes computer-executable instructions and components such as those illustrated in , , and  to efficiently organize, process and store large amounts of data.","The following examples further illustrate the invention. In one example, logging software such as logging software operates to track user behavior by accessing configuration information defining a specific user navigation path (e.g., as an expression). The logging software receives, from a computing device, clickstream data including at least one condition and analyzes the clickstream data by evaluating the expression using the condition. The analysis determines a relationship between the user navigation path and the clickstream data. In one embodiment, receiving the clickstream data and analyzing the received clickstream data occur in real-time. The logging software formats the clickstream data in accordance with the accessed configuration information (e.g., by separating the clickstream data into columns). In one embodiment, analyzing the received clickstream data includes forwarding the received clickstream data to a filter component to evaluate the expression using the condition and receiving the evaluated expression from the filter component. The logging software stores the clickstream data in accordance with the determined relationship. In addition, the logging software stores the clickstream data by storing a cookie associated with the computing device on the computing device per the evaluated expression. Further, the logging software maintains a sequence of evaluated expressions to track user navigational behavior.","Those skilled in the art will note that the order of execution or performance of the methods illustrated and described herein is not essential, unless otherwise specified. That is, elements of the methods may be performed in any order, unless otherwise specified, and that the methods may include more or less elements than those disclosed herein.","When introducing elements of the present invention or the embodiment(s) thereof, the articles \u201ca,\u201d \u201can,\u201d \u201cthe,\u201d and \u201csaid\u201d are intended to mean that there are one or more of the elements. The terms \u201ccomprising,\u201d \u201cincluding,\u201d and \u201chaving\u201d are intended to be inclusive and mean that there may be additional elements other than the listed elements.","In view of the above, it will be seen that the several objects of the invention are achieved and other advantageous results attained.","As various changes could be made in the above constructions, products, and methods without departing from the scope of the invention, it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.","Exemplary configuration data are shown below.",{"@attributes":{"id":"p-0069","num":"0082"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"[HKEY_LOCAL_MACHINE\\SOFTWARE\\GenLogFilter]"},{"entry":"\u201cLogging Enabled\u201d=dword:00000001"},{"entry":"\u201cDomain\u201d=\u201cc.pageA.net\u201d"},{"entry":"\u201cservice\u201d=\u201cw3svc1\u201d"},{"entry":"[HKEY_LOCAL_MACHINE\\SOFTWARE\\GenLogFilter\\Columns]"},{"entry":"\u201cClientIP\u201d=\u201cClientIP\u201d"},{"entry":"\u201cUserName\u201d=\u201cUserName\u201d"},{"entry":"\u201cHitDate\u201d=\u201cHitDate\u201d"},{"entry":"\u201cHitTime\u201d=\u201cHitTime\u201d"},{"entry":"\u201cServiceFormat\u201d=\u201cServiceFormat\u201d"},{"entry":"\u201cServerName\u201d=\u201cServerName\u201d"},{"entry":"\u201cServerIP\u201d=\u201cServerIP\u201d"},{"entry":"\u201cElapsedTime\u201d=\u201cElapsedTime\u201d"},{"entry":"\u201cBytesReceived\u201d=\u201cBytesReceived\u201d"},{"entry":"\u201cBytesSent\u201d=\u201cBytesSent\u201d"},{"entry":"\u201cServiceStatus\u201d=\u201cServiceStatus\u201d"},{"entry":"\u201cAPIStatus\u201d=\u201cAPIStatus\u201d"},{"entry":"\u201cMethod\u201d=\u201cMethod\u201d"},{"entry":"\u201cTarget\u201d=\u201cTarget\u201d"},{"entry":"\u201cUserAgent\u201d=\u201cUserAgent\u201d"},{"entry":"\u201cReferrer\u201d=\u201cReferrer\u201d"},{"entry":"\u201cGUID\u201d=\u201cGUID\u201d"},{"entry":"\u201cUserID\u201d=\u201cUserID\u201d"},{"entry":"\u201cUserPostalCode\u201d=\u201cUserPostalCode\u201d"},{"entry":"\u201cUserCountry\u201d=\u201cUserCountry\u201d"},{"entry":"\u201cUserGender\u201d=\u201cUserGender\u201d"},{"entry":"\u201cUserBDayPrec\u201d=\u201cUserBDayPrec\u201d"},{"entry":"\u201cUserRegion\u201d=\u201cUserRegion\u201d"},{"entry":"\u201cUserLangPref\u201d=\u201cUserLangPref\u201d"},{"entry":"\u201cUserPreferredEmail\u201d=\u201cUserPreferredEmail\u201d"},{"entry":"\u201cUserWallet\u201d=\u201cUserWallet\u201d"},{"entry":"\u201cUserOccupation\u201d=\u201cUserOccupation\u201d"},{"entry":"\u201cUserBDay\u201d=\u201cUserBDay\u201d"},{"entry":"\u201cPartner\u201d=\u201cPartner\u201d"},{"entry":"\u201cTQS\u201d=\u201cTQS\u201d"},{"entry":"\u201cMyGUID\u201d=\u201cextract CTID from COOKIE\u201d"},{"entry":"\u201cCookie\u201d=\u201cCookie\u201d"},{"entry":"\u201cMyAPID\u201d=\u201cextract APID from TQS\u201d"},{"entry":"[HKEY_LOCAL_MACHINE\\SOFTWARE\\GenLogFilter\\Cookies]"},{"entry":"[HKEY_LOCAL_MACHINE\\SOFTWARE\\GenLogFilter\\Cookies\\conversionCookie]"},{"entry":"\u201cCookie Enabled\u201d=dword:00000001"},{"entry":"\u201cCondition\u201d=\u201cTQS contains APID or TQS contains TPID and COOKIE contains xTag\u201d"},{"entry":"\u201cCookie Type\u201d=\u201cPersistence\u201d"},{"entry":"\u201cCookie Tag\u201d=\u201cMUID\u201d"},{"entry":"\u201cDomain\u201d=\u201c\u201d"},{"entry":"\u201cCookie Value\u201d=\u201cMyAPID\u201d"},{"entry":"[HKEY_LOCAL_MACHINE\\SOFTWARE\\GenLogFilter\\LogFiles]"},{"entry":"[HKEY_LOCAL_MACHINE\\SOFTWARE\\GenLogFilter\\LogFiles\\CLog]"},{"entry":"\u201cFile"},{"entry":"Name\u201d=\u201cin<yyyy><mm><dd>_<starthh><startmm><endhh><endmm>_<SERVER>_<"},{"entry":"DOMAIN>_<service>.log\u201d"},{"entry":"\u201cInclude Condition\u201d=\u201cCOOKIE contains \\\u201cMUID\\\u201d\u201d"},{"entry":"\u201cExclude Condition\u201d=\u201c\u201d"},{"entry":"\u201cColumn Separator\u201d=\u201cCOMMA\u201d"},{"entry":"\u201cColumn"},{"entry":"Order\u201d=\u201cClientIP,UserName,HitDate,HitTime,ServiceFormat,ServerName,ServerIP,Elap"},{"entry":"sedTime,BytesReceived,BytesSent,ServiceStatus,APIStatus,Method,Target,UserAgent,R"},{"entry":"eferrer,GUID,UserID,Partner,TQS\u201d"},{"entry":"\u201cFrequency\u201d=\u201c5min\u201d"},{"entry":"\u201cLine Separator\u201d=\u201cNL\u201d"},{"entry":"\u201cTQSTags\u201d=\u201cizi,icy,ige,iag,ire,ili,iem,iwa,ibdy,ioc\u201d"},{"entry":"\u201cTQSValues\u201d=\u201cUserPostalCode,UserCountry,UserGender,UserBDayPrec,UserRegion,U"},{"entry":"serLangPref,UserPreferredEmail,UserWallet,UserBDay,UserOccupation\u201d"},{"entry":"\u201cenabled\u201d=dword:00000001"},{"entry":"\u201cDirectory\u201d=\u201cc:\\\\wwwlog\u201d"},{"entry":"[HKEY_LOCAL_MACHINE\\SOFTWARE\\GenLogFilter\\LogFiles\\ErrorLog]"},{"entry":"\u201cFile"},{"entry":"Name\u201d=\u201cin<yyyy><mm><dd>_<starthh><startmm><endhh><endmm>_<SERVER>_<"},{"entry":"DOMAIN>_<service>.Error.log\u201d"},{"entry":"\u201cInclude Condition\u201d=\u201cError\u201d"},{"entry":"\u201cExclude Condition\u201d=\u201c\u201d"},{"entry":"\u201cColumn Separator\u201d=\u201cCOMMA\u201d"},{"entry":"\u201cLine Separator\u201d=\u201cNewLine\u201d"},{"entry":"\u201cColumn"},{"entry":"Order\u201d=\u201cClientIP,UserName,HitDate,HitTime,ServiceFormat,ServerName,ServerIP,Elap"},{"entry":"sedTime,BytesReceived,BytesSent,ServiceStatus,APIStatus,Method,Target,UserAgent,R"},{"entry":"eferrer,GUID,UserID,Partner,TQS\u201d"},{"entry":"\u201cFrequency\u201d=\u201c5min\u201d"},{"entry":"\u201cTQSTags\u201d=\u201cizi,icy,ige,iag,ire,ili,iem,iwa,ibdy,ioc\u201d"},{"entry":"\u201cTQSValues\u201d=\u201cUserPostalCode,UserCountry,UserGender,UserBDayPrec,UserRegion,U"},{"entry":"serLangPref,UserPreferredEmail,UserWallet,UserOccupation,UserBDay\u201d"},{"entry":"\u201cEnabled\u201d=dword:00000001"},{"entry":"\u201cDirectory\u201d=\u201cc:\\\\wwwlog\u201d"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
