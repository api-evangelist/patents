---
title: SVC signaling system and method
abstract: The Intelligent Multiservice Access System (IMAS) enables support for the next generation of virtual connections. Regardless of whether the communications lines coupled to the inputs and outputs of the IMAS are based on SVC, PVC, or a combination of PVC and SVC, the IMAS can support SVCs for a more flexible, timely, efficient, and manageable connection. In the more typical configuration, the loop side of the IMAS is PVC-based because the modems do not support SVC signaling, and the telecommunications backbone side is capable of supporting SVC signaling even though existing DSLAMs do not employ SVC signaling logic. With SVC support, the IMAS assists the ATM network in hand crafting an SVC-based connection almost immediately between end users when the originating end user wants to make a call to a destination end user, and tear down that virtual connection almost immediately when that call has completed. The SVC signaling is performed by a proxy signaling agent that resides in the IMAS to give the appearance to the ATM network in the telecommunications backbone that the loop side supports SVC signaling even though the line is PVC-based.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07295566&OS=07295566&RS=07295566
owner: Nortel Networks Ltd.
number: 07295566
owner_city: St. Laurent, Quebec
owner_country: CA
publication_date: 20030509
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["This is a Divisional application of and claims priority from U.S. patent application Ser. No. 09\/223,047, filed Dec. 30, 1998 now U.S. Pat. No. 6,597,689.","1. Field of the Invention","The present invention generally relates to telecommunications networking technology. More particularly, the present invention relates to a scalable network device, such as a switch or a multiplexer (e.g., DSLAM, ATM switch).","2. Description of Related Art","At its most fundamental level, a telecommunications system should provide service between at least two end users with a minimum level of quality that is acceptable for the kind of traffic that is being transmitted between these end users. End users have different needs from the telecommunications system because of the types and volume of traffic between them. One end user could telephone another user for voice communication. Another end user could use a computer and a modem to send an email to another user for data communication. Additionally, another end user could use a computer and a modem to access any number of Web pages on the Internet. Depending on the type of data (e.g., text, graphics, audio, video) that is being accessed, bandwidth requirements will vary. Thus, one end user may have very basic needs with minimal bandwidth and lots of delays, while another end user may have stringent requirements for lots of bandwidth with minimal delays. How can a telecommunications system, and its components, be designed to accommodate the various uses and needs?","Currently, the telecommunications infrastructure comprises network nodes (e.g., ATM switches, routers, other central office switches) that are coupled together. At the edge of this infrastructure are edge nodes (e.g., DSLAMs) for providing telecommunications service to subscribers (e.g., home users, business users, ISPs) via some local loop technology (e.g., ISDN, DSL). As known to those skilled in the art, local loop (or loop) refers to the interface (typically wires) between the subscriber and the telephone company's central office. Some of these network and edge nodes can be combined to create corporate networks and Intranets. These pieces of node equipment are usually installed and located in central offices as well as corporate offices. Communication between or among subscribers is possible through these network and edge nodes which run various communication protocols.","Although the bandwidth on the telecommunications backbone (e.g., DS3, OC3, STS3, or OC12) may be sufficient for all of the various types of traffic generated by subscribers, the bandwidth on the loop side is limited for today's traffic needs. Historically, analog dial-up with analog signaling was more than sufficient for most traffic. Even the digitization of voice, which requires approximately 4,000 Hz bandwidth, posed no problem since the telephone companies provided 64 Kbits\/sec of bandwidth per channel. However, with the rise of the Internet and the increased interest in digital video and audio services, earlier modems were sorely lacking as speeds were as low as 1,200 bits\/sec (V.22) to 33.6 Kbits\/sec (V.34+) to today's 56 Kbits\/sec (U.S. Robotics\/3COM and Lucent\/Rockwell). Even at 56 Kbits\/sec, these modems are still too slow to fully capture digital audio and video services to the end user's satisfaction. Even if modems could use all of the available 64 Kbits\/sec bandwidth provided by the telephone company, users would still be dissatisfied for the latest audio and video digital services. To give the appearance that more traffic was being passed through the lines than was actually being transmitted, several companies developed and implemented compression techniques.","For some time, even before the onset of the Internet, several loop technologies were slowly developed for this market. One such loop technology is ISDN (at 128 Kbits\/sec), which failed to deliver on its promise of better digital service because of the high cost of ISDN equipment and the higher cost of upgrading central office hardware and software. Furthermore, ISDN equipment was difficult to set up and make compatible with existing equipment because of poor diagnostics. The rates set by the public utilities commissions of various states are also very high. As of this writing, however, ISDN still has not disappeared and some service providers are offering ISDN service.","The traditional forms of leased line technologies, including T1 (at 24 channels of 64 Kbits\/sec each for a total bandwidth of 1.544 Mbits\/sec), fractional T1 (where users can get as many T1 channels as desired), and T3 (at 44.736 Mbits\/sec or 28 T1 circuits), were also, of course, available. However, their prohibitively high expense makes these line technologies less attractive to the average subscriber. Recently, the pace of loop technology development has picked up due to the rise and proliferation of Digital Subscriber Line (DSL). Other competing technologies include Cable (CATV) Data Networks and Modems (or cable modems) and fiber optics.","At this point, however, DSL appears to be the front runner for the broadest application across the telephone companies' residential and small business subscriber base. However, DSL may not eliminate other technologies (e.g., T1, T3, ISDN, and cable modem) as the various telephone companies will make these technologies available to those who want them and can afford them. Various DSL technologies are available and they differ in technical operation rather than application. However, ADSL is receiving the most attention for loop technology in general and Internet access in particular. The entire xDSL family is provided below in TABLE A:",{"@attributes":{"id":"p-0012","num":"0011"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE A"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"xDSL Family"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Name","Data Rate","Mode","Physical"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HDSL","1.544","Mbps","Symmetric","Two wire pairs"]},{"entry":["HDSL2","2.048","Mbps","Symmetric","One wire pair"]},{"entry":["SDSL","768","Kbps","Symmetric","One wire pair"]},{"entry":["ADSL","1.5 to 8","Mbps","Down","One wire pair but 18 Kft max"]},{"entry":[{},"16 to 640","Kbps","Up"]},{"entry":["RADSL","1.5 to 8","Mbps","Down","One wire pair but can adapt"]},{"entry":[{},"16 to 640","Kbps","Up","rates to line condition changes"]},{"entry":["CDSL","Up to 1","Mbps","Down","One wire pair and require no"]},{"entry":[{},"16 to 128","Kbps","Up","hardware at CPE premises"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["ISDL","ISDN BRI","Symmetric","One wire pair"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["VDSL","13 to 52","Mbps","Down","1 to 4.5 Kft max and needs"]},{"entry":[{},"1.5 to 6","Mbps","Up","fiber feeder and ATM"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"The first column, \u201cName,\u201d identifies the type of xDSL technology. Refer to the GLOSSARY to obtain the full name from the acronym. The second column, \u201cData Rate,\u201d is the typical maximum rate at which data transfers are accomplished for the various modes (see third column, \u201cMode\u201d) for each xDSL type. While ADSL, RADSL, CDSL, and VDSL are non-symmetric (the downlink CO-to-subscriber rate is usually faster than the uplink subscriber-to-CO rate), HDSL, HDSL2, SDSL, and ISDL are symmetric. The fourth column, \u201cPhysical,\u201d provides a brief description of the distinctive physical layer requirements or properties for each of the xDSL types.","To make DSL work at a central office, a DSL access multiplexer (DSLAM) is needed. However, current DSLAMs are limited. Although the various types of DSL technologies will be implemented, most existing DSLAMs cannot support multiple DSL technologies; that is, a given DSLAM can only support one DSL technology. This limits what the telecommunications providers are willing to do to expand DSL throughout their respective network. Given the shortage of space in central offices today, telecommunications service providers may be unwilling to purchase multiple DSLAMs for all the different types of DSLs that are available. In other cases, these telecommunications service providers may only deploy certain DSL types to be supported by the limited DSLAMs.","Compounding the problem of existing DSLAMs being tied to a particular DSL type is the fact that some existing DSLAMs are also tied to a particular modem modulation technique, either CAP or DMT. A DSLAM that is compatible with both modulation techniques would be desirable.","Another problem with existing DSLAMs is the nature of the virtual connections supported. In order for any two subscribers to communicate, a virtual connection must be set up between them. The end users and the network nodes predefine and maintain a virtual circuit and virtual path through the packet-switched mesh-type network that the end users believe to be a dedicated physically connected circuit. The actual path, however, may change due to routing around down or busy connections through the ATM\/router maze-like network. Regardless of the path, the packets are transferred, in order, over a specific path and arrive at the destination in order. Two types of virtual connections are known\u2014permanent virtual connection (PVC) and switched virtual connection (SVC). Existing DSLAMs do not support SVC because SVCs require signaling logic in the switches and end systems. Existing DSL modems, which are typically located at the end users' locations, do not support SVC signaling.","A permanent virtual connection, or PVC, is a fixed circuit that is defined in advance by a public carrier or a network manager. Thus, all data traffic between two end systems that signed up for a PVC follows a predetermined physical path that makes up the virtual circuit. PVCs have traditionally been tailored for subscription-based services and are typically maintained for a long period of time. A PVC is permanently programmed into a network for continuous use (or as long as the subscriber desires) between end users for multiple sessions. Typical applications include multiple geographically disparate LANs tied together via a PVC to create a WAN so that data traffic can be supported between users of the two LANs.","The fixed nature of the PVC circuit removes setup and disconnect overhead but takes time to initially establish because each end user and node along the path have to be configured with all the PVC parameters by the network management system (e.g., carrier), which may also involve human intervention. Typically, however, the network administrator uses a console which provides a topology of the network and the network administrator has to set the proper routing parameters node by node. This is a tedious and time-consuming process.","The physical and permanent nature of PVCs is a major drawback. If any physical transmission line among the network nodes along the preprogrammed PVC path fails (e.g., the line is physically cut), this PVC-based telecommunications service between the calling parties may not be remedied in a timely fashion.","In contrast, a switched virtual connection, or SVC, is a temporary virtual circuit that lasts as long as the session between end users lasts. If a carrier supports SVCs, it can set up and disconnect SVCs on the fly using SVC signaling. Once the communication for a particular session is complete, the virtual circuit is disconnected. Thus, alternate paths can be set up among sessions between the same two communicating end users.","While PVC is statically set up and torn down by the network management system (e.g., carrier) in a very inefficient and untimely manner, SVCs are set up and torn down dynamically by the SVC signaling equipment at the ATM end users' locations using a UNI signaling protocol. Thus, the SVC parameters are provided to the switches along the path for automatic configuration by the signaling protocols in a distributed fashion. However, as stated above, current DSLAMs do not support SVC signaling primarily because the loop side of the DSLAM is PVC-based. To provide flexibility to the telecommunications service providers, a DSLAM that supports SVC signaling even though the loop side is PVC based is needed. In effect, despite the lack of SVC signaling from the loop side, a DSLAM that can provide \u201cproxy\u201d signaling, i.e., logic in the DSLAM that provides signaling to other network nodes to give the appearance that SVC signaling came from the loop side, is desirable.","Another problem with existing DSLAMs is that they do not support Quality of Service. When a subscriber signs up for some telephone service at a particular Quality of Service, the telecommunications service provider physically sets up the connection. As known to those skilled in the art, Quality of Service (QoS) is a measure of the telephone service quality provided to a subscriber. With respect to ATM, QoS refers to the bundle of parameters that are associated with, at the very least, bandwidth, timing, and cell error\/loss. In particular, the ATM Forum defined certain parameters in its UNI ATM Performance Parameters including bandwidth, cell error ratio, cell block ratio, cell loss ratio, cell transfer delay, mean cell transfer delay, and cell delay variability.","Another problem with existing node equipment is their undesirable blocking effect. As known to those skilled in the art, \u201cblocking\u201d and \u201cnon-blocking\u201d have many definitions. The typical usage of the term \u201cnon-blocking\u201d refers to the situation that when data at a particular bandwidth comes in to one of the input ports of the node, the output ports of the node should provide that data at the same bandwidth. In other words, the node should not block that data. Simply stated, blocking means that a call cannot be completed. Blocking usually occurs when the switching or transmission capacity is not available at that time. The blocking phenomenon typically arises because a telecommunications service provider oversubscribed its services; that is, the total number of subscribers supported by the switching equipment cannot have their full share of bandwidth and services during times of peak usage.","Understandably, no telecommunication service provider designs its system for complete non-blocking capability. This would be too expensive as more and more sophisticated equipment and circuits are needed to provide more and more bandwidth for the given number of subscribers. The telecommunications service provider makes a trade-off decision\u2014what is the provider (and its subscribers) prepared to pay versus what is the provider (and its subscribers) prepared to tolerate in terms of blocked calls or data? More and more telecommunications service providers are willing to make this decision in favor of higher cost to assure its subscribers a higher grade of service. Because oversubscription is a common practice in the industry, most DSLAMs provide blocking, thus eliminating all the bandwidth gains achieved while the data makes its way to these DSLAMs.","Despite these problems associated with blocking and oversubscription, most industry efforts have not been focused on prioritizing the incoming data into service requirements. As mentioned earlier, the various data received by a DSLAM may have specific service requirements (e.g., bandwidth, time synchronization) which may be affected by the blocking phenomenon. To overcome this problem, Quality of Service (QoS) could be implemented to \u201cfairly\u201d prioritize the various data received by the DSLAM so that some data can be serviced before other data, while at the same time, ensuring that all the data received are somehow \u201cfairly\u201d serviced. As known to those skilled in the art, an unexploited feature of ATM is the ATM Forum's ATM service categories. Five different service categories have been defined, including Constant Bit Rate (CBR), Real-Time Variable Bit Rate (rt-VBR), Non-Real-Time Variable Bit Rate (nrt-VBR), Available Bit Rate (ABR), and Unspecified Bit Rate (UBR).","CBR refers to Constant Bit Rate and it is used primarily for those types of data where end systems expect some time synchronization. CBR data requires some predictable response time and a static amount of bandwidth continuously available for the lifetime of the connection. The peak cell rate determines the bandwidth. Typical applications include video conferencing, voice telephony services, and on-demand services.","VBR refers to Variable Bit Rate. It can be either real-time (i.e., rt-VBR) or non-real-time (i.e., nrt-VBR). Real-time VBR is used for connections that transport variable bit rate traffic that relies on time synchronization between end systems. Real-time VBR is dependent on peak cell rate, sustained cell rate, and maximum burst size. Typical applications that use rt-VBR are variable rate compressed video.","Non-real-time VBR is used for connections that transport variable bit rate traffic that does not rely on time synchronization between end systems. However, nrt-VBR requires some guaranteed bandwidth or latency. Typical applications include frame relay interworking. A vast majority of current DSLAMs also do not support extensive Quality of Service (QoS). Accordingly, telecommunications service providers cannot build end-to-end ATM networks over DSL from the subscriber's premises through a carrier ATM backbone network.","ABR refers to Available Bit Rate which is used for connections that transport variable bit rate traffic for which end systems do not expect time synchronization. Beyond a minimum cell rate, the end systems also do not require guarantees of bandwidth or latency. In effect, ABR is generally designed for those traffic that are not time sensitive and expects no service guarantees (beyond minimum cell rate). Flow control mechanisms are used to dynamically adjust the amount of bandwidth available to the user. The peak cell rate determines the maximum possible bandwidth. Typical applications may include TCP\/IP and other LAN-based traffic.","UBR refers to Unspecified Bit Rate is used for connections that transport variable bit rate traffic which does not rely on any time synchronization between end systems. Unlike ABR, flow control mechanisms are not used to dynamically change the available bandwidth that is available to the user. UBR is used primarily for those types of traffic that are very tolerant of delay and cell loss. Typical applications include TCP\/IP and store-and-forward traffic like file transfers and email across the Internet LAN and WAN environments.","As mentioned above, a DSLAM that incorporates QoS to prioritize the various types of incoming data would be desirable. With such QoS support, a DSLAM would be better equipped to handle all the different service requirements of the incoming data.","Accordingly, a need exists in the industry for a system or method that addresses problems raised by currently known DSLAMs and ATM switches.","A whole spectrum of inventive concepts is described herein, including the macro-level network architecture (and process), to the mid-level DSLAM\/ATM switch itself, and the micro-level circuit implementations. In accordance with one embodiment of the present invention, a switching system called Intelligent Multiservice Access System (IMAS) provides DSLAM and ATM functionality in one unit. The major components in the IMAS chassis include line cards and chassis switch cards. With the line cards, the IMAS can be coupled to a plurality of loop technology ports (e.g., xDSL) on one side. With the chassis switch cards, the IMAS can be coupled to a plurality of WAN ports on the telecommunications backbone side for continued connectivity to an ATM network.","On the loop side, different variations of line cards are available so that each line card can support different numbers of ports. Thus, in one embodiment, the number of ports available in each line card ranges from eight to thirty-two. Also, the number of line cards that can be installed in an IMAS ranges from one to eighteen. These numbers are, of course, exemplary and the IMAS can support other numbers of ports and line cards, such as fifty ports per line card and twenty line cards per chassis.","In addition to the plurality of ports on the loop side, each IMAS can also support a plurality of different loop technologies. In one embodiment, the IMAS is a carrier class digital subscriber line (DSL) access concentrator that can support multiple DSL transmission types. Thus, a single IMAS supports ADSL, HDSL, IDSL, and SDSL, for example. Other combinations of xDSL transmission types are supported.","On the telecommunications backbone side, each chassis switch card is, in essence, a full function standalone ATM switch implemented as a single card in the IMAS chassis. Each chassis switch card provides ATM connectivity to the line cards in the chassis. An onboard CPU subsystem contains all functionality required to manage the chassis and perform all ATM processing functions. In one embodiment, two chassis switch cards are used per chassis, with two telecommunications backbone-side ports per chassis switch card. One of the ports in each chassis switch card is in hot standby (or active backup) mode for redundancy purposes in case of failure.","As for the internal data path architecture, the IMAS provides a high capacity non-blocking switch fabric. Depending on the configuration, the IMAS provides a switch fabric for supporting at least 5 Gbps bandwidth of traffic. With this design, oversubscription issues are minimized or eliminated altogether. To illustrate, one embodiment of the present invention is an IMAS with two chassis switch cards and eighteen line cards in the chassis. Each chassis switch card has two telecommunications backbone-side ports (one of which is in active backup mode) and eighteen line card-side ports (one for each of the eighteen line cards). Each line card has two chassis switch card-side ports (a port for each of the two chassis switch cards) and eight DSL-side ports. A representative topology is shown in .","The non-blocking feature will now be discussed for both the downstream and upstream directions. First, the downstream direction will be discussed. In accordance with one embodiment of the present invention, the telecommunications backbone side of the chassis switch cards provides data at a format and data rates that comply with OC3, STS3, T3, or E3. Accordingly, data at bandwidths of 155 Mbps can be provided to each of the chassis switch card's telecommunications backbone-side ports. Each chassis switch card port, including the line card-side ports, supports 155 Mbps via cubit devices (i.e., Transwitch Cubit-Pro TXC-05802). Internally, the chassis switch card uses a shared bus at 640 Mbps. With this design, 155 Mbps data enters and leaves the chassis switch card uncongested in the downstream direction.","For the line cards, each line card-side chassis switch card port delivers 155 Mbps data. These ports are coupled to the two chassis switch card-side ports in each line card. With a standard UTOPIA interface, each chassis switch card-side port in the line card receives (and delivers) 155 Mbps data. A shared bus inside the line card supports 640 Mbps data. Using ADSL as an example, the framers and the ADSL modems support 8 Mbps downstream (telecommunications backbone side to DSL side) and 640 Kbps upstream (DSL side to telecommunications backbone side). In the downstream direction, 155 Mbps data is provided to the line cards and only the particular DSL technology employed limits the bandwidth.","In the upstream direction, assume that each line card having eight DSL ports are fully loaded. At 640 Kbps per ADSL line upstream, each line card receives an aggregate of 5.12 Mbps data (640 Kbps\u00d78 ports per line card). For eighteen line cards, the aggregate bandwidth delivered to the chassis switch cards is 92.16 Mbps (5.12 Mbps\u00d718 line cards). Each line card-side port in the chassis switch card supports 155 Mbps and the shared bus supports 640 Mbps. The output telecommunications backbone side port also supports 155 Mbps data. Thus, the 92.16 Mbps upstream data from the line cards reaches and makes its way out of the chassis switch card uncongested. As illustrated by this example, this non-blocking feature practically minimizes or eliminates oversubscription for some IMAS configurations.","In accordance with another embodiment of the present invention, the IMAS enables support for the next generation of virtual connections. Regardless of whether the communications lines coupled to the inputs and outputs of the IMAS are based on SVC, PVC, or a combination of PVC and SVC, the IMAS can support SVCs for a more flexible, timely, efficient, and manageable connection. In the more typical configuration, the loop side of the IMAS is PVC-based because the modems do not support SVC signaling, and the telecommunications backbone side is capable of supporting SVC signaling even though existing DSLAMs do not employ SVC signaling logic. In another configuration, both the loop side and the telecommunications backbone side are PVC-based. The IMAS supports this configuration.","With SVC support, the IMAS assists the ATM network in hand crafting an SVC-based connection almost immediately between end users when the originating end user wants to make a call to a destination end user, and tear down that virtual connection almost immediately when that call has completed. As described above, PVC call set up and termination were too time consuming, cumbersome, and inefficient. Needless to say, the IMAS supports SVC signaling for call establishment and termination if both the loop side and the telecommunications backbone side are SVC based.","For these non-signaling end systems, SVCs can still be supported using the proxy signaling aspect of the present invention. The proxy signaling aspect of the present invention uses a proxy signaling agent at the IMAS to control the virtual connection\/circuit setup and termination of the non-signaling ATM end system. As mentioned above, proxy signaling calls are made on behalf of xDSL associated devices (e.g., ADSL modems) at the subscriber's side because these devices currently do not support SVC signaling. The proxy signaling agent residing in the IMAS allows those PVC-supported calls directed to the OC3 uplink to be supported by SVC so that session-based virtual paths can be established as needed, without waiting valuable time for a PVC path to be established. As soon as the call (including the SVC signaling) is successful, a data connection is set up between the xDSL port at the IMAS in the central office and the OC3 uplink port. Similarly, an SVC call that had previously been established can be torn down via the same SVC signaling.","Proxy signaling calls are controlled by the proxy signaling group of an IMAS-specific MIB. As known to those skilled in the art, a MIB is a collection of managed objects that are software representations of actual physical parameters of a network device, such as the IMAS, which is used by SNMP agents to configure the device or get information from the device. The IMAS-specific MIB contains the Proxy Signaling Table, the ISP Table, and the Connect Info Table. These tables, which are shown in , , , and , cross reference each other to make the desired SVC connections between subscribers. For example, one subscriber uses a device associated with an xDSL port (e.g., PC with modem at a small business) and the other subscriber is an ISP that provides a number of services, including Internet access. The establishment and termination of proxy signaling calls are controlled by the addition and deletion of information to these tables. The Proxy Signaling Table contains an entry for each xDSL port, VPI and VCI that is to be connected to an ISP\u2014essentially, a call that comes in at one of the xDSL ports is destined for an ISP for which an SVC path must be set up. The ISP Table contains the ATM addresses of the ISPs that the xDSL connected devices (e.g., PC with modem) can connect with. The Connect Info Table contains information necessary to properly format the Setup message used to connect the SVC.","With the proxy signaling in place, the IMAS can use SVC signaling to dynamically negotiate with other nodes (e.g., ATM switches) in the telecommunications backbone for Quality of Service (QoS) and set up the connection. Without the SVC signaling, the system administrator would have to manually set up the path and connection that satisfy the desired QoS for that subscriber. Once negotiated, each node updates its own internal ports-to-virtual connections tables and sends back VCI numbers. When the IMAS receives a VCI number, it also updates its own internal tables so that a proper nodes-to-virtual connections mapping is provided. From this point on, the IMAS uses the negotiated VCI number and other relevant connection information for this particular call session. Once the call has completed, the proxy signaling process in the IMAS terminates the call via manipulation of these three tables.","How is the IMAS controlled and monitored? Generally, a sophisticated network management system (NMS) drives the software components of the IMAS for information collection and hardware configuration. Indeed, the NMS is also used to control and monitor other telecommunications equipment such as the various central office switches, DSLAMs, and ATM switches, besides the IMAS. Network administrators access the NMS and hence the IMAS via management consoles.","Representative tasks performed by the NMS include actively monitoring network resources for the purpose of device configuration, troubleshooting, detecting potential problems, improving performance, documentation, and reporting. The network management system performs other tasks including, but not limited to, autodiscovery of devices on the network; network topology mapping in the form of a graphic map that can be zoomed in or out; and the ability to schedule management tasks or jobs at specific times or dates. Other tasks include data backup, providing security, training users, and setting policies.","To enable the NMS to interface with a manufacturer's equipment, such as the IMAS, the NMS includes some core NMS functionality and an IMAS-specific device manager in the NMS server. This device manager is a device driver-like piece of software that is unique to the manufacturer's equipment. In one embodiment of the present invention, the device manager for the IMAS is called the IMAS device manager.","For data collection, data retrieval, and device configuration, the NMS uses the SNMP protocol and SNMP agents which are installed in various components throughout the IMAS. As known to those skilled in the art, SNMP is a simple request-response messaging protocol for setting parameters and getting information via SNMP agents to allow the NMS and the IMAS to communicate with each other. The core NMS functionality entity and the IMAS device manager in the NMS server can communicate with a master SNMP agent residing in the IMAS.","The master SNMP agent resides in the chassis of the IMAS. This master SNMP agent communicates with other sub-agents that are located in other software components of the IMAS. For example, when the NMS sends a request to obtain configuration information about line card , for example, the IMAS device manager delivers this request to the master SNMP agent in the IMAS. The master SNMP agent multiplexes this and other requests to the appropriate sub-agents for processing. In this example, the master SNMP agent delivers this line card  configuration information request to the sub-agent responsible for line card . This sub-agent then processes this request by delivering configuration information back to the master SNMP agent and then to the NMS server. The network administrator can produce reports based on the collected information that indicate the state of the network. SNMP agents can also generate alarms or traps that warn of problems or performance degradations on any part of the network.","These agents can only process those requests that are associated with a MIB. These MIBs are described in a MIB file which is associated with the core NMS functionality entity and the IMAS device manager to enable the NMS server to communicate with the IMAS.","The IMAS also supports end-to-end ATM over DSL. Because the IMAS is a fully compliant ATM switch that supports UNI 3.1, UNI 4.0, and PNNI 1.0 signaling, service providers can build end-to-end ATM networks over DSL from the subscriber's premise through a carrier ATM backbone network. With fully integrated call admission control (CAC) and multiple queues implementing weighted fair queueing, the telecommunications service provider can deploy high speed DSL bandwidth to various types of subscribers and guarantee Quality of Service. The IMAS concentrates and switches traffic from multiple subscribers utilizing ATM as the layer 2 protocol over the DSL access network to transparently transport layer 3 protocols such as IP and IPX.","These and other embodiments are fully discussed and illustrated in the following sections of the patent specification.","These figures will be used to describe the various embodiments of the present invention in the accompanying text provided below.","This patent specification is divided into five main sections:",{"@attributes":{"id":"p-0089","num":"0088"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"char"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["I.","DEFINITIONS"]},{"entry":["II.","SYSTEM ARCHITECTURE"]},{"entry":["III.","HARDWARE"]},{"entry":["IV.","SOFTWARE"]},{"entry":["V.","GLOSSARY OF ACRONYMS"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"A short preface which provides some general definitions precedes the SYSTEM ARCHITECTURE section and a GLOSSARY OF ACRONYMS follows the SOFTWARE section. This organization is intended to enhance the readability and understanding of the various embodiments of the present invention, rather than limiting the scope of the present invention. The various embodiments of the present invention encompass the whole spectrum of inventive concepts described herein, including the macro-level network architecture (and process), to the mid-level DSLAM itself, and the micro-level circuit implementations.","I. Definitions","Although definitions of particular terms will be provided during the course of the patent specification, certain terms are worth mentioning at the outset because of their use throughout the document.","The telecommunications industry is replete with numerous acronyms that may be unfamiliar to the reader. Although most of these acronyms are standard in the industry and thus are well known to those skilled in the art, some are unique to this specification. Still other acronyms are colloquial in nature. The GLOSSARY located near the end of this specification (immediately preceding the CLAIMS section) should assist the reader in identifying these acronyms.","Some terminology will be defined in the body of this specification. In particular, the specification uses the terms \u201cwire,\u201d \u201cwire line,\u201d \u201cwire\/bus line,\u201d \u201cline,\u201d and \u201cbus.\u201d These terms refer to various electrically conducting lines. Each line may be a single wire between two points or several wires between points. These terms are interchangeable in that a \u201cwire\u201d may comprise one or more conducting lines and a \u201cbus\u201d may also comprise one or more conducting lines. A \u201cline\u201d may also refer to an interface between two software entities, or between a software entity and a hardware\/software boundary interface.","Another term that is worth noting is \u201cswitch fabric,\u201d \u201cswitching fabric,\u201d \u201cswitch core,\u201d or \u201cswitching core.\u201d These terms are all synonymous and their specific meaning is dependent on the context. For example, the switch fabric in the chassis switch card, as explained below, is a 32-bit bus at 20 MHz for a bandwidth of 640 Mbps. The switch fabric of the backplane which includes the interconnecting star-like configuration of thirty-six CSC-to-LIU lines from two chassis switch cards and eighteen line cards has a bandwidth of approximately 5 Gbps. Each line card also has a switch fabric of a 32-bit bus running at 20 MHz for a bandwidth of 640 Mbps.","\u201cTelecommunications backbone\u201d is a term usually used in the context of the side a particular line or port is directed towards. If the port is directed toward the WAN side, WAN ports, other ATM switches, routers, or the Internet side, it is on the \u201ctelecommunications backbone side.\u201d If the port is directed toward the subscribers or loop access technology side, it usually characterized as being on the DSL side or loop side. Again the context clarifies the usage. Other times, specific IMAS components are used to indicate the interface; that is, CSC side or LIU side.","\u201cData\u201d is a term that is used to denote a particular protocol data unit (PDU). For the ATM, data refers to an ATM cell. For frame-based technology, data refers to a frame. Also, depending on the context, data can refer to any piece of data such as a single byte in the 53-byte ATM cell.","In the SOFTWARE section, one term that is used often is \u201csoftware entity,\u201d \u201cSE,\u201d or simply \u201centity.\u201d Essentially, each of these terms represents a component of the software architecture that possesses a unique character or function at varying levels of abstraction. A high level software entity may include other lower level software entities which, together, share some common features. For example, at a high level, a single software entity designated as \u201cIMAS SE\u201d can represent all the software functionality of the IMAS chassis. At a lower level, the IMAS SE can be broken down into a plurality of software entities, where each entity performs a specialized task, such as line card control, SNMP agent, proxy signaling, ILMI, and PNNI.","A software entity (SE) is represented in the drawings by a block or box. A software entity in the system has a well-defined interface through which it interacts with other software entities. In this sense, each software entity has a Service User-Service Provider relationship to the interfacing software entities. The abbreviations that will be used periodically are provided in the GLOSSARY in the section immediately preceding the claims.","II. System Architecture","At the network level, one embodiment of the present invention provides Quality of Service and communication resources among end systems via flexible virtual connections. Within a telecommunications network, several nodes are provided. These nodes can be ATM switches. At the edge of the network are edge devices, such as DSLAMs if the loop technology is xDSL-based. For the most part, the virtual connections among the nodes are PVC, primarily because the subscriber's equipment does not support SVC and SVC signaling. Accordingly, these existing DSLAMs also do not support SVC. However, some ATM switches support SVC and SVC signaling, although they are not widely utilized.","In accordance with one embodiment of the present invention, a DSLAM is provided which supports PVC, proxy SVC signaling, and SVC signaling. With PVC support, this DSLAM can operate with existing PVC loop infrastructure so that a subscriber can communicate with an ISP, for example. So, if the subscriber's equipment does not support SVC signaling, this DSLAM is still operational in the conventional PVC manner. With proxy SVC support, this DSLAM can be coupled to a PVC line on the subscriber side and SVC on the telecommunications backbone side. Because the subscriber's equipment does not support SVC, the DSLAM establishes the connection (and terminates connections) using SVC signaling on behalf of the PVC-supported subscriber. Finally, with SVC support, the DSLAM can provide SVC signaling to dynamically establish and terminate calls, with all the associated benefits of an SVC connection.","With SVC and proxy SVC support, the DSLAM is capable of dynamically communicating with other network nodes to establish and terminate connections on the fly. As part of the communication, the DSLAM can negotiate with other ATM switches for connection set-up and Quality of Service. If the ATM switch cannot provide the desired Quality of Service for the subscriber, the DSLAM selects another virtual path and circuit to an ATM switch that can provide the desired Quality of Service.","This DSLAM contains a chassis switch card (CSC) portion and a line card (LIU) portion. The CSC is located between the telecommunications backbone and the LIU, while the LIU is located between the CSC and the DSL-based lines to the subscribers. Once the data arrives into the DSLAM, the data is not blocked. In particular, in the downstream direction, the no blocking exists in the CSC until it arrives at the LIUs. Similarly, in the upstream direction, the DSLAM can be designed so that no blocking exists in the CSC after it leaves the LIUs.","In the LIU, some speed matching operation is necessary because DSL supports a lower bandwidth than the CSC and the telecommunications backbone. Once the data arrives into the LIUs in the DSLAMs, whether downstream from the telecommunications backbone or upstream from the subscribers via the DSL lines, the DSLAM handles the data based on a priority scheme, called priority queueing mechanism, in accordance with one embodiment of the present invention.","The priority queueing mechanism uses a combination of round robin and weighted fair queueing to resolve data access and bus contention issues by prioritizing which data will be handled and in what order. This prioritization is based on whether the data flow is downstream or upstream and whether the data is directed toward or away from the set of weighted queues in the line cards. Among subscribers, the priority queueing mechanism ensures equal access to the DSLAM's communication resources; that is, the arbiter in the line card uses round robin to process data at all the ports, one port at a time. Once data has been processed in one port, the arbiter moves on to the next port to handle the data associated with this next port, and so on for all the port.","For a given subscriber (or port), the priority queueing mechanism ensures some sort of fairness among the different types of data that are being accessed. Because each type of data may have different Quality of Service requirements (streaming video or audio v. static image), the DSLAM services each type of data in accordance with their respective service requirements. Some data will be services more frequently than others, but in accordance with the fairness aspect of the algorithm, all data will be serviced at some point.","The following discussion provides some background on the telecommunications network and the various protocols and nodes that exist. Several embodiments of the present invention will be discussed in the context of this network discussion.","Telecommunications Backbone and Subscribers","One example of a data communication network is shown in .  does not show the traditional Public Switched Telephone Network (PSTN) at all although some components in this figure are used in the transmission of traditional voice that will eventually run along the PSTN infrastructure. In the data communication network shown in , however, any number of end systems (or end users or end points) can communicate with each other via prearranged protocols as soon as communication resources are allocated to them. Except for the portion of the figure that shows one embodiment of the present invention, namely the Intelligent Multiservice Access System (IMAS)  in a central office (CO) , most of the network components should be familiar to those skilled in the art. Within this network, a user could use a computer and a modem to send an email to another user for data communication. Additionally, the user could use a computer and a modem to access any number of Web pages on the Internet. Depending on the type of data (e.g., text, graphics, audio, video), bandwidth (and Quality of Service) requirements will vary.","Briefly, the communication network shown in  allows many different types of end systems to communicate with each other at varying levels of Quality of Service. Many end systems can be traditional hardware communication devices (e.g., telephones, modems, facsimile machines) and computing systems (e.g., personal computers, terminals, network servers). Applications that run on these computing systems such as email, Web browsers, Web servers, and community-based on-line services (e.g., AOL, CompuServe, Prodigy) are also end systems. An end system can include any combination of these traditional communication devices, computing systems, and applications. In one embodiment, one end system is a subscriber with a computer and modem, while another end system is an ISP.","At one high level, typical end systems are home offices , a private residence , and small offices . These end systems usually have the traditional communication devices such as voice telephones and facsimile machines, as well as computing systems such as the personal computer. The personal computer probably runs various communication-related applications such as email and a Web browser for Internet access. In some end systems, particularly the small office, several computers may exist either in a standalone or network configuration. Other end systems include the corporate network , the Internet  (and also shown as Internet  with an Internet Service Provider (ISP) router). Note that Internet  and Internet  are part of the same Internet.","The corporate network  is typically a corporation\/company (e.g., ABC Corporation) of varying sizes, a government agency, or some on-line service provider (e.g., AOL, DIALOG, LEXIS\/NEXIS). The corporate network  is usually implemented as a local area network (LAN) for intra-building or intra-campus communication. Where the corporate network  extends to multiple buildings or multiple campuses in different geographic locations, the corporate network  can be implemented as a wide area network (WAN) for inter-building or inter-campus communication that extends the individual LANs via common telephone carrier lines. These lines are usually leased lines. These WANs typically employ bridges or routers to enable the communication over the common carrier lines. Usually, only authorized people such as members or employees of these corporate networks  have access to the various information and functionality provided by these corporate networks. Unauthorized people generally do not have access to the entire panoply of services provided by a corporate network . However, unauthorized people have limited access to these corporate networks  via telephone, facsimile, and email. Although the corporate network in  is shown as a single cloud separate, it actually uses resources provided by the telephone company such that dedicated lines run through the central office(s) to interconnect one portion of the corporate network to another portion. Indeed, in , one portion of the corporate network is located on one side of central office  using dedicated leased lines that run through central office  and the other portion of the corporate network is located on the other side of central office  using another set of dedicated leased lines to\/from the central office .","Other end systems can be central offices , , and . Although these central offices are typically means by which a communication resource can be allocated among end systems, central offices also house some functional devices that need to communicate with other functional devices.","This telecommunications network includes some network nodes. Exemplary network nodes include a central offices , , and , ATM switches , router\/terminal server , Service Provider ATM network , and even the ISP routers in Internet \u201cclouds\u201d  and  can be characterized as network nodes.","Routers, in the form of ISP routers, are also provided. Companies or even individuals who want to set up web sites may use an ISP. The ISPs may either host the web site on their own computers or provide all the connections for web servers located at the companies' or individuals' premises. For example, the corporate network  in  may connect to the Internet  over line  which may be leased lines such as T1 lines or T3 lines, depending on the bandwidth requirements. Other lines may be ISDN. Still other lines may be a combination of leased lines and microwave links, where portions of the line may not be readily accessible via land lines.","ISPs via the ISP routers are essentially the gatekeepers to the Internet , . ISPs are organized into local, regional, national, and global ISPs. Access to the Internet is accomplished by dialing up to an access server at the ISP, which then communicates with an ISP router via a Point-to-Point Protocol (PPP) to encapsulate and deliver IP packets. The router forwards these IP packets to the Internet. As known to those skilled in the art, PPP is a serial protocol which allows a computer to connect as a TCP\/IP host to a network through an asynchronous port. PPP, which includes error detection and data protection, provides router-to-router and host-to-network connections over both synchronous and asynchronous circuits.","Loop Technology","In , home office , residence , and small office  are coupled to the central office via lines , , and , respectively. These lines , , and  are simply, for example, two-wire twisted pair copper wire. As explained above in the BACKGROUND section, the sophisticated nature of today's data (e.g., video, audio) has rendered traditional loop technologies nearly unacceptable for Internet access. Despite competition from Cable (CATV) Data Networks and Modems and ISDN, DSL appears to be the front runner for the broadest application across the telephone companies' residential and small business subscriber base. However, DSL may not eliminate other technologies (e.g., T1, T3, ISDN, and cable modem) as the various telephone companies will make these technologies available to those who want them and can afford them. Various DSL technologies are available, as listed above in TABLE A.","In one example of the DSL implementation shown in , the line  between the home office  and the central office  is IDSL, the line  between the residence  and the central office  is ADSL, and the line  between the small office  and the central office  is SDSL or HDSL. For the ADSL line , a splitter  is needed at the residence  to separate voice traffic on line  and data traffic on line . The voice traffic line  interfaces with the existing analog\/voice equipment such as telephones. The data traffic line  interfaces with a personal computer or local area network (LAN) via an ADSL modem (not shown in ).","The central office  also needs a splitter  to separate the voice traffic on line  and data traffic on line . The voice traffic on line  interfaces with the PSTN voice\/circuit switch. The data traffic on line  interfaces with an IP router or ATM switch via an ADSL modem (not shown in ). The IP router or ATM switch allows access to the Internet\/Intranet.","The IMAS","Typically, to make DSL work at the central office , a DSL access multiplexer (DSLAM) is needed. In accordance with one embodiment of the present invention, an Intelligent Multiservice Access System (IMAS)  provides DSLAM functionality and is provided at the central office . As explained later, the IMAS also contains ATM switch functionality. Other IMAS  and  are provided at central offices  and , respectively. The IMAS , for example, is one form of a flexible and multifunctional DSLAM that links the subscriber side of the network (via the multiple xDSLs) with the telecommunications service side of the network such as the Internet, video servers, LANs, and WANs, via EP routers, ATM switches, and other broadband devices. One embodiment of the IMAS  will be provided later in the specification.","As indicated above, the IMAS  interfaces the subscribers to the various services. These various services are provided via ATM switches and IP\/ISP routers. An ATM switch network  is representative of a public ATM network that regional and long distance telephone companies provide. For data traffic, these ATM switches can be installed among central offices and routers\/terminal servers . Service Provider ATM network  is representative of a private ATM network. These private ATM networks like ATM network  can be installed among corporate networks , the Internet , and a central office .","The IMAS  in central office  is coupled to the Service Provider ATM Network  via line . The physical layer standard used on line  to deliver ATM traffic can be DS3\/OC3. DS3 refers to the digital signal hierarchy level 3 which is a T3 equivalent 44.736 Mbps and 672 channels of 64 Kbps per channel (or 28 1.544 Mbps DS1 channels). OC3 is the third level Optical Carrier digital hierarchy of the SONET standard, which defines how digital signals are multiplexed on fiber-optic cable. OC3 allows 155.52 Mbps data rate and 2,016 DS0 channels (DS0 is a single 64 Kbps channel), or conversely, 84 DS1s (24 channels of 64 Kbps each) or 3 DS3 channels. The same principle applies to lines , , , and .","ATM Connection and Negotiation","How is a connection established between end systems (e.g., home PC and website server)? An ATM virtual connection (VC) must be established between these two end systems. The virtual connection is identified by a combination of VPI and VCI. All traffic through the IMAS is routed by virtue of their respective ATM header field which contains a VPI\/VCI connection identifier. The Virtual Path Identifier (VPI) is a 16-bit field in the ATM cell header which indicates the virtual path over which the cell should be routed from the transmitting device to the target device. The Virtual Channel Identifier (VCI) is a 16-bit field identifying the virtual circuit which an ATM cell should travel from the transmitting device to the target device. The combination of the VPI and VCI identifies the connection between two end systems in an ATM network. The ATM switch on the network side of the UNI assigns the values to the VPI and VCI during the connection setup.","As shown in , end system A (e.g., home PC) sends a message to the ATM network to request a bi-directional connection to end system B (e.g., ISP server) with sufficient bandwidth and Quality of Service (QoS) guarantees. Note that a discussion of issues not related to ATM negotiation will not be provided in this subsection (e.g., splitter and modem operation for ADSL line ). Signaling messages in the form of setup, tear down, and modify connections are used for call control. A signaling VC, which was set up a priori when end system A was first installed, is used to send the signaling message.","Through various negotiations among the nodes (e.g., ATM switches, routers) in the path between end system A and end system B, a VC is finally set up and the negotiated VCIs are delivered back to all the nodes for future use. These negotiated VCIs are unique to each node locally, not unique throughout the ATM network. For example, end system B finally sends back a VCI number. The ATM node connected to end system B also performs some internal mapping and sends another VCI number back to another ATM node in the path. For example, ATM switch B sends a VCI number (e.g., VCI=12) back to ATM switch A. ATM switch A then maps this VCI number (VCI=12), which it designates as the output VCI for this call, to its output port (toward ATM switch B). For its input port, ATM switch A generates an input VCI number (e.g., VCI=41) and maps it to one of its input ports. ATM switch A then sends this input VCI number (VCI=41) back to the IMAS . The IMAS  maps this VCI number (VCI=41), which it designates as its output VCI for this call, to its output port (toward ATM switch A). The IMAS generates its own VCI number (e.g., VCI=29) and maps it to the input port that is coupled to end system A. The IMAS  then sends this VCI number (VCI=29) back to end system A for future use.","Now that end system A knows the VCI number (VCI=29) for this call, it uses this number (VCI=29) for all ATM cells associated with this call connection. Thus, end system A sends an ATM cell with VCI=29. The IMAS has its own updated table that maps VCIs to ports so when it receives this ATM cell, it looks up the VCI number and directs this ATM cell to the previously mapped output port. This output port in the IMAS  is associated with VCI=41. The IMAS  changes the VCI number in the ATM header and sends the ATM cell with VCI=41 to the designated output port to ATM switch A. ATM switch A performs the same functions as IMAS  as far as this table lookup and translation are concerned, and sends the ATM cell with VCI=12 to ATM switch B. Through this VCI mapping and conversion, the ATM cell ultimately reaches end system B. End system B can also send messages back to end system A in a similar manner.","Proxy Signaling",{"@attributes":{"id":"p-0125","num":"0124"},"figref":"FIG. 2","b":["101","173","133","135","101","173","176","175","174","176","175","177","101","133"]},"In one embodiment of the present invention, the IMAS  supports permanent virtual connections (PVC) and switched virtual connections (SVC) on the subscriber side e.g., DSL) and the telecommunications backbone side (e.g., DS3\/OC3\/ATM). For communication between end systems to be accomplished, the end systems and the network nodes predefine and maintain a virtual circuit and virtual path, as explained above, through the packet-switched mesh-type network that the end systems believe to be a dedicated physically connected circuit. The actual path, however, may change due to routing around down or busy connections through the ATM\/router mesh-like network. Regardless of the path, the packets are transferred, in order, over a specific path and arrive at the destination in order.","As described in the background of the invention section, a permanent virtual connection (PVC) is a fixed circuit that is defined in advance by a public carrier or a network manager. Thus, all traffic between two end systems that uses a PVC-based circuit follows a predetermined physical path that makes up the virtual circuit. A PVC is permanently programmed into a network for continuous use (or as long as the subscriber desires) between end systems for multiple sessions. In contrast, a switched virtual connection (SVC) is a temporary virtual circuit that lasts as long as the session between end systems lasts. The carrier sets up and disconnects SVCs on the fly. While PVC is statically set up and torn down by the network management system (e.g., carrier) in a non-timely fashion (i.e., hours or days may pass before the connection is established), SVCs are set up and torn down dynamically by the ATM end systems using a UNI signaling protocol. Thus, the SVC parameters are provided to the switches along the path for automatic configuration by the signaling protocols in a distributed fashion.","Returning to , the IMAS  can support PVC on line  and SVC on line  on the DSL side  of the network. On the DS3\/OC3\/ATM side , the IMAS  can support PVC on line  and SVC on line . Thus, the IMAS  can be used in the traditional manner by coupling a PVC line  to another PVC line . Alternatively, the IMAS  can be used in the manner contemplated in the future by coupling an SVC line  to another SVC line . Last, but not least, the IMAS  can be used to automatically translate PVC lines  to SVC lines  via the SVC proxy signaling scheme in accordance with one embodiment of the present invention.","The SVC lines ,  and PVC lines ,  do not separately exist; rather, a separate logic (not shown in ) is provided in the IMAS  and the network management system (not shown in ) is provided to perform the PVC-to-SVC and SVC-to-SVC translation. These lines are drawn separately in  for instructional purposes. At one level, these lines are separate logical lines, not physical lines.","III. Hardware","The hardware portion of the IMAS will now discussed. The abbreviations that will be used periodically are provided in the GLOSSARY in the section immediately preceding the claims. The reader should be aware that this HARDWARE section will include some software discussion to facilitate the teaching of the present invention. Delaying this software discussion until the SOFTWARE section may deprive the reader of context.","General","In one embodiment of the present invention, the Intelligent Multiservice Access System (IMAS) is a carrier class DSL\/ATM access switch that is typically located in the central office (CO). The IMAS includes integrated end-to-end ATM switching, Internet Protocol (EP) functionality, full Quality of Service support, Java-based network management, and high capacity multi-port xDSL line cards. The IMAS is designed with modularity in mind so that it is highly scalable; that is, the IMAS enables the deployment of varying numbers of DSL ports and chassis's. Thus, depending on the configuration, the multiple chassis's allow redundancy and can support more ports for higher capacity. The line cards in the IMAS can support thousands of ports collectively.","The IMAS supports the various xDSL technology family (e.g., HDSL, ADSL, SDSL). This support is possible from a single shelf, which may include redundant ATM switch engine cards. In one embodiment, multiple shelves are interconnected via high speed ATM links or connected directly to the WAN using DS3, OC-3C, or OC-12C interfaces.","The IMAS also supports full end-to-end implementation of ATM between a subscriber (e.g., home user with a PC) and an Internet ISP provider with user control of the ATM signaling and Quality of Service support. With the IMAS, the telecommunications service provider (e.g., RBOC) has the choice of implementing permanent virtual connections (PVC), switched virtual connections (SVC), or the proxy SVC, which is a combination of both PVC and SVC. In one embodiment of the proxy SVC scheme and architecture, signaling logic is provided in the IMAS (and supported by the Network Management System via the IMAS device module) that allows the non-signaled call from a PVC supported connection to be \u201cconverted\u201d to a signaled SVC connection so that the telecommunications service provider can flexibly and quickly deploy virtual connections as necessary on the fly.","In one embodiment of the present invention, the IMAS includes a high performance ATM switch core\/fabric, multiple xDSL line cards, and a network management software system (NMS). The NMS portion of the IMAS is discussed in the SOFTWARE section of this patent specification. For the hardware portion, IMAS includes the following basic components:","(1) Chassis,","(2) Chassis Switch Cards,","(3) System Switch Cards,","(4) xDSL line cards","The IMAS is designed for high capacity. In order to accommodate a large number of subscribers, the IMAS can support many ports per line card, many line cards per chassis, and many chassis per system. In one embodiment of the present invention, all of the above cards are housed in the chassis. In other embodiments, the system switch card is omitted which leaves some additional slots free for other cards. The thrust of these basic components is to deliver data traffic between the ATM backbone network (i.e., WAN, Internet) and the thousands (e.g., 4,000 ports) of xDSL ports linked to subscribers at a very high speed to adequately support the various high bandwidth-intensive traffic (e.g., Internet access, video services, audio services).","All traffic among the chassis switch cards, the system switch cards, and the line cards are based on ATM cells, with full duplex rates of at least 155 Mbps. Accordingly, the chassis switch card can be viewed as an ATM multiplexer and the system switch card as an ATM switch. The traffic across the DSL ports may or may not be ATM.","All traffic through the IMAS is routed by virtue of their respective ATM header field which contains a VPI\/VCI connection identifier. The combination of the VPI and VCI identifies the connection between two end systems in an ATM network. The ATM switch on the network side of the UNI assigns the values to the VPI and VCI during the connection setup.","These fields are used to deliver point-to-point and point-to-multipoint traffic. The number of VPI\/VCI connections supported by the IMAS is dependent on the resources available from the cards in the IMAS. In one embodiment of the present invention, 4,096 VPI\/VCIs are available for the ports. If equitably distributed among eight ports, each port is associated with 512 VPI\/VCIs (4,096\/8=512). If equitably distributed among 32 ports, each port is associated with 128 VPI\/VCIs. The chassis switch card in the IMAS has the ability to switch VPs, switch VCs, terminate VPs, and generate VPs. ATM cells can be switched to any output port based on a lookup process. They can also be replicated to many output ports to perform point-to-multipoint operations. Cells may be routed to and from the CPU subsystem based on their respective VPNC number or alternatively, special cell types (e.g., payload type field, resource management cells, and OAM cells).","Chassis Basics","Referring now to , the IMAS includes a chassis  in accordance with one embodiment of the present invention. This NEBS-compliant chassis  houses the various cards on the upper section and a components tray in the lower section. The chassis  houses two chassis switch cards (CSC)  and , two system switch cards (SSC)  and , several line cards (LIU) - and -, and a fan and power supply tray , which houses the fan and power supply. These cards and tray are installed in designated slots. Although not shown in , the upper section of the chassis contains a line card connector that serves as the physical connection between the copper loop termination and the IMAS DSL line card.","The particular quantity of cards can be varied depending on system configuration and user desirability. In this particular embodiment of , two chassis switch cards, two system switch cards, and sixteen line cards are shown. In some embodiments, a 19-inch chassis comes with 14 slots for line cards, fans, backplane, and 2 chassis switch cards, and 2 system switch cards. In another embodiment, a 23-inch chassis comes with 16 slots for line cards, fans, backplane, and 2 chassis switch cards and 2 system switch cards. In still other embodiments, the chassis does not come with system switch cards, thus allowing two slots to be available for two more line cards. The hardware configuration variations are numerous.","All cards are hot-swappable. Thus, in the event of failure, all cards can be inserted and removed while power is still applied to the IMAS without disrupting traffic paths on other cards.","Chassis Switch Cards","The chassis switch cards  and  provide ATM connectivity to the line cards and interfaces to multiple Wide Area Networks (WAN) and Local Area Networks (LAN). Essentially, the chassis switch card provides ATM uplink interface(s) to the telecommunications backbone and ATM downlink interface(s) to line cards. For the uplink interface, the chassis switch card provides connectivity to various protocol complying with OC3-C, STS-3, T3, E3, and the like. In one embodiment, each chassis switch card provides the capability to aggregate all upstream traffic into an ATM data stream, and to direct all downstream traffic to appropriate line cards, and hence subscriber ports. The chassis switch card cannot, however, direct traffic to other chassis switch cards. In one embodiment, only the system switch card can direct traffic between the telecommunications backbone and the chassis switch card.","The chassis switch card, for example CSC , is a full function standalone ATM switch implemented as a single card set in the IMAS chassis. The chassis switch card contains a 640 Mbps ATM switching fabric, or a total of 1.2 Gbps for two cards. The chassis switch card resides in the middle section of the card slots within the chassis . The chassis switch cards are connected to the IMAS backplane to interconnect with the DSL line cards.","When a single chassis switch card is provided, it is used in a normal operational state. When two chassis switch cards are provided, one card is maintained in a normal operational mode while the other is in active backup mode. For the dual chassis switch card implementation, the DSL line card traffic will be handled by both chassis switch cards on a load sharing basis. In other words, half of the line cards will be controlled by one chassis switch card (e.g., CSC ) while the other half of the line cards will be controlled by the other chassis switch card (e.g., CSC ). In the event of a chassis switch card failure, the operational chassis switch card will take over the functions that the failed chassis switch card performed in the system.","As discussed later, the chassis switch card contains a PowerPC microprocessor for providing all the control and processing functions of the IMAS. These functions include configuration, control, diagnostics, event\/statistics collection, signaling protocols, and environmental monitoring\/control. The chassis switch card automatically inventories the contents of the chassis in which it is physically installed by reading the serial numbers of all the major components including the backplane, the power backplane, power supplies, their own (CSC) serial numbers, the system switch card serial numbers, and the line card serial numbers.","Upon completing the inventory and determining the types and quantities of the components within its chassis, the chassis switch card continues to monitor the following: status of any CSC cards (including itself); system voltage and power supplies; temperature of line cards; status of all individual modem ports; status of WAN or LAN external telecommunications backbone ports; status of line cards; fans and generation of alarms; and status of all system switch cards.","System Switch Cards","The system switch cards  and  generally bring more a large number of lines (and hence, bandwidth) into the IMAS. In a single chassis system, the system switch cards can provide access to higher bandwidth resources (e.g., OC12) for the IMAS. In a multiple chassis system, the system switch cards provide connectivity between the multiple chassis's and the WAN. When the system switch cards are not used, the slots where the system switch cards  and  are normally inserted can either be empty or populated by line cards.","The system switch card is also a full function standalone ATM switch implemented as a single card set in the IMAS chassis. Each system switch card contains a 5 Gbps switching fabric, therefore, in dual SSC configurations, the two system switch cards provide a 10 Gbps IMAS switch. Similar to the CSC, the system switch card is also designed with multiple WAN interfaces.","In one embodiment, the system switch card provides 4 ports per card, but this can be expanded to 8 ports per card using an SSC ATM adaptor module. These original  ports are OC-3C multi-mode (MM) fiber ATM ports. These ports can be used for attachment to a WAN or to the chassis switch cards resident in other IMAS's chassis. The additional expansion  ports can be OC-3C (155 Mbps) independent ports in order to add an additional chassis or connect to a WAN. Alternatively, two of the ports could be OC-3C with auto protection circuitry (full APS, one primary and one backup). Still another alternative is a single OC-12C (622 Mbps) port.","Line Cards","The line cards - and - terminate xDSL traffic into the IMAS. In the downstream direction, these DSL line cards contain DSL modems that transport ATM cells received from the chassis switch cards to the output ports, or alternatively, convert ATM cells into frames for delivery to the subscribers. Line cards also contain traffic management functions for Quality of Service (QoS). Each DSL line card is connected to the chassis switch card using a dedicated 155 Mbps backplane bus in one embodiment where cubit devices are utilized.","Currently, several ADSL modulation schemes are used\u2014Discrete Multi-Tone modulation (DMT) and Carrier Amplitude Phase modulation (CAP). In accordance with one embodiment of the present invention, the line cards - and - support either modulation scheme. In one embodiment, each DMT line card supports eight (8) full rate DMT modems operating the ADI chipset. Each CAP line card supports sixteen (16) full rate CAP modems operating the Globespan chipset.","For SDSL and IDSL, the modulation scheme is 2B1Q. The IMAS supports both of these xDSL technologies and the 2B1Q modulation scheme. Generally, each line card, regardless of modulation scheme, can operate each port at full data rate, can be connected to two dedicated busses for full redundancy, and supports up to four classes of QoS per port.","Power Supply and Fan Tray","As the name suggests, the power supply and fan tray  houses the power supply and fan circuits and fans. The fan tray  sits directly below the card housing. Referring now to , the fan and power supply tray  includes a fan tray , a power supply section , and external supply status connector .","In one embodiment of the present invention, the fan tray  supports four 4.5-inch fans - in the 23-inch chassis configuration. In another embodiment, the fan tray  supports three 4.5-inch fans in the 19-inch chassis configuration.","The power supply section  is located in the lower right of the fan and power supply tray . This section  contains two cards  and  that provide 15-V power supply.","The power supply section  is located in the lower left of the fan and power supply tray . This section  contains an external supply status connector, an alarm logic , -V power supply connectors , and fuses .","Clocks","In one embodiment, the IMAS uses a distributed clock system. Individual clock generation exists on each card. The CSC contains a 20 MHz clock and each line card contains a 20 MHz CSC contains an additional 20 MHz clock for delivery on the UTOPIA lines to the line cards. With this UTOPIA interface clock, the CSC and line cards communicate asynchronously. This scheme allows for flexibility in the individual card design goals.","Backplane","The backplane supports a number of different interfaces between cards as well as the power supply to each. The point-to-point data links provide connectivity from the chassis switch cards to each of the line cards in the chassis. Each of these two chassis switch cards has its own set of links to each of the line cards, and hence, each line card has two sets of such links, one to chassis switch  and the other to chassis switch card . Each link consists of two unidirectional 12-bit interfaces\u2014three bits for control, eight bits for data, and one bit for clock.","Chassis Topology","The chassis topology will now be discussed with respect to . In this particular embodiment, two chassis switch cards (CSC)  and  and eighteen line cards (LIU) are provided. Each chassis switch card has two telecommunications backbone-side ports for coupling with the ATM backbone network and eighteen LIU-side ports for coupling with the line cards. These twenty ports (plus an additional port for interfacing with a CPU subsystem) can run at OC-3 data rates (155 Mbps) and comply with the UTOPIA standard for ATM interfacing. Please see below for a more detailed discussion.","The two telecommunications backbone-side ports for coupling with the ATM network interface are represented by lines  and  for chassis switch card , and lines  and  for chassis switch card . These ports are connected to the telecommunications service provider's network via the standard UNI interface. Although each chassis switch card needs only one telecommunications backbone-side port, two ports provide redundancy.","In this example, the link to the telecommunications backbone network is represented by telecommunications lines that comply with OC-3, STS-3, T3, or E3. However, other high capacity network-to-network digital transmission link technologies can be supported, such as OC-12 (622 Mbps) with a system switch card. As known to those skilled in the art, Optical Carrier (OC) is a North American Digital Hierarchy (NADH) method of carrying digitized voice signals over twisted copper wire. OCs are the digital hierarchies of the SONET standard which defines how digital signals are multiplexed on fiber optic cable. In particular, Optical Carrier level 3 (OC-3) provides a data rate of 155.52 Mbps. Synchronous Transport Signal level 3 (STS-3) is the electrical signal counterpart that is converted to\/from the SONET's optically based signal (OC-3). OC-3 is a direct electrical-to-optical mapping of STS-3. T3 is a digital transmission link loop technology that provides a dedicated bandwidth of 44.736 Mbits\/sec, or 28 T1 circuits. T3 is capable of handling  voice conversations (each one digitized at 64 Kbps) and runs on coaxial cables. E3 is the European CEPT signal which carries 16 CEPT E1 s and overhead, with an effective data rate of 34.368 Mbps. The E1 is the European equivalent of the T1 except that the E1 has a data rate of 2.048 Mbps. Although the telecommunications backbone-side link is full duplex, the DSL-side link (discussed below) may be asymmetric.","As mentioned above, this particular example of the chassis switch card uses eighteen LIU-side ports for coupling with the line cards. In , the eighteen chassis switch card ports for coupling with the line cards are represented by exemplary lines , , and  for chassis switch card , and lines , , and  for chassis switch card . Because eighteen line cards are provided, each chassis switch card has eighteen LIU-side ports, one LIU-side port per line card.","Two chassis switch cards  and  are provided for redundancy and load balancing. Interconnecting line  between chassis switch card  and chassis switch card  is provided to support the redundancy and load balancing features. In one embodiment, the interconnecting line is an RS-232 type serial line. Although a single chassis switch card in hot standby mode can perform all the functions that are required in the IMAS, two chassis switch cards provide additional benefits. With two chassis switch cards, the functions are distributed between them. The failure of one chassis switch card will cause the one operational chassis switch card to perform the functions of the failed chassis switch card, in addition to its own functions.","Load balancing allows the two chassis switch cards to distribute the duties between them. For example, chassis switch card  could handle all the even-numbered line cards while the chassis switch card  could handle all the odd-numbered line cards. In another variation, chassis switch card  could handle all the line cards on the left half of the chassis while chassis switch card  could handle all the line cards on the right half of the chassis. Regardless of the scheme, the load balancing feature allows the user to equitably (or non-equitably) distribute the chassis switch card functions among the chassis switch cards installed in the IMAS.","Each chassis switch card has a microprocessor-based computing environment inside for running some component of the network management software system (NMS), including configuration and performance monitoring, and general chassis switch card component management and control. In one embodiment of the present invention, each chassis switch card uses a 100 MHz PowerPC microprocessor with sufficient memory (e.g., 32 MB to 128 MB) and other peripheral devices, as will be discussed further below.","Turning to the line cards,  explicitly shows three line cards  (LIU_),  (LIU_), and  (LIU_), but the other remaining fifteen line cards (i.e., LIU_ to LIU_, LIU_ to LIU_) are implicitly present. In accordance with one embodiment of the present invention, each line card has two CSC-side ports for interfacing with the chassis switch cards and eight DSL-side ports for interfacing with the xDSL lines of the subscribers. Note that these numbers can vary depending on system configuration and user preferences. For example, if only one chassis switch card is used, each line card would use only one CSC-side port, instead of two. Also, depending on capacity requirements, more DSL-side ports can be added. In this particular example, eight DSL-side ports are shown and with eighteen line cards, a single chassis IMAS can support 144 DSL-side ports. In other embodiments, however, each line card can have thirty-two ports and with eighteen line cards, a single chassis IMAS can support 576 DSL-side ports.","The two CSC-side ports allow each line card to couple with the two chassis switch cards. For example, line card  has two CSC-side ports. One port is coupled to line  for coupling with one chassis switch card , while the other port is coupled to line  for coupling with the other chassis switch card . Similarly, line card  is coupled to chassis switch card  via line  and chassis switch card  via line . Finally, line card  is coupled to chassis switch card  via line  and chassis switch card  via line .","The eight DSL-side ports allow each line card to couple with the subscribers via their respective DSL lines. Each DSL-side port is coupled to a DSL line. For example, line card  has a port that interfaces to DSL line . Similarly, line card  has a port that interfaces to DSL line . In any event, lines - represent DSL lines that can be coupled to the line card ports.","Depending on the DSL technology supported, each line card may have a microprocessor-based computing environment inside. For those ADSL line cards using DMT, the line card has a DSP per modem for managing the modem. For those ADSL line cards using CAP, the line card has one processor for the entire line card for handling modem-specific housekeeping. For SDSL line cards, the line card contains a processor for debug and general modem management purposes. Appropriate buffers are provided in each line card for priority queueing and other data management purposes.","The combination of communications lines  represents the star configuration backplane connections. These backplane connections  are point-to-point UTOPIA connections for transporting ATM data at 155 Mbps.","Chassis Switch Card Architecture","As mentioned earlier, each chassis switch card is a fully functional ATM switch on a single card with provisions for numerous ports. Each chassis switch card also has a microprocessor-based computing system for running some component of the network management software system (NMS), including configuration and performance monitoring, and general chassis switch card component and data management\/control. A description of the general chassis switch card architecture will be provided with respect to , followed by a description of the CPU subsystem with respect to .","General",{"@attributes":{"id":"p-0176","num":"0175"},"figref":"FIG. 6","b":["94","0","20","80","97"]},"In accordance with one embodiment of the present invention, the switch fabric  is a 37-bit bus which includes a 32-bit data bus. It is a shared bus that can be implemented in either a single card (like the chassis switch card) or in a backplane configuration among multiple cards. In one embodiment, the bus complies with the CellBus bus architecture. Running at 20 Mhz, the bus can handle 640 Mbps of net ATM cell bandwidth.","The bus  is coupled to various cubit devices C-C. The discussion of the cubits will be provided below. On the telecommunications backbone-side, the bus  is coupled to cubit devices C and C via lines  and , respectively. The bus  is coupled to CPU subsystem  via cubit device C and line . On the line card (LIU) side, the bus  is coupled to cubit devices C-C via lines . Because the interconnect structure of the cubits is the bus , communication by any of the cubit devices is possible. Over the bus , the cubit devices C-C can send and receive cells to each other. Because the bus is a shared bus, contention must be resolved. Bus transactions across this bus  are accomplished via bus access request, bus access grant by a bus arbiter, and finally cell transmission on the bus from one cubit to another cubit. Bus access is provided one cell at a time so that for multicast cells, a cubit must obtain bus access for each cell.","In accordance with one embodiment of the present invention, the cubit devices C-C are CMOS VLSI devices made by TranSwitch Corporation for implementing ATM switching functions. Interconnection of a number of these cubit devices over this 32-bit data bus forms various ATM cell switching or multiplexing structures; that is, the cubits can perform cell address translation, cell routing, outlet cell queueing, and supports unicast, broadcast, and multicast transfers. Each cell placed onto the bus  by a cubit device can be routed either to a single cubit device (unicast transfer) or to multiple cubit devices (broadcast or multicast transfer). For unicast, data from one cubit can be sent or switched to any other cubit. For multicast, a cubit can also replicate cells to many other cubits to perform point-to-multipoint operations.","In the downlink direction, the two cubits C and C on the telecommunications backbone-side can send cells across the bus  to any one of the cubits C-C on the line card side for distribution to the designated line cards. The cubits C-C are coupled to eighteen UTOPIA backplane ports. These ports are coupled to the lines, such as lines , , and  of chassis switch card  in  which lead to the line cards. For example, line  of cubit C in  corresponds to line  of line card  (LIU_) in . Data routing to the appropriate cubits is accomplished via VPI\/VCI number that are linked to port numbers. Thus, the chassis switch card provides fanout capability from a few (or single) telecommunications backbone port to many line cards (and line card ports) via the VPI\/VCI number. Each cell will consequently be directed to the appropriate downstream port based on VPI\/VCI number. A look-up table attached to each interface will provide this direction control.","The connection information is loaded into the lookup tables attached to the cubits by the CPU subsystem as a result of the ATM VC negotiation process. As explained above, during the negotiation among the ATM nodes for a virtual connection (which includes the necessary bandwidth and QoS), a particular VCI number is sent back to the IMAS. The IMAS also performs its own conversion of this VCI number and maps it to the appropriate ports (input and output). The IMAS, via the CPU subsystem , communicates this VCI number to its components so that ATM cells can be routed appropriately. Because the cubits C-C are attached to lookup tables which include this VCI-to-port information, the ATM cells can be routed to the correct ports.","In , because only two telecommunications backbone-side cubits feed into the eighteen LIU-side cubits, the buffering requirements for these interfaces are minimal for this downstream direction. The IMAS design assumes that traffic received from either downstream telecommunications backbone link (i.e., links  and ) is not destined to the same line card. This implies that a given line card cannot receive data from both chassis switch cards but only from one. Incidentally, this also means that only one of the CSC-side lines (e.g., either line  or  for line card ) is operative.","Returning to , in the upstream direction, the cubits C-C can send cells across this same bus  to any of the two cubits C and C for distribution to the telecom network. In this case, the chassis switch card performs a multiplexing function; that is, it aggregates ATM cells from each line card into one of the two 155 Mbps telecommunications backbone-side links. These links are lines  and  that are associated with cubits C and C in ). This traffic is sufficiently low bandwidth that even in this many-to-one scenario, the capacity is never exceeded and the buffering is therefore minimal. In this upstream direction, a lookup is also required per cell for one of two possible links (i.e., C and C).","Between any two cubits, cells carry a CellBus Routing Header and a translated VPI\/VCI address. The translation can occur via a look-up table. These cubits generally follow the ATM Forum's UTOPIA standard. UTOPIA is an interface standard for devices connecting to an ATM network. Specifically, UTOPIA is the electrical interface between the ATM layer and the PHY (Physical) layer.","A cubit C is also provided between the CPU subsystem  and the bus . The cubit C is coupled to the CPU subsystem  via line , and the bus  via line . Through the cubit C, the CPU subsystem  can provide system-wide monitoring and processor support. This cubit C can also send and receive cells across the bus  to and from the other cubits C-C. Thus, any cell traffic with the appropriate VPI\/VCI number designated for the CPU subsystem  will make its way to the CPU subsystem .","As discussed further below, the CPU subsystem  has a PowerPC 603e microprocessor, DRAM, EPROM, PCI bus, ISA bus, and a PCI-ISA bridge. The CPU subsystem  also has an ATM SAR to assist the CPU in its ability to deal with ATM cells, an Ethernet interface (e.g., 10BaseT), and PCMCIA cards. The CPU subsystem  has other functionality to interface to monitoring logic (e.g., power, fans, temperature) via line , an Ethernet interface via line , an input\/output (I\/O) bus via line , nineteen IC bus lines shown here as two sets of lines  and  (line  or IC_A has 18 bus lines while line  or IC_B has one bus line), and two serial I\/O lines  (where one line is for the CSC-to-CSC communication for load balancing and the other line is external). The general purpose of the CPU subsystem is to manage the entire chassis.","In one embodiment of the present invention, the uplink module  includes two transceivers  and , and two framers  and . The first transceiver  is coupled to line  on the telecommunications backbone-side of the chassis switch card. The second transceiver  is coupled to line , also on the telecommunications backbone-side of the chassis switch card. These two lines  and  correspond to the same lines  and  in .","First framer  is coupled to first transceiver  via line  and cubit device C via lines  and . The second framer  is coupled to second transceiver  via line  and cubit device C via lines  and . These framers are SONET User-to-Network Interface framers that interface with the telecommunications backbone-side OC-3c lines  and . Other embodiments support other interface technologies such as DS3, T3, and E3.","A power subsystem  is provided. The IMAS provides a \u221248 VDC power source to the entire system via the backplane. Each card in the system is responsible for deriving its own working voltages from this \u221248VDC in the most effective manner. This power subsystem  provides the on-card power derivation and regulation for the CPU subsystem  and other components on the motherboard.","CPU Subsystem","The CPU subsystem  of  will now be discussed with reference to . The general purpose of the CPU subsystem  is to manage the entire chassis. At the core of the CPU subsystem  is a microprocessor  which, in one embodiment, is a PowerPC MPC603 which runs at 100 MHz.","The microprocessor  is coupled to a PCI bridge\/memory controller  via line . In one embodiment, the PCI bridge\/memory controller  is an IBM 82663\/4.","The PCI bridge\/memory controller  is also coupled to local memory (i.e., DRAM)  via line . In one embodiment of the present invention, the local memory is a 64 MB DRAM expandable to 128 MB with a 64-bit data path. Typically, two memory banks are provided. The memory size for each memory bank varies depending on the configuration desired. In one embodiment, each memory bank has 64 MB. In other embodiments, each memory bank has 32 MB.","The PCI bridge\/memory controller  is also coupled to a boot memory (i.e., boot PROM)  via line . In one embodiment, the boot PROM is an 4 Mb (or 512 KB) PROM.","Line  is coupled to a line . Lines  and  constitute a PCI bus.","The PCI bus ,  is coupled to three other components\u2014an ATM SAR , an Ethernet interface , and an ISA bus bridge , which allows the PCI bus to be coupled to an Industry Standard Architecture (ISA) bus. The Ethernet interface  along with line  allows the CPU subsystem  to be coupled to a 10BaseT network. The ISA bridge  allows the CPU subsystem  to be coupled to an ISA bus .","The ATM SAR  is an ATM segmentation and reassembly unit that assists the CPU in its ability to handle ATM cells. It provides a mechanism for the system to support ATM signaling, ILMI, and OAM functions. This ATM SAR  provides an interface between the cubit C (see the chassis switch architecture of ) switch device and the standard PCI bus, which runs 32 bits at 33 MHz. In , line  is the interface line to cubit C in the switch card data path architecture shown in . The ATM SAR  provides reassembly functionality to convert cells into frames for processing by the CPU, and segmentation operation to create ATM cells from frames. The ATM SAR  supports AAL5 encapsulation and termination functionality, in accordance with ITU-T specifications 1.361 and 1.363; that is, the ATM SAR  supports VP and VC, traffic shaping capabilities, and support for CBR, VBR, ABR, and UBR traffic classes.","The ISA bus  is coupled to many components. One ISA bus component is a PCMCIA card . A PCMCIA card can be any number of card devices that comply with the PCMCIA standard (Release 1.0). These card devices include memory and input\/output devices (e.g., modem, LAN). In one embodiment of the present invention, the PCMCIA slot is used for a flash memory device such as a flash EEPROM. In one embodiment of the present invention, the flash memory has a size of 16 MB. This flash memory  is used to store data such as IMAS configuration data, the tables for proxy SVC signaling, and other run-time code. These tables include the Proxy Signaling Table, the ISP Table, and the Connect Info Table, which will be discussed below in the SOFTWARE section.","The cubit devices (i.e., C-C)  are also coupled to the ISA bus . The coupling of the cubits C-C to the ISA bus  is for the control path, not the data path. The data path is shown in . This coupling allows the CPU subsystem to configure the cubits as well as obtaining status information from the cubits.","An interrupt control unit (ICU)  is also coupled to the ISA bus . The ICU  serves as a single concentrator for twenty-one port (i.e., cubits C-C) interfaces, eighteen line cards, and miscellaneous interrupts.","A real time controller logic (RTC)  is also coupled to the ISA bus . This controller is used for calendaring tasks such as time and date, and has a built-in timer.","A S\/UNI  is also coupled to the ISA bus . The S\/UNI  is a SONET User-to-Network Interface framer that interfaces with the telecommunications backbone-side OC-3c lines  and . S\/UNI  of  is equivalent to framers  and  of .","Chassis monitor logic  is also provided on ISA bus . The monitor logic  provides functionality for monitoring chassis voltage leads and chassis switch card temperature via line . The monitoring is accomplished via temperature sensors, and voltage sensors.","A serial I\/O interface  is also coupled to the ISA bus . This serial I\/O interface  converts parallel data to serial data for interfacing with two serial port lines . One of the lines is for external interface and the other is for internal CSC-to-CSC communication for load balancing. This internal line is shown in  as line . Returning to , in one embodiment, the serial interface lines  comply with the RS232 serial communications standard to send data to serial printers, remote workstations or routers, modems, and asynchronous communication servers.","Two IC controllers  are provided for coupling with IC buses via lines  and . The IC controllers  include standard IC buses which are used to connect to each slot in the chassis. The IC bus includes two signal lines (i.e., clock and data). This bus is used for environmental monitoring of the chassis and is controlled by the chassis switch cards  and . This bus supports a multi-master capability and hence, defining a single chassis master is not necessary.","In , lines  (i.e., A) and  (i.e., B) are the IC buses. These lines  and  are coupled to a 1:18 mux for fanout to all the line cards. A more detailed discussion of the IC bus will be provided below.","An I\/O Bus  is also coupled to the ISA bus . The I\/O Bus is coupled to the backplane I\/O bus. The I\/O bus will be discussed in greater detail below.","One function that the CPU subsystem performs is look-up table updates throughout the chassis to support the many virtual connections. As described above, before any substantive communication between any two end systems can commence, a virtual connection must be established. This virtual connection is established via signaling among the nodes in the ATM network. The IMAS is one such node, even though one embodiment of the IMAS is at the edge of the telecommunications backbone. The signaling allows the various nodes to negotiate bandwidth, Quality of Service, and VC numbers. The negotiation proceeds forward from the originating end system to the destination end system. When the negotiation has successfully completed, each node updates its own table (i.e., cross reference ports to VCI number) and sends the negotiated results back. Thus, the destination node sends back relevant information such as the VCI number to a previous node, which in turn performs its own internal table updates and sends relevant VC information back to another previous node. Finally, the negotiated results arrive at the destination node via at least one IMAS.","In the chassis switch card of the IMAS, the CPU subsystem  in  receives and processes the negotiated information (i.e., VC information). In , the negotiated information makes its way from the telecommunications backbone (i.e., line  or ) to the switch fabric . The data is then routed to cubit C via line  and into the CPU subsystem . The CPU subsystem  then updates all internal look-up tables in the chassis that contain virtual connection information via I\/O bus . Via this I\/O bus  (also I\/O bus  in ), the new negotiated connection information is stored in the various look-up tables throughout the chassis. These look-up tables include: the look-up tables associated with the cubits C-C in ; look-up table  in the line card of ; and look-up tables  and  in the system switch card of . Once the tables have been updated, all other ATM cells that arrive into the IMAS do not need to go through the CPU subsystem  anymore. Since all the tables have been updated, the cells make their way to the appropriate cubits, line cards, framers, and modems.","xDSL Line Card Architecture","The cell-based xDSL line cards will now be discussed. As mentioned earlier, the line cards provide access to loop technologies, such as xDSL. At one side of the line card beyond the backplane is the ATM switch via the chassis switch cards, and at the other end of the line card is the DSL subscriber line. Interface ports are provided for both sides of the line cards.  shows one embodiment of the present invention where eight DSL-side ports (and associated modems) and two CSC-side ports are implemented. Before data reach their destination, they are buffered temporarily in a buffer memory, where a buffer manager and arbiter decides the data delivery schedule.  shows the structure of the buffer memory  (see ).","General","Referring now to , the architecture of a typical line card, such as line card  (LIU_) of , will now be discussed. In this particular embodiment, the line card has the following interfaces: eight DSL ports for connection to subscribers (DSL side), two UTOPIA ports for connection to ATM switching logic (CSC side), an I\/O bus connection to the backplane, IC interface, and power interface.","The line card has numerous components for processing the telecommunications user data and other IMAS-specific or line card-specific management-related data. To handle all this traffic, a line card bus  is provided to interconnect the various line card components. In one embodiment of the present invention, this line card bus  is 32 bits wide running at 20 MHz. This line card bus  is coupled to a filter , a buffer memory , and two framers  and . Data contention for this shared bus  is resolved by an arbiter logic . These and other components of the line card are discussed below.","On the CSC side (toward the ATM switching logic), the line card includes two UTOPIA interface lines  and  which interface with a cubit device on each chassis switch card via the backplane connections. These UTOPIA interface lines  and  in  correspond to lines  and  in . For example, referring to both , lines  and  of  are coupled to line  of cubit device C in . This connectivity via the UTOPIA interface allows the ATM traffic to pass between a chassis switch card and a line card.","Each of these lines  and  are coupled to a UTOPIA mux . A UTOPIA mux multiplexes and demultiplexes two separate and asynchronous UTOPIA interfaces into one interface for use by the UTOPIA filter  (). The two UTOPIA ports A and B are selected by an external control signal generated by a UTOPIA mux selector logic  via line . Switching of the multiplexer selection is accomplished when the line card is in a non-operational state.","In the downlink direction, these lines  and  are inputs and the UTOPIA mux  selects one of these two inputs for output on line . The UTOPIA interface is brought from the backplane. All cell traffic transferred across the backplane is accomplished using UTOPIA as the link interface. This interface runs at a minimum frequency of 20 MHz and a maximum of 25 MHz, in accordance with one embodiment of the present invention. Each UTOPIA interface includes an 8-bit parallel bus, three control signals, and a clock for each direction, or 12 signals in each direction. This results in 24 signals per interface, or 864 signals per chassis.","In the uplink direction, the UTOPIA mux  takes the input on line  and delivers the data to either line  or , whichever is selected by the UTOPIA mux selector logic . In one embodiment of the present invention, the UTOPIA mux selector logic  is found in the I\/O bus controller . A bit position in a particular register in the I\/O bus controller  determines which of two port lines  or  is active. This bit in that register is used as the selector to the UTOPIA mux .","The UTOPIA mux  is coupled to a filter  via line . This filter  determines whether the connection is valid or not. The filter  checks the validity of the connection based on an index to a look-up table  that corresponds to the VPI\/VCI number of the ATM cell. The look-up table  is accessed via line . If the connection is not valid, the data is discarded. This look-up table has all the valid connection information, including translation functions, special marking, routing information, queue number, and status information (e.g., discard state). To communicate with other devices in the line card, the filter  is coupled to the line card bus .","A buffer memory  is also provided. The primary purpose of this buffer memory  is to temporarily hold data that was delivered to it from the filter  and the framers  and . Conversely, the buffer memory  also holds data prior to its delivery to the filter  or the two framers  and . Any user traffic (i.e., ATM traffic) that arrives into the filter  via the UTOPIA mux  is held in the buffer memory  before it is delivered to any one of the destination DSL-side ports -. Similarly, any user traffic that arrives into the framers (either framer  or framer ) is held in the buffer memory  before it is delivered to the filter  on the CSC-side. The buffer memory  will be discussed in greater detail below in the PRIORITY QUEUEING MECHANISM subsection.","The data is organized according to port and priority. A buffer manager  is coupled to the buffer memory  via line . An arbiter  is coupled to the buffer manager  via line . The arbiter  resolves contention on the line card bus  via an arbitration scheme. Specifically, the arbiter  decides which of the many components that are coupled to the line card bus (i.e., filter  and framers  and ) gets access to the bus for delivery of data into and out of the buffer memory  via a predetermined arbitration scheme. In accordance with one embodiment of the present invention, the arbitration scheme handles bus access (and hence, buffer memory access) according to the following priorities: (1) downstream data in the filter; (2) upstream data in the buffer memory; (3) upstream data in the framers; and (4) downstream data in the buffer memory. The PRIORITY QUEUEING MECHANISM subsection below will provide more details on the arbitration scheme. In one embodiment of the present invention, this selection logic is implemented in hardware.","In this example, eight DSL-side line ports are provided. These eight ports are serviced by two framers  and . In , the left half ports are serviced by framer  and the right half ports are serviced by framer .","Generally, the framers provide framing and formatting functions appropriate to the communications protocols used. Each framer performs three major functions\u2014modem initialization, on-line modem status information processing, and protocol processing. Modem initialization depends on the particular DSL technology and modulation scheme implemented. Once the modem is initialized, each modem begins execution. Each modem goes through a training period during which the fastest reliable data delivery rate is determined for a given SNR.","For protocol processing, each framer makes sure that the data that enters and leaves the framer complies with standard ATM UNI protocol. In this respect, it performs functions that are much like that of the cubits (C-C) in the chassis switch cards. For ADSL, each framer processes two channels per modem\u2014downstream duplex and upstream duplex. In one embodiment, the framer assumes the logical-layer protocol to be ATM.","The framers  and  can also perform managerial functions such as generating and checking header checksum, generating and stripping idle cells, and scrambling cells. At a lower level, the framers also perform parallel-to-serial conversion in the downlink direction, and conversely, serial-to-parallel conversion in the uplink direction.","To interface with subscribers, framer  is coupled to xDSL modems - via lines -, respectively. In the downlink direction, the xDSL modem receives user data and delivers the data to the subscribers in accordance with the implemented xDSL technology. In the uplink direction, subscriber data sent via the implemented xDSL technology is received by the xDSL modem and delivered to the framer  for conversion into ATM cells.","Framer  operates like framer . Framer  is also coupled to xDSL modems - via lines -, respectively. In one embodiment, the DSL-side ports  are coupled to the backplane where appropriate connections are provided for external physical connections to subscriber DSL lines.","For management and control by the CPU subsystem  in the chassis switch card (see ), an I\/O bus  is provided. This I\/O bus  is coupled to the CPU subsystem . An I\/O bus controller  resides in the line card and contains address decoders and registers to handle data transfers between the CPU subsystem  and any component in the line card across the I\/O bus . Although  shows the I\/O bus controller  coupled only to the I\/O bus, this is not the case. As known to those skilled in the art, the I\/O bus controller is coupled to most, if not all, of the components in the line card which require management and control by the CPU subsystem .","The system relies on the delivery of a sufficient \u221248VDC power supply source. The \u221248VDC power is distributed across the backplane to all cards. Each card in the system is responsible for deriving its own working voltages from this \u221248VDC in the most effective manner. In the line card shown in , power logic  is provided to perform this function.","This power distribution scheme provides a number of benefits. Less current on the backplane permits easier distribution. Less current per card implies less concern for connectors and ratings. Less current per card facilitates easier hot plug design. On-card regulation permits custom card requirements. The \u221248VDC distribution permits longer life for chassis and power subsystem. The \u221248VDC distribution is not nearly as sensitive as distribution of high current low voltage supplies. Fan power is also obtained from the \u221248VDC.","Priority Queueing Mechanism","The priority queueing mechanism will now be discussed. The priority queueing mechanism determines how and when data is transferred across the line card bus . In one embodiment, this priority queueing mechanism is implemented in hardware with the buffer memory , buffer manager , and arbiter . First, the various queues and FIFOs will be discussed. Second, the operation of the priority queueing mechanism will then be discussed with respect to the queues and FIFOs. In accordance with one embodiment of the present invention, the priority queueing mechanism handles ATM cells via a combination of round robin and weighted fair queueing (WFQ). Weighted fair queueing is discussed in detail in the WEIGHTED FAIR QUEUEING subsection below. So, when the patent specification mentions the transfer or delivery of data, this implies the transfer or delivery of cells.","Priority Queueing Mechanism\u2014Queues and FIFOs","The various components coupled to the bus  contain queues or first-in first-out (FIFO) buffers for handling all the data traffic. Some components have more and larger queues than other components.","As shown in , the buffer memory  includes a plurality of queues. The total number of queues can vary from one implementation to another. In this example, 132 queues are shown in groups of four, where each group of four represents a port, whether DSL-side or telecommunications backbone-side. If this line card had thirty-three ports (32 DSL-side and 1 CSC-side), 132 queues are used in this buffer memory . Thus, 128 queues are associated with downstream data, while 4 queues are associated with upstream data. If user data is temporarily stored in one of the downstream queues, it originally came from the telecommunications backbone via the chassis switch card in the IMAS and is ready to be transferred to the designated DSL-side port for delivery to the corresponding subscriber. Similarly, if user data is temporarily stored in one of the upstream queues, it originally came from a subscriber via the DSL line and framer ( or ) and is ready to be transferred to the telecommunications backbone via the UTOPIA mux  (see ) in the line card and the chassis switch card.","To use another example, if eight DSL-side ports and one CSC-side port are provided in this line card, the buffer memory  must be large enough to accommodate nine total ports. For four queues per port, this particular line card uses at least thirty-six queues in the buffer memory . In one embodiment of the present invention, sixty-four queues are provided in which four queues are associated with a port. Thus, sixty-four queues can support sixteen ports.","Each queue in the buffer memory  is large enough to overcome any speed mismatch problems and provide enough buffering for bursty traffic. In one embodiment, each queue can hold anywhere from 128 cells to 2,048 cells. Although an ATM cell is 53 bytes long, the cell size used in the queues is 64 bytes. The actual size of the queues is programmable and can be adjusted to suit particular needs.","If latency is a problem, the queue can be made small. A large queue may potentially hold cells for an undesirably long time because other cells in front of it may be present. A smaller queue reduces the chance of waiting for other earlier cells to be processed. If the queue is small enough, either the cell is processed almost immediately with very little waiting period or the cell is discarded because the queue has no available space.","As shown in , some of the other components in the line card contain FIFOs. The filter  and the two framers  and  have several FIFOs associated with each port. In filter , two FIFOs are provided coinciding with the telecommunications backbone port. One FIFO is for the downstream direction and, in one embodiment, the FIFO is four cells deep to maintain the data rate. The other FIFO is for the upstream direction and is one cell deep. As mentioned above, a single cell in the queues is 64 bytes even though an ATM cell is 53 bytes long.","If data is temporarily stored in a downstream FIFO of the filter , it originally came from the telecommunications backbone via the chassis switch card in the IMAS and is ready to be transferred to the designated FIFO in the buffer memory . Once in the buffer memory , the arbiter and buffer manager will make sure that it makes its way to its designated DSL-side port for delivery to the corresponding subscriber. Similarly, if data is temporarily stored in the upstream FIFO, it originally came from the buffer memory  and is ready to be delivered to the telecommunications backbone via the UTOPIA mux  (see ) in the line card and the chassis switch card.","The framer  of  has two FIFOs per DSL-side port. Thus, framer  has two FIFOs associated with each line -. Framer  also has two FIFOs per DSL-side port; that is, two FIFOs are provided for each line -. For the two FIFOs associated with a DSL-side port, one FIFO is designated for the upstream direction while the other FIFO is designated for the downstream direction. Each FIFO is two cells deep. Again, a single cell in the FIFOs is 64 bytes even though an ATM cell is 53 bytes long.","Like the filter , if data is temporarily stored in a downstream FIFO of the framer (either  or ), it originally came from the telecommunications backbone via the chassis switch card in the IMAS and is ready to be transferred to the designated DSL-side port for delivery to the corresponding subscriber. Similarly, if data is temporarily stored in the upstream FIFO, it originally came from a subscriber via the DSL line\/port and is ready to be delivered to the buffer memory  for ultimate delivery to the telecommunications backbone via the UTOPIA mux  (see ) in the line card and the chassis switch card.","Returning to , this particular example buffer memory  shows support for thirty-three ports (i.e., thirty-two ports for the DSL-side and one port for the telecommunications backbone-side). Each port is associated with four queues. Thus, port  has queues -, port  has queues -, port  has queues -, and port  has queues -. The first thirty-two ports (ports -) are associated with the downstream direction (i.e., telecommunications backbone-side to DSL-side). The last port, port , is associated with the upstream direction (i.e., DSL-side to telecommunications backbone-side). In essence, ports - are associated with the DSL lines coupled to the DSL modems, while port  is associated with the uplink telecommunications backbone or WAN port. In one embodiment, the upstream queue (i.e., port ) supports one queue, while in another embodiment, this upstream port supports four queues as shown in .","Analogously, in , eight ports are associated with the downstream direction (i.e., those ports coupled to DSL modems -) and one port is associated with the upstream direction (i.e., the telecommunications backbone port, either port  or  of FIG. D that is coupled to either UTOPIA lines  or  in ). For example, referring to , if data is designated for the fourth port, it is a downstream data for the DSL line that is coupled to DSL modem . If the data is designated for the ninth port, it is an upstream data for the UTOPIA mux  that is ultimately coupled to the telecommunications backbone port(s).","For any group of four queues in the buffer memory  that are associated with a port, each queue is associated with some sort of service class. This service class can be based on the well-known ATM service categories (i.e., ABR, CBR, UBR, VBR) and artificial weights assigned to these categories. Additionally, all traffic passing through the line card, and hence through the buffer memory , is also associated with these ATM service categories.","Knowing that data is associated one ATM service category or another (e.g., CBR v. ABR), how does the system determine which data has priority? Remember, priority is important in determining which data is handled first over another data to get that data from one location to another. To resolve resource contention (i.e., bus access), the system uses a programmable weighted fair queueing (WFQ) algorithm, which is discussed in greater detail below in the WEIGHTED FAIR QUEUEING subsection. In this respect, the weighted fair queueing is implemented as a scheduling scheme more than a priority scheme\u2014those types of data with higher weights are processed more frequently and quickly than other types of traffic with lower weights but all the data will be processed to ensure some sort of fairness.","Weighted fair queuing (WFQ) is an algorithm that controls the ratio of transmission bandwidth allocation among different traffic flows during periods of congestion. In this respect, weighted fair queueing is related to timing. When enabled for an interface, weighted fair queueing provides traffic priority management that automatically sorts among individual traffic streams without requiring that the system first define access lists. Weighted fair queueing can manage data streams, whether duplex or simplex.","This WFQ algorithm requires that weights be assigned to the various types of traffic that will flow through the system. In this case, the type of traffic is represented by the aforementioned ATM service categories. In one embodiment of the present invention, these ATM service categories are ABR, CBR, UBR, and VBR, which were briefly discussed in the BACKGROUND section of this patent specification.","Based on these categories, the system administrator can designate relative weights for the various types of data that pass through the IMAS, which allows the priority queueing mechanism to process certain types of data more frequently than others while maintaining some type of fairness among all the data. For certain types of traffic, the system administrator may want to assign the highest weights so that they can be processed as required by its service. For example, the system administrator may assign CBR with the highest weight so that CBR data can be processed more frequently and quickly.","Although weights are initially assigned to these ATM service categories, these weights are programmable so that the system administrator can make changes based on his\/her needs (i.e., application, environment, usage). In accordance with one embodiment of the present invention, the priority levels among these ATM service categories is, from highest to lowest priority, CBR, VBR, ABR, and UBR. The weights range from \u201c1\u201d to \u201c15\u201d where \u201c1\u201d represents the highest priority and \u201c15\u201d represents the lowest priority.","As mentioned above, each queue in the buffer memory  is associated with a programmable weight. Accordingly, data of a certain service class type is stored in the queue that is designated for that service class type. For example, port  uses queue  for the service class 1, queue  for service class 2, queue  for service class 3, and queue  for service class 4. In one embodiment, service class 1 is associated with CBR, service class 2 is associated with ABR, service class 3 is associated with VBR, and service class 4 is associated with UBR. However, this association of service class types with queues is flexible; that is, some data that would normally be delivered to a queue associated with service type 1 may be delivered to queue of a different service type. In any event, using programmable weights, bus arbitration can be resolved using a weighted fair queueing algorithm. As described below, weighted fair queueing is used for data transfers out of the buffer memory  across the bus .","Priority Queueing Mechanism\u2014Operation","Having described the queues and the FIFOs for the buffer memory , filter , and the two framers  and , the operation of the priority queueing mechanism will now be discussed. Returning to , the manner in which these FIFOs is used is dictated by a buffer manager  and arbiter . Essentially, all data, regardless of whether they are upstream or downstream, goes through the buffer memory ; that is, any data that is intended for any subscriber (i.e., DSL-side ports) or the Internet (i.e., telecommunications backbone-side or WAN port side) is buffered in the buffer memory  first. The arbiter  is essentially a master bus arbiter to the slave buffer manager . The arbiter  implements a combination of round robin and weighted fair queueing to resolve access to bus . The arbiter  sends commands to the buffer manager , which responds with information back to the arbiter and correspondingly takes some action on the data in the buffer memory . At a lower level, the arbiter  makes certain bus arbitration decisions and determines the locations of certain queues in the buffer memory.","In one embodiment of the present invention, bus access is determined by four (4) priority levels. These priority levels, from highest priority to lowest priority, are as follows:","(1) downstream data in a FIFO of the filter ;","(2) upstream data in a queue of the buffer memory ;","(3) upstream data in a FIFO of any framer  or ; and","(4) downstream data in a queue of the buffer memory .","Thus, if any data in a downstream FIFO exists in the filter , the priority queueing mechanism handles it first before all other traffic. Also, if the buffer manager happen to be currently processing upstream data from a framer's FIFO (priority level 3) and downstream data in a FIFO of filter  appears (priority level 1), the priority mechanism ensures that the current transaction is completed and then immediately turns to handle the downstream data in the filter's FIFO.","Despite this particular priority order, other priority ordering is programmable and within the scope of the present invention. Thus, another priority level variation includes making the highest two priority levels programmed for the downstream data while making the lowest two priority levels programmed for the upstream data. In other words, another embodiment of the present invention provides for the following priority levels (from highest to lowest):","(1) downstream data in a FIFO of the filter ;","(2) downstream data in a queue of the buffer memory ;","(3) upstream data in a queue of the buffer memory ; and","(4) upstream data in a FIFO of any framer  or .","A third variation exists. This third variation incorporates priority levels, from highest priority to lowest priority, as follows:","(1) downstream data in a FIFO of the filter ;","(2) upstream data in a FIFO of any framer  or ;","(3) downstream data in a queue of the buffer memory ; and","(4) upstream data in a queue of the buffer memory .","This particular variation stresses the delivery of data to the buffer memory  first to minimize blocking into the line cards (whether from the telecommunications backbone or the subscribers via the DSL lines) and then, delivery of data out of the buffer memory. In both cases, the downstream is considered more important than upstream.","One skilled in the art can appreciate other possible variations to this priority level list. For the purposes of further discussion, the first embodiment (downstream-upstream-upstream-downstream) will be used.","According to the first priority level, the arbiter will handle any data that is present in the downstream FIFO of the filter. This handling involves the examination of the data itself with the assistance of the look-up table , an examination of the state of the designated queue in the buffer memory , and a transfer\/discard decision.","First, in a prior connection identification session (i.e., ATM negotiation), the CPU subsystem programmed the look-up table  associated with the filter  with valid connections based on the VPI\/VCI number in the cell header. Based on the cell header, the filter  looks up the corresponding destination queue information for this data. This destination queue information is the designated queue in the buffer memory . How does the look-up table  get this information? In a previous communication, the SVC signaling logic negotiated the VPI\/VCI along with other connection information with other switching nodes (e.g., ATM switches, routers) in the network for this communication session. The connection information includes a one-to-one matching of VPI\/VCI with the relevant port number (which identifies the subscriber). The CPU subsystem  ( and E) in the chassis switch card sends update table information via the I\/O bus  to this look-up table  ().","The arbiter  recognizes that data is present in the downstream FIFO of the filter . This recognition is possible due to a flag associated with the queue that is sent to the arbiter  when data is present in the queue. When the arbiter  has finished its current task, it immediately proceeds to process this new downstream data in the filter. In addition to the flag, the queue sends the queue number to the arbiter . Based on the destination queue information of this data from the look-up process, the arbiter examines the corresponding downstream queue in the buffer memory  to determine if it is full or not full. If the queue in the buffer memory  is full, the filter  is instructed by the arbiter  to discard the data in this particular queue.","If the queue is not full, the buffer manager  transfers the data from the FIFO in the filter  to the designated queue in the buffer memory  across the bus . The buffer manager  stores the data in the designated queue in the buffer memory  and notes the memory location. The arbiter continues to examine the filter to determine if more downstream data is present in accordance with this highest priority level. So long as data is present in the downstream FIFO of the filter , the arbiter  will process this data to transfer it to the designated queue in the buffer memory  or discard it if the designated queue in the buffer memory  is full. If all data in the downstream FIFO of the filter  has been handled (or if no data is present at all), the priority queueing mechanism can proceed to handle transactions at the second priority level.","In the second priority level, if data is present in any of the four upstream queues of the buffer memory , the priority queueing mechanism will handle this data, so long as no data in the downstream FIFO of the filter  is present (priority level 1). The priority queueing mechanism will transfer this data to the upstream FIFO of the filter  in preparation for this data to be delivered to the telecommunications backbone via the chassis switch card.","If more than one of the four upstream queues associated with a port in the buffer memory  are filled with data, the priority queueing mechanism uses weighted fair queueing to resolve bus access contention. Indeed, any data that is coming out of the buffer memory  is subject to the weighted fair queueing decision-making process. Thus, the arbitration-winning data in the queue is transferred out of the buffer memory  first. For example, if CBR data was assigned a higher weight than UBR data, then the CBR data will probably be transferred out of the buffer memory  first.","Because data is delivered to the chassis switch card via the UTOPIA mux , this upstream FIFO in the filter  is not full. Of course, a FIFO that is one cell deep is either full or not full. However, for precautionary measures, this upstream FIFO can be deeper than one cell.","In the third priority level, the priority queueing mechanism uses a round robin scheme to examine the upstream FIFOs associated with each DSL-side port. If any data is present in the upstream FIFO currently selected, the priority queueing mechanism will transfer this data to the appropriate queue of the buffer memory . The priority queueing mechanism adheres to a round robin scheme. In accordance with one embodiment of the present invention, the implemented round robin scheme processes each unit in turn in cyclical fashion; that is, given units , , . . . , N, the round robin scheme provides for the processing of unit  first, then unit , and so on until unit N. Thereafter, the round robin scheme returns to unit  for processing, and then unit , and so on. This process is cyclical so that every unit gets processed equally.","The priority queueing mechanism adheres to a round robin scheme to examine each upstream FIFO so long as priority level 1 or priority level 2 traffic is not present. For example, the priority queueing mechanism via the arbiter  will examine the upstream FIFO associated with the first port (e.g., line ). For this first port, the upstream FIFO is located in framer . If data exists, the priority queueing mechanism transfers that data to the upstream queue in the buffer memory  (for a single upstream queue implementation).","In another embodiment, the data transfer routine for this priority level 3 data is not suspended until all data associated with this upstream FIFO is processed. For example, two cells might be present in this upstream FIFO. After this first cell is transferred to the buffer memory, priority level 2 is triggered (because data has been stored in one of the upstream queues of the buffer memory ). Instead of suspending the processing of the second cell in the upstream FIFO in framer , the priority queueing mechanism will begin and complete the data transfer of this second cell to the appropriate upstream queue in the buffer memory .","If, however, data does not exist in the upstream FIFO of the framer  that is associated with this first port (line ), then the priority queueing mechanism moves on to the upstream FIFO associated with the next port (e.g., line ) in accordance with the round robin scheme. The upstream FIFO for this second port is also located in the framer . If data does not exist in this upstream FIFO, the priority queueing mechanism will move on to the upstream FIFO of the next port (e.g., line ). This process continues repeatedly. If the priority queueing mechanism reaches the upstream FIFO of the last port (e.g., line ), the priority queueing mechanism will return to the first port (e.g., line ). This circular cycle continues indefinitely.","If the priority queueing mechanism has to suspend priority level 3 operation because of the existence of a higher priority level traffic, the priority queueing mechanism stores the last port it processed. After taking care of the higher priority level traffic, the priority queueing mechanism will return to this last port which it was processing at the time of the suspension.","In the fourth (and lowest) priority level, the priority queueing mechanism uses a round robin scheme to examine the downstream queues in the buffer memory  and uses weighted fair queueing to select the particular queue to transfer the data therein to the designated framer (and hence port). In another embodiment of the present invention, the priority queueing mechanism searches for the presence of data in any downstream queue, and if multiple queues have data, the priority queueing mechanism uses a combination of round robin and weighted fair queueing to select the data for transfer.","As mentioned above, the buffer memory  includes a plurality of downstream queues, in which four queues are associated with each DSL-side port. Furthermore, for those queues that have data, these queues may be associated with different DSL-side ports. For example, an ABR downstream queue associated with the fifth DSL-side port and a UBR downstream queue associated with the eighth DSL-side port may have data. How does the priority queueing mechanism resolve contention? Which data will be transferred first?","In accordance with one embodiment of the present invention, the priority queueing mechanism uses round robin to examine the group of queues associated with the ports. In other words, the priority queueing mechanism examines the group of four downstream queues associated with the first port. If any of these four downstream queues contains data, the priority queueing mechanism processes this port before moving on to examine the downstream queues of other ports. If the queues for this first port do not contain data, the priority queueing mechanism moves on to examine the group of four queues associated with the second port. This process continues where the ports are examined in round robin fashion. If any of the queues associated with the currently selected port contain data, the priority queueing mechanism will handle this data as described below. Once the queues for a currently selected port have been processed, the priority queueing mechanism moves on to the next port and its group of four queues.","If data exists in any or all of the downstream queues of a selected port, the priority queueing mechanism uses weighted fair queueing to determine which of the four downstream queues should be selected. Because the system has programmed priority weights for the various ATM service classes (e.g., ABR, CBR, UBR, VBR) that are tied to each queue, weighted fair queueing can quickly select the queue for data transfer. When a particular downstream queue has been selected, the priority queueing mechanism transfers the data in the queue to the corresponding FIFO of the framer associated with the designated port. Even if more data exists in any of the downstream queues of this selected port, the priority queueing mechanism moves on to the next port, which in effect, ensures fairness among subscribers (or certainly fairness among different ports). The priority queueing mechanism thus moves on the next port and its group of four downstream queues, in accordance with the round robin scheme.","In another embodiment of the present invention, instead of applying round robin among the downstream ports and then weighted fair queueing among the downstream queues for the selected port, the priority queueing mechanism searches for data (via a flag indicator from the queue that indicates that data is present) in all of the downstream queues and applies a combination of round robin and weighted fair queueing to the ports and queues that contain data. Initially, the priority queueing mechanism detects for data in any of the downstream queues of the buffer memory . If data exists in multiple queues, the priority queueing mechanism examines the priority of the queues and selects the data according to the weighted fair queueing algorithm. If both data are stored in equal priority queues (e.g., UBR queue of port two and UBR queue of port four), the priority queueing mechanism uses round robin to select the data for processing. A more detailed explanation follows.","Assume that, initially, the priority queueing mechanism searches for the presence of data in all of the downstream queues for all the ports. In a simple case, only one downstream queue in the buffer memory  contains data. The priority queueing mechanism processes this data by examining the downstream FIFO in the framer associated with the destination port. If the downstream FIFO in the framer is full, the data is discarded. In another embodiment, if the downstream FIFO in the framer is full, the priority queueing mechanism leaves the data intact in the downstream queue of the buffer memory  until the designated downstream FIFO in the framer is not full.","In a slightly more complicated case, multiple different downstream queues in the buffer memory  contain data. If one data is stored in a higher priority queue than another data (regardless of port), the priority queueing mechanism selects the data according to the weighted fair queueing algorithm. For example, if CBR is programmed with the highest weight, and data is stored in the CBR queue of the third port and another data is stored in a VBR queue of port six, the priority queueing mechanism selects the data according to the weighted fair queueing algorithm. More than likely, the data in the CBR queue will be selected ahead of the data in the VBR queue. In a case where multiple different downstream queues in the buffer memory  contain data and all these queues are programmed for equal priority (e.g., all are UBR data), the priority queueing mechanism uses round robin to select the data for processing.","Generally, however, barring the presence of higher priority level traffic (i.e., priority levels 1, 2, or 3), the priority queueing mechanism searches for the presence of data in any of the downstream queues of the buffer memory . Once a data queue (and hence data) has been selected via a combination of round robin and weighted fair queueing, it is processed. After processing, it searches for priority level 4 data again and re-evaluates the selection via a combination of weighted fair queueing and round robin. For the most part, this re-detection and re-evaluation do not change the selection decision already made during a previous selection cycle. However, this re-detection and re-evaluation significantly change the selection decision if new data higher queueing priority has been detected.","For example, assume that four data has been initially detected and all four are at the same queueing priority (e.g., UBR). The priority queueing mechanism used round robin to select the data for processing and in this case, the order has been set so that UBR is processed first, then UBR, then UBR, and finally UBR. While the priority queueing mechanism is processing the first selected data (i.e., UBR) for transfer to the corresponding framer, a new data ABR arrives into a downstream queue in the filter. This new data corresponds to a priority level 1 data (i.e., data in a downstream queue of the filter) and hence, the priority queueing mechanism finishes up the current transfer of UBR from the downstream queue of the buffer memory  into the designated downstream FIFO of the framer. Once completed, the priority queueing mechanism does not process the UBR data in this priority level 4 process. Instead, the priority queueing mechanism suspends operation of this priority level 4 process and immediately proceeds to process the filter's just-recently-filled downstream queue by transferring it to the designated downstream queue in buffer memory .","When this last transfer has completed, and no other higher priority level traffic exists, the priority queueing mechanism returns to the priority level 4 process that was temporarily suspended. However, instead of processing UBR data, the priority queueing mechanism searches for presence of data in the downstream queues again and based on the detection results, re-evaluates the selection decision. This time, a new data ABR has arrived into one of the downstream queues of the buffer memory. It is programmed for a higher weighted priority than the UBR data (i.e., assuming that the system administrator provided higher weights for ABR than UBR) so, the priority queueing mechanism used weighted fair queueing to select the data to process. Based on the selection decision, the appropriate data is handled.","In another embodiment of the present invention, the priority queueing mechanism searches for data in all of the downstream queues. Of those queues that contain data, the priority queueing mechanism applies round robin among the ports associated with these queues. Among the queues for a port, the priority queueing mechanism applies weighted fair queueing. Unlike the immediately preceding embodiment, this embodiment does not apply weighted fair queueing immediately. It examines those ports that contain data in any of its queues, applies round robin among them, and then if more than one queue for the selected port contain data, it applies weighted fair queueing among the queues.","Weighted Fair Queueing","In one embodiment of the present invention, weighted fair queueing is implemented in the priority queueing mechanism and applied only to the priority level 4 data; that is, weighted fair queueing is applied to the downstream queues in the buffer memory. In other embodiments, weighted fair queueing is applied to all queues in the buffer memory, whether downstream or upstream. For instructional purposes, however, the weighted fair queueing scheme in accordance with one embodiment of the present invention will be discussed with respect to the priority level 4 data.","As mentioned above, each downstream port is associated with four queues, where each queue is associated with some service class type. To ensure fairness among the subscribers of the telecommunications provider using the IMAS, the priority queueing mechanism examines each port in round robin fashion. In other words, the priority queueing mechanism examines the first port, then the second port, and so on until the last port, at which point, it cycles back to the first port and repeats the process. This is standard round robin implementation. In this way, no one port has priority over any other port; the priority queueing mechanism will examine every port with equal frequency.","Within a given port, however, the priority queueing mechanism applies weighted fair queueing. This weighted fair queueing scheme assigns weights to the various queues associated with each port to ensure that each data of a certain service class types is processed in accordance with its service requirements, while ensuring that all data is serviced at some point to maintain some sort of fairness. Thus, one queue may be assigned a greater weight than another queue and hence, may be serviced more frequently.","In one example, the queue associated with service class 1 is assigned a weight of 8, the queue associated with service class 2 is assigned a weight of 4, the queue associated with service class 3 is assigned a weight of 2, and the queue associated with service class 4 is assigned a weight of 1. In accordance with one embodiment of the present invention, a lower weight number has a greater weight and will likely win the arbitration. Thus, if all four of these queues has data, the queue associated with the weight of 1 wins the arbitration.","Once a winner of the arbitration has been determined, the priority queueing mechanism loads the winning queue with the original weight while decrementing all other queues by one. All weight numbers are positive (or zero). If a non-winning queue has a weight number of 0, it will not be decremented further to avoid negative numbers; rather, it will keep this value until it wins the arbitration, where the queue will be loaded with the original weight number. Assume the original weights for each queue are as follows:","Queue \u20148","Queue \u20144","Queue \u20142","Queue \u20141","In this cycle, queue  wins the arbitration because it has the lowest weight number (i.e., 1). The data in the winning queue is then delivered from the buffer memory to the framer. The weights are then updated for the next round robin pass. Queue  is loaded with its original weight number 1, while the other queues decrement their respective weight numbers by 1. So, the weights for each queue are now as follows:","Queue \u20147","Queue \u20143","Queue \u20141","Queue \u20141","At this point, data may exist in any of these queues, but to ensure fairness among the subscribers (i.e., ports), the priority queueing mechanism moves on to the next port for arbitration. When the priority queueing mechanism returns to this port again through the round robin scheme, the weights are as shown above. In the event of a tie (e.g., queue  and queue ), the priority queueing mechanism resolves the tie by using the original weights and letting the higher weight number win (thus, queue  will always win in a tie with an original weight of 8). Thus, in this example, queue  wins again. In another embodiment, ties are resolved by letting the queue with the lower original weight number win. The weights for these queues will now be as follows:","Queue \u20146","Queue \u20142","Queue \u20142","Queue \u20140","In accordance with one embodiment, ties are resolved by letting the queue with the higher original weight number win. Thus, for twenty round robin cycles, the weight numbers of the queues are as follows (with the winner underlined):",{"@attributes":{"id":"p-0309","num":"0308"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"Queue 1","Queue 2","Queue 3","Queue 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"8","4","2",{"u":"1"}]},{"entry":[{},"7","3",{"u":"1"},"1"]},{"entry":[{},"6","2","2",{"u":"0"}]},{"entry":[{},"5",{"u":"1"},"1","1"]},{"entry":[{},"4","4",{"u":"0"},"0"]},{"entry":[{},"3","3","2",{"u":"0"}]},{"entry":[{},"2","2",{"u":"1"},"1"]},{"entry":[{},"1","1","2",{"u":"0"}]},{"entry":[{},{"u":"0"},"0","1","1"]},{"entry":[{},"8",{"u":"0"},"0","0"]},{"entry":[{},"7","4",{"u":"0"},"0"]},{"entry":[{},"6","3","2",{"u":"0"}]},{"entry":[{},"5","2",{"u":"1"},"1"]},{"entry":[{},"4","1","2",{"u":"0"}]},{"entry":[{},"3","0",{"u":"1"},"1"]},{"entry":[{},"2",{"u":"0"},"2","0"]},{"entry":[{},"1","4","1",{"u":"0"}]},{"entry":[{},{"u":"0"},"3","0","1"]},{"entry":[{},"8","2",{"u":"0"},"0"]},{"entry":[{},"7","1","2",{"u":"0"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"For this small sample (i.e., 20 cycles) and assuming that all queues contain data during the arbitration period, queue  wins 8\/20, queue  wins 7\/20, queue  wins 3\/20, and queue  wins 2\/20 times. If the sample size is increased, the percentage distribution should be roughly 50% for queue , 25% for queue , 12.5% for queue , and 6.75% for queue .","In accordance with another embodiment of the present invention, ties are resolved by letting the queue with the lower original weight number win. Using the example above where the queues are assigned original weight numbers of 8, 4, 2, and 1, the weights of the queues are as follows (with the winner underlined) for twenty round robin cycles:",{"@attributes":{"id":"p-0312","num":"0311"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"center"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"Queue 1","Queue 2","Queue 3","Queue 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"8","4","2",{"u":"1"}]},{"entry":[{},"7","3","1",{"u":"1"}]},{"entry":[{},"6","2",{"u":"0"},"1"]},{"entry":[{},"5","1","2",{"u":"0"}]},{"entry":[{},"4",{"u":"0"},"1","1"]},{"entry":[{},"3","4","0",{"u":"0"}]},{"entry":[{},"2","3",{"u":"0"},"1"]},{"entry":[{},"1","2","2",{"u":"0"}]},{"entry":[{},{"u":"0"},"1","1","1"]},{"entry":[{},"8","0","0",{"u":"0"}]},{"entry":[{},"7","0",{"u":"0"},"1"]},{"entry":[{},"6","0","2",{"u":"0"}]},{"entry":[{},"5",{"u":"0"},"1","1"]},{"entry":[{},"4","4","0",{"u":"0"}]},{"entry":[{},"3","3",{"u":"0"},"1"]},{"entry":[{},"2","2","2",{"u":"0"}]},{"entry":[{},"1","1","1",{"u":"1"}]},{"entry":[{},"0","0",{"u":"0"},"1"]},{"entry":[{},"0","0","2",{"u":"0"}]},{"entry":[{},"0",{"u":"0"},"1","1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"Of course, these weight numbers are exemplary only. Other weight numbers can be assigned to the queues in accordance with a desired distribution scheme.","Thus, with the weighted fair queueing scheme in accordance with one embodiment of the present invention, all queues are serviced fairly but the queues that are associated with a higher weight are serviced more frequently than the other lower weight queues. Depending on the specific weights used for each queue, the percentage distribution among the queues will vary. The above example assumed that all queues contained data. If some queues do not contain data, that queue is ignored during the weighted fair queueing arbitration process. Moreover, because the priority queueing mechanism moves on to the next port in round robin fashion even if data exists in the current port, all subscribers (i.e., ports) are ensured equal access to services.","Frame-Based Line Card Architecture","Unlike the cell-based line card described above, another embodiment of the present invention uses a frame-based line card (e.g., IDSL). The frame-based line card includes many components, some of which are shown in . Only those components necessary to illustrate this particular embodiment of the present invention are shown. One readily skilled in the art can evaluate this frame-based line card architecture and generate other components (e.g., DMA circuits) that, while necessary, are not integral to the inventive concepts.","As shown in , the frame-based line card includes a UTOPIA mux , an ATM SAR , at least one framer , a CPU , a PCI bridge , memory in the form of DRAM , and a PCI bus . The UTOPIA mux  is coupled to lines  and . These UTOPIA interface lines  and  in  correspond to lines  and  in , assuming that the line card of  is line card  of . Only one of these lines  or  is operational at any given moment. The UTOPIA mux  is coupled to line .","An ATM SAR  is coupled to line . As described below, this ATM SAR  works with the CPU  to essentially convert cells to frames (downstream direction) and frames to cells (upstream direction). The traffic below (toward the DSL side) the ATM SAR  is frame-based while the traffic above (toward the UTOPIA mux ) the ATM SAR  is cell-based. The ATM SAR is coupled to a PCI bus .","A framer  is coupled to the PCI bus . Depending on the protocol requirements of the card, the framer complies with HDLC\/PPP. The framer  is coupled to modems - via lines -, respectively. These modems - are coupled to DSL lines -, respectively. Although only one framer  is shown, a plurality of framers may actually be implemented if more xDSL modems are used. For example, in the cell-based line card shown in , two framers are used to support eight modems (and hence eight DSL-side ports), or four modems per framer. In , only one framer  is shown because this figure shows only four modems -. If more modems are used with this line card, more framers will be provided. In other embodiments, each framer may support up to 32 physical ports, and hence, 32 modems. The framer may also be implemented in multiple chips (e.g., IDSL).","A PCI bus bridge\/memory controller  is also coupled to the PCI bus , a CPU  via line , and a DRAM  via line . This PCI bridge gives the CPU access to the memory  and the PCI bus .","How do the ATM SAR  and the CPU  work together to generate frames from cells in the downstream direction and cells from frames in the upstream direction? Assume that four calls are simultaneously taking place. These calls are designated A, B, C, and D. Thus, call A is between the subscriber coupled to DSL line  and some other subscriber (not shown). Cells associated with call A are labeled A, A, . . . , AN. Call B is between the subscriber coupled to DSL line  and some other subscriber (not shown).). Cells associated with call B are labeled B, B, . . . , BM. Call C is between the subscriber coupled to DSL line  and some other subscriber (not shown).). Cells associated with call C are labeled C, C, . . . , CJ. Call D is between the subscriber coupled to DSL line  and some other subscriber (not shown).). Cells associated with call D are labeled D, D, . . . , DK. Of course, the letters N, M, J, and K are integers.","Depending on the particular frame protocol used, the frame varies in length. The memory  is used to store frames of data. A portion of the memory  is shown in .","As cells arrive into the ATM SAR , the ATM SAR  examines the VCI number in the cell header to determine its destination. If cell A arrives, it looks at the cell header and determines that the VCI number corresponds to the DSL-side port coupled to line . It processes this cell A by stripping the header and placing the payload into the portion of the memory  designated for call A (or the VCI number associated with call A). The PCI bridge\/memory controller  actually performs the data transfer to the memory location designated for call A. The same operation is performed on other cells A to AN, B to BM, C to CJ, and D to DK. The ATM SAR's DMA engine transfers these cells to memory where the DRAM controller functions as a slave.",{"@attributes":{"id":"p-0323","num":"0322"},"figref":"FIG. 11","b":["390","391","392","393","390","1","6","391","1","2","392","1","8","393","1","4"]},"When enough processed cells of a given call are stored to make up a frame, the ATM SAR  alerts the CPU . The CPU then obtains the memory location for this frame, processes the data to generate the protocol header (e.g., connection ID, checksum, link management), determines the destination port, and the framer's DMA engine fetches the data for the corresponding destination port. Thus, it delivers frames associated with call A to line , frames associated with call B to line , frames associated with call C to line  and frames associated with call D to line .","In the upstream direction, the line card performs the reverse operation. Frames arrive from the DSL modems (-). The CPU  processes the protocol headers for these frames and places them in the designated memory location in memory . The CPU  alerts the ATM SAR that a frame is ready to be transmitted upstream. Thereafter, the ATM SAR  segments the frames into cells with the appropriate headers, and transmits them upstream cell-by-cell to the UTOPIA mux .","I\/O Bus","The I\/O bus is a parallel bus for sending control, data, and address signals for chassis management purposes. The chassis switch cards use this bus to manage the chassis and interrogate the line cards and system switch cards (if any exists). In one embodiment, this I\/O bus is an ISA bus and is provided on the backplane for convenient access to all the components in the entire chassis. Indeed, this bus provides for a 24-bit address, 16-bit data, and can serve as an ISA bus extension via an I\/O bus.","The I\/O bus is used by the various components coupled to the bus to perform transactions for management, control, and monitor purposes. In particular, a CPU can control other components, assist other components in performing their jobs, and basically monitor the performance of the system via this bus. In one embodiment of the present invention, the CPU subsystem  (see ) in each chassis switch card provides the main processing brainpower for the chassis.",{"@attributes":{"id":"p-0328","num":"0327"},"figref":"FIG. 14","b":["56","10","51","11","52","1","53","2","54","22","55"]},"In the chassis switch card, the I\/O bus is coupled to the GWI  via line  (see ). How is the I\/O bus coupled to a microprocessor?  shows the I\/O bus (here represented by reference number ) coupled to the CPU subsystem . For a closer examination, refer to , where the I\/O Bus  is coupled to the ISA bus . This ISA bus is coupled to, among other things, an ISA bridge  which is coupled to a PCI bus , . The PCI bus is coupled to the PCI bridge , which is then coupled to a microprocessor .","In the line card, as shown in , the I\/O bus is represented by reference number . The I\/O bus  is coupled to an I\/O bus controller  which provides I\/O access to the various components in the line card (see ).","IC Bus","In one embodiment of the present invention, the IMAS uses an IC technology to monitor and control the environmental aspect of the IMAS. This includes the fan, power supply, and temperature sensors for the chassis as well as each of the cards, including the chassis switch cards and the line cards.","As known to those skilled in the art, IC technology requires a bidirectional 2-wire interface for inter-IC control. Indeed, the IC bus is a 2-wire bus that allows various devices that are coupled to the bus to communicate with each other. One wire is for serial data and the other wire is for the serial clock. Each device connected to the bus is software addressable by a unique address and operates in a master\/slave relationship. The technology also allows for multi-master capability.",{"@attributes":{"id":"p-0333","num":"0332"},"figref":["FIG. 15","FIG. 6","FIG. 7"],"b":["10","11","97","27","231"],"sup":["2","2","2","2","2","2","2","2","2"]},"For the first set of IC buses, IC_A, chassis switch cards  and  are coupled to IDPROM  in line card  (LUI_) via IC bus . Chassis switch cards  and  are coupled to IDPROM  in line card  (LUI_) via IC bus . This continues for each of the IDPROMs in each line card up to the last line card , in which chassis switch cards  and  are coupled to IDPROM  in line card  (LUI_) via IC bus . These IDPROMs contain various environmental settings information for each line card.","To monitor and control the environmental settings for the other components in the chassis, a nineteenth copy of the IC bus is provided. Chassis switch cards  and  use port IC_B to communicate with the power shelf  and the backplane IDPROM  via IC bus . This bus allows the system to examine power supply settings and fan states of the chassis.","The SMB controller  is the primary microcontroller for the IC bus (see ). This SMB controller  is coupled to the system microprocessor  via ISA bus , ISA bus bridge, , PCI bus , and PCI bridge .","The IC buses are also coupled to I\/O port devices for power monitoring, power control, and isolation control. If a line card fails for some reason and hangs up the I\/O bus so that no other transaction can take place across this I\/O bus, the CPU uses the IC bus for isolation control. The CPU in effect sends a command via the IC bus to isolate this defective line card off the I\/O bus so that other devices can access the I\/O bus.","Miscellaneous Backplane Bus Signals","The IMAS includes a number of miscellaneous signals that are routed across the backplane to identify which cards are present and to perform individual card functions. These miscellaneous signals are provided in Tables B-E below.",{"@attributes":{"id":"p-0339","num":"0338"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE B"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Line Card Signal Description (Slots 1-9 & 12-20)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Signal Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["SCL","IC Bus Clock source\/sink"]},{"entry":["SDA","IC Bus Data source\/sink"]},{"entry":["UTXDA <7:0>","UTOPIA Transmit Data to Line Card from CSC A"]},{"entry":["UTXCLKA","UTOPIA Transmit Clock to Line Card from CSC A"]},{"entry":["UTXENA","UTOPIA Transmit Enable to Line Card from CSC A"]},{"entry":["UTXSOCA","UTOPIA Transmit Start of Cell to Line Card from"]},{"entry":[{},"CSC A"]},{"entry":["UTXCLAVA","UTOPIA Transmit Cell Available from Line Card to"]},{"entry":[{},"CSC A"]},{"entry":["IRXDA <7:0>","UTOPIA Receive Data from Line Card to CSC A"]},{"entry":["URXCLKA","UTOPIA Receive Clock to Line Card from CSC A"]},{"entry":["URXENA","UTOPIA Receive Enable to Line Card from CSC A"]},{"entry":["URXCLAVA","UTOPIA Receive Cell Available from Line Card to"]},{"entry":[{},"CSC A"]},{"entry":["URXSOCA","UTOPIA Receive StartOfCell from Line Card to"]},{"entry":[{},"CSC A"]},{"entry":["UTXDB <7:0>","UTOPIA Transmit Data to Line Card from CSC B"]},{"entry":["UTXCLKB","UTOPIA Transmit Clock to Line Card from CSC B"]},{"entry":["UTXENB","UTOPIA Transmit Enable to Line Card from CSC B"]},{"entry":["UTXSOCB","UTOPIA Transmit Start of Cell to Line Card from"]},{"entry":[{},"CSC B"]},{"entry":["UTXCLAVB","UTOPIA Transmit Cell Available from Line Card to"]},{"entry":[{},"CSC B"]},{"entry":["URXDB <7:0>","UTOPIA Receive Data from Line Card to CSC B"]},{"entry":["URXCLKB","UTOPIA Receive Clock to Line Card from CSC B"]},{"entry":["URXENB","UTOPIA Receive Enable to Line Card from CSC B"]},{"entry":["URXCLAVB","UTOPIA Receive Cell Available from Line Card to"]},{"entry":[{},"CSC B"]},{"entry":["URXSOCB","UTOPIA Receive StartOfCell from Line Card to"]},{"entry":[{},"CSC B"]},{"entry":["CardPresent_Out*","Card Present signal pulled to Logic_GND by Line"]},{"entry":[{},"Card"]},{"entry":["SlotID_In <4:0>","Slot Identifier - 5 bits hard coded on backplane to"]},{"entry":[{},"represent slot number."]},{"entry":["Top_Insert_In","Pin on backplane used to ensure card is fully"]},{"entry":[{},"inserted before power up begins."]},{"entry":["Bot_Insert_In","Pin on backplane used to ensure card is fully"]},{"entry":[{},"inserted before power up begins."]},{"entry":["\u221248 Vsupply","Negative supply paths - may be sequenced"]},{"entry":["\u221248 Vreturn","Positive return paths - may be sequenced"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0340","num":"0339"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE C"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Chassis Switch Card (Slots 10 & 11) (Cubit Implementation only)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Signal Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["SCLA <17:0>","IC Bus Clock source\/sink"]},{"entry":["SCLB <17:0>","IC Bus Clock source\/sink"]},{"entry":["SDA_A <17:0>","IC Bus Data source\/sink"]},{"entry":["SDA_B <17:0>","IC Bus Data source\/sink"]},{"entry":["UTXD <7:0><17:0>","UTOPIA Transmit Data from CSC Slots to"]},{"entry":[{},"Line Card Slots 1 thru 9 and 12 thru 20"]},{"entry":[{},"inclusive"]},{"entry":["UTXCLK <17:0>","UTOPIA Transmit Clock from CSC Slots to"]},{"entry":[{},"Line Card Slots 1 thru 9 and 12 thru 20"]},{"entry":[{},"inclusive"]},{"entry":["UTXEN <17:0>","UTOPIA Transmit Enable from CSC Slots to"]},{"entry":[{},"Line Card Slots 1 thru 9 and 12 thru 20"]},{"entry":[{},"inclusive"]},{"entry":["UTXSOC <17:0>","UTOPIA Transmit Start of Cell from CSC"]},{"entry":[{},"Slots to Line Card Slots 1 thru 9 and"]},{"entry":[{},"12 thru 20 inclusive"]},{"entry":["UTXFull <17:0>","UTOPIA Transmit Full to CSC Slots from"]},{"entry":[{},"Line Card Slots 1 thru 9 and 12 thru 20"]},{"entry":[{},"inclusive"]},{"entry":["URXD <7:0><17:0>","UTOPIA Rcv Data from Line Card Slots 1 thru"]},{"entry":[{},"9 and 12 thru 20 incl."]},{"entry":["URXCLK <17:0>","UTOPIA Rcv Clock to Line Card Slots 1 thru 9"]},{"entry":[{},"and 12 thru 20 incl."]},{"entry":["URXEN <17:0>","UTOPIA Rcv Data Enable to Line Card Slots 1"]},{"entry":[{},"thru 9 & 12 thru 20 incl."]},{"entry":["URXEmpty <17:0>","UTOPIA Rcv Empty from Line Card Slots 1"]},{"entry":[{},"thru 9 & 12 thru 20 incl."]},{"entry":["URXSOC <17:0>","UTOPIA Rcv Start of Cell from Line Card"]},{"entry":[{},"Slots 1 thru 9 & 12 thru 20 incl."]},{"entry":["CardPresent_Out*","Card Present signal pulled to Logic_GND by"]},{"entry":[{},"installed Card"]},{"entry":["CardPresent_In <18:0>","Card present signal from all other cards in"]},{"entry":[{},"the chassis."]},{"entry":["SlotID_In <4:0>","Slot Identifier - 5 bits hard coded on backplane"]},{"entry":[{},"to represent slot number."]},{"entry":["Top_Insert_In","Pin on backplane used to ensure card is fully"]},{"entry":[{},"inserted before power up begins."]},{"entry":["Bot_Insert_In","Pin on backplane used to ensure card is fully"]},{"entry":[{},"inserted before power up begins."]},{"entry":["\u221248 Vsupply","Negative supply paths - may be sequenced"]},{"entry":["\u221248 Vreturn","Positive return paths - may be sequenced"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":"For Tables B and C, the SCL and SDA connectors are used for IC purposes."}]}}]}},"br":{}},"In one embodiment of the present invention, the IMAS is designed for the following bandwidth requirements. As provided in , the telecommunications backbone-side complies with OC-3, STS-3, T3, or E3. Accordingly, the chassis switch cards  and  support interfaces to these standard requirements.","In one embodiment, each telecommunications backbone-side line (e.g., line ) handles information flow with data rates of 155 Mbps. A given chassis switch card, such as chassis switch card , has two ports  and . However, in accordance with one embodiment of the present invention, only one is operational while the other is in active backup (or hot backup) mode. Thus, the IMAS can support 155 Mbps for the full duplex traffic across any one of the lines  or .","The star configuration backplane connection  represents 5 Gbps total capacity. How is this total capacity calculated? In one embodiment, each CSC-to-LIU line (e.g., line ) is 8 bits wide and the line card microprocessor speed is 20 MHz, resulting in a possible data rate of 160 Mbps (8 bits\u00d720 MHz). Thus, each of these CSC-to-LIU lines can handle 155 Mbps traffic to mirror that of the telecommunications backbone interface requirements (i.e., lines  or ). For thirty-six lines in the backplane connections , the total capacity is approximately 5.5 Gbps (18 line cards; 18 lines per chassis switch card for each line card; 36 lines for two chassis switch cards; 36\u00d7155 Mbps=5.5 Gbps).","In one embodiment, the switching capacity inside each of the chassis switch cards supports 640 Mbps. Referring to , a cubit device is coupled to each of the two telecommunications backbone ports (i.e., lines  and ) as well as each of the CSC-to-LIU ports. For eighteen line cards, eighteen cubits are provided. These cubit devices share a common bus  that provides 32 data bits at 20 MHz (). Thus, the total bandwidth is 640 Mbps. Each cubit can support 155 Mbps.","The path from the telecommunications backbone interface (e.g., lines  and  of ) to the line card CSC-side ports (chassis switch fabric  () supports 155 Mbps. This path runs through the chassis switch cards. Each cubit device, which is used to switch the telecommunications backbone-side with the LIU-side, supports 155 Mbps. The shared common bus  () for the cubits inside the chassis switch cards is 640 Mbps. Accordingly, the downstream direction is non-blocking in that any traffic coming from the telecommunications backbone can be routed unimpeded to the line cards; that is, the switch fabric in the IMAS is non-blocking up to the loop technology interface (line cards).","The line cards, however, provide some blocking in the downstream direction. But this cannot be avoided due to the much lower bandwidth of the loop technology. How much blocking exists? The particular xDSL technology selected and deployed for the subscriber loop plays a significant role in how much blocking exists. Depending on the xDSL technology, the data rates across each line (e.g., DSL lines -) will be as specified in Table A above (BACKGROUND section). For example, if ADSL is the selected loop technology, the maximum data rate in the downlink direction (i.e., IMAS line card to subscriber) is 8 Mbps, which is far less than the 155 Mbps supported in the chassis switch cards and the chassis switch fabric . For the most part, the line card's priority queueing mechanism, as explained above, designates downstream traffic as the highest priority. Accordingly, all downstream backplane traffic present on the backplane (via the UTOPIA mux) is processed first over all other types of traffic to ensure no blocking on CSC switch fabric.","In the upstream direction, the amount of blocking depends on the bandwidth and the number of subscribers (and hence the number of DSL-side line card ports) the telecommunications service provider wants to support with the IMAS. If more subscribers are supported, the more likely that blocking may exist across the switching fabric. To appreciate this phenomenon, examine two cases below. For both cases, assume that ADSL is the chosen loop technology.","In the first case, the service provider installs an IMAS in the central office. This IMAS contains eighteen line cards with eight DSL-side ports per line card and two chassis switch card. This configuration is shown in . In the upstream direction, the maximum ADSL speed is 640 Kbps. For eight DSL-side ports, the line card handles 5.12 Mbps (640 Kbps\u00d78 ports). Inside the line card, the shared bus can support 640 Mbps (32-bit at 20 MHz). The priority queueing mechanism ensures that some buffering is performed for speed matching and queueing purposes.","Although the line card has two upstream ports, only one is operational at any given time. Thus, the line card is like a concentrator that can receive traffic from eight different sources but output traffic at only one CSC-side port. So far, the single upstream output from the line card can run at 5.12 Mbps. For eighteen line cards, these eighteen outputs are provided to both chassis switch cards.","Each DSL-side cubit (e.g., cubits C-C of ) can support up to 155 Mbps. Because each LIU-to-CSC line (e.g., line  in ) runs at 5.12 Mbps, these LIU-to-CSC cubits can support this upstream traffic. This traffic can also be supported by the shared bus  because this bus runs at 640 Mbps ().","Like the line cards, the chassis switch card is analogous to a concentrator. It can receive traffic from eighteen different sources (i.e., line cards) and output traffic on only one telecommunications backbone-side port (either line  or  for chassis switch card  in ). On the telecommunications backbone-side, only one of the two uplink cubits (e.g., C and C of ) is fully operational while the other is in active backup mode. Collectively, the total bandwidth for these eighteen lines from the line cards is 92.16 Mbps (5.12 Mbps\u00d718 LIU-to-CSC ports). This bandwidth can be supported by either of the two cubits (e.g., cubit C or C in ) since each cubit can support 155 Mbps. Thus, in this case where eighteen line cards with eight DSL-side ports are provided per line card, the IMAS provides non-blocking in the upstream direction across the chassis switch fabric  and the chassis switch cards  and  ().","A second case alters the upstream non-blocking feature of the IMAS. In this case, assume that the same number of line cards (i.e., 18) and chassis switch cards (i.e., 2) are used. However, to increase subscriber count, each line card has sixteen DSL-side ports instead of the eight DSL-side ports used for the first case. In this second case, the number of DSL-side ports is doubled.","In the upstream direction, the maximum ADSL speed is 640 Kbps. For sixteen DSL-side ports, the line card handles 10.24 Mbps (640 Kbps\u00d716 ports). For eighteen line cards, these eighteen outputs are provided to both chassis switch cards. Each DSL-side cubit (e.g., cubits C-C of ) can support up to 155 Mbps. Because each LIU-to-CSC line (e.g., line  in ) runs at 10.24 Mbps, these LIU-to-CSC cubits can support this upstream traffic. Collectively, the total bandwidth for these eighteen lines from the line cards is 184.32 Mbps (10.24 Mbps\u00d718 LIU-to-CSC ports). This traffic can also be supported by the shared bus  because this bus runs at 640 Mbps ().","As mentioned above, each chassis switch card can use only one of the two uplink cubits (e.g., C and C of ) on the telecommunications backbone-side. The collective bandwidth of the traffic from all eighteen DSL-side cubits is 184.32 Mbps, as calculated above. This bandwidth cannot be supported by either of the two cubits (e.g., cubit C or C in ) since each cubit can support 155 Mbps. Thus, in this case where eighteen line cards with sixteen DSL-side ports are provided per line card, the IMAS provides some blocking in the upstream direction across the chassis switch fabric  and the chassis switch cards  and  ().","Note that traffic is statistical in nature; that is, blocking may be encountered during near-peak to peak times where nearly all of the DSL-side ports are used. Similar calculations can be made for the different DSL technologies in a straightforward manner. The only difference is the upstream and downstream bandwidth on the DSL lines.","However, this example assumes that all upstream traffic goes through only one of the chassis switch cards. As discussed above, the IMAS supports load balancing between the chassis switch cards so that one chassis switch card can support some traffic while the other chassis switch card can support the remaining traffic. With such a load balancing scheme, the IMAS provides non-blocking for the implementation described above in the example where the collective bandwidth from the eighteen lines from the line cards is 184.32 Mbps. Instead of one concentrator supporting eighteen lines, two concentrators are provided to support nine lines each, assuming that each card handles an equal load.","Similarly, blocking can be minimized by reducing the bandwidth for the upstream DSL lines. Instead of the maximum bandwidth of 640 Kbps, the IMAS can reduce the bandwidth to 200 Kbps, for example, and blocking would be minimized.","System Switch Architecture","As described briefly above, the system switch cards are used primarily for expansion purposes by providing connectivity between multiple chassis's. The system switch card is also a full function standalone ATM switch implemented mostly as a single card. Because it is implemented on the same platform and form factor as the line cards, the system switch card can be located in one of the line card slots in the IMAS chassis. Each system switch card contains a 5 Gbps switching fabric, therefore, in dual SSC configurations, the two system switch cards provide 10 Gbps of ATM switching. Similar to the CSC, the system switch card is also designed with multiple WAN interfaces.","In one embodiment, the system switch card provides 4 ports per card, but this can be expanded using an SSC ATM adaptor module, as shown in . As explained below, an eight-port SSC uses some of the ATLANTA switch chip set available from Lucent. These chips provide a highly integrated VLSI solution for implementing complete ATM functionality. The chip set includes the ALM, ABM, and ASX.","Referring now to , the two system switch cards  and  have four ports each and are normally inserted in the card slots shown in . The system switch cards  and  are coupled to the chassis switch cards  and , as well as the telecommunications backbone . System switch card  is coupled to chassis switch card  via line , and to chassis switch card  via line . System switch card  is coupled to chassis switch card  via line , and to chassis switch card  via line . Without the system switch cards, these lines - would normally be coupled to the telecommunications backbone ; that is, these lines - in  correspond to lines - in , respectively. With more ports, more chassis switch cards can be supported.","The system switch cards are also coupled to the telecommunications backbone . System switch card  is coupled to the telecommunications backbone  via lines  and . System switch card  is coupled to the telecommunications backbone  via lines  and . In this example, the link to the telecommunications backbone  is represented by telecommunications lines that comply with OC-3, OC-12, STS3, T3, or E3. However, other high capacity network-to-network digital transmission link technologies can be supported.","In , a more detailed view of an eight-port system switch card is shown. This system switch card was expanded to eight ports with an adaptor module , where six ports are used for the chassis switch cards and two ports are used for the telecommunications backbone.","One set of ports is coupled to the chassis switch cards. These ports are coupled to links -. The other set  of ports is coupled to the telecommunications backbone. These ports are coupled to links  and . In one embodiment, link  is fully operational while link  is in active or hot backup mode.","Links - are coupled to a quad transceiver , which is coupled to a quad framer  via line . Links - are coupled to quad transceiver , which is coupled to quad framer  via line . The framers operate as described above for the chassis switch cards. On the receive side, the framer performs byte alignment and frame synchronization, frame descrambling, frame overhead analysis, ATM cell synchronization, ATM cell header error correction, and ATM cell payload descramble. On the transmit side, the framer performs ATM cell payload scramble, ATM HEC generation, frame overhead generation, frame assembly, and frame scrambling. In one embodiment of the present invention, the framer is Toshiba TC35823F Quad controller.","A first ALM chip  is coupled to the quad framer  via line . A second ALM chip  is coupled to the quad framer  via line . Each ALM chip is an ATM layer UNI manager which performs UNI or NNI management functions on as many as 30 full-duplex physical (PHY) ports with an aggregate bandwidth of up to 622 Mbps. This chip is available from Lucent. Each ALM chip is packaged in a 240-pin SQFP.","A first ABM chip  is coupled to the ALM chip  via lines  and . A second ABM chip  is coupled to the ALM chip  via lines  and . Each ABM chip is an ATM buffer manager that incorporates flexible schemes for cell buffering, queue management, and scheduling to enable construction of high-performance, scalable, nonblocking switch fabrics. This chip is available from Lucent. Each ABM chip is packaged in a 388-pin BGA.","In one embodiment, each ABM chip supports 16K cells, 8K on ingress and 8K on egress. Up to four queues are provided per port with QoS support. Over the four queues, the system switch card utilizes a two-level weighted round robin scheduling. The ALM and ABM devices can be used together to create port cards for an ATM switch or to build a complete ATM multiplexer\/concentrator with up to 30 full duplex PHY ports.","Both ALM and ABM chips require a certain amount of associated external memory in order to provide the required functions of an ATM switch. The ALM needs external memory to keep all the connection tables and all collected statistics information. The ABM uses external memory for cell buffers. The size of each of these memory spaces is flexible and has a direct impact on the number of resources supported by the associated device. In one embodiment, the SRAMs are the synchronous flow-through SRAM family from Micron, Toshiba, or Samsung, which come in pin compatible configurations of 32K\u00d732\/36, 64K\u00d732\/36, and 128K\u00d732\/36. One configuration assumes that the memory is used solely for ingress and egress look-up and translation tables, whereas another configuration assumes that the memory also contains all of the policing parameters and statistics counters. Although the minimum number of connections supported for the downlink ALM is 8K and the minimum number of connections for the uplink ALM is 16K, in one embodiment, the ALMs will support 32K connections.","Both ALM chips are coupled to SRAM look-up tables. The first ALM chip  is coupled to SRAM look-up table  via line . The second ALM chip  is coupled to SRAM look-up table  via line . As stated above, this memory holds statistics and policing information on a per connection basis as well as standard translation functions. The memory spaces are used for index look-up table, policing parameter table, virtual connection parameter table, ingress counters, egress counters, and header translation table.","Both ABM chips are coupled to data SRAMs and pointer SRAMs. The first ABM chip  is coupled to data SRAM  via line , and pointer SRAM  via line . The second ABM chip  is coupled to data SRAM  via line , and pointer SRAM  via line . In one embodiment, the data SRAM is 128K\u00d736. Thus, the ABM chips can buffer 8K cells on ingress and 8K cells on egress. Due to the required 64-bit wide data path, two devices are necessary. For larger buffer sizes, two more memory devices would be required. Each ABM chip uses a pointer SRAM to manage the multiple queues in the cell buffer memory. The ABM uses a link list structure that is 18 bits wide in one configuration. The two configurations are 64K\u00d718 and 128K\u00d718 device per ABM chip.","An ASX chip  is coupled to the first ABM chip  via line  and to the second ABM chip  via line . The ASX is an ATM shared memory switching element providing an 8-port (622 Mbps per port) full duplex system. The ASX provides a total bandwidth of 5 Gbps (622 Mbps\u00d78 ports). This chip is also available from Lucent. The ASX chip is packaged in a 388-pin BGA.","Two of the eight ports (e.g., lines  and ) of the ASX chip  are coupled to the backplane via internal backplane links  and . These ports are for integration with CSCs.","For management and control by the CPU subsystem  in the chassis switch card (see ), an I\/O bus  is provided across the backplane. This I\/O bus  is coupled to the CPU subsystem . An I\/O bus controller  resides in the system switch card and contains address decoders and registers to handle data transfers between the CPU subsystem  and any component in the system switch card across the I\/O bus . Although  shows the I\/O bus controller  coupled only to the I\/O bus, this is not the case. As known to those skilled in the art, the I\/O bus controller is coupled to most, if not all, of the components in the system switch card which require management and control by the CPU subsystem . I\/O bus  of  is coupled to I\/O bus  of  and I\/O bus  of .","The system switch card also contains a power subsystem . The system relies on the delivery of a sufficient \u221248VDC power supply source. The \u221248VDC power is distributed across the backplane to all cards. Each card in the system is responsible for deriving its own working voltages from this \u221248VDC in the most effective manner. In the system switch card shown in , power subsystem  is provided to perform DC-to-DC conversion for supplying the required onboard voltage rails. In one embodiment, the system switch card requires +5V and +3.3V power rails.","IV. Software","The following discussion provides a description of the software system design of the IMAS. Note that the HARDWARE section above discussed some software aspects of the present invention in order to facilitate the teaching of the IMAS's operation. This SOFTWARE section will first discuss the Network Management System (NMS) and its interface with the IMAS. Then, a discussion of the software architecture of the IMAS itself will be provided. Finally, this patent specification will conclude with a discussion of the proxy signaling aspect of the present invention before presenting the CLAIMS.","In one embodiment of the present invention, the IMAS generally includes a high performance ATM switch core\/fabric, multiple xDSL line cards, and a network management system (NMS) to manage and control the chassis. The ATM switch core\/fabric and the multi-port xDSL line cards were discussed above in the HARDWARE section. The NMS and other software features of the IMAS will be discussed in this SOFTWARE section of the patent specification.","External to the IMAS chassis, the software portion of the present invention includes the NMS. Among the many components of the NMS is an IMAS device manager and a management information base (MIB) file that allows the NMS (regardless of manufacturer) to communicate with the IMAS for configuration and data collection.","In the IMAS chassis itself, the software components are proxy signaling, link management (e.g., ILMI), call routing (e.g., PNNI), chassis management, and protocol management (e.g., IP, PPP, Ethernet, AAL5).","Finally, the IMAS chassis includes several software entities that are responsible for the SVC proxy signaling aspect of the present invention. With this feature, the IMAS includes the requisite logic so that even if one side of the IMAS (e.g., DSL subscriber line) is PVC-based, the other side of the IMAS can support SVC. If both sides are SVC-based, the IMAS also supports this configuration.","Network Management System (NMS) and IMAS Interface","Generally, the software portion of the present invention is driven by a sophisticated network management system (NMS). The NMS is used by network administrators to configure, monitor, and otherwise control the operation of various equipment such as the various central office switches, DSLAMs, and the IMAS. In one embodiment, the NMS includes a fully integrated system based on JAVA allowing remote network management from any JAVA enabled browser. A more detailed treatment of the core NMS functionality will be provided below.",{"@attributes":{"id":"p-0381","num":"0380"},"figref":"FIG. 16","b":["601","600","606","601","600","606","606"]},"In , a network management consoles  is provided. In one embodiment, this console runs various JAVA-based web browser software  including Netscape Navigator, Microsoft Internet Explorer, and\/or HotJava. With any one of these browsers, the console  interfaces with the NMS server  via line  over a TCP Sockets Layer and line .","The NMS server , which is typically software running in Windows NT or a UNIX computing environment, is coupled to the network console  and telecommunications equipment (e.g., IMAS). Some commercially available NMS servers include Hewlett-Packard's OpenView, Cabletron's Spectrum, Sun MicroSystem's NetManager, and IBM's NetView.","In , the pieces of telecommunications equipment that are coupled to the NMS server  are the IMAS  and IMAS  via lines \/ and \/, respectively. As explained in the HARDWARE section above, these IMAS's  and  are coupled to various subscribers via subscriber lines. In , two such subscribers that are coupled to IMAS  are subscriber  via subscriber line  and to subscriber  via subscriber line . Similarly, IMAS  is coupled to subscriber  via subscriber line , subscriber  via subscriber line , and subscriber  via subscriber line . In one embodiment, these subscriber lines - are xDSL-based (e.g., ADSL). Other telecommunications equipment (e.g., a DSLAM) may also be coupled to the NMS server  but are not shown in .","In order for the NMS server to communicate with any IMAS, SNMP agents are provided in the IMAS. As known to those skilled in the art, SNMP is a management protocol defined by the IETF for TCP\/IP networks. SNMP allows managers (i.e., NMS server) and agents to communicate with each other by using request and response messaging. An SNMP agent and subagents are provided in each IMAS. The agents perform two major tasks: (1) collect information about their host devices (i.e., IMAS) and report back to the NMS server ; (2) distribute configuration information from the NMS server  to the host devices; and (3) receive trap information when any SNMP agent-associated component detects faults or alarms that warn of problems or performance degradations on any part of the network. The network administrator can produce reports based on the collected information that indicate the state of the network.","A more detailed discussion of the NMS server will now be provided. The NMS server  includes a software entity  that represents the core set of NMS functionality. The NMS provides various functionality for managing enterprise networks by actively monitoring network resources for the purpose of device configuration, troubleshooting, detecting potential problems, improving performance, documentation, and reporting. Other tasks include data backup, providing security, training users, and setting policies. The network management system performs other tasks including, but not limited to, autodiscovery of devices on the network; network topology mapping in the form of a graphic map that can be zoomed in or out; and the ability to schedule management tasks or jobs at specific times or dates.","Using SNMP agents, the NMS server can collect information on various aspects of the IMAS. These aspects include power status, fan status, line card status, and other physical parameter of the IMAS. In addition to its monitoring function, the NMS via the agents can also distribute information (e.g., configuration) to the IMAS. In effect, the IMAS, through its various components (e.g., chassis, boards, fans, power supply), can be controlled by the network management system via these configuration information.","Among other connections, this core NMS functionality software entity  is coupled to an http server  via line . The http server  is coupled to console  via line . With this connectivity, the http server  allows a system administrator to communicate with the NMS server  via the management console . In the manner of traditional web server-web browser interface, any of the browsers in the console  can communicate with the http server  via the Hypertext Transfer Protocol (HTTP). A web browser sends the Uniform Resource Locator (URL) to the http server  in the NMS server . The http server  responds to web browser messages by returning the requested information formatted in Hypertext Markup Language (HTML).","The core NMS functionality entity  is also coupled to an IMAS device manager  via line . The core NMS functionality entity  can be coupled to the IMAS  via line  and IMAS  via line . Also, the IMAS device manager  is also coupled to IMAS  via line  and IMAS  via line .","The IMAS device manager  is software that allows the NMS server  to communicate with the IMAS for those physical parameters that are unique to the IMAS. For those physical parameters that are standard and not necessarily unique to the IMAS, the core NMS functionality entity  can communicate with the IMAS directly. Regardless of whether the physical parameters are unique to the IMAS or not, these parameters are represented in software files called a management information base (MIB), a file that defines a software structure and syntax for various physical parameters. Currently, thousands of known MIBs are implemented in various NMS servers. However, for those MIBs that are unique to the IMAS, a separate set of MIB files are provided.","Because some physical parameters are unique to each manufacturer's piece of equipment, each manufacturer must provide the MIBs as part of its device manager package. As newer versions of the IMAS (as well as other manufacturer's telecommunications equipment) are provided, newer versions of MIBs are provided as well to ensure that accurate software entities are provided for each new or improved component.","If the NMS server  needs to communicate with any IMAS using standard MIBs, the core NMS functionality entity  can communicate with the IMAS via lines  and . If the NMS server  needs to communicate with any IMAS using non-standard and IMAS-specific MIBs, the NMS server communicates with an IMAS device manager  via line  and to the IMAS via lines  and . To communicate with other telecommunications equipment (not shown in ) coupled to the NMS server , other device managers that are associated with these other telecommunications equipment must be installed in the NMS server . These other device managers are not shown in .","In one embodiment, MIBs are software representations of various physical parameters of the telecommunications equipment's components (e.g., chassis state, line card, card slot, fan, power supply). In one embodiment, an object in a MIB file represents the physical parameters of a field replaceable component of each IMAS. For example, a MIB that represents fan state (i.e., on or off) is provided. Other MIBs include power supply on\/off, chassis on\/off, chassis card slot on\/off, line card on\/off, chassis temperature sensor reading, line card temperature sensor reading, and packet count. A more detailed treatment of MIBs is provided below in the MANAGEMENT INFORMATION BASE (MIB) subsection.","Because the various physical parameters (or physical components) of a telecommunications equipment are represented in software by MIBs, the NMS server  can configure (i.e., set, change) these physical parameters and obtain information on any of these physical parameters (e.g., what is the temperature of card slot ?). The NMS server  can configure and get information via the agents and these agents contain SNMP encapsulated requests\/responses (i.e., get, set, trap) associated with objects that are described in a MIB file.","The SNMP protocol as defined in RFC 1157 consists of four types of operations which are used to manipulate management information. These are:",{"@attributes":{"id":"p-0396","num":"0395"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1.","Get","Used to retrieve specific management information."]},{"entry":["2.","Get-Next","Used to retrieve, via traversal of the MIB, management"]},{"entry":[{},{},"information."]},{"entry":["3.","Set","Used to alter management information."]},{"entry":["4.","Trap","Used to report extraordinary events."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0397","num":"0396"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1. GetRequest-PDU","Used to request a Get operation."]},{"entry":["2. GetNextRequest-PDU","Used to request a Get-Next operation."]},{"entry":["3. GetResponse-PDU","Used to respond to a Get, Get-Next, or Set"]},{"entry":[{},"operation."]},{"entry":["4. SetRequest-PDU","Used to request a Set operation."]},{"entry":["5. Trap-PDU","Used to report a Trap operation."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In short, this SNMP protocol allows the collection of information and configuration of components in network devices, such as an IMAS. The IMAS runs an agent, shown in  as master SNMP agent , that collects information and provides that information to a management console (e.g., console ) via the NMS server , shown in .","In one embodiment of the present invention, the IMAS is installed in a central office where a commercially available NMS server is already installed and running. In this instance, an IMAS plug-in device manager  is provided to allow this conventional NMS to communicate with the IMAS. In another embodiment of the present invention, an NMS system in its entirety, including the NMS server , is provided to a buyer (e.g., telecommunications service provider) along with the IMAS with a built-in IMAS device manager .","Management Information Base (MIB)","Agents that reside in various network devices (e.g., IMAS) monitor and distribute information about its host device. To accomplish this task, an object (or managed object) is created for each physical parameter (e.g., packet throughput, board on\/off, fan on\/off) that will be monitored or configured. A managed object is a logical representation of a real physical entity or parameter on in a network device, such as the IMAS. Each object collects some information and holds that information as a value that can be collected by the network management system.","A MIB is a collection of these objects; at the very least, a MIB is one object and typically, a MIB is combination of many objects. Essentially, a MIB is a repository of common characteristics and parameters managed in a network device (e.g., IMAS). Each managed device knows how to respond to standard queries issued by the NMS server following a specific protocol, such as SNMP. The devices gather statistics and respond to queries in the manner specified by those specific protocols.","For data collection, the manager reads information from objects in the MIB. MIBs generally contain object definitions, definitions of notifications, and sometimes compliance statements specified in terms of appropriate object groups. Accordingly, MIBs define management information maintained by a network node made remotely accessible by management agents, conveyed by the management protocol, and manipulated by management applications. MIBs or MIB modules are defined according to the framework described and standardized in the Structure of Management Information (SMI).","In accordance with one embodiment of the present invention, the MIBs that are supported in one embodiment of the present invention are a combination of public and private MIBs. As of this writing, nearly 100 standards-based public MIB modules with a total number of defined objects approaching 10,000 currently exist. The private MIBs are enterprise-specific MIB modules defined unilaterally by various vendors, research groups, consortia, and the like. Some private MIBs are incorporated in the IMAS and the NMS. The MIBs that are supported in the various embodiments of the present invention are as follows:",{"@attributes":{"id":"p-0404","num":"0403"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["RFC1213","Initial definitions for MIB-II"]},{"entry":["SNMPv2-SMI","SNMPv2 Structure of Management Information"]},{"entry":["SNMPv2-TC","SNMPv2 Textual Conventions"]},{"entry":["RFC1907","MIB modules for SNMPv2 entities"]},{"entry":["RFC1573","MIB modules to describe generic objects for network"]},{"entry":[{},"interface sub-layers. This MIB is an updated"]},{"entry":[{},"version of MIB-II's ifTable and incorporates the"]},{"entry":[{},"extensions defined in RFC1229."]},{"entry":["RFC1595","MIB modules to describe SONET\/SDH interface"]},{"entry":[{},"objects"]},{"entry":["RFC1695","MIB modules for ATM and AAL5-related objects for"]},{"entry":[{},"managing ATM interfaces, ATM virtual links, ATM"]},{"entry":[{},"cross-connects, AAL5 entities, and AAL5 connections."]},{"entry":["ILMI","Similar to RFC1695 but issued by the ATM Forum"]},{"entry":["RFC1514","Host Resources MIB defines a uniform set of objects"]},{"entry":[{},"useful for the management of host computers."]},{"entry":["M4","M4 Network Element View MIB"]},{"entry":["Proprietary MIBs","Proprietary enterprise MIBs that define the IMAS"]},{"entry":[{},"chassis components"]},{"entry":["IPOA","Classical IP MIB"]},{"entry":["ADSL","ADSL line MIB"]},{"entry":["RFC1407","MIB definitions for managing DS3 and E3 interfaces"]},{"entry":["ATM-TC-MIB","MIB Textual conventios and Object-Idnetity objects to"]},{"entry":[{},"be used by ATM systems"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"To illustrate the use of MIBs in the system, three sets of MIBs will now be discussed. In the first set, some representative chassis MIBs will be discussed. In the second set, some system-level MIBs will be described. In the third set, the MIBs associated with the OC3 links will be described.","The chassis MIBs will now be discussed. Generally, seven different MIBs are provided\u2014Chassis Type, Expansions, Chassis Status, Chassis Location, Chassis Contact, Chassis Telephone, and Chassis Summary. Chassis Type may be either large or small, depending on the number of line cards accommodated.","Number of Expansions indicates how many expansion chassis are present. Choices are none or one.","Chassis Status reports on the operating condition of the chassis. The condition may be unknown, normal, minor alarm present, critical alarm present, warning, testing, or disabled. Chassis fan status and chassis temperature are included here. For example, if a chassis fan fails, or if the ambient temperature is exceeded, a critical alarm or warning will be issued.","Chassis Location is a string showing the location of the chassis. This string can be updated if the chassis location is changed.","Chassis Contact is the name of the responsible person to contact regarding the chassis, and is a string that can also be changed. Chassis Telephone is the telephone number of the person responsible for the chassis. Chassis Summary summarizes information on the chassis configuration, chassis type, number of expansion chassis, chassis general status, and modules present. This is also a string.","The second set of MIBs are the System Information MIBs, which include System Configuration, and Password. System Configuration includes the Node Name, Software Version, and LEDs. The Node Name indicates the name of the node, and is a string of alphanumeric characters. The Software Version specifies the current version of the system software, and is updated when a new code file is downloaded. The LEDs indicate either Normal, On, or Off.","The Password MIB includes the Password Level, and the password corresponding to that level. The password level may be either view only, limited access, or full access. The password gives the password required for each level.","The OC3 link MIBs will now be discussed. Three classes of OC-3 MIBs are specified: port objects, monitor objects or traps, and performance measurement statistics.","Within the port objects class, several MIBs are provided including port state, port setup, port threshold, logical port, and automatic switchover. Port state objects include administrative status, line status, loopback status, and automatic protection switching status. Port setup objects include clock state, cell payload scrambling, OC-3 port name, and OC-3 port id. Port threshold objects are of three subcategories\u2014section, line, and path. For each subcategory, the objects are typically errored seconds, severely errored seconds, severely errored framing seconds, and coding violations. The port threshold objects allow the assignment of thresholds for notification if exceeded. Logical port objects include the alarm status of the OC-3 physical layer, and the VPI and VCI Number space. The Automatic Power Switching (APS) objects control the direction and architecture of the local and remote ports and the administrative state, Revertive mode and bit error rate threshold signal degrade.","The Monitor Objects or Traps is another class of OC3 MIBs. These MIBs include objects for which an alarm or event is reported including Alarms, Admin Down, Section Loss of Signal, Section Loss of Frame, Line Alarm Indication Signal, Line Remote Defect Indication, Path Synchronous Transport Signal (STS) Loop, Path STS Alarm Indication Signal, Path STS Remote Defect Indications (RDI), and Path Signal Mismatch.","The third class of OC3 MIBs is the Performance Management Statistics Traps. These MIBs are section, line near end, line far end, and path near end. Section traps include errored seconds, severely errored seconds, severely errored framing seconds, and coding violations. Line traps include errored seconds, severely errored seconds, coding violations, unavailable seconds, and alarm indication signal seconds. Path traps include errored seconds, severely errored seconds, coding violations, unavailable seconds and alarm indication signal seconds.","Software Architecture of the IMAS","A description of the software architecture will now be provided with respect to . The NMS , as described above, provides various functionality for managing enterprise networks by actively or passively monitoring network resources for the purpose of device configuration, troubleshooting, detecting potential problems, improving performance, documentation, and reporting. In essence, the network management system provides tools for device configuration, performance monitoring, and failure reporting. How does the NMS  deliver configuration information to the various entities in the IMAS, as well as obtain information from these same entities?","To communicate with the various software entities in the IMAS, the NMS  uses an IMAS device manager  via line  using SNMP. Whether the command is an information-gathering command (e.g., \u201cget\u201d) or a parameter-setting command (e.g., \u201cset\u201d), the IMAS device manager  sends an SNMP packet to the IMAS via line . The actual entity that this SNMP packet is sent to is a master SNMP agent . One example of a master SNMP agent  and subagents is the family of SNMP products by Epilogue.","As explained above, the master SNMP agent  communicates with the NMS  and the various entities in the IMAS. Running as a separate process, the master SNMP agent forwards NMS commands to the various subagents in the IMAS for gathering information to report back to the NMS  for its performance monitoring purposes, and delivering configuration settings to these same subagents to control the functionality (for those parameters that can be controlled via software) of their respective entities.","The time that the master SNMP agent  collects data from other entities varies. The master SNMP agent  waits for a command from the NMS  to either get or set specific parameters. For configuration purposes, the master SNMP agent  must wait for a configuration command from the NMS  before it distributes the configuration information to the various software entities in the IMAS. Once the data has been gathered from the entities or configuration settings have been provided to the entities, the master SNMP agent  sends the SNMP data packet (i.e., information or acknowledgment) to the NMS . Once processed, the data associated with the MIBs will be relayed to the management consoles after some processing by the NMS  for presentation or other use by the system administrator.","The various software entities shown in  are used to control and manage the various hardware components of the IMAS. Of course, some parameters of each hardware component cannot be changed via software. For example, if a line card has a maximum of 32 ports, the software entity for this line card cannot increase the number of ports because these ports are actual physical connections. However, the software entity can enable and disable these ports by setting a register.","As shown on the bottom of , the hardware components include line cards, xDSL modems, ATM\/OC3 or SONET transceivers and interfaces, switch fabrics, ATM ports, Ethernet interfaces, serial interfaces, and various other miscellaneous hardware in the chassis (card slots, fan, power supply). Several software entities are associated with these hardware components. A port manager  is coupled to the line cards via line  and to the xDSL modems via line . An S\/UNI entity  is coupled to the ATM\/OC3 transceiver interface via line . Both the port manager  and the S\/UNI  are coupled to an ILMI entity  via lines  and , respectively. The switch fabric is coupled to the proxy signaling entity  via line . The ATM ports are coupled to AAL5\/SAR entity  via line . The Ethernet interface is coupled to the Ethernet entity  via line . The serial management interface is coupled to a PPP entity  via line . Both the Ethernet entity  and the PPP entity  are coupled to an Internet Protocol entity  via lines  and , respectively. The miscellaneous chassis hardware components are coupled to a chassis manager  via line .","In , the master SNMP agent  interfaces with several of these and other software entities including chassis manager  via line , Internet Protocol entity  via line , AAL5\/SAR entity  via line , classical IP entity  via line , proxy signaling  via line , PNNI  via line , and ILMI  via line . Other entities are indirectly accessed and controlled by the master SNMP agent  including SONET UNI entity  which is coupled to ILMI  via line , port manager  which is coupled to ILMI  via line , PPP entity  which is coupled to IP entity  via line , and Ethernet entity  which is coupled to IP entity  via line . At the Lynx operating system level, three software entities are provided\u2014the Internet Protocol entity , Ethernet entity , and the PPP entity . These three entities are coupled together as described above. The Lynx operating system is described briefly below in the MISCELLANEOUS ENTITIES subsection.","Each of these software entities will be discussed in turn. The chassis manager , coupled to the master SNMP agent  via line , is the software entity that allows the NMS to manage and control the various hardware components that are supported by the IC bus and the I\/O bus. The chassis manager also supports the M4\/Enterprise MIBs that are unique to the IMAS. The chassis manager also has some basic system configuration functionality so that during start-up (as described below), the system attempts to start up the chassis manager first. The chassis manager is also used by other software entities (e.g., call control CALLC  in ) to obtain hardware state information. The chassis manager  is also coupled to an IC bus where it is coupled to various miscellaneous hardware components that are supported by IC.","The PNNI entity , coupled to master SNMP agent  via line , performs the routing protocol as described in ATMF PNNI1.0 specification. PNNI entity  is also coupled to proxy signaling entity  via line  and AAL5\/SAR entity  via line  using VCI=18.","PNNI, or Private Network Node Interface or Private Network-to-Network Interface, is an ATM standard for creating QoS paths between ATM switches via virtual connection arbitration, congestion control, and topology management. It is a routing information protocol that enables extremely scalable, full function, dynamic multi-vendor ATM switches to be integrated in the same network. PNNI protocol is designed for use among private ATM switches, and among groups of private ATM switches. The functions of the PNNI routing protocol include discovery of neighbors and link status; synchronization of topology databases; flooding of PTSEs (PNNI Topology State Elements); election of PGLs (Peer Group Leaders); summarization of topology state information; and construction of the routing hierarchy. PNNI builds the topology database based on information flooded to it by its peer PNNI entities in neighboring system. Based on a destination address PNNI calculates an output port as well as the complete source route to the destination.","PNNI includes two categories of protocols: (1) A protocol is defined for distributing topology information among switches and clusters of switches. This information is used to compute paths through the network. A hierarchy mechanism ensures that this protocol scales well for large world-wide ATM networks. A key feature of the PNNI hierarchy mechanism is its ability to automatically configure itself in networks in which the address structure reflects the topology. PNNI topology and routing is based on the well-known link-state routing technique; and (2) A second protocol is defined for signaling; that is, message flows used to establish point-to-point and point-to-multipoint connections across the ATM network. This protocol is based on the ATM Forum UNI signaling, with mechanisms added to support source routing, crankback, and alternate routing of call setup requests in case of connection setup failure.","I-PNNI (Integrated PNNI) extends PNNI to provide integrated routing. All the switching and routing devices on the network that are I-PNNI-compatible can share information in order to calculate the best path through the network for end-to-end connections. I-PNNI provides a way for routers and switching devices at the edge of an ATM network to propagate routing information across the ATM network.","The Integrated Local Management Interface (ILMI) entity , which is coupled to the master SNMP agent  via line , performs the interface management protocol as specified in the ATMF ILMI 4.0 specification and is also backward compatible with earlier versions of the ATMF ILMI specification. ILMI  is also coupled to proxy signaling entity  via line , AAL5\/SAR  via line , S\/UNI  via line , and port manager  via line .","Generally, ILMI  provides configuration, status, and control information about physical and ATM layer parameters of the ATM interface to enable two adjacent ATM devices to automatically configure the operating parameters of the common ATM link between them. Additionally, ILMI also provides for communication across the ATM link, enabling both sides to verify subscription parameters, the configuration of newer traffic services such as ABR, signaling version identification, and address registration information.","ILMI  is based on a limited subset of SNMP functions that performs network management functions between an end user and a public\/private network and between a public network and a private network. This network management function is performed via a MIB table lookup across the UNI. ILMI  discovers its peer ILMI entity on the other side of the interface and exchanges configuration information as well as addresses\/network prefixes. In addition to its role of local interface management, the data in ILMI MIBs are also useful for general network management functions such as configuration discovery, fault isolation and troubleshooting. For example, an ATM service provider may want to confirm the configuration of the ATM interfaces on devices attached to its network, even though it does not usually have direct NMS access to those external devices.","ILMI  uses SNMP for management and control operations of information across the ATM Interface. The ATM Interface information will be represented in a MIB to provide any ATM device (e.g. end-systems, switches, etc.) with status and configuration information. The types of information that will be available in the ATM Interface MIB are as follows: the physical layer, ATM layer, Virtual Path Connections, Virtual Channel Connections, registered ATM Network Prefixes, registered ATM Addresses, registered services and capabilities available at its ATM Interfaces.","Specifically, at the physical layer, the ILMI  can communicate configuration information such as interface index, interface address, transmission type, media type, and operational status. At the ATM layer, the ILMI  can communicate configuration information such as maximum number of virtual path connections, maximum number of virtual channel connections, VPI\/VCI address width, number of configured virtual path connections, number of configured virtual channel connections, and port type. The ILMI  can also provide ATM layer statistics such as ATM cells received, ATM cells dropped on receive side, and ATM cells transmitted. The ILMI  can also communicate virtual path and virtual channel connection information such as VPI\/VCI value, shaping traffic descriptor, policing traffic descriptor, operational status, and Quality of Service (QoS) category. The ILMI communication protocol is an open protocol (i.e. SNMP\/AAL5). An ATM Interface Management Entity (IME) can access, via the ILMI communication protocol, the ATM Interface MIB information associated with its adjacent IME.","Proxy signaling entity , which is coupled to master SNMP agent  via line , performs the proxy signaling function to support SVCs. Proxy signaling entity  is also coupled to PNNI  via line , ILMI  via line , classical IP  via line , AAL5\/SAR  via line , and the switch fabrics via line . Regardless of whether one side of the IMAS is a PVC or SVC, the proxy signaling entity  allows the IMAS to support SVC signaling to establish and terminate virtual connections on-the-fly. A more detailed treatment of the proxy signaling entity  will be provided in the PROXY SIGNALING subsection below.","Classical IP entity , which is coupled to the master SNMP agent  via line , allows the IMAS to perform IP over ATM, or otherwise known as classical IP. In the classical IP scheme, the ATM network is treated like a LAN and the overlying IP network operates as it normally would over any other network, such as Ethernet or token ring. Classical IP provides a mechanism for transmitting IP datagrams over an ATM network by dividing the ATM network into logical IP subnets (LIS) which includes a group of hosts and routers. Each LIS operates and communicates independently of other LISs on the same ATM network. Hosts communicate directly with other hosts on the same LIS but must go through a router to communicate with hosts on other LISs. Each LIS includes a single ATM Address Resolution Protocol (ATMARP) server, which resolves IP to ATM addresses.","Classical IP entity  is also coupled to proxy signaling entity  via line , IP entity  via line , and AAL5\/SAR entity  via line . Classical IP  interfaces with proxy signaling entity  to set up and release SVCs. Classical IP  interfaces with AAL5\/SAR for receiving and sending IP datagrams on an ATM link on an already established SVC.","AAL5\/SAR software entity , which is coupled to the master SNMP agent  via line , drives the associated AAL5\/SAR hardware unit that enables compliance with the ATM cell format. AAL5\/SAR entity  is also coupled to classical IP entity  via line , proxy signaling entity  via line , ILMI  via line , PNNI  via line , and the ATM port. Essentially, the SAR performs the segmentation and reassembly functions for segmenting the possibly large data packets into smaller packets for the purpose of achieving compatibility with the ATM protocol. Specifically, the SAR sublayer of the ATM Adaptation Layer (AAL5) segments the native Application Data Units (ADU) of varying lengths into a group of Protocol Data Units (PDU) of 53 bytes each (or a single PDU for ADUs whose size is less than 48 bytes), of which 48 bytes are the actual data payload or Service Data Unit (SDU), and transmits this 53-byte cell to the destination.","As known to those skilled in the art, the ATM protocol can support a wide range of applications with diverse communications requirements. Because the ATM layer uses fixed size cells of 53 bytes each to carry all types and lengths of data from any application, the ATM Adaptation Layer (or AAL) functions to adapt or convert different application data unit (ADU) sizes into the ATM cell format. Different AAL types (i.e., AAL1, AAL2, AAL3\/4, AAL5) exist to address different application requirements. AAL5 is the most prevalent and widely deployed AAL type for supporting the ATM protocol and supporting a wide variety of applications. Currently, AAL5 is the only one of the AAL types that support SVC implementation because the ATM signaling protocols (UNI and NNI) were standardized based on AAL5.","Generally, an AAL type includes a common part (CP) sublayer and a service specific part (SSP) sublayer, where CP is the lower sublayer. The CP is further divided into the convergence sublayer (CS) and segmentation and reassembly (SAR) sublayer. The CS is the higher sublayer responsible for functions related to the ADU as a whole and interacts with the user. The CS basically functions to perform CS sublayer SDU delineation, or encapsulating SDUs from the application into a CS sublayer SDU framing structure.","The SAR is the lower sublayer of the CP and is responsible for mapping the CS sublayer ADU into the ATM layer. The SAR basically segments ADU into ATM protocol data unit (PDU) cells at the transmitting endpoint and reassembles the ATM PDU cells on the receiving endpoint to restore the PDUs into the ADUs. The destination SAR unit reassembles the native PDU by extracting and combining multiple 48-byte payloads from multiple ATM cells. Specifically, the SAR  configures and manages the TNET1570 chip to perform the AAL5 functionality. The SAR  uses services provided by the TNET1570 chip to send user data across an ATM link.","Proxy Signaling and Interface Entities",{"@attributes":{"id":"p-0441","num":"0440"},"figref":["FIG. 18","FIG. 17","FIG. 18","FIG. 17"],"b":["460","491"]},"The master SNMP agent (SNMP_MAG)  is, as the name implies, the SNMP master agent. SNMP_MAG  uses a scheme where all the SEs with which it interfaces runs an SNMP subagent. SNMP_MAG  multiplexes SNMP requests from the NMS  () out to the different subagents. SNMP_MAG SE  is coupled to most, if not all, of the software entities in this figure. These connections were shown in  and described in the accompanying text. However, some connections that were not described and shown above include the connection to STARTUP entity  via line  and interface line (LINE_IF)  via line .","The proxy signaling SE  comprises a MIB agent  coupled to proxy signaling agent  via line , which in turn is coupled to a ATM call control (CALLC)  via line . A PVC manager (PVC_MAN)  is coupled to the CALLC  via line . CALLC  is coupled to resource manager (RES_MAN)  via line . CALLC  is also coupled to a Call Set Up\/Release (Q93B) entity  via line , which in turn is coupled to a SAAL protocol (QSAAL) entity  via line . The QSAAL  is coupled to the SAR driver SAR_DRV  via line .","CALLC , Q93B , QSAAL , and RES_MAN  run within the same Lynx OS process. As shown in , the primary software entities involved in the proxy signaling process in accordance with one embodiment of the present invention is the MIB Agent , Proxy Signaling Agent , CALLC , and the Resource Manager (RES_MAN) . These will be discussed in more detail below with respect to .","Returning to , the PVC Manager (PVC_MAN)  is responsible for setting up, maintaining and releasing PVCs between the subscriber port and the WAN port (or telecommunications backbone port) of an IMAS access network according to NMS requests. PVC_MAN  uses services provided by CALLC  via line  for setting up and releasing PVCs.","The CALLC SE  performs the ATM Call Control function. It controls all call setup and release procedures for both SVCs and SPVCs. It is also responsible for reservations of Call Reference values, as well as VPI\/VCI allocation, upon forwarding or initiation of a CALL SETUP message. CALLC  uses services provided by Q93B  via line , PNNI  via line , RES_MAN  via line , CHASSI_MAN  via line , and ILMI  via line . More specifically, CALLC  uses services provided by Q93B for the purpose of controlling when a specific signaling message is to be sent and in which direction, and RES_MAN  in order to set up the actual physical path between input and output ports for an established call.","External to the proxy signaling SE , CALLC  uses services provided by PNNI  to find the output port as well as the complete source route in order to reach a given destination address; CHASSI_MAN  to get notifications about state changes of the physical line; and ILMI  to get notification about certain interface specific attributes as well as interface state changes critical to signaling.","The Q93B SE  performs the call setup and release procedures for both SPVCs and the SVCs at the UNI (only SVCs at the UNI) and the NNI. The functionality is compliant with the ATMF UNI 4.0 and ATMF PNNI 1.0 specifications but also backward compatible with ATMF UNI 3.1 and ATMF 3.1 signaling specifications. Q93B  uses services provided by QSAAL  via line  for sending and receiving Q93B messages over an established and reliable data link.","The QSAAL SE  performs the SAAL protocol. QSAAL  is used both at the UNI and at the NNI. QSAAL  uses services provided by SAR_DRV  via line  for transmitting and receiving QSAAL frames on an ATM link on VCI=5.","RES_MAN  configures and manages the cubit devices C-C in the chassis switch cards (see ). These cubit devices were described above in the HARDWARE section of the specification. RES_MAN  also performs power-on diagnostics, TRAM (i.e., Look-up Table RAM) checking, cubit registers checking, as well as loopback and stress test.","ILMI  uses services provided by SAR_DRV  via line , LINE_IF , and MODEM_xD via line . More specifically, ILMI  uses services provided by SAR_DRV  for receiving and sending SNMP PDUs on an ATM link on VCI=16. ILMI  also uses services provided by LINE_IF  to get notifications about state changes of the physical line. Finally, ILMI  uses services provided by MODEM_xD  to get notification about state changes of modem ports. The MODEM_xDSL SE  is also the interface to the xDSL modem. It provides services to the ILMI  via line .","The LINE_IF SE  configures and manages the S\/UNI lite chips so that these chips can provide the ATM functionality. The LINE_IF  also performs power-on diagnostics, chip initialization, and collects statistics and error counters. The LINE_IF  provides services to the SNMP_MAG .","CIP  uses services provided by CALLC  for setting up and releasing SVCs. CIP  also uses services provided by SAR_DRV  for receiving and sending IP datagrams on an ATM link on an already established SVC.","PNNI  uses services provided by SAR_DRV  for receiving and transmitting PNNI packets on an ATM link on VCI=18.","Startup","The Start-up and Configuration SE  in  includes a STARTUP SE , a CHASSIS_MAN SE , and a Boot SE . On power-up, the Boot SE  interrogates the expander card looking for all components that are expected to be present. As new expander card types are developed, the boot code will be re-released to work on all board types by checking the board type that is to be stored in the on-board serial EEPROM.","Having interrogated and believing that it has detected a complete list of components, the next stage in the boot process is to run diagnostics on the various components of the expander card. This testing is a shortened form of the continuous confidence that the hardware will run the run-time software successfully.","Upon successful completion of the diagnostics phase, the boot process will continue to run a simplified memory diagnostic. This is followed by a check of the NVRAM configuration to determine where the source of the run-time code is to be found. In one embodiment of the present invention, the source of the run-time code is found in onboard FLASH memory.","The IMAS software supporting the run-time code will be in a compressed format and thus, the boot code will load the image into memory and jump to the self-inflating header that will be placed at the beginning of the image. Once in the run-time code, the boot code will effectively be removed from the memory when the runtime code is expanded and copied to low memory.","STARTUP SE  represents the code that will be executed as the first task started by the LynxOS. It will perform basic initialization of different global data structures in the system and create all the tasks and software entities that should be viable during the whole life cycle of the system.","The STARTUP SE  first starts up the CHASSI_MAN SE  via line , which is used to retrieve certain configuration information, and perform certain configuration before other software entities are started up. The creation of a task may imply the creation of one or more software entities.","Furthermore, the STARTUP SE  runs an SNMP subagent responsible for maintaining the Hardware Unit\/Running Software Relationship Table and the Hardware Unit\/Installed Software Relationship Table according to the ATMF M4 MIB. The STARTUP SE  is also responsible for basic exception handling, including ordering the system to reboot.","Miscellaneous Entities","The HW interface  is a function block comprising a set of SEs that will provide access to the different hardware items within the IMAS system. Since these SEs are implemented as a library of C function calls and C++ objects, these SEs do not run as separate Lynx tasks but rather within the context of the SE using the services. Not all hardware is accessed using this library. Some HW items may be accessed through this library, including the IC bus, EXP registers (associated with the cubits), LPC registers (associated with the line cards) and FPGAs (associated with various line card components).","A SYS_SVCS SE  is a special function block which comprises a set of SEs that will handle memory management, timer management, and inter-task communication. They can be treated as system functions in the sense that the same type of functions are typically offered by an OS, but this system needs to add functions to let the system as a whole work properly and within the constraints set by performance requirements. The set of SEs in SYS_SVCS SE  do not run as separate Lynx tasks, but rather within the context of the SE using the services.","A LYNX_OS SE  is a modified version of Power PC LynxOS 2.5.0. Modifications have been made in order to make it run on the expander card and to support other components and software entities in the IMAS system. In one embodiment of the present invention, the software will run in a Lynx OS environment on a Power PC. Unless otherwise stated, each software entity will run as a separate Lynx OS process.","As known to those skilled in the art, LynxOS is a scalable real-time operating system with UNIX\/POSIX APIs. LynxOS supports the POSIX 1003.1, .1b, and .1c, Berkeley (BSD), and System V (SVR3) APIs and provides most of the POSIX.2 facilities and utilities. Lynx also provides a complete offering of standard facilities to accompany LynxOS, including TCP\/IP, NFS, Streams, X11, Motif and many of the GNU facilities to support the LynxOS real-time environment and adhere to the design goals of the OS. The LynxOS and\/or application may be burned into ROM, downloaded from a server over a network, or run on a large scale self-hosted system which may utilize many disk drives, up to 512 MB of RAM, and a graphical user interface. Some platforms provide for multiple processor support as well.","Interfaces","The following tables list and describe the interface messages supported by the various software entities introduced and described above.","SNMP_MAG-Subagent SE","All SEs interfacing the SNMP_MAG SE are required to implement an SNMP subagent interface supporting the messages indicated in the table below.",{"@attributes":{"id":"p-0468","num":"0467"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE D"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SNMP"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Message","Function","To","From"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["SNMP_GET","Request to the","Subagent SE","SNMP_MAG"]},{"entry":[{},"value of a speci-"]},{"entry":[{},"fied MIB variable"]},{"entry":["SNMP_GETNEXT","Request to re-","Subagent SE","SNMP_MAG"]},{"entry":[{},"trieve the value of"]},{"entry":[{},"a MIB variable"]},{"entry":[{},"who's identifica-"]},{"entry":[{},"tion follows after"]},{"entry":[{},"the variable speci-"]},{"entry":[{},"fied in the"]},{"entry":[{},"request."]},{"entry":["SNMP_GETBULK","Request to re-","Subagent SE","SNMP_MAG"]},{"entry":[{},"trieve the values"]},{"entry":[{},"of all MIB vari-"]},{"entry":[{},"ables with identi-"]},{"entry":[{},"fications within a"]},{"entry":[{},"range as specified"]},{"entry":[{},"in the request"]},{"entry":["SNMP_SET","Request to set the","Subagent SE","SNMP_MAG"]},{"entry":[{},"value of a MIB"]},{"entry":[{},"variable with a"]},{"entry":[{},"specified identifi-"]},{"entry":[{},"cation to a"]},{"entry":[{},"specified value."]},{"entry":["SNMP_GET_RE-","Response to any","SNMP_MAG","Subagent SE"]},{"entry":["SPONSE","of the SNMP re-"]},{"entry":[{},"quest messages."]},{"entry":[{},"Consequently the"]},{"entry":[{},"message will con-"]},{"entry":[{},"tain the values of"]},{"entry":[{},"the affected MIB"]},{"entry":[{},"variables as well"]},{"entry":[{},"as error status."]},{"entry":["SNMP_TRAP","Report of an","SNMP_MAG","Subagent SE"]},{"entry":[{},"event effecting"]},{"entry":[{},"one or more MIB"]},{"entry":[{},"variables."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"STARTUP-SE xx","All SEs started up by STARTUP are required to implement an interface supporting the messages indicated in the table below.",{"@attributes":{"id":"p-0470","num":"0469"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE E"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"STARTUP"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Message","Function","To","From"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["SE_xx_READY","Indication that SE xx has","STARTUP","SE xx"]},{"entry":[{},"successfully performed"]},{"entry":[{},"initialization and is now up"]},{"entry":[{},"and running"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0471","num":"0470"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE F"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"CALLC-ILMI"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Message","Function","To","From"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["LIM_EVT_SIGSTAIND","Indication of a change in","CALLC","ILMI"]},{"entry":[{},"status on the interface."]},{"entry":["LIM_EVT_SIGPARAMSET","Request to set the values","CALLC","ILMI"]},{"entry":[{},"of certain specified"]},{"entry":[{},"interface specific"]},{"entry":[{},"parameters to specified"]},{"entry":[{},"values."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0472","num":"0471"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE G"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"CALLC-PNNI"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Message","Function","To","From"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["PCI_EVTBNDREQ","Request to create a new SAP","PNNI","CALLC"]},{"entry":[{},"and to bind CALLC to this"]},{"entry":[{},"SAP."]},{"entry":["PCI_EVTUBNDREQ","Request to delete a SAP,","PNNI","CALLC"]},{"entry":[{},"with a specified SAP id, to"]},{"entry":[{},"which CALLC was"]},{"entry":[{},"previously bound."]},{"entry":["PCI_EVTRTEREQ","Request to find the best route","PNNI","CALLC"]},{"entry":[{},"to a specified end system"]},{"entry":[{},"address."]},{"entry":["PCI_EVTRTERSP","Indication to PNNI that a VC","PNNI","CALLC"]},{"entry":[{},"has successfully been set up"]},{"entry":[{},"using the source route"]},{"entry":[{},"retrieved through an earlier"]},{"entry":[{},"PCI_RTEREQ message."]},{"entry":["PCI_EVTRELREQ","Indication to PNNI that call","PNNI","CALLC"]},{"entry":[{},"set up using a source route"]},{"entry":[{},"retrieved through an earlier"]},{"entry":[{},"PCI_RTEREQ message has"]},{"entry":[{},"failed."]},{"entry":["PCI_EVTRTECFM","Confirm of a PCI_RTEREQ","CALLC","PNNI"]},{"entry":[{},"message. Including the"]},{"entry":[{},"requested source route."]},{"entry":["PCI_EVTRELIND","Indication to CALLC that a","CALLC","PNNI"]},{"entry":[{},"route to the specified address"]},{"entry":[{},"could not be retrieved."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0473","num":"0472"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE H"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"CALLC-RES_MAN"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Message","Function","To","From"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["CUBIT_STARTUP","Request to initialize the","RES_MAN","CALLC"]},{"entry":[{},"CUBIT chips."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0474","num":"0473"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE I"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"CALLC-Q93B"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Message","Function","To","From"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["AMT_EVTDATIND","Indication to CALLC","CALLC","Q93B"]},{"entry":[{},"of receipt of a"]},{"entry":[{},"proprietary message"]},{"entry":["AMT_EVTCONIND","Indication to CALLC","CALLC","Q93B"]},{"entry":[{},"that Q93B has"]},{"entry":[{},"received a valid"]},{"entry":[{},"AMT_EVTCONREQ"]},{"entry":[{},"message"]},{"entry":["AMT_EVTCONCFM","Confirm that a","CALLC","Q93B"]},{"entry":[{},"previous request to"]},{"entry":[{},"establish a connection,"]},{"entry":[{},"through an"]},{"entry":[{},"AMT_CONREQ"]},{"entry":[{},"message, has been"]},{"entry":[{},"accepted."]},{"entry":["AMT_EVTCNSTIND","Indication to CALLC","CALLC","Q93B"]},{"entry":[{},"that Q93B has"]},{"entry":[{},"received a valid"]},{"entry":[{},"AMT_"]},{"entry":[{},"EVTCNSTREQ"]},{"entry":[{},"message."]},{"entry":["AMT_EVTRELIND","Indication to CALLC","CALLC","Q93B"]},{"entry":[{},"that a connection has"]},{"entry":[{},"been released due to a"]},{"entry":[{},"message from a peer"]},{"entry":[{},"signaling entity"]},{"entry":[{},"(RELEASE,"]},{"entry":[{},"RELEASE"]},{"entry":[{},"COMPLETE etc.)"]},{"entry":["AMT_EVTSTAENQIND","Indication to CALLC","CALLC","Q93B"]},{"entry":[{},"that Q93B has detected"]},{"entry":[{},"an error condition"]},{"entry":[{},"related to a CALLC"]},{"entry":[{},"primitive call."]},{"entry":["AMT_ENTADDPTYIND","Indication to CALLC","CALLC","Q93B"]},{"entry":[{},"that Q93B has"]},{"entry":[{},"received a valid"]},{"entry":[{},"AMT_"]},{"entry":[{},"EVTADDPTYREQ"]},{"entry":[{},"message."]},{"entry":["AMT_EVTADDPTYCFM","Indication to CALLC","CALLC","Q93B"]},{"entry":[{},"that an earlier request"]},{"entry":[{},"to add a party to a"]},{"entry":[{},"point-to-multipoint"]},{"entry":[{},"connection has"]},{"entry":[{},"succeeded."]},{"entry":["AMT_EVTADDPTTREJIND","Indication to CALLC","CALLC","Q93B"]},{"entry":[{},"that an earlier request"]},{"entry":[{},"to add a part to a"]},{"entry":[{},"point-to-multipoint"]},{"entry":[{},"connection has been"]},{"entry":[{},"rejected"]},{"entry":["AMT_EVTDROPPTYIND","Indication to CALLC","CALLC","Q93B"]},{"entry":[{},"that a specified party"]},{"entry":[{},"has been dropped from"]},{"entry":[{},"a point-to-multipoint"]},{"entry":[{},"connection."]},{"entry":["AMT_EVTRSTIND","Indication to CALLC","CALLC","Q93B"]},{"entry":[{},"that all VCs within a"]},{"entry":[{},"VP or a link has been"]},{"entry":[{},"released."]},{"entry":["AMT_EVTBNDREQ","Request to Q93B to","Q93B","CALLC"]},{"entry":[{},"create a new SAP and"]},{"entry":[{},"to bind CALLC to this"]},{"entry":[{},"SAP"]},{"entry":["AMT_EVTUBNDREQ","Request to delete a","Q93B","CALLC"]},{"entry":[{},"SAP, with a specified"]},{"entry":[{},"SAP id, to which"]},{"entry":[{},"CALLC was"]},{"entry":[{},"previously bound."]},{"entry":["AMT_EVTDATREQ","Request to send a","Q93B","CALLC"]},{"entry":[{},"proprietary message."]},{"entry":["AMT_EVTCONREQ","Request to Q93B to","Q93B","CALLC"]},{"entry":[{},"initiate a new"]},{"entry":[{},"connection by"]},{"entry":[{},"generating a SETUP"]},{"entry":[{},"message"]},{"entry":["AMT_EVTCONRSP","Indication to Q93B","Q93B","CALLC"]},{"entry":[{},"that CALLC has"]},{"entry":[{},"accepted a request to"]},{"entry":[{},"establish a connection."]},{"entry":["AMT_EVTCNSTREQ","Request to Q93B to","Q93B","CALLC"]},{"entry":[{},"generate a specified"]},{"entry":[{},"connection related"]},{"entry":[{},"message."]},{"entry":["AMT_RELREQ","Request to Q93B to","Q93B","CALLC"]},{"entry":[{},"release a connection be"]},{"entry":[{},"generating either a"]},{"entry":[{},"REKEAS or a"]},{"entry":[{},"RELEASE"]},{"entry":[{},"COMPLETE"]},{"entry":[{},"message."]},{"entry":["AMT_EVTSTAENQREQ","Request to Q93B to","Q93B","CALLC"]},{"entry":[{},"query it's peer"]},{"entry":[{},"signaling entity about"]},{"entry":[{},"the status of a"]},{"entry":[{},"connection by"]},{"entry":[{},"generating a"]},{"entry":[{},"STATUS ENQUIRY"]},{"entry":[{},"message."]},{"entry":["AMT_EVTADDPTYREQ","Request to Q93B to","Q93B","CALLC"]},{"entry":[{},"add a party, to a point-"]},{"entry":[{},"to-multipoint"]},{"entry":[{},"connection, by"]},{"entry":[{},"generating an ADD"]},{"entry":[{},"PARTY message."]},{"entry":["AMT_","Request to Q93B to","Q93B","CALLC"]},{"entry":["EVTADDPTYREJREQ","reject a request to add"]},{"entry":[{},"a new party, to a"]},{"entry":[{},"point-to-multipoint"]},{"entry":[{},"connection, by"]},{"entry":[{},"generating an"]},{"entry":[{},"ADD PARRTY"]},{"entry":[{},"REJECT message."]},{"entry":["AMT_DROPPTYREQ","Request to Q93B to","Q93B","CALLC"]},{"entry":[{},"drop a party, from a"]},{"entry":[{},"point-to-multipoint"]},{"entry":[{},"connection, by"]},{"entry":[{},"generating a DROP"]},{"entry":[{},"PARTY or DROP"]},{"entry":[{},"PARTY"]},{"entry":[{},"ACKNOWLEDGE"]},{"entry":[{},"message."]},{"entry":["AMT_EVTRSTREQ","Request to Q93B to","Q93B","CALLC"]},{"entry":[{},"release all VCCs on a"]},{"entry":[{},"link, all VCCs within a"]},{"entry":[{},"VP or a single VCC,"]},{"entry":[{},"by generating a"]},{"entry":[{},"RESTART message."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0475","num":"0474"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE J"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"CTP-CALLC"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Message","Function","To","From"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["CC_EVTCONIND","Indication to CIP that","CIP","CALLC"]},{"entry":[{},"CALLC has received a valid"]},{"entry":[{},"AMT_EVTCONIND"]},{"entry":[{},"message"]},{"entry":["CC_EVTCONCFM","Confirm that a previous","CIP","CALLC"]},{"entry":[{},"request to establish a"]},{"entry":[{},"connection through a"]},{"entry":[{},"CC_CONREQ message, has"]},{"entry":[{},"been accepted"]},{"entry":["CC_EVTCNSTIND","Indication to CIP that","CIP","CALLC"]},{"entry":[{},"CALLC has received a valid"]},{"entry":[{},"AMT_EVTCNSTIND"]},{"entry":[{},"message"]},{"entry":["CC_EVTRELIND","Indication to CIP that a","CIP","CALLC"]},{"entry":[{},"connection has received a"]},{"entry":[{},"valid AMT_RELIND"]},{"entry":[{},"message indicating that a"]},{"entry":[{},"connection has been released"]},{"entry":[{},"due to that the local Q93B"]},{"entry":[{},"entity receiving a message"]},{"entry":[{},"from it's peer signaling entity"]},{"entry":[{},"(RELEASE, RELEASE"]},{"entry":[{},"Complete etc.)"]},{"entry":["CC_EVTBNDREQ","Request to CALLC to create","CALLC","CIP"]},{"entry":[{},"a new SAP and to bind CIP"]},{"entry":[{},"to this SAP"]},{"entry":["CC_EVTUBNDREQ","Request to delete a SAP,","CALLC","CIP"]},{"entry":[{},"with a specified SAP id, to"]},{"entry":[{},"which CIP was previously"]},{"entry":[{},"bound."]},{"entry":["CC_EVTCONREQ","Request to CALLC to initiate","CALLC","CIP"]},{"entry":[{},"a new connection."]},{"entry":["CC_EVTCONRSP","Indication to CALLC that","CALLC","CIP"]},{"entry":[{},"CIP has accepted a request to"]},{"entry":[{},"establish a connection."]},{"entry":["CC_EVTCNSTREQ","Request to CALLC to","CALLC","CIP"]},{"entry":[{},"generate a specified"]},{"entry":[{},"connection related message"]},{"entry":["CC_RELREQ","Request to CALLC to release","CALLC","CIP"]},{"entry":[{},"a connection."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0476","num":"0475"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE K"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PVC_MAN-CALLC"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Message","Function","To","From"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["CC_EVTCONIND","Indication to","PVC_MAN","CALLC"]},{"entry":[{},"PVC_MAN that"]},{"entry":[{},"CALLC has"]},{"entry":[{},"received a valid"]},{"entry":[{},"AMT_"]},{"entry":[{},"EVTCONIND"]},{"entry":[{},"message"]},{"entry":["CC_EVTCONCFM","Confirm that a","PVC_MAN","CALLC"]},{"entry":[{},"previous request"]},{"entry":[{},"to establish a"]},{"entry":[{},"connection through"]},{"entry":[{},"a CC_CONREQ"]},{"entry":[{},"message, has"]},{"entry":[{},"been accepted"]},{"entry":["CC_EVTCNSTIND","Indication to","PVC_MAN","CALLC"]},{"entry":[{},"PVC_MAN that"]},{"entry":[{},"CALLC has"]},{"entry":[{},"received a valid"]},{"entry":[{},"AMT_"]},{"entry":[{},"EVTCNSTIND"]},{"entry":[{},"message"]},{"entry":["CC_EVTRELIND","Indication to","PVC_MAN","CALLC"]},{"entry":[{},"PVC_MAN that"]},{"entry":[{},"a connection has"]},{"entry":[{},"received a valid"]},{"entry":[{},"AMT_RELIND"]},{"entry":[{},"message indicating"]},{"entry":[{},"that a connection"]},{"entry":[{},"has been released"]},{"entry":[{},"due to that the local"]},{"entry":[{},"Q93B entity"]},{"entry":[{},"receiving a message"]},{"entry":[{},"from it's peer"]},{"entry":[{},"signaling entity"]},{"entry":[{},"(RELEASE,"]},{"entry":[{},"RELEASE"]},{"entry":[{},"Complete etc.)"]},{"entry":["CC_EVTBNDREQ","Request to CALLC","CALLC","PVC_MAN"]},{"entry":[{},"to create a new SAP"]},{"entry":[{},"and to bind"]},{"entry":[{},"PVC_MAN to"]},{"entry":[{},"this SAP"]},{"entry":["CC_EVTUBNDREQ","Request to delete a","CALLC","PVC_MAN"]},{"entry":[{},"SAP, with a"]},{"entry":[{},"specified SAP id, to"]},{"entry":[{},"which PVC_MAN"]},{"entry":[{},"was previously"]},{"entry":[{},"bound."]},{"entry":["CC_EVTCONREQ","Request to CALLC","CALLC","PVC_MAN"]},{"entry":[{},"to initiate a new"]},{"entry":[{},"connection."]},{"entry":["CC_EVTCONRSP","Indication to","CALLC","PVC_MAN"]},{"entry":[{},"CALLC that"]},{"entry":[{},"PVC_MAN has"]},{"entry":[{},"accepted a request"]},{"entry":[{},"to establish a"]},{"entry":[{},"connection."]},{"entry":["CC_EVTCNSTREQ","Request to CALLC","CALLC","PVC_MAN"]},{"entry":[{},"to generate a"]},{"entry":[{},"specified connection"]},{"entry":[{},"related message"]},{"entry":["CC_RELREQ","Request to CALLC","CALLC","PVC_MAN"]},{"entry":[{},"to release a"]},{"entry":[{},"connection."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0477","num":"0476"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE L"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"CHASSI_MAN-CALLC"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Message","Function","To","From"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["CC_EVTSTAIND","Indication to CALLC","CALLC","CHASSI_MAN"]},{"entry":[{},"of a status change of a"]},{"entry":[{},"specified physical link."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0478","num":"0477"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE M"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SE xx-SAR_DRV"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Message","Function","To","From"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["AAL_EVTBNDREQ","Request to create","SAR_DRV","SE xx"]},{"entry":[{},"a new SAP and to"]},{"entry":[{},"bind SE xx to this"]},{"entry":[{},"SAP."]},{"entry":["AAL_EVTUBNDREQ","Request to delete","SAR_DRV","SE xx"]},{"entry":[{},"a SAP, with a"]},{"entry":[{},"specified SAP id,"]},{"entry":[{},"to which SE xx"]},{"entry":[{},"was previously"]},{"entry":[{},"bound."]},{"entry":["AAL_EVTCONREQ","Request to","SAR_DRV","SE xx"]},{"entry":[{},"SAR_DRV to"]},{"entry":[{},"activate the AAL"]},{"entry":[{},"layer connection"]},{"entry":[{},"for a specified"]},{"entry":[{},"SAP"]},{"entry":["AAL_EVTDISCREQ","Request to","SAR_DRV","SE xx"]},{"entry":[{},"SAR_DRV to"]},{"entry":[{},"deactivate the"]},{"entry":[{},"AAL layer"]},{"entry":[{},"connection for a"]},{"entry":[{},"specified SAP"]},{"entry":["AAL_EVTDATREQ","Request to","SAR_DRV","SE xx"]},{"entry":[{},"SAR_DRV to"]},{"entry":[{},"transmit data"]},{"entry":["AAL_EVTCONCFM","Confirm to SE xx","SE xx","SAR_DRV"]},{"entry":[{},"that the electrical"]},{"entry":[{},"level is up."]},{"entry":["AAL_EVTDATCFM","Confirm to SE xx","SE xx","SAR_DRV"]},{"entry":[{},"that data has been"]},{"entry":[{},"successfully"]},{"entry":[{},"transmitted."]},{"entry":["AAL_EVTDATIND","Indication to SE","SE xx","SAR_DRV"]},{"entry":[{},"xx that valid"]},{"entry":[{},"data has been"]},{"entry":[{},"received."]},{"entry":["AAL_EVTDISCCFM","Confirm to SE","SE xx","SAR_DRV"]},{"entry":[{},"xx that, as"]},{"entry":[{},"previously"]},{"entry":[{},"requested through"]},{"entry":[{},"an AALEVT-"]},{"entry":[{},"DISCREQ"]},{"entry":[{},"message, the"]},{"entry":[{},"AAL layer"]},{"entry":[{},"connection has"]},{"entry":[{},"been deactivated"]},{"entry":["AAL_EVTDISCIND","Indication to SE","SE xx","SAR_DRV"]},{"entry":[{},"xx that the"]},{"entry":[{},"AAL layer has"]},{"entry":[{},"been deactivated"]},{"entry":[{},"for a specified."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0479","num":"0478"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE N"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"ILMI-MODEM_xDSL"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Message","Function","To","From"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["MODEM_EVTSTAIND","Indication to ILMI","ILMI","MODEM_xDSL"]},{"entry":[{},"of a status change of"]},{"entry":[{},"a specified modem"]},{"entry":[{},"port"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0480","num":"0479"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE O"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"ILMI-CHASSI_MAN"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Message","Function","To","From"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["LIM_EVTSTAIND","Indication to ILMI of a","ILMI","CHASSI_MAN"]},{"entry":[{},"status change of a"]},{"entry":[{},"specified physical link."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0481","num":"0480"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE P"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Q93B-QSAAL"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Message","Function","To","From"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["ASD_EVTCONCFM","Confirm to Q93B that a","Q93B","QSAAL"]},{"entry":[{},"previous request to"]},{"entry":[{},"establish an SSCOP"]},{"entry":[{},"connection has succeeded."]},{"entry":["ASD_EVTDISCIND","Indication to Q93B that a","Q93B","QSAAL"]},{"entry":[{},"previously established"]},{"entry":[{},"SSCOP connection has"]},{"entry":[{},"been disconnected."]},{"entry":["ASD_EVTDISCCFM","Confirm to Q93B that a","Q93B","QSAAL"]},{"entry":[{},"previous SSCOP"]},{"entry":[{},"disconnection request,"]},{"entry":[{},"through an"]},{"entry":[{},"ASD_EVTDISCREQ"]},{"entry":[{},"message, has succeeded."]},{"entry":["ASD_RSTIND","Indication to Q93B that a","Q93B","QSAAL"]},{"entry":[{},"previously established"]},{"entry":[{},"SSCOP connection has"]},{"entry":[{},"been reset."]},{"entry":["ASD_DATIND","Indication to Q93B that","Q93B","QSAAL"]},{"entry":[{},"data has been received in"]},{"entry":[{},"assured mode."]},{"entry":["ASD_DATCFM","Indication to Q93B that a","Q93B","QSAAL"]},{"entry":[{},"congestion situation has"]},{"entry":[{},"started or ended on this"]},{"entry":[{},"SAP and therefore a new"]},{"entry":[{},"line of credit has been"]},{"entry":[{},"issued."]},{"entry":["ASD_EVTUDATIND","Indication to Q93B that","Q93B","QSAAL"]},{"entry":[{},"data has been received in"]},{"entry":[{},"unassured mode"]},{"entry":["ASD_EVTCNSTIND","Indication to Q93B that a","Q93B","QSAAL"]},{"entry":[{},"specified channel is open"]},{"entry":[{},"for communication"]},{"entry":["ASD_EVT_BNDREQ","Request to QSAAL to","QSAAL","Q93B"]},{"entry":[{},"create a new SAP and to"]},{"entry":[{},"bind Q93B to this SAP"]},{"entry":["ASD_EVTCONREQ","Request to QSAAL to","QSAAL","Q93B"]},{"entry":[{},"QSAAL establish an"]},{"entry":[{},"SSCOP connection to a"]},{"entry":[{},"peer entity."]},{"entry":["ASD_EVTDATREQ","Request to QSAAL to","QSAAL","Q93B"]},{"entry":[{},"QSAAL transmit data in"]},{"entry":[{},"assured mode"]},{"entry":["ASD_EVTDATRSP","Acknowledgment, to","QSAAL","Q93B"]},{"entry":[{},"QSAAL, of a previously"]},{"entry":[{},"send ASD_EVTDATIND"]},{"entry":[{},"message"]},{"entry":["ASD_EVTDISCREQ","Request to QSAAL to","QSAAL","Q93B"]},{"entry":[{},"QSAAL disconnect one or"]},{"entry":[{},"all SSCOP connections on a"]},{"entry":[{},"specified SAP"]},{"entry":["ASD_EVTUBNDREQ","Request to delete a SAP,","QSAAL","Q93B"]},{"entry":[{},"with a specified SAP id,"]},{"entry":[{},"to which Q93B was"]},{"entry":[{},"previously bound."]},{"entry":["ASDUDATREQ","Request to QSAAL to","QSAAL","Q93B"]},{"entry":[{},"QSAAL transmit data in"]},{"entry":[{},"unassured mode"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The IMAS enables a telecommunications service provider to support the next generation of virtual connections. Regardless of whether the telecommunications lines coupled to the inputs and outputs of the IMAS are based on SVC, PVC, or a combination of PVC and SVC, the IMAS can support SVCs for a more flexible, timely, efficient, and manageable connection. A major drawback of those DSLAMs that supported PVCs only is that the connection was difficult to manage and time-consuming to set up. With SVC support, the IMAS assists the ATM network in hand crafting an SVC-based connection almost immediately between end users when the originating end user wants to make a call to a destination end user, and tear down that virtual connection almost immediately when that call has completed. Unlike PVCs, when the network inadvertently loses a link, the network will attempt to set up another connection by re-routing the call.","For some ATM end systems, SVC signaling capability is limited to non-existent. For those end systems still using PVCs, for example, no signaling is used to set up or tear down the virtual connection. Nevertheless, even for these non-signaling end systems, SVCs can still be supported using the proxy signaling scheme in accordance with one embodiment of the present invention. The proxy signaling scheme uses a proxy signaling agent at the IMAS to control the virtual connection\/circuit setup and termination of the non-signaling ATM end system. With the proxy signaling aspect of the present invention, the IMAS supports SVC signaling even though the loop side is PVC-based and the telecommunications backbone side can support SVC. Similarly, if both the loop side and the telecommunications backbone side support SVC, the IMAS supports such SVC signaling for call establishment and termination.","Generally, proxy signaling calls are made on behalf of xDSL (e.g., ADSL) associated devices because these devices currently do not support SVC signaling. An example of an xDSL device is the ADSL modems that were designed for operation in a PVC environment and hence, do not support SVC signaling. In the future, however, some xDSL modems may support SVC signaling.","To provide SVC support, a proxy signaling agent resides in the IMAS and operates to establish and terminate calls via the SVC signaling protocol. This proxy signaling agent allows those PVC-supported calls directed to the OC3 uplink to be supported by SVC so that session-based virtual paths can be established as needed, without waiting valuable time for a PVC path to be established. As soon as the call (including the SVC signaling) is successful, a data connection is set up between the xDSL port at the IMAS in the central office and the OC3 uplink port. Similarly, an SVC call that had previously been established can be torn down via the same SVC signaling.","Proxy signaling calls are controlled by the proxy signaling group of the Enterprise MIB. This group contains the Proxy Signaling Table, the ISP Table, and the Connect Info Table. These tables, which are shown in , , , and , cross reference each other to make the desired SVC connections between the device associated with the xDSL port (e.g., PC with modem at a small business) and the ISP that provides a number of services, including Internet access. The establishment and termination of proxy signaling calls are controlled by the addition and deletion of information to these tables. The Proxy Signaling Table contains an entry for each xDSL port, VPI and VCI that is to be connected to an ISP\u2014essentially, a call that comes in at one of the xDSL ports is destined for an ISP for which an SVC path must be set up. The ISP Table contains the ATM addresses of the ISPs that the xDSL connected devices (e.g., PC with modem) can connect with. The Connect Info Table contains information necessary to properly format the Setup message used to connect the SVC.","Proxy Signaling Software Entities","Referring now to , the proxy signaling agent  resides in an ATM node. In one embodiment, the proxy signaling agent  resides in the IMAS which can interface an xDSL connection with an ATM connection. In other embodiments, the proxy signaling agent  can reside in a conventional DSLAM along with other supporting functionality as add-ons via hardware and software modifications.","The proxy signaling agent  originates and terminates calls directed toward the OC3 uplink (i.e., uplink calls from the xDSL device to a destination device accessed via the ATM backbone). The proxy signaling agent  allows proxy SVC calls to be made on behalf of xDSL associated devices because these devices do not support SVC signaling. The proxy signaling agent  does not accept any incoming downlink calls (i.e., calls from an ATM backbone device to a xDSL connected device).","To enable this proxy SVC functionality, the proxy signaling agent  enlists the assistance of a MIB agent , a call control CALLC , and a resource manager . The proxy signaling agent  is coupled to the MIB agent  via line , and the CALLC  via line . The CALLC  is coupled to the resource manager  via line . Generally, the proxy signaling agent  receives call parameter information from the MIB agent , uses these call parameters to set up calls using the CALLC , and the actual physical call is made (or broken) by the resource manager . Whether the call is made or broken, the CALLC  reports or responds back to the proxy signaling agent . Further details will be provided below.","The proxy signaling agent  is driven by entries in the three tables in the MIB Agent \u2014Proxy Signaling Table, ISP Table, and Connect Info Table. As mentioned above, the establishment and termination of proxy signaling calls are controlled by the addition and deletion of information to these tables. Such establishment and termination will now be discussed.","Proxy Signaling Tables","Referring to , three tables called Proxy Signaling Table, ISP Table, and Connect Info Table are provided for call establishment and termination. Each of these tables contains fields with corresponding entries which reference another table. For example, the Proxy Signaling Table provides ISP information which link (or point) to the ISP Table, and Connect Info which link (or point) to the Connect Info Table. The indices into the Proxy Signaling Table are ifIndex, VPI, and VCI. The index into the ISP Table is ISPIndex. The index into the Connect Info Table is Connect Info Index. Thus, a particular ifIndex and VPI\/VCI in the Proxy Signaling Table may be associated with a particular ISP ID. This ISP ID points to the appropriate ISP Table that contains the ISP address(es) corresponding to this ISP ID. Analogously, the ifIndex and VPI\/VCI in the Proxy Signaling Table may be associated with a particular Connect Info ID. This Connect Info ID points to the appropriate Connect Info Table that contains the call connection information corresponding to this particular VPI\/VCI. Although one embodiment of the present invention uses multiple distinct tables as shown in , another embodiment of the present invention uses only one table that has all the information contained in the Proxy Signaling Table, ISP Table, and Connect Info Table.","Proxy Signaling Table","The Proxy Signaling Table will now be discussed. The Proxy Signaling Table is the main table used by the proxy signaling agent . The Proxy Signaling Table is generally the master table that contains status and parameter information for proxy signaling virtual channel connections (i.e., SVC) originating at an ATM interface at the node where the proxy signaling agent  resides. In one embodiment, the proxy signaling agent  resides at an IMAS. As shown in , the Proxy Signaling Table contains one row for each proxy call that is to be made on behalf of an xDSL port. The fields in the Proxy Signaling Table are as follows:","ifIndex","VPI","VCI","Retry Count","Retry Time Interval","Admin Status","Oper Status","ISP ID","Connect Info ID","Row Status","An entry in this Proxy Signaling Table corresponding to a VPI\/VCI contains status and parameter information on a given proxy call that is originated at an ATM interface in this network node. The indices into this table are ifIndex, VPI, and VCI. These indices specify the xDSL port, VPI, and VCI for the proxy call. The ifIndex is associated with the network interface (NI) and VPI\/VCI values associated with the proxy for every port on this node. Essentially, the ifIndex identifies the each port in this node that originates the given proxy call. It is used to originate a proxy call by creating a row, filling in the requisite fields, and then setting up Admin Status to \u201cUP,\u201d which will be described later.","In one embodiment of the present invention, the ifIndex identifies the xDSL port on the DSL side of the network. Many VPI\/VCIs can be supported per port (and per line card). Based on the number of line cards used and the number of ports used per line card, one embodiment of the present invention can support up to 4,096 virtual circuits on the xDSL side (e.g., PVC side) of the IMAS. On the SVC side (or telecommunications backbone or WAN port side), up to 4,096 virtual circuits can be supported by the IMAS. These virtual circuits are represented by the VPI\/VCI number. These 4,096 virtual circuits can be allocated among the ports on both the subscriber side and the telecommunications backbone side in any manner desired by the system administrator.","In one embodiment of the present invention, the fields are predetermined and the system administrator makes the entries at the NMS via a network console. The data that represent the entries are sent to the master SNMP agent (agent  in ). This master SNMP agent  (see ) then distributes information to the relevant software entities, including the MIB agent  (see ) which receives the entry data for the tables. As explained above, the MIB agent  (see ) provides table updates to the proxy signaling agent  (see ).","As explained above, the indices into the Proxy Signaling Table are ifIndex, VPI, and VCI. These indices uniquely identify an entry in this table. The next two fields, Retry Count and Retry Time Interval, address issues that concern retry attempts between calls in the event of call failure or release. Two other fields, Admin Status and Oper Status, address the desired and actual operational states of the SVC connection. The next two fields, ISP ID and Connect Info ID, provide links to other tables that contain more detailed information to enable the call connection\/release to be enabled. The last field, Row Status, provides a status of an entry corresponding to a particular ifIndex\/VPI\/VCI. These fields work together in combination. For example, to make a proxy call connection, the Row Status field must be \u201cUP\u201d and the Admin Status must also be \u201cUP\u201d. If a call has been established, the Oper Status is \u201cUP\u201d whereas \u201cDOWN\u201d indicates that the call has not been established.","The VPI and VCI uniquely identify a PVC; that is, the connection between the user (e.g., home PC and modem) and an IMAS port. Once a call is established to an ISP on the SVC side of the connection, it will be cross connected to this port\/VPI\/VCI. The cross connection allows multiple proxy calls per xDSL port; that is, each xDSL port can be coupled to a large number of SVC paths via the proxy signaling. The VPI and VCI fields are part of the standard ATM header. The VPI is an 8-bit field and the VCI is a 16-bit field that uniquely identify the ATM cell. However, for SVC control signaling purposes, the ATM network uses the larger 16-bit VPCI and the VCI fields. Although the ATM network transmits the VPI, the signaling protocol does not see the VPI at all, but the ATM switch has a local mapping of VPCI to VPI for each virtual path.","The next two fields, the Retry Count and Retry Time Interval, address retry issues for call attempts when the call failed to connect or was released by the network for some reason. The Retry Count field represents the number of times the switch will retry to establish a proxy call using the same ATM address (which is listed in the ISP Table). Usually, if the call attempt failed on the first try or the call was released by the network due to an exception condition, the retry count information will be accessed to determine how many times the switch will try to re-establish the connection. If the system attempted call connections to the current ATM address for the maximum number of times specified in the Retry Count field and failed, the system then proceeds to the next available ATM address (listed in the ISP Table, to be discussed further below).","For the interval between retry attempts, the Retry Time Interval field is provided. This Retry Time Interval field indicates the amount of time the switch waits before it attempts to establish a proxy call that failed to establish or was released by the network due to an exception condition. If the number of retries is set to the value \u201c0,\u201d then this field is ignored.","The next two fields, Admin Status and Oper Status, indicate the desired and actual operational states, respectively, of the proxy call connections. The Admin Status field indicates the current desired administrative state of a proxy call. In other words, the system administrator may want the SVC portion of the circuit \u201cUP\u201d or \u201cDOWN.\u201d If the Admin Status value indicates \u201cUP,\u201d then the circuit or connection associated with an SVC proxy call is operational even if the port may not be physically operational. Usually, however, an \u201cUP\u201d indication for Admin Status also results in the port being physically operational. If the Admin Status is \u201cDOWN,\u201d the state of the circuit or connection is not operational or released.","Oper Status indicates whether a call connection has been established or not. The \u201cUP\u201d indicates that a proxy call has been established, whereas \u201cDOWN\u201d indicates that the proxy call has not been established. The unknown state indicates that the state of the proxy call cannot be determined. With respect to Admin Status, when Admin Status is \u201cUP,\u201d Oper Status could be either \u201cUP\u201d or \u201cDOWN\u201d (but usually \u201cDOWN\u201d until proxy call has been established). When Admin Status is \u201cDOWN,\u201d Oper Status will be \u201cDOWN.\u201d","The next two fields, ISP ID and Connect Info ID, provide links or pointers to the ISP Table and the Connect Info Table, respectively. The ISP ID has the same value as the ISP Index, which identifies the entries in the ISP Table corresponding to a particular VPI\/VCI. The ISP ID is used by the system to index into the relevant ISP Table. Thus, an entry in this field provides an index to the relevant ISP Table which provides a list of at least one ISP address for call establishment and release. The value of this field is set by the MIB agent  (see ) after the associated entry in the ISP Table have been created.","The Connect Info ID has the same value as the Connect Info Index, which identifies the entries in the Connect Info Table corresponding to a particular VPI\/VCI of an ATM cell. It is used by the system to index into the relevant Connect Info Table to obtain call connection\/release information. The values of this field are set by the MIB agent  (see ) after the associated entry in the Connect Info Table have been created.","The last field in the Proxy Signaling Table of  is Row Status, which exists for management of this Proxy Signaling Table and hence for proxy call connection\/termination. The Row Status provides status information for any entry corresponding to a VPI\/VCI. This field is used to create a new proxy call or delete an existing proxy call at the originating node. To initiate a proxy call connection, the Admin Status field must be set to \u201cUP.\u201d","ISP Table","Referring now to , the ISP Table will now be discussed. The ISP Table is a table of ATM addresses of the Network Interfaces to be used for each ISP for proxy signaling. For each ISP address, a plurality of alternative ATM addresses will be listed. The entry into this table is ISP Index, or ISP ID to ISP IDM as shown in . The ISP Table contains the following fields:","ISP ID (ISP ID . . . ISP IDM)","ISP DESCR","ATM Addresses (ATM Address . . . ATM AddressN)","Row Status","The ISP ID field in the ISP Table corresponds to the ISP ID in the Proxy Signaling Table that uniquely identified a particular VPI\/VCI. Indeed, the ISP ID field in the Proxy Signaling Table is a pointer to the relevant portion of this ISP Table. A one-to-one correspondence between VPI\/VCI and ISP IDs does not necessarily exist. Multiple different VPI\/VCI in the Proxy Signaling Table can map to the same ISP ID. However, a single VPI\/VCI corresponds to a single ISP ID. The Proxy Signaling Table, which maps VPI\/VCI to an ISP ID for indexing into the ISP Table, provides only one ISP ID field.","In the ISP Table, a unique ISP ID is associated with a row of entries.  shows M ISP IDs from ISP ID to ISP IDM. The ISP DESCR provides a description of the ISP ID.","The ATM Address fields identify the ATM addresses of the Network Interface that terminate a particular proxy call.  shows ATM Address to ATM Address to ATM AddressN. Thus, in one embodiment of the present invention, N is greater than 5 as more than five ATM addresses are shown in . However, any desired number of ATM addresses may be used, including less than five ATM addresses. In one embodiment, each row may contain up to five ISP ATM addresses. These addresses are listed in preference ascending order. For example, ATM address in  is used first for the call connection. If repeated attempts (as specified in the Retry Count field in the Proxy Signaling Table) result in failure, ATM address (the second listed ATM address) will be used next.","As briefly explained above, each ATM address represents an alternative ATM address corresponding to this particular ISP ID. These alternative ATM addresses are particularly relevant for any retry attempts defined in the Proxy Signaling Table as Retry Count and Retry Time Interval. Thus, if a call attempt failed for the first ATM address, the system attempts the call connection again after waiting a short time interval dictated by the Retry Time Interval field. These retries to the same ATM address (upon failure) are dictated by the Retry Count field in the Proxy Signaling Table which specify the maximum number of times that the system attempts call connections to the same ATM address. If the system reaches the maximum number of retry attempts as determined by the Retry Count field for a given ATM address, the system then proceeds to the next listed ATM address. If the system reaches the last ATM address, the system attempts the call with the first ATM address. This process of attempting calls with all the listed ATM addresses is cyclical and proceeds until the call connection is successful.","The Row Status field is used to create a new row or modify or delete an existing row in the ISP Table. Each Row Status cell in the table provides such add\/modify\/delete status for the entire row corresponding to an ISP ID. Thus, if row for ISP ID is to be deleted, the ROW Status field will reflect this status. The NMS  via the master SNMP agent  (see ) and the MIB agent (see ) will then update the ISP Table to reflect the deletion of the entries corresponding to the ISP ID row.","Connect Info Table","The Connect Info Table shown in  will now be discussed. The Connect Info Table contains a connection profile which will be used when establishing a proxy call (i.e., building a setup message). Each VPI\/VCI in the Proxy Signaling Table is associated with a Connect Info ID, which is the same value as the Connect Info Index in the Connect Info Table. This Connect Info ID in the Proxy Signaling Table is used as the pointer to or index into the relevant portion of the Connect Info Table. In one embodiment of the present invention, many Proxy Signaling Table entries can share the same Connect Info Table entry. The fields in this table are associated with the SVC side of the connection. The fields are as follows:","Connect Info Index","DESCR","Forward Max CPCS SDU Size","Backward Max CPCS SDU Size","Forward Peak Cell Rate","Backward Peak Cell Rate","Bearer Class","Layer 2 Protocol","Layer 3 Protocol","Initial Protocol ID","Forward QoS Class","Backward QoS Class","Row Status","The index into this table is called Connect Info Index. The Connect Info ID in the Proxy Signaling Table, which has the same value as the Connect Info Index in this Connect Info Table, pointed to the relevant portion of the Connect Info Table. The DESCR field provides a description of the Connect Info entry.","The Forward Max CPCS SDU Size field refers to the maximum AAL5 CPCS SDU size in octets that is supported in the forward direction of this connection. CPCS, or Common Part Convergence Sublayer, and SDU, or Service Data Unit, are ATM acronyms. CPCS SDU refers to the data unit which will be delivered to the receiving AAL layer by the destination CPCS. As known to those skilled in the art, the length of CPCS SDU sizes can vary from 1 to 65,568 bytes. The CPCS PDU, which is a superset of the CPCS SDU and also includes the PAD of 0 to 47 bytes and the CPCS PCI (Protocol Control Information) of 8 bytes, can vary in size from 48 to 65,568 bytes. The Backward Max CPCS SDU Size field refers to the maximum AAL5 CPCS SDU size in octets that is supported in the backward direction of this connection.","The Forward Peak Cell Rate field refers to the peak number of cells that is supported in the forward direction of this connection. The Backward Peak Cell Rate field refers to the peak number of cells that is supported in the backward direction of this connection.","The next three fields, Bearer Class, Layer 2 Protocol, and Layer 3 Protocol, comply with the ATM UNI specification v. 3.1. The Bearer Class field refers to the bearer class for this connection. The Bearer Class refers to the broadband bearer capability information element that is used to indicate a requested broadband connection-oriented service (see ITU-T Recommendation F.811) to be provided by the network. Three bearer classes exist\u2014BCOB-A, BCOB-C, and BCOB-X. BCOB-A and BCOB-C refer to the user requesting more than an ATM-only service from the network. BCOB-X, however, refers to the user requesting an ATM-only service from the network.","The Layer 2 Protocol field refers to the layer 2 protocol information for this connection. In accordance with ATM UNI specification v. 3.1, the following layer 2 protocols can be specified in this field of the Connect Info Table:","Basic Mode ISO 1745","ITU-T Recommendation Q.921","ITU-T Recommendation X.25, link layer","ITU-T Recommendation X.25 multilink","Extended LAPB; for half duplex operation","HDLC ARM (ISO 4335)","HDLC NRM (ISO 4335)","HDLC ABM (ISO 4335)","LAN logical link control (ISO 8802\/2)","ITU-T Recommendation X.75, single link procedure","ITU-T Recommendation Q.922","User specified","ISO 7776 DTE-DTE","The Layer 3 Protocol field refers to the layer 3 protocol information for this connection. In accordance with ATM UNI specification v. 3.1, the following layer 3 protocols can be specified in this field of the Connect Info Table:","ITU-T Recommendation X.25, packet layer","ISO\/IEC 8208","X.223\/ISO 8878","ISO\/IEC 8473","CCITT Recommendation T.70 minimum network layer","User specified","The Initial Protocol ID field refers to the initial protocol ID for this connection. This field is valid only if the Layer 3 Protocol ID field is not omitted.","The Forward QoS Class field refers to the Quality of Service class in the forward direction for this connection. The Backward QoS Class field refers to the Quality of Service class in the backward direction for this connection.","The Row Status field is used to create a new row or modify or delete an existing row in this table. In this respect, it is similar to the Row Status fields of the Proxy Signaling jTable and the ISP Table.","Proxy Call Processing\u2014General","The proxy call process for establishing and terminating a proxy signaling call will now be discussed. Specifically, call process initialization, call establishment, call termination, and call retry will be discussed with reference to , , , , , , , and . In one embodiment of the present invention, these processes are performed in software at the DSLAMs. In particular, these processes are performed in the IMAS. In another embodiment, these processes are performed in hardware. For call establishment and termination, the system uses the fields and entries from the Proxy Signaling Table. For call retry, the system uses the fields and entries from the Proxy Signaling Table and the ISP Table. The Connect Info Table is used to obtain status and connection configuration information.","Proxy Call Initialization Process","Initialization of the proxy signaling agent  () will now be discussed. The initialization process involves two sets of steps\u2014(1) loading the proxy signaling persistent store database; and (2) binding with the Call Control CALLC software entity  ().  illustrates the call process initialization steps.","The process starts at step  during system boot-up. Recalling the user interface side, the system administrator or user can view performance statistics\/reports and configure the various devices coupled to the NMS with the network management console (refer to ). For device configuration, he can make entries in the various tables (e.g., Proxy Signaling Table, ISP Table, Connect Info Table). Once the configuration information is entered, this information is sent to the IMAS via an SNMP link where table configuration data is stored in non-volatile memory (e.g., flash EEPROM) in CPU subsystem  (see ). In one embodiment of the present invention, this non-volatile memory is located in the IMAS.","In step  of , the proxy signaling database (i.e., tables) are loaded from the non-volatile memory into local memory (e.g., RAM). This load operation will provide the IMAS with access to the tables for proxy signaling call establishment or termination.","The restart sequence will then proceed. In step , the proxy signaling agent  () sends a request called Appl Restart Request to CALLC  via line . In step , the system waits for the restart request from the proxy signaling agent  to be confirmed by the CALLC . In step , the CALLC  sends a confirmation called Appl Restart Confirm to the proxy signaling agent .","Once the restart sequence has been launched, the bind sequence will then proceed to bind the proxy signaling agent  with the CALLC  so that further communication can be achieved. In step , the proxy signaling agent  sends a request called Bind Request to CALLC  via line . The system then waits in step  for the bind request to be acknowledged by CALLC . In step , the CALLC  sends the Bind Confirm response to the proxy signaling agent . As discussed later, the Bind Confirm contains a port map indicating the status of all ports at the time of the bind request.","The call initialization process ends at step . Although these steps are executed primarily during a hard boot-up, the same process can be used for soft boot-ups as well. Also, power restoration upon failure may necessitate that this call initialization process be executed.","Proxy Call Establishment","The proxy call establishment process will now be discussed. In order for a proxy call to be made, a triggering event must occur and certain conditions must exist. In one embodiment of the present invention, the system recognizes three triggering events and these events are any of the following:","(1) A xDSL port is now \u201cUP;\u201d or","(2) A new entry is added to the Proxy Signaling Table via Row Status, with the Admin Status set to \u201cUP;\u201d or","(3) The Admin Status of an existing Proxy Signaling Table entry is changed to \u201cUP.\u201d","When any one of the above triggering events occur, a proxy call will be attempted if further conditions are satisfied. In one embodiment of the present invention, the system recognizes three specific conditions that must be satisfied before a call attempt is made. These three conditions are as follows:","(1) A valid active entry exists in the Proxy Signaling Table; and","(2) The Admin Status of this entry is \u201cUP;\u201d and","(3) The corresponding xDSL port is \u201cUP.\u201d","Call attempt processing in response to each of the above triggering events will now be discussed.  shows a flow diagram that describes how a call is attempted when the triggering event is an xDSL port up event.  shows a flow diagram that describes how a call is attempted when the triggering event is the addition of a new entry in the Proxy Signaling Table.  shows a flow diagram that describes how a call is attempted when the triggering event is the changing of the Admin Status to \u201cUP.\u201d","Proxy Call Establishment\u2014Port Up Process (Trigger Event )","One triggering event that initiates proxy call processing is the detection of an xDSL port being \u201cUP.\u201d Port up processing commences when a port restart indication and bind confirm are received by the proxy signaling agent  from CALLC . The bind confirm contains a port map indicating the status of all ports at the time of the bind request. Each port in the map marked \u201cUP\u201d is treated as if a port restart indication has been received. Refer to .","The process starts at step  when the port is \u201cUP.\u201d This satisfies the first condition for the proxy call; that is, the xDSL port is \u201cUP.\u201d An xDSL port is considered to be \u201cUP\u201d when the xDSL modems have trained. Training allows the modems to adjust to the telephone line conditions including amplitude response, delay distortions, timing recovery, and echo characteristic. The training modem (transmitting modem) sends a training sequence to the receiving modem, which makes these necessary adjustments for line condition variations. The training period lasts anywhere from 30-60 seconds for ADSL modems and 1 second for IDSL modems.","As mentioned previously, many VPIs\/VCIs can be associated with a given xDSL port. An exemplary number is 50 VPI\/VCI per port. Designed correctly with an adequate number of ports per line card and an adequate number of line cards per IMAS chassis, the IMAS could support up to 4,000 ports on the xDSL side (i.e., PVC side) of the network. One skilled in the art can certainly appreciate that more ports can be supported.","The ifIndex, which is an index for entry into the Proxy Signaling Table, identifies a port. At step , the proxy signaling agent reads the next proxy signaling entry for this port. If the proxy signaling agent had not previously accessed an entry for this port, the proxy signaling agent reads this first entry for this port. This entry for this port is associated with a VPI\/VCI.","If no further entry exists, then step  evaluates to \u201cYES\u201d and the system proceeds to step  where the call establishment port up processing ends. If another entry exists, then step  evaluates to \u201cNO\u201d and the system proceeds to step .","In step , the process inquires on the state of the Row Status field. If a table entry exists, the Row Status field of the Proxy Signaling Table indicates this table entry status as active. If the Row Status is not active, this second condition has not been met so the system proceeds back up to step  where it reads the next proxy signaling entry for this same port. If the Row Status is active, this second condition has been satisfied and the system proceeds to step .","In step , the system checks the Admin Status for this entry. As explained above, the Admin Status indicates the desired operational state of the port. If the system does not want the port to be up, the Admin Status will indicate this with a \u201cDOWN\u201d setting. If the Admin Status is not \u201cUP,\u201d this third condition has not been satisfied and the system proceeds to step  where it reads the next proxy signaling entry for this same port. If the Admin Status is \u201cUP,\u201d the system desires this port to be operational and this third condition is satisfied. The system then proceeds to step .","In step , the system initiates a proxy call because the triggering event (i.e., port up) has occurred and all three conditions have been satisfied. The proxy call initiation step  will be discussed in greater detail below with reference to . After the proxy call is initiated, the system proceeds to step  again to read the next proxy signaling entry for this port. Note that the proxy call will be initiated for all entries (i.e., VPI\/VCI) associated with this port because this port had generated a triggering event. Thus, if this triggering port is associated with 50 VPI\/VCIs, all 50 VPI\/VCI will be checked for the three call processing conditions before ending the process at step  when all entries are exhausted.","Proxy Call Establishment\u2014New Entry Process (Trigger Event )","Another triggering event that initiates proxy call processing is the addition of a new entry into the Proxy Signaling Table. This new entry usually coincides with the addition of a new VPI\/VCI from the MIB agent which is associated with a subscriber wanting an SVC connection. This new entry is associated with some port, which may be either \u201cUP\u201d or \u201cDOWN.\u201d Refer to FIG. R.","The process starts at step . At step , the proxy signaling agent reads this new proxy signaling entry. This entry for this port is associated with a VPI\/VCI.","In step , the process inquires on the state of the Row Status field. If the triggering event is the addition of a new entry, the Row Status field is active. If a table entry has just been created, the Row Status field of the Proxy Signaling Table indicates this table entry status as active. If the Row Status is not active, this first condition has not been met so the system proceeds to step  where the process ends and waits for the next triggering event. If the Row Status is active, this first condition has been satisfied and the system proceeds to step .","In step , the system checks the Admin Status for this entry. As explained above, the Admin Status indicates the desired operational state of the port. If the system does not want the port to be up, the Admin Status will indicate this with a \u201cDOWN\u201d setting. If the Admin Status is not \u201cUP,\u201d this second condition has not been satisfied and the system proceeds to step  where the process ends and waits for the next triggering event. If the Admin Status is \u201cUP,\u201d the system desires this port to be operational and this second condition is satisfied. The system then proceeds to step .","In step , the system checks on whether the xDSL port is up or not. An xDSL port is considered to be \u201cUP\u201d when the xDSL modems have trained as explained above. If the port is not \u201cUP,\u201d this third condition is not satisfied and the system proceeds to step  where the process ends and waits for the next triggering event. If the port is \u201cUP,\u201d the third condition has been satisfied. The system then proceeds to step .","In step , the system initiates a proxy call because the triggering event (i.e., new entry addition) has occurred and all three conditions have been satisfied. The proxy call initiation step  will be discussed in greater detail below with reference to . After the proxy call is initiated, the system proceeds to step  where the process ends and waits for the next triggering event. Unlike the port up trigger, the system need not check for more entries for this port because the triggering event is the creation of this new entry. The mere existence of the other entries, without more, is not a triggering event and so these other entries for this port (or any other port) will not processed for call attempts. The call is attempted for only the new entry that served as the trigger, as long as the three conditions have been satisfied.","Proxy Call Establishment\u2014Admin Status Up Process (Trigger Event )","A third triggering event that initiates proxy call processing is the detection of the Admin Status being \u201cUP.\u201d Proxy call processing commences when an existing entry in the Proxy Signaling Table has been modified such that the Admin Status is now \u201cUP.\u201d In other words, the Admin Status field has been changed to \u201cUP\u201d for an existing row that is associated with a given VPI\/VCI. Refer to .","The process starts at step . At step , the proxy signaling agent reads this modified proxy signaling entry. This entry for this port is associated with a VPI\/VCI.","In step , the process inquires on the state of the Row Status field. If a table entry exists, the Row Status field of the Proxy Signaling Table may be either \u201cACTIVE\u201d or \u201cINACTIVE.\u201d Note that the Admin Status can only be applied to active Row Status fields. If the Row Status is not active, this first condition has not been met so the system proceeds to step  where the process ends and waits for the next triggering event. If the Row Status is active, this first condition has been satisfied and the system proceeds to step .","In step , the system checks the Admin Status for this entry. Naturally, when the triggering event is the change of the Admin Status to \u201cUP,\u201d this second condition will also be satisfied easily. On the other hand, the Admin Status could be quickly changed back to \u201cDOWN\u201d if the system inadvertently or purposely desires the operational state of this port to be \u201cDOWN.\u201d If the Admin Status is not \u201cUP,\u201d this second condition has not been satisfied and the system proceeds to step  where the process ends and waits for the next triggering event. If the Admin Status is \u201cUP,\u201d the system desires this port to be operational and this second condition is satisfied. The system then proceeds to step .","In step , the system checks on whether the xDSL port is up or not. An xDSL port is considered to be \u201cUP\u201d when the xDSL modems have trained as explained above. If the port is not \u201cUP,\u201d this third condition is not satisfied and the system proceeds to step  where the process ends and waits for the next triggering event. If the port is \u201cUP,\u201d the third condition has been satisfied. The system then proceeds to step .","In step , the system initiates a proxy call because the triggering event (i.e., Admin Status change to \u201cUP\u201d) has occurred and all three conditions have been satisfied. The proxy call initiation step  will be discussed in greater detail below with reference to . After the proxy call is initiated, the system proceeds to step  where the process ends and waits for the next triggering event. Unlike the port up trigger, the system need not check for more entries for this port because the triggering event is the change of the Admin Status field for this existing entry. The mere existence of the other entries, without more, is not a triggering event and so these other entries for this port (or any other port) will not processed for call attempts. The call is attempted for only the new entry that served as the trigger, as long as the three conditions have been satisfied.","Proxy Call Termination","Having successfully established a proxy call, the system can also terminate these proxy calls as well using proxy signaling in accordance with one embodiment of the present invention. Like proxy call establishment, proxy calls will be terminated if any one of the following triggering events occur:\n\n","Note that, except for the fourth trigger, call termination triggering events mirror those for call establishment. Each of these triggering events will now be discussed with respect to , , and .","Proxy Call Termination\u2014xDSL Port Down (Trigger Event )","One triggering event for proxy call termination is some indication that the xDSL port is down. One such indication is the port restart indication generated by the CALLC  (). The proxy signaling agent  () receives a port restart indication from CALLC  () that the specified port is no longer in service. CALLC  recognizes this port down condition and will terminate the call. The proxy signaling agent  is not required to do any further processing for this call.","Proxy Call Termination\u2014Entry Deletion (Trigger Event )","Another triggering event is the deletion of an entry in the Proxy Signaling Table. Entry deletion processing commences when an existing entry in the Proxy Signaling Table has been removed. Refer to .","The process starts at step . In step , the system inquires whether an entry in the Proxy Signaling Table has been deleted. This can be determined by examining the Row Status field. If an entry has been deleted, step  evaluates to \u201cYES\u201d and the system proceeds to step . If an entry has not been deleted, step  evaluates to \u201cNO\u201d and the system proceeds to step  where the process ends. Proceeding to step  at this point indicates that no entry has been deleted and call termination steps are not necessary.","In step , the system inquires whether the proxy call is currently in progress. If the proxy call is currently in progress, step  evaluates to \u201cYES\u201d and the system proceeds to step . If the proxy call is currently not in progress, step  evaluates to \u201cNO\u201d and the system proceeds to step  where the process ends. After all, if no call is in progress, no termination steps are necessary.","In step , having determined that the proxy call is currently in progress and an entry in the Proxy Signaling Table has been deleted, the proxy signaling agent  sends a Release Request to CALLC  (). CALLC  then releases the call corresponding to that entry. The process then ends at step .","Proxy Call Termination\u2014Admin Status Down (Trigger Event )","Another triggering event is the change of the Admin Status field to \u201cDOWN\u201d in the Proxy Signaling Table. Thus, when an existing entry in the Proxy Signaling Table has been modified and the Admin Status is changed to \u201cDOWN,\u201d a trigger event has occurred. Refer to .","The process starts at step . In step , the system inquires whether an entry in the Proxy Signaling Table has been modified by examining the Admin Status field. If the Admin Status field has been changed to \u201cDOWN,\u201d step  evaluates to \u201cYES\u201d and the system proceeds to step . If the Admin Status field has not been changed to \u201cDOWN,\u201d step  evaluates to \u201cNO\u201d and the system proceeds to step  where the process ends. Proceeding to step  at this point indicates that no entry has been modified and call termination steps are not necessary.","In step , the system inquires whether the proxy call is currently in progress. If the proxy call is currently in progress, step  evaluates to \u201cYES\u201d and the system proceeds to step . If the proxy call is currently not in progress, step  evaluates to \u201cNO\u201d and the system proceeds to step  where the process ends. After all, if no call is in progress, no termination steps are necessary.","In step , having determined that the proxy call is currently in progress and the Admin Status field in the Proxy Signaling Table has been changed to \u201cDOWN\u201d for an entry, the proxy signaling agent  sends a Release Request to CALLC  (). CALLC  then releases the call corresponding to that entry. The process then ends at step .","Proxy Call Termination\u2014Idleness or DSL Modem Power Down Mode (Trigger Event )","A fourth triggering event for proxy call termination is the idleness of the subscriber or the xDSL modem is in power down mode. Thus, if the subscriber is idle for a predetermined amount of time or the xDSL modem has been placed in power down mode, the proxy call will be terminated.","The process starts at step . In step , the system inquires whether the user has been idle for a predetermined amount of time x. This time x is programmable and can be set to any desired number. In one embodiment of the present invention, the predetermined amount of time is 15 minutes. This idleness can be monitored at the IMAS via a bit position in a register that indicates whether any data traffic is present. Whenever the IMAS detects idleness, this bit is set and a timer runs. After x amount of time has passed and the bit is still set, the IMAS now knows that the predetermined threshold has passed and the call can be terminated. If the subscriber has been idle for x minutes, the step  resolves to \u201cYES\u201d and the system proceeds to step . If the subscriber has not been idle for the duration of the predetermined amount of time x, step  resolves to \u201cNO\u201d and the system proceeds to step .","Step  inquires whether the xDSL modem used for this particular traffic is in power down or sleep mode. In power down or sleep mode, the modem powers down when the modem has not been used for some period of time (e.g., 15 minutes). The indication that the modem is in power down mode can be detected via software at the IMAS. If the modem is in power down mode, step  resolves to \u201cYES\u201d and the system proceeds to step . If the modem is not in power down mode, the step  resolves to \u201cNO\u201d and the system proceeds to step  where the proxy call termination inquiry ends.","If the modem has been idle for a while, step  resolves to \u201cYES\u201d and the system proceeds to step . In step , the system inquires whether the proxy call is currently in progress. If the proxy call is currently in progress, step  evaluates to \u201cYES\u201d and the system proceeds to step . If the proxy call is currently not in progress, step  evaluates to \u201cNO\u201d and the system proceeds to step  where the process ends. After all, if no call is in progress, no termination steps are necessary.","In step , having determined that the proxy call is currently in progress and either the subscriber is idle or the xDSL modem is in power down mode, the proxy signaling agent  sends a Release Request to CALLC  (). CALLC  then releases the call corresponding to that entry. The process then ends at step .","Proxy Call Attempt and Retry Processing","Proxy call attempts have been briefly mentioned above with respect to the proxy call establishment triggering events. When a triggering event occurs and is recognized, the system examines whether the requisite conditions have been satisfied. In one embodiment of the present invention, the system recognizes three triggering events. For each triggering event, the system requires that three specific conditions be satisfied before a call attempt is made. When these conditions are satisfied, the call attempt is made. The call attempts were briefly shown above with respect to  (step ),  (step ), and  (step ). These call attempt steps will now be discussed in greater detail.","Basically, the ISP Table lists several alternate ATM addresses for each ISP ID. During call initiation, the system attempts a proxy call to the first ATM address listed for the relevant ISP entry. When the proxy call attempt fails, the retry logic is invoked. The retry logic is designed to attempt call retries to multiple ATM destinations using the Retry Count and Retry Time Interval in the Proxy Signaling Table. The Retry Count dictates the number of times the system will attempt a retry call to each ATM address. The Retry Time Interval dictates how long the system will wait between retries. If the system has unsuccessfully tried all listed addresses in the ISP Table for each ISP ID, the system will start over again with the first listed address after waiting for some recycle time period T, where in one embodiment of the present invention, the recycle time period is 10 minutes. Once a successful connection is made to any of the listed addresses, the retry logic is reset so that when the call subsequently fails, the retry process will start over again as described above. Thus, even if the call connection is established using the fourth listed ATM address and the call subsequently fails, the reset retry logic attempts the proxy call using the first listed ATM address in the ISP Table for that particular ISP ID.","Referring now to , the call attempt and retry processing starts at step . At this point, the system has recognized some triggering event and has determined that the required system conditions have been satisfied. Accordingly, a call attempt can be made for the entry that is currently being processed. If the triggering event is an xDSL port being up, the system attempts a call for each of the VPI\/VCI (and corresponding ISP ID) listed for that port one at a time. This could be as many as 50 ISP IDs in one embodiment of the present invention. If the triggering event is the addition of a new entry or the Admin Status being \u201cUP,\u201d the system makes a call attempt for the entry that corresponds to that triggering event, i.e., that new entry or the entry associated with the Admin Status field being changed to \u201cUP.\u201d","In step , the system refers to the ISP Table corresponding to the entry that is currently being processed. The ISP Table lists a number of alternate ATM addresses for a given ISP ID. The system uses the first listed address (e.g., ATM address in ) for the call attempt. If the call is unsuccessful with this selected first ATM address through the requisite number of retries dictated by Retry Count, the system will use the second listed ATM address, as explained later.","In step , the proxy signaling agent  sends a Proxy Connect Request to CALLC  via line  (). The proxy signaling agent  waits for the response from CALLC  in step . These steps  and  constitutes a call attempt. If this is not the first call attempt for this ISP ID, these steps constitute a retry attempt. Retry processing in near the bottom of this flow diagram usually loop back up to step  for retry attempts.","The response from CALLC  is either a RELEASE or a CONNECT. A RELEASE response indicates that the call attempt to the selected ATM address has been unsuccessful. A CONNECT response indicates that the call attempt to the selected ATM address has been successful. In step , the proxy signaling agent receives the response from the CALLC  and determines whether the response is a RELEASE or a CONNECT. If the response is a CONNECT, the system proceeds to step  where CALLC  sends a CONNECT CONFIRM response to the proxy signaling agent . This CONNECT CONFIRM response may be the same as the CONNECT response. At this point, the Oper Status field in the Proxy Signaling Table is changed to \u201cUP\u201d (the default state of Oper Status is \u201cDOWN\u201d). This indicates that the proxy call has been established. The system then ends at step  since the call attempt has been successful for this entry.","If, however, the response from CALLC  is a RELEASE, the call attempt has been unsuccessful and the system proceeds to step . CALLC  sends the RELEASE indication to the proxy signaling agent  at step . Because the call attempt has been unsuccessful, the retry logic is invoked so that other attempts will be made until the call is successful. The retry steps will now be discussed. These retries are accomplished with the aid of the Retry Count and Retry Time Interval fields in the Proxy Signaling Table.","At step , the system checks if the retry attempts have been exhausted. The number of retry attempts per ISP address is determined by the Retry Count field. The Retry Count field provides the maximum number of retry attempts that the system uses to make a call connection until the call is successful. In one embodiment of the present invention, the Retry Count field is set at anywhere from 0 to 9. However, this field is programmable and the system administrator can use other count numbers as desired. If the system reaches the maximum number of retries as set forth in the Retry Count, the retry attempts are deemed to have been exhausted. If the retry attempts have been exhausted, step  evaluates to \u201cYES\u201d and the system proceeds to step  to use other alternate listed ATM addresses. If the retry attempts have not been exhausted, step  evaluates to \u201cNO\u201d and the system proceeds to step  to retry the call attempt again.","For the purpose of this discussion, assume that the retries have not been exhausted and step  evaluates to \u201cNO.\u201d If the retries have not been exhausted, this implies that the maximum number of retries as set forth in Retry Count has not been reached yet. For example, the Retry Count is set at 5 and so far, the system has only retried the call attempt 3 times.","Step  starts the retry interval timer. This timer runs for the length of time specified in the Retry Time Interval in the Proxy Signaling Table. In one embodiment of the present invention, the Retry Time Interval is set at anywhere from 0 to 9 seconds. However, this field is programmable and the system administrator can use other time intervals. At step , the system waits for the requisite time interval set forth in Retry Time Interval. When the time expires as shown in step , the system proceeds back up to step , which sends the proxy connect request to CALLC . This constitutes a retry attempt. If the retry results in failure again (release indication from CALLC at steps  and ), the system inquires whether the retry attempts have been exhausted again step , as described above.","Assuming that the retries have been exhausted, step  resolves to \u201cYES.\u201d At step , the system inquires whether more ATM addresses are provided in the ISP Table for the given ISP ID. If other ATM addresses are provided, step  resolves to \u201cYES\u201d and the system takes the next alternate ATM address. The system then resets the Retry Count at step  back to the predetermined number that specifies the maximum number of retry attempts. The system proceeds back up to step  which makes the call attempt.","If, on the other hand, more ATM addresses are not provided in the ISP Table for this ISP ID, then step  resolves to \u201cNO.\u201d More ATM addresses may not be provided because either only one ATM address has been provided for this ISP ID, or the recently used ATM address is the last of the ATM addresses listed (e.g., ATM address  is the last of the five ATM addresses provided for this particular ISP ID). Once all of the ATM addresses have been tried and failed, the system cycles back to the first listed ATM address again for further retry attempts until the call attempt is successful.","However, before the system starts the cycle over again, a Recycle Timer will be started at step . In one embodiment of the present invention, this recycle timer is set to 10 minutes. The system waits for the requisite recycle time period (e.g., 10 minutes) at step  until the timer expires at step . The system then proceeds to step  which starts this whole call attempt\/retry process again with the first listed ATM address.","Time of Day","In another embodiment of the present invention, the time of day determines whether a call is established or terminated. For those subscribers who purchased specific time of day related services, calls can only be made during the time period specified for that service. For example, if a subscriber purchased service so that calls can be made only from 1:00 AM to 3:00 AM, the proxy signaling logic includes timer as one of the conditions for call establishment and call termination. If a call attempt is made at 12:58 AM, the IMAS will not attempt to make that call connection. Conversely, if a call is in progress and the timer shows that the time is now 3:00 AM, the call will be terminated. In other embodiments, the call will not be abruptly terminated; rather, the subscriber will be charged a premium for continuing with the connection past 3:00 AM.","Proxy Signaling and VPCI","Refer to . In this example, the use of the VPCI field is shown. VPCI is usually used for those systems where a mux is used as an ATM switch interface. In one embodiment of the present invention, the VPCI field is not used at all. Regardless of the use of VPCI, the proxy signaling concepts described herein are still applicable.","End systems , , and  are coupled to end system interfaces , , and  via PVC lines , , and , respectively. End system interfaces , , and  are all coupled to the ATM switch  via lines , , and , respectively. A proxy signaling agent (PSA)  is provided at the IMAS and also coupled to ATM switch  via line . Here, both the ATM switch  and the PSA  support UNI signaling but the end systems , , and  do not.","As shown in  and the table of , the PSA  controls the mapping of VPCI to VPI. In this example, end system interfaces , , and  map to VPI=0 at ATM switch . By mapping the VPI space of each non-signaling end system (UNI=A, B, and C), to the VPCI space, the PSA  can set up virtual connections for these non-signaling end systems as if they are VCs on the UNI of the PSA to the ATM switch. Thus, UNI A (end system ) maps to VPCI=1, UNI B (end system ) maps to VPCI=2, UNI C (end system ) maps to VPCI=3, and finally, UNI P (PSA ) maps to VPCI=0. The fact that these virtual paths are on different physical ports is transparent to the signaling protocol because the mapping of the VPCI to VPI is done locally at the ATM switch and the PSA. Note that the IMAS is an ATM switch.","Proxy Signaling Summary","In sum, the proxy signaling agent  receives call parameter information from the MIB agent . These information include, at the very least, three tables called Proxy Signaling Table, ISP Table, and connect Info Table. The Proxy Signaling Table contains various call parameter information which the proxy signaling agent uses for determining whether some triggering event has occurred for call establishment\/termination and whether certain call conditions have been satisfied which allows the system to make a call or terminate a call. The ISP Table contains alternate ATM addresses for each ISP ID so that retries can be attempted if the primary call attempt fails. The Connect Info Table contains various connection profile information which will be used to make a call. These three tables reference each other.","To recognize triggering events, the system uses the Proxy Signaling Table. In one embodiment, the call establishment triggering events include: (1) port up, (2) new entry added to the Proxy Signaling Table, or (3) the Admin Status changed to \u201cUP.\u201d If any of these triggering events occurs, the system then determines whether certain conditions have been satisfied. Once these conditions have been satisfied, the proxy signaling agent can now make a call. Calls can be initiated when the proxy signaling agent  sends a Proxy Connect Request to the CALLC . The CALLC responds with either a RELEASE (call attempt failed) or CONNECT (call attempt succeeded).","Call termination operates in an analogous manner. In one embodiment, the call termination triggering events include: (1) port down, (2) entry deleted from the Proxy Signaling Table, and (3) Admin Status changed to \u201cDOWN.\u201d Similarly, if any of these triggering events occurs, the system then determines whether certain conditions have been satisfied. Once these conditions have been satisfied, the proxy signaling agent can now terminate a call. The proxy signaling agent  can send a Release Request to CALLC , which will in turn release the call.","During call establishment, the system attempts to call an ATM address that is listed for a corresponding ISP ID in the ISP Table. If the call attempt fails, the proxy signaling agent tries another call attempt for that same ATM address. The maximum number of retry call attempts for this particular cycle of retries for this selected ATM address is dictated by the Retry Count field in the Proxy Signaling Table. Once the number of retries matches the Retry Count, the proxy signaling agent moves on to the next listed ATM address in the ISP Table for a call attempt. If the call attempt fails, the proxy signaling agent retries the call in the manner described above. If the proxy signaling agent exhausts all ATM addresses, the proxy signaling agent starts another cycle all over again with the first listed ATM address until the call attempt is successful.","The foregoing description of a preferred embodiment of the present invention has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Obviously, many modifications and variations will be apparent to practitioners skilled in this art. One skilled in the art will readily appreciate that other applications may be substituted for those set forth herein without departing from the spirit and scope of the present invention. Accordingly, the invention should only be limited by the claims following the glossary of abbreviations.",{"@attributes":{"id":"p-0641","num":"0644"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"V. GLOSSARY OF ACRONYMS"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["AAL","ATM Adaptation Layer"]},{"entry":["ADSL","Asymmetric Digital Subscriber Line"]},{"entry":["ATM","Asynchronous Transfer Mode"]},{"entry":["ATMF","ATM Forum"]},{"entry":["CAP","Carrierless Amplitude-Phase Modulation"]},{"entry":["CDSL","Consumer Digital Subscriber Line"]},{"entry":["CEPT","Conference of European Postal and Telecommunication"]},{"entry":[{},"Administration"]},{"entry":["CO","Central Office"]},{"entry":["CPCS","Common Part Convergence Sublayer"]},{"entry":["CSC","Chassis Switch Card"]},{"entry":["DMT","Discrete Multitone Modulation"]},{"entry":["DS","Digital Signal (DSx)"]},{"entry":["DSL","Digital Subscriber Line (see xDSL)"]},{"entry":["HDSL","High bit-rate Digital Subscriber Line"]},{"entry":["IDSL","ISDN Digital Subscriber Line"]},{"entry":["IE","Information Element"]},{"entry":["ILMI","Interim (or Integrated) Local Management Interface"]},{"entry":["IMAS","Intelligent Multiservice Access System"]},{"entry":["ISA","Industry Standard Architecture"]},{"entry":["ISDN","Integrated Services Digital Network"]},{"entry":["LIU","Line Interface Unit (or xDSL Line Card)"]},{"entry":["MDSL","Multispeed Digital Subscriber Line"]},{"entry":["MIB","Management Information Base"]},{"entry":["NADH","North American Digital Heirarchy"]},{"entry":["NNI","Network to Network Interface or Network Node Interface"]},{"entry":[{},"(depending on context)"]},{"entry":["OC","Optical Carrier (OC-x)"]},{"entry":["OS","Operating System"]},{"entry":["PC","Personal Computer"]},{"entry":["PDU","Protocol Data Unit"]},{"entry":["PNNI","Private Network Node Interface, or Private Network-to-"]},{"entry":[{},"Network Interface"]},{"entry":["PPP","Point-to-Point Protocol"]},{"entry":["PSA","Proxy Signaling Agent"]},{"entry":["PSTN","Public Switched Telephone Network"]},{"entry":["PVC","Permanent Virtual Connection"]},{"entry":["RADSL","Rate-adaptive Digital Subscriber Line"]},{"entry":["SAAL","Signaling AAL"]},{"entry":["SDSL","Symmetric (or Single-pair) Digital Subscriber Line"]},{"entry":["SDU","Service Data Unit"]},{"entry":["SE","Software Entity"]},{"entry":["SNMP","Simple Network Management Protocol"]},{"entry":["SONET","Synchronous Optical Network"]},{"entry":["SPVC","Soft Permanent Virtual Connection"]},{"entry":["SSC","System Switch Card"]},{"entry":["SSCOP","Service Specific Connection Oriented Protocol"]},{"entry":["STS","Synchronous Transport Signal (STS-x)"]},{"entry":["UNI","User Network Interface"]},{"entry":["UTOPIA","Universal Test and Operations Interface for ATM"]},{"entry":["VDSL","Very High-speed Digital Subscriber Line"]},{"entry":["VCI","Virtual Channel Identifier"]},{"entry":["VPI","Virtual Path Identifier"]},{"entry":["VPCI","Virtual Path Connection Identifier"]},{"entry":["xDSL","Any number of Digital Subscriber Line technology variations"]},{"entry":[{},"(e.g., HDSL, ADSL, CDSL, SDSL, RADSL, IDSL, VDSL,"]},{"entry":[{},"MDSL)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["The above objects and description of the present invention may be better understood with the aid of the following text and accompanying drawings.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 15","sup":"2"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 20(A)","FIG. 20(B)"]},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 32"}]},"DETDESC":[{},{}]}
