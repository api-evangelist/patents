---
title: Dynamic aircraft threat controller manager apparatuses, methods and systems
abstract: The DYNAMIC AIRCRAFT THREAT CONTROLLER MANAGER APPARATUSES, METHODS AND SYSTEMS (“DATCM”) transforms flight profile information, terrain, weather/atmospheric data and flight parameter data via DATCM components into comprehensive hazard avoidance optimized flight plans. Comprehensive hazard avoidance includes synergistic comprehensive turbulence and airfoil-specific icing data. In one implementation, the DATCM comprises a processor and a memory disposed in communication with the processor and storing processor-issuable instructions to receive anticipated flight plan parameter data, obtain weather data based on the flight plan parameter data, obtain atmospheric data based on the flight plan parameter data, and determine a plurality of four-dimensional grid points based on the flight plan parameter data. The DATCM may then determine comprehensive hazards mappings. With (near) real-time comprehensive hazard information and/or predictive turbulence/icing forecast specific to airfoil type and/or profile parameters, the DATCM may allow aircraft to avoid areas where comprehensive hazard is greater than a predetermined threshold and/or avoid areas where turbulence/icing may occur.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09558672&OS=09558672&RS=09558672
owner: Telvent DTN LLC
number: 09558672
owner_city: Omaha
owner_country: US
publication_date: 20131231
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["PRIORITY CLAIM","BACKGROUND","DETAILED DESCRIPTION","DATCM Controller","Computer Systemization","Power Source","Interface Adapters","Memory","Component Collection","Operating System","Information Server","User Interface","Web Browser","Mail Server","Mail Client","Cryptographic Server","The DATCM Database","The DATCMs","Distributed DATCMs"],"p":["This application is a National Stage Entry of and claims priority under 35 U.S.C. \u00a7\u00a7365 and 371 to PCT application serial no. PCT\/US2013\/078540, filed Dec. 31, 2013 and entitled \u201cDYNAMIC AIRCRAFT THREAT CONTROLLER MANAGER APPARATUSES, METHODS AND SYSTEMS,\u201d which in turn claims benefit under 35 U.S.C. \u00a7119 to each of the following: U.S. provisional patent application Ser. No. 61\/748,046, filed Dec. 31, 2012, entitled \u201cDynamic Airfoil Platform Manager Apparatuses, Methods and Systems\u201d; U.S. provisional patent application Ser. No. 61\/747,899, filed Dec. 31, 2012, entitled \u201cAirfoil Icing Platform Manager Apparatuses, Methods and Systems\u201d; U.S. provisional patent application Ser. No. 61\/773,726, filed Mar. 6, 2013, entitled \u201cAirfoil Icing Platform Manager Apparatuses, Methods and Systems\u201d; U.S. provisional patent application Ser. No. 61\/747,905, filed Dec. 31, 2012, entitled \u201cDynamic Turbulence Platform Apparatuses, Methods and Systems\u201d; U.S. provisional patent application Ser. No. 61\/747,885, filed Dec. 31, 2012, entitled \u201cDynamic Turbulence Engine Apparatuses, Methods and Systems\u201d; U.S. provisional patent application Ser. No. 61\/748,009, filed Dec. 31, 2012, entitled \u201cDynamic Turbulence Manager Apparatuses, Methods and Systems\u201d; and U.S. provisional patent application Ser. No. 61\/919,796, filed Dec. 22, 2013, entitled \u201cDynamic Storm Environment Engine Apparatuses, Methods and Systems\u201d. The entire contents of the aforementioned applications are expressly incorporated by reference herein.","This application for letters patent document discloses and describes inventive aspects that include various novel innovations (hereinafter \u201cdisclosure\u201d) and contains material that is subject to copyright, mask work, and\/or other intellectual property protection. The respective owners of such intellectual property have no objection to the facsimile reproduction of the disclosure by anyone as it appears in published Patent Office file\/records, but otherwise reserve all rights.","A variety of weather monitoring systems, including ground-based and satellite-based observations, are used to provide weather reports and forecasts, which may be utilized to arrange outings and plan for trips.","The leading number of each reference number within the drawings indicates the figure in which that reference number is introduced and\/or detailed. As such, a detailed discussion of reference number  would be found and\/or introduced in . Reference number  is introduced in , etc.","Dynamic Aircraft Threat Controller Manager (DATCM)","In some embodiments, the DYNAMIC AIRCRAFT THREAT CONTROLLER MANAGER (\u201cDATCM\u201d) as disclosed herein transforms flight profile information, terrain, weather\/atmospheric data and flight parameter data via DATCM components into comprehensive hazard avoidance optimized flight plans. Comprehensive hazard avoidance includes synergistic comprehensive turbulence and airfoil-specific icing data. In one implementation, the DATCM comprises a processor and a memory disposed in communication with the processor and storing processor-issuable instructions to receive anticipated flight plan parameter data, obtain weather data based on the flight plan parameter data, obtain atmospheric data based on the flight plan parameter data, and determine a plurality of four-dimensional grid points based on the flight plan parameter data. The DATCM may then determine comprehensive hazard mappings. With (near) real-time comprehensive hazard information and\/or predictive turbulence\/icing forecast specific to airfoil type and\/or profile parameters, the DATCM may allow aircraft to avoid areas where the comprehensive hazard is greater than a predetermined threshold and\/or avoid areas where turbulence and\/or icing may occur.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 1A","FIG. 1A"],"b":["101","102","103","104"]},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 1B","b":["126","106","107","105","106","107","108","109","111","112","113","125","126","114","115","125"]},"In some embodiments of the disclosure, this initial input component may then be followed by DATCM comprehensive hazard calculation  of the generated geospatial grid region, some examples of which are described in later figures. The DATCM may create a comprehensive hazard overlay to the generated grid region  and may request additional information about the desired parameters of the flight path through this grid region . In some embodiments of the disclosure, these parameters may include schedule-based path-finding (shortest path immediacy), schedule-based but with circumvention of acute comprehensive hazard (shortest path avoiding high hazard icing and\/or turbulence areas), discursive comprehensive hazard circumvention (navigating out of turbulent\/high icing areas), and\/or any combination of or intermediate stage to these parameters . The DATCM may then use available input as described in the input component to determine all flight path creation parameters . The DATCM may then create a flight path over the comprehensive hazard grid region , considering flight path creation parameters . The DATCM may then provide the user the proposed flight path as a terminal overlay, standard or high definition map overlay and\/or the like , as is applicable to the flight planning tool. If the flight path is satisfactory , the user may then exit the flight path planning component of the DATCM as an incorporated flight planning tool option. The polled sensor data discussed above with respect to  may also be employed in the calculations at , , and . In some embodiments of the disclosure, the DATCM may allow the user to export the determined flight path to other media, save the flight path to the user profile, share the flight path with additional users, and\/or the like. In some embodiments of the disclosure, if the proposed flight path is not satisfactory , the DATCM may allow the user to modify flight path creation parameters . At , the DATCM may evaluate whether a new parameter change or update is required. If so, the process may loop back to the input flight parameters step  before proceeding. If no new parameter changes\/updates are required, the process may proceed to request a path determination at  and proceed as described above with regard to , , ,  and . In some embodiments of the disclosure, the user may reenter a flight path creation component specified earlier. In some embodiments of the disclosure, users may be allowed to visually manipulate flight path options using the proposed flight path comprehensive hazard grid overlay. In some embodiments of the disclosure, the user may be able to reenter flight path creation, visually manipulate the proposed flight path and\/or combine these methods in any intermediate path modification.","In some embodiments, the DATCM transforms atmospheric and terrain data, via DATCM components, into comprehensive four-dimensional comprehensive hazard displays and interfaces. In one implementation, the DATCM comprises a processor and a memory disposed in communication with the processor and storing processor-issuable instructions to determine a plurality of four-dimensional grid points for a specified temporal geographic space-time area and obtain corresponding terrain and atmospheric data. Then, for each point of the plurality of four-dimensional grid point, the DATCM determines airfoil-specific icing attributes and non-dimensional mountain wave amplitude and mountain top wave drag, upper level non-dimensional gravity wave amplitude, and a buoyant turbulent kinetic energy. The DATCM may also determine a boundary layer eddy dissipation rate, storm velocity and eddy dissipation rate from updrafts, maximum updraft speed at grid point equilibrium level, storm divergence while the updraft speed is above the equilibrium level and identifying storm top, storm overshoot and storm drag. The DATCM determines Doppler speed, eddy dissipation rate above the storm top, eddy dissipation rate from downdrafts. Then, the DATCM determines the turbulent kinetic energy and\/or the total eddy dissipation rate for each grid point and provides a four-dimensional grid map overlay with comprehensive hazard data for the specified temporal geographic space-time area.","As illustrated in , in some embodiments of the disclosure, the DATCM  may be available to aircraft , air traffic controllers , flight planning tools and software , third party applications  where comprehensive hazard feed incorporation is contributing, and the like. In some embodiments of the disclosure, PIREPS and sensor data of aircraft in real-time comprehensive hazard conditions  may be sent to the DATCM to be incorporated into the DATCM aggregate data analysis. In some embodiments, the sensor data may take an industry-standard format, for example according to a wireless sensor network (WSN) standard such as ZigBee, 802.15.4, or 6LoWPAN. Alternatively, the sensor data input  may take the following XML formatted form:",{"@attributes":{"id":"p-0058","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<sensor_data>"},{"entry":"\u2003\u2003\u2003\u2003<position_data>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<time>10:03:10 UCT<\/time>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<GPS_coord>00907612<\/GPS_coord>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<heading>180 degrees<\/heading>"},{"entry":"\u2003\u2003\u2003\u2003<\/position_data>"},{"entry":"\u2003\u2003\u2003\u2003<airspeed>500 knots<\/airspeed>"},{"entry":"\u2003\u2003\u2003\u2003<ground_speed>575 mph<ground_speed>"},{"entry":"\u2003\u2003\u2003\u2003<wind_velocity>20 kts<\/wind_velocity>"},{"entry":"\u2003\u2003\u2003\u2003<nose_temperature> \u2212100 degrees F <\/nose_temperature>"},{"entry":"\u2003\u2003\u2003\u2003<relative_humidity>65 <\/relative_humidity>"},{"entry":"\u2003\u2003\u2003\u2003<hazard_report_1>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<GPS_coord_hazard1>00924867<\/GPS_coord_hazard1>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<hazard_radius>1.4 miles<\/hazard_radius>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<type>tornado<\/type>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<source_xmn>UHF<\/source_xmn>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<source>NOAA<\/source>"},{"entry":"\u2003\u2003\u2003\u2003<\/hazard_report_1>"},{"entry":"\u2003\u2003\u2003\u2003<hazard_report_2>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<GPS_coord_hazard1>01124527<\/GPS_coord_hazard1>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<hazard_radius>15 miles<\/hazard_radius>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2009<type>strong turbulence above 50,000 feet<\/type>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<source_xmn>vHF<\/source_xmn>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<source>ATC Denver<\/source>"},{"entry":"\u2003\u2003\u2003\u2003<\/hazard_report_2>"},{"entry":"\u2003\u2003\u2003\u2003..."},{"entry":"<\/sensor_data>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Similarly in some embodiments of the disclosure, additional\/other sources of input may be weather stations  and satellites  which may provide numerical weather forecast data  to the DATCM. Such weather information may be obtained from a variety of sources, including the National Weather Service, NOAA, and\/or the like, and may in some embodiments be substantially in the form of a HTTP(S) POST message including XML-formatted data, is provided below:",{"@attributes":{"id":"p-0060","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"POST \/weather_forecast_.php HTTP\/1.1"},{"entry":"Host: www.NOAA.gov\/wx"},{"entry":"Content-Type: Application\/XML"},{"entry":"Content-Length: 484"},{"entry":"<?XML version = \u201c1.0\u201d encoding = \u201cUTF-8\u201d?>"},{"entry":"<local_weather_alerts_report>"},{"entry":"\u2003\u2003<request_ID>45DSKFSWFG5<\/request_ID>"},{"entry":"\u2003\u2003<GPS_coord_requestor>00907612<\/GPS_coord_requestor>"},{"entry":"\u2003\u2003<timestamp>yyyy-mm-dd hh:mm:ss<\/timestamp>"},{"entry":"\u2003\u2003<request_coverage_period>24 hours<\/request_coverage_period>"},{"entry":"\u2003\u2003<weather_detail_24hour>"},{"entry":"\u2003\u2003\u2003\u2003<humidity>64%<\/humidity>"},{"entry":"\u2003\u2003\u2003\u2003<wind_speed>W 8 mph<\/wind_speed>"},{"entry":"\u2003\u2003\u2003\u2003<barometer>30.12 in (1019.2 mb)<\/barometer>"},{"entry":"\u2003\u2003\u2003\u2003<dewpoint>20 degrees F (\u22127 degrees C)<\/dewpoint>"},{"entry":"\u2003\u2003\u2003\u2003<visibility>8.00 mi<\/visibility>"},{"entry":"\u2003\u2003\u2003\u2003<wind_chill>24 degrees F (\u22124 degrees C)<\/wind_chill>"},{"entry":"\u2003\u2003\u2003\u2003<alert_status>frost advisory<\/alert_status>"},{"entry":"\u2003\u2003<\/weather_detail_24hour>"},{"entry":"<\/local_weather_alert_report>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In some embodiments of the DATCM, additional\/other sources of input may be topological data  which may provide terrain characteristic data  to the DATCM. A variety of sources may be used to supply the terrain characteristic data, including GPS\/satellite terrain mapping services like Terraserver, TopoZone, MapTech, Google Earth, NOAA Global Relief Images, etc. Alternatively or in addition, topographical imaging may also be conducted by the aircraft itself during the flight and transmitted to\/processed by the DATCM. In some embodiments of the DATCM, the receipt of this input may occur prior to requests to the DATCM for comprehensive hazard forecasting. In some embodiments of the DATCM, the receipt of this input may be ongoing during requests to the DATCM for comprehensive hazard forecasting. In some embodiments of the DATCM, receipts of input may be both before requests to the DATCM for comprehensive hazard forecasting and ongoing during forecasting requests. In some embodiments, an aircraft  may request (near) real-time localized comprehensive hazard data , an air traffic control system  may request predictive regional comprehensive hazard data as an updating feed  and\/or a (near) real-time regional comprehensive hazard data request , and\/or a flight-planning tool or software may request predictive comprehensive hazard within a flight path region or along a flight path course . A hazard data feed may, in some embodiments, be substantially in the form of a HTTP(S) POST message including XML-formatted data, is provided below:",{"@attributes":{"id":"p-0062","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"POST \/hazards.php HTTP\/1.1"]},{"entry":[{},"Host: www.NOAA.gov\/wx"]},{"entry":[{},"Content-Type: Application\/XML"]},{"entry":[{},"Content-Length: 484"]},{"entry":[{},"<?XML version = \u201c1.0\u201d encoding = \u201cUTF-8\u201d?>"]},{"entry":[{},"<hazard_data_feed>"]},{"entry":[{},"\u2003\u2003<requestor_ID>45DSKFSWFG5<\/requestor_ID>"]},{"entry":[{},"\u2003\u2003<request_type_realtime>TRUE<\/request_type_relatime>"]},{"entry":[{},"\u2003\u2003<request_type_predictive>FALSE<\/request_type_predictive>"]},{"entry":[{},"\u2003\u2003<GPS_coord_requestor>00907612<\/GPS_coord_requestor>"]},{"entry":[{},"\u2003\u2003<heading_requestor>208.13 degrees<\/heading_requestor"]},{"entry":[{},"\u2003\u2003<timestamp>2013-12-31 16:51:22<\/timestamp>"]},{"entry":[{},"\u2003\u2003<last_updated>2013-12-31 15:51:22<\/last_updated>"]},{"entry":[{},"\u2003\u2003<hazard_display_type>map<\/hazard_display_type>"]},{"entry":[{},"\u2003\u2003<hazard_info_001>"]},{"entry":[{},"\u2003\u2003<coord_001>47BSKFSWFG5<coord_001>"]},{"entry":[{},"\u2003\u2003<turb_hazard_info_001>9<\/turb_hazard_info_001>"]},{"entry":[{},"\u2003\u2003<icing_hazard_info_001>12.1<\/icing_hazard_info_001>"]},{"entry":[{},"\u2003\u2003<\/hazard_info_001>"]},{"entry":[{},"\u2003\u2003<hazard_info_002>"]},{"entry":[{},"\u2003\u2003<coord_002>47LCMFSWFG5<coord_002>"]},{"entry":[{},"\u2003\u2003<turb_hazard_info_002>8.8<\/turb_hazard_info_002>"]},{"entry":[{},"\u2003\u2003<icing_hazard_info_002>12.0<\/icing_hazard_info_002>"]},{"entry":[{},"\u2003\u2003<\/hazard_info_002>"]},{"entry":[{},"\u2003\u2003..."]},{"entry":[{},"\u2003\u2003<hazard_info_00>"]},{"entry":[{},"\u2003\u2003<coord_00N>47LCMFSWFG5<coord_00N>"]},{"entry":[{},"\u2003\u2003<turb_hazard_info_00N>4.3<\/turb_hazard_info_00N>"]},{"entry":[{},"\u2003\u2003<icing_hazard_info_00N>11.0<\/icing_hazard_info_00N>"]},{"entry":[{},"\u2003\u2003<\/hazard_info_00N>"]},{"entry":[{},"<\/hazard_data_feed>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In some embodiments, the DATCM may direct such requests through a comprehensive hazard Integration Mechanism component  where DATCM components such as Airfoil Icing Platform (AIP) component, MWAVE component, INTTURB component, VVSTORMSE component, and VVTURB2 component process input into percentage power increase (PPI) and eddy dissipation rate (EDR) values and render them for terminal , standard\/high-definition , and\/or displays of the like. In some embodiments, the DATCM may return a real-time\/near real-time comprehensive hazard map  terminal display to an aircraft, a predictive and updating regional data feed  (e.g., see data displays in ) to an air traffic controller, a predictive flight path comprehensive hazard  display to a flight-planning tool\/software, a comprehensive hazard data feed  to a third party application displaying comprehensive hazard data, and\/or the like.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 3","b":["301","302","303","304","305","306","307","307"]},"In some embodiments, the DATCM may provide a file or data stream as output, in which values of the DATCM during component production, including but not limited to EDR finalization, may be recorded or provided. One example of a DATCM CSV output file is provided below, showing an in-flight time sequence of forecasted turbulence:",{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"406pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Flight PHX-MSP dd mm yyyy Leave: 0413Z Arrive: 0646Z"},{"entry":"Turbulence Forecast (EDR*100)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"11","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Time","Latitude","Longitude","Altitude (kft)","MWAVE","COMTURB","VVTURB","INTTURB","VVINTTURB","FINAL","Explanation"]},{"entry":{"@attributes":{"namest":"1","nameend":"11","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"8","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"9","colwidth":"49pt","align":"char","char":"."}},{"@attributes":{"colname":"10","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"11","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["415","33.5","\u2212111.8","50","0","0","0","0","1","1",{}]},{"entry":["425","34.5","\u2212111.6","250","0","0","0","0","26","26","Near-storm"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"turbulence"]},{"entry":["435","35.4","\u2212110.3","370","0","0","0","0","1","1"]},{"entry":["445","36.2","\u2212109","370","0","0","1","25","1","25","Mountain wave"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"and free gravity"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"wave amplitudes"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"combine"]},{"entry":["455","36.9","\u2212107.7","370","0","0","0","0","0","0"]},{"entry":["505","37.3","\u2212106","370","0","0","0","0","34","34","Storm top"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"turbulence"]},{"entry":["515","38.1","\u2212104.7","370","0","0","1","35","1","35","Mountain wave"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"and free gravity"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"wave amplitudes"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"combine"]},{"entry":["525","38.9","\u2212103.6","370","0","0","1","0","1","1"]},{"entry":["535","39.9","\u2212102.3","370","0","45","0","45","0","45"]},{"entry":["545","40.9","\u2212101","370","0","0","1","0","1","1"]},{"entry":["555","41.8","\u221299.7","370","0","51","1","51","1","51"]},{"entry":["605","42.6","\u221298.5","370","0","34","0","34","0","34"]},{"entry":["615","43.5","\u221297","370","0","30","1","30","1","30"]},{"entry":["625","44.4","\u221295.3","290","0","18","43","18","43","43"]},{"entry":["635","44.7","\u221294","100","0","0","24","0","24","24"]},{"entry":["645","44.8","\u221293.2","20","0","19","0","19","51","51","Near-storm"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"turbulence"]},{"entry":{"@attributes":{"namest":"1","nameend":"11","align":"center","rowsep":"1"}}}]}}]}}},"In some embodiments of the DATCM, a file or feed (e.g., a CSV file) output from the DATCM may be provided as input to a geometric vector data generator , which may provide additional data output options. In some embodiments of the DATCM, the geometric vector data generator may output geometric vector data files to a file server  which may provide the data output to an alert server  which may provide the output a communications networks  to such partners, third parties, software applications, end users and\/or the like as described. In some embodiments of the DATCM, the geometric vector data generator may output geometric vector data files, such as shapefiles, for storage in GIS database(s) . In some embodiments of the DATCM, Web Mapping Services (WMS) and\/or Web Feature Services (WFS)  may obtain the geometric vector data files from GIS database(s) and provide geographic service integrators  with DATCM output data through various communication networks  as described. In some embodiments of the DATCM, file server(s)  and\/or WMS may incorporate the DATCM output data into a DATCM integrated server  with application, data, and\/or network components. A DATCM integrated server may employ such output data from DATCM components in proprietary software tools, web services, mobile applications and\/or the like. In one embodiment of the DATCM, a DATCM integrated server may employ DATCM component output for use in flight planning tools , such as AviationSentry Online\u00ae.","Icing forecasting methods may focus on general categories of aircraft, such as aircraft size, and real-time icing information rely primarily on pilot reports (PIREPS), other subjective\/observational data, and local sensors for determining icing airspace regions. The DATCM as disclosed herein utilizes unique predictive mathematical calculation\/determination components of icing per unique airfoil type and utilizes these predictive mechanisms to generate a comprehensive forecasting map display and\/or overlay that is not merely a generalized icing projection for aircraft of a broad-spectrum type, but is the computational specification of icing to any airfoil known to the DATCM, providing an accurate representation of icing over a specified spatial\/temporal area.","In some embodiments, DATCM transforms flight profiles, atmospheric data, and terrain data, via DATCM components, into comprehensive turbulence alerts and optimized flight path adjustments. In one implementation, the DATCM comprises a processor and a memory disposed in communication with the processor and storing processor-issuable instructions to receive a flight profile for an aircraft, the flight profile including an at least one initial route. The DATCM identifies an initial predicted comprehensive turbulence for the at least one initial route and determines a real-time comprehensive turbulence for the at least one initial route. The DATCM may then determine turbulence threshold compliance based on the real-time comprehensive turbulence and at least one of the flight profile and the initial predicted comprehensive turbulence, and may generate a turbulence exception if the real-time comprehensive turbulence exceeds threshold turbulence parameters. The turbulence exception may comprise an alert for the aircraft and\/or determining an at least one adjusted route for the aircraft based on the updated\/real-time comprehensive turbulence data.","Turbulence forecasting methods may focus on discrete areas of turbulence, such as clear air turbulence (CAT) or thunderstorm regions, and rely primarily on pilot reports (PIREPS) and other subjective\/observational data for determining turbulent airspace regions. The DATCM as disclosed herein utilizes unique predictive mathematical components and calculations of turbulence in four-dimensional space-time and utilizes these predictive devices to generate a comprehensive forecasting and\/or nowcasting map display and\/or overlay that is not merely the visual combination of disparate turbulence projections and\/or observation, but is the computational multi-hazard integration of enhanced turbulent regions, providing an accurate, real-time\/near real-time, multi-dimensional representation of turbulence over a specified spatial\/temporal area, reactive to new weather developments. In some embodiments, the DATCM identifies areas where there is lower turbulence, even though there are radar echoes. With this enhanced granularity, the DATCM enables flight following and\/or path determining and real-time (and\/or near real-time) response to changing weather conditions.","Thunderstorms may create some of the most intense turbulence and icing conditions. Avoidance of such conditions may be preferred, particularly for passenger aircraft. Experienced forecasters use many subjective and objective tools to attempt to forecast convection locations over large time ranges. DATCM provides for accurate, granular, and time-specific convection and turbulence forecasts.","In some embodiments, DATCM objectively analyzes numerical forecast data based on, for example, a conditionally unstable environmental lapse rate, sufficient heat and moisture for a parcel to have a level of free convection (LFC), and a process to lift that parcel to its LFC. DATCM determines weightings and\/or balances each factor and combines them to determine the appropriate level for the environment and for thunderstorm generation prediction. For example, vertical velocities that may lift parcels are typically small in numerical models, and rather than merely inferring higher speeds, DATCM may inflate velocities to values observed in real storm environments. If a parcel at any grid point reaches its LFC, then DATCM continues to track the parcel's vertical velocity as it rises buoyantly.","Icing determination may rely on sensors located on an aircraft to determine when icing has occurred. This method fails to give advance warning to aircraft personnel to potential icing hazards and may not give sufficient notice for course correction to improve icing conditions. In some scenarios, an aircraft advancing into icing conditions may lose altitude and\/or be forced to terminate a specific flight plan without adequate notification of impending icing conditions. Icing forecasts may rely on weather conditions alone to determine if icing may occur and may apply only a generalized aircraft type to forecasting methods, an example of which might be that a small aircraft may experience more significant icing than a larger aircraft or require a greater power increase in icing conditions. However, airfoils, generally defined as curved surface structures that provide aircraft with positive lift to drag ratios, under identical weather conditions may ice differently, without respective to other aspects of aircraft construction and\/or size . In one example, a medium size propeller plane (e.g., see  in ) may form ice encasing the endpoint of its airfoil requiring a PPI of 0.3548. In this example under duplicate weather conditions, a large passenger aircraft (e.g.,  in ) may experience only slight icing of its airfoil, requiring a much smaller PPI of 0.0051. Lastly, in this example, under these replicated weather conditions, a small private aircraft (e.g.,  in ) may experience larger ice formation on its airfoils than the passenger aircraft and require a PPI of 0.0880, which is greater than that of the passenger aircraft, but less than that of the medium-sized propeller aircraft. By way of example, the terms \u201csmall\u201d, \u201cmedium\u201d, and \u201clarge\u201d have been employed to describe diverse aircraft generalized in . The AIP component of the DATCM, however, may be indeterminate of aircraft size, purpose, and\/or the like. In this embodiment, the DATCM uses airfoil type to determine how, where, under what conditions, and\/or the like of icing occurrence. In some embodiments, the DATCM may associate aircraft with their known airfoil types. In some embodiments, the DATCM may maintain information exclusive to airfoils. In some embodiments, the AIP may use aircraft type reciprocally with airfoil type.","In some embodiments of the disclosure, e.g., as depicted in , the DATCM  may maintain a data repository  of aircraft PPI. In some embodiments, the data repository may be organized by aircraft type. In some embodiments, the data repository may be organized by airfoil type. In some embodiments, data tables of aircraft and airfoil types may be linked by information keys, associating aircraft and airfoil types. In other embodiments, the aircraft and\/or airfoil parameters for use by the DATCM may be stored with respect to a PPI module, such as that disclosed with respect to  (e.g., PPI Component ; DATCM data store , Weather , Aircraft , Airfoil ; and\/or the like);  (e.g., an example PPI hardware module); and\/or the like. The PPI component and\/or data repository may be internally searchable to the DATCM by a database query language and\/or platform. In some embodiments, the DATCM may allow external sources to query the data repository. In this embodiment, aircraft types are independently input  to the PPI data repository, which is maintained internally to the DATCM. Weather data and\/or information obtained from sources such as the Global Forecasting System (GFS) and Rapid Refresh (RAP) may be made available to the DATCM through satellite transmission , weather station input , and\/or the like. In some embodiments, the DATCM may reduce weather data to determinate icing factors. In some embodiments, the DATCM may request specific numerical weather input that is icing condition related. In some embodiments of the DATCM, weather input is continuous and\/or updated at systematic intervals. In the example of , airline operations  may request both predictive and (near) real-time icing data  from the DATCM. In this example, the operational request contains the aircraft type(s) for which icing conditions should be predicted. In some embodiments, the DATCM may contain user profile information under which a user, having created a profile with the DATCM, may provide identifying information other than aircraft type. In some embodiments, the DATCM may store user information in a profile data repository  and access aircraft type(s) and\/or other user information based on identifying input data. The DATCM may then submit operational data, such as airfoil type and location, localized and real-time weather data, such as temperature, cloud liquid water, and median droplet size, and\/or the like  to the PPI data repository  which may then return PPI(s)  needed for requested aircraft and\/or conditions. The DATCM may return  this output to the airline operations as requested. In one example, commercial and\/or private airline services  may request predictive and\/or (near) real-time localized icing information. In some embodiments, this request may contain aircraft type and other user information. In some embodiments, this request may contain identifying information to access user profile data stored in a DATCM profile data repository. The DATCM may submit the relevant operational and weather data to the PPI data repository and receive PPI(s) as described, returning output to the requestor . In some embodiments, in-house and\/or third party flight planning tools  may request  predictive icing conditions over a region for one or more aircraft types. In some embodiments, the flight planning tools may have and\/or share user profile information of a profile data repository with the AIP in making this request. In some embodiments, the DATCM may return a PPI grid overlay for the requested region . In some embodiments, the DATCM may return a flight path over PPI grid overlay for the requested region, according to flight path request parameters, as described in . In some embodiments, the DATCM may return multiple paths and\/or PPI grid overlays for the requested regions. In another example, air traffic controllers  may request predictive localized icing data  for its common regional aircraft from the DATCM. As in other examples, this request may provide all necessary input data singly and\/or with identifying information with which the DATCM may access stored profile information from a profile data repository. The DATCM may submit the necessary inputs and return a regional icing grid overlay  and\/or PPI(s) for all aircraft type which may have been named in the data request or which may be part of an accessed profile. In some embodiments, the DATCM may use request data to maintain and\/or update a profile data repository to assist in future data requests from sources for which a profile has been created. In some embodiments, the DATCM may use request data to create user profile data for sources for which no profile data previously existed.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 6","FIG. 5","FIG. 5","FIG. 5","FIG. 5"],"b":["630","640","650","660","602","605","604","610","606","608","611","613","690","607","609","612","614"]},"In , one embodiment of the DATCM's PPI calculation component is put forth. In this embodiment, an icing request is initiated to the DATCM . The DATCM may request the aircraft type(s) . In some embodiments, the DATCM may use provided identifying user information as part of a user profile maintained by the DATCM to determine aircraft type(s). In this embodiment, the DATCM maintains a PPI data repository, which may be internal or external to the DATCM, of aircraft types and\/or airfoil types which may be maintained in separate tables or repository with information keys linking types. In all subsequent aspects of the diagram, reference aircraft and\/or airfoil may be singular or plural, i.e. the DATCM may be considered to process multiple types in each request or the DATCM may process a single type in a request. The DATCM may query the PPI data repository  to determine if the aircraft type is already known to the system. If the aircraft type is not stored in the PPI , the DATCM may assign an aircraft type  by creating a new or finding an existing matching record in the PPI that conforms to the aircraft specifications. If the aircraft is not associated with a known airfoil type , the DATCM may request that an airfoil type be associated with the aircraft  and request an airfoil identification. If the airfoil type identified is not in system , the DATCM may issue an insufficient data notice  and request the parameters of the airfoil type . If the input parameters of the airfoil match a known airfoil type, the input airfoil is recorded as the existing airfoil type . If the input parameters of the airfoil do not match an existing type, the DATCM may create a new record in the PPI data repository with the input airfoil parameters . If the aircraft type is known and\/or the airfoil type is known, and\/or the DATCM has input new aircraft\/airfoil types in the PPI, the DATCM may request gridpoints and time to calculate icing data . The DATCM may execute a query on its icing component for the requested points and time . The DATCM may then determine, e.g., at , the PPI necessary for input aircraft under the defined conditions, as predicted by the DATCM. The following non-discursive PPI calculation\/determination embodiment, presented substantially in the form of a Fortran code fragment, shows one embodiment of a methodology for such processing:",{"@attributes":{"id":"p-0077","num":"0076"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"C"]},{"entry":[{},"C* Get grid file user input."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003WRITE ( 6, 1002 )"]},{"entry":[{},"\u2003\u2003READ ( 5, 999 ) gdfile"]},{"entry":[{},"\u2003\u2003WRITE ( 6, 1003 )"]},{"entry":[{},"\u2003\u2003READ ( 5, 999 ) gdout"]},{"entry":[{},"\u2003\u2003WRITE ( 6, 1004 )"]},{"entry":[{},"\u2003\u2003READ ( 5, 999 ) fhour"]},{"entry":[{},"\u2003\u2003WRITE ( 6, 1005 )"]},{"entry":[{},"\u2003\u2003READ ( 5, 999 ) acft"]},{"entry":[{},"C"]},{"entry":[{},"C* Fill aircraft performance loss table depending on aircraft type."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003IF ( acft .eq. \u2018be20 \u2019 ) THEN"]},{"entry":[{},"\u2003\u2003\u2003DO m = 1,14"]},{"entry":[{},"\u2003\u2003\u2003\u2003DO n = 1,10"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003apltbl (m,n) = be20(m,n)"]},{"entry":[{},"\u2003\u2003\u2003\u2003END DO"]},{"entry":[{},"\u2003\u2003\u2003END DO"]},{"entry":[{},"\u2003\u2003ELSE"]},{"entry":[{},"\u2003\u2003\u2003DO m = 1,14"]},{"entry":[{},"\u2003\u2003\u2003\u2003DO n = 1,10"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003apltbl (m,n) = be20(m,n)"]},{"entry":[{},"\u2003\u2003\u2003\u2003END DO"]},{"entry":[{},"\u2003\u2003\u2003END DO"]},{"entry":[{},"\u2003\u2003END IF"]},{"entry":[{},"C"]},{"entry":[{},"C* Get grid file user input."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003WRITE ( 6, 1002 )"]},{"entry":[{},"\u2003\u2003READ ( 5, 999 ) gdfile"]},{"entry":[{},"\u2003\u2003WRITE ( 6, 1003 )"]},{"entry":[{},"\u2003\u2003READ ( 5, 999 ) gdout"]},{"entry":[{},"\u2003\u2003WRITE ( 6, 1004 )"]},{"entry":[{},"\u2003\u2003READ ( 5, 999 ) fhour"]},{"entry":[{},"\u2003\u2003WRITE ( 6, 1005 )"]},{"entry":[{},"C"]},{"entry":[{},"C* Find levels."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003CALL DG_GLEV ( 1, time, ivcord, LLMXLV,"]},{"entry":[{},"\u2003\u2003\u2003+ iflev, nlev, iret )"]},{"entry":[{},"\u2003\u2003DO j = 1, nlev"]},{"entry":[{},"\u2003\u2003\u2003rlevel (j) = FLOAT ( iflev (1,j) )"]},{"entry":[{},"\u2003\u2003END DO"]},{"entry":[{},"\u2003\u2003CALL LV_SORT ( ivcord, nlev, rlevel, iret )"]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003DO j = 1, nlev"]},{"entry":[{},"\u2003\u2003\u2003CALL ST_INCH ( INT(rlevel(j)), glevel, iret )"]},{"entry":[{},"C"]},{"entry":[{},"C* Read icing parameter grids."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003gvcord = \u2018HGHT\u2019"]},{"entry":[{},"\u2003\u2003gfunc = \u2018TMPC\u2019"]},{"entry":[{},"\u2003\u2003CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, t,"]},{"entry":[{},"\u2003\u2003\u2003+ igx, igy, time, level, ivcord, parm, iret )"]},{"entry":[{},"\u2003\u2003gfunc = \u2018CWTR\u2019"]},{"entry":[{},"\u2003\u2003CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, cwtr,"]},{"entry":[{},"\u2003\u2003\u2003+ igx, igy, time, level, ivcord, parm, iret )"]},{"entry":[{},"\u2003\u2003gfunc = \u2018MVD\u2019"]},{"entry":[{},"\u2003\u2003CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, mvd,"]},{"entry":[{},"\u2003\u2003\u2003+ igx, igy, time, level, ivcord, parm, iret )"]},{"entry":[{},"\u2003\u2003\u2003\u2002maxpts = igx*igy"]},{"entry":[{},"C"]},{"entry":[{},"C* Compute aircraft performance loss."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003DO i = 1, maxpts"]},{"entry":[{},"\u2003\u2003\u2003IF ( t(i) .eq. RMISSD .or. cwtr(i) .eq. RMISSD ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003apl(i) = RMISSD"]},{"entry":[{},"\u2003\u2003\u2003\u2002ELSE IF ( (t(i) .ge. 0.0) .or. (t(i) .le. \u221240.0) .or."]},{"entry":[{},"\u2003\u2003\u2003\u2003+ (cwtr(i) .le. 0.0) ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003apl(i) = 0.0"]},{"entry":[{},"\u2003\u2003\u2003\u2002ELSE"]},{"entry":[{},"C"]},{"entry":[{},"C* Bi-linearly interpolate aircraft icing values."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003\u2003\u2003IF ( cwtr(i) .le. .001 ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003rcol = cwtr(i)\/.0001"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003icol = rcol"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003c = rcol \u2212 FLOAT(icol)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003oc = 1. \u2212 c"]},{"entry":[{},"\u2003\u2003\u2003\u2003ELSE IF ( cwtr(i) .le. .002 ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003rcol = 10. + (cwtr(i)\u2212 .001)\/.00025"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003icol = rcol"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003c = rcol \u2212 FLOAT(icol)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003oc = 1.0 \u2212 c"]},{"entry":[{},"\u2003\u2003\u2003\u2003ELSE"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003icol = 14"]},{"entry":[{},"\u2003\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003\u2003\u2003IF ( t(i) .gt. \u22122.0 ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003r = \u2212t(i)\/2.0"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003apl(i) = apltbl(1,icol)*r*oc + apltbl(1,icol+1)*r*c"]},{"entry":[{},"\u2003\u2003\u2003\u2003ELSE IF ( t(i) .gt. \u22124.0 ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003irow = 1"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003r = (\u2212t(i) \u2212 2.0)\/2.0"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003or = 1. \u2212 r"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003IF ( icol .eq. 14 ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003apl(i) = apltbl(1,14)*or + apltbl(2,14)*r"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003ELSE"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003apl(i) = apltbl(irow,icol)*oc*or"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003+ + apltbl(irow,icol+1)*c*or"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003+ + apltbl(irow+1,icol)*oc*r"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003+ + apltbl(irow+1,icol+1)*c*r"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003\u2003\u2003ELSE"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003rrow = (\u2212t(i)\/4.0) + 1.0"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003irow = rrow"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003r = rrow \u2212 FLOAT(irow)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003or = 1.0 \u2212 r"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003IF ( icol .eq. 14 ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003apl(i) = apltbl(irow,14)*or + apltbl(irow+1,14)*r"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003ELSE"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003apl(i) = apltbl(irow,icol)*oc*or"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003+ + apltbl(irow,icol+1)*c*or"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003+ + apltbl(irow+1,icol)*oc*r"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003+ + apltbl(irow+1,icol+1)*c*r"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003END DO"]},{"entry":[{},"C"]},{"entry":[{},"C* Output PPI"]},{"entry":[{},"C"]},{"entry":[{},"\u2002rm = \u2018apl\u2019"]},{"entry":[{},"\u2002CALL DG_NWDT ( apl, time, ifl, ivcord, parm,ighdr,"]},{"entry":[{},"\u2002+ gpack, .true., iret )"]},{"entry":[{},"\u2002IF ( iret .eq. 0 ) write (6,*) time(1), parm, \u2018 at \u2019,"]},{"entry":[{},"\u2002+ ifl(1), \u2018 grid write successful\u2019"]},{"entry":[{},"\u2002END DO"]},{"entry":[{},"CALL DG_NTIM ( .false., .false., time, nxttm, ier )"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0078","num":"0077"},"figref":["FIG. 8","FIG. 7","FIG. 7"],"b":["801","802","803","805","806","807","808","809"]},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 9","b":["901","602","903","904"]},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 9A","b":["905","906","907","908","909","911","912","913","914","915"]},"In some embodiments of the disclosure, this initial input component may then be followed by DATCM PPI calculation  of the generated geospatial grid region, some examples of which have been described in . The DATCM may create a PPI overlay to the generated grid region  and may request additional information about the desired parameters of the flight path through this grid region . In some embodiments of the disclosure, these parameters may include schedule-based path-finding (shortest path immediacy), schedule-based but with circumvention of acute icing (shortest path avoiding high hazard icing areas), discursive icing circumvention (navigating out of icing areas), and\/or any combination of or intermediate stage to these parameters . The DATCM may then use available input as described in the input component to determine all flight path creation parameters . The DATCM may then create a flight path over the PPI grid region , considering flight path creation parameters . The DATCM may then provide the user the proposed flight path as a terminal overlay, standard or high definition map overlay and\/or the like , as is applicable to the flight planning tool. If the flight path is satisfactory , the user may then exit the flight path planning component of the DATCM as an incorporated flight planning tool option. In some embodiments of the disclosure, the DATCM may allow the user to export the determined flight path to other media, save the flight path to the user profile, share the flight path with additional users, and\/or the like. In some embodiments of the disclosure, if the proposed flight path is not satisfactory , the DATCM may allow the user to modify flight path creation parameters . In some embodiments of the disclosure, the user may re-enter a flight path creation component as specified earlier. In some embodiments of the disclosure, users may be allowed to visually manipulate flight path options using the proposed flight path PPI grid overlay. In some embodiments of the disclosure, the user may be able to reenter flight path creation, visually manipulate the proposed flight path and\/or combine these methods in any intermediate path modification.",{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 11","FIG. 10"],"b":"801"},{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 12","FIG. 10"],"b":"901"},{"@attributes":{"id":"p-0085","num":"0084"},"figref":["FIG. 13","FIGS. 10-12"],"b":"1301"},{"@attributes":{"id":"p-0086","num":"0085"},"figref":["FIG. 14","FIG. 13","FIGS. 10-12"],"b":"1401"},"In some embodiments, the DATCM server may issue PHP\/SQL commands to query a database table (such as , Profile ) for profile data. An example profile data query, substantially in the form of PHP\/SQL commands, is provided below:",{"@attributes":{"id":"p-0088","num":"0087"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?PHP"]},{"entry":[{},"header(\u2018Content-Type: text\/plain\u2019);"]},{"entry":[{},"\/\/ access database server"]},{"entry":[{},"mysql_connect(\u201c254.93.179.112\u201d,$DBserver,$password);"]},{"entry":[{},"\/\/ select database table to search"]},{"entry":[{},"mysql_select_db(\u201cDATCM_DB.SQL\u201d);"]},{"entry":[{},"\/\/create query"]},{"entry":[{},"$query = \u201cSELECT field1 field2 field3 FROM ProfileTable WHERE"]},{"entry":[{},"user LIKE"]},{"entry":[{},"\u2003\u2003\u2018%\u2019 $prof\u201d;"]},{"entry":[{},"\/\/ perform the search query"]},{"entry":[{},"$result = mysql_query($query);"]},{"entry":[{},"\/\/ close database access"]},{"entry":[{},"mysql_close(\u201cDATCM_DB.SQL\u201d);"]},{"entry":[{},"?>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The DATCM server may store the profile data in a DATCM database. For example, the DATCM server may issue PHP\/SQL commands to store the data to a database table (such as , Profile ). An example profile data store command, substantially in the form of PHP\/SQL commands, is provided below:",{"@attributes":{"id":"p-0090","num":"0089"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?PHP"]},{"entry":[{},"header(\u2018Content-Type: text\/plain\u2019);"]},{"entry":[{},"\/\/ access database server"]},{"entry":[{},"mysql_connect(\u201c254.92.185.103\u201d,$DBserver,$password);"]},{"entry":[{},"\/\/ select database to append"]},{"entry":[{},"mysql_select(\u201cDATCM_DB.SQL\u201d);"]},{"entry":[{},"\/\/ add data to table in database"]},{"entry":[{},"mysql_query(\u201cINSERT INTO ProfileTable"]},{"entry":[{},"\u2003\u2003\u2003\u2003(fieldname1, fieldname2, fieldname3)"]},{"entry":[{},"\u2003\u2003\u2003\u2003VALUES ($fieldvar1, $fieldvar2, $fieldvar3)\u201d);"]},{"entry":[{},"\/\/ close connection to database"]},{"entry":[{},"mysql_close(\u201cDATCM_DB.SQL\u201d);"]},{"entry":[{},"?>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Various embodiments of the DATCM may be used to provide real-time, pre-flight and\/or in-flight icing reporting, planning and response. The integrated, unified icing system provided by the DATCM may be used in flight equipment and\/or ground equipment. The DATCM may provide weather\/aviation decision support (e.g., via graphical displays) and\/or provide alerts\/triggers. Although it is discussed in terms of re-routing in time of increased icing, in some embodiments, the DATCM may identify more efficient paths based on real-time updates where there is decreased icing over a shorter physical distance, and may update a flight plan accordingly. The DATCM identifies 4D areas for flight hazards, and a user may choose or set their profile based on particular hazards (e.g., a passenger airline would have a different hazard\/icing profile than an air freight company, and a large airliner would have a different profile from a small plane or helicopter). Various cost calculations and risk calculations may also be used in determining alerts and\/or flight paths. In some embodiments, real-time feedback may come from plane-mounted instrument sensors and provide updates to predicted icing. Such information may be used to refine mechanisms for icing determination. Although examples were discussed in the context of jet airliners, it is to be understood that the DATCM may be utilized for low-level services, such as helicopters, unmanned aerial vehicles, as well as high speed and\/or military aircraft, and may even have potential ground applications, especially in mountainous terrain. The DATCM may work with air traffic control, particularly in management of routing. In some embodiments, the DATCM may receive input from and render output directly to avionics systems to guide planes.","Many pilots view aircraft icing as one of the most dangerous in-flight hazards. Prior to the DATCM, icing forecasts have been one-size-fits-all. Different aircraft accumulate ice differently even in the same meteorological environment, and thus a generic icing forecast may not be useful to a pilot. The DATCM addresses this situation by providing a universal and objective quantitative metric for aircraft performance loss and applying it to ice accumulation for specific airfoils. In some embodiments, an icing component, module or program, such as NASA LEWICE, may be used to generate the accumulations and a computational fluid dynamics (CFD) component, module or program to analyze the resulting performance losses, and the DATCM generates aircraft-specific icing forecasts.","In some embodiments, ice accumulation on aircraft surfaces may depend on many aerodynamic (e.g., body shape, body size, angle attack, exposure time, and flight speed) and meteorological variables (e.g., air temperature, liquid water content (LWC), and median volume droplet (MVD) size). In some embodiments, the DATCM, utilizing one or more various thermodynamic analysis (TdA) components, modules, and\/or programs (e.g., LEWICE 3.2.2 software) may evaluate the thermodynamics of supercooled droplets as they impinge on a body given aerodynamic, flight, and atmospheric inputs and compute the resulting ice shape(s). Using computation fluid dynamics (CFD) component(s), the DATCM may analyze aerodynamic performance changes. In some embodiments, a CFD component may solve equations of motion for the resulting airflow. In some embodiments, the Percent Power Increase (PPI) metric may be determined and\/or computed from CFD results, providing an elegant way to quantify the post-icing performance change. For additional detail, see McCann, D. W. and P. R. Kennedy, 2000: Percent power increase. Proc. 9Conf. on Aviation, Range, and Aerospace Meteorology, Amer. Meteor. Soc., Boston Mass., 266-269, the entirety of which is hereby incorporated by reference.","For example, in some implementations, lift and drag are functions of the aircraft's speed (V)",{"@attributes":{"id":"p-0095","num":"0094"},"maths":[{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"Lift","mo":"=","mrow":{"msub":{"mi":["C","L"]},"mo":["\u2062","\u2062"],"mi":"A","mfrac":{"mrow":{"mi":"\u03c1","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mi":"V","mn":"2"}},"mn":"2"}}}}},{"@attributes":{"id":"MATH-US-00001-2","num":"00001.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"Drag","mo":"=","mrow":{"msub":{"mi":["C","D"]},"mo":["\u2062","\u2062"],"mi":"A","mfrac":{"mrow":{"mi":"\u03c1","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mi":"V","mn":"2"}},"mn":"2"}}}}}]},"where \u03c1 is the air density, A is the aircraft component's cross sectional area, and Cand Care coefficients of lift and drag respectively. In this example, in order to maintain speed and altitude, the new thrust (power) is",{"@attributes":{"id":"p-0097","num":"0096"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["Thrust","iced"]},"mo":"=","mrow":{"msub":{"mi":["Thrust","clean"]},"mo":["\u2062","\u2062"],"mfrac":[{"msub":[{"mi":"C","mrow":{"mi":["L","clean"],"mo":":"}},{"mi":"C","mrow":{"mi":["L","iced"],"mo":":"}}]},{"msub":[{"mi":"C","mrow":{"mi":["D","iced"],"mo":":"}},{"mi":"C","mrow":{"mi":["D","clean"],"mo":":"}}]}]}}}}},"where the subscripts clean and iced indicate conditions before and after ice accumulation. Thus",{"@attributes":{"id":"p-0099","num":"0098"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":["PPI",".01"],"mo":"\u00d7"},{"mrow":[{"mfrac":{"msub":[{"mi":["Thrust","iced"]},{"mi":["Thrust","clean"]}]},"mo":"-","mn":"1"},{"mrow":{"mfrac":[{"msub":[{"mi":"C","mrow":{"mi":["L","clean"],"mo":":"}},{"mi":"C","mrow":{"mi":["L","iced"],"mo":":"}}]},{"msub":[{"mi":"C","mrow":{"mi":["D","iced"],"mo":":"}},{"mi":"C","mrow":{"mi":["D","clean"],"mo":":"}}]}],"mo":"\u2062"},"mo":"-","mn":"1"}],"mo":"="}],"mo":"="}}}},"In some implementations of the DATCM, this elegant relationship may be utilized to determine performance loss with ice accumulation on any airfoil. For example,  show ice accumulation and resulting PPI values on a Beechcraft King Air airfoil and a Boeing 737 airfoil, respectively.  shows ice (red) accumulation, e.g., , on a Beechcraft King Air airfoil using the inputs, e.g., , in the figure. The resulting performance change is also shown, e.g., .  shows ice (red) accumulation, e.g., , on a Boeing 737 airfoil using the inputs, e.g., , in the figure. The resulting performance change is also shown, e.g., .","In some embodiments of the DATCM, aircraft-specific icing forecasting may be a two element process. The DATCM creates numerous ice accumulation simulations modifying the meteorological variables for each aerodynamic configuration. The combinations of air temperature, LWC, and MVD are may be limited by choosing representative values for each variable. For example, supercooled liquid water exists only in a finite range of air temperatures (0 C to \u221240 C). With temperatures less than about \u221220 C ice shapes are similar because supercooled drops freeze quickly. Similarly, cloud liquid water amounts rarely exceed 2 gm. While most icing occurs with small droplet sizes, supercooled large drops pose a significant icing threat, so the DATCM may test ice shapes over a fairly large droplet size range. Properly implemented parameters provide significant ranges of variables to analyze. The DATCM may select\/receive representative values to ensure sufficient granularity yet limit the time necessary to create a PPI profile or determine a PPI value given a particular input set. A TdA component may create an ice shape for the chosen meteorological and aerodynamic configuration. In some implementations, a CFD component may analyze the resulting ice shape for the airfoil's performance. Various implementations may do hundreds or thousands of iterations to converge on a suitable solution. The DATCM may be configured to create PPI profiles for as many aircraft as desired, or even for every available aircraft. Initially, PPI profiles may be generated for popular aircraft, both in terms of ownership and in terms of airfoil shapes and sizes used by manufacturers.","In some embodiments, aircraft-specific icing forecasts can be implemented with any forecast of air temperature, LWC, and MVD. Forecast air temperature may be determined or computed by numerical weather forecast (NWF) components or mechanisms. For example, a VVICE module may be utilized that post-processes any numerical mechanism for the LWC and MVD. The VVICE module parameterizes vertical motions then uses straight-forward cloud physics relationships to create the cloud parameters (additional detail may be found in McCann, D. W., 2006: Parameterizing convective vertical motions for aircraft icing forecasts. Proc. 12Conf. on Aviation, Range, and Aerospace Meteorology, Amer. Meteor. Soc., Boston Mass., the entirety of which is hereby incorporated by reference).","In some embodiments, to produce an aircraft-specific forecast, the DATCM makes a three-dimensional lookup table for every aircraft type for which a PPI profile was created. A user may specify an aircraft type, and the DATCM interpolates the appropriate PPI profile table at every grid point, horizontally, vertically, and in time. If the selected aircraft type is not in the DATCM database, the DATCM may be configured with relatively more flexible tables based on aircraft size. Thus, the DATCM can create horizontal maps at the user's requested altitude, cross sections along the user's requested flight path, and\/or other useful displays.","By providing aircraft-specific icing forecasts, the DATCM may remove much of the ambiguity inherent in previous one-size-fits-all icing forecasts. In particular, there may be a unique situation in which a particular aircraft may be more vulnerable to icing than a traditional forecast indicates. By providing icing hazards in quantitative terms, the DATCM forecasts give more detail than previously available and pilots may utilize to the Percent Power Increase metric directly since increasing power is one of the ways a pilot can combat the effects of icing.","Moreover, by being aircraft-specific, the DATCM forecasts may create goodwill with users. Knowing the icing forecasts are tailored to their aircraft type, users can better utilize and rely on forecasts as meaningful to them. This also creates less doubt about how to interpret the forecasts.",{"@attributes":{"id":"p-0106","num":"0105"},"figref":["FIG. 17","FIG. 7","FIG. 8","FIGS. 18A-F"],"b":["1701","1702"]},"In one configuration, airplane  may provide an electrical signal to airfoilDesign_IN terminal  representing the aircraft or airfoil design on which the PPI value determination is to be made. For example, if the current aircraft in which the PPI component is installed is a Boeing 737, the aircraft flight control software may signal a value of \u201c101\u201d on airfoilDesign_IN, that value representing the current aircraft type. The value \u201c101\u201d may be expressed as three electrical voltages (\u201chigh-low-high\u201d) across three airfoilDesign_IN hardware input pins. By utilizing three input pins, the airfoilDesign_IN input may be used to represent at least 7 different aircraft configurations (e.g., \u201c000\u201d, \u201c001\u201d, \u201c010\u201d, \u201c100\u201d, \u201c110\u201d, \u201c101\u201d, \u201c111\u201d). By way of further examples, in one embodiment \u201c110\u201d may represent a Beechcraft Super King 200 aircraft, \u201c111\u201d may represent a default medium-body airframe, etc. In alternative embodiments, additional hardware input pins or other serial communication input may be utilized to allow the PPI component to determine instantaneous PPI values for a limitless number of aircraft and\/or airfoil designs.","In one embodiment, aircraft  may provide the PPI component  with input, using currentCWTR_IN terminal , representing the current atmospheric water droplet density. The value provided may be electrical signals representing an integer value. For example, if the aircraft water density sensor determines that the current water density about the aircraft is 0.002, the aircraft may signal the integer value of \u201c2\u201d (representing 0.002*1000) to currentCWTR_IN. In one embodiment, the value \u201c2\u201d may be represented as a 16-bit value (e.g., \u201c0000 0000 0000 0010\u201d) signaled as 16 high-or-low voltages across an equivalent number of hardware input pins. Additionally, airplane  may similarly signal a current ambient temperature value for the temperature about the plane to PPI input currentTemperature_IN terminal .","As disclosed herein, the PPI component configuration discussed with respect to  may be utilized to determine an instantaneous PPI value for a current airframe and ambient condition inputs. However, other PPI component configurations may be utilized in association with the other embodiments of the DATCM discussed herein. For example, if the PPI component is configured to provide a PPI value for a point in space an aircraft will encounter after 10-minutes of further flight time (e.g., a future point\/time), then the values provided to currentCWTR_IN and currentTemperature_IN may be estimated values for that time\/location. In further embodiments, the discrete PPI value determinations by the PPI component may be utilized to perform an optimized flight-path determination. For example, the PPI component may be repeatedly utilized to determine PPI values for all points in a 3-D space. In an alternate embodiment, the PPI component may have multiple input\/output terminals and\/or accept an array of inputs and provide an array of outputs on one or more input\/output terminals. As such, the PPI component embodiment described herein may be utilized with the other components of the DATCM to perform any or all of the embodiments of the DATCM described herein.","Additionally, it should be noted that the signal inputs\/outputs disclosed herein are representative of example PPI component inputs\/outputs. For example, a PPI input for aircraft type may be represented as a single aircraft designator, an airfoil designator, an aircraft airfoil configuration (e.g., a representation of airfoil geometry such as, for example, a height and angle of curvature), a default designator (e.g., \u201cmedium aircraft\u201d), and\/or the like. Further, the percent-power-increase output value determination may be made by the PPI component on the basis of inputs other than those illustrated herein without departing from the disclosure. For example, the PPI component may utilize the instantaneous or expected aircraft altitude in lieu of temperature, may utilize a cloud density forecast in lieu of water droplet density, and\/or the like.",{"@attributes":{"id":"p-0111","num":"0110"},"figref":"FIG. 18A","b":["1801","1801","1801","1801"],"i":["a","b","c","g. "]},"In one embodiment, the atmospheric water droplet density is provided to a ppi_ivertical PPI sub-component , which is described herein with respect to  and the temperature value is provided to a ppi_ihorizontal PPI sub-component , which is described herein with respect to . In one embodiment, the output from both the ppi_ivertical and ppi_ihorizontal PPI sub-components as well as one or more of the original input signals are provided to a ppi_apl PPI sub-component , which is described herein with respect to . In one embodiment, the ppi_apl PPI sub-component may provide a calculated PPI value to the PPI component, which may be output on ppi_OUT terminal ","In one embodiment, a PPI hardware component, represented substantially in the form of VHDL hardware description statements suitable for configuring an FPGA to operate as an integrated hardware logic circuit performing the features described herein, is:",{"@attributes":{"id":"p-0114","num":"0113"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"library IEEE;"},{"entry":"use IEEE.STD_LOGIC_1164.ALL;"},{"entry":"use IEEE.NUMERIC_STD.ALL;"},{"entry":"entity PPI_Component is"},{"entry":"\u2003\u2003Port ( airfoilDesign_IN : in STD_LOGIC_VECTOR(2 downto 0);"},{"entry":"currentCWTR_IN : in STD_LOGIC_VECTOR(15"},{"entry":"\u2003\u2003\u2003\u2003downto 0);"},{"entry":"\u2003\u2003\u2003\u2003currentTemperature_IN : in STD_LOGIC_VECTOR(15"},{"entry":"\u2003\u2003\u2003\u2003downto 0);"},{"entry":"\u2003\u2003\u2003\u2003ppi_OUT : out STD_LOGIC_VECTOR(15 downto 0)"},{"entry":"\u2003\u2003\u2003\u2003);"},{"entry":"end PPI_Component;"},{"entry":"architecture PPI of PPI_Component is"},{"entry":"--sub-component to determine vertical (icol) offset"},{"entry":"--assumes cwtr values are multiplied by 1,000 (so .001 is input as \u201c1\u201d)"},{"entry":"component ppi_ivertical is"},{"entry":"\u2003\u2003port(cwtr : in signed;"},{"entry":"\u2003\u2003\u2003\u2003ivert : inout integer;"},{"entry":"\u2003\u2003\u2003\u2003c : inout signed;"},{"entry":"\u2003\u2003\u2003\u2003oc : inout signed"},{"entry":"\u2003\u2003);"},{"entry":"end component;"},{"entry":"signal ivert : integer;"},{"entry":"signal c, oc : signed(15 downto 0);"},{"entry":"--sub-component to determine horizontal (irow) offset"},{"entry":"--assumes temp is inverse of value input"},{"entry":"--(so \u221232deg is input as \u201c32\u201d)"},{"entry":"component ppi_ihorizontal is"},{"entry":"\u2003\u2003port(temperature : in signed;"},{"entry":"\u2003\u2003\u2003\u2003ihoriz : inout integer;"},{"entry":"\u2003\u2003\u2003\u2003r : inout signed;"},{"entry":"\u2003\u2003\u2003\u2003orv : inout signed"},{"entry":"\u2003\u2003);"},{"entry":"end component;"},{"entry":"signal ihoriz : integer;"},{"entry":"signal r, orv : signed(15 downto 0);"},{"entry":"--sub-component to determine customized airframe PPI"},{"entry":"component ppi_apl is"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003port(","temperature : in signed;"]},{"entry":[{},"airfoilDesign : in signed;"]},{"entry":[{},"ihoriz : integer;"]},{"entry":[{},"ivert : integer;"]},{"entry":[{},"c : in signed;"]},{"entry":[{},"oc : in signed;"]},{"entry":[{},"r : in signed;"]},{"entry":[{},"orv : in signed;"]},{"entry":[{},"aplv : inout signed"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003);"},{"entry":"end component;"},{"entry":"signal aplv : signed(15 downto 0);"},{"entry":"begin"},{"entry":"\u2003--sub-components"},{"entry":"\u2003CPNT_ppi_ivertical : ppi_ivertical port"},{"entry":"\u2003\u2003\u2003map (signed(currentCWTR_IN),ivert,c,oc);"},{"entry":"\u2003CPNT_ppi_ihorizontal : ppi_ihorizontal port"},{"entry":"\u2003\u2003\u2003map (signed(currentTemperature_IN),ihoriz,r,orv);"},{"entry":"\u2003CPNT_ppi_apl : ppi_apl port"},{"entry":"\u2003\u2003\u2003map (signed(currentTemperature_IN),"},{"entry":"\u2003\u2003\u2003signed(airfoilDesign_IN),ihoriz,ivert,c,oc,r,orv,aplv);"},{"entry":"\u2003--output PPI"},{"entry":"\u2003process(airfoilDesign_IN)"},{"entry":"\u2003begin"},{"entry":"\u2003\u2003ppi_OUT <= std_logic_vector(aplv);"},{"entry":"\u2003\u2003end process;"},{"entry":"end PPI;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0115","num":"0114"},"figref":"FIG. 18B","b":["1802","1802","1802","1802"],"i":["b ","a ","c","d"]},{"@attributes":{"id":"p-0116","num":"0115"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"library IEEE;"},{"entry":"use IEEE.STD_LOGIC_1164.ALL;"},{"entry":"use IEEE.NUMERIC_STD.ALL;"},{"entry":"entity ppi_ihorizontal is"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003Port (","temperature : in signed;"]},{"entry":[{},"ihoriz : inout integer;"]},{"entry":[{},"r : inout signed;"]},{"entry":[{},"orv : inout signed"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\u2003);"},{"entry":"end ppi_ihorizontal;"},{"entry":"architecture Behavioral of ppi_ihorizontal is"},{"entry":"begin"},{"entry":"\u2003process(temperature)"},{"entry":"\u2003begin"},{"entry":"\u2003\u2003if (temperature > to_signed(2,16)) then"},{"entry":"\u2003\u2003\u2003ihoriz <= 1;"},{"entry":"\u2003\u2003\u2003r <= resize(temperature \/ to_signed(2,16),16);"},{"entry":"\u2003\u2003else"},{"entry":"\u2003\u2003\u2003if (temperature > to_signed(4,16)) then"},{"entry":"\u2003\u2003\u2003\u2003ihoriz <= 1;"},{"entry":"\u2003\u2003\u2003\u2003r <= resize((temperature \u2212"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003to_signed(2,16)) \/ to_signed(2,16),16);"},{"entry":"\u2003\u2003\u2003\u2003orv <= to_signed(1,16) \u2212 r;"},{"entry":"\u2003\u2003\u2003else"},{"entry":"\u2003\u2003\u2003\u2003ihoriz <= to_integer((signed(temperature) \/ to_signed(4,16)));"},{"entry":"\u2003\u2003\u2003\u2003r <= to_signed(0,16);"},{"entry":"\u2003\u2003\u2003\u2003orv <= to_signed(1,16);"},{"entry":"\u2003\u2003\u2003end if;"},{"entry":"\u2003\u2003end if;"},{"entry":"\u2003end process;"},{"entry":"end Behavioral;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0117","num":"0116"},"figref":"FIG. 18C","b":["1803","1803","1803","1803"],"i":["a ","d ","b","c"]},{"@attributes":{"id":"p-0118","num":"0117"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"library IEEE;"]},{"entry":[{},"use IEEE.STD_LOGIC_1164.ALL;"]},{"entry":[{},"use IEEE.NUMERIC_STD.ALL;"]},{"entry":[{},"entity ppi_ivertical is"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Port (","cwtr : in signed;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ivert : inout integer;"]},{"entry":[{},"c : inout signed;"]},{"entry":[{},"oc : inout signed"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003\u2002);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"end ppi_ivertical;"]},{"entry":[{},"architecture Behavioral of ppi_ivertical is"]},{"entry":[{},"signal rcol : signed(15 downto 0);"]},{"entry":[{},"begin"]},{"entry":[{},"\u2003process(cwtr)"]},{"entry":[{},"\u2003begin"]},{"entry":[{},"\u2003\u2003if (cwtr <= to_signed(1,16)) then"]},{"entry":[{},"\u2003\u2003\u2003rcol <= resize(cwtr * to_signed(10,16),16);"]},{"entry":[{},"\u2003\u2003\u2003ivert <= to_integer(rcol);"]},{"entry":[{},"\u2003\u2003\u2003c <= rcol \u2212 ivert;"]},{"entry":[{},"\u2003\u2003\u2003oc <= to_signed(1,16) \u2212 c;"]},{"entry":[{},"\u2003\u2003else"]},{"entry":[{},"\u2003\u2003\u2003if (cwtr <= to_signed(2,16)) then"]},{"entry":[{},"\u2003\u2003\u2003\u2003rcol <= resize(to_signed(10,16) +"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003((cwtr \u2212 to_signed(1,16)) * to_signed(4,16)),16);"]},{"entry":[{},"\u2003\u2003\u2003\u2003ivert <= to_integer(rcol);"]},{"entry":[{},"\u2003\u2003\u2003else"]},{"entry":[{},"\u2003\u2003\u2003\u2003ivert <= 14;"]},{"entry":[{},"\u2003\u2003\u2003end if;"]},{"entry":[{},"\u2003end if;"]},{"entry":[{},"\u2003end process;"]},{"entry":[{},"end Behavioral;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0119","num":"0118"},"figref":["FIG. 18D","FIGS. 18E-F","FIG. 46","FIG. 4","FIG. 5"],"b":["1804","1804","1804","1804","1804"],"i":["a","e","b","c","d"]},{"@attributes":{"id":"p-0120","num":"0119"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"library IEEE;"]},{"entry":[{},"use IEEE.STD_LOGIC_1164.ALL;"]},{"entry":[{},"use IEEE.NUMERIC_STD.ALL;"]},{"entry":[{},"entity ppi_apl is"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Port (","temperature : in signed;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"airfoilDesign : in signed;"]},{"entry":[{},"ihoriz : in integer;"]},{"entry":[{},"ivert : in integer;"]},{"entry":[{},"c : in signed;"]},{"entry":[{},"oc : in signed;"]},{"entry":[{},"r : in signed;"]},{"entry":[{},"orv : in signed;"]},{"entry":[{},"aplv : inout signed"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002\u2003);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"end ppi_apl;"]},{"entry":[{},"architecture Behavioral of ppi_apl is"]},{"entry":[{},"component airFrame_bCKingAir is"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"port(","temperature : in signed;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ihoriz : in integer;"]},{"entry":[{},"ivert : in integer;"]},{"entry":[{},"airFrame_val : inout signed"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},");"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"end component;"]},{"entry":[{},"signal airFrame_bCKingAir_val : signed(15 downto 0);"]},{"entry":[{},"component airFrame_boeing747 is"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"port(","temperature : in signed;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ihoriz : in integer;"]},{"entry":[{},"ivert : in integer;"]},{"entry":[{},"airFrame_val : inout signed"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},");"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"end component;"]},{"entry":[{},"signal airFrame_boeing747_val : signed(15 downto 0);"]},{"entry":[{},"component airFrame_defaultMed is"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"port(","temperature : in signed;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ihoriz : in integer;"]},{"entry":[{},"ivert : in integer;"]},{"entry":[{},"airFrame_val : inout signed"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},");"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"end component;"]},{"entry":[{},"signal airFrame_defaultMed_val : signed(15 downto 0);"]},{"entry":[{},"begin"]},{"entry":[{},"\u2003--airframe customization modules"]},{"entry":[{},"\u2003CPNT_airFrame_bCKingAir : airFrame_bCKingAir port"]},{"entry":[{},"\u2003\u2003\u2003map (temperature,ihoriz,ivert,airFrame_bCKingAir_val);"]},{"entry":[{},"\u2003CPNT_airFrame_boeing747 : airFrame_boeing747 port"]},{"entry":[{},"\u2003\u2003\u2003map (temperature,ihoriz,ivert,airFrame_boeing747_val);"]},{"entry":[{},"\u2003CPNT_airFrame_defaultMed : airFrame_defaultMed port"]},{"entry":[{},"\u2003\u2003\u2003map (temperature,ihoriz,ivert,airFrame_defaultMed_val);"]},{"entry":[{},"\u2003process(ihoriz, ivert, c, oc, r, orv)"]},{"entry":[{},"\u2003begin"]},{"entry":[{},"\u2003\u2003if (airfoilDesign = 1) then"]},{"entry":[{},"\u2003\u2003\u2003aplv <= resize(airFrame_bCKingAir_val * r,16);"]},{"entry":[{},"\u2003\u2003else"]},{"entry":[{},"\u2003\u2003\u2003if (airfoilDesign = 2) then"]},{"entry":[{},"\u2003\u2003\u2003\u2003aplv <= resize(airFrame_boeing747_val * orv,16);"]},{"entry":[{},"\u2003\u2003\u2003else"]},{"entry":[{},"\u2003\u2003\u2003\u2003aplv <= resize(airFrame_defaultMed_val,16);"]},{"entry":[{},"\u2003\u2003\u2003end if;"]},{"entry":[{},"\u2003\u2003end if;"]},{"entry":[{},"\u2003end process;"]},{"entry":[{},"end Behavioral;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0121","num":"0120"},"figref":"FIG. 18E","b":["1805","1805","1805","1805","1805"],"i":["a","b","c ","e ","d "]},{"@attributes":{"id":"p-0122","num":"0121"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"library IEEE;"]},{"entry":[{},"use IEEE.STD_LOGIC_1164.ALL;"]},{"entry":[{},"use IEEE.NUMERIC_STD.ALL;"]},{"entry":[{},"entity airFrame_bCKingAir is"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Port (","temperature : in signed;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ihoriz : in integer;"]},{"entry":[{},"ivert : in integer;"]},{"entry":[{},"airFrame_val : inout signed"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003\u2002);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"end airFrame_bCKingAir;"]},{"entry":[{},"architecture Behavioral of airFrame_bCKingAir is"]},{"entry":[{},"--airfoil customization params"]},{"entry":[{},"type airfoilDesignParams is array (1 to 10, 1 to 7) of integer;"]},{"entry":[{},"shared variable airfoil_p1: airfoilDesignParams :=("]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"(0,0,0,0,0,0,0),"]},{"entry":[{},"(62,110,160,164,172,176,184),"]},{"entry":[{},"(31,62,157,228,369,440,448),"]},{"entry":[{},"(21,42,83,117,289,376,548),"]},{"entry":[{},"(16,31,62,78,156,250,438),"]},{"entry":[{},"(12,25,50,62,88,100,297),"]},{"entry":[{},"(10,21,42,52,73,83,141),"]},{"entry":[{},"(8,18,36,45,62,71,89),"]},{"entry":[{},"(8,16,31,39,55,62,78),"]},{"entry":[{},"(7,14,28,35,49,56,69)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},");"]},{"entry":[{},"shared variable airfoil_p2: airfoilDesignParams :=("]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"(0,0,0,0,0,0,0),"]},{"entry":[{},"(188,196,200,208,212,220,224),"]},{"entry":[{},"(452,460,464,472,476,484,488),"]},{"entry":[{},"(634,724,728,736,740,748,752),"]},{"entry":[{},"(531,719,812,1000,1004,1012,1016),"]},{"entry":[{},"(395,592,690,887,985,1182,1280),"]},{"entry":[{},"(242,445,546,749,851,1053,1154),"]},{"entry":[{},"(98,286,390,597,701,908,1011),"]},{"entry":[{},"(86,121,226,437,542,752,850),"]},{"entry":[{},"(76,90,97,270,377,590,696)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},");"]},{"entry":[{},"signal INT_ihoriz, INT_ivert : integer :=0;"]},{"entry":[{},"begin"]},{"entry":[{},"\u2003process(ihoriz, ivert)"]},{"entry":[{},"\u2003begin"]},{"entry":[{},"\u2003\u2003--determine horiz and vert offset values"]},{"entry":[{},"\u2003\u2003if (temperature > to_signed(2,16)) then"]},{"entry":[{},"\u2003\u2003\u2003INT_ihoriz <= ihoriz;"]},{"entry":[{},"\u2003\u2003\u2003INT_ivert <= ivert + 1;"]},{"entry":[{},"\u2003\u2003else"]},{"entry":[{},"\u2003\u2003\u2003INT_ihoriz <= ihoriz + 1;"]},{"entry":[{},"\u2003\u2003\u2003INT_ivert <= ivert;"]},{"entry":[{},"\u2003\u2003end if;"]},{"entry":[{},"\u2003\u2003--return correct offset value"]},{"entry":[{},"\u2003\u2003if (INT_ivert <= 7) then"]},{"entry":[{},"\u2003\u2003\u2003airFrame_val <= to_signed(airfoil_p1(INT_ihoriz,"]},{"entry":[{},"\u2003\u2003\u2003INT_ivert),16);"]},{"entry":[{},"\u2003\u2003else"]},{"entry":[{},"\u2003\u2003\u2003airFrame_val <= to_signed(airfoil_p2(INT_ihoriz,"]},{"entry":[{},"\u2003\u2003\u2003INT_ivert-7),16);"]},{"entry":[{},"\u2003\u2003end if;"]},{"entry":[{},"\u2003end process;"]},{"entry":[{},"end Behavioral;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0123","num":"0122"},"figref":["FIG. 18F","FIG. 18E","FIG. 18E"],"b":["1806","1806","1806","1806","1806"],"i":["a","b","c","d","e "]},{"@attributes":{"id":"p-0124","num":"0123"},"figref":"FIG. 19A"},"As shown in , the DATCM alerting component receives (and\/or retrieves via response to a database query) current aircraft position  (e.g., flight profile data  from a flight profile database), and may also receive the previously predicted turbulence for that route (or for an anticipated route if the actual flight plan is not provided). The DATCM then determines real-time turbulence for the planned route  and compares the predicted turbulence to the real-time turbulence . If the newly determined real-time turbulence does not deviate notably  from the previously predicted\/anticipated turbulence, then the process cycles, e.g., for a certain period (1 min, 2 min, 5 min, 10 min, etc.) or for some other measure such as location of one or more aircraft, weather events, and\/or the like. If the newly determined real-time turbulence is a notable deviation or significant difference from the previously predicted turbulence , then the turbulence is updated  and the process continues. Note that the threshold difference or deviation may be set by the DATCM or DATCM user\/subscriber, and in some embodiments may be any numerical change, while in other embodiments may be a change or certain magnitude or percentage.","When the turbulence is updated, the DATCM determines if there is a known or determinable turbulence threshold  for the flight\/aircraft. For example, a commercial passenger aircraft that subscribes to the DATCM may have set a particular turbulence threshold in the profile, reflecting that passenger aircraft may wish to avoid significant turbulence for safety and comfort reasons, while a cargo aircraft may have a much higher threshold and be willing to undertake more turbulence to save time and\/or money. The threshold may also be predicted\/determined based on the airframe and\/or airfoil type, the user, the flight plan, fuel resources, alternative routes, etc. For flights\/aircraft that the turbulence threshold either is not known or is not determinable , the DATCM may have a default (i.e., safety) threshold , and if that default threshold is exceeded , may issue an alert or notification  to the aircraft (and\/or ground control).","If the flight turbulence threshold is known  (i.e., the flight has a subscription or is otherwise registered with the DATCM), the DATCM determines whether the turbulence exceeds the specified threshold , and if so, determines if the flight's route can be adjusted or updated  by the DATCM (e.g., using the flight path component discussed in greater detail later with regard to  and ) to find the optimal path based on the desired turbulence profile\/threshold and various flight parameters, such as fuel reserves, destination, aircraft type, etc. If the DATCM is unable or not configured to provide an alternative or adjusted flight plan , an alert or notification  is generated\/issued. If the DATCM can adjust or update the flight's route , the adjusted\/modified route is determined  and the flight plan is adjusted accordingly , and updated . Note that, in some embodiments, an adjusted or modified flight plan (or a selection of plans) may be provided for approval or selection ","The term \u201cturbulence\u201d as a haphazard secondary motion caused by the eddies of a fluid system has often been treated as a singular event in casual connotation, caused by passage through an entropic weather system or by proximity to shifting air flow patterns. This definition is commonly perpetuated by many turbulence forecast platforms that focus on a specific type of turbulence, such as CAT, without accounting for additional turbulence factors, nor how multi-hazards conflagrate into not just a series of turbulence events, but an enhanced system which continues to flux. In , wind , thunderstorms , and gravity waves  (the interaction of media, such as the ocean and the atmosphere caused by energy transfer, on which gravity acts as a restoring force) can all be turbulence contributors to a region of three-dimensional space over a specified time. An aircraft  traveling through this region may experience multiple turbulence hazards . A turbulence forecast display that indicates only CAT with gravity wave interference may display a low hazard area into which an aircraft may be moving. Similarly a weather prediction display may also fail to factor in the additional risk of CAT. In one embodiment of the disclosed DATCM, a CAT calculation component producing color-coded terminal display of turbulence hazard over a specified area (where clear may indicate no turbulence, green may indicate low turbulence hazard, yellow may indicate medium turbulence hazard, and red may indicate high turbulence hazard)  may be integrated mathematically with a mountain wave forecasting component which produces a similar color-coded terminal display , resulting in an integrated display where the resulting hazard matrix  may not be an overlay of the individual turbulence predictions, but an enhanced turbulence forecast where individual areas of low or no hazard turbulence may now indicated high hazard turbulence . In some embodiments, multiple turbulence overlay displays may be available showing individuated turbulence forecasts without enhancement. In some embodiments of the disclosure, only enhanced turbulence forecast displays may be available. In some embodiments of the disclosure, users may be able to switch between individuated turbulence forecasts and enhanced turbulence forecasts.","In some embodiments, the DATCM transforms atmospheric and terrain data, via DATCM components, into comprehensive four-dimensional turbulence displays and interfaces. In one implementation, the DATCM comprises a processor and a memory disposed in communication with the processor and storing processor-issuable instructions to determine a plurality of four-dimensional grid points for a specified temporal geographic space-time area and obtain corresponding terrain and atmospheric data. Then, for each point of the plurality of four-dimensional grid point, the DATCM determines a non-dimensional mountain wave amplitude and mountain top wave drag, an upper level non-dimensional gravity wave amplitude, and a buoyant turbulent kinetic energy. The DATCM may also determine a boundary layer eddy dissipation rate, storm velocity and eddy dissipation rate from updrafts, maximum updraft speed at grid point equilibrium level, storm divergence while the updraft speed is above the equilibrium level and identifying storm top, storm overshoot and storm drag. The DATCM determines Doppler speed, eddy dissipation rate above the storm top, eddy dissipation rate from downdrafts. Then, the DATCM determines the turbulent kinetic energy and\/or the total eddy dissipation rate for each grid point and provides a four-dimensional grid map overlay with comprehensive turbulence data for the specified temporal geographic space-time area.","In some embodiments of the disclosure, the DATCM  may be available to aircraft , air traffic controllers , flight planning tools and software , third party applications  where turbulence feed incorporation is contributing, and the like.  illustrates that in some embodiments of the disclosure, PIREPS and sensor data of aircraft in real-time turbulence conditions  may send data to the DATCM to be incorporated into the DATCM aggregate data analysis. Similarly, in some embodiments of the disclosure, additional\/other sources of input may be weather stations , satellites  and\/or other sources\/sensors, which may provide radar data, lightning data, satellite data, and\/or numerical weather forecast data  to the DATCM. In some embodiments of the DATCM, additional\/other sources of input may be topological data  which may provide terrain characteristic data to the DATCM. In some embodiments of the DATCM, the receipt of this input may occur prior to requests to the DATCM for turbulence forecasting. In some embodiments of the DATCM, the receipt of this input may be ongoing during requests to the DATCM for dynamic turbulence forecasting and\/or nowcasting. In some embodiments of the DATCM, receipts of input may be both before requests to the DATCM for turbulence forecasting and ongoing during forecasting requests and nowcasting. In some embodiments, an aircraft  may request (near) real-time localized turbulence data , an air traffic control system  may request predictive regional turbulence data as an updating feed  and\/or a (near) real-time regional turbulence data request , a flight-planning tool or software may request predictive turbulence within a flight path region or along a flight path course . In some embodiments, the DATCM may direct such requests through a turbulence Integration Mechanism component  where DATCM components such as Airfoil Icing Platform (AIP) component, MWAVE component, INTTURB component, and VVTURB2 component process input into eddy dissipation rate (EDR) values and render them for terminal , standard\/high-definition , and\/or displays of the like. In some embodiments, the Integration Mechanism component  may also include or utilize a VVSTORMSE component, which may be utilized in flight planning, flight following, and\/or the like. In some implementations, a VVSTORMSE component may subsume and\/or replace a VVTURB2 component. In some embodiments, the DATCM may return a real-time\/near real-time turbulence map  terminal display to an aircraft, a predictive and updating regional data feed  to an air traffic controller, a predictive flight path turbulence  display to a flight-planning tool\/software, a turbulence data feed  to a third party application displaying turbulence data, and\/or the like.",{"@attributes":{"id":"p-0131","num":"0130"},"figref":["FIG. 21","FIG. 20","FIG. 20","FIG. 20"],"b":["2104","2120","2121","2108","2140","2120","2121","2106","2140","2102","2103","2104","2110","2110"]},"In , one embodiment of the DATCM's integration component is put forth. Beginning with turbulence data input  as derived from such sources as user application input , weather , terrain , PIREPs\/aircraft sensors , and\/or the like, which may provide the DATCM with four-dimensional grid points (three-dimensional space plus time), temperature, winds, humidity, topography, current turbulent conditions, historical conditions, and\/or the like, the DATCM may first process the input through a mountain wave turbulence calculation component (MWAVE). The system computes the non-dimensional mountain wave amplitude (\u00e2mv)  and computes the mountain top wave drag . The following code fragment shows one embodiment of a methodology for such processing:",{"@attributes":{"id":"p-0133","num":"0132"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"C"]},{"entry":[{},"C* a is the non-dimensional wave amplitude (at mountain top)"]},{"entry":[{},"C"]},{"entry":[{},"\u2003a (i,m,n) = stab0*h(m,n)\/spd0"]},{"entry":[{},"\u2003h0 (m,n) = a(i,m,n)"]},{"entry":[{},"C"]},{"entry":[{},"C* ddrct is the wind and mountain top wind direction difference"]},{"entry":[{},"C"]},{"entry":[{},"\u2003ddrct = ABS(drct-drct0(m,n))"]},{"entry":[{},"\u2003IF ( (ddrct .lt. 90.0) .or. (ddrct .gt. 270.0) ) THEN"]},{"entry":[{},"C"]},{"entry":[{},"C* a above the mountain top is adjusted for stability, wind,"]},{"entry":[{},"C* and density changes."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003a (i,m,n) = stab*h(m,n)\/spd\/COS(ddrct*DTR)*"]},{"entry":[{},"\u2003\u2003+ SQRT(pnu0(m,n)\/(pmodel*stab*spd))"]},{"entry":[{},"\u2003ELSE"]},{"entry":[{},"\u2003\u2003a (i,m,n) = 0.0"]},{"entry":[{},"\u2003END IF"]},{"entry":[{},"C"]},{"entry":[{},"C* maximum a is 2.5"]},{"entry":[{},"C"]},{"entry":[{},"\u2003IF ( a(i,m,n) .gt. 2.5 ) a(i,m,n) = 2.5"]},{"entry":[{},"C"]},{"entry":[{},"C* Find max \u2018a\u2019 below h0max."]},{"entry":[{},"C"]},{"entry":[{},"\u2003IF (ll .lt. nlyrs) THEN"]},{"entry":[{},"\u2003\u2003amax0 = a(ll,m,n) \u2212 (zsdg(ll,m,n)\u2212h0max)\/"]},{"entry":[{},"\u2003\u2003+ (zsdg(ll,m,n)\u2212zsdg(ll+1,m,n))*"]},{"entry":[{},"\u2003\u2003+ (a(ll,m,n)\u2212a(ll+1,m,n))"]},{"entry":[{},"\u2003\u2003lll = ll"]},{"entry":[{},"\u2003\u2003DO i = ll,1,\u22121"]},{"entry":[{},"\u2003\u2003\u2003IF ( (a (i,m,n) .ne. RMISSD) and."]},{"entry":[{},"\u2003\u2003\u2003+ (a(i,m,n) .gt. amax0) ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003lll = i\u22121"]},{"entry":[{},"\u2003\u2003\u2003\u2003amax0 = a(i,m,n)"]},{"entry":[{},"\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003END DO"]},{"entry":[{},"C"]},{"entry":[{},"C* \u2018a\u2019 is increased at all levels below max \u2018a\u2019."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003DO i = lll,1,\u22121"]},{"entry":[{},"\u2003\u2003\u2003IF (a (i,m,n) .ne. RMISSD) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003a (i,m,n) = amax0"]},{"entry":[{},"\u2003\u2003\u2003\u2003enhc (i,m,n) = 1.0"]},{"entry":[{},"\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003END DO"]},{"entry":[{},"\u2003END IF"]},{"entry":[{},"C"]},{"entry":[{},"C* Find .75 vertical wavelength (and 1.75, 2.75, 3.75)."]},{"entry":[{},"C"]},{"entry":[{},"\u2003zrefl = (nn + .75)*lambda(m,n) + elv(m,n)"]},{"entry":[{},"\u2003ll = 1"]},{"entry":[{},"\u2003DO i = 1,nlyrs"]},{"entry":[{},"\u2003\u2003IF ( zsdg(i,m,n) .lt. zrefl ) ll = i"]},{"entry":[{},"\u2003END DO"]},{"entry":[{},"\u2003IF (ll .lt. nlyrs) THEN"]},{"entry":[{},"\u2003\u2003ar = a(ll,m,n) \u2212 (zsdg(ll,m,n)\u2212zrefl)\/"]},{"entry":[{},"\u2003\u2003+ (zsdg(ll,m,n)\u2212zsdg(ll+1,m,n))*"]},{"entry":[{},"\u2003\u2003+ (a(ll,m,n)\u2212a(ll+1,m,n))"]},{"entry":[{},"C"]},{"entry":[{},"C* Find .50 vertical wavelength (and 1.50, 2.50, 3.75)."]},{"entry":[{},"C"]},{"entry":[{},"\u2003zhalf = (nn + .50)*lambda(m,n) + elv(m,n)"]},{"entry":[{},"\u2003lll = 1"]},{"entry":[{},"\u2003DO i = 1,ll"]},{"entry":[{},"\u2003\u2003IF ( zsdg(i,m,n) .lt. zhalf ) lll = i"]},{"entry":[{},"\u2003END DO"]},{"entry":[{},"\u2003ahalf = a(lll,m,n) \u2212 (zsdg(lll,m,n)\u2212zhalf)\/"]},{"entry":[{},"\u2003+ (zsdg(lll,m,n)\u2212zsdg(lll+1,m,n))*"]},{"entry":[{},"\u2003+ (a(lll,m,n)\u2212a(lll+1,m,n))"]},{"entry":[{},"C"]},{"entry":[{},"C* \u2018a\u2019 is increased by reflected \u2018a\u2019 if layered"]},{"entry":[{},"C* favorably."]},{"entry":[{},"C"]},{"entry":[{},"\u2003IF ( ( ahalf .lt. ar ).and.( ahalf .lt. 0.85 ) )THEN"]},{"entry":[{},"\u2003\u2003rcoeff = (ar\u2212ahalf)**2\/(ar+ahalf)**2"]},{"entry":[{},"\u2003\u2003refl = rcoeff*ar"]},{"entry":[{},"\u2003\u2003havrfl = .true."]},{"entry":[{},"\u2003\u2003DO i = 11,1,\u22121"]},{"entry":[{},"\u2003\u2003\u2003IF ( (a(i,m,n) .ne. RMISSD) .and."]},{"entry":[{},"\u2003\u2003\u2003+ (havrfl) ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003arfl = a(i,m,n) + refl"]},{"entry":[{},"\u2003\u2003\u2003\u2003a (i,m,n) = arfl"]},{"entry":[{},"\u2003\u2003\u2003\u2003IF ( a(i,m,n) .gt. 2.5 ) a(i,m,n) = 2.5"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003enhc (i,m,n) = 1.0"]},{"entry":[{},"\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003END DO"]},{"entry":[{},"C"]},{"entry":[{},"C* Compute mountain top wave drag"]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003drag (m,n) = PI\/4.0*h(m,n)*pnu0 (m,n)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In some embodiments of the DATCM, output obtained from the MWAVE calculation component may then be directed into an integrated turbulence calculation component (INTTURB), which will compute upper level non-dimensional gravity wave amplitude (\u00e2ul) , and sum \u00e2mv and \u00e2ul into (\u00e2) to determine buoyant turbulent kinetic energy (TKEbuoy) . If \u00e2 is greater than 1 , then TKEbuoy=TKEmv+TKEul\u2212buoy . Otherwise, TKEbuoy=0 . If \u00e2 greater than \u00e2min , then TKE=TKEul\u2212wshr . The boundary layer eddy dissipation rate (EDR) is computed  and if EDRbl is greater than zero and \u00e2mv is not enhanced , then the EDR=EDRbl , else the EDR is the TKE1\/3 .","The following code fragment shows one embodiment of a methodology for processing of the INTTURB calculation:",{"@attributes":{"id":"p-0136","num":"0135"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"C* Non-dimensional L-F amplitude is square root of L-F radiation"]},{"entry":[{},"C* divided by constant. Constant is for 20km resolution grids"]},{"entry":[{},"C* and is proportionally scaled to resolution of current grid."]},{"entry":[{},"C"]},{"entry":[{},"\u2003ahatlf = SQRT(ABS(lfrad)\/cc*gdd\/20000.)"]},{"entry":[{},"C"]},{"entry":[{},"C"]},{"entry":[{},"C* ahat is sum of lf and mw ahats"]},{"entry":[{},"C"]},{"entry":[{},"ahat = ahatlf + ahatmw(i)"]},{"entry":[{},"C"]},{"entry":[{},"C* Maximum ahat = 2.5"]},{"entry":[{},"C"]},{"entry":[{},"\u2003IF ( ahat .gt. 2.5 ) ahat = 2.5"]},{"entry":[{},"\u2003IF ( ahat .gt. 1.0 ) THEN"]},{"entry":[{},"C"]},{"entry":[{},"C* mountain wave tke is proportional to drag."]},{"entry":[{},"C"]},{"entry":[{},"\u2003tkemw = drag(i)*.0004"]},{"entry":[{},"C"]},{"entry":[{},"C* Reduce mw drag above this level"]},{"entry":[{},"C"]},{"entry":[{},"\u2003IF ( nhnc(i) .eq. 0.0 )"]},{"entry":[{},"\u2003\u2003+ drag(i) = drag(i)*((2.5\u2212ahat)\/1.5)"]},{"entry":[{},"\u2003\u2003tkebuoy = kh*(ahat\u22121.0)*bvsq(i) + km*wshrsq(i)"]},{"entry":[{},"\u2003\u2003+ + tkemw"]},{"entry":[{},"\u2003IF (ahat .lt. 1.0) THEN tkebuoy = 0.0"]},{"entry":[{},"\u2003tke = km*wshrsq(i)*(1.0 + SQRT(rich)*ahat)**2"]},{"entry":[{},"\u2003+ \u2212kh*bvsq(i)"]},{"entry":[{},"C"]},{"entry":[{},"C* Compute layer stability and wind shear"]},{"entry":[{},"C"]},{"entry":[{},"\u2003thtamn = ( thta + sfcthta )\/2.0"]},{"entry":[{},"\u2003bvsq = GRAVTY*thtadf\/zdf\/thtamn"]},{"entry":[{},"\u2003udf = u \u2212 sfcu"]},{"entry":[{},"\u2003vdf = v \u2212 sfcv"]},{"entry":[{},"\u2003wshrsq = ( udf*udf + vdf*vdf )\/zdf\/zdf"]},{"entry":[{},"C"]},{"entry":[{},"C* Compute tke with equation"]},{"entry":[{},"C"]},{"entry":[{},"\u2003tke = km*wshrsq \u2212 kh*bvsq"]},{"entry":[{},"C"]},{"entry":[{},"C* If the < 0, we've reach top of boundary layer. Set topbl = T"]},{"entry":[{},"C"]},{"entry":[{},"\u2003IF ( tke .lt. 0.0 ) THEN"]},{"entry":[{},"\u2003\u2003edrbl = 0.0"]},{"entry":[{},"\u2003\u2003topbl = .true."]},{"entry":[{},"\u2003ELSE"]},{"entry":[{},"\u2003\u2003edrbl = tke**.333"]},{"entry":[{},"\u2003END IF"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In some embodiments of the DATCM, output obtained from the MWAVE and INTTURB calculation components may then be processed through a vertical velocity turbulence with perimeter turbulence integration calculation component (VVTURB2). The storm velocity is computed , as is the EDR from computed updrafts . The maximum updraft speed at the grid point equilibrium level (EL) is computed . While the updraft speed is above the EL, the storm's divergence is calculated , after which the storm top is identified . Storm overshoot (the storm top minus the storm EL) and storm drag (the overshoot squared multiplied by the stability between the EL and storm up squared) are calculated . The magnitude of the wind velocity minus the storm velocity is calculated (known as the Doppler speed) . The EDR above the storm top is computed . If there is turbulence within a set distance or radius, by way of example thirty kilometers, of the storm , then the EDR near the storm is also computed . Otherwise, only the EDR from downdrafts is additionally computed . Finally, all EDRs computed from INTURB and VVTURB2 calculation components are summed and converted to turbulent kinetic energy (TKE) .","The following code fragment shows one embodiment of a methodology for processing of the VVTURB2 calculation:",{"@attributes":{"id":"p-0139","num":"0138"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"C"},{"entry":"C* Compute mean wind near freezing level (estimate of"},{"entry":"C* storm velocity)"},{"entry":"C"},{"entry":"\u2003nlyrs = nlev \u2212 1"},{"entry":"\u2003DO j = 1, nlyrs"},{"entry":"\u2003\u2003CALL ST_INCH ( INT(rlevel(j)), clvl1, iret )"},{"entry":"\u2003\u2003CALL ST_INCH ( INT(rlevel(j+1)), clvl2, iret )"},{"entry":"\u2003\u2003pbar = (rlevel(j) + rlevel(j+1))\/2.0"},{"entry":"\u2003\u2003IF ( pbar .gt. 400. ) THEN"},{"entry":"\u2003\u2003\u2003glevel = clvl2\/\/\u2018:\u2019\/\/clvl1"},{"entry":"\u2003\u2003\u2003\u2003gvcord = \u2018PRES\u2019"},{"entry":"\u2003\u2003\u2003\u2003gfunc = \u2018LAV(TMPC)\u2019"},{"entry":"\u2003\u2003\u2003\u2003CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, t,"},{"entry":"\u2003\u2003\u2003\u2003+ igx, igy, time, level, ivcord, parm, iret )"},{"entry":"\u2003\u2003\u2003\u2003gvcord = \u2018PRES\u2019"},{"entry":"\u2003\u2003\u2003\u2003gfunc = \u2018UR(VLAV(WIND))\u2019"},{"entry":"\u2003\u2003\u2003\u2003CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, u,"},{"entry":"\u2003\u2003\u2003\u2003+ igx, igy, time, level, ivcord, parm, iret )"},{"entry":"\u2003\u2003\u2003\u2003ierr = iret + ierr"},{"entry":"\u2003\u2003\u2003\u2003gvcord = \u2018PRES\u2019"},{"entry":"\u2003\u2003\u2003\u2003gfunc = \u2018VR(VLAV(WIND))\u2019"},{"entry":"\u2003\u2003\u2003\u2003CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, v,"},{"entry":"\u2003\u2003\u2003\u2003+ igx, igy, time, level, ivcord, parm, iret )"},{"entry":"C"},{"entry":"C* Find weighted average of winds in all layers in which"},{"entry":"C* \u22125C < t < 5C, weighting layer closer to 0C the highest."},{"entry":"C"},{"entry":"\u2003\u2003\u2003\u2003DO i = 1, maxpts"},{"entry":"\u2003\u2003\u2003\u2003\u2003tabs = ABS(t(i))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2002IF ( tabs .lt. 5.0 ) THEN"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003ufrzl(i) = ufrzl(i) + (5.0 \u2212 tabs)*u(i)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003vfrzl(i) = vfrzl(i) + (5.0 \u2212 tabs)*v(i)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003tsum(i) = tsum(i) + (5.0 \u2212 tabs )"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2002END IF"},{"entry":"\u2003\u2003\u2003\u2003END DO"},{"entry":"\u2003\u2003\u2003END IF"},{"entry":"\u2003\u2003END DO"},{"entry":"C* Compute edr from mean vertical velocity"},{"entry":"C"},{"entry":"\u2003\u2003IF ( wmean .gt. 10.0 ) THEN"},{"entry":"\u2003\u2003\u2003edr (i) = (.035+.0016*(wmean\u221210.0))**.333"},{"entry":"\u2003\u2003ELSE"},{"entry":"\u2003\u2003\u2003edr (i) = (.0035*wmean)**.333"},{"entry":"\u2003\u2003END IF"},{"entry":"\u2003\u2003ELSE"},{"entry":"\u2003\u2003\u2003edr (i) = 0.0"},{"entry":"\u2003\u2003END IF"},{"entry":"\u2003\u2003IF (wwnd(i) .gt. maxvv(i)) THEN"},{"entry":"\u2003\u2003\u2003havtop(i) = .false."},{"entry":"\u2003\u2003\u2003maxvv(i) = wwnd(i)"},{"entry":"\u2003\u2003\u2003el(i) = z(i)"},{"entry":"\u2003\u2003\u2003iii = 0"},{"entry":"C"},{"entry":"C* Divergence above EL is deceleration of the updraft divided by"},{"entry":"C* thickness."},{"entry":"C"},{"entry":"\u2003\u2003ELSE IF ( .not. havtop(i) ) THEN"},{"entry":"\u2003\u2003\u2003divhi(i) = (vvbase(i)\u2212wwnd(i))\/tkns(i)"},{"entry":"\u2003\u2003\u2003bvsqtop(i) = bvsqtop(i) + bvsq(i)"},{"entry":"\u2003\u2003\u2003iii = iii + 1"},{"entry":"\u2003\u2003ELSE"},{"entry":"\u2003\u2003\u2003divhi(i) = 0.0"},{"entry":"\u2003\u2003END IF"},{"entry":"C"},{"entry":"C* Define storm top"},{"entry":"C"},{"entry":"\u2003\u2003IF ( (maxvv(i) .gt. 1.0) .and. (wwnd(i) .lt. .1)"},{"entry":"\u2003\u2003+ .and. (.not. havtop(i)) ) THEN"},{"entry":"\u2003\u2003\u2003havtop(i) = .true."},{"entry":"\u2003\u2003\u2003stmtop(i) = z(i) \u2212 tkns(i)\/2.0"},{"entry":"\u2003\u2003\u2003+ \u2212 tkns(i)*vvbase(i)*vvbase(i)\/wsq"},{"entry":"\u2003\u2003\u2003ovshoot (i) = stmtop(i) \u2212 el (i)"},{"entry":"\u2003\u2003IF ( iii .ne. 0 ) THEN"},{"entry":"\u2003\u2003\u2003bvsqtop(i) = bvsqtop(i)\/iii"},{"entry":"\u2003\u2003ELSE"},{"entry":"\u2003\u2003\u2003bvsqtop(i) = 0.0"},{"entry":"\u2003\u2003END IF"},{"entry":"C"},{"entry":"C* Compute storm overshooting drag and storm top relative wind"},{"entry":"C* (relative to freezing level wind)"},{"entry":"C"},{"entry":"\u2003\u2003drag (i) = ovshoot(i)*ovshoot(i)*bvsqtop(i)"},{"entry":"\u2003\u2003dopu = u(i) \u2212 ufrzl(i)"},{"entry":"\u2003\u2003dopv = v(i) \u2212 vfrzl(i)"},{"entry":"\u2003\u2003dopspd = SQRT(dopu*dopu + dopv*dopv)"},{"entry":"\u2003\u2003pnu0(i) = dden(i)*SQRT(bvsq(i))*dopspd"},{"entry":"\u2003\u2003IF ( (wsq .le. 0.0) .and. havtop(i) ) THEN"},{"entry":"\u2003\u2003\u2003stab = SQRT(bvsq(i))"},{"entry":"\u2003\u2003\u2003dopu = u(i) \u2212 ufrzl(i)"},{"entry":"\u2003\u2003\u2003dopv = v(i) \u2212 vfrzl(i)"},{"entry":"\u2003\u2003\u2003dopspd = SQRT(dopu*dopu + dopv*dopv)"},{"entry":"C"},{"entry":"C* Compute EDR above storm top as a function of drag"},{"entry":"C"},{"entry":"\u2003\u2003IF (ahat .ge. 1.0) THEN"},{"entry":"\u2003\u2003\u2003edrtop = (drag(i)*.0004)**.333"},{"entry":"\u2003\u2003\u2003edr(i) = MAX(edr(i), edrtop)"},{"entry":"\u2003\u2003\u2003drag(i) = drag(i)*((2.5\u2212ahat)\/1.5)"},{"entry":"\u2003\u2003END IF"},{"entry":"C"},{"entry":"C* Compute turbulence near storms if grid distance low enough."},{"entry":"C"},{"entry":"\u2003\u2003DO i = 1,maxpts"},{"entry":"\u2003\u2003\u2003IF (edr(i) .ne. RMISSD) THEN"},{"entry":"\u2003\u2003\u2003\u2003gdd = (gdx(i)+gdy(i))\/2.0"},{"entry":"\u2003\u2003\u2003\u2003IF ( gdd .lt. 30000. .and. .not.havtop(i)) THEN"},{"entry":"C"},{"entry":"C* Compute tke near storm using Term 2C of L-F radiation"},{"entry":"C* using same method as in ULTURB."},{"entry":"C"},{"entry":"\u2003\u2003\u2003\u2003IF ( MOD(i,igx) .eq. 1 ) THEN"},{"entry":"\u2003\u2003\u2003\u2003\u2003ddivdx = (divhi(i+1)\u2212divhi(i))\/gdx(i)"},{"entry":"\u2003\u2003\u2003\u2003ELSE IF ( MOD(i,igx) .eq. 0 ) THEN"},{"entry":"\u2003\u2003\u2003\u2003\u2003ddivdx = (divhi(i)\u2212divhi(i\u22121))\/gdx(i)"},{"entry":"\u2003\u2003\u2003\u2003ELSE"},{"entry":"\u2003\u2003\u2003\u2003\u2003ddivdx = (divhi(i+1)\u2212divhi(i\u22121))\/2.0\/gdx(i)"},{"entry":"\u2003\u2003\u2003\u2003END IF"},{"entry":"\u2003\u2003\u2003\u2003IF ( i .le. igx ) THEN"},{"entry":"\u2003\u2003\u2003\u2003\u2003ddivdy = (divhi(i+igx)\u2212divhi(i))\/gdy(i)"},{"entry":"\u2003\u2003\u2003\u2003ELSE IF ( i .gt. (maxpts\u2212igx) ) THEN"},{"entry":"\u2003\u2003\u2003\u2003\u2003ddivdy = (divhi(i)\u2212divhi(i\u2212igx))\/gdy(i)"},{"entry":"\u2003\u2003\u2003\u2003ELSE"},{"entry":"\u2003\u2003\u2003\u2003\u2003ddivdy = (divhi(i+igx)\u2212divhi(i\u2212igx))\/2.0\/gdy(i)"},{"entry":"\u2003\u2003\u2003\u2003END IF"},{"entry":"\u2003\u2003\u2003\u2003crsdiv = \u2212ff(i)*(u(i)*ddivdy \u2212 v(i)*ddivdx)"},{"entry":"\u2003\u2003\u2003\u2003ahat = SQRT(ABS(crsdiv)\/cc)"},{"entry":"\u2003\u2003\u2003\u2003IF ( ahat .gt. 2.5 ) ahat = 2.5"},{"entry":"\u2003\u2003\u2003\u2003rich = bvsq(i)\/wshrsq(i)"},{"entry":"\u2003\u2003\u2003\u2003IF ( rich .lt. 0.0 ) rich = 0.0"},{"entry":"\u2003\u2003\u2003\u2003IF ( rich .lt. 0.25 ) THEN"},{"entry":"\u2003\u2003\u2003\u2003\u2003amin = 0.0"},{"entry":"\u2003\u2003\u2003\u2003ELSE"},{"entry":"\u2003\u2003\u2003\u2003\u2003amin = 2.0 \u2212 1.0\/SQRT(rich)"},{"entry":"\u2003\u2003\u2003\u2003END IF"},{"entry":"\u2003\u2003\u2003\u2003IF ( ahat .gt. 1.0 ) THEN"},{"entry":"\u2003\u2003\u2003\u2003\u2003tkebuoy = kh*(ahat\u22121.0)*bvsq(i) + km*wshrsq(i)"},{"entry":"\u2003\u2003\u2003\u2003ELSE"},{"entry":"\u2003\u2003\u2003\u2003\u2003tkebuoy = 0.0"},{"entry":"\u2003\u2003\u2003\u2003END IF"},{"entry":"\u2003\u2003\u2003\u2003IF ( amin .ge. ahat ) THEN"},{"entry":"\u2003\u2003\u2003\u2003\u2003tke = tkebuoy"},{"entry":"\u2003\u2003\u2003\u2003ELSE"},{"entry":"\u2003\u2003\u2003\u2003\u2003tke = km*wshrsq(i)*(1.0 + SQRT(rich)*ahat)**2"},{"entry":"\u2003\u2003\u2003\u2003\u2003+ \u2212 kh*bvsq(i)"},{"entry":"\u2003\u2003\u2003\u2003END IF"},{"entry":"\u2003\u2003\u2003\u2003IF ( tke .lt. 0.0 ) tke = 0.0"},{"entry":"\u2003\u2003\u2003\u2003edrnear = tke**.333"},{"entry":"\u2003\u2003\u2003\u2003edr(i) = MAX(edr(i),edrnear)"},{"entry":"\u2003\u2003\u2003END IF"},{"entry":"\u2003\u2003END IF"},{"entry":"\u2003END DO"},{"entry":"C"},{"entry":"C* Compute downdraft velocities (a function of the windex"},{"entry":"C and how far below the freezing level) and downdraft edr"},{"entry":"C"},{"entry":"\u2003fl = 304.8"},{"entry":"\u2003DO WHILE ( fl .le. 6097. )"},{"entry":"\u2003\u2003CALL ST_INCH ( INT(fl), glevel, iret )"},{"entry":"\u2003\u2003gvcord = \u2018HGHT\u2019"},{"entry":"\u2003\u2003gfunc = \u2018EDR+2\u2019"},{"entry":"\u2003\u2003CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, edr,"},{"entry":"\u2003\u2003+ igx, igy, time, klevel, kvcord, parm, iret )"},{"entry":"\u2003\u2003DO i = 1, maxpts"},{"entry":"\u2003\u2003\u2003IF ( maxvv(i) .gt. 10. ) THEN"},{"entry":"\u2003\u2003\u2003IF ( fl .gt. sfcz(i) ) THEN"},{"entry":"\u2003\u2003\u2003\u2003wdown = windex(i)*(frzlz(i)\u2212f1)\/frzlz(i)"},{"entry":"\u2003\u2003\u2003\u2003IF ( wdown .gt. 10.0 ) THEN"},{"entry":"\u2003\u2003\u2003\u2003\u2003edrdown = (.035+.0016*(wdown\u221210.0))**.333"},{"entry":"\u2003\u2003\u2003\u2003ELSE IF ( wdown .gt. 0.0 ) THEN"},{"entry":"\u2003\u2003\u2003\u2003\u2003edrdown = (.0035*wdown)**.333"},{"entry":"\u2003\u2003\u2003\u2003ELSE"},{"entry":"\u2003\u2003\u2003\u2003\u2003edrdown = 0.0"},{"entry":"\u2003\u2003\u2003\u2003END IF"},{"entry":"\u2003\u2003\u2003\u2003edr (i) = MAX (edr(i), edrdown)"},{"entry":"\u2003\u2003\u2003END IF"},{"entry":"\u2003\u2003END IF"},{"entry":"\u2003END DO"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The following code fragment shows an additional or alternative embodiment of enhanced code to address above-storm turbulence for some embodiments, an example image resulting for which is shown in :",{"@attributes":{"id":"p-0141","num":"0140"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"C*\u2003Compute turbulence above storm top."]},{"entry":[{},"C"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"IF ( (wsq .le. 0.0) .and. havtop(i) ) THEN"]},{"entry":[{},"\u2003stab = SQRT(bvsq(i))"]},{"entry":[{},"\u2003dopu = u(i) \u2212 ufrzl(i)"]},{"entry":[{},"\u2003dopv = v(i) \u2212 vfrzl(i)"]},{"entry":[{},"\u2003dopspd = SQRT(dopu*dopu + dopv*dopv)"]},{"entry":[{},"\u2003pnu = dden(i)*stab*dopspd"]},{"entry":[{},"\u2003IF ( dopspd .eq. 0.0 ) THEN"]},{"entry":[{},"\u2003\u2003ahat = 2.5"]},{"entry":[{},"\u2003ELSE"]},{"entry":[{},"\u2003\u2003ahat = ovshoot(i)*stab\/dopspd*SQRT(pnu0(i)\/pnu)"]},{"entry":[{},"\u2003END IF"]},{"entry":[{},"\u2003IF (ahat .gt. 2.5) ahat = 2.5"]},{"entry":[{},"\u2003IF (ahat .ge. 1.0) THEN"]},{"entry":[{},"\u2003\u2003edrtop = (drag(i)*.0004)**.333"]},{"entry":[{},"\u2003\u2003edr(i) = MAX(edr(i), edrtop)"]},{"entry":[{},"\u2003\u2003drag(i) = drag(i)*((2.5\u2212ahat)\/1.5)"]},{"entry":[{},"\u2003END IF"]},{"entry":[{},"END IF"]},{"entry":[{},"END DO"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"C"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0142","num":"0141"},"figref":"FIG. 23","b":["2301","2302","2303","2304"]},{"@attributes":{"id":"p-0143","num":"0142"},"figref":"FIG. 24","b":["2400","2401","2402","2403","2404","2405","2406","2408","2408","2409"]},"In some embodiments of the disclosure, this initial input component may then be followed by DATCM computational turbulence integration  of the generated geospatial grid region, some examples of which have been described in . The DATCM may create an overlay to the generated grid region  and may request additional information about the desired parameters of the flight path through this grid region . In some embodiments of the disclosure, these parameters may include schedule-based path-finding (shortest path immediacy), schedule-based but with circumvention of acute turbulence (shortest path avoiding high hazard turbulence areas), turbulence circumvention (navigating out of turbulence areas), and\/or any combination of or intermediate stage to these parameters. The DATCM may then use available input as described in the input component to determine all flight path creation parameters . The DATCM may then create a flight path over the integrated turbulence grid region , considering flight path creation parameters . The DATCM may then display the proposed flight path to the user as a terminal overlay, standard or high definition map overlay and\/or the like , as is applicable to the flight planning tool. If the flight path is satisfactory , the user may then exit the flight path planning component of the DATCM as an incorporated flight planning tool option, In some embodiments of the disclosure, the DATCM may allow the user to export the determined flight path to other media, save the flight path to the user profile, share the flight path with additional users, and\/or the like. In some embodiments of the disclosure, if the proposed flight path is not satisfactory , the DATCM may allow the user to modify flight path creation parameters . In some embodiments of the disclosure, the user may reenter a flight path creation component as specified earlier . In some embodiments of the disclosure, users may be allowed to visually manipulate flight path options using the proposed flight path turbulence grid overlay. In some embodiments of the disclosure, the user may be able to reenter flight path creation, visually manipulate the proposed flight path and\/or combine these methods in any intermediate path modification.",{"@attributes":{"id":"p-0145","num":"0144"},"figref":"FIG. 25","b":["2501","2507","2520","2502","2504","2530","2540","2505","2550","2560"]},{"@attributes":{"id":"p-0146","num":"0145"},"figref":["FIG. 26","FIGS. 2, 3, and 4"],"b":["2601","2602","2603","2604"]},{"@attributes":{"id":"p-0147","num":"0146"},"figref":["FIG. 27","FIG. 3"],"b":["2701","2701","2701","2702","2702","2702","2702","2703","2704","2705","2706","2707","2707"],"i":["a ","b","a ","b ","c ","d "]},"In some embodiments, the DATCM may provide a file or data stream as output, in which values of the DATCM during component production, including but not limited to EDR finalization, may be recorded or provided. One example of a DATCM CSV output file is provided below, showing an in-flight time sequence of forecasted turbulence:",{"@attributes":{"id":"p-0149","num":"0148"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"399pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Flight PHX-MSP"},{"entry":"dd mm yyyy"},{"entry":"Leave: 0413Z"},{"entry":"Arrive: 0645Z"},{"entry":"Turbulence Forecast (EDR*100)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"11","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"Altitude",{},{},{},{},{},{},{}]},{"entry":["Time","Latitude","Longitude","(kft)","MWAVE","COMTURB","VVTURB","INTTURB","VVINTTURB","FINAL","Explanation"]},{"entry":{"@attributes":{"namest":"1","nameend":"11","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"8","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"9","colwidth":"49pt","align":"char","char":"."}},{"@attributes":{"colname":"10","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"11","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["415","33.5","\u2212111.8","50","0","0","0","0","1","1",{}]},{"entry":["425","34.5","\u2212111.6","250","0","0","0","0","26","26","Near-storm"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"turbulence"]},{"entry":["435","35.4","\u2212110.3","370","0","0","0","0","1","1"]},{"entry":["445","36.2","\u2212109","370","0","0","1","25","1","25","Mountain Wave and"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"free gravity wave"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"amplitudes combine"]},{"entry":["455","36.9","\u2212107.7","370","0","0","0","0","0","0"]},{"entry":["505","37.3","\u2212106","370","0","0","0","0","34","34","Storm top"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"turbulence"]},{"entry":["515","38.1","\u2212104.7","370","0","0","1","35","1","35","Mountain wave and"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"free gravity wave"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"amplitudes combine"]},{"entry":["525","38.9","\u2212103.6","370","0","0","1","0","1","1"]},{"entry":["535","39.9","\u2212102.1","370","0","45","0","45","0","45"]},{"entry":["545","40.9","\u2212101","370","0","0","1","0","1","1"]},{"entry":["555","41.8","\u221299.7","370","0","51","1","51","1","51"]},{"entry":["605","42.6","\u221298.5","370","0","34","0","34","0","34"]},{"entry":["615","43.5","\u221297","370","0","30","1","30","1","30"]},{"entry":["625","44.4","\u221295.3","290","0","18","43","18","43","43"]},{"entry":["635","44.7","\u221294","100","0","0","24","0","24","24"]},{"entry":["645","44.8","\u221293.2","20","0","19","0","19","51","51","Near-storm"]},{"entry":[{},{},{},{},{},{},{},{},{},{},"turbulence"]},{"entry":{"@attributes":{"namest":"1","nameend":"11","align":"center","rowsep":"1"}}}]}}]}}},"In some embodiments of the DATCM, a file or feed (e.g., a CSV file) output from the DATCM may be provided as input to a geometric vector data generator , which may provide additional data output options. In some embodiments of the DATCM, the geometric vector data generator may output geometric vector data files to a file server  which may provide the data output to an alert server  which may provide the output a communications networks  to such partners, third parties, software applications, end users and\/or the like as described. In some embodiments of the DATCM, the geometric vector data generator may output geometric vector data files, such as shapefiles, for storage in GIS database(s) . In some embodiments of the DATCM, Web Mapping Services (WMS) and\/or Web Feature Services (WFS)  may obtain the geometric vector data files from GIS database(s) and provide geographic service integrators  with DATCM output data through various communication networks  as described. In some embodiments of the DATCM, file server(s)  and\/or WMS may incorporate the DATCM output data into a DATCM integrated server  with application, data, and\/or network components. A DATCM integrated server may employ such output data from DATCM components in proprietary software tools, web services, mobile applications and\/or the like. In one embodiment of the DATCM, a DATCM integrated server may employ DATCM component output for use in flight planning tools , such as AviationSentry Online\u00ae.",{"@attributes":{"id":"p-0151","num":"0150"},"figref":"FIG. 28A","b":"2801"},{"@attributes":{"id":"p-0152","num":"0151"},"figref":"FIG. 28B","b":["28","2802","2803"]},{"@attributes":{"id":"p-0153","num":"0152"},"figref":"FIG. 29A","b":"2901"},{"@attributes":{"id":"p-0154","num":"0153"},"figref":["FIG. 29B","FIG. 29A"],"b":"2902"},{"@attributes":{"id":"p-0155","num":"0154"},"figref":["FIG. 29C","FIG. 29A","FIG. 29B"],"b":"2903"},{"@attributes":{"id":"p-0156","num":"0155"},"figref":"FIG. 29D","sup":["2","3"]},{"@attributes":{"id":"p-0157","num":"0156"},"figref":"FIG. 29D","b":["2910","2912"]},"In some embodiments, the DATCM server may issue PHP\/SQL commands to query a database table (such as , Profile ) for profile data. An example profile data query, substantially in the form of PHP\/SQL commands, is provided below:",{"@attributes":{"id":"p-0159","num":"0158"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?PHP"},{"entry":"header(\u2018Content-Type: text\/plain\u2019);"},{"entry":"mysql_connect(\u201c254.93.179.112\u201d,$DBserver,$password); \/\/ access"},{"entry":"\u2003database server"},{"entry":"mysql_select_db(\u201cDATCM_DB.SQL\u201d); \/\/ select database table to search"},{"entry":"\/\/create query"},{"entry":"$query = \u201cSELECT field1 field2 field3 FROM ProfileTable WHERE user"},{"entry":"\u2003LIKE \u2018%\u2019 $prof\u201d;"},{"entry":"$result = mysql_query($query); \/\/ perform the search query"},{"entry":"mysql_close(\u201cDATCM_DB.SQL\u201d); \/\/ close database access"},{"entry":"?>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The DATCM server may store the profile data in a DATCM database. For example, the DATCM server may issue PHP\/SQL commands to store the data to a database table (such as , Profile ). An example profile data store command, substantially in the form of PHP\/SQL commands, is provided below:",{"@attributes":{"id":"p-0161","num":"0160"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?PHP"},{"entry":"header(\u2018Content-Type: text\/plain\u2019);"},{"entry":"mysql_connect(\u201c254.92.185.103\u201d,$DBserver,$password); \/\/ access"},{"entry":"\u2003database server"},{"entry":"mysql_select(\u201cDATCM_DB.SQL\u201d); \/\/ select database to append"},{"entry":"mysql_query(\u201cINSERT INTO ProfileTable (fieldname1, fieldname2,"},{"entry":"\u2003fieldname3)"},{"entry":"VALUES ($fieldvar1, $fieldvar2, $fieldvar3)\u201d); \/\/ add data to table in"},{"entry":"\u2003database"},{"entry":"mysql_close(\u201cDATCM_DB.SQL\u201d); \/\/ close connection to database"},{"entry":"?>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Various embodiments of the DATCM may be used to provide real-time, pre-flight and\/or in-flight turbulence reporting, planning and response. The integrated, unified turbulence system provided by the DATCM may be used in flight equipment and\/or ground equipment. The DATCM may provide weather\/aviation decision support (e.g., via graphical displays) and\/or provide alerts\/triggers. Although it is discussed in terms of re-routing in time of increased turbulence, in some embodiments, the DATCM may identify more efficient paths based on real-time updates where there is decreased turbulence over a shorter physical distance, and may update a flight plan accordingly. The DATCM identifies 4D areas for flight hazards, and a user may choose or set their profile based on particular hazards (e.g., a passenger airline would have a different hazard\/turbulence profile than an air freight company, and a large airliner would have a different profile from a small plane or helicopter). Various cost calculations and risk calculations may also be used in determining alerts and\/or flight paths. In some embodiments, real-time feedback may come from plane-mounted instrument sensors and provide updates to predicted turbulence. Such information may be used to refine mechanisms for turbulence determination. Although examples were discussed in the context of jet airliners, it is to be understood that the DATCM may be utilized for low-level services, such as helicopters, unmanned aerial vehicles, as well as high speed and\/or military aircraft, and may even have potential ground applications, especially in mountainous terrain. The DATCM may work with air traffic control, particularly in management of routing. In some embodiments, the DATCM may input directly in avionics systems to guide planes.","Prior to the DATCM, forecasts of turbulence, if even available, were generally qualitative (e.g., light\/heavy), independent of aircraft type, and did not include all sources of turbulence (e.g., they specifically exclude thunderstorms) or interactions of turbulence, thus making them unusable for most practical applications such as flight planning. The integrated turbulence forecast of the DATCM is unique because it dynamically determines the location and level at which each comprehensive turbulence determination is made, based on the meteorological conditions at that point in space and time. In some embodiments, the result is a single, integrated forecast that includes all sources of turbulence, and is produced in quantitative units, such as Eddy Dissipation Rate (EDR), thus making it suitable for practical uses, such as flight planning applications, and allows for categorical flexibility specific to an aircraft.","In some embodiments, the DATCM integrates three DATCM turbulence mechanisms, ULTURB, BLTURB, and MWAVE into one component\/program called INTTURB. In some additional or alternative embodiments, the DATCM integrates VVTURB with ULTURB and BLTURB into a component\/program called VVINTTURB. Output from all components may in EDR, an aircraft-independent metric of turbulence intensity. The DATCM may assign an EDR value at each grid point and at each flight level. Observations of turbulence may also be used for further tuning of the forecast where and when they are available. In some embodiments, the DATCM may utilize a VVSTORMSE component, as discussed below.","Embodiments of the DATCM may be configured to determine warnings for relatively reduced volumes\/areas\/sizes of airspace, substantially more granular and detailed than, for example, traditional convective SIGMETs. A Convective SIGMET is typically issued as a text message for convection over the continental United States, for example, for an area of thunderstorms affecting an area of 3,000 square miles or greater. The DATCM and\/or VVSTORMSE may provide granularity by reducing the size of the analyzed area by 10%, 15%, 20%, 25%, 30%, 35%, 40%, 45%, 50%, 55%, 60%, 65%, 70%, 75%, 80%, 85%, 90%, and\/or 95%. Depending on the embodiment, the area granularity may be of the following, or within a range of any of the following: 0.05 km, 0.1 km, 0.2 km, 0.3 km, 0.4 km, 0.5 km, 0.6 km, 0.7 km, 0.8 km, 0.9 km, 1 km, 2 km, 3 km, 4 km, 5 km, 6 km, 7 km, 8 km, 9 km, 10 km, 11 km, 12 km, 13 km, 14 km, 15 km, 16 km, 17 km, 18 km, 19 km, 20 km, 21 km, 22 km, 23 km, 24 km, 25 km, 26 km, 27 km, 28 km, 29 km, 30 km, 31 km, 32 km, 33 km, 34 km, 35 km, 36 km, 37 km38 km, 39 km, 40 km, 41 km, 42 km, 43 km, 44 km, 45 km, 46 km, 47 km, 48 km, 49 km, 50 km, 55 km, 60 km, 65 km, 70 km, 75 km, 80 km, 85 km, 90 km, 95 km, 100 km, 105 km, 110 km, 115 km, 120 km, 125 km, 130 km, 135 km, 140 km, 145 km, 150 km, 155 km, 160 km, 165 km, 170 km, 175 km, 180 km, 185 km, 190 km, 195 km, 200 km, 205 km, 210 km, 215 km, 220 km, 225 km, 230 km, 235 km, 240 km, 245 km, 250 km, 255 km, 260 km, 265 km, 270 km, 275 km, 280 km, 285 km, 290 km, 295 km, 300 km, 305 km, 310 km, 315 km, 320 km, 325 km, 330 km, 335 km, 340 km, 345 km, 350 km, 355 km, 360 km, 365 km, 370 km, 375 km, 380 km, 385 km, 390 km, 395 km, 400 km, 425 km, 450 km, 475 km, 500 km, 525 km, 550 km, 575 km, 600 km, 625 km, 650 km, 675 km, 700 km, 725 km, 750 km, 775 km, 800 km, 825 km, 850 km, 875 km, 900 km, 925 km, 950 km, 975 km, 1000 km, 1100 km, 1200 km, 1300 km, 1400 km, 1500 km, 1600 km, 1700 km, 1800 km, 1900 km, 2000 km, 2100 km, 2200 km, 2300 km, 2400 km, 2500 km, 2600 km, 2700 km, 2800 km, 2900 km, 3000 km, 3100 km, 3200 km, 3300 km, 3400 km, 3500 km, 3600 km, 3700 km, 3800 km, 3900 km, 4000 km, 4100 km, 4200 km, 4300 km, 4400 km, 4500 km, 4600 km, 4700 km, 4800 km, 4900 km, 5000 km, 5500 km, 6000 km, 6500 km, 7000 km, 7500 km. The area granularity may be in the range of any two of the previous areas, such as by way of non-limiting example, between 0.1 kmand 1000 km, 10 kmand 200 km, 100 kmand 5000 km, 800 kmand 5500 km, 900 kmand 4500 km, and\/or the like. The shape of the area may be, by way of non-limiting example, square, rectangular, parallelogram, n-gon, irregular, and\/or the like.","The DATCM and\/or VVSTORMSE may provide granularity by reducing the size of the analyzed airspace volumes by 15%, 20%, 25%, 30%, 35%, 40%, 45%, 50%, 55%, 60%, 65%, 70%, 75%, 80%, 85%, 90%, and\/or 95%. Depending on the embodiment, the volume granularity may be of the following or within a range of the any of the following: 0.1 km, 0.2 km, 0.3 km, 0.4 km, 0.5 km, 0.6 km, 0.7 km, 0.8 km, 0.9 km, 1 km, 2 km, 3 km, 4 km, 5 km, 6 km, 7 km, 8 km, 9 km, 10 km, 11 km, 12 km, 13 km, 14 km, 15 km, 16 km, 17 km, 18 km, 19 km, 20 km, 21 km, 22 km, 23 km, 24 km, 25 km, 26 km, 27 km, 28 km, 29 km, 30 km, 31 km, 32 km, 33 km, 34 km, 35 km, 36 km, 37 km, 38 km, 39 km, 40 km, 41 km, 42 km, 43 km, 44 km, 45 km, 46 km, 47 km, 48 km, 49 km, 50 km, 55 km, 60 km, 65 km, 70 km, 75 km, 80 km, 85 km, 90 km, 95 km, 100 km, 105 km, 110 km, 115 km, 120 km, 125 km, 130 km, 135 km, 140 km, 145 km, 150 km, 155 km, 160 km, 165 km, 170 km, 175 km, 180 km, 185 km, 190 km, 195 km, 200 km, 205 km, 210 km, 215 km, 220 km, 225 km, 230 km, 235 km, 240 km, 245 km, 250 km, 255 km, 260 km, 265 km, 270 km, 275 km, 280 km, 285 km, 290 km, 295 km, 300 km, 305 km, 310 km, 315 km, 320 km, 325 km, 330 km, 335 km, 340 km, 345 km, 350 km, 355 km, 360 km, 365 km, 370 km, 375 km, 380 km, 385 km, 390 km, 395 km, 400 km, 425 km, 450 km, 475 km, 500 km, 525 km, 550 km, 575 km, 600 km, 625 km, 650 km, 675 km, 700 km, 725 km, 750 km, 775 km, 800 km, 825 km, 850 km, 875 km, 900 km, 925 km, 950 km, 975 km, 1000 km, 1100 km, 1200 km, 1300 km, 1400 km, 1500 km, 1600 km, 1700 km, 1800 km, 1900 km, 2000 km, 2100 km, 2200 km, 2300 km, 2400 km, 2500 km, 2600 km, 2700 km, 2800 km, 2900 km, 3000 km, 3100 km, 3200 km, 3300 km, 3400 km, 3500 km, 3600 km, 3700 km, 3800 km, 3900 km, 4000 km, 4100 km, 4200 km, 4300 km, 4400 km, 4500 km, 4600 km, 4700 km, 4800 km, 4900 km, 5000 km, 5500 km, 6000 km, 6500 km, 7000 km, 7500 km, 8000 km, 8500 km, 9000 km, 9500 km, 10000 km. The volume granularity may be in the range of any two of the previous, such as by way of non-limiting example, between 0.1 kmand 10000 km, 10 kmand 200 km, 100 kmand 5000 km, 800 kmand 5500 km, 900 kmand 4500 km, and\/or the like. The shape of the volume may be, by way of non-limiting example, cuboid, parallelepiped, polygonal, irregular, and\/or the like.","With reduced airspace volumes, such implementations of the DATCM issue fewer aircraft alerts, resulting in increased compliance with and\/or adherence to warnings. In some embodiments, the DATCM avoids over-forecasting of alerts, including avoidance of over-forecasting convective turbulence. Some aircraft-flight-following operations warn aircraft of impending turbulence based on text messages issued by the National Weather Service. These messages may coarsely outline the threat volume often resulting in alerting aircraft not in the direct path of the turbulence. While non-convective turbulence is determined from numerical weather forecast mechanisms, as it cannot generally be directly observed, the DATCM may accurately infer convective turbulence from observations from radar, satellite, or lightning.","For example, rather than alerting the entire atmospheric volume from the surface to very high altitudes (based on assumption that all altitudes are affected whenever, for example, radar reflectivity reaches a certain threshold or whenever lightning is observed), the DATCM can provide alerts with enhanced granularity. The DATCM can predict\/identify regions of relatively lower convective turbulence (primarily correlated to storm updraft and downdraft strength) from the storm-supporting environment.","In some embodiments of the DATCM, a VVSTORMSE component may have a plurality of subcomponents. In one exemplary embodiment, illustrated in , the VVSTORMSE component receives  and analyzes a numerical weather forecast  for areas of atmospheric potential instability. It assigns a turbulence-intensity at each altitude  based on the updraft or downdraft magnitude that the environment can support and assigns a turbulence intensity (see discussion of  below). An exemplary implementation for one embodiment is illustrated in the below code fragment:",{"@attributes":{"id":"p-0170","num":"0169"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"C"]},{"entry":[{},"C* \u2003\u2003Lift most unstable parcel to find potential instability"]},{"entry":[{},"C* \u2003\u2003\u2003\u2002(if parcel has an LFC)."]},{"entry":[{},"C* Wwndvertical velocity (\u2018+\u2019 is up and \u2018\u2212\u2019 is down)"]},{"entry":[{},"C* Edr eddy dissipation rate"]},{"entry":[{},"C* Plclpressure at the lifted condensation level (the pressure when"]},{"entry":[{},"C* Lifted air becomes saturated)"]},{"entry":[{},"C* Pbarpressure level being analyzed"]},{"entry":[{},"C* Thteequivalent potential temperature"]},{"entry":[{},"C* Thtapotential temperature"]},{"entry":[{},"C* Pthteparcel equivalent potential temperature"]},{"entry":[{},"C* Pctdil percent dilution to dilute parcel with environmental air"]},{"entry":[{},"C* Tknslayer thickness"]},{"entry":[{},"C* Ff Coriolis parameter"]},{"entry":[{},"C* Vortabsolute vorticity"]},{"entry":[{},"C* Avorg absolute geostrophic vorticity"]},{"entry":[{},"C* Pcltparcel temperature (PR_TMST is function that computes it)"]},{"entry":[{},"C* Tenvenvironmental temperature (degK)"]},{"entry":[{},"C* Pcldif temperature difference between parcel and environment"]},{"entry":[{},"C* Wsq square of vertical acceleration"]},{"entry":[{},"C* Vvsqsquare of vertical velocity"]},{"entry":[{},"C* Vvbase vertical velocity at layer base"]},{"entry":[{},"C* Wmeanmean upward vertical velocity in layer"]},{"entry":[{},"C* Fl Flight level (m)"]},{"entry":[{},"C* Windex maximum downward vertical velocity (at surface)"]},{"entry":[{},"C* Maxvv maximum upward vertical velocity"]},{"entry":[{},"C* Frzmsl freezing level above sea level"]},{"entry":[{},"C* Frzlz freezing level above ground elevation"]},{"entry":[{},"C* Sfczsurface elevation"]},{"entry":[{},"C* Wdown downward vertical velocity at flight level"]},{"entry":[{},"C* Edrdownedr from wdown"]},{"entry":[{},"C* Edrlow edr from wmean"]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003\u2009DO i = 1, maxpts"]},{"entry":[{},"\u2003\u2003\u2003\u2009zsum = zsum + z(i) + tkns(i)\/2."]},{"entry":[{},"\u2003\u2003\u2003\u2009IF (sfcp (i) .lt. rlevel (j+1)) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2009wwnd (i) = RMISSD"]},{"entry":[{},"\u2002edr (i) = RMISSD"]},{"entry":[{},"\u2003\u2003\u2003\u2009ELSE"]},{"entry":[{},"\u2002IF ( plcl(i) .gt. pbar ) THEN"]},{"entry":[{},"\u2003\u2002IF ( thte(i) .eq. RMISSD ) thte(i) = thta(i)"]},{"entry":[{},"\u2003\u2002IF ( pthte(i) .gt. thte(i) ) THEN"]},{"entry":[{},"\u2003\u2003\u2002pctdil = tkns(i)\/10000.0"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003pthte(i) = (1.0\u2212pctdil)*pthte(i) + pctdil*thte(i)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2009END IF"]},{"entry":[{},"\u2003\u2002IF ( ff(i) .gt. 0.0 ) THEN"]},{"entry":[{},"\u2003\u2003\u2002vort = MAX ( avorg (i), ff (i) )"]},{"entry":[{},"\u2003\u2002ELSE"]},{"entry":[{},"\u2003\u2003\u2002vort = MIN ( avorg (i), ff (i) )"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2009END IF"]},{"entry":[{},"\u2003\u2002pclt = PR_TMST(pthte(i),pbar,0.0)"]},{"entry":[{},"\u2003\u2002tenv = t(i) + 273.16"]},{"entry":[{},"\u2003\u2002pcldif = pclt \u2212 tenv"]},{"entry":[{},"\u2003\u2002IF ( pcldif .gt. 20.0 ) THEN"]},{"entry":[{},"\u2003\u2003\u2002wsq = 0.0"]},{"entry":[{},"\u2003\u2002ELSE"]},{"entry":[{},"\u2003\u2003\u2002IF ( ABS(ff(i)) .lt. .00005 ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2002wsq = 2.0*tkns(i)*GRAVTY*pcldif\/tenv"]},{"entry":[{},"\u2003\u2003\u2002ELSE"]},{"entry":[{},"\u2003\u2003\u2003\u2002wsq = 2.0*tkns(i)*GRAVTY*pcldif\/tenv +"]},{"entry":[{},"\u2003\u2003\u2002+ \u2003\u20030.5*ff(i)\/vort*gwshrsq(i)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2009END IF"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2009END IF"]},{"entry":[{},"\u2003\u2002IF ( (wsq .gt. 0.0) .and. (.not. abvlfc(i)) ) THEN"]},{"entry":[{},"\u2003\u2003\u2002abvlfc (i) = .true."]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2009END IF"]},{"entry":[{},"\u2002ELSE"]},{"entry":[{},"\u2003\u2002wsq = 0.0"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2009END IF"]},{"entry":[{},"\u2002vvsq = vvbase(i)*vvbase(i) + wsq"]},{"entry":[{},"\u2002IF ( vvsq .lt. 0.0 ) THEN"]},{"entry":[{},"\u2003\u2002wwnd(i) = 0.0"]},{"entry":[{},"\u2002ELSE"]},{"entry":[{},"\u2003\u2002wwnd(i) = SQRT (vvsq)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2009END IF"]},{"entry":[{},"\u2002wmean = (vvbase(i)+wwnd(i))\/2."]},{"entry":[{},"C"]},{"entry":[{},"C* Compute EDR from updraft speed (wmean)."]},{"entry":[{},"C"]},{"entry":[{},"\u2002IF ( wmean .gt. 10.0 ) THEN"]},{"entry":[{},"\u2003\u2002edr(i) = (.06 + .009*(wmean\u221210.0))**.333"]},{"entry":[{},"\u2002ELSE"]},{"entry":[{},"\u2003\u2002edr(i) = (.006*wmean)**.333"]},{"entry":[{},"\u2002END IF"]},{"entry":[{},"C"]},{"entry":[{},"C* \u2002Compute downdraft velocities and downdraft edr"]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2002jj = 1"]},{"entry":[{},"\u2003fl = 304.8"]},{"entry":[{},"\u2003DO WHILE ( fl .le. 6097. )"]},{"entry":[{},"\u2003\u2003DO i = 1, maxpts"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003IF (edrlow(jj,i) .ne. RMISSD .or. windex(i)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003.ne. RMISSD)"]},{"entry":[{},"\u2003\u2003+ \u2003\u2003\u2003\u2003\u2003THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003edrdown = 0.0"]},{"entry":[{},"\u2003\u2003\u2003\u2003IF ( maxvv(i) .gt. 10. ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2002frzmsl = frzlz(i) + sfcz(i)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003IF ( fl .gt. sfcz(i) .and. fl .lt. frzmsl ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003wdown = windex(i)*(frzmsl\u2212fl)\/frzlz(i)"]},{"entry":[{},"\u2003\u2003IF ( wdown .gt. 10.0 ) THEN"]},{"entry":[{},"\u2003\u2003\u2003edrdown = (.06+.009*(wdown\u221210.0))**.333"]},{"entry":[{},"\u2003\u2003ELSE IF ( wdown .gt. 0.0 ) THEN"]},{"entry":[{},"\u2003\u2003\u2003edrdown = (.006*wdown)**.333"]},{"entry":[{},"\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2002edr (i) = MAX (edrlow(jj,i), edrdown)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003ELSE"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003edr(i) = RMISSD"]},{"entry":[{},"\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003END DO"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Then the DATCM\/VVSTORMSE component (or subcomponent\/program) masks the potential turbulence forecast with convective observations and\/or future derived observations . The following provides an example code fragment addressing this aspect for some embodiments of the DATCM\/VVSTORMSE component(s)\/subcomponent(s):",{"@attributes":{"id":"p-0172","num":"0171"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"C"]},{"entry":[{},"C* Open radar file and read echo tops."]},{"entry":[{},"C* \u2002Gdrfileradar echo top filename"]},{"entry":[{},"C* \u2002Etop echo top (computed by DG_GRID)"]},{"entry":[{},"C* \u2002Gdefileedr filename"]},{"entry":[{},"C* \u2002El equilibrium level"]},{"entry":[{},"C* \u2002Edr potential edr at flight level"]},{"entry":[{},"C"]},{"entry":[{},"\u2002CALL DG_NFIL ( gdrfile, \u2018\u2019, iret )"]},{"entry":[{},"\u2002IF ( iret .ne. 0 ) THEN"]},{"entry":[{},"\u2003\u2002write (6,*) \u2018Unable to process radar file input\u2019"]},{"entry":[{},"\u2003\u2002STOP"]},{"entry":[{},"\u2002END IF"]},{"entry":[{},"\u2002CALL DG_NDTM ( fhrdr, iret )"]},{"entry":[{},"\u2002grdnam = \u2018 \u2019"]},{"entry":[{},"\u2002gpack = \u2018NONE\u2019"]},{"entry":[{},"\u2002CALL DG_NTIM ( .false., .false., time, nxttm, ier )"]},{"entry":[{},"\u2002CALL TG_DUAL ( time, timfnd, ier )"]},{"entry":[{},"\u2002gvcord = \u2018NONE\u2019"]},{"entry":[{},"\u2003\u2003\u2003\u2003glevel = \u20180\u2019"]},{"entry":[{},"\u2002gfunc = \u2018QUO(NET,.003048)\u2019"]},{"entry":[{},"\u2002CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, etop,"]},{"entry":[{},"\u2003\u2003\u2003+ \u2003igx, igy, time, level, ivcord, parm, iret )"]},{"entry":[{},"C"]},{"entry":[{},"C* Open edr file and read edr data."]},{"entry":[{},"C"]},{"entry":[{},"\u2002CALL DG_NFIL ( gdefile, gdout, iret )"]},{"entry":[{},"\u2002IF ( iret .ne. 0 ) THEN"]},{"entry":[{},"\u2003\u2002write (6,*) \u2018Unable to process edr file input\u2019"]},{"entry":[{},"\u2003\u2002STOP"]},{"entry":[{},"\u2002END IF"]},{"entry":[{},"\u2002CALL DG_NDTM ( fhedr, iret )"]},{"entry":[{},"\u2002grdnam = \u2018 \u2019"]},{"entry":[{},"\u2002gpack = \u2018NONE\u2019"]},{"entry":[{},"\u2002CALL DG_NTIM ( .false., .false., time, nxttm, ier )"]},{"entry":[{},"\u2002CALL TG_DUAL ( time, timfnd, ier )"]},{"entry":[{},"\u2002gvcord = \u2018NONE\u2019"]},{"entry":[{},"\u2003\u2003\u2003\u2003glevel = \u20180\u2019"]},{"entry":[{},"\u2002gfunc = \u2018EQLV\u2019"]},{"entry":[{},"\u2002CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, el,"]},{"entry":[{},"\u2003\u2003\u2003+ \u2003igx, igy, time, level, ivcord, parm, iret )"]},{"entry":[{},"\u2003\u2003\u2003\u2003maxpts = igx*igy"]},{"entry":[{},"C*"]},{"entry":[{},"\u2002gvcord = \u2018HGHT\u2019"]},{"entry":[{},"\u2002CALL LV_CORD ( gvcord, sparm, ivcord, iret )"]},{"entry":[{},"C"]},{"entry":[{},"C* Find levels."]},{"entry":[{},"C"]},{"entry":[{},"\u2002CALL DG_GLEV ( 1, time, ivcord, LLMXLV,"]},{"entry":[{},"\u2003\u2003\u2003+ \u2003iflev, nlev, iret )"]},{"entry":[{},"\u2002DO j = 1, nlev"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003rlevel (j) = FLOAT ( iflev (1,j) )"]},{"entry":[{},"\u2002END DO"]},{"entry":[{},"\u2002CALL LV_SORT ( ivcord, nlev, rlevel, iret )"]},{"entry":[{},"C"]},{"entry":[{},"C"]},{"entry":[{},"\u2002DO j = 1, nlev"]},{"entry":[{},"\u2003\u2002CALL ST_INCH ( INT(rlevel(j)), glevel, iret )"]},{"entry":[{},"C"]},{"entry":[{},"C* \u2003Read edr grid."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2002gvcord = \u2018HGHT\u2019"]},{"entry":[{},"\u2003\u2002gfunc = \u2018EDR\u2019"]},{"entry":[{},"\u2003\u2002CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, edr,"]},{"entry":[{},"\u2003\u2003\u2003+ \u2003igx, igy, time, level, ivcord, parm, iret )"]},{"entry":[{},"C"]},{"entry":[{},"C* \u2003\u2003\u2003Mask edr data with echo tops > el."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003\u2003DO i = 1, maxpts"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003IF ( etop(i) .eq. RMISSD .or. el(i) .eq. RMISSD ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003edr(i) = RMISSD"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003ELSE IF ( etop(i) .lt. el(i) ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003\u2003edr(i) = 0.0"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003END DO"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Observations may be, by way of non-limiting example, radar, satellite, and\/or lightning data and the future derived observations may be numerically predicted future projections of radar, satellite, and\/or lightning; and\/or the like. Observations may be received and\/or imported as data files representing data such as is shown in . In the case of radar data, only those radar areas whose tops exceed the equilibrium level (EL)\u2014the level at which storm updrafts begin to decelerate (e.g., calculated as discussed previously)\u2014mask the VVSTORMSE potential turbulence area at each altitude.  illustrates determined equilibrium levels for this example. Whenever storm tops exceed the EL, the storms have reached their full potential to produce turbulence. A non-limiting example of masking is illustrated by the example code fragment below:",{"@attributes":{"id":"p-0174","num":"0173"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["C",{}]},{"entry":["C*","\u2003\u2003\u2003Mask edr data with echo tops > el."]},{"entry":"C"},{"entry":[{},"DO i = 1, maxpts"]},{"entry":[{},"\u2003\u2003\u2003\u2003IF ( etop(i) .eq. RMISSD .or. el(i) .eq. RMISSD ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003edr(i) = RMISSD"]},{"entry":[{},"\u2003\u2003\u2003\u2003ELSE IF ( etop(i) .lt. el(i) ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003edr(i) = 0.0"]},{"entry":[{},"\u2003\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003\u2003END DO"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Similarly, in some implementations, satellite derived convective cloud nowcasts may be applied to additionally or alternatively mask off convectively induced turbulence areas. Lightning density data above a specified threshold(s) or parameter(s) may also be used as a mask in some embodiments. In some embodiments of the DATCM, the VVSTORMSE is configured to discern more detail about the turbulence threat than a simple binary (yes\/no) answer that a radar-only or a lightning-only decision method would make. The innovative combination of observations and forecasts enabled by DATCM and\/or VVSTORMSE provide storm observations in proper context, and reducing or eliminating the need for user-interpretation.","In one implementation of the DATCM, VVSTORMSE finds a parcel based on specified parameters, such as the most unstable parcel below the 500 mb level, at each grid point. Then it lifts this parcel to find its level of free convection (LFC) if there is one. If it has an LFC, then VVSTORMSE determines the upward vertical velocity that the parcel would have. VVSTORMSE determines the turbulence potential in eddy dissipation rate (EDR) from the potential vertical velocity, the maximum vertical velocity defining the equilibrium level (EL), the level at which the parcel begins to decelerate. Then VVSTORMSE determines a potential downward vertical velocity and the potential EDR from potential downward motion. In such an implementation, VVSTORMSE determines potential EDR grids at flight levels at specified intervals, such as every 1000 ft from the surface to the numerical calculation's highest level, such as is shown in the exemplary code fragment below:",{"@attributes":{"id":"p-0177","num":"0176"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003Open radar file and read echo tops."},{"entry":"C"},{"entry":"CALL DG_NFIL ( gdrfile, \u2018\u2019, iret )"},{"entry":"IF ( iret .ne. 0 ) THEN"},{"entry":"\u2003write (6,*) \u2018Unable to process radar file input\u2019"},{"entry":"\u2003STOP"},{"entry":"END IF"},{"entry":"CALL DG_NDTM ( fhrdr, iret )"},{"entry":"grdnam = \u2018 \u2019"},{"entry":"gpack = \u2018NONE\u2019"},{"entry":"CALL DG_NTIM ( .false., .false., time, nxttm, ier )"},{"entry":"CALL TG_DUAL ( time, timfnd, ier )"},{"entry":"gvcord = \u2018NONE\u2019"},{"entry":"\u2003\u2003\u2003\u2003glevel = \u20180\u2019"},{"entry":"gfunc = \u2018QUO(NET,.003048)\u2019"},{"entry":"CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, etop,"},{"entry":"\u2003\u2003\u2003+ \u2003\u2003\u2003igx, igy, time, level, ivcord, parm, iret )"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003\u2003Open edr file and read edr data."},{"entry":"C"},{"entry":"CALL DG_NFIL ( gdefile, gdout, iret )"},{"entry":"IF ( iret .ne. 0 ) THEN"},{"entry":"\u2003write (6,*) \u2018Unable to process edr file input\u2019"},{"entry":"\u2003STOP"},{"entry":"END IF"},{"entry":"CALL DG_NDTM ( fhedr, iret )"},{"entry":"grdnam = \u2018 \u2019"},{"entry":"gpack = \u2018NONE\u2019"},{"entry":"CALL DG_NTIM ( .false., .false., time, nxttm, ier )"},{"entry":"CALL TG_DUAL ( time, timfnd, ier )"},{"entry":"gvcord = \u2018NONE\u2019"},{"entry":"\u2003\u2003\u2003\u2003glevel = \u20180\u2019"},{"entry":"gfunc = \u2018EQLV\u2019"},{"entry":"CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, el,"},{"entry":"\u2003\u2003\u2003+ \u2003\u2003\u2003igx, igy, time, level, ivcord, parm, iret )"},{"entry":"\u2003\u2003\u2003\u2003maxpts = igx*igy"},{"entry":"C*"},{"entry":"gvcord = \u2018HGHT\u2019"},{"entry":"CALL LV_CORD ( gvcord, sparm, ivcord, iret )"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003Find levels."},{"entry":"C"},{"entry":"CALL DG_GLEV ( 1, time, ivcord, LLMXLV,"},{"entry":"\u2003\u2003\u2003+ \u2003\u2003\u2003iflev, nlev, iret )"},{"entry":"DO j = 1, nlev"},{"entry":"\u2003\u2003\u2003\u2003\u2003rlevel (j) = FLOAT ( iflev (1,j) )"},{"entry":"END DO"},{"entry":"CALL LV_SORT ( ivcord, nlev, rlevel, iret )"},{"entry":"C"},{"entry":"C"},{"entry":"DO j = 1, nlev"},{"entry":"\u2003CALL ST_INCH ( INT(rlevel(j)), glevel, iret )"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003Read edr grid."},{"entry":"C"},{"entry":"\u2003gvcord = \u2018HGHT\u2019"},{"entry":"\u2003gfunc = \u2018EDR\u2019"},{"entry":"\u2003CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, edr,"},{"entry":"\u2003\u2003\u2003+ \u2003\u2003\u2003igx, igy, time, level, ivcord, parm, iret )"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003Mask edr data with echo tops > el."},{"entry":"C"},{"entry":"\u2003\u2003DO i = 1, maxpts"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003IF ( etop(i) .eq. RMISSD .or. el(i) .eq. RMISSD ) THEN"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003edr(i) = RMISSD"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003ELSE IF ( etop(i) .lt. el(i) ) THEN"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003edr(i) = 0.0"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003END IF"},{"entry":"\u2003\u2003\u2003\u2003\u2003END DO"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"For example,  provides an example VVSTORMSE component output of turbulence potential for one such grid at FL250 from the one-hour rapid refresh forecast verifying at 1500 UTC. The figure shows widespread potential for strong turbulence (e.g., EDR>0.55).","VVSTORMSE and\/or a second VVSTORMSE component\/subcomponent and\/or program may then mask the potential turbulence forecast with convective observations and future-derived observations, including radar echo tops, lightning strikes, and satellite data, including but not limited to satellite overshoot detection data. Depending on the implementation, observations may be radar, satellite, lightning data, and\/or the like, and the future-derived observations may be numerically predicted future projections of radar, satellite, lightning, and\/or the like. In some embodiments, for radar data, only those radar areas whose tops exceed the EL mask of the VVSTORMSE potential turbulence area(s) at each altitude are utilized. In some implementations, when storm tops exceed the EL, the storms may be specified as having reached their full potential to produce turbulence.",{"@attributes":{"id":"p-0180","num":"0179"},"figref":["FIG. 30B","FIG. 30F"]},{"@attributes":{"id":"p-0181","num":"0180"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003\u2003Open radar file and read echo tops."},{"entry":"C"},{"entry":"CALL DG_NFIL ( gdrfile, \u2018\u2019, iret )"},{"entry":"IF ( iret .ne. 0 ) THEN"},{"entry":"\u2003write (6,*) \u2018Unable to process radar file input\u2019"},{"entry":"\u2003STOP"},{"entry":"END IF"},{"entry":"CALL DG_NDTM ( fhrdr, iret )"},{"entry":"grdnam = \u2018 \u2019"},{"entry":"gpack = \u2018NONE\u2019"},{"entry":"CALL DG_NTIM ( .false., .false., time, nxttm, ier )"},{"entry":"CALL TG_DUAL ( time, timfnd, ier )"},{"entry":"gvcord = \u2018NONE\u2019"},{"entry":"\u2003\u2003\u2003\u2003glevel = \u20180\u2019"},{"entry":"gfunc = \u2018QUO(NET,.003048)\u2019"},{"entry":"CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, etop,"},{"entry":"\u2003\u2003\u2003+ \u2003\u2003\u2003igx, igy, time, level, ivcord, parm, iret )"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003\u2003Open edr file and read edr data."},{"entry":"C"},{"entry":"CALL DG_NFIL ( gdefile, gdout, iret )"},{"entry":"IF ( iret .ne. 0 ) THEN"},{"entry":"\u2003write (6,*) \u2018Unable to process edr file input\u2019"},{"entry":"\u2003STOP"},{"entry":"END IF"},{"entry":"CALL DG_NDTM ( fhedr, iret )"},{"entry":"grdnam = \u2018 \u2019"},{"entry":"gpack = \u2018NONE\u2019"},{"entry":"CALL DG_NTIM ( .false., .false., time, nxttm, ier )"},{"entry":"CALL TG_DUAL ( time, timfnd, ier )"},{"entry":"gvcord = \u2018NONE\u2019"},{"entry":"\u2003\u2003\u2003\u2003glevel = \u20180\u2019"},{"entry":"gfunc = \u2018EQLV\u2019"},{"entry":"CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, el,"},{"entry":"\u2003\u2003\u2003+ \u2003\u2003\u2003igx, igy, time, level, ivcord, parm, iret )"},{"entry":"\u2003\u2003\u2003\u2003maxpts = igx*igy"},{"entry":"C*"},{"entry":"gvcord = \u2018HGHT\u2019"},{"entry":"CALL LV_CORD ( gvcord, sparm, ivcord, iret )"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003\u2003Find levels."},{"entry":"C"},{"entry":"CALL DG_GLEV ( 1, time, ivcord, LLMXLV,"},{"entry":"\u2003\u2003\u2003+ \u2003\u2003\u2003iflev, nlev, iret )"},{"entry":"DO j = 1, nlev"},{"entry":"\u2003\u2003\u2003\u2003\u2003rlevel (j) = FLOAT ( iflev (1,j) )"},{"entry":"END DO"},{"entry":"CALL LV_SORT ( ivcord, nlev, rlevel, iret )"},{"entry":"C"},{"entry":"C"},{"entry":"DO j = 1, nlev"},{"entry":"\u2003CALL ST_INCH ( INT(rlevel(j)), glevel, iret )"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003\u2003\u2003Read edr grid."},{"entry":"C"},{"entry":"\u2003gvcord = \u2018HGHT\u2019"},{"entry":"\u2003gfunc = \u2018EDR\u2019"},{"entry":"\u2003CALL DG_GRID ( timfnd, glevel, gvcord, gfunc, pfunc, edr,"},{"entry":"\u2003\u2003\u2003+ \u2003\u2003\u2003igx, igy, time, level, ivcord, parm, iret )"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003Mask edr data with echo tops > el."},{"entry":"C"},{"entry":"\u2003\u2003DO i = 1, maxpts"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003IF ( etop(i) .eq. RMISSD .or. el(i) .eq. RMISSD ) THEN"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003edr(i) = RMISSD"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003ELSE IF ( etop(i) .lt. el(i) ) THEN"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003edr(i) = 0.0"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003END IF"},{"entry":"\u2003\u2003\u2003\u2003\u2003END DO"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0182","num":"0181"},"figref":["FIG. 30C","FIG. 30A","FIG. 30B"]},"In some embodiments, lightning flash density data within identified parameters\/above a specified threshold may be used as a mask, as illustrated in .  illustrates lightning flash density per 100 kmin the 10 minutes prior to 1500 UTC, although other parameters, factors and\/or measures may be utilized, depending on the embodiment, for example, lightning data may be determined and\/or received and\/or processed on a regional, national and\/or global scale. In the figure, the lightning flash density appears to be highest over central Illinois. Lightning flash density information may be derived from a variety of sources, including stationary sensors, mobile sensors, satellites, and\/or the like. Real-time or near real-time lightning flash or strike data may also be provided via a feed, such as SCHNEIDER ELECTRIC MXVISION WEATHERSENTRY and\/or NATIONAL LIGHTNING DETECTION NETWORK data. In some embodiments, the DATCM may utilize real-time lightning detection data and\/or data directed to advance warning of impending lightning, including quantifiable parameters such as the time and location of recent strikes and dynamics, such as rate of movement, direction and intensity of the associated storm. In some embodiments, lightning grid data, such as illustrated in , is generated by creating an initial grid of zeros where lightning point data is placed on the grid by rounding the latitude\/longitude pairs to the nearest grid point which creates a grid of lightning density, which may then be provided as input to the VVSTORMSE component. In some embodiments, lightning data is generated by creating an initial 3-Dimensional grid of zeros where lightning point data is placed on the 3D grid by rounding the latitude\/longitude\/altitude triples to the nearest 3D grid point which creates a three dimensional grid of lightning density, which may then be provided as input to the VVSTORMSE component.",{"@attributes":{"id":"p-0184","num":"0183"},"figref":["FIG. 30E","FIG. 30A","FIG. 30D","FIGS. 30C and 30E"]},"Note that not all highlighted areas in  are for severe turbulence (colored red). In some embodiments, DATCM\/VVSTORMSE has the ability to discern more detail about the turbulence threat than a simple binary (e.g., yes\/no) answer that a radar-only or a lightning-only decision method would provide. The unique combination of observations and forecasts of DATCM\/VVSTORMSE provide storm observations into proper context, without requiring user interpretation.","In some embodiments, the DATCM\/VVSTORMSE finds the most unstable air parcel and assumes that the parcel has potential instability at the LFC. The DATCM determines if the parcel is moist, and if so, lifts the parcel along the moist adiabat (moist lifting line). Such implementations allow for determination of interrelated factors, for example, knowing how high the parcel is lifted (e.g., to the next level) can be used to determine the moisture content and temperature based on the interrelationship. If the parcel is not moist, the EDR may, in some implementations, be set to null, although in some embodiments, if the parcel is not moist, the parcel may be raised along the dry adiabat (or dry lifting line). The DATCM may compare lifted temperature to the environmental temperature to determine a buoyant acceleration. The DATCM may utilize the acceleration and vertical velocity at the base of the layer to identify the vertical velocity at the top of the layer, and may compute the updraft EDR based on the updraft speed.","The DATCM, in some embodiments, determines the downdraft EDR based on the maximum value of the downdraft (e.g., maximum downdraft velocity). In some implementations, the DATCM begins at the freezing level (i.e., the level in atmosphere where temp is zero degrees Celsius) and accelerates (e.g., via linear interpolation from freezing level to the surface level) until the maximum velocity at the level of the ground.","The DATCM utilizes updraft and\/or downdraft parameters (i.e., velocities) to compute EDRS. In some embodiments, for example, if downdraft velocity is greater than updraft velocity at a given point, the downdraft velocity is used to determine the EDR for the point. In some embodiments of the DATCM\/VVSTORMSE, if a parcel in a layer is warmer than its environment, it gets accelerated upward, and that acceleration\/velocity used to compute EDR. In some implementations, the DATCM utilizes vertical temperature change in determining the EDR, while further implementations also utilize horizontal temperature changes.",{"@attributes":{"id":"p-0189","num":"0188"},"figref":"FIG. 31","b":["3130","3132","3132","3134","3136","3138"]},{"@attributes":{"id":"p-0190","num":"0189"},"figref":"FIG. 31","b":["3130","3132","3132","3134","3136","3138"]},{"@attributes":{"id":"p-0191","num":"0190"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"C------------------------------------------------------------------------"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["IF","( ERMISS ( thte ) .or. ERMISS ( pres )"]},{"entry":[{},"\u2002+ \u2003\u2003\u2003\u2003\u2003.or. ERMISS ( tguess ) .or. ( thte .le. 0. )"]},{"entry":[{},"\u2002+ \u2003\u2003\u2003\u2003.or. ( pres .le. 0 ) .or. ( tguess .lt. 0. ) ) THEN"]},{"entry":[{},"PR_TMST = RMISSD"]},{"entry":[{},"RETURN"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"END IF"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003Move tguess into another variable."},{"entry":"C"},{"entry":"tg = tguess"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003If TGUESS is passed as 0. it is computed from an MIT"},{"entry":"scheme."},{"entry":"C"},{"entry":"IF \u2002( tg .eq. 0. ) tg ="},{"entry":"\u2003\u2003* \u2003\u2003\u2002(thte \u2212 .5 * ( MAX ( thte\u2212270., 0. ) ) ** 1.05 )"},{"entry":"\u2003\u2003* \u2003\u2003\u2002* ( pres \/ 1000. ) ** .2"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003Set convergence and initial guess in degrees C."},{"entry":"C"},{"entry":"epsi = .01"},{"entry":"tgnu = PR_TMKC ( tg )"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003Set a limit of 100 iterations. Compute TENU, TENUP, the"},{"entry":"C* \u2003\u2003\u2003\u2003THTE's at, one degree above the guess temperature."},{"entry":"C"},{"entry":"DO i = 1, 100"},{"entry":"\u2003tgnup = tgnu + 1."},{"entry":"\u2003tenu = PR_THTE ( pres, tgnu, tgnu )"},{"entry":"\u2003tenup = PR_THTE ( pres, tgnup, tgnup )"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003\u2003Check that the THTE's exist."},{"entry":"C"},{"entry":"\u2003IF \u2002( ( ERMISS ( tenu ) ) .or. ( ERMISS ( tenup ) ) ) THEN"},{"entry":"\u2003\u2003\u2002PR_TMST = RMISSD"},{"entry":"\u2003\u2003\u2002RETURN"},{"entry":"\u2003END IF"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003\u2003Compute the correction, DELTG; return on convergence."},{"entry":"C"},{"entry":"\u2003cor = ( thte \u2212 tenu ) \/ ( tenup \u2212 tenu )"},{"entry":"\u2003tgnu = tgnu + cor"},{"entry":"\u2003IF \u2002( ( cor .lt. epsi ) .and. ( \u2212cor .lt. epsi ) ) THEN"},{"entry":"\u2003\u2003\u2002PR_TMST = PR_TMCK ( tgnu )"},{"entry":"\u2003\u2003\u2002RETURN"},{"entry":"\u2003END IF"},{"entry":"END DO"},{"entry":"C"},{"entry":"C* \u2003\u2003\u2003\u2003Failed to converge - return missing."},{"entry":"C"},{"entry":"PR_TMST = RMISSD"},{"entry":"RETURN"},{"entry":"END"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The DATCM may determine the difference between the parcel temperature and the environment temperature  and determines the vertical acceleration  (e.g., based on the layer thickness, temperature difference, environmental temperature, gravitational constant, and\/or the like). If the parcel is moist , and if the lifted condensation level pressure is not greater than the current layer pressure level , the vertical acceleration is set to zero . The vertical velocity at the top of the layer is determined  (e.g., based on the acceleration and the base vertical velocity) and the mean upward vertical velocity for the parcel is determined  (e.g., based on the average of the base and top vertical velocities). The mean vertical velocity may then be utilized to determine the updraft EDR  for that layer\/parcel. The actual downward vertical velocity is determined  (e.g., based on the freezing level and maximum downward vertical velocity) and the downdraft EDR determined  for that layer\/parcel. The DATCM determines the overall EDR  from the updraft and downdraft determinations, for example, in some implementations, the larger of the updraft EDR and downdraft EDR.","The DATCM may then retrieve and\/or receive masking data , such as radar echo top data and\/or lightning flash density data. In the radar echo top data implementation, for each layer (point), if the echo top is less than the equilibrium level , the EDR is masked  (e.g., set to zero). If the echo top is not less than the equilibrium level , the EDR is unchanged .",{"@attributes":{"id":"p-0194","num":"0193"},"figref":"FIG. 32","b":["3230","3232","3232","3234","3235","3232","3234","3236","3238","3240","3242","3235","3242","3244","3246","3247","3246","3248","3250","3252","3254","3258","3258","3269"]},{"@attributes":{"id":"p-0195","num":"0194"},"figref":"FIG. 33","b":["3301","3302","3303"],"sub":"mv"},{"@attributes":{"id":"p-0196","num":"0195"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"C"]},{"entry":[{},"C* a is the non-dimensional wave amplitude (at mountain top)"]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003a (i,m,n) = stab0*h(m,n)\/spd0"]},{"entry":[{},"\u2003\u2003h0 (m,n) = a(i,m,n)"]},{"entry":[{},"C"]},{"entry":[{},"C* ddrct is the wind and mountain top wind direction difference"]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003ddrct = ABS(drct\u2212drct0(m,n))"]},{"entry":[{},"\u2003\u2003IF ( (ddrct .lt. 90.0) .or. (ddrct .gt. 270.0) ) THEN"]},{"entry":[{},"C"]},{"entry":[{},"C* a above the mountain top is adjusted for stability, wind,"]},{"entry":[{},"C* and density changes."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003\u2003a (i,m,n) = stab*h (m,n)\/spd\/COS (ddrct*DTR)*"]},{"entry":[{},"\u2003\u2003\u2003+ SQRT(pnu0(m,n)\/(pmodel*stab*spd))"]},{"entry":[{},"\u2003\u2003ELSE"]},{"entry":[{},"\u2003\u2003\u2003a (i,m,n) = 0.0"]},{"entry":[{},"\u2003\u2002END IF"]},{"entry":[{},"C"]},{"entry":[{},"C* maximum a is 2.5"]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003IF ( a(i,m,n) .gt. 2.5 ) a(i,m,n) = 2.5"]},{"entry":[{},"C"]},{"entry":[{},"C* Find max \u2018a\u2019 below h0max."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003IF (ll .lt. nlyrs) THEN"]},{"entry":[{},"\u2003\u2003\u2003amax0 = a(ll,m,n) \u2212 (zsdg (ll,m,n)\u2212h0max)\/"]},{"entry":[{},"\u2003\u2003\u2003+ (zsdg(ll,m,n)\u2212zsdg (ll+1,m,n))*"]},{"entry":[{},"\u2003\u2003\u2003+ (a(ll,m,n)\u2212a(ll+1,m,n))"]},{"entry":[{},"\u2003\u2003\u2003lll = ll"]},{"entry":[{},"\u2003\u2003\u2003DO i = ll,1,\u22121"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003IF ( (a (i,m,n) .ne. RMISSD) and."]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003+ (a(i,m,n) .gt. amax0) ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003lll = i\u22121"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003amax0 = a(i,m,n)"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003\u2003END DO"]},{"entry":[{},"C"]},{"entry":[{},"C* \u2018a\u2019 is increased at all levels below max \u2018a\u2019."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003\u2003DO i = lll,1,\u22121"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003IF (a (i,m,n) .ne. RMISSD) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003a (i,m,n) = amax0"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003enhc (i,m,n) = 1.0"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2003\u2003END DO"]},{"entry":[{},"\u2003\u2002END IF"]},{"entry":[{},"C"]},{"entry":[{},"C* Find .75 vertical wavelength (and 1.75, 2.75, 3.75)."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003zrefl = (nn + .75) *lambda (m,n) + elv(m,n)"]},{"entry":[{},"\u2003\u2003ll = 1"]},{"entry":[{},"\u2003\u2003DO i = 1,nlyrs"]},{"entry":[{},"\u2003\u2003\u2003IF ( zsdg(i,m,n) .lt. zrefl ) ll = i"]},{"entry":[{},"\u2003\u2003END DO"]},{"entry":[{},"\u2003\u2003IF (ll .lt. nlyrs) THEN"]},{"entry":[{},"\u2003\u2003\u2003ar = a(ll,m,n) \u2212 (zsdg(ll,m,n)\u2212zrefl)\/"]},{"entry":[{},"\u2003\u2003\u2003+ (zsdg(ll,m,n)\u2212zsdg(ll+1,m,n))*"]},{"entry":[{},"\u2003\u2003\u2003+ (a(ll,m,n)\u2212a(ll+1,m,n))"]},{"entry":[{},"C"]},{"entry":[{},"C* Find .50 vertical wavelength (and 1.50, 2.50, 3.75)."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003zhalf = (nn + .50)*lambda(m,n) + elv(m,n)"]},{"entry":[{},"\u2003\u2003lll = 1"]},{"entry":[{},"\u2003\u2003DO i = 1,ll"]},{"entry":[{},"\u2003\u2003\u2003IF ( zsdg(i,m,n) .lt. zhalf ) lll = i"]},{"entry":[{},"\u2003\u2003END DO"]},{"entry":[{},"\u2003\u2003ahalf = a (lll,m,n) \u2212 (zsdg(lll,m,n)\u2212zhalf)\/"]},{"entry":[{},"\u2003\u2003+ (zsdg(lll,m,n)\u2212zsdg(lll+1,m,n))*"]},{"entry":[{},"\u2003\u2003+ (a(lll,m,n)\u2212a(lll+1,m,n))"]},{"entry":[{},"C"]},{"entry":[{},"C* \u2018a\u2019 is increased by reflected \u2018a\u2019 if layered"]},{"entry":[{},"C* favorably."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003IF ( ( ahalf .lt. ar ) .and. ( ahalf .lt. 0.85 ) )THEN"]},{"entry":[{},"\u2003\u2003\u2003rcoeff = (ar\u2212ahalf)**2\/(ar+ahalf)**2"]},{"entry":[{},"\u2003\u2003refl = rcoeff*ar"]},{"entry":[{},"\u2003\u2003havrfl = .true."]},{"entry":[{},"\u2003\u2003DO i = ll,1,\u22121"]},{"entry":[{},"\u2003\u2003\u2003IF ( (a(i,m,n) .ne. RMISSD) .and."]},{"entry":[{},"\u2003\u2003\u2003+ (havrfl) ) THEN"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003arfl = a(i,m,n) + refl"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003a (i,m,n) = arfl"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003IF ( a(i,m,n) .gt. 2.5 ) a(i,m,n) = 2.5"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003enhc (i,m,n) = 1.0"]},{"entry":[{},"\u2003\u2003\u2003END IF"]},{"entry":[{},"\u2003\u2002END DO"]},{"entry":[{},"C"]},{"entry":[{},"C* Compute mountain top wave drag"]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003drag (m,n) = PI\/4.0*h(m,n)*pnu0(m,n)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In some embodiments of the DATCM, output obtained from the MWAVE component may then be directed into an integrated turbulence (INTTURB) component, which computes upper level non-dimensional gravity wave amplitude (\u00e2) , and sum \u00e2and \u00e2into (\u00e2) to determine buoyant turbulent kinetic energy (TKE) . If \u00e2 is greater than 1 , then TKE=TKE+TKE. Otherwise, TKE=0 . If \u00e2 greater than \u00e2, then TKE=TKE. The boundary layer eddy dissipation rate (EDR) is computed  and if EDRis greater than zero and \u00e2is not enhanced , then the EDR=EDR, else the EDR is the TKE.","The following code fragment shows one embodiment of a methodology for processing of the INTTURB:",{"@attributes":{"id":"p-0199","num":"0198"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"C* Non-dimensional L-F amplitude is square root of L-F radiation"]},{"entry":[{},"C* divided by constant. Constant is for 20km resolution grids"]},{"entry":[{},"C* and is proportionally scaled to resolution of current grid."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003ahatlf = SQRT(ABS(lfrad)\/cc*gdd\/20000.)"]},{"entry":[{},"C"]},{"entry":[{},"C"]},{"entry":[{},"C* ahat is sum of if and mw ahats"]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003ahat = ahatlf + ahatmw(i)"]},{"entry":[{},"C"]},{"entry":[{},"C* Maximum ahat = 2.5"]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003IF ( ahat .gt. 2.5 ) ahat = 2.5"]},{"entry":[{},"\u2003\u2003IF ( ahat .gt. 1.0 ) THEN"]},{"entry":[{},"C"]},{"entry":[{},"C* mountain wave tke is proportional to drag."]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003tkemw = drag(i)*.0004"]},{"entry":[{},"C"]},{"entry":[{},"C* Reduce mw drag above this level"]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003IF ( nhnc(i) .eq. 0.0 )"]},{"entry":[{},"\u2003\u2003\u2003+ drag(i) = drag(i)*((2.5\u2212ahat)\/1.5)"]},{"entry":[{},"\u2003\u2003\u2003tkebuoy = kh*(ahat\u22121.0)*bvsq(i) + km*wshrsq(i)"]},{"entry":[{},"\u2003\u2003\u2003+ + tkemw"]},{"entry":[{},"\u2003\u2003IF (ahat .lt. 1.0) THEN tkebuoy = 0.0"]},{"entry":[{},"\u2003\u2003tke = km*wshrsq(i)*(1.0 + SQRT(rich)*ahat)**2"]},{"entry":[{},"\u2003\u2003+ \u2212kh*bvsq(i)"]},{"entry":[{},"C"]},{"entry":[{},"C* Compute layer stability and wind shear"]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003thtamn = ( thta + sfcthta )\/2.0"]},{"entry":[{},"\u2003\u2003bvsq = GRAVTY*thtadf\/zdf\/thtamn"]},{"entry":[{},"\u2003\u2003udf = u \u2212 sfcu"]},{"entry":[{},"\u2003\u2003vdf = v \u2212 sfcv"]},{"entry":[{},"\u2003\u2003wshrsq = ( udf*udf + vdf*vdf )\/zdf\/zdf"]},{"entry":[{},"C"]},{"entry":[{},"C* Compute tke with equation"]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003tke = km*wshrsq \u2212 kh*bvsq"]},{"entry":[{},"C"]},{"entry":[{},"C* If the < 0, we've reach top of boundary layer. Set topbl = T"]},{"entry":[{},"C"]},{"entry":[{},"\u2003\u2003IF ( tke .lt. 0.0 ) THEN"]},{"entry":[{},"\u2003\u2003\u2003edrbl = 0.0"]},{"entry":[{},"\u2003\u2003\u2003topbl = .true."]},{"entry":[{},"\u2003\u2002ELSE"]},{"entry":[{},"\u2003\u2003\u2003edrbl = tke**.333"]},{"entry":[{},"\u2003\u2003END IF"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In some embodiments, output obtained from the MWAVE and INTTURB components may then be processed through a VVSTORMSE integration component. For each parcel  a moist determination is made  and if not, the EDR set to null. If the parcel is moist , and if the lifted condensation level pressure is greater than the current layer pressure level , the difference between the parcel temperature and environmental temperature  and vertical acceleration  are determined (e.g., based on the layer thickness, temperature difference, environmental temperature, gravitational constant, and\/or the like). If the parcel is moist , and if the lifted condensation level pressure is not greater than the current layer pressure level , the vertical acceleration is set to zero . The vertical velocity at the top of the layer is determined  and the mean upward vertical velocity is determined . The mean vertical velocity may then be utilized to determine the updraft EDR . The actual downward vertical velocity is determined  and the downdraft EDR determined . The overall EDR is determined  for the layer\/parcel (e.g., based on updraft and downdraft determinations), and the mask\/masking data applied . EDRs from INTURB and VVSTORMSE components are combined\/integrated and output . In some embodiments, the EDRs may be summed. In some embodiments, the EDRs are converted to TKE.",{"@attributes":{"id":"p-0201","num":"0200"},"figref":"FIG. 34"},"Embodiments of the DATCM and\/or the VVSTORMSE component(s) provide a granular view of the vertical distribution of convective turbulence. In some embodiments, the DATCM is configured for flight following. Some embodiments of DATCM combine determinations of non-convective turbulence forecasts and convective turbulence into a nowcast that may be utilized in the variety of ways, including those discussed herein with respect to flight path determination and other aviation and weather-dependent activities and applications. Some implementations of the DATCM integrate forecast turbulence and storm turbulence to provide comprehensive flight planning, flight following, and\/or comprehensive dynamic real-time rerouting for all altitudes. DATCM flight following implementations may provide up-to-date and\/or short term forecasts for aircraft in a given area. In some implementations, alerts\/updates may be provided to aircraft directly, and\/or to dispatchers or other personnel. In some embodiments, the DATCM may be configured to integrate with management suite or application, such as SCHEIDER ELECTRIC AVIATIONSENTRY.","In some embodiments, the DATCM, for example utilizing a VVSTORMSE component, provides a 0-1 hour turbulence nowcast\/forecast based on physical relationships rather than solely based on observational\/statistical relationships. The VVSTORMSE component is configured with flexible input variables, allowing for elegant adaptation to include indicators of current convection, and for and exploitation of the same, rather than requiring a complete recalibration if a new variable is identified.","For example, in some embodiments of the DATCM, the magnitude of the united effects of a conditionally unstable lapse rate and a parcel with a LFC are elegantly combined in a diagnostic called convective available potential energy (CAPE). The DATCM\/VVSTORMSE (VVSTORMSE) may determine (i.e., compute) CAPE by lifting a parcel along the appropriate dry and moist adiabats. If, by lifting, the parcel can become warmer than its environment, the parcel could reach its LFC. Then the parcel will accelerate upward by buoyant forces until it becomes cooler than its environment again\u2014that level is called the Equilibrium Level (EL). The amount of buoyant acceleration at any level is proportional to the temperature difference between the lifted parcel and the environment. Using the determined parcel acceleration, the VVSTORMSE can determine the updraft velocity (w) at any level in a potential storm. In some embodiments, the integrated value of the buoyant potential energy between the LFC and the EL is the CAPE and is equal to the maximum updraft velocity squared over two ((w^2)\/2), where the maximum updraft velocity (w) is a measure of the potential strength of a thunderstorm.","In some embodiments, a typical potentially unstable parcel has to be forcefully lifted to its LFC. The integrated amount of force similarly computed as CAPE between the original parcel level and the LFC is called the convective inhibition (CIN). CIN is a measure of the strength of the \u201ccap,\u201d the stable layer above the parcel level that keeps the parcel at its original level. The energy of forced lifting the parcel needs to be greater than the CIN in order for the parcel to reach its LFC. This process may be referred to as \u201cbreaking\u201d the cap. VVSTORMSE identifies zones of forced upward lifting. If parcels in those zones can be lifted to their LFC, then VVSTORMSE continues tracking the parcel until it returns to zero somewhere above the EL. The maximum upward vertical velocity is a measure of the storm's potential strength. The level where the upward velocity returns to zero is a measure of its potential top. If parcels cannot reach their LFC or if parcels have no LFC, then no thunderstorms can form. Maximum vertical speeds that result from forced lifting in current observed or numerical forecast diagnostics are only about 10 cm\/s. These motions would be sufficient if CIN values were zero. However, CIN values can be 100 j\/kg or more in an otherwise favorable environment. Even if CIN=0.5 j\/kg, the forced vertical speed to overcome that value would be 1 m\/s. As such, traditional numerical diagnostic vertical motions may be inadequately low.","In some embodiments, VVSTORMSE utilizes numerical data to determine vertical motion for lifting from three diagnostics: the dataset's own omega field, vertical motion arising from divergence of frontogenesis vectors, and vertical motion arising from Eckman pumping. The dataset's omega provides sources of vertical motion from processes such as temperature advection and terrain elevation changes. Frontogenesis vectors contain divergence, vorticity, and deformation forcing information so are a complete kinematic description of the vertical motion field. Eckman pumping describes the frictional forcing of vertical motion at the top of the boundary layer and is proportional to the vorticity.","In some embodiments, VVSTORMSE may utilize a framework for convective triggers in numerical mechanisms. In some embodiments, VVSTORMSE inflates the maximum diagnostic (w) by:\n\n*(1\u2212)\n","where wis the diagnostic vertical velocity, \u03b4x is the grid resolution, L=the grid resolution need to explicitly resolve the vertical motion (e.g., 1 km), zis the height above ground, and H=is the threshold height (e.g., 4000 m). This inflated vertical velocity is the maximum possible with the given environmental conditions. The formula shows that the higher the grid resolution (lower \u03b4x), the less the inflation. Also, the inflation effect decreases the higher above ground. For example, using a 40 km resolution, a parcel 1 km above ground will have a parameterized vertical velocity 30 (40\u00d70.75) times that computed by a diagnostic. With this formula, a parameterized vertical velocity can be computed at any grid resolution and at every grid level. In some embodiments, at any grid point, a diagnostic vertical velocity may first be determined\/computed at the lowest level above ground. If, at the inflated vertical velocity, a parcel reaches its LFC, VVSTORMSE may continue to track the parcel's vertical velocity as it rises buoyantly. If there is a more unstable parcel aloft or if the forced vertical velocity is higher aloft, then the process may begin again at the new level.","In a horizontal temperature gradient parcels have an additional instability that arises from an inertial imbalance. This instability reduces CINs and increases CAPEs. Since this additional instability is a function of the square of the temperature gradient, it may be most prominent in frontal zones where thunderstorms are likely to be forced. In some implementations, VVSTORMSE adjusts the layer stability for this effect before determining the parcel's acceleration.","In some embodiments, parcel buoyancy is reduced by an elegant bulk entrainment function in which the parcel's wet bulb potential temperature is diluted by a 1% of the environment's wet bulb potential temperature for a given rise (e.g., every 100 m rise) of the parcel.","Once thunderstorms form, they may continue to exist even without external lifting mechanisms by creating internal gust fronts that lift parcels into their updrafts. Utilizing mass conservation, the speed of the lifted parcel at the updraft base (w) is proportional to the maximum updraft speed by the ratio of the densities at the updraft maximum and at the lifted parcel level. If a forecast updraft exists and the difference between forecast times is below a set level (e.g., three hours or less), for the next forecast time VVSTORMSE predicts where that updraft base will be using a combinatorial storm motion forecasting techniques. The parcel at that new location is lifted at the wspeed. If it is able to reach its LFC, then VVSTORMSE may create a new updraft. In addition, VVSTORMSE may simulate downdraft effects by suppressing the new forecast time's forced lifting at the storm's old location and at all points between the old and new locations. Such an implementation allows VVSTORMSE to predict a storm's location in an area without any lift evident from the diagnostics.",{"@attributes":{"id":"p-0212","num":"0211"},"figref":["FIG. 35","FIG. 36","FIG. 37"]},"Some embodiments of the DATCM provide an integrated turbulence product for use in flight planning, and the product may integrate code\/components from turbulence components including ULTURB, BLTURB, and MWAVE into one component\/program called INTTURN and another integrating VVTURB with ULTURB and BLTURB called VVINTTURB. Output from a component may in some embodiments be in eddy dissipation rate (EDR), an aircraft-independent metric of turbulence intensity. The component\/program may, for example, assign an EDR value at each grid point and at each flight level (FL). Observations of turbulence may also be used for further tuning of the forecast where and when they are available in the near term forecast.  illustrate an example of such an integration of turbulence components in a region where mountain wave and upper level turbulence coexist.  depicts a 3-hour ULTURB forecast for FL340 from the RUC2 calculation verifying 0900UTC,  depicts a 3-hour MWAVE forecast for FL340 from the RUC2 calculation verifying 0900UTC (+\u2032y), and  depicts a 3-hour integrated turbulence forecast for FL340 from the RUC2 calculation verifying 0900UTC (+1y). Note that, while barely any turbulence from MWAVE, and no turbulence from ULTURB, appear in at least some portions of their respective forecasts, the integration of the two together shows severe turbulence. Also note how MWAVE turbulence over Utah is enhanced.",{"@attributes":{"id":"p-0214","num":"0213"},"figref":["FIGS. 39A-39D","FIGS. 39A and 39B","FIGS. 39C and 39D"]},{"@attributes":{"id":"p-0215","num":"0214"},"figref":["FIG. 40","FIG. 40","FIG. 41","FIG. 40"]},"An example flow diagram depicting an integrated turbulence forecast process according to some embodiments is provided in . In this example, the data input may include temperatures, winds, humidity, heights, and\/or observations such as pilot\/aircraft eddy dissipation rate (EDR) values. EDR value is defined as the rate at which kinetic energy from turbulence is absorbed by breaking down the eddied smaller and smaller until all of the energy is converted to heat by viscous forces. EDR is expressed as kinetic energy per unit mass per second in units of velocity squared per second (m\/s). Data inputs and\/or terrain statistics may be incorporated into the computation of MWAVE, INTTURB, and VVTURB2, which are in turn factored into a turbulence forecast. An \u2018inflight\u2019 time sequence of forecasted turbulence (in units of EDR*100), as may be generated in some embodiments, is provided in tabular form in .","In some embodiments, the output generated by the DATCM is a 4D grid of EDR values in one or more forms, such as GRIB2 format and\/or GIS shapefiles, an example of which is provided in . EDR is the cube root of the turbulent kinetic energy (TKE). As such, in some embodiments adding the EDR values together from VVTURB2 and INTTURB may be accomplished by first converting the values into TKE, adding them together, and then converting back to EDR (i.e., by taking the cube root of the sum). The example Shapefile output depicted in  is for FL300, and could be used with any GIS geospatial display system.",{"@attributes":{"id":"p-0218","num":"0217"},"figref":["FIG. 45B","FIG. 45A","FIG. 45B"]},"Throughout this disclosure, \u2018atmospheric data\u2019 may refer to any environmental data related to the atmosphere, e.g., at some point of interest. By way of non-limiting example, the atmospheric data received and\/or processed by the DATCM may include one or more of the following: temperature, moisture\/water content, humidity, pressure, wind speed, wind direction, local EDR, wind shear, liquid water content, ozone concentration, pollution, and\/or the like. Atmospheric data may comprise partial or full contents of forecasts (e.g., numerical weather forecast data), meteograms, atmospheric soundings, surface observations, radar pictures, meteorological charts (e.g., surface pressure charts), weather maps, numerical weather prediction maps, and\/or the like. Atmospheric data may, in some embodiments, be obtained directly or indirectly from sensors (e.g., infrared radiometers, microwave radiometers, hygrometers, pitot-static systems, gyroscopes, thermometers, barometers, optical sensors, radar, lidar, sodar, ceilometers, spectrometers, weather balloons, water vapor sensors, and\/or the like), as well as from pilot reports. Depending on the embodiment, instruments (e.g., sensors) for measuring the atmospheric data used by the DATCM may be positioned in\/on the aircraft itself, may be located on earth (e.g., as part of a grounded weather station), and\/or may be part of an extraneous system, such as a weather balloon, a satellite, or avionics on another aircraft\/spacecraft, etc.","Various embodiments of the DATCM are contemplated by this disclosure, with the below exemplary, non-limiting embodiments A1-E3 provided to illustrate aspects of some implementations of embodiments of the DATCM.","A1. A dynamic DATCM platform processor-implemented flight planning method, comprising: receiving parameter data for an initial anticipated flight plan; determining airfoil type for an aircraft associated with the initial anticipated flight plan; obtaining atmospheric data based on the flight plan parameter data; determining a plurality of four-dimensional grid points based on the flight plan parameter data; determining corresponding icing data for each point of the plurality of four-dimensional grid point based on the airfoil type; determining via a processor a percent power increase for the initial anticipated flight plan; determining an at least one alternative flight plan based on the flight plan parameter data and the determined percent power increase for the initial anticipated flight plan; and providing the determined at least one alternative flight plan.","A2. The method of embodiment A1, wherein the parameter data includes aircraft data.","A3. The method of embodiment A1 or A2, wherein the parameter data includes the airfoil type.","A4. The method of any of the preceding embodiments, wherein the initial anticipated flight plan comprises a shortest route flight plan.","A5. The method of any of the preceding embodiments, wherein the at least one alternative flight plan comprises an optimized route flight plan.","A6. The method of embodiment A5, wherein the optimized route flight plan is optimized for safety.","A7. The method of embodiment A6, wherein the optimized route flight plan is optimized for safety and fuel consumption.","A8. The method of any of the preceding embodiments, wherein the flight plan parameter data includes take-off time.","A9. The method of any of the preceding embodiments, wherein the flight plan parameter data includes take-off location.","A10. The method of any of the preceding embodiments, wherein the flight plan parameter data includes destination location.","A11. A dynamic DATCM platform flight planning system, comprising: means to receive parameter data for an initial anticipated flight plan; means to determine airfoil type for an aircraft associated with the initial anticipated flight plan; means to obtain atmospheric data based on the flight plan parameter data; means to determine a plurality of four-dimensional grid points based on the flight plan parameter data; means to determine corresponding icing data for each point of the plurality of four-dimensional grid point based on the airfoil type; means to determine a percent power increase for the initial anticipated flight plan; means to determine an at least one alternative flight plan based on the flight plan parameter data and the determined percent power increase for the initial anticipated flight plan; and means to provide the determined at least one alternative flight plan.","A12. The system of embodiment A11, wherein the parameter data includes aircraft data.","A13. The system of embodiment A11 or A12, wherein the parameter data includes the airfoil type.","A14. The system of any of embodiment(s) A11, A12, or A13, wherein the initial anticipated flight plan comprises a shortest route flight plan.","A15. The system of any of embodiment(s) A11, A12, A13, or A14, wherein the at least one alternative flight plan comprises an optimized route flight plan.","A16. The system of embodiment A15, wherein the optimized route flight plan is optimized for safety.","A17. The system of embodiment A15 or A16, wherein the optimized route flight plan is optimized fuel consumption.","A18. The system of any of embodiment(s) A11, A12, A13, A14, A15, A16, or A17, wherein the flight plan parameter data includes take-off time.","A19. The system of any of embodiment(s) A11, A12, A13, A14, A15, A16, A17, or A18, wherein the flight plan parameter data includes take-off location.","A20. The system of any of embodiment(s) A11, A12, A13, A14, A15, A16, A17, A18, or A19, wherein the flight plan parameter data includes destination location.","A21. A processor-readable non-transitory medium storing processor-issuable dynamic DATCM flight plan generating instructions to: receive parameter data for an initial anticipated flight plan; determine airfoil type for an aircraft associated with the initial anticipated flight plan; obtain atmospheric data based on the flight plan parameter data; determine a plurality of four-dimensional grid points based on the flight plan parameter data; determine corresponding icing data for each point of the plurality of four-dimensional grid point based on the airfoil type; determine a percent power increase for the initial anticipated flight plan; determine an at least one alternative flight plan based on the flight plan parameter data and the determined percent power increase for the initial anticipated flight plan; and provide the determined at least one alternative flight plan.","A22. The medium of embodiment A21, wherein the parameter data includes aircraft data.","A23. The medium of embodiment A21 or A22, wherein the parameter data includes the airfoil type.","A24. The medium of any of embodiment(s) A21, A22, or A23, wherein the initial anticipated flight plan comprises a shortest route flight plan.","A25. The medium of any of embodiment(s) A21, A22, A23, or A24, wherein the at least one alternative flight plan comprises an optimized route flight plan.","A26. The medium of embodiment A25, wherein the optimized route flight plan is optimized for safety.","A27. The medium of embodiment A25 or A26, wherein the optimized route flight plan is optimized for fuel consumption.","A28. The medium of any of embodiment(s) A21, A22, A23, A24, A25, A26, or A27, wherein the flight plan parameter data includes take-off time.","A29. The medium of any of embodiment(s) A21, A22, A23, A24, A25, A26, A27, or A28, wherein the flight plan parameter data includes take-off location.","A30. The medium of any of embodiment(s) A21, A22, A23, A24, A25, A26, A27, A28, or A29, wherein the flight plan parameter data includes destination location.","A31. A dynamic airfoil icing controller\/platform flight planning apparatus, comprising: a processor; and a memory disposed in communication with the processor and storing processor-issuable instructions to: receive parameter data for an initial anticipated flight plan; determine airfoil type for an aircraft associated with the initial anticipated flight plan; obtain atmospheric data based on the flight plan parameter data; determine a plurality of four-dimensional grid points based on the flight plan parameter data; determine corresponding icing data for each point of the plurality of four-dimensional grid point based on the airfoil type; determine a percent power increase for the initial anticipated flight plan; determine an at least one alternative flight plan based on the flight plan parameter data and the determined percent power increase for the initial anticipated flight plan; and provide the determined at least one alternative flight plan.","A32. The apparatus of embodiment A31, wherein the parameter data includes aircraft data.","A33. The apparatus of embodiment A31 or A32, wherein the parameter data includes the airfoil type.","A34. The apparatus of any of embodiment(s) A31, A32, or A33, wherein the initial anticipated flight plan comprises a shortest route flight plan.","A35. The apparatus of any of embodiment(s) A31, A32, A33, or A34, wherein the at least one alternative flight plan comprises an optimized route flight plan.","A36. The apparatus of embodiment A35, wherein the optimized route flight plan is optimized for safety.","A37. The apparatus of embodiment A35 or A36, wherein the optimized route flight plan is optimized fuel consumption.","A38. The apparatus of any of embodiment(s) A31, A32, A33, A34, A35, A36, or A37, wherein the flight plan parameter data includes take-off time.","A39. The apparatus of any of embodiment(s) A31, A32, A33, A34, A35, A36, A37, or A38, wherein the flight plan parameter data includes take-off location.","A40. A dynamic DATCM flight planning method, comprising: receiving a PPI flight parameter input associated with an aircraft; determining an airfoil type for the aircraft associated with the PPI flight parameter input; determining atmospheric data based on the PPI flight parameter input; providing the determined airfoil type and atmospheric data to a PPI component for the determination of a PPI icing avoidance value; receiving, from the PPI component, an indication of the determined PPI icing avoidance value; and providing the determined PPI icing avoidance value in response to the PPI flight parameter input.","A41. The method of embodiment A40, wherein the PPI flight parameter input is configured to represent the present airfoil configuration and atmospheric conditions being experienced by the aircraft.","A42. The method of embodiment A40, wherein the PPI flight parameter input is configured to represent the expected airfoil configuration and atmospheric conditions that will be experienced by the aircraft at a future point in time.","A43. The method of embodiment A40, wherein the determined atmospheric data includes a temperature.","A44. The method of embodiment A40, wherein the determined atmospheric data includes a value associated with the water content of the atmosphere about the aircraft at a point in time.","A45. The method of any of the embodiment(s) A41, A42, A43 or A44 wherein the PPI component is a hardware PPI component.","A46. The method of embodiment A45, wherein the hardware PPI component is an ASIC.","A47. The method of embodiment A45, wherein the hardware PPI component is an FPGA.","A48. The method of any of the embodiment(s) A41, A42, A43 or A44 wherein the PPI component is a PPI component containing processor executable instructions.","A49. The method of any of the embodiment(s) A41, A42, A43 or A44 wherein the PPI component is a PPI component composed of two-or-more sub-components.","A50. The method of embodiment A49, wherein the PPI component is comprised of a first sub-component in hardware for determining a first value associated with the PPI icing avoidance value and a second sub-component containing processor executable instructions for determining a second value associated with the PPI icing avoidance value.","A51. The method of embodiment A50, wherein the first and second value associated with the PPI icing avoidance value are used to determine the PPI icing avoidance value.","AA51. A dynamic DATCM flight planning apparatus, comprising a processor, and a memory disposed in communication with the processor and storing processor-issuable instructions to perform the method of any of embodiments A40-A51.","A52. A dynamic DATCM flight planning system, comprising: means to receive a PPI flight parameter input associated with an aircraft; means to determine an airfoil type for the aircraft associated with the PPI flight parameter input; means to determine atmospheric data based on the PPI flight parameter input; means to provide the determined airfoil type and atmospheric data to a PPI component for the determination of a PPI icing avoidance value; means to receive, from the PPI component, an indication of the determined PPI icing avoidance value; and means to provide the determined PPI icing avoidance value in response to the PPI flight parameter input.","A53. The system of embodiment A52, wherein the PPI flight parameter input is configured to represent the present airfoil configuration and atmospheric conditions being experienced by the aircraft.","A54. The system of embodiment A52, wherein the PPI flight parameter input is configured to represent the expected airfoil configuration and atmospheric conditions that will be experienced by the aircraft at a future point in time.","A55. The system of embodiment A52, wherein the determined atmospheric data includes a temperature.","A56. The system of embodiment A52, wherein the determined atmospheric data includes a value associated with the water content of the atmosphere about the aircraft at a point in time.","A57. The system of any of the embodiment(s) A53, A54, A55 or A56 wherein the PPI component is a hardware PPI component.","A58. The system of embodiment A57, wherein the hardware PPI component is an ASIC.","A59. The system of embodiment A57, wherein the hardware PPI component is an FPGA.","A60. The system of any of the embodiment(s) A53, A54, A55 or A56 wherein the PPI component is a PPI component containing processor executable instructions.","A61. The system of any of the embodiment(s) A53, A54, A55 or A56 wherein the PPI component is a PPI component composed of two-or-more sub-components.","A62. The system of embodiment A61, wherein the PPI component is comprised of a first sub-component in hardware for determining a first value associated with the PPI icing avoidance value and a second sub-component containing processor executable instructions for determining a second value associated with the PPI icing avoidance value.","A63. The system of embodiment A62, wherein the first and second value associated with the PPI icing avoidance value are used to determine the PPI icing avoidance value.","A64. A dynamic DATCM flight planning system, comprising: means to receive parameter data for an initial anticipated flight plan; means to determine airfoil type for an aircraft associated with the initial anticipated flight plan; means to obtain atmospheric data based on the flight plan parameter data; means to determine a plurality of grid points based on the flight plan parameter data; means to determine corresponding icing data for each grid point of the plurality of grid points based on the airfoil type and atmospheric data; and means to determine a percent power increase for the initial anticipated flight plan.","A65. The system of embodiment A64, further comprising means to output the determined percent power increase.","A66. The system of embodiment A64 or A65, further comprising means to determine an at least one alternative flight plan.","A67. The system of embodiment A66, further comprising means to determine a percent power increase for the at least one alternative flight plan.","A68. The system of embodiment A67, further comprising means to output the determined percent power increase for the at least one alternative flight plan.","A69. The system of embodiment A67, further comprising means to compare the initial anticipated flight plan and the at least one alternative flight plan.","A70. The system of embodiment A69, wherein the comparison is based on determined percent power increase.","A71. The system of embodiment A69 or A70, wherein the comparison is based on distance.","A72. The system of any of embodiments A69-A71, wherein the comparison is based on flight time.","A73. The system of any of embodiments A69-A72, wherein the comparison is based on fuel consumption.","A74. The system of any of embodiments A69-A73, wherein the comparison is based on risk.","A75. The system of any of embodiments A66-A73, further comprising means to determine at least one alternative flight plan based on the flight plan parameter data and the determined percent power increase for the initial anticipated flight plan.","A76. The system of any of embodiments A66-A75, further comprising means to provide the determined at least one alternative flight plan.","A77. The system of any of embodiments A64-A76, wherein the grid points are four-dimensional grid points.","A78. The system of any of embodiments A64-A77, wherein the parameter data includes aircraft data.","A79. The system of any of embodiments A64-A78, wherein the parameter data includes the airfoil type.","A80. The system of any of embodiments A64-A79, wherein the initial anticipated flight plan comprises a shortest route flight plan.","A81. The system of any of embodiments A66-A80, wherein the at least one alternative flight plan comprises an optimized route flight plan.","A82. The system of embodiment A81, wherein the optimized route flight plan is optimized for safety.","A83. The system of embodiment A81 or A82, wherein the optimized route flight plan is optimized fuel consumption.","A84. The system of any of embodiments A64-A83, wherein the flight plan parameter data includes take-off time.","A85. The system of any of embodiments A64-A84, wherein the flight plan parameter data includes take-off location.","A86. The system of any of embodiments A64-A85, wherein the flight plan parameter data includes destination location.","B1. A DATCM dynamic turbulence engine processor-implemented method, comprising: determining a plurality of four-dimensional grid points for a specified temporal geographic space-time area; obtaining terrain data based on the temporal geographic space-time area; obtaining atmospheric data based on the temporal geographic space-time area; for each point of the plurality of four-dimensional grid point, determining via a processor a non-dimensional mountain wave amplitude and mountain top wave drag; determining an upper level non-dimensional gravity wave amplitude; determining a buoyant turbulent kinetic energy; determining a boundary layer eddy dissipation rate; determining storm velocity and eddy dissipation rate from updrafts; determining maximum updraft speed at grid point equilibrium level; determining storm divergence while the updraft speed is above the equilibrium level and identifying storm top; determining storm overshoot and storm drag; determining Doppler speed; determining eddy dissipation rate above the storm top; determining eddy dissipation rate from downdrafts; determining at least one of the turbulent kinetic energy and the total eddy dissipation rate for each grid point; and providing a four-dimensional grid map overlay with comprehensive turbulence data for the specified temporal geographic space-time area.","B2. The method of embodiment B1, wherein the atmospheric data comprises temperature data.","B3. The method of embodiment B1 or B2, wherein the atmospheric data comprises wind data.","B4. The method of any of embodiments B1-B3, wherein the atmospheric data comprises humidity data.","B5. The method of any of embodiment B1-B4, wherein the atmospheric data comprises numerical weather forecast data.","B6. The method of any of embodiments B1-B5, wherein the atmospheric data comprises aircraft sensor data.","B7. The method of any of embodiments B1-B6, wherein the atmospheric data comprises pilot report data.","B8. The method of any of embodiments B1-B7, further comprising providing a user interface for the four-dimensional grid map overlay with comprehensive turbulence data.","B9. The method of embodiment B8, wherein the user interface is displayed on a two-dimensional display and the user interface includes an at least one widget for navigating through at least one further dimension.","B10. The method of embodiment B8, wherein the user interface includes a granularity widget that allows a user to adjust the displayed detail.","B11. A DATCM dynamic turbulence system, comprising: means to determine a plurality of four-dimensional grid points for a specified temporal geographic space-time area; means to obtain terrain data based on the temporal geographic space-time area; means to obtain atmospheric data based on the temporal geographic space-time area; for each point of the plurality of four-dimensional grid point, means to determine a non-dimensional mountain wave amplitude and mountain top wave drag; means to determine an upper level non-dimensional gravity wave amplitude; means to determine a buoyant turbulent kinetic energy; means to determine a boundary layer eddy dissipation rate; means to determine storm velocity and eddy dissipation rate from updrafts; means to determine maximum updraft speed at grid point equilibrium level; means to determine storm divergence while the updraft speed is above the equilibrium level and identifying storm top; means to determine storm overshoot and storm drag; means to determine Doppler speed; means to determine eddy dissipation rate above the storm top; means to determine eddy dissipation rate from downdrafts; means to determine at least one of the turbulent kinetic energy and the total eddy dissipation rate for each grid point; and means to provide a four-dimensional grid map overlay with comprehensive turbulence data for the specified temporal geographic space-time area.","B12. The system of embodiment B11, wherein the atmospheric data comprises temperature data.","B13. The system of embodiment B11 or B12, wherein the atmospheric data comprises wind data.","B14. The system of any of embodiments B11-B13, wherein the atmospheric data comprises humidity data.","B15. The system of any of embodiments B11-B14, wherein the atmospheric data comprises numerical weather forecast data.","B16. The system of any of embodiments B11-B15, wherein the atmospheric data comprises aircraft sensor data.","B17. The system of any of embodiments B11-B16, wherein the atmospheric data comprises pilot report data.","B18. The system of any of embodiments B11-B17, further comprising: means to provide a user interface for the four-dimensional grid map overlay with comprehensive turbulence data.","B19. The system of embodiment B18, wherein the user interface is configured for display on a two-dimensional display and the user interface includes an at least one widget for navigating through at least one further dimension.","B20. The system of embodiment B18, wherein the user interface includes a granularity widget that allows a user to adjust the displayed detail.","B21. A processor-readable tangible medium storing processor-issuable dynamic turbulence grid map overlay generating instructions to: determine a plurality of four-dimensional grid points for a specified temporal geographic space-time area; obtain terrain data based on the temporal geographic space-time area; obtain atmospheric data based on the temporal geographic space-time area; for each point of the plurality of four-dimensional grid point, determine a non-dimensional mountain wave amplitude and mountain top wave drag; determine an upper level non-dimensional gravity wave amplitude; determine a buoyant turbulent kinetic energy; determine a boundary layer eddy dissipation rate; determine storm velocity and eddy dissipation rate from updrafts; determine maximum updraft speed at grid point equilibrium level; determine storm divergence while the updraft speed is above the equilibrium level and identifying storm top; determine storm overshoot and storm drag; determine Doppler speed; determine eddy dissipation rate above the storm top; determine eddy dissipation rate from downdrafts; determine at least one of the turbulent kinetic energy and the total eddy dissipation rate for each grid point; and provide a four-dimensional grid map overlay with comprehensive turbulence data for the specified temporal geographic space-time area.","B22. The medium of embodiment B21, wherein the atmospheric data comprises temperature data.","B23. The medium of embodiment B21 or B22, wherein the atmospheric data comprises wind data.","B24. The medium of any of embodiments B21-B23, wherein the atmospheric data comprises humidity data.","B25. The medium of any of embodiments B21-B24, wherein the atmospheric data comprises numerical weather forecast data.","B26. The medium of any of embodiments B21-B25, wherein the atmospheric data comprises aircraft sensor data.","B27. The medium of any of embodiments B21-B26, wherein the atmospheric data comprises pilot report data.","B28. The medium of any of embodiments B21-B27, further comprising instructions to: provide a user interface for the four-dimensional grid map overlay with comprehensive turbulence data.","B29. The medium of embodiment B28, wherein the user interface is configured for display on a two-dimensional display and the user interface includes an at least one widget for navigating through at least one further dimension.","B30. The medium of embodiment B28, wherein the user interface includes a granularity widget that allows a user to adjust the displayed detail.","B31. A DATCM dynamic turbulence apparatus, comprising a processor and a memory disposed in communication with the processor and storing processor-issuable instructions to: determine a plurality of four-dimensional grid points for a specified temporal geographic space-time area; obtain terrain data based on the temporal geographic space-time area; obtain atmospheric data based on the temporal geographic space-time area; for each point of the plurality of four-dimensional grid point, determine a non-dimensional mountain wave amplitude and mountain top wave drag; determine an upper level non-dimensional gravity wave amplitude; determine a buoyant turbulent kinetic energy; determine a boundary layer eddy dissipation rate; determine storm velocity and eddy dissipation rate from updrafts; determine maximum updraft speed at grid point equilibrium level; determine storm divergence while the updraft speed is above the equilibrium level and identifying storm top; determine storm overshoot and storm drag; determine Doppler speed; determine eddy dissipation rate above the storm top; determine eddy dissipation rate from downdrafts; determine at least one of the turbulent kinetic energy and the total eddy dissipation rate for each grid point; and provide a four-dimensional grid map overlay with comprehensive turbulence data for the specified temporal geographic space-time area.","B32. The system of embodiment B31, wherein the atmospheric data comprises temperature data.","B33. The apparatus of embodiment B31 or B32, wherein the atmospheric data comprises wind data.","B34. The apparatus of any of embodiments B31-B33, wherein the atmospheric data comprises humidity data.","B35. The apparatus of any of embodiment B31-B34, wherein the atmospheric data comprises numerical weather forecast data.","B36. The apparatus of any of embodiments B31-B35, wherein the atmospheric data comprises aircraft sensor data.","B37. The apparatus of any of embodiments B31-B36, wherein the atmospheric data comprises pilot report data.","B38. The apparatus of any of embodiments B31-B37, further comprising instructions to: provide a user interface for the four-dimensional grid map overlay with comprehensive turbulence data.","B39. The apparatus of embodiment B38, wherein the user interface is displayed on a two-dimensional display and the user interface includes an at least one widget for navigating through at least one further dimension.","B40. The apparatus of embodiment B38, wherein the user interface includes a granularity widget that allows a user to adjust the displayed detail.","B41. A DATCM dynamic turbulence system, comprising: means to determine a plurality of grid points for an area; means to determine at least one of the turbulent kinetic energy and the total eddy dissipation rate for each grid point; and means to provide a grid map overlay with comprehensive turbulence data for the area.","B42. The system of embodiment B41, wherein the grid points are four-dimensional grid points.","B43. The system of embodiment B41 or B42, wherein the area is specified.","B44. The system of any of embodiments B41-B43, wherein the area is a space-time area.","B45. The system of any of embodiments B41-B44, wherein the area is a temporal geographic area.","B46. The system of any of embodiments B41-B43, wherein the area is a temporal geographic space-time area","B47. The system of any of embodiments B41-B46, wherein the grid map overlay is a four-dimensional grid map overlay","B48. The system of any of embodiments B41-B47, comprising: means to obtain area terrain data.","B49. The system of any of embodiments B41-B48, comprising: means to obtain area atmospheric data.","B50. The system of any of embodiments B41-B49, comprising: means to determine non-dimensional mountain wave amplitude.","B51. The system of any of embodiments B41-B50, comprising: means to determine mountain top wave drag.","B52. The system of any of embodiments B41-B51, comprising: means to determine upper level non-dimensional gravity wave amplitude.","B53. The system of any of embodiments B41-B52, comprising: means to determine buoyant turbulent kinetic energy.","B54. The system of any of embodiments B41-B53, comprising: means to determine boundary layer eddy dissipation rate.","B55. The system of any of embodiments B41-B54, comprising: means to determine storm velocity.","B56. The system of any of embodiments B41-B55, comprising: means to determine eddy dissipation rate from updrafts.","B57. The system of any of embodiments B41-B56, comprising: means to determine maximum updraft speed at equilibrium level.","B58. The system of any of embodiments B41-B57, comprising: means to determine storm divergence.","B59. The system of any of embodiments B41-B57, comprising: means to determine storm divergence while the updraft speed is above the equilibrium level.","B60. The system of any of embodiments B41-B59, comprising: means to identify storm top.","B61. The system of any of embodiments B41-B60, comprising: means to determine storm overshoot.","B62. The system of any of embodiments B41-B61, comprising: means to determine storm drag.","B63. The system of any of embodiments B41-B62, comprising: means to determine Doppler speed.","B64. The system of any of embodiments B41-B63, comprising: means to determine eddy dissipation rate above the storm top.","B65. The system of any of embodiments B41-B64, comprising: means to determine eddy dissipation rate from downdrafts.","B66. The system of any of embodiments B41-B65, comprising: means to determine grid point non-dimensional mountain wave amplitude.","B67. The system of any of embodiments B41-B66, comprising: means to determine grid point mountain top wave drag.","B68. The system of any of embodiments B41-B67, comprising: means to determine grid point upper level non-dimensional gravity wave amplitude.","B69. The system of any of embodiments B41-B68, comprising: means to determine grid point buoyant turbulent kinetic energy.","B70. The system of any of embodiments B41-B69, comprising: means to determine grid point boundary layer eddy dissipation rate.","B71. The system of any of embodiments B41-B70, comprising: means to determine grid point storm velocity.","B72. The system of any of embodiments B41-B71, comprising: means to determine grid point eddy dissipation rate from updrafts.","B73. The system of any of embodiments B41-B72, comprising: means to determine maximum updraft speed at grid point equilibrium level.","B74. The system of any of embodiments B41-B73, comprising: means to determine grid point storm divergence.","B75. The system of any of embodiments B41-B74, comprising: means to determine grid point storm divergence while the updraft speed is above the equilibrium level.","B76. The system of any of embodiments B41-B75, comprising: means to identify grid point storm top.","B77. The system of any of embodiments B41-B76, comprising: means to determine grid point storm overshoot.","B78. The system of any of embodiments B41-B77, comprising: means to determine grid point storm drag.","B79. The system of any of embodiments B41-B78, comprising: means to determine grid point Doppler speed.","B80. The system of any of embodiments B41-B79, comprising: means to determine grid point eddy dissipation rate above the storm top.","B81. The system of any of embodiments B41-B80, comprising: means to determine grid point eddy dissipation rate from downdrafts.","B82. The system of any of embodiments B41-B81, wherein the atmospheric data comprises temperature data.","B83. The system of any of embodiments B41-B82, wherein the atmospheric data comprises wind data.","B84. The system of any of embodiments B41-B83, wherein the atmospheric data comprises humidity data.","B85. The system of any of embodiments B41-B84, wherein the atmospheric data comprises numerical weather forecast data.","B86. The system of any of embodiments B41-B85, wherein the atmospheric data comprises aircraft sensor data.","B87. The system of any of embodiments B41-B86, wherein the atmospheric data comprises pilot report data.","B88. The system of any of embodiments B41-B87, further comprising: means to provide a user interface for a four-dimensional grid map overlay with comprehensive turbulence data.","B89. The system of embodiment B88, wherein the user interface is configured for display on a two-dimensional display and the user interface includes an at least one widget for navigating through at least one further dimension.","B90. The system of embodiment B88, wherein the user interface includes a granularity widget that allows a user to adjust the displayed detail.","C1. A DATCM manager real-time flight plan modification processor-implemented method, comprising: receiving a flight profile for an aircraft, the flight profile including an at least one initial route; identifying an initial predicted comprehensive turbulence for the at least one initial route; determining a real-time comprehensive turbulence for the at least one initial route; determining turbulence threshold compliance based on the real-time comprehensive turbulence and at least one of the flight profile and the initial predicted comprehensive turbulence; and generating a turbulence exception if the real-time comprehensive turbulence exceeds threshold turbulence parameters.","C2. The method of embodiment C1, wherein the turbulence exception comprises an alert for the aircraft.","C3. The method of embodiment C1, wherein the turbulence exception comprises determining an at least one adjusted route.","C4. The method of embodiment C3, wherein the determination of the at least one adjusted route is based on flight profile data.","C5. The method of embodiment C4, wherein the flight profile data comprises at least one of flight service type, aircraft airframe, and available fuel reserves.","C6. The method of embodiment C4, wherein the flight profile data comprises flight destination location.","C7. The method of embodiment C1, wherein comprehensive turbulence determination comprises: determining a plurality of four-dimensional grid points for a specified temporal geographic space-time area; obtaining terrain data based on the temporal geographic space-time area; obtaining atmospheric data based on the temporal geographic space-time area; for each point of the plurality of four-dimensional grid point, determining via a processor a non-dimensional mountain wave amplitude and mountain top wave drag; determining an upper level non-dimensional gravity wave amplitude; determining a buoyant turbulent kinetic energy; determining a boundary layer eddy dissipation rate; determining storm velocity and eddy dissipation rate from updrafts; determining maximum updraft speed at grid point equilibrium level; determining storm divergence while the updraft speed is above the equilibrium level and identifying storm top; determining storm overshoot and storm drag; determining Doppler speed; determining eddy dissipation rate above the storm top; determining eddy dissipation rate from downdrafts; and determining at least one of the turbulent kinetic energy and the total eddy dissipation rate for each grid point.","C8. The method of embodiment C7, wherein the atmospheric data comprises at least one of temperature data, wind data, and humidity data.","C9. The method of embodiment C7, wherein the atmospheric data comprises numerical weather forecast data.","C10. The method of embodiment C7, wherein the atmospheric data comprises aircraft sensor data.","C11. A DATCM dynamic turbulence real-time flight plan modification apparatus, comprising a processor and a memory disposed in communication with the processor and storing processor-issuable instructions to: receive a flight profile for an aircraft, the flight profile including an at least one initial route; identify an initial predicted comprehensive turbulence for the at least one initial route; determine a real-time comprehensive turbulence for the at least one initial route; determine turbulence threshold compliance based on the real-time comprehensive turbulence and at least one of the flight profile and the initial predicted comprehensive turbulence; and generate a turbulence exception if the real-time comprehensive turbulence exceeds threshold turbulence parameters.","C12. The apparatus of embodiment C11, wherein the turbulence exception comprises an alert for the aircraft.","C13. The apparatus of embodiment C11, wherein the turbulence exception comprises determining an at least one adjusted route.","C14. The apparatus of embodiment C13, wherein the determination of the at least one adjusted route is based on flight profile data.","C15. The apparatus of embodiment C14, wherein the flight profile data comprises at least one of flight service type, aircraft airframe, and available fuel reserves.","C16. The apparatus of embodiment C14, wherein the flight profile data comprises flight destination location.","C17. The apparatus of embodiment C11, wherein comprehensive turbulence determination comprises instructions to: determine a plurality of four-dimensional grid points for a specified temporal geographic space-time area; obtain terrain data based on the temporal geographic space-time area; obtain atmospheric data based on the temporal geographic space-time area; for each point of the plurality of four-dimensional grid point: determine a non-dimensional mountain wave amplitude and mountain top wave drag, determine an upper level non-dimensional gravity wave amplitude, determine a buoyant turbulent kinetic energy, determine a boundary layer eddy dissipation rate, determine storm velocity and eddy dissipation rate from updrafts, determine maximum updraft speed at grid point equilibrium level, determine storm divergence while the updraft speed is above the equilibrium level and identifying storm top, determine storm overshoot and storm drag, determine Doppler speed, determine eddy dissipation rate above the storm top, determine eddy dissipation rate from downdrafts; and determine at least one of the turbulent kinetic energy and the total eddy dissipation rate for each grid point.","C18. The apparatus of embodiment C17, wherein the atmospheric data comprises at least one of temperature data, wind data, and humidity data.","C19. The apparatus of embodiment C17, wherein the atmospheric data comprises numerical weather forecast data.","C20. The apparatus of embodiment C17, wherein the atmospheric data comprises aircraft sensor data.","C21. A processor-readable tangible medium storing processor-issuable dynamic turbulence manager real-time flight plan modification instructions to: receive a flight profile for an aircraft, the flight profile including an at least one initial route; identify an initial predicted comprehensive turbulence for the at least one initial route; determine a real-time comprehensive turbulence for the at least one initial route; determine turbulence threshold compliance based on the real-time comprehensive turbulence and at least one of the flight profile and the initial predicted comprehensive turbulence; and generate a turbulence exception if the real-time comprehensive turbulence exceeds threshold turbulence parameters.","C22. The medium of embodiment C21, wherein the turbulence exception comprises an alert for the aircraft.","C23. The medium of embodiment C21, wherein the turbulence exception comprises determining an at least one adjusted route.","C24. The medium of embodiment C23, wherein the determination of the at least one adjusted route is based on flight profile data.","C25. The medium of embodiment C24, wherein the flight profile data comprises at least one of flight service type, aircraft airframe, and available fuel reserves.","C26. The medium of embodiment C24, wherein the flight profile data comprises flight destination location.","C27. The medium of embodiment C21, wherein comprehensive turbulence determination comprises instructions to: determine a plurality of four-dimensional grid points for a specified temporal geographic space-time area; obtain terrain data based on the temporal geographic space-time area; obtain atmospheric data based on the temporal geographic space-time area; for each point of the plurality of four-dimensional grid point, determine a non-dimensional mountain wave amplitude and mountain top wave drag; determine an upper level non-dimensional gravity wave amplitude; determine a buoyant turbulent kinetic energy; determine a boundary layer eddy dissipation rate; determine storm velocity and eddy dissipation rate from updrafts; determine maximum updraft speed at grid point equilibrium level; determine storm divergence while the updraft speed is above the equilibrium level and identifying storm top; determine storm overshoot and storm drag; determine Doppler speed; determine eddy dissipation rate above the storm top; determine eddy dissipation rate from downdrafts; and determine at least one of the turbulent kinetic energy and the total eddy dissipation rate for each grid point.","C28. The medium of embodiment C27, wherein the atmospheric data comprises at least one of temperature data, wind data, and humidity data.","C29. The medium of embodiment C27, wherein the atmospheric data comprises numerical weather forecast data.","C30. The medium of embodiment C27, wherein the atmospheric data comprises aircraft sensor data.","C31. A DATCM dynamic turbulence manager real-time flight plan modification system, comprising: means to receive a flight profile for an aircraft, the flight profile including an at least one initial route; means to identify an initial predicted comprehensive turbulence for the at least one initial route; means to determine a real-time comprehensive turbulence for the the at least one initial route; means to determine turbulence threshold compliance based on the real-time comprehensive turbulence and at least one of the flight profile and the initial predicted comprehensive turbulence; and means to generate a turbulence exception if the real-time comprehensive turbulence exceeds threshold turbulence parameters.","C32. The system of embodiment C31, wherein the turbulence exception comprises an alert for the aircraft.","C33. The system of embodiment C31 or C32, wherein the turbulence exception comprises determining an at least one adjusted route.","C34. The system of embodiment C33, wherein the determination of the at least one adjusted route is based on flight profile data.","C35. The system of embodiment C34, wherein the flight profile data comprises at least one of flight service type, aircraft airframe, and available fuel reserves.","C36. The system of embodiment C34 or C35, wherein the flight profile data comprises flight destination location.","C37. The system of any of embodiments C31-C36, comprising: means to determine a plurality of four-dimensional grid points for a specified temporal geographic space-time area.","C38. The system of any of embodiments C31-C37, comprising: means to obtain terrain data.","C39. The system of any of embodiments C31-C38, comprising: means to obtain atmospheric data.","C40. The system of any of embodiments C31-C39, comprising: means to determine a non-dimensional mountain wave amplitude.","C41. The system of any of embodiments C31-C40, comprising: means to determine mountain top wave drag.","C42. The system of any of embodiments C31-C41, comprising: means to determine an upper level non-dimensional gravity wave amplitude.","C43. The system of any of embodiments C31-C42, comprising: means to determine a buoyant turbulent kinetic energy.","C44. The system of any of embodiments C31-C43, comprising: means to determine a boundary layer eddy dissipation rate.","C45. The system of any of embodiments C31-C44, comprising: means to determine storm velocity.","C46. The system of any of embodiments C31-C45, comprising: means to determine eddy dissipation rate from updrafts.","C47. The system of any of embodiments C31-C46, comprising: means to determine storm velocity and eddy dissipation rate from updrafts.","C48. The system of any of embodiments C31-C47, comprising: means to determine maximum updraft speed.","C49. The system of any of embodiments C31-C48, comprising: means to determine maximum updraft speed at equilibrium level.","C50. The system of any of embodiments C31-C49, comprising: means to determine storm divergence.","C51. The system of any of embodiments C31-C50, comprising: means to determine storm divergence while the updraft speed is above the equilibrium level.","C52. The system of any of embodiments C31-C51, comprising: means to identify storm top.","C53. The system of any of embodiments C31-C52, comprising: means to determine storm divergence while the updraft speed is above the equilibrium level and identify storm top.","C54. The system of any of embodiments C31-C53, comprising: means to determine storm overshoot.","C55. The system of any of embodiments C31-C54, comprising: means to determine storm drag.","C56. The system of any of embodiments C31-C55, comprising: means to determine Doppler speed.","C57. The system of any of embodiments C31-C56, comprising: means to determine eddy dissipation rate above storm top.","C58. The system of any of embodiments C31-C57, comprising: means to determine eddy dissipation rate from downdrafts.","C59. The system of any of embodiments C31-C58, comprising at least one of: means to determine turbulent kinetic energy; and means to determine total eddy dissipation rate.","C60. The system of any of embodiments C31-C59, comprising: means to determine grid point non-dimensional mountain wave amplitude.","C61. The system of any of embodiments C31-C60, comprising: means to determine grid point mountain top wave drag.","C62. The system of any of embodiments C31-C61, comprising: means to determine grid point upper level non-dimensional gravity wave amplitude.","C63. The system of any of embodiments C31-C62, comprising: means to determine grid point buoyant turbulent kinetic energy.","C64. The system of any of embodiments C31-C63, comprising: means to determine grid point boundary layer eddy dissipation rate.","C65. The system of any of embodiments C31-C64, comprising: means to determine grid point storm velocity.","C66. The system of any of embodiments C31-C65, comprising: means to determine grid point eddy dissipation rate from updrafts.","C67. The system of any of embodiments C31-C66, comprising: means to determine grid point storm velocity and eddy dissipation rate from updrafts.","C68. The system of any of embodiments C31-C67, comprising: means to determine grid point maximum updraft speed.","C69. The system of any of embodiments C31-C68, comprising: means to determine grid point maximum updraft speed at grid point equilibrium level.","C70. The system of any of embodiments C31-C69, comprising: means to determine grid point storm divergence.","C71. The system of any of embodiments C31-C70, comprising: means to determine grid point storm divergence while the updraft speed is above the equilibrium level.","C72. The system of any of embodiments C31-C71, comprising: means to identify grid point storm top.","C73. The system of any of embodiments C31-C72, comprising: means to determine grid point storm divergence while the updraft speed is above the equilibrium level and identify storm top.","C74. The system of any of embodiments C31-C73, comprising: means to determine grid point storm overshoot.","C75. The system of any of embodiments C31-C74, comprising: means to determine grid point storm drag.","C76. The system of any of embodiments C31-C75, comprising: means to determine grid point Doppler speed.","C77. The system of any of embodiments C31-C76, comprising: means to determine grid point eddy dissipation rate above storm top.","C78. The system of any of embodiments C31-C77, comprising: means to determine grid point eddy dissipation rate from downdrafts.","C79. The system of any of embodiments C31-C78, comprising: means to determine grid point turbulent kinetic energy.","C80. The system of any of embodiments C31-C79, comprising: means to determine grid point total eddy dissipation rate.","C81. The system of any of embodiments C31-C80, comprising, for each point of the plurality of four-dimensional grid point, means to: determine a non-dimensional mountain wave amplitude and mountain top wave drag; determine an upper level non-dimensional gravity wave amplitude; determine a buoyant turbulent kinetic energy; determine a boundary layer eddy dissipation rate; determine storm velocity and eddy dissipation rate from updrafts; determine maximum updraft speed at grid point equilibrium level; determine storm divergence while the updraft speed is above the equilibrium level and identifying storm top; determine storm overshoot and storm drag; determine Doppler speed; determine eddy dissipation rate above the storm top; determine eddy dissipation rate from downdrafts; and determine at least one of the turbulent kinetic energy and the total eddy dissipation rate for each grid point.","C82. The system of any of embodiments C31-C81, wherein the atmospheric data comprises at least one of temperature data, wind data, and humidity data.","C83. The system of any of embodiments C31-C82, wherein the atmospheric data comprises numerical weather forecast data.","C84. The system of any of embodiments C31-C83, wherein the atmospheric data comprises aircraft sensor data.","D1. A DATCM dynamic turbulence controller processor-implemented flight planning method, comprising: receiving anticipated flight plan parameter data; obtaining terrain data based on the flight plan parameter data; obtaining atmospheric data based on the flight plan parameter data; determining a plurality of four-dimensional grid points based on the flight plan parameter data; for each point of the plurality of four-dimensional grid point: determining via a processor a non-dimensional mountain wave amplitude and mountain top wave drag, determining an upper level non-dimensional gravity wave amplitude, determining a buoyant turbulent kinetic energy, determining a boundary layer eddy dissipation rate, determining storm velocity and eddy dissipation rate from updrafts, determining maximum updraft speed at grid point equilibrium level, determining storm divergence while the updraft speed is above the equilibrium level and identifying storm top, determining storm overshoot and storm drag, determining Doppler speed, determining eddy dissipation rate above the storm top, and determining eddy dissipation rate from downdrafts; determining the turbulent kinetic energy for each grid point; identifying an at least one flight plan based on the flight plan parameter data and the determined turbulent kinetic energy; and providing the identified at least one flight plan.","D2. The method of embodiment D1, wherein the flight plan parameter data includes aircraft data.","D3. The method of embodiment D2, wherein the aircraft data includes airframe information.","D4. The method of embodiment D2 or D3, wherein the aircraft data includes airfoil information.","D5. The method of any of embodiments D1-D4, wherein the flight plan parameter data includes take-off time.","D6. The method of any of embodiments D1-D5, wherein the flight plan parameter data includes take-off location.","D7. The method of any of embodiments D1-D6 wherein the flight plan parameter data includes destination location.","D8. The method of any of embodiments D1-D7, wherein the flight plan parameter data includes cargo information.","D9. The method of any of embodiments D1-D8, wherein the flight plan parameter data indicates the flight is a passenger flight.","D10. The method of any of embodiments D1-D9, wherein the flight plan parameter data indicates the flight is a cargo flight.","D11. A DATCM platform flight planning apparatus, comprising a processor and a memory disposed in communication with the processor and storing processor-issuable instructions to: receive anticipated flight plan parameter data; obtain terrain data based on the flight plan parameter data; obtain atmospheric data based on the flight plan parameter data; determine a plurality of four-dimensional grid points based on the flight plan parameter data; determine a non-dimensional mountain wave amplitude and mountain top wave drag; determine an upper level non-dimensional gravity wave amplitude; determine a buoyant turbulent kinetic energy; determine a boundary layer eddy dissipation rate; determine storm velocity and eddy dissipation rate from updrafts; determine maximum updraft speed at grid point equilibrium level; determine storm divergence while the updraft speed is above the equilibrium level and identify storm top; determine storm overshoot and storm drag; determine Doppler speed; determine eddy dissipation rate above the storm top; determine eddy dissipation rate from downdrafts; determine the turbulent kinetic energy for each grid point; identify an at least one flight plan based on the flight plan parameter data and the determined turbulent kinetic energy; and provide the identified at least one flight plan.","D12. The apparatus of embodiment D11, wherein the flight plan parameter data includes aircraft data.","D13. The apparatus of embodiment D12, wherein the aircraft data includes airframe information.","D14. The apparatus of embodiment D12 or D13, wherein the aircraft data includes airfoil information.","D15. The apparatus of any of embodiments D11-D14, wherein the flight plan parameter data includes take-off time.","D16. The apparatus of any of embodiments D11-D15, wherein the flight plan parameter data includes take-off location.","D17. The apparatus of any of embodiments D11-D16, wherein the flight plan parameter data includes destination location.","D18. The apparatus of any of embodiments D11-D17, wherein the flight plan parameter data includes cargo information.","D19. The apparatus of any of embodiments D11-D18, wherein the flight plan parameter data indicates the flight is a passenger flight.","D20. The apparatus of any of embodiment D11-D19, wherein the flight plan parameter data indicates the flight is a cargo flight.","D21. A processor-readable tangible medium storing processor-issuable DATCM flight plan generating instructions to: receive anticipated flight plan parameter data; obtain terrain data based on the flight plan parameter data; obtain atmospheric data based on the flight plan parameter data; determine a plurality of four-dimensional grid points based on the flight plan parameter data; determine a non-dimensional mountain wave amplitude and mountain top wave drag; determine an upper level non-dimensional gravity wave amplitude; determine a buoyant turbulent kinetic energy; determine a boundary layer eddy dissipation rate; determine storm velocity and eddy dissipation rate from updrafts; determine maximum updraft speed at grid point equilibrium level; determine storm divergence while the updraft speed is above the equilibrium level and identify storm top; determine storm overshoot and storm drag; determine Doppler speed; determine eddy dissipation rate above the storm top; determine eddy dissipation rate from downdrafts; determine the turbulent kinetic energy for each grid point; and identify an at least one flight plan based on the flight plan parameter data and the determined turbulent kinetic energy.","D22. The medium of embodiment D21, wherein the flight plan parameter data includes aircraft data.","D23. The medium of embodiment D22, wherein the aircraft data includes airframe information.","D24. The medium of embodiment D22 or D23, wherein the aircraft data includes airfoil information.","D25. The medium of any of embodiments D21-D24, wherein the flight plan parameter data includes take-off time.","D26. The medium of any of embodiments D21-D25, wherein the flight plan parameter data includes take-off location.","D27. The medium of any of embodiments D21-D26, wherein the flight plan parameter data includes destination location.","D28. The medium of any of embodiments D21-D27, wherein the flight plan parameter data includes cargo information.","D29. The medium of any of embodiments D21-D28, wherein the flight plan parameter data indicates the flight is a passenger flight.","D30. The medium of any of embodiments D21-D29, wherein the flight plan parameter data indicates the flight is a cargo flight.","D31. A dynamic turbulence platform flight planning system, comprising: means to receive anticipated flight plan parameter data; means to obtain terrain data based on the flight plan parameter data; means to obtain atmospheric data based on the flight plan parameter data; means to determine a plurality of four-dimensional grid points based on the flight plan parameter data; means to determine a non-dimensional mountain wave amplitude and mountain top wave drag; means to determine an upper level non-dimensional gravity wave amplitude; means to determine a buoyant turbulent kinetic energy; means to determine a boundary layer eddy dissipation rate; means to determine storm velocity and eddy dissipation rate from updrafts; means to determine maximum updraft speed at grid point equilibrium level; means to determine storm divergence while the updraft speed is above the equilibrium level and identify storm top; means to determine storm overshoot and storm drag; means to determine Doppler speed; means to determine eddy dissipation rate above the storm top; means to determine eddy dissipation rate from downdrafts; means to determine the turbulent kinetic energy for each grid point; means to identify an at least one flight plan based on the flight plan parameter data and the determined turbulent kinetic energy; and means to provide the identified at least one flight plan.","D32. The system of embodiment D31, wherein the flight plan parameter data includes aircraft data.","D33. The system of embodiment D32, wherein the aircraft data includes airframe information.","D34. The system of embodiment D32, wherein the aircraft data includes airfoil information.","D35. The system of any of embodiments D31-D34, wherein the flight plan parameter data includes take-off time.","D36. The system of any of embodiments D31-D35, wherein the flight plan parameter data includes take-off location.","D37. The system of any of embodiments D31-D36, wherein the flight plan parameter data includes destination location.","D38. The system of any of embodiments D31-D37, wherein the flight plan parameter data includes cargo information.","D39. The system of any of embodiments D31-D38, wherein the flight plan parameter data indicates the flight is a passenger flight.","D40. The system of any of embodiments D31-D39, wherein the flight plan parameter data indicates the flight is a cargo flight.","D41. A DATCM platform flight planning system, comprising: means to receive anticipated flight plan data; means to obtain atmospheric data based on the flight plan data; means to determine a plurality of grid points based on the flight plan data; means to determine turbulent kinetic energy for each grid point; means to identify an at least one flight plan based on the flight plan data and the determined turbulent kinetic energy; and means to provide the identified at least one flight plan.","D42. The system of embodiment D41, comprising: means to determine a non-dimensional mountain wave amplitude and mountain top wave drag.","D43. The system of embodiment D41 or D42, comprising: means to determine an upper level non-dimensional gravity wave amplitude.","D44. The system of any of embodiments D41-D43, comprising: means to determine a buoyant turbulent kinetic energy.","D45. The system of any of embodiments D41-D44, comprising: means to determine a boundary layer eddy dissipation rate.","D46. The system of any of embodiments D41-D45, comprising: means to determine storm velocity.","D47. The system of any of embodiments D41-D46, comprising: means to determine eddy dissipation rate from updrafts.","D48. The system of any of embodiments D41-D47, comprising: means to determine maximum updraft speed.","D49. The system of any of embodiments D41-D47, comprising: means to determine maximum updraft speed at grid point equilibrium level.","D50. The system of any of embodiments D41-D49, comprising: means to determine storm divergence.","D51. The system of any of embodiments D41-D49, comprising: means to determine storm divergence while the updraft speed is above the equilibrium level.","D52. The system of any of embodiments D41-D51, comprising: means to identify storm top.","D53. The system of any of embodiments D41-D49, comprising: means to determine storm divergence while the updraft speed is above the equilibrium level and identify storm top.","D54. The system of any of embodiments D41-D53, comprising: means to determine storm overshoot and storm drag.","D55. The system of any of embodiments D41-D54, comprising: means to determine Doppler speed.","D56. The system of any of embodiments D41-D55, comprising: means to determine eddy dissipation rate above the storm top.","D57. The system of any of embodiments D41-D56, comprising: means to determine eddy dissipation rate from downdrafts.","D58. The system of any of embodiments D41-D57, wherein the flight plan data includes aircraft data.","D59. The system of embodiment D58, wherein the aircraft data includes at least one of airframe information and airfoil information.","D60. The system of any of embodiments D41-D59, wherein the flight plan data includes take-off time.","D61. The system of any of embodiments D41-D60, wherein the flight plan data includes take-off location.","D62. The system of any of embodiments D41-D61, wherein the flight plan data includes destination location.","D63. The system of any of embodiments D41-D62, wherein the flight plan data includes cargo information.","D64. The system of any of embodiments D41-D63, wherein the flight plan parameter data indicates the flight is a passenger flight.","D65. The system of any of embodiments D41-D63, wherein the flight plan parameter data indicates the flight is a cargo flight.","E1. A DATCM system for providing integrated flight hazard\/threat identification and resolution comprising a combination of any of the preceding embodiments (A, B, C, D) such that turbulence and icing hazards are addressed.","E2. A DATCM flight planning system, comprising: means to receive parameter data for a flight; means to determine airfoil type for an aircraft associated with the flight; means to obtain atmospheric data based on the flight parameter data; means to determine a plurality of grid points based on the flight data; means to determine turbulent kinetic energy for each grid point; means to determine corresponding icing data for each grid point of the plurality of grid points based on the airfoil type and atmospheric data; means to identify an at least one flight plan based on the flight data and the determined turbulent kinetic energy and icing data; and means to provide the identified at least one flight plan.","E3. The flight planning system of embodiment E2, comprising: means to determine a percent power increase for the at least one flight plan.",{"@attributes":{"id":"p-0550","num":"0549"},"figref":"FIG. 46","b":["4601","4601"]},"Typically, users, e.g., , which may be people and\/or other systems, may engage information technology systems (e.g., computers) to facilitate information processing. In turn, computers employ processors to process information; such processors  may be referred to as central processing units (CPU). One form of processor is referred to as a microprocessor. CPUs use communicative circuits to pass binary encoded signals acting as instructions to enable various operations. These instructions may be operational and\/or data instructions containing and\/or referencing other instructions and data in various processor accessible and operable areas of memory  (e.g., registers, cache memory, random access memory, etc.). Such communicative instructions may be stored and\/or transmitted in batches (e.g., batches of instructions) as programs and\/or data components to facilitate desired operations. These stored instruction codes, e.g., programs, may engage the CPU circuit components and other motherboard and\/or system components to perform desired operations. One type of program is a computer operating system, which, may be executed by CPU on a computer; the operating system enables and facilitates users to access and operate computer information technology and resources. Some resources that may be employed in information technology systems include: input and output mechanisms through which data may pass into and out of a computer; memory storage into which data may be saved; and processors by which information may be processed. These information technology systems may be used to collect data for later retrieval, analysis, and manipulation, which may be facilitated through a database program. These information technology systems provide interfaces that allow users to access and operate various system components.","In one embodiment, the DATCM controller  may be connected to and\/or communicate with entities such as, but not limited to: one or more users from user input devices ; peripheral devices ; an optional cryptographic processor device ; and\/or a communications network . For example, the DATCM controller  may be connected to and\/or communicate with users, e.g., , operating client device(s), e.g., , including, but not limited to, personal computer(s), server(s) and\/or various mobile device(s) including, but not limited to, cellular telephone(s), smartphone(s) (e.g., iPhone\u00ae, Blackberry\u00ae, Android OS-based phones etc.), tablet computer(s) (e.g., Apple iPad\u2122, HP Slate\u2122, Motorola Xoom\u2122, etc.), eBook reader(s) (e.g., Amazon Kindle\u2122, Barnes and Noble's Nook\u2122 eReader, etc.), laptop computer(s), notebook(s), netbook(s), gaming console(s) (e.g., XBOX Live\u2122, Nintendo\u00ae DS, Sony PlayStation\u00ae Portable, etc.), portable scanner(s), and\/or the like.","Networks are commonly thought to comprise the interconnection and interoperation of clients, servers, and intermediary nodes in a graph topology. It should be noted that the term \u201cserver\u201d as used throughout this application refers generally to a computer, other device, program, or combination thereof that processes and responds to the requests of remote users across a communications network. Servers serve their information to requesting \u201cclients.\u201d The term \u201cclient\u201d as used herein refers generally to a computer, program, other device, user and\/or combination thereof that is capable of processing and making requests and obtaining and processing any responses from servers across a communications network. A computer, other device, program, or combination thereof that facilitates, processes information and requests, and\/or furthers the passage of information from a source user to a destination user is commonly referred to as a \u201cnode.\u201d Networks are generally thought to facilitate the transfer of information from source points to destinations. A node specifically tasked with furthering the passage of information from a source to a destination is commonly called a \u201crouter.\u201d There are many forms of networks such as Local Area Networks (LANs), Pico networks, Wide Area Networks (WANs), Wireless Networks (WLANs), etc. For example, the Internet is generally accepted as being an interconnection of a multitude of networks whereby remote clients and servers may access and interoperate with one another.","The DATCM controller  may be based on computer systems that may comprise, but are not limited to, components such as: a computer systemization  connected to memory .","A computer systemization  may comprise a clock , central processing unit (\u201cCPU(s)\u201d and\/or \u201cprocessor(s)\u201d (these terms are used interchangeable throughout the disclosure unless noted to the contrary)) , a memory  (e.g., a read only memory (ROM) , a random access memory (RAM) , etc.), and\/or an interface bus , and most frequently, although not necessarily, are all interconnected and\/or communicating through a system bus  on one or more (mother)board(s)  having conductive and\/or otherwise transportive circuit pathways through which instructions (e.g., binary encoded signals) may travel to effectuate communications, operations, storage, etc. The computer systemization may be connected to a power source ; e.g., optionally the power source may be internal. Optionally, a cryptographic processor  and\/or transceivers (e.g., ICs)  may be connected to the system bus. In another embodiment, the cryptographic processor and\/or transceivers may be connected as either internal and\/or external peripheral devices  via the interface bus I\/O. In turn, the transceivers may be connected to antenna(s) , thereby effectuating wireless transmission and reception of various communication and\/or sensor protocols; for example the antenna(s) may connect to: a Texas Instruments WiLink WL1283 transceiver chip (e.g., providing 802.11n, Bluetooth 3.0, FM, global positioning system (GPS) (thereby allowing DATCM controller to determine its location)); Broadcom BCM4329FKUBG transceiver chip (e.g., providing 802.11n, Bluetooth 2.1+EDR, FM, etc.); a Broadcom BCM4750IUB8 receiver chip (e.g., GPS); an Infineon Technologies X-Gold 618-PMB9800 (e.g., providing 2G\/3G HSDPA\/HSUPA communications); and\/or the like. The system clock typically has a crystal oscillator and generates a base signal through the computer systemization's circuit pathways. The clock is typically coupled to the system bus and various clock multipliers that will increase or decrease the base operating frequency for other components interconnected in the computer systemization. The clock and various components in a computer systemization drive signals embodying information throughout the system. Such transmission and reception of instructions embodying information throughout a computer systemization may be commonly referred to as communications. These communicative instructions may further be transmitted, received, and the cause of return and\/or reply communications beyond the instant computer systemization to: communications networks, input devices, other computer systemizations, peripheral devices, and\/or the like. It should be understood that in alternative embodiments, any of the above components may be connected directly to one another, connected to the CPU, and\/or organized in numerous variations employed as exemplified by various computer systems.","The CPU comprises at least one high-speed data processor adequate to execute program components for executing user and\/or system-generated requests. Often, the processors themselves will incorporate various specialized processing units, such as, but not limited to: integrated system (bus) controllers, memory management control units, floating point units, and even specialized processing sub-units like graphics processing units, digital signal processing units, and\/or the like. Additionally, processors may include internal fast access addressable memory, and be capable of mapping and addressing memory  beyond the processor itself; internal memory may include, but is not limited to: fast registers, various levels of cache memory (e.g., level 1, 2, 3, etc.), RAM, etc. The processor may access this memory through the use of a memory address space that is accessible via instruction address, which the processor can construct and decode allowing it to access a circuit path to a specific memory address space having a memory state. The CPU may be a microprocessor such as: AMD's Athlon, Duron and\/or Opteron; ARM's application, embedded and secure processors; IBM and\/or Motorola's DragonBall and PowerPC; IBM's and Sony's Cell processor; Intel's Celeron, Core (2) Duo, Itanium, Pentium, Xeon, and\/or XScale; and\/or the like processor(s). The CPU interacts with memory through instruction passing through conductive and\/or transportive conduits (e.g., (printed) electronic and\/or optic circuits) to execute stored instructions (i.e., program code) according to conventional data processing techniques. Such instruction passing facilitates communication within the DATCM controller and beyond through various interfaces. Should processing requirements dictate a greater amount speed and\/or capacity, distributed processors (e.g., Distributed DATCM), mainframe, multi-core, parallel, and\/or super-computer architectures may similarly be employed. Alternatively, should deployment requirements dictate greater portability, smaller Personal Digital Assistants (PDAs) may be employed.","Depending on the particular implementation, features of the DATCM may be achieved by implementing a microcontroller such as CAST's R8051XC2 microcontroller; Intel's MCS 51 (i.e., 8051 microcontroller); and\/or the like. Also, to implement certain features of the DATCM, some feature implementations may rely on embedded components, such as: Application-Specific Integrated Circuit (\u201cASIC\u201d), Digital Signal Processing (\u201cDSP\u201d), Field Programmable Gate Array (\u201cFPGA\u201d), and\/or the like embedded technology. For example, any of the DATCM component collection (distributed or otherwise) and\/or features may be implemented via the microprocessor and\/or via embedded components; e.g., via ASIC, coprocessor, DSP, FPGA, and\/or the like. Alternately, some implementations of the DATCM may be implemented with embedded components that are configured and used to achieve a variety of features or signal processing. An example DATCM component (e.g., PPI Component ) substantially in the form of a field-programmable gate array configured as an integrated circuit for performing the features of the PPI component may be found with respect to . It should be appreciated that the example PPI hardware component disclosed is provided to enhance the reader's understanding of the instant disclosure and is but one embodiment of the DATCM disclosed herein. Furthermore, as substantially all integrated circuits may be represented as one or more alternative integrated circuits, hardware description language statements (e.g., VHDL, Verilog, and\/or the like), programming language commands, and\/or the like, embodiments of the disclosed PPI hardware component represented as alternative hardware designs and\/or software or software\/hardware combinations are possible based on this disclosure.","Depending on the particular implementation, the embedded components may include software solutions, hardware solutions, and\/or some combination of both hardware\/software solutions. For example, DATCM features discussed herein may be achieved through implementing FPGAs, which are a semiconductor devices containing programmable logic components called \u201clogic blocks\u201d, and programmable interconnects, such as the high performance FPGA Virtex series and\/or the low cost Spartan series manufactured by Xilinx. Logic blocks and interconnects can be programmed by the customer or designer, after the FPGA is manufactured, to implement any of the DATCM features. A hierarchy of programmable interconnects allow logic blocks to be interconnected as needed by the DATCM system designer\/administrator, somewhat like a one-chip programmable breadboard. An FPGA's logic blocks can be programmed to perform the operation of basic logic gates such as AND, and XOR, or more complex combinational operators such as decoders or simple mathematical operations. In most FPGAs, the logic blocks also include memory elements, which may be circuit flip-flops or more complete blocks of memory. In some circumstances, the DATCM may be developed on regular FPGAs and then migrated into a fixed version that more resembles ASIC implementations. Alternate or coordinating implementations may migrate DATCM controller features to a final ASIC instead of or in addition to FPGAs. Depending on the implementation all of the aforementioned embedded components and microprocessors may be considered the \u201cCPU\u201d and\/or \u201cprocessor\u201d for the DATCM.","The power source  may be of any standard form for powering small electronic circuit board devices such as the following power cells: alkaline, lithium hydride, lithium ion, lithium polymer, nickel cadmium, solar cells, and\/or the like. Other types of AC or DC power sources may be used as well. In the case of solar cells, in one embodiment, the case provides an aperture through which the solar cell may capture photonic energy. The power cell  is connected to at least one of the interconnected subsequent components of the DATCM thereby providing an electric current to all subsequent components. In one example, the power source  is connected to the system bus component . In an alternative embodiment, an outside power source  is provided through a connection across the I\/O  interface. For example, a USB and\/or IEEE 1394 connection carries both data and power across the connection and is therefore a suitable source of power.","Interface bus(ses)  may accept, connect, and\/or communicate to a number of interface adapters, conventionally although not necessarily in the form of adapter cards, such as but not limited to: input output interfaces (I\/O) , storage interfaces , network interfaces , and\/or the like. Optionally, cryptographic processor interfaces  similarly may be connected to the interface bus. The interface bus provides for the communications of interface adapters with one another as well as with other components of the computer systemization. Interface adapters are adapted for a compatible interface bus. Interface adapters conventionally connect to the interface bus via a slot architecture. Conventional slot architectures may be employed, such as, but not limited to: Accelerated Graphics Port (AGP), Card Bus, (Extended) Industry Standard Architecture ((E)ISA), Micro Channel Architecture (MCA), NuBus, Peripheral Component Interconnect (Extended) (PCI(X)), PCI Express, Personal Computer Memory Card International Association (PCMCIA), and\/or the like.","Storage interfaces  may accept, communicate, and\/or connect to a number of storage devices such as, but not limited to: storage devices , removable disc devices, and\/or the like. Storage interfaces may employ connection protocols such as, but not limited to: (Ultra) (Serial) Advanced Technology Attachment (Packet Interface) ((Ultra) (Serial) ATA(PI)), (Enhanced) Integrated Drive Electronics ((E)IDE), Institute of Electrical and Electronics Engineers (IEEE) 1394, fiber channel, Small Computer Systems Interface (SCSI), Universal Serial Bus (USB), and\/or the like.","Network interfaces  may accept, communicate, and\/or connect to a communications network . Through a communications network , the DATCM controller is accessible through remote clients (e.g., computers with web browsers) by users . Network interfaces may employ connection protocols such as, but not limited to: direct connect, Ethernet (thick, thin, twisted pair 10\/100\/1000 Base T, and\/or the like), Token Ring, wireless connection such as IEEE 802.11a-x, and\/or the like. Should processing requirements dictate a greater amount speed and\/or capacity, distributed network controllers (e.g., Distributed DATCM), architectures may similarly be employed to pool, load balance, and\/or otherwise increase the communicative bandwidth required by the DATCM controller. A communications network may be any one and\/or the combination of the following: a direct interconnection; the Internet; a Local Area Network (LAN); a Metropolitan Area Network (MAN); an Operating Missions as Nodes on the Internet (OMNI); a secured custom connection; a Wide Area Network (WAN); a wireless network (e.g., employing protocols such as, but not limited to a Wireless Application Protocol (WAP), I-mode, and\/or the like); and\/or the like. A network interface may be regarded as a specialized form of an input output interface. Further, multiple network interfaces  may be used to engage with various communications network types . For example, multiple network interfaces may be employed to allow for the communication over broadcast, multicast, and\/or unicast networks.","Input Output interfaces (I\/O)  may accept, communicate, and\/or connect to user input devices , peripheral devices , cryptographic processor devices , and\/or the like. I\/O may employ connection protocols such as, but not limited to: audio: analog, digital, monaural, RCA, stereo, and\/or the like; data: Apple Desktop Bus (ADB), IEEE 1394a-b, serial, universal serial bus (USB); infrared; joystick; keyboard; midi; optical; PC AT; PS\/2; parallel; radio; video interface: Apple Desktop Connector (ADC), BNC, coaxial, component, composite, digital, Digital Visual Interface (DVI), high-definition multimedia interface (HDMI), RCA, RF antennae, S-Video, VGA, and\/or the like; wireless transceivers: 802.11a\/b\/g\/n\/x; Bluetooth; cellular (e.g., code division multiple access (CDMA), high speed packet access (HSPA(+)), high-speed downlink packet access (HSDPA), global system for mobile communications (GSM), long term evolution (LTE), WiMax, etc.); and\/or the like. One typical output device may include a video display, which typically comprises a Cathode Ray Tube (CRT) or Liquid Crystal Display (LCD) based monitor with an interface (e.g., DVI circuitry and cable) that accepts signals from a video interface, may be used. The video interface composites information generated by a computer systemization and generates video signals based on the composited information in a video memory frame. Another output device is a television set, which accepts signals from a video interface. Typically, the video interface provides the composited video information through a video connection interface that accepts a video display interface (e.g., an RCA composite video connector accepting an RCA composite video cable; a DVI connector accepting a DVI display cable, etc.).","User input devices  often are a type of peripheral device  (see below) and may include: card readers, dongles, finger print readers, gloves, graphics tablets, joysticks, keyboards, microphones, mouse (mice), remote controls, retina readers, touch screens (e.g., capacitive, resistive, etc.), trackballs, trackpads, sensors (e.g., accelerometers, ambient light, GPS, gyroscopes, proximity, etc.), styluses, and\/or the like.","Peripheral devices  may be connected and\/or communicate to I\/O and\/or other facilities of the like such as network interfaces, storage interfaces, directly to the interface bus, system bus, the CPU, and\/or the like. Peripheral devices may be external, internal and\/or part of the DATCM controller. Peripheral devices may include: antenna, audio devices (e.g., line-in, line-out, microphone input, speakers, etc.), cameras (e.g., still, video, webcam, etc.), dongles (e.g., for copy protection, ensuring secure transactions with a digital signature, and\/or the like), external processors (for added capabilities; e.g., crypto devices ), force-feedback devices (e.g., vibrating motors), network interfaces, printers, scanners, storage devices, transceivers (e.g., cellular, GPS, etc.), video devices (e.g., goggles, monitors, etc.), video sources, visors, and\/or the like. Peripheral devices often include types of input devices (e.g., cameras).","It should be noted that although user input devices and peripheral devices may be employed, the DATCM controller may be embodied as an embedded, dedicated, and\/or monitor-less (i.e., headless) device, wherein access would be provided over a network interface connection.","Cryptographic units such as, but not limited to, microcontrollers, processors , interfaces , and\/or devices  may be attached, and\/or communicate with the DATCM controller. A MC68HC16 microcontroller, manufactured by Motorola Inc., may be used for and\/or within cryptographic units. The MC68HC16 microcontroller utilizes a 16-bit multiply-and-accumulate instruction in the 16 MHz configuration and requires less than one second to perform a 512-bit RSA private key operation. Cryptographic units support the authentication of communications from interacting agents, as well as allowing for anonymous transactions. Cryptographic units may also be configured as part of the CPU. Equivalent microcontrollers and\/or processors may also be used. Other commercially available specialized cryptographic processors include: the Broadcom's CryptoNetX and other Security Processors; nCipher's nShield, SafeNet's Luna PCI (e.g., 7100) series; Semaphore Communications' 40 MHz Roadrunner 184; Sun's Cryptographic Accelerators (e.g., Accelerator 6000 PCIe Board, Accelerator 500 Daughtercard); Via Nano Processor (e.g., L2100, L2200, U2400) line, which is capable of performing 500+MB\/s of cryptographic instructions; VLSI Technology's 33 MHz 6868; and\/or the like.","Generally, any mechanization and\/or embodiment allowing a processor to affect the storage and\/or retrieval of information is regarded as memory . However, memory is a fungible technology and resource, thus, any number of memory embodiments may be employed in lieu of or in concert with one another. It is to be understood that the DATCM controller and\/or a computer systemization may employ various forms of memory . For example, a computer systemization may be configured wherein the operation of on-chip CPU memory (e.g., registers), RAM, ROM, and any other storage devices are provided by a paper punch tape or paper punch card mechanism; however, such an embodiment would result in an extremely slow rate of operation. In a typical configuration, memory  will include ROM , RAM , and a storage device . A storage device  may be any conventional computer system storage. Storage devices may include a drum; a (fixed and\/or removable) magnetic disk drive; a magneto-optical drive; an optical drive (i.e., Blueray, CD ROM\/RAM\/Recordable (R)\/ReWritable (RW), DVD R\/RW, HD DVD R\/RW etc.); an array of devices (e.g., Redundant Array of Independent Disks (RAID)); solid state memory devices (USB memory, solid state drives (SSD), etc.); other processor-readable storage mediums; and\/or other devices of the like. Thus, a computer systemization generally requires and makes use of memory.","The memory  may contain a collection of program and\/or database components and\/or data such as, but not limited to: operating system component(s)  (operating system); information server component(s)  (information server); user interface component(s)  (user interface); Web browser component(s)  (Web browser); database(s) ; mail server component(s) ; mail client component(s) ; cryptographic server component(s)  (cryptographic server); the DATCM component(s) ; and\/or the like (i.e., collectively a component collection). These components may be stored and accessed from the storage devices and\/or from storage devices accessible through an interface bus. Although non-conventional program components such as those in the component collection, typically, are stored in a local storage device , they may also be loaded and\/or stored in memory such as: peripheral devices, RAM, remote storage facilities through a communications network, ROM, various forms of memory, and\/or the like.","The operating system component  is an executable program component facilitating the operation of the DATCM controller. Typically, the operating system facilitates access of I\/O, network interfaces, peripheral devices, storage devices, and\/or the like. The operating system may be a highly fault tolerant, scalable, and secure system such as: Apple Macintosh OS X (Server); AT&T Plan 9; Be OS; Unix and Unix-like system distributions (such as AT&T's UNIX; Berkley Software Distribution (BSD) variations such as FreeBSD, NetBSD, OpenBSD, and\/or the like; Linux distributions such as Red Hat, Ubuntu, and\/or the like); and\/or the like operating systems. However, more limited and\/or less secure operating systems also may be employed such as Apple Macintosh OS, IBM OS\/2, Microsoft DOS, Microsoft Windows 2000\/2003\/3.1\/95\/98\/CE\/Millenium\/NT\/Vista\/XP (Server), Palm OS, and\/or the like. An operating system may communicate to and\/or with other components in a component collection, including itself, and\/or the like. Most frequently, the operating system communicates with other program components, user interfaces, and\/or the like. For example, the operating system may contain, communicate, generate, obtain, and\/or provide program component, system, user, and\/or data communications, requests, and\/or responses. The operating system, once executed by the CPU, may enable the interaction with communications networks, data, I\/O, peripheral devices, program components, memory, user input devices, and\/or the like. The operating system may provide communications protocols that allow the DATCM controller to communicate with other entities through a communications network . Various communication protocols may be used by the DATCM controller as a subcarrier transport mechanism for interaction, such as, but not limited to: multicast, TCP\/IP, UDP, unicast, and\/or the like.","An information server component  is a stored program component that is executed by a CPU. The information server may be a conventional Internet information server such as, but not limited to Apache Software Foundation's Apache, Microsoft's Internet Information Server, and\/or the like. The information server may allow for the execution of program components through facilities such as Active Server Page (ASP), ActiveX, (ANSI) (Objective\u2212) C (++), C# and\/or .NET, Common Gateway Interface (CGI) scripts, dynamic (D) hypertext markup language (HTML), FLASH, Java, JavaScript, Practical Extraction Report Language (PERL), Hypertext Pre-Processor (PHP), pipes, Python, wireless application protocol (WAP), WebObjects, and\/or the like. The information server may support secure communications protocols such as, but not limited to, File Transfer Protocol (FTP); HyperText Transfer Protocol (HTTP); Secure Hypertext Transfer Protocol (HTTPS), Secure Socket Layer (SSL), messaging protocols (e.g., America Online (AOL) Instant Messenger (AIM), Application Exchange (APEX), ICQ, Internet Relay Chat (IRC), Microsoft Network (MSN) Messenger Service, Presence and Instant Messaging Protocol (PRIM), Internet Engineering Task Force's (IETF's) Session Initiation Protocol (SIP), SIP for Instant Messaging and Presence Leveraging Extensions (SIMPLE), open XML-based Extensible Messaging and Presence Protocol (XMPP) (i.e., Jabber or Open Mobile Alliance's (OMA's) Instant Messaging and Presence Service (IMPS)), Yahoo! Instant Messenger Service, and\/or the like. The information server provides results in the form of Web pages to Web browsers, and allows for the manipulated generation of the Web pages through interaction with other program components. After a Domain Name System (DNS) resolution portion of an HTTP request is resolved to a particular information server, the information server resolves requests for information at specified locations on the DATCM controller based on the remainder of the HTTP request. For example, a request such as http:\/\/123.124.125.126\/myInformation.html might have the IP portion of the request \u201c123.124.125.126\u201d resolved by a DNS server to an information server at that IP address; that information server might in turn further parse the http request for the \u201c\/myInformation.html\u201d portion of the request and resolve it to a location in memory containing the information \u201cmyInformation.html.\u201d Additionally, other information serving protocols may be employed across various ports, e.g., FTP communications across port , and\/or the like. An information server may communicate to and\/or with other components in a component collection, including itself, and\/or facilities of the like. Most frequently, the information server communicates with the DATCM database , operating systems, other program components, user interfaces, Web browsers, and\/or the like.","Access to the DATCM database may be achieved through a number of database bridge mechanisms such as through scripting languages as enumerated below (e.g., CGI) and through inter-application communication channels as enumerated below (e.g., CORBA, WebObjects, etc.). Any data requests through a Web browser are parsed through the bridge mechanism into appropriate grammars as required by the DATCM. In one embodiment, the information server would provide a Web form accessible by a Web browser. Entries made into supplied fields in the Web form are tagged as having been entered into the particular fields, and parsed as such. The entered terms are then passed along with the field tags, which act to instruct the parser to generate queries directed to appropriate tables and\/or fields. In one embodiment, the parser may generate queries in standard SQL by instantiating a search string with the proper join\/select commands based on the tagged text entries, wherein the resulting command is provided over the bridge mechanism to the DATCM as a query. Upon generating query results from the query, the results are passed over the bridge mechanism, and may be parsed for formatting and generation of a new results Web page by the bridge mechanism. Such a new results Web page is then provided to the information server, which may supply it to the requesting Web browser.","Also, an information server may contain, communicate, generate, obtain, and\/or provide program component, system, user, and\/or data communications, requests, and\/or responses.","Computer interfaces in some respects are similar to automobile operation interfaces. Automobile operation interface elements such as steering wheels, gearshifts, and speedometers facilitate the access, operation, and display of automobile resources, and status. Computer interaction interface elements such as check boxes, cursors, menus, scrollers, and windows (collectively and commonly referred to as widgets) similarly facilitate the access, capabilities, operation, and display of data and computer hardware and operating system resources, and status. Operation interfaces are commonly called user interfaces. Graphical user interfaces (GUIs) such as the Apple Macintosh Operating System's Aqua, IBM's OS\/2, Microsoft's Windows 2000\/2003\/3.1\/95\/98\/CE\/Millenium\/NT\/XP\/Vista\/7 (i.e., Aero), Unix's X-Windows (e.g., which may include additional Unix graphic interface libraries and layers such as K Desktop Environment (KDE), mythTV and GNU Network Object Model Environment (GNOME)), web interface libraries (e.g., ActiveX, AJAX, (D)HTML, FLASH, Java, JavaScript, etc. interface libraries such as, but not limited to, Dojo, jQuery(UI), MooTools, Prototype, script.aculo.us, SWFObject, Yahoo! User Interface, any of which may be used and) provide a baseline and means of accessing and displaying information graphically to users.","A user interface component  is a stored program component that is executed by a CPU. The user interface may be a conventional graphic user interface as provided by, with, and\/or atop operating systems and\/or operating environments such as already discussed. The user interface may allow for the display, execution, interaction, manipulation, and\/or operation of program components and\/or system facilities through textual and\/or graphical facilities. The user interface provides a facility through which users may affect, interact, and\/or operate a computer system. A user interface may communicate to and\/or with other components in a component collection, including itself, and\/or facilities of the like. Most frequently, the user interface communicates with operating systems, other program components, and\/or the like. The user interface may contain, communicate, generate, obtain, and\/or provide program component, system, user, and\/or data communications, requests, and\/or responses.","A Web browser component  is a stored program component that is executed by a CPU. The Web browser may be a conventional hypertext viewing application such as Microsoft Internet Explorer or Netscape Navigator. Secure Web browsing may be supplied with bit (or greater) encryption by way of HTTPS, SSL, and\/or the like. Web browsers allowing for the execution of program components through facilities such as ActiveX, AJAX, (D)HTML, FLASH, Java, JavaScript, web browser plug-in APIs (e.g., FireFox, Safari Plug-in, and\/or the like APIs), and\/or the like. Web browsers and like information access tools may be integrated into PDAs, cellular telephones, and\/or other mobile devices. A Web browser may communicate to and\/or with other components in a component collection, including itself, and\/or facilities of the like. Most frequently, the Web browser communicates with information servers, operating systems, integrated program components (e.g., plug-ins), and\/or the like; e.g., it may contain, communicate, generate, obtain, and\/or provide program component, system, user, and\/or data communications, requests, and\/or responses. Also, in place of a Web browser and information server, a combined application may be developed to perform similar operations of both. The combined application would similarly affect the obtaining and the provision of information to users, user agents, and\/or the like from the DATCM enabled nodes. The combined application may be nugatory on systems employing standard Web browsers.","A mail server component  is a stored program component that is executed by a CPU . The mail server may be a conventional Internet mail server such as, but not limited to sendmail, Microsoft Exchange, and\/or the like. The mail server may allow for the execution of program components through facilities such as ASP, ActiveX, (ANSI) (Objective\u2212) C (++), C# and\/or .NET, CGI scripts, Java, JavaScript, PERL, PHP, pipes, Python, WebObjects, and\/or the like. The mail server may support communications protocols such as, but not limited to: Internet message access protocol (IMAP), Messaging Application Programming Interface (MAPI)\/Microsoft Exchange, post office protocol (POP3), simple mail transfer protocol (SMTP), and\/or the like. The mail server can route, forward, and process incoming and outgoing mail messages that have been sent, relayed and\/or otherwise traversing through and\/or to the DATCM.","Access to the DATCM mail may be achieved through a number of APIs offered by the individual Web server components and\/or the operating system.","Also, a mail server may contain, communicate, generate, obtain, and\/or provide program component, system, user, and\/or data communications, requests, information, and\/or responses.","A mail client component  is a stored program component that is executed by a CPU . The mail client may be a conventional mail viewing application such as Apple Mail, Microsoft Entourage, Microsoft Outlook, Microsoft Outlook Express, Mozilla, Thunderbird, and\/or the like. Mail clients may support a number of transfer protocols, such as: IMAP, Microsoft Exchange, POP3, SMTP, and\/or the like. A mail client may communicate to and\/or with other components in a component collection, including itself, and\/or facilities of the like. Most frequently, the mail client communicates with mail servers, operating systems, other mail clients, and\/or the like; e.g., it may contain, communicate, generate, obtain, and\/or provide program component, system, user, and\/or data communications, requests, information, and\/or responses. Generally, the mail client provides a facility to compose and transmit electronic mail messages.","A cryptographic server component  is a stored program component that is executed by a CPU , cryptographic processor , cryptographic processor interface , cryptographic processor device , and\/or the like. Cryptographic processor interfaces will allow for expedition of encryption and\/or decryption requests by the cryptographic component; however, the cryptographic component, alternatively, may run on a conventional CPU. The cryptographic component allows for the encryption and\/or decryption of provided data. The cryptographic component allows for both symmetric and asymmetric (e.g., Pretty Good Protection (PGP)) encryption and\/or decryption. The cryptographic component may employ cryptographic techniques such as, but not limited to: digital certificates (e.g., X.509 authentication framework), digital signatures, dual signatures, enveloping, password access protection, public key management, and\/or the like. The cryptographic component will facilitate numerous (encryption and\/or decryption) security protocols such as, but not limited to: checksum, Data Encryption Standard (DES), Elliptical Curve Encryption (ECC), International Data Encryption Algorithm (IDEA), Message Digest 5 (MD5, which is a one way hash operation), passwords, Rivest Cipher (RC5), Rijndael, RSA (which is an Internet encryption and authentication system that uses an algorithm developed in 1977 by Ron Rivest, Adi Shamir, and Leonard Adleman), Secure Hash Algorithm (SHA), Secure Socket Layer (SSL), Secure Hypertext Transfer Protocol (HTTPS), and\/or the like. Employing such encryption security protocols, the DATCM may encrypt all incoming and\/or outgoing communications and may serve as node within a virtual private network (VPN) with a wider communications network. The cryptographic component facilitates the process of \u201csecurity authorization\u201d whereby access to a resource is inhibited by a security protocol wherein the cryptographic component effects authorized access to the secured resource. In addition, the cryptographic component may provide unique identifiers of content, e.g., employing and MD5 hash to obtain a unique signature for a digital audio file. A cryptographic component may communicate to and\/or with other components in a component collection, including itself, and\/or facilities of the like. The cryptographic component supports encryption schemes allowing for the secure transmission of information across a communications network to enable the DATCM component to engage in secure transactions if so desired. The cryptographic component facilitates the secure accessing of resources on the DATCM and facilitates the access of secured resources on remote systems; i.e., it may act as a client and\/or server of secured resources. Most frequently, the cryptographic component communicates with information servers, operating systems, other program components, and\/or the like. The cryptographic component may contain, communicate, generate, obtain, and\/or provide program component, system, user, and\/or data communications, requests, and\/or responses.","The DATCM database component  may be embodied in a database and its stored data. The database is a stored program component, which is executed by the CPU; the stored program component portion configuring the CPU to process the stored data. The database may be a conventional, fault tolerant, relational, scalable, secure database such as Oracle or Sybase. Relational databases are an extension of a flat file. Relational databases consist of a series of related tables. The tables are interconnected via a key field. Use of the key field allows the combination of the tables by indexing against the key field; i.e., the key fields act as dimensional pivot points for combining information from various tables. Relationships generally identify links maintained between tables by matching primary keys. Primary keys represent fields that uniquely identify the rows of a table in a relational database. More precisely, they uniquely identify rows of a table on the \u201cone\u201d side of a one-to-many relationship.","Alternatively, the DATCM database may be implemented using various standard data-structures, such as an array, hash, (linked) list, struct, structured text file (e.g., XML), table, and\/or the like. Such data-structures may be stored in memory and\/or in (structured) files. In another alternative, an object-oriented database may be used, such as Frontier, ObjectStore, Poet, Zope, and\/or the like. Object databases can include a number of object collections that are grouped and\/or linked together by common attributes; they may be related to other object collections by some common attributes. Object-oriented databases perform similarly to relational databases with the exception that objects are not just pieces of data but may have other types of capabilities encapsulated within a given object. If the DATCM database is implemented as a data-structure, the use of the DATCM database  may be integrated into another component such as the DATCM component . Also, the database may be implemented as a mix of data structures, objects, and relational structures. Databases may be consolidated and\/or distributed in countless variations through standard data processing techniques. Portions of databases, e.g., tables, may be exported and\/or imported and thus decentralized and\/or integrated.","In one embodiment, the database component  includes several tables -. A User table may include fields such as, but not limited to: user_id, ssn, dob, first_name, last_name, age, state, address_firstline, address_secondline, zipcode, devices_list, contact_info, contact_type, alt_contact_info, alt_contact_type, user_equipment, user_plane, user_profile, and\/or the like. An Account table may include fields such as, but not limited to: acct_id, acct_user, acct_history, acct_access, acct_status, acct_subscription, acct_profile, and\/or the like.","A Profile table may include fields such as, but not limited to: prof_id, prof_assets, prof_history, prof_details, profile_aircraft, and\/or the like. A Terrain table may include fields such as, but not limited to: terrain_id, terrain_details, terrain_parameters, terrain_var, and\/or the like. A Resource table may include fields such as, but not limited to: resource_id, resource_location, resource_acct, and\/or the like. An Equipment table may include fields such as, but not limited to: equip_id, equip_location, equip_acct, equip_contact, equip_type, and\/or the like. A Model table may include fields such as, but not limited to: model_id, model_assc, model_PPI, model_feedback, model_param, model_var, and\/or the like. A Weather data table may include fields such as, but not limited to: weather_data_id, weather_source, weather_location, weather_data_type, weather_acct, weather_icing, weather_var, and\/or the like. In one embodiment, the weather data table is populated through one or more weather data feeds. A Feedback table may include fields such as, but not limited to: feedback_id, feedback_source, source_location, feedback_time, feedback_acct, and\/or the like.","An Aircraft table may include fields such as, but not limited to: aircraft_id, aircraft_type, aircraft_profile, aircraft_fuel_capacity, aircraft_route, aircraft_use, aircraft_owner, aircraft_location, aircraft_acct, aircraft_flightplan, aircraft_parameters, aircraft_airfoil, aircraft_alerts, and\/or the like. A Flight Plan table may include fields such as, but not limited to: flightplan_id, flightplan_source, flightplan_start_location, flightplan_start_time, flightplan_end_location, flightplan_end_time, flightplan_acct, flightplan_aircraft, flightplan_profile, flightplan_type, flightplan_alerts, flightplan_parameters, flightplan_airfoil, flightplan_PPI and\/or the like. An Airfoil table  may include fields such as, but not limited to: airfoil_id, airfoil_source, airfoil_aircraft, airfoil_icing_profile, airfoil_icing_determination, airfoil_profile, airfoil_type, airfoil_pi, airfoil_alerts, airfoil_parameters, airfoil_PPI, and\/or the like.","A Radar table may include fields such as, but not limited to: radar_id, radar_source, radar_profile, radar_data, radar_type, radar_feed, radar_alerts, radar_parameters, and\/or the like.","A Lightning data table may include fields such as, but not limited to: lightning_data_id, lightning_data_source, lightning_source_profile, lightning_location, lightning_type, lightning_feed, lightning_alerts, lightning_data_parameters, and\/or the like.","A Satellite table may include fields such as, but not limited to: satellite_id, satellite_source, satellite_profile, satellite_type, satellite_feed, satellite_parameters, and\/or the like.","In one embodiment, the DATCM database may interact with other database systems. For example, employing a distributed database system, queries and data access by search DATCM component may treat the combination of the DATCM database, an integrated data security layer database as a single database entity.","In one embodiment, user programs may contain various user interface primitives, which may serve to update the DATCM. Also, various accounts may require custom database tables depending upon the environments and the types of clients the DATCM may need to serve. It should be noted that any unique fields may be designated as a key field throughout. In an alternative embodiment, these tables have been decentralized into their own databases and their respective database controllers (i.e., individual database controllers for each of the above tables). Employing standard data processing techniques, one may further distribute the databases over several computer systemizations and\/or storage devices. Similarly, configurations of the decentralized database controllers may be varied by consolidating and\/or distributing the various database components -. The DATCM may be configured to keep track of various settings, inputs, and parameters via database controllers.","The DATCM database may communicate to and\/or with other components in a component collection, including itself, and\/or facilities of the like. Most frequently, the DATCM database communicates with the DATCM component, other program components, and\/or the like. The database may contain, retain, and provide information regarding other nodes and data.","The DATCM component  is a stored program component that is executed by a CPU. In one embodiment, the DATCM component incorporates any and\/or all combinations of the aspects of the DATCM discussed in the previous figures. As such, the DATCM affects accessing, obtaining and the provision of information, services, transactions, and\/or the like across various communications networks. The features and embodiments of the DATCM discussed herein increase network efficiency by reducing data transfer requirements by the use of more efficient data structures and mechanisms for their transfer and storage. As a consequence, more data may be transferred in less time, and latencies with regard to transactions, are also reduced. In many cases, such reduction in storage, transfer time, bandwidth requirements, latencies, etc., will reduce the capacity and structural infrastructure requirements to support the DATCM's features and facilities, and in many cases reduce the costs, energy consumption\/requirements, and extend the life of DATCM's underlying infrastructure; this has the added benefit of making the DATCM more reliable. Similarly, many of the features and mechanisms are designed to be easier for users to use and access, thereby broadening the audience that may enjoy\/employ and exploit the feature sets of the DATCM; such ease of use also helps to increase the reliability of the DATCM. In addition, the feature sets include heightened security as noted via the Cryptographic components , ,  and throughout, making access to the features and data more reliable and secure. Additionally, the DATCM enables more efficient and safe flight planning and routing, including real-time dynamic responsiveness to changing weather conditions.","The DATCM component may transform weather data input via DATCM components into real-time and\/or predictive icing feeds and displays, and\/or the like and use of the DATCM. In one embodiment, the DATCM component  takes inputs (e.g., weather forecast data, atmospheric data, models, sensor data, and\/or the like) etc., and transforms the inputs via various components (a Tracking component ; a Path component ; a Display component ; an Alerting component ; a Planning component ; a PPI component ; an input component ; an icing component ; a CFD component ; a TdA component ; an NWF component ; an MWAVE component ; an INTTURB component ; a VVTURB2 component ; a VVSTORMSE component ; an AIP component , and\/or the like), into outputs (e.g., predictive flight path icing, percent power increase needed, real-time airfoil-specific icing data, flight path modifications\/optimizations, icing alerts, and\/or the like).","The DATCM component enabling access of information between nodes may be developed by employing standard development tools and languages such as, but not limited to: Apache components, Assembly, ActiveX, binary executables, (ANSI) (Objective\u2212) C (++), C# and\/or .NET, database adapters, CGI scripts, Java, JavaScript, mapping tools, procedural and object oriented development tools, PERL, PHP, Python, shell scripts, SQL commands, web application server extensions, web development environments and libraries (e.g., Microsoft's ActiveX; Adobe AIR, FLEX & FLASH; AJAX; (D)HTML; Dojo, Java; JavaScript; jQuery(UI); MooTools; Prototype; script.aculo.us; Simple Object Access Protocol (SOAP); SWFObject; Yahoo! User Interface; and\/or the like), WebObjects, and\/or the like. In one embodiment, the DATCM server employs a cryptographic server to encrypt and decrypt communications. The DATCM component may communicate to and\/or with other components in a component collection, including itself, and\/or facilities of the like. Most frequently, the DATCM component communicates with the DATCM database, operating systems, other program components, and\/or the like. The DATCM may contain, communicate, generate, obtain, and\/or provide program component, system, user, and\/or data communications, requests, and\/or responses.","The structure and\/or operation of any of the DATCM node controller components may be combined, consolidated, and\/or distributed in any number of ways to facilitate development and\/or deployment. Similarly, the component collection may be combined in any number of ways to facilitate deployment and\/or development. To accomplish this, one may integrate the components into a common code base or in a facility that can dynamically load the components on demand in an integrated fashion.","The component collection may be consolidated and\/or distributed in countless variations through standard data processing and\/or development techniques. Multiple instances of any one of the program components in the program component collection may be instantiated on a single node, and\/or across numerous nodes to improve performance through load-balancing and\/or data-processing techniques. Furthermore, single instances may also be distributed across multiple controllers and\/or storage devices; e.g., databases. All program component instances and controllers working in concert may do so through standard data processing communication techniques.","The configuration of the DATCM controller will depend on the context of system deployment. Factors such as, but not limited to, the budget, capacity, location, and\/or use of the underlying hardware resources may affect deployment requirements and configuration. Regardless of if the configuration results in more consolidated and\/or integrated program components, results in a more distributed series of program components, and\/or results in some combination between a consolidated and distributed configuration, data may be communicated, obtained, and\/or provided. Instances of components consolidated into a common code base from the program component collection may communicate, obtain, and\/or provide data. This may be accomplished through intra-application data processing communication techniques such as, but not limited to: data referencing (e.g., pointers), internal messaging, object instance variable communication, shared memory space, variable passing, and\/or the like.","If component collection components are discrete, separate, and\/or external to one another, then communicating, obtaining, and\/or providing data with and\/or to other components may be accomplished through inter-application data processing communication techniques such as, but not limited to: Application Program Interfaces (API) information passage; (distributed) Component Object Model ((D)COM), (Distributed) Object Linking and Embedding ((D)OLE), and\/or the like), Common Object Request Broker Architecture (CORBA), Jini local and remote application program interfaces, JavaScript Object Notation (JSON), Remote Method Invocation (RMI), SOAP, process pipes, shared files, and\/or the like. Messages sent between discrete component components for inter-application communication or within memory spaces of a singular component for intra-application communication may be facilitated through the creation and parsing of a grammar. A grammar may be developed by using development tools such as lex, yacc, XML, and\/or the like, which allow for grammar generation and parsing capabilities, which in turn may form the basis of communication messages within and between components.","For example, a grammar may be arranged to recognize the tokens of an HTTP post command, e.g.:\n\n","where Value1 is discerned as being a parameter because \u201chttp:\/\/\u201d is part of the grammar syntax, and what follows is considered part of the post value. Similarly, with such a grammar, a variable \u201cValue1\u201d may be inserted into an \u201chttp:\/\/\u201d post command and then sent. The grammar syntax itself may be presented as structured data that is interpreted and\/or otherwise used to generate the parsing mechanism (e.g., a syntax description text file as processed by lex, yacc, etc.). Also, once the parsing mechanism is generated and\/or instantiated, it itself may process and\/or parse structured data such as, but not limited to: character (e.g., tab) delineated text, HTML, structured text streams, XML, and\/or the like structured data. In another embodiment, inter-application data processing protocols themselves may have integrated and\/or readily available parsers (e.g., JSON, SOAP, and\/or like parsers) that may be employed to parse (e.g., communications) data. Further, the parsing grammar may be used beyond message parsing, but may also be used to parse: databases, data collections, data stores, structured data, and\/or the like. Again, the desired configuration will depend upon the context, environment, and requirements of system deployment.","For example, in some implementations, the DATCM controller may be executing a PHP script implementing a Secure Sockets Layer (\u201cSSL\u201d) socket server via the information server, which listens to incoming communications on a server port to which a client may send data, e.g., data encoded in JSON format. Upon identifying an incoming communication, the PHP script may read the incoming message from the client device, parse the received JSON-encoded text data to extract information from the JSON-encoded text data into PHP script variables, and store the data (e.g., client identifying information, etc.) and\/or extracted information in a relational database accessible using the Structured Query Language (\u201cSQL\u201d). An exemplary listing, written substantially in the form of PHP\/SQL commands, to accept JSON-encoded input data from a client device via a SSL connection, parse the data to extract variables, and store the data to a database, is provided below:",{"@attributes":{"id":"p-0603","num":"0603"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?PHP"},{"entry":"header(\u2018Content-Type: text\/plain\u2019);"},{"entry":"\/\/ set ip address and port to listen to for incoming data"},{"entry":"$address = \u2018192.168.0.100\u2019;"},{"entry":"$port = 255;"},{"entry":"\/\/ create a server-side SSL socket, listen for\/accept incoming"},{"entry":"communication"},{"entry":"$sock = socket_create(AF_INET, SOCK_STREAM, 0);"},{"entry":"socket_bind($sock, $address, $port) or die(\u2018Could not bind to address\u2019);"},{"entry":"socket_listen($sock);"},{"entry":"$client = socket_accept($sock);"},{"entry":"\/\/ read input data from client device in 1024 byte blocks until end of"},{"entry":"message"},{"entry":"do {"},{"entry":"\u2003\u2002$input = \u201c\u201d;"},{"entry":"\u2003\u2002$input = socket_read($client, 1024);"},{"entry":"\u2003\u2002$data .= $input;"},{"entry":"} while($input != \u201c\u201d);"},{"entry":"\/\/ parse data to extract variables"},{"entry":"$obj = json_decode($data, true);"},{"entry":"\/\/ store input data in a database"},{"entry":"mysql_connect(\u201c201.408.185.132\u201d,$DBserver,$password); \/\/ access"},{"entry":"database server"},{"entry":"mysql_select(\u201cCLIENT_DB.SQL\u201d); \/\/ select database to append"},{"entry":"mysql_query(\u201cINSERT INTO UserTable (transmission)"},{"entry":"VALUES ($data)\u201d); \/\/ add data to UserTable table in a CLIENT database"},{"entry":"mysql_close(\u201cCLIENT_DB.SQL\u201d); \/\/ close connection to database"},{"entry":"?>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Also, the following resources may be used to provide example embodiments regarding SOAP parser implementation:",{"@attributes":{"id":"p-0605","num":"0605"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"http:\/\/www.xay.com\/perl\/site\/lib\/SOAP\/Parser.html"},{"entry":"http:\/\/publib.boulder.ibm.com\/Infocenter\/tivihelp\/v2r1\/Index.jsp?topic=\/"},{"entry":"\u2003\u2002com.ibm.IBMDI.doc\/referenceguide295.htm"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"and other parser implementations:",{"@attributes":{"id":"p-0607","num":"0607"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"http:\/\/publib.boulder.ibm.com\/infocenter\/tivihelp\/v2r1\/index.jsp?topic=\/"},{"entry":"\u2003\u2002com.ibm.IBMDI.doc\/referenceguide259.htm"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"all of which are hereby expressly incorporated by reference herein.","In order to address various issues and advance the art, the entirety of this application for DYNAMIC AIRCRAFT THREAT CONTROLLER MANAGER APPARATUSES, METHODS AND SYSTEMS (including the Cover Page, Title, Headings, Field, Background, Summary, Brief Description of the Drawings, Detailed Description, Claims, Abstract, Figures, Appendices and\/or otherwise) shows by way of illustration various embodiments in which the claimed innovations may be practiced. The advantages and features of the application are of a representative sample of embodiments only, and are not exhaustive and\/or exclusive. They are presented only to assist in understanding and teach the claimed principles. It should be understood that they are not representative of all claimed innovations. As such, certain aspects of the disclosure have not been discussed herein. That alternate embodiments may not have been presented for a specific portion of the innovations or that further undescribed alternate embodiments may be available for a portion is not to be considered a disclaimer of those alternate embodiments. It will be appreciated that many of those undescribed embodiments incorporate the same principles of the innovations and others are equivalent. Thus, it is to be understood that other embodiments may be utilized and functional, logical, operational, organizational, structural and\/or topological modifications may be made without departing from the scope and\/or spirit of the disclosure. As such, all examples and\/or embodiments are deemed to be non-limiting throughout this disclosure. Also, no inference should be drawn regarding those embodiments discussed herein relative to those not discussed herein other than it is as such for purposes of reducing space and repetition. For instance, it is to be understood that the logical and\/or topological structure of any combination of any program components (a component collection), other components and\/or any present feature sets as described in the figures and\/or throughout are not limited to a fixed operating order and\/or arrangement, but rather, any disclosed order is exemplary and all equivalents, regardless of order, are contemplated by the disclosure. Furthermore, it is to be understood that such features are not limited to serial execution, but rather, any number of threads, processes, services, servers, and\/or the like that may execute asynchronously, concurrently, in parallel, simultaneously, synchronously, and\/or the like are contemplated by the disclosure. As such, some of these features may be mutually contradictory, in that they cannot be simultaneously present in a single embodiment. Similarly, some features are applicable to one aspect of the innovations, and inapplicable to others. In addition, the disclosure includes other innovations not presently claimed. Applicant reserves all rights in those presently unclaimed innovations, including the right to claim such innovations, file additional applications, continuations, continuations in part, divisions, and\/or the like thereof. As such, it should be understood that advantages, embodiments, examples, functional, features, logical, operational, organizational, structural, topological, and\/or other aspects of the disclosure are not to be considered limitations on the disclosure as defined by the claims or limitations on equivalents to the claims. It is to be understood that, depending on the particular needs and\/or characteristics of a DATCM individual and\/or enterprise user, database configuration and\/or relational model, data type, data transmission and\/or network framework, syntax structure, and\/or the like, various embodiments of the DATCM may be implemented that enable a great deal of flexibility and customization. For example, aspects of the DATCM may be adapted for integration with flight planning and route optimization. While various embodiments and discussions of the DATCM have been directed to predictive icing, however, it is to be understood that the embodiments described herein may be readily configured and\/or customized for a wide variety of other applications and\/or implementations."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying appendices and\/or drawings illustrate various non-limiting, example, inventive aspects in accordance with the present disclosure:",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIGS. 10-14"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIGS. 18A-F"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 19A"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 19B"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 22A"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 22B"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIGS. 28A-29D"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIGS. 30A-30F"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIGS. 38A-39D"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 40"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 41"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 42"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 43"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 44"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIGS. 45A and 45B"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 46"}]},"DETDESC":[{},{}]}
