---
title: Facilitating access to multiple facets of data
abstract: Disclosed are various embodiments for facilitating access to multiple facets of data. A registry is maintained for multiple facets for a type of business object. Each of the facets corresponds to a distinct set of properties for the type of business object. Two or more facets are hosted by different data stores. The type of business object has a common identifier for each one of the respective facets. A request for a listing of facets for the type of business object is obtained from a client. The listing of facets is provided to the client. The listing of facets is configured to facilitate access to data for each of the facets in the listing from the data stores for the client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08583677&OS=08583677&RS=08583677
owner: Amazon Technologies, Inc.
number: 08583677
owner_city: Reno
owner_country: US
publication_date: 20110304
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["In enterprise environments, data is often represented using business objects. A business object is an abstracted entity that may include a set of instance variables (also known as properties or attributes) and associations with other business objects. Business objects may correspond to coarse-grained concepts around which a business organizes. For example, a retailer may employ various types of business objects to represent products, vendors, customer orders, promotions, and so on.","The present disclosure relates to facilitating access to multiple facets of data. A business object, such as an item, vendor, order, etc., may be understood as a unitary object by users. However, various facets of data for the business object may be split and maintained by different entities on different systems. Such facets may correspond, for example, to logical groupings of properties and relationships as well as time series data. As a non-limiting example, an item object may have a catalog representation that includes titles, categories, descriptions, colors, images, and so on. The item object may also have an inventory representation that includes quantities of the item that are in stock in various warehouses, whether items are in transit, how the items may be shipped, and so on. Further, the item object may have logistic views, forecasting views, pricing views, and other types of representations.","Various embodiments of the present disclosure support business users in making decisions by aggregating data from multiple facets of a business object to present a coherent view of the business object. To this end, interfaces are employed so that the various entities that maintain the multiple facets on different systems define the underlying business concept as a business object and agree on a common identifier for the business object. A hierarchically organized data facet registry with a discovery mechanism facilitates semantically directed browsing of the facets of a business object. In the following discussion, a general description of the system and its components is provided, followed by a discussion of the operation of the same.","With reference to , shown is a networked environment  according to various embodiments. The networked environment  includes a plurality of computing devices . . . N, one or more computing devices , and one or more clients  in data communication by way of a network . The network  includes, for example, the Internet, intranets, extranets, wide area networks (WANs), local area networks (LANs), wired networks, wireless networks, or other suitable networks, etc., or any combination of two or more such networks.","Each computing device  may comprise, for example, a server computer or any other system providing computing capability. Alternatively, each computing device  may correspond to a plurality of computing devices  that are arranged, for example, in one or more server banks or computer banks or other arrangements. For example, a plurality of computing devices  together may comprise a cloud computing resource, a grid computing resource, and\/or any other distributed computing arrangement. Such computing devices  may be located in a single installation or may be distributed among many different geographical locations. For purposes of convenience, each of the computing devices  is referred to herein in the singular. Even though each computing device  is referred to in the singular, it is understood that a plurality of computing devices  may be employed in the various arrangements as described above.","Various applications and\/or other functionality may be executed in each computing device  according to various embodiments. Also, various data is stored in a corresponding data store . . . N that is accessible to the respective computing device . Each data store  may be representative of a plurality of data stores  as can be appreciated. The data stored in the data stores , for example, is associated with the operation of the various applications and\/or functional entities described below.","The components executed on each computing device , for example, include a respective data interface service  and other applications, services, processes, systems, engines, or functionality not discussed in detail herein. The data interface service  is executed to provide access to data stored in the corresponding data store . To this end, the data interface service  may obtain an object identifier  from a client  and return a corresponding data object  to the client . The data object  may include one or more facets of a business object that are maintained by the respective computing device . Each facet of a given instance of a business object may have the same object identifier . In addition, the data objects  may be formatted in a similar manner for each facet. In one example, the data objects  are formatted using JavaScript object notation (JSON).","In some embodiments, the data interface service  may correspond to a web service in a service-oriented architecture. As such, the data interface service  may communicate with clients  by way of representational state transfer (REST), simple object access protocol (SOAP), hypertext transfer protocol (HTTP), and\/or other communication protocols. In other embodiments, the data interface service  may correspond to a client application of a relational database management system (RDBMS) and\/or any other facility that may be used to access data stored in the data store .","The data stored in each data store  includes, for example, one or more data facets  and potentially other data. In some embodiments, each data facet  is associated with a distinct set of properties. Each instance of a business object is uniquely identified by an identifier or key, which may correspond to values in one or more properties or attributes. The identifier is also used to identify an instance of a data facet . In some embodiments of the data store , the identifier may be said to be the primary key for the data facet . Although the data facets  corresponding to a business object may be spread across multiple data stores , it is noted that multiple data facets  may be stored in the same data store . Further, data facets  associated with different business objects may be stored in the same data store .","The computing device  may comprise, for example, a server computer or any other system providing computing capability. Alternatively, a plurality of computing devices  may be employed that are arranged, for example, in one or more server banks or computer banks or other arrangements. For example, a plurality of computing devices  together may comprise a cloud computing resource, a grid computing resource, and\/or any other distributed computing arrangement. Such computing devices  may be located in a single installation or may be distributed among many different geographical locations. For purposes of convenience, the computing device  is referred to herein in the singular. Even though the computing device  is referred to in the singular, it is understood that a plurality of computing devices  may be employed in the various arrangements as described above.","Various applications and\/or other functionality may be executed in the computing device  according to various embodiments. Also, various data is stored in a data store  that is accessible to the computing device . The data store  may be representative of a plurality of data stores  as can be appreciated. The data stored in the data store  includes, for example, registry data  and potentially other data. The data stored in the data store , for example, is associated with the operation of the various applications and\/or functional entities described below.","The components executed on the computing device , for example, include a data facet registry service  and other applications, services, processes, systems, engines, or functionality not discussed in detail herein. The data facet registry service  is executed to provide access to the registry data , which hierarchically organizes data facets  under business objects. In some embodiments, the data facet registry service  may correspond to a web service in a service-oriented architecture. As such, the data facet registry service  may communicate with clients  by way of REST, SOAP, HTTP, and\/or other communication protocols. In other embodiments, the data facet registry service  may correspond to a client application of an RDBMS and\/or any other facility that may be used to access data stored in the data store .","In one non-limiting example, the registry data  is provided as a single JSON object, where each key corresponds to a unique identifier for a business object. The value for this key may correspond to another JSON object, for example, with an identifier key that describes the set of identifiers that are used to retrieve a specific instance of the business object, a descriptive label for the business object, and another JSON object having keys that each correspond to a specific facet. The identifier key may allow the clients  to determine the set of properties that are used to identify a business object. The facets key identifies a set of facets, which may each be described with a uniform resource locator (URL), a label, and additional properties.","Thus, the data facet registry service  may be configured to provide clients  with information such as how to access the various data facets  of a business object with the object identifiers  and how to interpret the data objects . In various embodiments, the data facet registry service  may be configured to interact with the data interface services  to aggregate data regarding a business object. Accordingly, the client  may interact with the data facet registry service  and not directly with the data interface services  in some embodiments.","The client  is representative of a plurality of client devices that may be coupled to the network . The client  may comprise, for example, a processor-based system such as a computer system. Such a computer system may be embodied in the form of a server computer, a desktop computer, a laptop computer, personal digital assistants, cellular telephones, smartphones, set-top boxes, music players, web pads, tablet computer systems, game consoles, electronic book readers, or other devices with like capability. The client  may include a display that comprises, for example, one or more devices such as cathode ray tubes (CRTs), liquid crystal display (LCD) screens, gas plasma-based flat panel displays, LCD projectors, or other types of display devices, etc.","The client  may be configured to execute various applications such as a client application  and\/or other applications. The client application  may be executed to interact with the data facet registry service  and, optionally, the data interface services  in order to obtain data related to business objects. In some embodiments, the client application  may be configured to render various user interfaces to facilitate presentation and browsing of business data. In some embodiments, the client application  may comprise a browser, terminal emulator, remote desktop client, and\/or another type of application that may be employed to render user interfaces that may be generated in part on another device. The client  may be configured to execute applications beyond the client application  such as, for example, browser applications, email applications, instant message applications, and\/or other applications.","Next, a general description of the operation of the various components of the networked environment  is provided. To begin, the data facet registry service  builds the registry data  through manual configuration, receipt of requests to add\/modify\/remove data facets , and\/or discovery of new, changed, or missing data facets . The data facets  for a given type of business object reflect an agreement among diverse entities that maintain the data facets for a common identifier for the data facets . Further, the data facets  and data interface services  reflect an agreement for returning the data in a similar or standardized form of a data object  so that a client application  may process data objects  from newly discovered data facets  without updating the client application . In some cases, one or more data interface services  may correspond to legacy systems with no awareness of the concept of data facets . In such cases, an automatic discovery mechanism may not work, and the data facet registry service  may have to be manually configured to support the data facets  served up by the legacy systems.","After the registry data  is built, the client application  may request listings of business objects and\/or the data facets  associated with the business objects from the data facet registry service . In some embodiments, the client application  may access the registry data  directly. The client application  is presented with a listing of data facets  for a given business object. From this listing, the client application  may be made aware of two important aspects about the data facet . First, the client application  may be made aware of the common identifier used to communicate with the data facet  for the business object. Second, the client application  may be made aware of how to communicate with the data interface services  that serve up the particular data facets . To this end, the listing of the data facets  may specify the data interface service  using web services description language (WSDL).","Accordingly, the client application  may communicate with the various data stores  and the data interface services  associated with them to obtain the data objects  corresponding to the data facets  for a given instance of a business object identified by an object identifier . The client application  may then process the data objects  for presentation to a user or some other use. It is noted that the client application  may interact directly with a user or with some other application or library. Where time series data facets  are used, the object identifier  may, for example, include a specified frequency or time window, e.g., hourly, weekly, monthly, etc. Where property data facets  are used, the object identifier  may, for example, include values for one or more of the properties.","It is noted that the client application  may be configured to store or cache the listing of data facets . Such a cached copy of the listing may facilitate direct access to the data facets  afterward by the client application . Alternatively, the client application  may be configured to request another copy of the listing of the data facets  each time the data is requested.","Moving on to , shown is an example of a data model  that may be employed by the data facet registry service  () executed in the computing device  () in the networked environment  (). The data model  illustrates the hierarchical organization used by the data facet registry service . The data facet registry service  is represented by the root of the data model, the registry . The registry  may include a plurality of business objects . . . N, which each correspond to an abstract business concept such as, for example, catalog items, vendors, purchase orders, and so on.","Each of the business objects  may include a respective plurality of facets . . . N, each of which may correspond to a data facet  () hosted by one or more data interface services  (). As a non-limiting example, for a business object  that corresponds to a catalog item, the business object  may have a description facet , an inventory level facet , a pricing facet , and\/or other facets .","Each one of the facets  may have a plurality of properties . . . N and a plurality of services . . . N. Each of the properties  may correspond to some data field associated with the facet . As a non-limiting example, facet  that is a description facet  may have properties  such as a title property , a category property , and\/or other properties . In addition, each one of the facets  may describe a plurality of services . . . N. Each of the services  may correspond to a data interface service  and may describe access instructions for the facet  from the respective data interface service .","Turning now to , shown are non-limiting examples of user interfaces rendered by the client application  () executed in the client  () in the networked environment  (). These examples are provided merely to illustrate three possible user interfaces that demonstrate principles of the present disclosure. In particular, the user interfaces of  illustrate the browsing and presentation of business data in the networked environment .","To begin,  depicts a user interface  for selecting types of business objects to browse. A plurality of radio buttons , , and are provided to select from the various types of business objects. In this non-limiting example, the user interface  supports browsing for catalog items by selecting the radio button , purchase orders by selecting the radio button , and vendors by selecting the radio button . Although radio buttons  are used in , it is understood that other user interface components such as, for example, buttons, checkboxes, links, etc. may be used in other examples. In this example, the radio button corresponding to \u201cCatalog Items\u201d is selected, while the radio buttons and corresponding to \u201cPurchase Orders\u201d and \u201cVendors,\u201d respectively, remain unselected.","A submit component  may be provided for a user to submit a selection, and a cancel component  may be provided for a user to reset the radio buttons  and\/or dismiss the user interface . In one embodiment, when a user selects a radio button  and submits the form by way of the submit component , the selection of the type of business object may be transmitted from the client application  to the data facet registry service  () in order to retrieve a listing of the facets associated with the type of business object. In another embodiment, the registry data  () and\/or the listing of the facets may be stored on the client  as a cached copy. In yet another embodiment, the data facet registry service  may be configured to generate the user interface  which is then rendered in the client .","Next,  depicts a user interface  that has been generated based at least in part on a listing of data facets  () associated with the selected type of business object, i.e., \u201cCatalog Items.\u201d In this non-limiting example, it has been determined from the registry data  that a combination of a \u201cCatalog Country\u201d and \u201cCatalog SKU\u201d (stock keeping unit) are used to uniquely identify an instance of a \u201cCatalog Item\u201d business object. Accordingly, in an identifier specification area , two property specification components , are provided for a user to specify values for properties used to identify \u201cCatalog Item\u201d business objects. The property specification component indicates that \u201cUS\u201d has been specified as a value for the \u201cCatalog Country\u201d property. The property specification component indicates that \u201c000000-00000-0\u201d has been specified as a value for the \u201cCatalog SKU\u201d property.","In a facet selection area , the user interface  permits a user to select one or more data facets  to be retrieved. Three facet selectors , , and correspond to the data facets  of \u201cDescription,\u201d \u201cInventory Levels,\u201d and \u201cPricing,\u201d respectively. As illustrated, the data facets  of \u201cDescription\u201d and \u201cPricing\u201d are selected. Although the facet selectors  are depicted as checkboxes, it is understood that the facet selectors  may comprise buttons, links, radio buttons, and\/or other user interface components in other embodiments. A submit component  may be provided for a user to submit a facet selection and identifier specification, and a cancel component  may be provided for a user to reset and\/or dismiss the user interface .","Continuing on,  depicts a user interface  generated after obtaining data from the data facets  selected in . Specifically, the data shown in  corresponds to an instance of the \u201cCatalog Item\u201d object having the \u201cCatalog Country\u201d property of \u201cUS\u201d and the \u201cCatalog SKU\u201d property of \u201c000000-00000-0.\u201d In a first facet presentation area , the user interface  shows in two property presentation components and that the \u201cDescription\u201d facet for the object has a \u201cTitle\u201d property of \u201cAn Item\u201d and a \u201cCategory\u201d property of \u201cSale Items.\u201d In other examples, facet properties may be multi-valued and\/or have multimedia values.","In a second facet presentation area , the user interface  shows in three property presentation components , , and that the \u201cPricing\u201d facet for the object has a \u201cCost Price\u201d property of \u201c$4.72,\u201d a \u201cList Price\u201d property of \u201c$8.50,\u201d and another \u201cList Price\u201d property of \u201c$8.50.\u201d It is noted that two values for \u201cList Price\u201d properties are shown. The value shown in the property presentation component is from a data interface service  () corresponding to \u201cSys-1,\u201d and the value shown in the property presentation component is from a data interface service  corresponding to \u201cSys-2.\u201d Thus, in some embodiments, the same type of data facet  may be hosted by multiple systems, with potentially different data values.","Referring next to , shown is a flowchart that provides one example of the operation of a portion of the data facet registry service  according to various embodiments. It is understood that the flowchart of  provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the data facet registry service  as described herein. As an alternative, the flowchart of  may be viewed as depicting an example of steps of a method implemented in the computing device  () according to one or more embodiments. In particular, the flowchart of  relates to the data facet registry service  providing access to the registry data  ().","Beginning with box , the data facet registry service  obtains a request for a listing of data facets  () for a business object from a client application  () over a network  (). Such a request may be for the data facets  for all business objects in the registry data  or one or more specific business objects in the registry data . In box , the data facet registry service  generates a listing of data facets  from the registry data  in response to the request. In various embodiments, the data facet registry service  may enter a discovery mode in order to identify the various data facets  available on data stores  () in the networked environment  (). For example, the data facet registry service  may query the data interface services  () to obtain a listing of facets served up by each data interface service .","In box , the data facet registry service  sends the listing of the data facets  to the client application , where access instructions are provided for each of the data facets  for the business object. For example, the access instructions may define URLs, security credentials, protocols, formatting, and\/or other parameters for the client application  to be able to communicate with the respective data interface services  for the data facets . In one embodiment, the data facet registry service  may simply send all of the registry data  to the client application . Thereafter, the portion of the data facet registry service  ends.","Turning now to , shown is a flowchart that provides one example of the operation of another portion of the data facet registry service  according to various embodiments. It is understood that the flowchart of  provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the data facet registry service  as described herein. As an alternative, the flowchart of  may be viewed as depicting an example of steps of a method implemented in the computing device  () according to one or more embodiments. In particular, the flowchart of  relates to the data facet registry service  constructing the registry data  ().","Beginning with box , the data facet registry service  determines whether a request to add a new data facet  () has been obtained. If a request to add a new data facet  has been obtained, the data facet registry service  moves to box  and adds the data facet  to the registry data  for a specified business object. Thereafter, the portion of the data facet registry service  ends.","If a request to add a new data facet has not been obtained, the data facet registry service  proceeds to box . In box , the data facet registry service  determines whether a request to remove or modify a data facet  has been obtained. If a request to remove or modify a data facet  has been obtained, the data facet registry service  moves to box  and removes or modifies the data facet  in the registry data  for its associated business object. Thereafter, the portion of the data facet registry service  ends.","If a request to remove or modify a data facet  has not been obtained, the data facet registry service  continues to box . In box , the data facet registry service  launches a discovery approach for new data facets . In such a discovery approach, the data facet registry service  may communicate with various data interface services  () in the networked environment  () in order to ascertain whether additional data facets  are available. In box , the data facet registry service  determines whether new data facet(s)  have been found as a result of the discovery. It is noted that some data interface services  may correspond to legacy systems that do not support such a discovery mechanism. If new data facets  have been found, in box , the data facet registry service  adds the discovered data facets  to the registry data  for the specified business object identified by the respective data interface service . The data facet registry service  proceeds to box . If new data facets  have not been found, the data facet registry service  also proceeds to box .","In box , the data facet registry service  launches a discovery approach for modified or missing data facets . In such a discovery approach, the data facet registry service  may communicate with various data interface services  in the networked environment  in order to ascertain whether data facets  have been modified or removed. It is noted that some data interface services  may correspond to legacy systems that do not support such a discovery mechanism. In box , the data facet registry service  determines whether data facet(s)  have been found to be changed as a result of the discovery. If data facets  have been found to be modified or missing, in box , the data facet registry service  commits the changes to the registry data. Thereafter, the portion of the data facet registry service  ends. If no data facets  are found to be modified or missing, the data facet registry service  also ends.","Moving on to  shown is a flowchart that provides one example of the operation of a portion of the client application  according to various embodiments. It is understood that the flowchart of  provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the client application  as described herein. As an alternative, the flowchart of  may be viewed as depicting an example of steps of a method implemented in the client  () according to one or more embodiments.","Beginning with box , the client application  sends a request for a listing of business objects to the data facet registry service  () executed in the computing device  (). In box , the client application  obtains the listing of business objects from the data facet registry service . In box , the client application  obtains an event related to browsing data facets  () of a business object. For example, the client application  may present a user interface  (), and obtain a selection of a business object from the listing of business objects in the user interface . In box , the client application  sends a request for a listing of data facets  for the business object to the data facet registry service  executed in the computing device . In box , the client application  obtains the listing of data facets  for the business object from the data facet registry service . In one embodiment, the registry data  () may be obtained directly.","In box , the client application  determines the common identifier for a requested instance of a business object. For example, the client application  may present a user interface  () to the user for the user to specify values for various attributes that comprise the identifier for the type of business object. In box , the client application  sends a request for data facet(s)  of the instance of the business object to the appropriate data stores  (). Such a request may correspond to the object identifier  (). In one example, all data facets  for the object identifier  are requested. In another example, only selected ones of the data facets  (e.g., selected in a user interface  or other configuration source) are requested.","In box , the client application  obtains the data facets  of the instance of the business object from the appropriate data stores . Such data facets  may be transmitted to the client application  within one or more data objects  () that include time series data items and\/or sets of properties. Although the client application  may be described as communicating with the data stores , it is understood that such communication may encompass communicating with the data interface services . In box , the client application  processes the obtained data objects . For example, the client application  may render a user interface  () to display the data associated with the data facets  to a user. Thereafter, the portion of the client application  ends.","With reference to , shown is a schematic block diagram of the computing device  according to an embodiment of the present disclosure. The computing device  includes at least one processor circuit, for example, having a processor  and a memory , both of which are coupled to a local interface . To this end, the computing device  may comprise, for example, at least one server computer or like device. The local interface  may comprise, for example, a data bus with an accompanying address\/control bus or other bus structure as can be appreciated.","Stored in the memory  are both data and several components that are executable by the processor . In particular, stored in the memory  and executable by the processor  are the data facet registry service  and potentially other applications. Also stored in the memory  may be a data store  and other data. In addition, an operating system may be stored in the memory  and executable by the processor .","It is understood that there may be other applications that are stored in the memory  and are executable by the processors  as can be appreciated. Where any component discussed herein is implemented in the form of software, any one of a number of programming languages may be employed such as, for example, C, C++, C#, Objective C, Java\u00ae, JavaScript\u00ae, Perl, PHP, Visual Basic\u00ae, Python\u00ae, Ruby, Delphi\u00ae, Flash\u00ae, or other programming languages.","A number of software components are stored in the memory  and are executable by the processor . In this respect, the term \u201cexecutable\u201d means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be, for example, a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory  and run by the processor , source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory  and executed by the processor , or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory  to be executed by the processor , etc. An executable program may be stored in any portion or component of the memory  including, for example, random access memory (RAM), read-only memory (ROM), hard drive, solid-state drive, USB flash drive, memory card, optical disc such as compact disc (CD) or digital versatile disc (DVD), floppy disk, magnetic tape, or other memory components.","The memory  is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus, the memory  may comprise, for example, random access memory (RAM), read-only memory (ROM), hard disk drives, solid-state drives, USB flash drives, memory cards accessed via a memory card reader, floppy disks accessed via an associated floppy disk drive, optical discs accessed via an optical disc drive, magnetic tapes accessed via an appropriate tape drive, and\/or other memory components, or a combination of any two or more of these memory components. In addition, the RAM may comprise, for example, static random access memory (SRAM), dynamic random access memory (DRAM), or magnetic random access memory (MRAM) and other such devices. The ROM may comprise, for example, a programmable read-only memory (PROM), an erasable programmable read-only memory (EPROM), an electrically erasable programmable read-only memory (EEPROM), or other like memory device.","Also, the processor  may represent multiple processors  and the memory  may represent multiple memories  that operate in parallel processing circuits, respectively. In such a case, the local interface  may be an appropriate network  () that facilitates communication between any two of the multiple processors , between any processor  and any of the memories , or between any two of the memories , etc. The local interface  may comprise additional systems designed to coordinate this communication, including, for example, performing load balancing. The processor  may be of electrical or of some other available construction.","Although the data facet registry service , the data interface service  (), the client application  (), and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above, as an alternative the same may also be embodied in dedicated hardware or a combination of software\/general purpose hardware and dedicated hardware. If embodied in dedicated hardware, each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include, but are not limited to, discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals, application specific integrated circuits having appropriate logic gates, or other components, etc. Such technologies are generally well known by those skilled in the art and, consequently, are not described in detail herein.","The flowcharts of  show the functionality and operation of an implementation of portions of the data facet registry service  and the client application . If embodied in software, each block may represent a module, segment, or portion of code that comprises program instructions to implement the specified logical function(s). The program instructions may be embodied in the form of source code that comprises human-readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor  in a computer system or other system. The machine code may be converted from the source code, etc. If embodied in hardware, each block may represent a circuit or a number of interconnected circuits to implement the specified logical function(s).","Although the flowcharts of  show a specific order of execution, it is understood that the order of execution may differ from that which is depicted. For example, the order of execution of two or more blocks may be scrambled relative to the order shown. Also, two or more blocks shown in succession in  may be executed concurrently or with partial concurrence. Further, in some embodiments, one or more of the blocks shown in  may be skipped or omitted. In addition, any number of counters, state variables, warning semaphores, or messages might be added to the logical flow described herein, for purposes of enhanced utility, accounting, performance measurement, or providing troubleshooting aids, etc. It is understood that all such variations are within the scope of the present disclosure.","Also, any logic or application described herein, including the data facet registry service , the data interface service , and the client application , that comprises software or code can be embodied in any non-transitory computer-readable medium for use by or in connection with an instruction execution system such as, for example, a processor  in a computer system or other system. In this sense, the logic may comprise, for example, statements including instructions and declarations that can be fetched from the computer-readable medium and executed by the instruction execution system. In the context of the present disclosure, a \u201ccomputer-readable medium\u201d can be any medium that can contain, store, or maintain the logic or application described herein for use by or in connection with the instruction execution system. The computer-readable medium can comprise any one of many physical media such as, for example, magnetic, optical, or semiconductor media. More specific examples of a suitable computer-readable medium would include, but are not limited to, magnetic tapes, magnetic floppy diskettes, magnetic hard drives, memory cards, solid-state drives, USB flash drives, or optical discs. Also, the computer-readable medium may be a random access memory (RAM) including, for example, static random access memory (SRAM) and dynamic random access memory (DRAM), or magnetic random access memory (MRAM). In addition, the computer-readable medium may be a read-only memory (ROM), a programmable read-only memory (PROM), an erasable programmable read-only memory (EPROM), an electrically erasable programmable read-only memory (EEPROM), or other type of memory device.","It should be emphasized that the above-described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above-described embodiment(s) without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Many aspects of the present disclosure can be better understood with reference to the following drawings. The components in the drawings are not necessarily to scale, emphasis instead being placed upon clearly illustrating the principles of the disclosure. Moreover, in the drawings, like reference numerals designate corresponding parts throughout the several views.",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 1B","FIG. 1A"]},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIGS. 2A-2C","FIG. 1A"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIGS. 3 and 4","FIG. 1A"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 5","FIG. 1A"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 6","FIG. 1A"]}]},"DETDESC":[{},{}]}
