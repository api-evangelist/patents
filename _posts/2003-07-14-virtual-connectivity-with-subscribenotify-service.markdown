---
title: Virtual connectivity with subscribe-notify service
abstract: A middle layer network protocol enhancement, virtual connectivity (VC) makes the network attachment point changes of local and remote peers transparent to applications that use network services. A virtual connectivity module local to each peer translates communication connection parameters from apparent to real and vice versa, as well as sending and receiving secure connection updates directly to and from peers. Unlike Mobile IP, no routing infrastructure modifications are required. A subscribe-notify service provides connection update notifications when direct peer-to-peer connection updates are not possible, for example, when two communicating peers move simultaneously or when the moving peer is communicating with a peer behind network address translation (NAT). Methods for detecting these conditions are disclosed, as is a virtual connectivity protocol and virtual connectivity module architecture.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07769866&OS=07769866&RS=07769866
owner: Microsoft Corporation
number: 07769866
owner_city: Redmond
owner_country: US
publication_date: 20030714
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This invention pertains generally to computer networks, and, more particularly, to computer networks in which a networked computer is capable of changing its network attachment point.","Today's large computer networks typically provide a network user, particularly a mobile network user, with the opportunity to attach to the network at multiple points. The network user may be motivated to change network attachment points because different network attachment points may, for example, offer different qualities of service, at different costs, and\/or be maintained by different organizations. A computer may even be configured to automatically change network attachment points, for example, in order to minimize cost and\/or maximize quality of service.","It is typically desirable for applications that utilize computer network services, that the computer network service be as transparent as possible to the application, that is, that the application need be aware of as few computer network service implementation details as possible, particularly with regard to lower layer network protocol changes. For computer networks that don't incorporate suitable facilities in to their base protocol, making network attachment point change transparent to an application may require additional mechanisms. For example, when a computer changes its attachment point to the Internet, the new network attachment point is typically associated with a new Internet Protocol (IP) address. Under baseline Internet Protocol version 4 (IPv4) or Internet Protocol version 6 (IPv6), for example, an application on the computer that has active connections before a network attachment point change may need to make provision to rebuild those connections following the change.","For the purposes of this description, conventional attempts to make network attachment point change transparent to the application may be classified as infrastructure solutions and end-to-end solutions. Infrastructure solutions typically require additional network elements and\/or network routing system modifications. For example, Mobile IP for IPv4 and Mobile IP for IPv6 are routing-based infrastructure solutions that require an additional Home Agent network element. In contrast, end-to-end solutions manage network attachment point change at communication endpoints, independent of network routing. An example end-to-end solution is described by Snoeren et al., --6ACM\/IEEE International Conference on Mobile Computing and Networking, August 2000 (\u201cSnoeren et al\u201d). An advantage of end-to-end solutions is that they may enable transparent network attachment point change without modification to existing network infrastructure.","Conventional solutions have drawbacks. For example, Mobile IP for IPv4 and Mobile IP for IPv6 include routing indirection which may introduce routing inefficiencies and violate network security models. Some conventional end-to-end solutions fail to handle the case where each computer that is party to a communication connection changes its network attachment point simultaneously, or else handle the case inconsistently. The use of Network Address Translation (NAT) in a computer network is another aspect of modern computer networks that is handled inefficiently and\/or inconsistently by some conventional solutions.","Some conventional solutions handle different versions of a network protocol differently, which may harm transparency. Some computer networks provide support layered protocols, for example, the Internet Protocol is commonly used in conjunction with a Transmission Control Protocol (TCP) and a User Datagram Protocol (UDP). Some conventional solutions support aspects of upper protocol layers only inefficiently or inconsistently, for example, a solution may support TCP over IP but fail to work properly with UDP over IP. Transparency may be improved if the application need not be aware that different aspects of a layered protocol are handled differently.","This section presents a simplified summary of some embodiments of the invention. This summary is not an extensive overview of the invention. It is not intended to identify key\/critical elements of the invention or to delineate the scope of the invention. Its sole purpose is to present some embodiments of the invention in a simplified form as a prelude to the more detailed description that is presented later.","In an embodiment of the invention, network attachment point change event subscriptions are received from network attachment point change event subscribers. Network attachment point change event publications are received from network attachment point change event publishers. When a network attachment point change event matches a network attachment point change event subscription, the subscriber that sent the network attachment point change event subscription is notified.","In an embodiment of the invention, a computer may send a subscribe message to a virtual connectivity subscribe-notify service subscribing to network attachment point change events published by a remote peer.","In an embodiment of the invention, a computerized system includes a virtual connectivity subscribe-notify service match module configured to search a network attachment point change event subscription database for network attachment point change event subscriptions that match network attachment point change events.","Prior to proceeding with a description of the various embodiments of the invention, a description of a computer and networking environment in which the various embodiments of the invention may be practiced is now provided. Although not required, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, programs include routines, objects, components, data structures and the like that perform particular tasks or implement particular abstract data types. The term \u201cprogram\u201d as used herein may connote a single program module or multiple program modules acting in concert. The terms \u201ccomputer\u201d and \u201ccomputing device\u201d as used herein include any device that electronically executes one or more programs, such as personal computers (PCs), hand-held devices, multi-processor systems, microprocessor-based programmable consumer electronics, network PCs, minicomputers, tablet PCs, laptop computers, consumer appliances having a microprocessor or microcontroller, routers, gateways, hubs and the like. The invention may also be employed in distributed computing environments, where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, programs may be located in both local and remote memory storage devices.","An example of a computer networking environment suitable for incorporating aspects of the invention is described with reference to . The example computer networking environment includes several computers  communicating with one another over a network , represented by a cloud. Network  may include many well-known components, such as routers, gateways, hubs, etc. and allows the computers  to communicate via wired and\/or wireless media. When interacting with one another over the network , one or more of the computers  may act as clients, servers or peers with respect to other computers . Accordingly, the various embodiments of the invention may be practiced on clients, servers, peers or combinations thereof, even though specific examples contained herein may not refer to all of these types of computers.","Referring to , an example of a basic configuration for the computer  on which aspects of the invention described herein may be implemented is shown. In its most basic configuration, the computer  typically includes at least one processing unit  and memory . The processing unit  executes instructions to carry out tasks in accordance with various embodiments of the invention. In carrying out such tasks, the processing unit  may transmit electronic signals to other parts of the computer  and to devices outside of the computer  to cause some result. Depending on the exact configuration and type of the computer , the memory  may be volatile (such as RAM), non-volatile (such as ROM or flash memory) or some combination of the two. This most basic configuration is illustrated in  by dashed line .","The computer  may also have additional features\/functionality. For example, computer  may also include additional storage (removable  and\/or non-removable ) including, but not limited to, magnetic or optical disks or tape. Computer storage media includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information, including computer-executable instructions, data structures, program modules, or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory, CD-ROM, digital versatile disk (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to stored the desired information and which can be accessed by the computer . Any such computer storage media may be part of computer .","The computer  preferably also contains communications connections  that allow the device to communicate with other devices such as remote computer(s) . A communication connection is an example of a communication medium. Communication media typically embody computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. By way of example, and not limitation, the term \u201ccommunication media\u201d includes wireless media such as acoustic, RF, infrared and other wireless media. The term \u201ccomputer-readable medium\u201d as used herein includes both computer storage media and communication media.","The computer  may also have input devices  such as a keyboard\/keypad, mouse, pen, voice input device, touch input device, etc. Output devices  such as a display, speakers, a printer, etc. may also be included. All these devices are well known in the art and need not be described at length here.","In the description that follows, the invention will be described with reference to acts and symbolic representations of operations that are performed by one or more computing devices, unless indicated otherwise. As such, it will be understood that such acts and operations, which are at times referred to as being computer-executed, include the manipulation by the processing unit of the computer of electrical signals representing data in a structured form. This manipulation transforms the data or maintains it at locations in the memory system of the computer, which reconfigures or otherwise alters the operation of the computer in a manner well understood by those skilled in the art. The data structures where data is maintained are physical locations of the memory that have particular properties defined by the format of the data. However, while the invention is being described in the foregoing context, it is not meant to be limiting as those of skill in the art will appreciate that various of the acts and operation described hereinafter may also be implemented in hardware.","In an embodiment of the invention, a protocol for establishing and maintaining communication connections in a computer network may be implemented by multiple protocol layers, for example, corresponding to layers described by an Open Systems Interconnect (OSI) model of the International Standards Organization (ISO). For details of an OSI model see Zimmerman, , IEEE Transactions on Communications, April 1980. In an embodiment of the invention, a virtual connectivity (VC) layer is added to the protocol or is incorporated into an existing protocol layer. In what follows, examples are described with reference to the Internet Protocol (IP) and IP-based protocols, however, embodiments of the invention are not so limited, and the examples may be generalized to any networking protocol with stateless routing.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 3","FIG. 1"],"b":["302","304","306","304","102","306"]},"An application layer  utilizes network services by interacting with the upper network layers . The upper network layers  interact with the virtual connectivity layer , and the virtual connectivity layer  interacts with the lower networking layers . At least one of the lower networking layers  interacts with the physical transmission medium. In an embodiment of the invention, the virtual connectivity layer  virtualizes communication connections (e.g., the communication connections  of ) by enabling the application layer  to refer to a connection by the connection's original identification information even if a party to the connection changes its network attachment point.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 4","FIG. 5","FIG. 4","FIG. 4"],"b":["402","404","406","408","410","412","414","408","406","406","406"]},"In some conventional TCP\/IP implementations, the IP layer and TCP layer are implemented as a single data processing module, for example, to increase performance. When this is the case, it may be advantageous to add a virtual connectivity layer  at an alternate location shown in , for example, so as to minimize modification of the existing implementation. Minimizing modifications to the existing implementation may reduce the number of errors introduced by a new module, thus resulting in a more stable system post-modification. In , the virtual connectivity layer  is located between a fused TCP\/IP layer  and the device driver  (i.e., the same device driver as device driver  of ). Outgoing data is intercepted by the virtual connectivity layer  after being processed by the TCP\/IP layer . Incoming data is intercepted by the virtual connectivity layer  before being passed to the TCP\/IP layer .",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 6","FIG. 2"],"b":["600","602","604","606","604","214","608"]},"The virtual connectivity module  may include a virtual connectivity subscribe-notify service (VC SNS) proxy component  which serves as a local proxy to a remote virtual connectivity subscribe-notify service (not shown in , but described below with reference to ). The particular remote virtual connectivity subscribe-notify service utilized by the local component  may, for example, be configured via dynamic host configuration protocol (DHCP). In the example depicted by , the VC SNS proxy  is executed in user-mode whereas the remaining components of the virtual connectivity module  are executed in kernel-mode. The dashed line  delineates the boundary between kernel-mode and user-mode in an executing virtual connectivity module . The use of kernel-mode and user-mode in the context of a computer operating system is known in the art and need not be detailed here.","The local connection translation table  includes an entry for each active communication connection between peers. In an embodiment of the invention, the entry is added when the communication connection is established and deleted when the communication connection ends. Each entry in the local connection translation table  associates an original connection specification with a current connection specification. A connection specification includes one or more communication connection parameters and may uniquely identify a communication connection for a particular network protocol layer or set of network protocol layers. In an embodiment of the invention, there is a one-to-one relationship between each original connection specification and current connection specification.","The connection specification may include a network attachment point identifier (a network address) for each peer participating in the connection, for example, an IP address in an IP network, an IP address and TCP port in a TCP\/IP network, or an IP address and UDP port in an UDP\/IP network. In an embodiment of the invention, if none of the peers participating in an active communication connection has changed its network attachment point, the current connection specification for the corresponding entry is the same as the original connection specification. However, if one or more of the peers does move (i.e., does change its network attachment point) then the current connection specification is updated. In an embodiment of the invention, the original connection specification remains unchanged throughout the life of the communication connection.","The following table is an example of a connection specification for an IP-based computer network supporting upper layer protocols such as TCP and UDP.",{"@attributes":{"id":"p-0051","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Name","Type"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Local IP Address","IPv4 or IPv6 address"]},{"entry":[{},"Local Port","16 bit port number"]},{"entry":[{},"Remote IP Address","IPv4 or IPv6 address"]},{"entry":[{},"Remote Port","16 bit port number"]},{"entry":[{},"Upper Layer Protocol Type","Protocol type enumeration"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The table includes a local IP address identifying the IP network attachment point of the local peer and a local port number identifying an upper layer protocol port at the local peer. The local peer may participate in multiple communication connections. Each communication connection may be associated with a port number. Similarly, the table further includes a remote IP address and remote port number. The upper layer protocol type indicates a type of upper layer protocol being routed by the IP network, for example, TCP or UDP. In an embodiment of the invention, the combination of local and remote IP addresses, upper layer protocol type, and local and remote port numbers specifies a communication connection.","The virtual connectivity module  may intercept each outgoing network protocol unit (e.g., IP datagram) in an outbound data stream and each incoming network protocol unit in an inbound data stream. In an embodiment of the invention, for each outgoing network protocol unit intercepted by the virtual connectivity module , the local connection translation component  translates the connection specification associated with the outgoing network protocol unit from the original connection specification to the current connection specification. Furthermore, for each incoming network protocol unit intercepted by the virtual connectivity module , the local connection translation component  translates the connection specification associated with the incoming network protocol unit from the current connection specification to the original connection specification. An example translation operation is illustrated in  for an IP-based network.","In , the local connection translation table  includes original connection specifications  associated with current connection specifications . One of the original connection specifications IP:IPincludes a local IP address IPand a remote IP address IP, that is, at the time the active connection was originally established, the local computer was attached to the IP network at address IPand the remote computer was attached to the IP network at address IP. At some point during the life of the connection, the remote computer changed its IP network attachment point to address IP, as a result the current connection specification IP:IPis different from the original connection specification IP:IP. The current connection specification IP:IPhas the same local IP address IPbut the remote IP address IPhas changed from the original remote IP address IP. The remote port number may likewise change although this detail is not shown in .","An outgoing protocol unit  is intercepted by the virtual connectivity module  () and submitted to the local connection translation component  for translation. Each protocol unit , , ,  may be an IP datagram, a TCP datagram, a UDP datagram, or the like. Each protocol unit , , ,  is associated with a source (from) IP address and a destination (to) IP address. The IP addresses may be incorporated into the protocol unit, for example, in the case of an IP datagram, or may be part of the context of the protocol unit, for example, contextual data parsed from lower protocol layers, parsed from previous protocol units in the data stream, explicitly specified by upper protocol layers, or part of the operating system environment.","The local connection translation component  determines the connection specification for the outgoing protocol unit . For the outgoing protocol unit  this corresponds to the original connection specification IP:IP. The local connection translation component  then performs a lookup of the local connection translation table  (utilizing well-known techniques) to find the corresponding current connection specification which, in this case, is current connection specification IP:IP. The local connection translation component  replaces the IP address and any other connection specification associations of protocol unit  (in the protocol unit or in the protocol unit's context, as appropriate) with data from the current connection specification IP:IPresulting in translated outgoing protocol unit .","Similarly, incoming protocol unit  is intercepted by the virtual connectivity module and submitted to the local connection translation module  for translation. The local connection translation module determines that incoming protocol unit  is associated with current connection specification IP:IP, performs a lookup of the local connection translation table  to find the corresponding original connection specification IP:IP, and then replaces the connection specification associations of protocol unit  to give translated incoming protocol unit , which is then passed on to the higher protocol layers. In an embodiment of the invention, the upper protocol layers and in particular the application, see connection specification information corresponding to the original connection specification while the lower protocol layers see connection specification information corresponding to the current connection specification.","Returning to , in an embodiment of the invention, the current connection specification may be updated because the local peer (i.e., the peer where the local connection translation table  resides) moves or because a remote peer moves. In an embodiment of the invention, each peer participating in a connection has its own virtual connectivity module  and thus its own local connection translation (LCT) table . If one of the peers participating in the connection moves, in an embodiment of the invention, the corresponding current connection specification is updated at each participating peer. The virtual connectivity module  may be capable of detecting a local change in network attachment point, or may be informed of the local change by another local module, e.g., the local module that initiated the change. The locally detected change may first result in an update of the local LCT table . The following table shows an example update of parts of a local LCT table for an IP-based network.",{"@attributes":{"id":"p-0059","num":"0058"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Original Connection","Current Connection"]},{"entry":[{},"Specification","Specification"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Before","IP, port, IP, port, TCP","IP, port, IP, port, TCP"]},{"entry":["After","IP, port, IP, port, TCP","IP, port, IP, port, TCP"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"In the example update shown in the table, an active TCP\/IP connection exists between a local peer with IP address IPand a remote peer with IP address IP. In this example, the connection specification is a 5-tuple including the IP address and port number of the local peer (originally IPand port), the IP address and port number of the remote peer (i.e., IPand port), and the upper layer protocol type (i.e., TCP). The local peer changes its IP network attachment point so that its IP address and port number becomes IPand port. Before the change, the original connection specification and current connection specification are the same, that is, the 5-tuple (IP, port, IP, port, TCP). After the change, the original connection specification is the same, but the current connection specification is updated with the new IP network attachment point, that is, it is now the 5-tuple (IP, port, IP, port, TCP).","In an embodiment of the invention, in order to update active connection table(s)  at remote peer(s), the local connection management component  is informed of the local network attachment point change. The local connection management component  may communicate with remote connection management component(s) with at least three virtual connectivity messages: Connection Update (CU), Connection Update Acknowledge (CUA), and Connection Update Request (CUR).","The Connection Update message may carry changed connection specification information from the peer where the change occurred to a remote peer participating in the communication connection. In an embodiment of the invention, when a peer changes its network attachment point, the peer sends the Connection Update message to each peer with which it has an active communication connection. The Connection Update Acknowledge message may be sent in reply to the Connection Update message to acknowledge the receipt of the Connection Update message. The Connection Update Acknowledge message may include the same information as a Connection Update message. The Connection Update Request message may be sent by a peer to request a Connection Update message from the recipient, for example, when the peer has been notified that the recipient has changed its network attachment point, but the recipient has not sent the peer a Connection Update message.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 8","FIG. 8","FIG. 8"],"b":["802","804","802","804","804","804","806"],"sub":["1 ","2","3"]},"Following the move, Peer B  updates its local LCT table as described above and then sends a Connection Update message  to Peer A . Following the move and until Peer A  receives the Connection Update message , Peer A  may be unable to communicate with Peer B  because Peer A  is unaware of Peer B's  new IP network attachment point. The Connection Update message  includes information identifying Peer B's  new network attachment point, for example, the new IP address IPand a new port number port. In addition, the Connection Update message  includes information referencing the original connection, for example, an original connection identifier such as the original IP address IPand port number port, the original connection specification, or a connection token corresponding to the original connection. A suitable connection token may, for example, be a cryptographic hash of the original connection specification, or a connection count as maintained by one of the communicating peers.","Upon receipt of the Connection Update message  by the virtual connectivity module of Peer A , the Connection Update message  is parsed by the connection management component (e.g., the connection management component  of ) and the corresponding original connection specification determined. For example, the Connection Update message  may contain the original connection specification, or contain sufficient information such that the original connection specification may be reconstructed in combination with local (to Peer A ) context, or, if the Connection Update message  contains the original connection token, the original connection specification may be determined by performing a lookup of a table (or similar data structure) associating connection tokens with connection specifications. With the original connection specification in hand, the corresponding current connection specification in the local connection translation table (e.g., the local connection translation table  of ) may be updated. The following table illustrates aspects of the update at Peer A .",{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Original Connection","Current Connection"]},{"entry":[{},"Specification","Specification"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Before","IP, port, IP, port, TCP","IP, port, IP, port, TCP"]},{"entry":["After","IP, port, IP, port, TCP","IP, port, IP, port, TCP"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Before Peer B's  move, both the original connection specification and the current connection specification are the same 5-tuple, that is, the IP address and port number for Peer A  (i.e., IPand port), the IP address and port number for Peer B  (i.e., IPand port), and the upper layer protocol type, in this case, TCP. After Peer B's  move, the current connection specification is updated with respect to Peer B's new network attachment point (i.e., IPand portbecome IPand port) so that the current connection specification 5-tuple becomes (IP, port, IP, port, TCP). The original connection specification is unaffected by the move.","In reply to the Connection Update message , Peer A  sends a Connection Update Acknowledge message  to Peer B . The Connection Update Acknowledge message  may inform Peer B  of the success or otherwise of the connection update operation at Peer A . Following the receipt of the Connection Update Acknowledge message , Peer A  and Peer B  may once again engage in IP-based communications. In addition, in an embodiment of the invention, protocol and application layers above the virtual connectivity layer are unaware of Peer B's  IP network attachment point change.","As well as the Connection Update message  that Peer B  sends to Peer A , in , Peer B  also sends a Connection Update message  to a virtual connectivity subscribe-notify service (VC SNS) . A virtual connectivity subscribe-notify service in accordance with an embodiment of the invention is described below with reference to .",{"@attributes":{"id":"p-0070","num":"0069"},"figref":["FIG. 9","FIG. 8","FIG. 9","FIG. 8","FIG. 9"],"b":["806","812","814","806","808","802","802","810","806","808","810"]},"Before moving on from the example depicted in , it will be instructive to describe a special case that may arise when the local connection translation table is updated. Following the move of Peer B from one network attachment point (IP, port) to another (IP, port), the original network attachment point may be abandoned by Peer B. A network attachment point abandoned by one peer may be claimed by or reassigned to another peer, for example, an IPv4 network service provider may manage a pool of IPv4 addresses by assigning an IPv4 address to a communications peer from the pool and then returning the IPv4 address to the pool for reassignment when the peer abandons or releases the IPv4 address. If a Peer C (not shown in ) attaches to the network after Peer B moves, Peer C may occupy the network attachment point abandoned by Peer B. If Peer C then establishes a communication connection with Peer A while Peer A still has an active communication connection with Peer B, a conflict may occur in the local connection translation table. The table below illustrates aspects of the local connection translation table at Peer A.",{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Original Connection","Current Connection"]},{"entry":[{},"Specification","Specification"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1.","IP, port, IP, port, TCP","IP, port, IP, port, TCP"]},{"entry":["2.","IP, port, IP, port, TCP","IP, port, IP, port, TCP"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The table shows a first local connection translation table entry with original connection specification including Peer A's network attachment point (IP, port), Peer B's original network attachment point (IP, port) and upper layer protocol TCP. The current connection specification for the first entry shows that Peer B has changed its network attachment point to (IP, port). That is, the first entry corresponds to the scenario illustrated by . The table also shows a second local connection translation table entry with the original connection specified as a TCP\/IP connection from Peer A's network attachment point (IP, port) to Peer C's network attachment point (IP, port). The corresponding current connection specification is the same.","If IPis the same as IPand portis the same as port, then the first and second entries in the local connection translation table may have the same original connection specification, that is, they may be in conflict. In this example, the conflict may be avoided at Peer A by locally reattaching the connection from Peer C to (IP, port), where portis different from port, before accepting the connection. Like strategies may be available for non-IP-based computer networks. A similar conflict check and action may be required with regard to current connection specification to ensure a one-to-one relationship between original connection specification and current connection specification.","A malicious peer able to generate Connection Update messages may be able to cause havoc with peers utilizing virtual connectivity functionality. To prevent unauthorized connection updates, in an embodiment of the invention, each virtual connectivity message may include a cryptographic signature authenticating the message as from a trusted peer. To establish a basis for authentication, peers incorporating virtual connectivity modules may exchange a series of virtual connectivity messages when establishing a communication connection. For example, the peers may utilize an Elliptic Curve Diffie-Hellman public key exchange scheme to establish a basis for cryptographic authentication. This and other such suitable schemes are known in the art and need not be detailed here. A basis for cryptographic authentication may also be able to be utilized for message encryption if desired.","For example, the series of virtual connectivity messages sent and received when establishing a communication connection (the peer negotiation messages) may be processed by the peer negotiation component  of . Additional information exchanged by peers with peer negotiation messages may include: a peer's network attachment point as known to the peer, an indication of whether a particular peer is able to move, and an indication of the processing power of a particular peer. A peer's network attachment point may be utilized to determine if the peer is behind network address translation (NAT) as described below. The processing power of a peer may, for example, influence the cryptographic authentication scheme selected by the peers to secure the communication connection.","In an embodiment of the invention, the virtual connectivity subscribe-notify service allows communicating peers to: subscribe to peer network attachment point change events, publish network attachment point change events, and receive notification of published network attachment point change events to which they have subscribed. Subscribe-notify services (or publish-subscribe services) are known in the art, so only some of their details are described here.","In an embodiment of the invention, a network attachment point change event occurs when a peer changes its network attachment point, for example, when Peer B of  moves from the first network attachment point (IP, port) to the second network attachment point (IP, port). Subscribing to a network attachment point change event may include sending a subscribe message from a subscribing peer to the virtual connectivity subscribe-notify service. The subscribe message may specify a particular network attachment point which has attached a peer that, for example, the subscribing peer is actively communication with. The subscribe message may also include a notification address where the virtual connectivity subscribe-notify service may send notification of events matching the subscription. Publishing a network attachment point change event may include sending a publish message from the peer where the event occurred to the virtual connectivity subscribe-notify service specifying that a particular peer has changed its network attachment point from a first (previous or original) network attachment point to a second (or current) network attachment point. The Connection Update message is an example of a suitable publish message.","In response to the publish message, the virtual connectivity subscribe-notify service may check each of its subscriptions and send notify messages to the notification address of subscriptions that match the published event. The notify message may include the current network attachment point of the peer that moved so that, for example, the peer being notified may send the peer that moved a Connection Update Request message. The notify message may include a copy of the Connection Update message published by the peer that moved. In an embodiment of the invention, the subscription matches the published network attachment point change event if the subscription specifies the network attachment point from which the peer that published the event moved, that is, if the subscription specifies the previous network attachment point of the publishing peer. In alternative embodiments, matching the network attachment point change event to the network attachment point change event subscription may include additional steps and\/or criteria described below.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 10","FIG. 8"],"b":["1000","1002","1004","802","804","1006","1008","1010","1012","1014","1016","1016","1008","1014","1018","1020","1020","1022","1018"]},"It is possible for one or more virtual connectivity subscribe-notify services to be the sole source of Connection Update messages in a computer network incorporating virtual connectivity. However, in an embodiment of the invention, scalability may be enhanced by implementing a policy that has the peer that moves send Connection Update messages directly to its communication peers whenever possible, and reserving the role of the virtual connectivity subscribe-notify service to situations where sending Connection Update messages directly (\u201cdirect connection update\u201d) is not possible. Examples of situations where direct connection update is not possible include when more than one party to a communication connection moves simultaneously, and when the peer that moves is communicating with a peer behind network address translation (NAT).",{"@attributes":{"id":"p-0082","num":"0081"},"figref":["FIG. 11","FIG. 8","FIG. 8","FIG. 11","FIG. 11"],"b":["814","802","804","802","804","802","814","804","804","814","802"],"sub":["2 ","1 "]},"Again as for , Peer B  changes its network attachment point, publishes the network attachment point change event by sending the Connection Update message  to the virtual connectivity subscribe-notify service , and attempts to directly update its connection with Peer A  by sending Peer A  a Connection Update message (not shown in ). However, in , Peer A  has simultaneously (e.g., before Peer A  receives a Connection Update message from Peer B ) changed its IP network attachment point from the IP address IPto an IP address IP, that is, Peer A  has moved to Peer A . Having moved, Peer A , in accordance with an embodiment of the invention, publishes the network attachment point change event by sending a Connection Update message  to the virtual connectivity subscribe-notify service  and then attempts to directly update its connection with Peer B  by sending Peer B  a Connection Update message (also not shown in ).","Neither direct connection update succeeds because both peers (Peer A , Peer B ) have moved. Peer A  and Peer B  may not be able to continue to communicate without assistance. In an embodiment of the invention, the virtual connectivity subscribe-notify service  provides assistance by detecting the simultaneous movement of both peers (Peer A , Peer B ) and notifying at least one of the peers that the other has moved. The virtual connectivity subscribe-notify service  may determine that, for example, two peers have moved simultaneously if each peer publishes a network attachment point change event to the virtual connectivity subscribe-notify service  within a configurable period of time (e.g., 1 second).","In the example illustrated by , the virtual connectivity subscribe-notify service  receives Connection Update message  and Connection Update message  too close together in time for a direct connection update to have occurred and so determines that Peer A  and Peer B  have moved simultaneously. As a result, the virtual connectivity subscribe-notify service  sends a notify message  to Peer B  notifying Peer B  that the network attachment point of Peer A  has changed. The notify message  includes information enabling Peer B  to determine the corresponding original connection specification and current connection specification, for example, the original IP address IPand the current IP address IPof Peer A .","As a result of receiving the notify message , Peer B  is able to determine the current network attachment point of Peer A . To update the connection between Peer B  and Peer A , Peer B  sends a Connection Update (CU) message  to Peer A  and, in accordance with an embodiment of the invention, Peer A  replies with a Connection Update Acknowledgement (CUA) message . Following a successful local connection translation table update at A and B, the communication connection between Peer A  and Peer B  has been updated.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 12","FIG. 11","FIG. 12","FIG. 11"],"b":["806","812","1102","1104","814","812","1104","814","814","1102","806","1102","806","814","1106","806","1104","812","1102","806"]},"The receipt of the notify message  by Peer B  prompts Peer B  to send the Connection Update message  to Peer A . In response to the Connection Update message , Peer A  sends the Connection Update Acknowledgement message  to Peer B , completing the sequence.","In a computer network without NAT and\/or when it is known that a peer is not behind NAT, the notify message  may serve as the Connection Update message , and the Connection Update Acknowledgement  sent to Peer A  in response may complete the connection update thus making the Connection Update message  redundant. In a computer network with NAT, the Connection Update Request message (not shown in ) plays a useful role as described below.","Network address translation (NAT) is known in the art, so only some of its features are described here. In some computer networks, each network attachment point is associated with a network address, for example, in an IP network, each IP network attachment point may be associated with an IP address. The network address is typically of a limited size, for example, in an IPv4 network the network address is limited to 32 bits. The set of network addresses may be understood as an address space. In networks with limited size network addresses, it is possible for network addresses to become scarce, that is, it is possible to desire more network attachment points than the network address space will support. NAT provides a way to attach a new address space to an existing address space at, for example, a single network address in the existing address space. For details of an example NAT mechanism, see Egevang et al., (), RFC 1631, Internet Engineering Task Force, May 1994.","In this description, the existing address space is called the public address space, in which, for example, the example discussed with reference to  occurs, and an address space that is attached to the public address space by NAT is called a private address space. A peer in the private address space (i.e., a peer that has a network attachment point associated with a private network address) is said to be behind NAT with respect to a peer in the public address space (i.e., a peer that has a network attachment point associated with a public network address).","In an embodiment of the invention, a characteristic feature of computer networks incorporating NAT is that a peer in the public address space (a public peer) may not communicate with a peer in the private address space (a private peer) unless the private peer has first contacted the public peer. Furthermore, it is common practice for the NAT mechanism to identify a peer by its network address, so that a peer that moves to a new network attachment point with a new network address may seem, to the NAT mechanism, to be a different peer. If that is the case, then a public peer that has moved will be unable to send a Connection Update message directly to a private peer. In an embodiment of the invention, the virtual connectivity subscribe-notify service is able to facilitate the connection update.",{"@attributes":{"id":"p-0093","num":"0092"},"figref":["FIG. 13","FIG. 8","FIG. 13","FIG. 13"],"b":["814","1302","804","1302","1304","1302","1304","1302","804"],"sub":["A ","NAT ","2 ","3"]},"Peer A  subscribes to network attachment point change events published by Peer B  by sending a subscribe message  to the virtual connectivity subscribe-notify service . By sending the subscribe message , the private Peer A  also establishes a communication connection with the virtual connectivity subscribe-notify service  over which the virtual connectivity subscribe-notify service  may send later messages, e.g., the notify message . In an embodiment of the invention, Peer B  may determine that Peer A  is associated with a private network address. If Peer B  determines that Peer A  is associated with a private network address then, in an embodiment of the invention, Peer B  does not subscribe to changes in Peer A's  network attachment point because Peer B  would be unable to take action, i.e., send Peer A  a Connection Update message, based on a private network attachment point change event notification.","Having moved to IP address IP, Peer B  publishes a Connection Update message  to the virtual connectivity subscribe-notify service . If Peer B  attempted to send a Connection Update message (not shown in ) directly to Peer A , the attempt may fail because private Peer A  has not previously contacted Peer B  at its new IP address IP. In an embodiment of the invention, Peer B  waits to be contacted by Peer A  before further communicating with Peer A .","As a result of receiving the Connection Update message , the virtual connectivity subscribe-notify service  searches its subscription database and determines that private Peer A  has subscribed to changes in Peer B's  network attachment point. In contrast to the example described with reference to , having determined that Peer A  is a private peer, the virtual connectivity subscribe-notify service  sends the notify message  to Peer A  as soon as possible. The notify message  prompts Peer A  to send a Connection Update Request message  to Peer B  at Peer B's  new IP address IP. Peer A  having first contacted Peer B , Peer B  is able to respond to the Connection Update Request message  with a Connection Update message . When Peer A  receives the Connection Update message , the virtual connectivity connection update protocol is complete.",{"@attributes":{"id":"p-0097","num":"0096"},"figref":["FIG. 14","FIG. 13","FIG. 14"],"b":["1302","804","1302","814","1306","804","806","812","814","1302","814","1308","1302","1308","1302","1310","806","806","806","1312","1310","1312"],"sub":"3"},{"@attributes":{"id":"p-0098","num":"0097"},"figref":["FIG. 15","FIG. 13","FIG. 13","FIG. 15"],"b":["814","1302","804","1302","804","804","806","814","812"],"sub":["2 ","3 "]},"In , Peer A  also changes its network attachment point from private IP address IPto private IP address IP, that is, Peer A  behind NAT  moves to Peer A  behind NAT . NAT  may be the same as NAT  or NAT  may be different, that is, IP address IP may be in the same private address space as IP address IPor IP address IP may be in a different private address space, for example, a private address space managed by a different organization. Having moved, private Peer A  may be unable to receive messages (e.g., notify messages) from the virtual connectivity subscribe-notify service  (located in the public address space) as well as public Peer B. However, Peer A  publishes its network attachment point change event by sending a Connection Update message  to the virtual connectivity subscribe-notify service  and this re-establishes communications across NAT  between private Peer A  (at its new IP address IP) and the virtual connectivity subscribe-notify service .","In this example, Peer B  has determined that Peer A  is a private peer and so Peer B  does not attempt to send a Connection Update message directly to Peer A . Having moved, Peer A  does attempt to send a Connection Update message (not shown in ) directly to Peer B , but Peer B  also having moved, the attempt fails. As for the example described with reference to , a notify message from the virtual connectivity subscribe-notify service  is able to progress the virtual connectivity protocol. Unlike the example described with reference to , a notify message to Peer B  would not enable public Peer B  to contact private Peer A , instead the virtual connectivity subscribe-notify service  sends a notify message  to Peer A  informing Peer A  of Peer B's  new IP address IP. Private Peer A  then sends Peer B  a Connection Update message , enabling and prompting Peer B  to reply with a Connection Update Acknowledge message .",{"@attributes":{"id":"p-0101","num":"0100"},"figref":["FIG. 16","FIG. 15","FIG. 16"],"b":["806","812","814","1502","1506","814","812","1506","814","1508","1502","1508","1502","1510","806","1510","1512","806","1502"]},"Having described aspects of the virtual connectivity protocol with respect to various example scenarios, there now follows example decision procedures utilized by virtual connectivity protocol participants when sending virtual connectivity protocol messages in accordance with an embodiment of the invention.",{"@attributes":{"id":"p-0103","num":"0102"},"figref":["FIG. 17","FIG. 6"],"b":["606","1702","606","1704","1706","606","604","1708","604"]},"In order to cause an update of the corresponding LCT table  at a remote peer, the procedure progresses to step , where it is determined if the remote peer is in the public address space or in a private address space. If the remote peer is determined to be public then the procedure progresses to step . At step  a Connection Update message is sent to the remote peer. If the remote peer is determined to be private, then the connection management component  relies on the virtual connectivity subscribe-notify service to notify the remote peer of the network attachment point change event and the procedure progresses to step . At step , the procedure checks if each entry in the local connection translation table  has been selected. If not, the procedure returns to step  to select the next entry, otherwise the example procedure is finished.",{"@attributes":{"id":"p-0105","num":"0104"},"figref":["FIG. 18","FIG. 10","FIG. 8"],"b":["1016","1000","1802","1016","804","1804","1016","1008","804"],"sub":["2","2 "]},"At step  it is determined whether the peer that placed the subscription (the subscriber) is public or private. An example decision procedure for determining if a peer is public or private is described below with reference to . If the subscribing peer is private, then the peer that published the network attachment point change event is relying on the virtual connectivity subscribe-notify service to notify the private peer of the event, and the procedure progresses to step . At step , the subscriber is notified of the network attachment point change event. Alternatively, at step  the subscriber may be added to a list of peers to be notified, for example, by the notify module .","If the subscribing peer is public, then the peer that published the network attachment point change event (the publisher) may be able to send the subscriber a Connection Update message directly and without the aid of the virtual connectivity subscribe-notify service, unless, for example, the subscriber simultaneously also changes its network attachment point. In order to detect such a simultaneous movement by the subscriber, the procedure progresses to step . At step , the procedure waits for the subscriber to also publish a network attachment point change event, up to a maximum period of time, 1 second in this example. If the subscriber has already published a network attachment point change event when the procedure progresses to step , then the procedure may spend no time waiting at step .","After step , the procedure progresses to step  where a determination is made as to whether the subscriber may have moved before the publisher could send the subscriber a Connection Update message, that is, whether the subscriber has also published a network attachment point change event before the maximum time period expired. If the subscriber is determined to have moved \u201csimultaneously\u201d, then the procedure progresses to step  so that the subscriber may be notified of the publisher's move. Otherwise, the virtual connectivity subscribe-notify service assumes that the publisher was able to send a Connection Update message directly to the subscriber. The procedure skips step  and progresses to step . Although multiple threads of execution and other parallel processing techniques may be utilized to advantage throughout an embodiment of the invention, step  and step  are surrounded by a dashed line  to indicate that these steps are good candidates for parallel processing or equivalent techniques (e.g., a periodically checked watch list) so as to minimize candidate subscriber processing loop delays.","If the candidate subscriber is private and the notification attempt fails, it may be that the private subscriber has moved as well as the publisher, as for the example described above with reference to . In that case, upon detection of the failure to notify, the procedure may progress to step  to wait for a network attachment point change event publication by the private subscriber. The maximum step  maximum waiting period for private subscribers may be different from the maximum waiting period for public subscribers.","At step , the procedure checks for more candidate subscribers. If there are more candidate subscribers, then the procedure returns to step  for the next subscriber. Otherwise, the procedure may exit.","In an embodiment of the invention, some behavior is determined by whether a communications peer is public or private. As described above, there may be at least two network addresses associated with a private peer: the public network address of the NAT service, and the peer's network address in the private address space created by the NAT service. A private peer may explicitly flag its private status in a virtual connectivity message to another peer. Alternatively, each peer may include its network address in one or more virtual connectivity messages that it sends. Other peers receiving the messages may then compare the included network address with the network address that is the apparent source address of the messages. If the included network address matches the apparent source address, the peer may be determined to be public. If the included network address does not match the apparent source address of the messages, then the sending peer may be determined to be private.",{"@attributes":{"id":"p-0112","num":"0111"},"figref":["FIG. 19","FIG. 10"],"b":["1000","1902","1904","1906"]},"At step , the apparent source of the subscribe message is compared with the network address included in the subscribe message. If the apparent source of the subscribe message matches the network address included in the subscribe message by the subscribing peer, then the procedure progresses to step . Otherwise, the procedure progresses to step . At step , the subscription is determined to be associated with a public peer. At step , the subscription is determined to be associated with a private peer. This determination may occur repeatedly in different modules of the virtual connectivity subscribe-notify service , or just once, for example in the subscribe module , and the subscription then stored in the subscription database  flagged as public or private.","Virtual connectivity messages may be incorporated into lower layer networking protocols. For example, a virtual connectivity message may be added to an IP datagram by utilizing the IP options feature of the Internet protocol. For details of the IP options feature of the Internet protocol, see Postel, J., , RFC 791, Information Sciences Institute at the University of Southern California, September 1981. When a virtual connectivity message is incorporated into a lower layer protocol datagram by utilizing one or more, for example, IP options, the additional options may be called virtual connectivity options (VC options). While virtual connectivity options carrying outgoing virtual connectivity messages are typically incorporated into outgoing protocol units generated by higher protocol layers, the virtual connectivity layer may generate its own, for example, \u201cempty\u201d IP packets incorporating virtual connectivity options when waiting for the next upper layer protocol unit would be ineffective and\/or inefficient.","Virtual connectivity options may be added to a TCP datagram by utilizing the TCP options feature of the transmission control protocol. For details of the TCP options feature of the transmission control protocol, see Postel, J., , RFC 793, Information Sciences Institute at the University of Southern California, September 1981. Lower layer protocols that do not explicitly support datagram options may still be able to incorporate virtual connectivity options by appending the virtual connectivity options to the lower layer protocol datagram.  depicts an example scheme for appending virtual connectivity options to a UDP datagram.","In , one or more virtual connectivity options  have been appended to a UDP datagram that will be sent over an IP network. The UDP datagram includes a UDP header  and a UDP body . The UDP header  includes an UDP data length field (Length) indicating the length of the UDP datagram including the user data in the UDP body . For further details of the user datagram protocol see Postel, J., , RFC 768, Information Sciences Institute at the University of Southern California, August 1980. The UDP datagram is prefaced by an IP header  so that it may be sent over an IP network. The UDP datagram and virtual connectivity options  are the body of the IP datagram in this example. The IP header  includes an IP header length data field (Length) indicating the number of bytes in the IP header , and an IP total data length field (Length) indicating the number of bytes in the IP datagram (header  and body , , .). The length of the virtual connectivity options  (Length) may be calculated as follows.\n\nLength=Length\u2212Length\u2212Length\n","That is, the number of bytes (octets) of the one or more virtual connectivity options  is calculated as the total number of bytes in the IP datagram less the number of bytes in the IP header  and less the number of bytes in the UDP datagram.","Similar schemes may be utilized to append virtual connectivity options to other lower layer protocol datagrams. However, such appended data may not be properly interpreted by peers that do not incorporate a virtual connectivity module (e.g., the virtual connectivity module  of ). To test if a remote peer incorporates the virtual connectivity module, one or more virtual connectivity options, for example, a particular virtual connectivity probe option, may be incorporated into the first network protocol datagram sent to the remote peer. If the reply includes one or more corresponding virtual connectivity options, then the remote peer may be flagged as VC enhanced, that is, as able to properly participate in the virtual connectivity protocol.",{"@attributes":{"id":"p-0119","num":"0118"},"figref":["FIG. 21","FIG. 6"],"b":["608","600","2102","2104","2106","2108","2110","2112"]},"All references, including publications, patent applications, and patents, cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.","The use of the terms \u201ca\u201d and \u201can\u201d and \u201cthe\u201d and similar referents in the context of describing the invention (especially in the context of the following claims) are to be construed to cover both the singular and the plural, unless otherwise indicated herein or clearly contradicted by context. The terms \u201ccomprising,\u201d \u201chaving,\u201d \u201cincluding,\u201d and \u201ccontaining\u201d are to be construed as open-ended terms (i.e., meaning \u201cincluding, but not limited to,\u201d) unless otherwise noted. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range, unless otherwise indicated herein, and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples, or exemplary language (e.g., \u201csuch as\u201d) provided herein, is intended merely to better illuminate the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non-claimed element as essential to the practice of the invention.","Preferred embodiments of this invention are described herein, including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate, and the inventors intend for the invention to be practiced otherwise than as specifically described herein. Accordingly, this invention includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover, any combination of the above-described elements in all possible variations thereof is encompassed by the invention unless otherwise indicated herein or otherwise clearly contradicted by context."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["While the appended claims set forth the features of the invention with particularity, the invention and its advantages are best understood from the following detailed description taken in conjunction with the accompanying drawings, of which:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 9","FIG. 8"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 12","FIG. 11"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 14","FIG. 13"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 16","FIG. 15"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 21"}]},"DETDESC":[{},{}]}
