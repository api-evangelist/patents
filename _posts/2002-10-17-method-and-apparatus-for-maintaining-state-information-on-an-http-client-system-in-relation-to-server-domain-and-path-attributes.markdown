---
title: Method and apparatus for maintaining state information on an HTTP client system in relation to server domain and path attributes
abstract: A method and apparatus for transferring state information between a server computer system and a client computer system. In one embodiment of the method, an http client requests a file, such as an HTML document, on an http server, and the http server transmits the file to the http client. In addition, the http server transmits a state object, which describes certain state information, to the http client. The http client stores the state object, and will typically send the state object back to the http server when making later requests for files on the http server. In a typical embodiment, the state object includes a domain attribute which specifies a domain or network address, and the state object is transmitted from the http client to a server only when the http client makes an http request to the server and the server is within the domain. In one embodiment, the apparatus includes a processor and memory and a computer readable medium which stores program instructions. In the case of the client system, the instructions specify operations such as receiving and storing the state information; in the case of the server system, the instructions specify operations such as sending the state information to a client system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=RE042892&OS=RE042892&RS=RE042892
owner: Netscape Communications Corporation
number: RE042892
owner_city: Mountain View
owner_country: US
publication_date: 20021017
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":[{"@attributes":{"id":"p-0002","num":"0001"},"delete-start":{},"delete-end":{}},{"@attributes":{"id":"p-0003","num":"0002"},"insert-start":{},"insert-end":{}},"This invention relates to communication in a client-server computer systems. Specifically, the invention relates to client-server computer systems in which a server can send state information to a client and the client stores the state information for later retransmissions back to the server.","An important use of computers is the transfer of information over a network. Currently, the largest computer network in existence is the InterNet. The InterNet is a worldwide interconnection of computer networks that communicate using a common protocol. Millions of computers, from low end personal computers to high-end super computers are coupled to the InterNet.","The InterNet grew out of work funded in the 1960s by the U.S. Defense Department's Advanced Research Projects Agency. For a long time, InterNet was used by researchers in universities and national laboratories to share information. As the existence of the InterNet became more widely known, many users outside of the academic\/research community (e.g., employees of large corporations) started to use InterNet to carry electronic mail.","In 1989, a new type of information system known as the World-Wide-Web (\u201cthe Web\u201d) was introduced to the InterNet. Early development of the Web took place at CERN, the European Particle Physics Laboratory. The Web is a wide-area hypermedia information retrieval system aimed to give wide access to a large universe of documents. At that time, the Web was known to and used by the academic\/research community only. There was no easily available tool which allows a technically untrained person to access the Web.","In 1993, researchers at the National Center for Supercomputing Applications (NCSA) released a Web browser called \u201cMosiac\u201d that implemented a graphical user interface (GUI). Mosiac's graphical user interface was simple to learn yet powerful. The Mosiac browser allows a user to retrieve documents from the World-Wide-Web using simple point-and-click commands. Because the user does not have to be technically trained and the browser is pleasant to use, it has the potential of opening up the InterNet to the masses.","The architecture of the Web follows a conventional client-server model. The terms \u201cclient\u201d and \u201cserver\u201d are used to refer to a computer's general role as a requester of data (the client) or provider of data (the server). Under the Web environment, Web browsers reside in clients and Web documents reside in servers. Web clients and Web servers communicate using a protocol called \u201cHyperText Transfer Protocol\u201d (HTTP). A browser opens a connection to a server and initiates a request for a document. The server delivers the requested document, typically in the form of a text document coded in a standard Hypertext Markup Language (HTML) format, and when the connection is closed in the above interaction, the server serves a passive role, i.e., it accepts commands from the client and cannot request the client to perform any action.","The communication model under the conventional Web environment provides a very limited level of interaction between clients and servers. In many systems, increasing the level of interaction between components in the systems often makes the systems more robust, but increasing the interaction increases the complexity of the interaction and typically slows the rate of the interaction. Thus, the conventional Web environment provides less complex, faster interactions because of the Web's level of interaction between clients and servers.","In the conventional Web environment, clients do not retain information of a session after the session is closed. In many systems, the ability to retain information after the systems become inactive is crucial to the functioning of the systems. Thus, it is desirable to allow clients to have this ability.","The present invention involves a client-server system on a network in which a server can send state information to a client and the client stores the state information. The stored state information can later be sent back to the server at appropriate times. In this manner, the state of a client can be maintained in the client-server system where no state inherently exists in such a system.","One embodiment of the present invention is a network system for communicating documents containing information such as text and one or more images. The system comprises a first computer (i.e., a server) capable of sending such documents over a network such as the InterNet. The system also has a second computer (i.e., a client) which can request these documents or files from the server. After the requested documents are received, the client can display the documents. In accordance with the present invention, the server can send state information to the client when a document is sent. The client then stores the state information, which is typically in the form of a state object. In a subsequent request for documents to the server, the client can send the stored state information to the server.","In an embodiment of the invention, the server uses a hypertext transfer protocol (\u201chttp\u201d) to communicate over the network with clients; such clients also communicate with the server using the hypertext transfer protocol. This server and these clients are referred to as an http server and http clients respectively. The server typically will include a server processor and a memory and a computer readable medium, such as a magnetic (\u201chard disk\u201d) or optical mass storage device, and the computer readable medium of the server contains computer program instructions for transmitting the file from the server system to the client system and for transmitting the state object to the client system. The client typically will include a client processor and a memory and a computer readable medium, such as a magnetic or optical mass storage device, and the computer readable medium of the client contains computer program instructions for receiving the state object, which specifies the state information, from the server and for storing the state object at the client. The state object, in a typical embodiment, will include a name attribute, such as a domain attribute.","One of the applications of the present invention is an on-line shopping system. A customer can browse information delivered by a merchant server using a browser running on a client. The customer can also select products to be placed in a virtual shopping basket. The server then sends state information related to the selected products to the browser on the client for storage. When the customer wants to purchase the products in the virtual shopping basket, the browser sends the corresponding state information to a specified check-out Web page for processing.","Another application of the present invention is an \u201con-line\u201d information service, such as a newspaper's Web server which includes articles or other information from the newspaper's subscription services. In one example, a newspaper or publishing company may have several different publications, each requiring a separate subscription fee which may differ among the different publications. A user of the information service may browse the different publications by making http requests, from the client's\/user's computer system, to the publisher's Web server which responds with the requested publication and state information specifying the user's identification, and other subscription information (e.g., user registration and billing information) which allows the user to view the contents of the publication; this information is typically provided by the user at least once in a conventional log-on process. Thereafter, this information is included in the state information which is exchanged between the client and the server in the process of the invention. Accordingly, when the user, during the browsing process, desires to view another publication (e.g., from the same or different publisher) this state information will be transmitted back to the Web server to provide the necessary subscription information (thereby entitling the user to view the publication) without requiring the user to re-enter the necessary subscription information. In this manner, a user may browse from publication to publication on the Web server or a different Web server in the domain without having to re-enter, when seeking a new publication, the necessary subscription information.","These and other features of the present invention will be disclosed in the following description of the invention together with the accompanying drawings.","Methods and apparatuses for maintaining state information in a client-server based computer network system are disclosed. The following description is presented to enable any person skilled in the art to make and use the invention. For purposes of explanation, specific nomenclature is set forth to provide a thorough understanding of the present invention. However, it will be apparent to one skilled in the art that these specific details are not required to practice the present invention. Descriptions of specific applications are provided only as examples. Various modifications to the preferred embodiments will be readily apparent to those skilled in the art, and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the invention. Thus, the present invention is not intended to be limited to the embodiments shown, but is to be accorded the widest scope consistent with the principles and features disclosed herein.","Prior to describing the present invention, some introductory material is explained, including explanations concerning client-server computing, InterNet addresses, URL's and browsing of the Web.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 1A","b":["100","100","102","104","106","108","110","112"]},"A client, such as computer , may request a file from server A. Since computer  is directly connected to server A through a local area network, this request would not normally result in a transfer of data over what is shown as the \u201cnetwork\u201d of . The \u201cnetwork\u201d of  represents the InterNet which is an interconnection of networks. A different request from computer  may be for a file that resides in server B. In this case, the data is transferred from server B through the network to server A and, finally, to computer . The distance between servers A and B may be very long, e.g. across continents, or very short, e.g., within the same city. Further, in traversing the network the data may be transferred through several intermediate servers and many routing devices, such as bridges and routers.","The World-Wide-Web (\u201cThe Web\u201d) uses the client-server model to communicate information between clients and servers. Web Servers are coupled to the InterNet and respond to document requests from Web clients. Web clients (also known as Web \u201cbrowsers\u201d) are programs that allow a user to simply access Web documents located on Web Servers.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 1B","b":["100","122","120","120","124","125","126","124","125","127","128","129","122","134","135","136","134","135","137","134","135","138","139","127","137","125","135"]},"As discussed in the background, the InterNet consists of a worldwide computer network that communicates using well defined protocol known as the InterNet Protocol (IP). Computer systems that are directly connected to the InterNet each have an unique InterNet address. An InterNet address consists of four numbers where each number is less than 256. The four numbers of an InterNet address are commonly written out separated by periods such as 192.101.0.3","To simplify InterNet addressing, the \u201cDomain Name System\u201d was created. The domain name system allows users to access InterNet resources with a simpler alphanumeric naming system. An InterNet Domain name consists of a series of alphanumeric names separated by periods. For example, the name \u201cdrizzle.stanford.edu\u201d is the name for a computer in the physics department at Stanford University. Read from left to right, each name defines a subset of the name immediately to the right. In this example, \u201cdrizzle\u201d is the name of a workstation in the \u201cstanford\u201d domain. Furthermore, \u201cstanford\u201d is a subset of the \u201cedu\u201d domain. When a domain name is used, the computer accesses a \u201cDomain Name Server\u201d to obtain the explicit four number InterNet address.","To further define the addresses of resources on the InterNet, the Uniform Resource Locator system was created. A Uniform Resource Locator (URL) is a descriptor that specifically defines a type of InterNet resource and its location. URLs have the following format:\n\n","An example of a URL for a Web document is:\n\n","To access an initial Web document, the user enters the URL for a Web document into a Web browser program. The Web browser then sends an http request to the server that has the Web document using the URL. The Web server responds to the http request by sending the requested HTTP object to the client. In most cases, the HTTP object is an plain text (ASCII) document containing text (in ASCII) that is written in HyperText Markup Language (HTML). The HTML document usually contains hyperlinks to other Web documents. The Web browser displays the HTML document on the screen for the user and the hyperlinks to other Web documents are emphasized in some fashion such that the user can selected the hyperlink.",{"@attributes":{"id":"p-0038","num":"0039"},"figref":["FIG. 2","FIG. 2"],"b":["130","1","2","130","130"]},{"@attributes":{"id":"p-0039","num":"0040"},"figref":["FIG. 3A","FIG. 3B","FIG. 3A"]},"The second line of the HTML document of  reads \u201c<h1> Distributed Image Loading Example <\/h1>\u201d The <h1> and <\/h1> are HTML delimiters for a header that is to be displayed in a largest font. The browser software running on the client computer  interprets the header tags and thus displays the text between the header tags in a largest font size on the client's display screen.","After the title and header, the HTML document of  contains the text \u201cOne of the major features . . . capability\u201d. At the end of the text paragraph is another HTML tag shown as <p>. This is a tag indicating the end of a paragraph.","To continue with the second paragraph of the HTML document, the text reads \u201cThis document . . . this image: <IMG align=middle src=\u201chttp:\/\/www.su.se\/SUlogo.gif\u201d> was obtained . . . \u201d. The text in angle brackets defines an image to be placed in the text. Specifically, the \u201cIMG\u201d tag indicates that an image is being defined. The \u201calign=middle\u201d tag indicates that the image should be aligned in the middle of the current line of text. Finally, \u201csrc=\u201d tag indicates that the source image file can be located using the URL \u201chttp:\/\/www.su.se\/SUlogo.gif\u201d.","The line continues with the phrase \u201cfrom the <A href=\u201chttp:\/\/www.su.se\/index.html\u201d> University of Stockholm<\/A> This phrase defines \u201cUniversity of Stockholm\u201d as a link to another Web document. Specifically, the \u201cA\u201d tag defines the beginning of a link. The \u201chref=\u201d tag defines that the link is to a Web page that can be located using the URL \u201chttp:\/\/www.su.se\/index.html\u201d Next, the text \u201cUniversity of Stockholm\u201d is the text that will be the link. Finally, the \u201c\/A\u201d tag defines the end of the link definition. As illustrated in , the text \u201cUniversity of Stockholm\u201d is displayed with underlining that indicates it is a link to another document. If the user selects the underlined text \u201cUniversity of Stockholm\u201d, then the browser will send out a http request for the Web page at the URL address \u201chttp:\/\/www.su.se\/index.html\u201d.","It can be seen from the above example that the HTML document contains all information a browser needs for displaying a Web page. Thus, the only responsibility of a Web server is to provide the requested document, and there is no need for the server to request a client to do anything else. However, this role of a server also limits the utility of the Web environment.","The present invention provides an extension to the prior art HTTP protocol. Using the teachings of the present invention, when a server responds to an http request by returning an HTTP object to a client, the server may also send a piece of state information that the client system will store. In an embodiment of the present invention, the state information is referred to as a \u201ccookie\u201d. Included in the state information (the cookie) is a description of a range of URLs for which that state information should be repeated back to. Thus, when the client system sends future HTTP requests to servers that fall within the range of defined URLs, the requests will include a transmittal of the current value of the state object. By adding the ability to transfer state information back and forth, Web servers can then play an active role in transactions between clients and servers. The term state object is also used herein to refer to the state information.",{"@attributes":{"id":"p-0046","num":"0047"},"figref":"FIG. 4","b":["172","174","176","178"]},"This extension to the http protocol provides a powerful new tool which enables a large number of new types of applications to be written for a Web-based environment. Examples of new applications include on-line shopping that stores information about items currently selected by consumers, for-fee on-line services that can send back registration information and thus free users from retyping a user-id on next connection, and Web sites that can store per-user preferences on the client system and have the client supply those preferences every time the site is later accessed.","Server Behavior","A particular embodiment of the state information is described below in order to provide an example according to the present invention. It will be appreciated that alternative formats may be used in accordance with the principles of the present invention. As stated above, the extension to the HTTP protocol adds a new piece of state information to the HTTP header as part of an HTTP response from a Web server. Typically, the state information is generated by a common gateway interface (\u201cCGI\u201d) script. The state information is stored by the receiving client system in the form of a \u201ccookie list\u201d for later use. The syntax of the new data, in one embodiment, is:\n\n","The \u201cexpires\u201d attribute specifies a data string that defines the valid life time of the corresponding cookie. Once the expiration date has been reached, the cookie will no longer be stored in the client system. Thus, the client system will no longer respond to Web servers with the cookie. Many coding schemes for designating time can be used. In a preferred embodiment, the \u201cexpires\u201d attribute is formatted as: Wdy, DD-Mon-YY HH:MM:SS GMT In the this format, \u201cWdy\u201d designates the day of a week, \u201cDD-Mon-YY\u201d designates the day, month and year, and \u201cHH:MM:SS GMT\u201d designates the hour, minute and second, in GMT time zone. Note that the \u201cexpires\u201d attribute lets a client know when it is safe to purge a cookie, however, the client is not required to delete the cookie. If an expires attribute is not provided by the server, then the cookies expires when the user's session ends. This can be implemented by storing the cookie only in volatile memory.","The \u201cdomain=DOMAIN_NAME\u201d attribute defines a domain for which the cookie is valid. The domain attribute is usually set using the domain name of the sending Web server. Client systems examine the domain attribute when making later http requests. If the server that the client system is accessing falls within the defined DOMAIN_NAME, then the cookie may be sent to the server when making the http request. (The \u201cpath\u201d must also be examined as will be explained later.) When a server system falls within the defined DOMAIN_NAME, this is referred to as a \u201ctail match.\u201d Note that a domain name that defines a subset of a domain is deemed to match a larger enclosing domain. For example, the host names \u201canvil.acme.com\u201d and \u201cshipping.crate.acme.com\u201d fall within the \u201cacme.com\u201d domain.","Only hosts within the specified domain can set a cookie for a domain. The value of the \u201cdomain\u201d attribute must have at least two periods in them to prevent accepting values of the form \u201c.com\u201d and \u201c.edu\u201d. If no domain name is specified, then the default value of the \u201cdomain\u201d attribute is the domain name of the server that generated the cookie header.","The \u201cpath\u201d attribute is used to specify a subset of file system directories in a domain for which the cookie is valid. If a cookie has already passed \u201cdomain\u201d matching, then the path name of the URL for a requested document is compared with the \u201cpath\u201d attribute. If there is a match, the cookie is considered valid and is sent along with the http request. All the characters of the defined path must match, however there may be additional characters on the path name. Thus, further defined subdirectories will match a path to the parent director. For example, the path \u201c\/foo\u201d would match \u201c\/foo\/bar\u201d, \u201c\/foo\/bar.html\u201d, and evert \u201c\/foobar\u201d, but \u201c\/foo\u201d will not match the path \u201c\/\u201d. Note that the path \u201c\/\u201d is the most general path since it will match any path. If no path is specified when a cookie is created, then the default path will be the same path as the document that was sent with the header which contains the cookie.","The last element of the cookie definition is the optional label of \u201csecure.\u201d If a cookie is marked \u201csecure,\u201d then the cookie will only be retransmitted if there is a secure communication channel to the server system. In a preferred embodiment of the present invention, this means that the cookie will only be sent to HTTPS servers. (HTTP over SSL) If the \u201csecure\u201d attribute is not specified, a cookie is considered safe to be sent over unsecured channels.","The defined extension to the HTTP protocol allows multiple setcookie headers to be issued in a single HTTP response. Each set-cookie header should follow the conventions of the above described format.","Client Behavior","As previously described, when a client receives a set-cookie command in a header, the client system stores the cookie in some type of storage. In order not to place too much burden on client systems, each client system is expected to be able to store only a limited number of cookies. In one embodiment, the storage requirements for the client systems are:\n\n","If a cookie is received that matches the \u201cNAME\u201d, \u201cdomain\u201d and \u201cpath\u201d attributes of a previously received cookie, then the previously received cookie will be overwritten. Using this technique, it is possible for a server to delete a cookie previously sent to a client. Specifically, a server that wishes to delete a previous cookie sends a cookie having \u201cexpires\u201d time which is in the past that matches the \u201cNAME\u201d, \u201cdomain\u201d and \u201cpath\u201d attributes of cookie to be deleted. Since the new overwritten cookie contains a expires time that has passed, the cookie will be deleted by the client system. Note \u201cNAME\u201d, \u201cdomain\u201d and \u201cpath\u201d attributes of the expired cookie must match exactly those of the valid cookie. Since a system must be within the domain that is specified in the domain attribute, it is difficult for any server other than the originator of a cookie to delete or change a cookie.","When a client system that implements the present invention wishes to send an http request to a particular Web server, the client system first examines its cookie list to see if the cookie list contains any matching cookies that need to be sent to the particular Web server. Specifically, before the client sends an http request to a Web server, the client compares the URL of the requested Web document against all of the stored cookies. If any of the cookies in the cookie list matches the requested URL then information containing the name\/value pairs of the matching cookies will be sent along with the HTTP request. The format of the line is:\n\n","When a client sends cookies to a server, all cookies with a more specific path mapping should be sent before cookies with less specific path mappings. For example, a cookie \u201cname1=foo\u201d with a path mapping of \u201c\/bar\u201d should be sent before a cookie \u201cname2=foo2\u201d with a path mapping of \u201c\/\u201d if they are both to be sent since the path \u201c\/bar\u201d is more specific than the global matching path \u201c\/\u201d.","Paths having a higher-level value do not override more specific path mappings. If there are multiple matches for a given cookie name, but with separate paths, all the matching cookies will be sent. Thus, both the cookie \u201cname=foo\u201d with a path mapping of \u201c\/bar\u201d and the cookie \u201cname=foo\u201d with a path mapping of \u201c\/\u201d should be sent since they have different path names.","Some clients access Web servers on the Internet through firewall systems that are designed to prevent unwanted Internet traffic from affecting a local area network coupled to the Internet. Firewall systems often implement \u201cproxy servers\u201d that filter traffic to and from the Internet. It is important that proxy servers not cache Set-cookie commands when caching HTTP information. Thus, if a proxy server receives a response that contains a Set-cookie header, the proxy server should immediately propagate the Set-cookie header to the client. Similarly, if a client system request contains a \u201cCookie:\u201d header, the cookie header should be forwarded through a proxy even if a conditional \u201cIf-modified-since\u201d request is being made.","To further describe the present invention, the following examples describe a set of Web transactions operating in accordance with the present invention:","A client system requests a Web document from the Web server \u201ctelemarking.acme.com\u201d and receives in response:\n\n","The client system stores this cookie in a local (client-side) storage unit (e.g. mass storage  or memory ). Since no domain name was specifically identified, the domain will be set to \u201ctelemarking.acme.com\u201d since that is the domain name of the server that generated the cookie. When the client later makes an http request for a document in any path (since the path is \u201c\/\u201d) of a server system in the telemarking.acme.com domain, the client sends:\n\n","Assuming the client system makes another request to the telemarking.acme.com domain, the client might receive another cookie from the server such as:\n\n","The client will locally store this additional cookie. Again, no domain name was identified, such that the default domain, \u201ctelemarking.acme.com\u201d will be stored. Now, if the client makes yet another request to the \u201ctelemarking.acme.com\u201d domain, the client will send all the cookies it has for that domain. Specifically, the client sends:\n\n","Assuming, the client continues transactions with the \u201ctelemarking.acme.com\u201d server, it may receive the following cookie from the server:\n\n","Then, if the client requests a document in path \u201c\/\u201d on the \u201ctelemarking.acme.com\u201d server, the client will send two cookies as state information:\n\n","Note that the cookie SHIPPING=FEDEX was not sent because the path \u201c\/\u201d does not match the path \u201c\/foo\u201d. On the other hand, when the client requests a document on the \u201ctelemarking.acme.com\u201d server in path \u201c\/foo\u201d on this server, then the client will send three cookies as state information;\n\n","Assume that all of the transactions of Example 1 have been cleared. A client system then requests a Web document from the Web server \u201ctelemarking.acme.com\u201d and receives in response:\n\n","The client stores this cookie in a local (client-side) storage unit. Since no domain name was specifically identified, the domain will be set to \u201ctelemarking.acme.com\u201d. When the client later makes a request to a document in any path of a system in the telemarking.acme.com domain, the client sends back the following data as information:\n\n","Assuming the client continues to access the \u201ctelemarking.acme.com\u201d server, the client may later receive from the server:\n\n","The new cookie has the same name (PART_NUMBER) as an old cookie stored on the client system. Note that the old cookie is not overwritten since the new cookie has a different path attribute: Now, if the client makes a request for a document in the path \u201c\/ammo\u201d on the telemarking.acme.com\u201d server, the client should send the following two cookies as state information:\n\n","Both cookies are sent since the path of the requested document (\u201c\/ammo\u201d) matches both the \u201c\/\u201d path of the first cookie and the \u201c\/ammo\u201d path of the second cookie. Note that the cookie PART_NUMBER=RIDING_ROCKET23 is sent first since it has a more specific path (\u201c\/ammo\u201d) than the global path (\u201c\/\u201d) associated with the cookie PART_NUMBER=ROCKET_LAUNCHER1.","To illustrate one possible use of the state information system of the present invention, an implementation of an on-line shopping system will be described. The on-line shopping system allows customers to shop in one or more stores that are implemented as Web servers on the Internet. A customer can browse information on the Web servers that describe products available from the stores. When a desired product is found, the user can place the product into a \u201cvirtual shopping basket.\u201d The virtual shopping basket is implemented as a set of cookies that are sent to the client computer system and stored on the client computer system. At check-out time, the customer pays for the selected products using some type of payment system such as a credit card. After payment is received, the on-line shopping system notifies the stores to ship the selected products to the customer.  is a flow chart showing the operation of the merchant system during an on-line shopping \u201ctrip\u201d by a customer. The customer can run a browser on a client computer system, such as computer system  shown in  or client system  shown in  The computer system  of  includes a display device  (such as a monitor), a display screen , a cabinet  (which encloses components typically found in a computer, such as CPU, RAM, ROM, video card, hard drive, sound card, serial ports, etc.), a keyboard , a mouse , and a modem . Mouse  have one or more buttons, such as buttons . The computer needs to have some type of communication device such as that Modem  allows computer system  to be connected tb the Internet. Other possible communication devices include ethernet network cards.","The customer uses Web browser software to access an on-line \u201cmerchant\u201d server that is operated by a merchant having products to sell. This merchant server is a server computer system such as server system  shown in . Specifically, the browser software sends an http request for the home Web page of a merchant Web server (step ). The merchant Web server responds to the request with an HTML document that is displayed by the browser (step ). The home Web page contains information about the merchant and its products (e.g., shoes, hats, shirts, etc.). The home Web page can implement a set of linked Web pages that describe the products that are available from the merchant. Each product may be associated with its own HTML document that fully describes the product. Products can be described using text, images, sounds, video clips, and any other communication form supported by Web browsers. The user can continue browsing through Web pages of the merchant server by repeating steps , , and .","After browsing through the Web pages provided by the server, the customer may select a product (step ) by, for example, \u201cclicking\u201d (in the conventional manner) on an image of a product that causes the browser to request a Web page that fully describes the product. If the customer wishes to buy shoes from the merchant, the customer could click on a \u201cbuy it\u201d button. The merchant server then sends an HTML form document that requests the customer to send necessary details for the purchase (step ). For example, the customer may select a quantity, a desired style, and size of the product as requested by the form document. The browser then sends a POST command under HTTP, which transmits the data entered into the form to the merchant server (step ). The data on the submitted form (e.g., quantity, size, style, etc.) is analyzed by the server and the transaction is processed. The server then generates a synthetic page and sends it to the browser running on the client system. This synthetic page preferably contains a thank you note along with confirmation information. Cookies containing information describing the selected product are also sent at this time (step ).","The browser software running on the client system stores the cookies describing the selected products within the client computer system (step ). The stored cookies include an identification of the contents of a virtual shopping basket that contains the products selected by the consumer. In an embodiment of the present invention, the cookies are stored in a file located in a storage medium (such as a hard disk) of client computer system .","The time interval for storing the cookies that describe the selected products can be set to any desired length. In one embodiment of the present invention, the cookies are deleted when the customer exits from the browser. This can be accomplished by not setting the \u201cexpires\u201d attribute of the product description cookies. In another embodiment of the present invention, the cookies are kept valid (prior to their expiration) even after the customer exits from the browser and turns off computer . This can be accomplished by setting the \u201cexpires\u201d attribute of the product description cookies to a later date.","After selecting a product, the customer may do additional shopping (e.g., buy a hat) from the same store or other stores (step ). In this case, steps , , , , , ,  and  need to be performed for the additional products. Each selection of a product in step  will result in the transmission of a cookie from the server to the client, which cookie identifies the selected product. The customer may also exit from the merchant system at any time.","When the customer desires to buy the products, the customer accesses a link that identifies a \u201ccheck-out\u201d Web page. The check-out Web page causes the browser to send all the product description cookies (). Thus, the check-out Web page empties out the virtual shopping basket. The merchant server generates a total bill for all the products in the virtual shopping basket. The server may then request billing information (e.g., credit card number) and shipping (e.g., address) information from the customer using a form. In a preferred embodiment the transaction of credit card information is transmitted using a secure medium. The transaction server then performs a real-time credit card authorization. Once the transaction is authorized, transaction server sends messages to individual merchants to fulfill the order (step ).","Other functions could be added to the above described merchant system. For example, several persons could use the same browser for shopping. In this case, the browser identifies the person doing the shopping, and assigns product description cookies to the appropriate person. Thus, each person would have their own virtual shopping basket.","The invention has been described with reference to specific exemplary embodiments thereof and various modifications and changes may be made thereto without departing from the broad spirit and scope of the invention. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense; the invention is limited only by the following claims."],"heading":[{"@attributes":{"id":"h-0001","level":"1"},"insert-start":{},"insert-end":{}},"FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","Client-Server Computing","InterNet Addresses","Uniform Resource Locators","Browsing the World-Wide-Web","Adding State Information to the HyperText Transfer Protocol","EXAMPLE 1","EXAMPLE 2","An On-line Shopping System Application"],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The objects, features, and advantages of the present invention will be apparent from the following detailed description of the preferred embodiment of the invention with references to the following drawings.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 3B","FIG. 3A"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
