---
title: Network registry and file cleaner
abstract: A cleaning application that can clean at least one of one or more files and a registry of a computer is provided. The cleaning application can be remotely deployed over a network to one or more computers. The cleaning application can include an administrator cleaning module and a user cleaning module. The administrator cleaning module can automatically scan a network and detect one or more computers. The administrator cleaning module can then remotely deploy the user cleaning module to one or more selected computers of the network. Once the user cleaning module is deployed on a computer, the administrator cleaning module can remotely manage the user cleaning module over the network. In particular, the administrator cleaning module can instruct the user cleaning module to clean at least one of one or more files and a registry of the computer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08463758&OS=08463758&RS=08463758
owner: Piriform Ltd.
number: 08463758
owner_city: Nicosia
owner_country: CY
publication_date: 20110513
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field","Certain embodiments of the invention relate generally to computer systems, and, more particularly, to registry and file cleaning computer systems.","2. Description of the Related Art","A computer contains one or more computer files (i.e., files), where a file is a resource that stores data that can be accessed by a computer program that is executed within the computer. A computer also contains a registry, where a registry is a hierarchical database that is stored on the computer and stores configuration settings and options for the computer.","During the lifetime of a computer, thousands of files can end up being stored on the computer. Many of these files may never be used by any software modules that are executed within the computer. Thus, these files are unused files that merely take up storage space of the computer, and potentially slow down the processing speed of the computer. A file cleaning software module, when executed on the computer, can identify unused files and delete them from the computer.","Similarly, during the lifetime of the computer, a registry can become bloated with numerous configuration entries. In certain cases, many of the entries are not used by any computer program. For example, when a new version of a computer program is installed on the computer, the registry may be updated to contain a new entry corresponding to the new version. However, the old entry corresponding to the older version may not be deleted. Thus, a large number of entries in the registry may be superfluous. Similar to a file cleaning software module, a registry cleaning software module, when executed on the computer, can identify unused entries in a registry, and delete them from the registry.","According to an embodiment of the invention, a method includes automatically scanning, by an administrator cleaning module executed on a computer, a network to detect computers. The method further includes selecting, by the administrator cleaning module, one or more computers from a list of computers detected on the network. The method further includes remotely deploying, by the administrator cleaning module, a user cleaning module over the network to the selected one or more computers.","According to another embodiment, an apparatus includes a memory configured to store an administrator cleaning module. The apparatus further includes a processor configured to execute the administrator cleaning module stored on the memory. The processor is further configured, when executing the administrator cleaning module stored on the memory, to, automatically scan a network to detect computers, select one or more computers from a list of computers detected on the network, and remotely deploy a user cleaning module over the network to the selected one or more computers.","According to another embodiment, a computer-readable medium includes a computer program stored thereon that, when executed by a processor, causes the processor to implement a method. The method includes automatically scanning a network to detect computers. The method further includes selecting one or more computers from a list of computers detected on the network. The method further includes remotely deploying a user cleaning module over the network to the selected one or more computers.","According to another embodiment, a method includes establishing, by an administrator cleaning module executed on a first computer, a secure connection over a network with a user cleaning module executed on a second computer. The method further includes receiving, by the administrator cleaning module, application information over the network from the user cleaning module. The method further includes transmitting, by the administrator cleaning module, a cleaning rule set over the network to the user cleaning module, where the cleaning rule set is based on the application information. The method further includes transmitting, by the administrator cleaning module, an instruction to clean at least one of one or more files and a registry of the second computer over the network to the user cleaning module, where the instruction is based on the cleaning rule set.","According to another embodiment, an apparatus includes a memory configured to store an administrator cleaning module. The method further includes a processor configured to execute the administrator cleaning module stored on the memory. The processor is further configured, when executing the administrator cleaning module stored on the memory, to, establish a secure connection over a network with a user cleaning module executed on a computer, receive application information over the network from the user cleaning module, transmit a cleaning rule set over the network to the user cleaning module, where the cleaning rule set is based on the application information, and transmit an instruction to clean at least one of one or more files and a registry of the computer over the network to the user cleaning module, where the instruction is based on the cleaning rule set.","According to another embodiment, a computer-readable medium includes a computer program stored thereon that, when executed by a processor, causes the processor to implement a method. The method includes establishing a secure connection over a network with a user cleaning module executed on a computer. The method further includes receiving application information over the network from the user cleaning module. The method further includes transmitting a cleaning rule set over the network to the user cleaning module, where the cleaning rule set is based on the application information. The method further includes transmitting an instruction to clean at least one of one or more files and a registry of the computer over the network to the user cleaning module, where the instruction is based on the cleaning rule set.","According to another embodiment, a method includes establishing, by a user cleaning module executed on a first computer, a secure connection over a network with an administrator cleaning module executed on a second computer. The method further includes transmitting, by the user cleaning module, application information over the network to the administrator cleaning module. The method further includes receiving, by the user cleaning module, a cleaning rule set over the network from the administrator cleaning module, where the cleaning rule set is based on the application information. The method further includes cleaning, by the user cleaning module, at least one of one or more files and a registry of the first computer, wherein the cleaning is based on an instruction and the cleaning rule set received from the administrator cleaning module.","According to another embodiment, an apparatus includes a memory configured to store a user cleaning module. The apparatus further includes a processor configured to execute the user cleaning module stored on the memory. The processor is further configured, when executing the user cleaning module stored on the memory, to, establish a secure connection over a network with an administrator cleaning module executed on a computer, transmit application information over the network to the administrator cleaning module, receive a cleaning rule set over the network from the administrator cleaning module, where the cleaning rule set is based on the application information, and clean at least one of one or more files and a registry of the apparatus based on an instruction and the cleaning rule set received from the administrator cleaning module.","According to another embodiment, a computer-readable medium includes a computer program stored thereon that, when executed by a processor, causes the processor to implement a method. The method includes establishing a secure connection over a network with an administrator cleaning module executed on a computer. The method further includes transmitting application information over the network to the administrator cleaning module. The method further includes receiving a cleaning rule set over the network from the administrator cleaning module, where the cleaning rule set is based on the application information. The method further includes cleaning at least one of one or more files and a registry, wherein the cleaning is based on an instruction and the cleaning rule set received from the administrator cleaning module.","It will be readily understood that the components of the present invention, as generally described and illustrated in the figures herein, may be arranged and designed in a wide variety of different configurations. Thus, the following detailed description of the embodiments of a method, apparatus, system, and computer-readable medium, as represented in the attached figures, is not intended to limit the scope of the invention as claimed, but is merely representative of selected embodiments of the invention.","The features, structures, or characteristics of the invention described throughout this specification may be combined in any suitable manner in one or more embodiments. For example, the usage of the phrases \u201can embodiment,\u201d \u201cone embodiment,\u201d \u201canother embodiment,\u201d \u201can alternative embodiment,\u201d \u201can alternate embodiment,\u201d \u201ccertain embodiments,\u201d \u201csome embodiments,\u201d \u201cdifferent embodiments\u201d or other similar language, throughout this specification refers to the fact that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment of the present invention. Thus, appearances of the phrases \u201can embodiment,\u201d \u201cone embodiment,\u201d \u201canother embodiment,\u201d \u201can alternative embodiment,\u201d \u201can alternate embodiment,\u201d \u201cin certain embodiments,\u201d \u201cin some embodiments,\u201d \u201cin other embodiments,\u201d \u201cin different embodiments,\u201d or other similar language, throughout this specification do not necessarily all refer to the same group of embodiments, and the described features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.","A \u201ccomputer,\u201d as understood by one of ordinary skill in the art, is any programmable machine that receives input, automatically stores and manipulates data, and provides output. A \u201ccomputer program\u201d is any sequence of instructions written to perform a specific task on a computer, and has an executable form that a computer (typically through the use of a processor) can use to execute the instructions. A \u201ccomputer module,\u201d \u201csoftware module,\u201d or \u201cmodule\u201d is any computer program, or a portion thereof, that encapsulates related functions. A \u201ccomputer application,\u201d \u201csoftware application,\u201d or \u201capplication\u201d is any collection of computer programs and\/or modules. A \u201ccomputer network\u201d or \u201cnetwork\u201d is any collection of computers interconnected by communication channels that facilitate communication among the computers.","In addition, a \u201cservice\u201d or \u201cweb service,\u201d as understood by one of ordinary skill in the art, is a module or application designed to support interoperable computer-to-computer interaction over a network. A service can have an interface described in a computer-processable format. A computer can interact with a service by sending messages over a network protocol. Examples of services are Big Web services and RESTful services. Big Web services are services that follow a Simple Object Access Protocol (SOAP) standard and use Extensible Markup Language (XML) messages. RESTful services are services that utilize a Representational State Transfer (REST) style of software architecture, where clients are separate from servers by a uniform interface.","According to an embodiment of the invention, a cleaning application can be remotely deployed over a network to one or more computers. The cleaning application can clean at least one of one or more files and a registry of a computer. The cleaning application can include an administrator cleaning module and a user cleaning module. The administrator cleaning module can automatically scan a network and detect one or more computers. The administrator cleaning module can then remotely deploy the user cleaning module to one or more selected computers of the network. Once the user cleaning module is remotely deployed on a computer, the administrator cleaning module can remotely manage the user cleaning module over the network. The administrator cleaning module can establish a secure connection with the user cleaning module over the network. Once a secure connection is established, the administrator cleaning module can instruct the user cleaning module to clean at least one of one or more files and a registry of the computer.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 1","FIG. 1"],"b":["100","110","120","130","100","110","120","130"]},"The system also includes network . Network  can be any type of network that is known in the art, such as a local area network (LAN), a wide area network (WAN), a personal area network (PAN), a home area network (HAN), a campus area network (CAN), a metropolitan area network (MAN), a global area network (GAN), a storage area network (SAN), a virtual private network (VPN), a wireless network, a wireless LAN, a HomePNA, a power line communication network, a G.hn network, a Bluetooth network, an optical fiber network, an Ethernet network, an active networking network, a client-server network, a peer-to-peer network, a bus network, a star network, a ring network, a mesh network, a star-bus network, a tree network, or a hierarchical topology network. According to the embodiment, computer  can establish a connection with any of computers , , and  over network  using a network protocol. The network protocol can be any communication protocol that is known in the art, such as an Internet Protocol (IP), a Transmission Control Protocol (TCP), a User Datagram Protocol (UDP), an Internet Control Message Protocol (ICMP), a Hypertext Transfer Protocol (HTTP), a Post Office Protocol (POP), a File Transfer Protocol (FTP), or an Internet Message Access Protocol (IMAP). According to an embodiment, the network protocol can be a secured network protocol, and the connection between computer  and any of computers , , and  can be a secured connection. In the embodiment illustrated in , computer  can establish a connection with the three computers in the system, i.e., computers , , and , over network . However, this is merely an example, and in alternate embodiments, a computer can establish a connection with any number of computers over a network.","According to the embodiment, computer  includes administrator cleaning module . Administrator cleaning module  is a module that is executed by computer . Administrator cleaning module  can remotely deploy one or more user cleaning modules (such as user cleaning modules , , and ) to computers , , and  over network . Administrator cleaning module  can also remotely manage file and registry cleaning performed by the deployed one or more user cleaning modules. The functionality of administrator cleaning module  is described below in greater detail in relation to .","Also according to the embodiment, computer  includes user cleaning module , computer  includes user cleaning module , and computer  includes user cleaning module . User cleaning modules , , and  are each modules that are executed by computers , , and , respectively. User cleaning modules , , and  can each perform file and registry cleaning on computers , , and , respectively, where the file and registry cleaning can be managed by administrator cleaning module . The functionality of user cleaning modules , , and  is described below in greater detail in relation to .","According to an embodiment, once administrator cleaning module  has remotely deployed user cleaning modules , , and , administrator cleaning module  can establish a connection with user cleaning modules , , and  over network . The connection can be established using a network protocol of network . In one embodiment, the connection can be a secured connection.","According to an embodiment, once administrator cleaning module  has remotely deployed user cleaning modules , , and , a unique paring can be created between each of user cleaning modules , , and  and administrator cleaning module . Thus, even if additional administrator cleaning modules are executed on computers connected to network , each additional administrator cleaning module can only connect to the user cleaning modules which have been remotely deployed from that particular administrator cleaning module. In the embodiment illustrated in , administrator cleaning module  has remotely deployed, and thus is uniquely paired with, three user cleaning modules (i.e., user cleaning modules , , and ). However, this is merely an example, and in alternate embodiments, an administrator cleaning module can remotely deploy, and thus, be uniquely paired with, any number of user cleaning modules.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 2","FIG. 1"],"b":["200","220","200","100","200","205","200","200","235","205","235","200","210","235","210","200","230","200","200"]},"A computer-readable medium may be any available medium that can be accessed by processor . A computer-readable medium may include both a volatile and nonvolatile medium, a removable and non-removable medium, and a storage medium. A storage medium may include RAM, flash memory, ROM, erasable programmable read-only memory (EPROM), electrically erasable programmable read-only memory (EEPROM), registers, hard disk, a removable disk, a compact disc read-only memory (CD-ROM), or any other form of storage medium known in the art.","Processor  can also be operatively coupled via bus  to a display , such as a Liquid Crystal Display (LCD). Display  can display information to the user. A keyboard  and a cursor control device , such as a computer mouse, can also be operatively coupled to bus  to enable the user to interface with apparatus .","According to one embodiment, memory  can store software modules that may provide functionality when executed by processor . The modules can include administrator cleaning module . Administrator cleaning module  can remotely deploy one or more user cleaning modules to one or more computers over network. According to the embodiment, administrator cleaning module  can automatically scan for computers in order to detect the computers on a network. Based on the automatic scan, administrator cleaning module  can select one or more computers from a list of computers detected on the network. Once one or more computers have been selected, administrator cleaning module  can remotely deploy a user cleaning module to the selected one or more computers.","Furthermore, administrator cleaning module  can also remotely manage file and registry cleaning performed by the deployed one or more user cleaning modules. According to the embodiment, administrator cleaning module  can establish a secure connection over a network with a user cleaning module deployed on another computer. Once a secure connection is established, administrator cleaning module  can receive application information over the network from the user cleaning module, transmit a cleaning rule set over the network to the user cleaning module based on the received application information, and transmit an instruction to clean at least one of one or more files and a registry of the other computer over the network to the user cleaning module.","According to the embodiment, the modules can also include an operating system , as well as other functional modules . Operating system  can provide an operating system functionality for apparatus . Apparatus  can also be part of a larger system. Thus, apparatus  can include one or more additional functional modules  to include additional functionality for the system.","Processor  can also be operatively coupled via bus  to a database . Database  can store data in an integrated collection of logically-related records or files. Database  can be an operational database, an analytical database, a data warehouse, a distributed database, an end-user database, an external database, a navigational database, an in-memory database, a document-oriented database, a real-time database, a relational database, an object-oriented database, or any other database known in the art.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 3","FIG. 1","FIG. 2","FIG. 2","FIG. 2","FIG. 2","FIG. 2","FIG. 2","FIG. 2","FIG. 2","FIG. 2","FIG. 2","FIG. 2"],"b":["300","320","300","110","120","130","200","300","305","310","315","325","330","335","340","345","350","355","305","205","310","210","315","215","325","225","330","230","335","235","340","240","345","245","350","250","355","255"]},"According to one embodiment, the software modules stored in memory , that may provide functionality when executed by processor , include user cleaning module . User cleaning module  can perform file and registry cleaning on apparatus , where the file and registry cleaning can be remotely managed by an administrator cleaning module. According to the embodiment, user cleaning module  can establish a secure connection over a network with an administrator cleaning module. Once the secure connection has been established, user cleaning module  can transmit application information over the network to the administrator cleaning module. In response, user cleaning module  can receive a cleaning rule set over the network from the administrator cleaning module, where the cleaning rule set is based on the application information. In response to receiving the cleaning rule set, user cleaning module  can clean at least one of one or more files and a registry of apparatus , where the cleaning is based on an instruction and the cleaning rule set received by the administrator cleaning module.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIGS. 4","b":["5","6","10","11","12","13"]},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 4"},"According to the embodiment, the method begins, and, at step , a network is automatically scanned to detect computers. In one embodiment, a Microsoft\u00ae Windows\u00ae NetBIOS application programming interface is used to identify one or more computers connected to the network that have registered a NetBIOS name, a NetBIOS group name, or a combination of the two. The method then proceeds to step .","At step , a computer is selected from a list of computers detected on the network. The automatic scan process and the selection process is described below in greater detail in relation to . The method then proceeds to step .","At step , a user cleaning module is remotely deployed over the network to the one or more selected computers. As previously described, a user cleaning module can perform file and registry cleaning on the selected computer. In one embodiment, a previous user cleaning module that is already deployed on the selected one or more computers is uninstalled, before the user cleaning module is remotely deployed. The remote deployment process is described below in greater detail in relation to . After step , the method ends.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 5"},"In the embodiment, the flow begins, and, at step , the administrator cleaning module selects a network. The administrator cleaning module can select a network in response to an administrator selecting a network tree entitled \u201cNetwork\u201d that is displayed at a user interface of the administrator cleaning module. The network can be a network that the computer that executes the administrator cleaning module can connect to. The flow then proceeds to step .","At step , the administrator cleaning module automatically scans the selected network to detect computers. In one embodiment, the administrator cleaning module automatically scans the network using a Microsoft\u00ae Windows\u00ae NetBIOS application programming interface (API). By using the NetBIOS API, the administrator cleaning module can identify all computers connected to the network that have registered either a NetBIOS name, a NetBIOS group name, a combination of the two. The flow then proceeds to step .","At step , the administrator cleaning module determines whether a computer on the network has been found. According to the embodiment, the administrator cleaning module can analyze the results of the automatic scan to identify how many (if any) computers were found by the automatic scan. If one or more computers were found, the flow proceeds to step . If no computers were found, the flow skips step , and proceeds to step .","At step , the administrator cleaning module adds the computer to a list of computers. According to the embodiment, the administrator cleaning module can store a list of computers found using the automatic scan. The administrator cleaning module can subsequently display this list to an administrator in its user interface. The flow then returns to step , where the administrator cleaning module determines whether additional computers were also found. Thus, according to the embodiment, steps  and  will be repeated for each computer found on the network.","At step , the administrator cleaning module organizes the list of computers by workgroup or group. For example, instead of keeping the computers in one group, such as \u201cWORKGROUP,\u201d the administrator cleaning module can create one or more groups, such as \u201cIT SUPPORT,\u201d \u201cSALES DEPT,\u201d \u201cMARKETING,\u201d etc. The administrator cleaning module can then keep the computers in the appropriate group. The administrator cleaning module can determine which computer should be in which group based on characteristics of the computer, such as computer name, IP address, NetBIOS name, and NetBIOS group name. According to the embodiment, the names of the groups, and the members of the group, can be edited by the administrator. The flow then proceeds to step .","At step , the administrator cleaning module determines whether it needs to manually add a computer. As an example, an administrator may have personal knowledge that a computer is connected to the network; yet for some reason, the automatic scan may not be able to detect the computer. Thus, it may be necessary to manually add the computer to the list of computers. In one example, the administrator cleaning module can determine that it needs to manually add a computer by receiving input from the administrator using the user interface. For example, an administrator may \u201cright-click\u201d a network or group name displayed on the user interface, and then click \u201cNew Host.\u201d If the administrator cleaning module determines it needs to manually add a computer, the flow proceeds to step . If the administrator cleaning module determines it does not need to manually add a computer, the flow then proceeds to step .","At step , the administrator cleaning module adds the computer to the list of computers. According to an embodiment, an administrator may enter information regarding the computer in a dialog box displayed at the user interface. For example, in an \u201cAdd a new host\u201d dialog box, an administrator may add a computer name, user name, password, and one or more IP addresses of a computer. The administrator cleaning module then stores the information regarding the computer and adds the computer to the list. The flow then returns to step , where the administrator cleaning module determines whether it needs to manually add another computer. Thus, according to the embodiment, steps  and  will be repeated for each computer that the administrator cleaning module needs to manually add.","At step , the administrator cleaning module determines whether it needs to execute a targeted scan. According to the embodiment a targeted scan is a scan of an identified range of IP addresses. In one example, the administrator cleaning module can determine that it needs to execute a targeted scan by receiving input from the administrator using the user interface. For example, an administrator can \u201cclick\u201d on an icon entitled \u201cTools,\u201d displayed in the user interface and then \u201cclick\u201d on a subsequent icon entitled \u201cAdvanced host detection.\u201d If the administrator cleaning module determines it needs to execute a targeted scan, the flow proceeds to step . If the administrator cleaning module determines it does not need to execute a targeted scan, the flow ends.","At step , the administrator cleaning module selects a range of IP addresses. According to the embodiment, an administrator may enter information regarding the range of IP addresses in a dialog box displayed at the user interface. The flow then proceeds to step .","At step , the administrator cleaning module scans the range of IP addresses to detect any computers with an IP address within the range of IP addresses. According to the embodiment, upon detecting one or more computers, the administrator cleaning module can display a list of the one or more computers at the user interface. The flow then proceeds to step .","At step , the administrator cleaning module selects one or more computers from the list of computers detected within the range of IP addresses. According to the embodiment, an administrator can select one or more computers to add from the list of the one or more computers displayed at the user interface. In one embodiment, the administrator can also select which group to add each computer to. The flow then proceeds to step .","At step , the administrator cleaning module adds the one or more computer to the list of computers. According to the embodiment, the administrator cleaning module stores the information regarding the one or more computers and adds the one or more computers to the list. After step , the flow ends.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 6"},"In the embodiment, the flow begins, and, at step , the administrator cleaning module, executed on a first computer, remotely deploys a user cleaning helper module onto a second computer over a network. A user cleaning helper module is a module that can, at least in part, facilitate a remote deployment and installation of a user cleaning module onto a computer. In one embodiment, the user cleaning helper module can be stored in an executable file. The administrator cleaning module can copy the executable file containing the user cleaning helper module from the first computer to the second computer over the network. In one embodiment, the executable file containing the user cleaning helper module can be copied into a directory of the second computer.","According to the embodiment, the administrator cleaning module has permission to copy and install modules onto the second computer. In one embodiment, once the user cleaning helper module has been remotely deployed onto the second computer, the user cleaning helper module establishes a connection to a service control manager on the second computer. This can facilitate the creation and initiation of one or more services that can be executed on the second computer, as described below in greater detail. The flow then proceeds to step .","At step , the administrator cleaning module creates and starts a user cleaning helper service on the second computer using the user cleaning helper module. According to the embodiment, the user cleaning helper service is a service that is executed on the second computer, and can, at least in part, facilitate a remote deployment and installation of a user cleaning module onto a computer. The flow then proceeds to step .","At step , the administrator cleaning module determines whether a user cleaning module has already been deployed onto the second computer using the user cleaning helper service. According to the embodiment, an older version of the user cleaning module may have already been deployed onto the second computer. In this embodiment, the older version of the user cleaning module may need to be stopped and deleted before a new version of the user cleaning module can be deployed. Therefore, a determination can be made regarding whether the user cleaning module has already been deployed, to avoid multiple versions of the user cleaning module being deployed onto a single computer. If a user cleaning module has already been deployed onto the second computer, the flow proceeds to step . If a user cleaning module has not already been deployed onto the second computer, the flow skips step , and proceeds to step .","At step , the administrator cleaning module uninstalls the user cleaning module that is already deployed onto the second computer using the user cleaning helper service. In one embodiment, the user cleaning helper service \u201cquietly\u201d uninstalls the user cleaning module. A \u201cquiet\u201d uninstall is an uninstall that occurs on a computer without an indication of the uninstall being displayed at a user interface of the computer. The uninstall occurs without the knowledge of a user, and thus, is \u201cquiet.\u201d The user cleaning helper service can uninstall the user cleaning module that is already deployed by stopping any service associated with the user cleaning module, if such a service is running, and deleting the user cleaning module from the second computer.","In one embodiment, after the user cleaning helper service uninstalls the user cleaning module, the user cleaning helper service is stopped and deleted from the second computer, and the user cleaning helper module is deleted from the second computer as well. In the embodiment, steps  and  are repeated, before the flow then proceeds to step . In an alternate embodiment, after the user cleaning helper service uninstalls the user cleaning module, the flow proceeds directly to step .","At step , the administrator cleaning module remotely deploys a user cleaning installer module onto the second computer over a network. A user cleaning installer module is a module that can install a user cleaning module onto a computer. In one embodiment, the user cleaning installer module can be stored in an executable file. The administrator cleaning module can copy the executable file containing the user cleaning installer module from the first computer to the second computer. In one embodiment, the executable file containing the user cleaning installer module can be copied into a directory of the second computer. The flow then proceeds to step .","At step , the administrator cleaning module installs a user cleaning module onto the second computer using the user cleaning installer module. As previously described, a user cleaning module is a module that can perform file and registry cleaning on a computer when executed. According to the embodiment, the user cleaning installer module can perform a \u201cquiet\u201d install of the user cleaning module, as previously described. In one embodiment, the user cleaning installer module can install the user cleaning module from a command-line interface, where a command-line interface is a mechanism for interacting with a computer that allows a user (either a human user or an automated user) to type commands in a text-only user interface to perform specific tasks. A user can be automated through the use a batch file that can be stored on the second computer. The flow then proceeds to step .","At step , the administrator cleaning module deletes the user cleaning installer module from the second computer. According to the embodiment, the deletion can include deleting the executable file that contains the user cleaning installer module from the second computer. The flow then proceeds to step .","At step , the administrator cleaning module stops and deletes the user cleaning helper service from the second computer. According to the embodiment, the administrator cleaning module can instruct a service control manager of the second computer to stop the user cleaning helper service so that the service no longer executes on the second computer. The administrator cleaning module can also instruct the service control manager to delete the user cleaning helper service from a set of available services on the second computer, so that the service can no longer be started on the second computer. The flow then proceeds to step .","At step , the administrator cleaning module deletes the user cleaning helper module from the second computer. According to the embodiment, the deletion can include deleting the executable file that contains the user cleaning helper module from the second computer. The flow then proceeds to step .","At step , the administrator cleaning module creates and starts a user cleaning service on the second computer using the user cleaning module. According to the embodiment, the user cleaning service is a service that is executed on the second computer, and can, at least in part, facilitate file and registry cleaning on the second computer, as will be described in greater detail. After step , the flow ends.",{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIGS. 7-9","FIGS. 7-9","FIGS. 7-9"]},{"@attributes":{"id":"p-0085","num":"0084"},"figref":["FIG. 7","FIG. 7"]},"According to the embodiment, the user interface can display network tree . Network tree  is a visual representation of a network that the administrator cleaning module is connected to. In the illustrated embodiment, in response to an administrator expanding the network by \u201cclicking\u201d an icon associated with the displayed network, network tree  displays the following groups: \u201cHR_DEPT,\u201d \u201cIT_DEPT,\u201d \u201cMARKETING,\u201d \u201cSALES,\u201d \u201cSERVERS,\u201d and \u201cSUPPORT.\u201d","According to the embodiment, the user interface can also display network summary . Network summary  represents a summary of the network that the administrator cleaning module is connected to. In the illustrated embodiment, network summary  displays the following information: the number of groups in the network (in this example, 6), the number of hosts, or computers, in the network (in this example, 19), the number of client, or user cleaning module, licenses (in this example, 100), the number of offline computers (in this example, 5), the number of online computers where a user cleaning module has not been installed, or deployed, (in this example, 3), and the number of online computers where a user cleaning module has been deployed (in this example, 11). In this example, the number of groups in the network indicates the number of groups displayed in network tree . The number of computers in the network indicates the number of computers connected to the network that were detected in a previous automatic scan of the network. The number of user cleaning module licenses indicates the number of allotted licenses for the user cleaning module. Thus, the number of user cleaning module licenses also indicates the maximum number of computers in a network that a user cleaning module can be deployed to. The number of offline computers indicates the number of computers that were formerly connected to the network, but are no longer connected. The number of online computers where a user cleaning module has not been deployed indicates the number of computers detected in a previous automatic scan, where the administrator cleaning module has not deployed a user cleaning module. The number of online computers where a user cleaning module has been deployed indicates the number of computers detected in a previous automatic scan, where the administrator cleaning module has deployed a user cleaning module.","According to the embodiment, to add computers to the list of computers displayed by the administrator cleaning module, an administrator, or other type of user, can \u201cclick\u201d a network displayed in network tree , and subsequently \u201cclick\u201d on an automatic scan button . In the illustrated embodiment, scan button  is entitled \u201cScan for hosts.\u201d By \u201cclicking\u201d automatic scan button , the administrator can initiate an automatic scan and selection process previously described in relation to .","According to the embodiment, if a known computer on the network does not appear in the list, the administrator can use the user interface illustrated in  to manually add the computer to the list. The administrator can manually add the computer to the list by \u201cright-clicking\u201d a network or group name displayed in network tree  and then clicking an icon entitled \u201cNew Host\u201d (not shown in ). This will cause the user interface to display a dialog box entitled \u201cAdd a new host\u201d (not shown in ). In the dialog box displayed by the user interface, the administrator can enter a computer name, user name, password, and one or more IP addresses of a computer.","According to the embodiment, if a known computer on the network does not appear in the list, the administrator can also use the user interface illustrated in  to perform a targeted scan of an identified range of IP addresses. The administrator can manually add the computer to the list by \u201cclicking\u201d an icon entitled \u201cTools,\u201d and then \u201cclicking\u201d on a subsequent icon entitled \u201cAdvanced host detection\u201d (not shown in ). In the dialog box displayed by the interface, the administrator can enter a range of IP addresses. After the administrator cleaning module scans the identified range of IP addresses, and displays one or more computers detected at the identified range, the administrator can manually select one or more computers to be added to the list. In an embodiment, the administrator can also select which group to add each computer to.",{"@attributes":{"id":"p-0091","num":"0090"},"figref":["FIG. 8","FIG. 8"]},"According to the embodiment, the user interface can display network tree . Network tree  is similar to network tree , but in response to an administrator expanding the group \u201cIT_DEPT\u201d by \u201cclicking\u201d an icon associated with the group \u201cIT_DEPT,\u201d network tree  displays the computers associated the group \u201cIT_DEPT.\u201d In the illustrated embodiment, network tree  displays the computers \u201cR203H01,\u201d \u201cR203H02,\u201d \u201cR203H03,\u201d \u201cR203H04,\u201d and \u201cR203H05.\u201d","According to the embodiment, the user interface can also display group summary . Group summary  represents a summary of the group selected in network tree . In the illustrated embodiment, group summary  displays the following information for each computer: computer name, IP address, computer state, operating system (OS), and user cleaning module version. In the example, the computer name indicates the name of the displayed computer. The IP address indicates an IP address of the displayed computer.","Furthermore, in the example, the computer state indicates one of four states: \u201cOnline (Client installed),\u201d \u201cOnline (Client not installed),\u201d \u201cClient paired with different instance of CCN,\u201d and \u201cOffline.\u201d The state \u201cOnline (Client installed),\u201d indicates that the displayed computer is connected to the network, and that the administrator cleaning module has deployed a user cleaning module onto the displayed computer. The state \u201cOnline (Client not installed),\u201d indicates that the displayed computer is connected to the network, but that the administrator cleaning module has not deployed a user cleaning module onto the displayed computer. The state \u201cClient paired with different instance of CCN,\u201d indicates that while a user cleaning module has been deployed onto the displayed computer, a different administrator cleaning module deployed it, rather than the administrator cleaning module associated with the user interface. The state \u201cOffline\u201d indicates that the displayed computer is not connected to the network.","Additionally, in the example, the OS indicates the OS of the displayed computer. The user cleaning module version indicates a version of the user cleaning module deployed on the displayed computer (if a user cleaning module is deployed).",{"@attributes":{"id":"p-0096","num":"0095"},"figref":["FIG. 9","FIG. 8","FIG. 9"]},"According to the embodiment, the user interface can display network tree . Network tree  is similar to network tree , but in response to an administrator \u201cclicking\u201d on a computer in the group \u201cIT_DEPT,\u201d highlights the display of the computer. In the illustrated embodiment, the administrator has \u201cclicked\u201d the displayed computer \u201cR203H01,\u201d and this computer is highlighted in network tree .","According to the embodiment, the user interface can also display computer summary . Computer summary  represents a summary of the computer selected in network tree . In the illustrated embodiment, computer summary displays the following information: OS, processor, RAM size, graphics processor, user cleaning module version, computer state, and hard drive(s). In the example, the processor indicates a processor utilized by the computer. The RAM size indicates a total size of RAM utilized by the computer. The graphics processor indicates a graphics processor utilized by the computer. The hard drive(s) indicate the hard drive(s) utilized by the computer. The OS, user cleaning module version and computer state are previously described in relation to .","According to an embodiment, an administrator can remotely deploy a user cleaning module onto a computer connected to the network, as described previously in relation to , using a user interface of an administrator cleaning module, such as the user interface illustrated in ,  and . In the embodiment, an administrator can \u201cright click\u201d a computer name displayed in the user interface and then \u201cclick\u201d an icon entitled \u201cInstall client.\u201d When the user cleaning module has been successfully deployed to the computer, the user interface of the administrator cleaning module can display a notification to the administrator.","In an alternate embodiment, the administrator can remotely deploy a user cleaning module onto all the computers in a group that are connected to the network. This remote deployment can involve the remote deployment of a user cleaning module onto a computer connected to the network, as described previously in relation to , performed either sequentially or in parallel for all the computers of the group. This remote deployment can also be performed using a user interface of an administrator cleaning module, such as the user interface illustrated in ,  and . In the embodiment, the administrator can \u201cright click\u201d a group name displayed in the user interface and then \u201cclick\u201d an icon entitled \u201cInstall client.\u201d When the user cleaning module has been successfully deployed to all the computers of the group, the user interface of the administrator cleaning module can display a notification to the administrator.","In an alternate embodiment, the administrator can remotely deploy a user cleaning module onto all the computers in a network. This remote deployment can involve the remote deployment of a user cleaning module onto a computer connected to the network, as described previously in relation to , performed either sequentially or in parallel for all the computers of the network. This remote deployment can also be performed using a user interface of an administrator cleaning module, such as the user interface illustrated in ,  and . In the embodiment, the administrator can \u201cright click\u201d an entry displayed in the user interface entitled \u201cNetwork\u201d and then \u201cclick\u201d an icon entitled \u201cInstall client.\u201d When the user cleaning module has been successfully deployed to all the computers of the network, the user interface of the administrator cleaning module can display a notification to the administrator.","In one embodiment, an administrator can configure an automatic scan of a network by setting network scanning options using a user interface of an administrator cleaning module. According to the embodiment, the administrator can \u201cclick\u201d on an icon entitled \u201cTools,\u201d displayed in the user interface (illustrated in ) and then click on a subsequent icon entitled \u201cOptions.\u201d The administrator cleaning module will then display a user interface that includes a set of configurable options. The set of configurable options can include a network scanning settings option. The network scanning settings option allows the administrator to select a network scanning technique to scan the network. For example, the network scanning settings option allows the administrator cleaning module will use a Windows\u00ae NetBIOS application programming interface to scan the network. Alternatively, the network scanning settings option can allow the administrator to select another network scanning technique known to one of ordinary skill in the art.","The set of configurable options also includes a network profile log option. A network profile log can be used to debug an automatic scan of a network. By selecting this option, the administrator cleaning module can create a network profile log that records the automatic scan of a network. The network profile log can be stored on a computer that executes the administrator cleaning module. The administrator cleaning module can also be configured to include information in the network profile regarding the result of executing a \u201cping\u201d command, executing an \u201cIPCONFIG\/ALL\u201d command, executing a \u201ctraceroute\u201d command (also known as a \u201ctracert\u201d command), or a combination of the three commands.","In another embodiment, an administrator can configure a remote deployment of a user cleaning module by setting remote deployment configuration options using a user interface of an administrator cleaning module. According to the embodiment, the administrator can \u201cclick\u201d on an icon entitled \u201cTools,\u201d displayed in the user interface (illustrated in ) and then click on a subsequent icon entitled \u201cRemote Installation.\u201d The administrator cleaning module will then display a user interface that includes a set of configurable options. The set of configurable options can include an installer version option. The installer version option allows the administrator to select a version of a user cleaning installer module to remotely deploy onto a computer, as described in relation to . The set of configurable options can also include a paired installer option. The paired installer option allows the administrator to remotely deploy a user cleaning installer module onto a computer in addition to remotely deploying a user cleaning module. With this option, if the remote deployment of the user cleaning module fails for any reason (such as when a network security policy prevents a remote installation of the user cleaning module), the user cleaning installer module can be executed locally on the computer, and the user cleaning module can still be installed and deployed on the computer.",{"@attributes":{"id":"p-0105","num":"0104"},"figref":"FIG. 10"},"According to the embodiment, the method begins, and, at step , a secure connection over a network with a user cleaning module, executed on another computer, is established. In one embodiment, the administrator cleaning module generates a first random 128-bit value and transmits it to the user cleaning module. The administrator cleaning module then receives a second random 128-bit value that is encrypted with a Rivest, Shamir, and Adleman (RSA) public key that is known to both the administrator cleaning module and the user cleaning module. The administrator cleaning module subsequently decrypts the second random 128-bit value using the RSA public key. The administrator cleaning module then computes a main encryption key based on the first random 128-bit value and the second random 128-bit value. The user cleaning module can also compute the main encryption key based on the first random 128-bit value and the second random 128-bit value. All subsequent communication with the user cleaning module is encrypted using the main encryption key, thus establishing a secure connection. The secure connection can utilize a user datagram protocol (UDP). The method then proceeds to step .","At step , application information is received over the network from the user cleaning module. According to the embodiment, the application information includes an application list that represents one or more applications that are installed on the other computer. The method then proceeds to step .","At step , a cleaning rule set is transmitted over the network to the user cleaning module, where the cleaning rule set is based on the application information. According to the embodiment, the cleaning rule set includes one or more cleaning rule identities. A cleaning rule identity is an identity that uniquely identifies a cleaning rule. Thus, each cleaning rule identity of the cleaning rule set corresponds to a unique cleaning rule. A cleaning rule includes one or more parameters for cleaning at least one of one or more files and a registry of the other computer. Thus, according to the embodiment, a composition of cleaning rule identities that make up the cleaning rule set can be based, in part, by the one or more applications of the application information. According to an embodiment, each cleaning rule identity of the cleaning rule set corresponds to either a system cleaning rule, an application cleaning rule, or a registry cleaning rule. The method then proceeds to step .","At step , an instruction to clean at least one of one or more files and a registry is transmitted over the network to the user cleaning module, where the instruction is based on the cleaning rule set. According to the embodiment, the instruction instructs the user cleaning module, for each cleaning rule identity of the cleaning rule set, to apply a cleaning rule that corresponds to the cleaning rule identity. By instructing the user cleaning module to apply a cleaning rule, the instruction instructs the user cleaning module to perform at least one of the following: removing one or more files; removing data from one or more files; removing one or more registry entries; and removing data from one or more registry entries. Thus, the instruction can instruct the user cleaning module to perform file cleaning, registry cleaning, or a combination of the two. In an alternate embodiment, an instruction to analyze, rather than clean, at least one of one or more files and a registry is transmitted over the network to the user cleaning module, where the instruction is based on the cleaning rule set. In the alternate embodiment, the instruction instructs the user cleaning module, for each cleaning rule identity of the cleaning rule set, to apply a cleaning rule that corresponds to the cleaning rule identity. By instructing the user cleaning module to apply a cleaning rule, the instruction instructs the user cleaning module to perform at least one of the following: identifying one or more files to be removed; identifying data from one or more files to be removed; identifying one or more registry entries to be removed; and identifying data from one or more registry entries to be removed. After step , the method ends.",{"@attributes":{"id":"p-0110","num":"0109"},"figref":"FIG. 11"},"According to the embodiment, the method begins, and, at step , a secure connection over a network with an administrator cleaning module, executed on another computer, is established. In one embodiment, the user cleaning module receives a first random 128-bit value from the administrator cleaning module. The user cleaning module then generates a second random 128-bit value and encrypts it with a RSA public key that is known to both the user cleaning module and the administrator cleaning module. The user cleaning module subsequently transmits the encrypted second random 128-bit value to the administrator cleaning module. The user cleaning module then computes a main encryption key based on the first random 128-bit value and the second random 128-bit value. The administrator cleaning module can also compute the main encryption key based on the first random 128-bit value and the second random 128-bit value. All subsequent communication with the administrator cleaning module is encrypted using the main encryption key, thus establishing a secure connection. The secure connection can utilize a UDP. The method then proceeds to step .","At step , application information is transmitted over the network to the administrator cleaning module. According to the embodiment, the application information includes an application list that represents one or more applications that are installed on the computer. The method then proceeds to step .","At step , a cleaning rule set is received over the network from the administrator cleaning module, where the cleaning rule set is based on the application information. According to the embodiment, the cleaning rule set includes one or more cleaning rule identities. A cleaning rule identity is an identity that uniquely identifies a cleaning rule. Thus, each cleaning rule identity of the cleaning rule set corresponds to a unique cleaning rule. A cleaning rule includes one or more parameters for cleaning at least one of one or more files and a registry of the other computer. Thus, according to the embodiment, a composition of cleaning rule identities that make up the cleaning rule set can be based, in part, by the one or more applications of the application information. According to an embodiment, each cleaning rule identity of the cleaning rule set corresponds to either a system cleaning rule, an application cleaning rule, or a registry cleaning rule. The method then proceeds to step .","At step , at least one of one or more files and a registry of the computer are cleaned. Thus, file cleaning can be performed, registry cleaning can be performed, or a combination of the two can be performed. The cleaning is based on an instruction and the cleaning rule set received from the administrator cleaning module. According to the embodiment, for each cleaning rule identity of the cleaning rule set, a cleaning rule that corresponds to the cleaning rule identity is applied. By applying a cleaning rule, at least one of the following is performed: removing one or more files; removing data from one or more files; removing one or more registry entries; and removing data from one or more registry entries. In an alternate embodiment, at least one of one or more files and a registry of the computer are analyzed, rather than cleaned. According to the alternate embodiment, for each cleaning rule identity of the cleaning rule set, a cleaning rule that corresponds to the cleaning rule identity is applied. By applying a cleaning rule, at least one of the following is performed: identifying one or more files to be removed; identifying data from one or more files to be removed; identifying one or more registry entries to be removed; and identifying data from one or more registry entries to be removed. After step , the method ends.",{"@attributes":{"id":"p-0115","num":"0114"},"figref":"FIG. 12"},"In the embodiment, the flow begins, and, at step , the user cleaning module generates an application list. According to the embodiment, the application list represents a list of applications that are installed on a computer, that the user cleaning module is executed on. In one embodiment, the user cleaning module generates the application list by determining whether one or more applications are installed on the computer. According to the embodiment, the user cleaning module can include a list of applications that are commonly installed on a computer, such as Microsoft\u00ae Internet Explorer\u00ae, Mozilla\u00ae Firefox\u00ae, Apple\u00ae Safari\u00ae, and Google\u00ae Chrome\u00ae. The user cleaning module can also include a list of locations on the computer that the user cleaning module can analyze to determine whether such an application is installed. In one embodiment, the list of locations includes a list of file locations. In another embodiment, the list of locations includes a list of registry entries. In yet another embodiment, the list of locations includes a combination of both a list of file locations and a list of registry entries. According to the embodiment, if the user cleaning module determines that an application is installed, the user cleaning module can include that application in the application list. If the user cleaning module determines that the application is not installed, the user cleaning module does not include that application in the application list. The flow then proceeds to step .","At step , the user cleaning module transmits the application list over the network to the administrator cleaning module. According to the embodiment, the application list can be used by the administrator cleaning module to generate a cleaning rule set. A cleaning rule set includes one or more cleaning rule identities, where each cleaning rule identity corresponds to a unique cleaning rule. A cleaning rule set can be stored within an administrator cleaning module. A cleaning rule is a set of one or more parameters for cleaning at least one of one or more files and a registry of a computer. More specifically, a cleaning rule is a set of one or more parameters for at least one of the following: removing one or more files from a computer, removing data from one or more files, removing one or more registry entries from a computer, and removing data from one or more registry entries. The parameters of the cleaning rule instruct a user cleaning module on what items to remove when applying the cleaning rule, where the items can include files, registry entries, data from files, data from registry entries, or a combination therein. A cleaning rule can be stored within a user cleaning module. The flow then proceeds to step .","At step , the administrator cleaning module configures the application list transmitted by the user cleaning module. According to the embodiment, the administrator cleaning module can select which applications from the application list are to be cleaned, and which applications from the application list are not to be cleaned. Furthermore, regarding the applications that are to be cleaned, the administrator cleaning module can configure which items corresponding to the application are to be removed, where the items can include files, registry entries, data from files, data from registry entries, or a combination therein. In one embodiment, the administrator cleaning module can display the application list (and corresponding configuration options) in a user interface, and allow an administrator to configure the application list accordingly. The flow then proceeds to step .","At step , the administrator cleaning module generates a cleaning rule set. As previously described, a cleaning rule set includes one or more cleaning rule identities, where each cleaning rule identity corresponds to a unique cleaning rule. As also previously described, a composition of cleaning rule identities that make up the cleaning rule set can be based, in part, by the one or more applications of the configured application list. Thus, according to the embodiment, one or more cleaning rule identities that correspond to application cleaning rules can be generated based on the configured application list. In addition, one or more cleaning rule identities that correspond to system cleaning rules can also be generated. The distinction between application cleaning rules and system cleaning rules is described below in greater detail in relation to . In one embodiment, the administrator cleaning module can display the application cleaning rule set in a user interface, and allow an administrator to configure the cleaning rule set accordingly. The flow then proceeds to step .","At step , the administrator cleaning module transmits the cleaning rule set, and an instruction to clean at least one of one or more files and a registry based on the cleaning rule set, over the network to the user cleaning module. As will be described in greater detail in relation to , the user cleaning module can apply one or more cleaning rules, based on the cleaning rule set and the instruction, and clean at least one of one or more files and a registry on the computer that executes the user cleaning module. In an alternate embodiment, the administrator cleaning module can also transmit a list of users, in addition to the cleaning rule set and the instruction, to the user cleaning module. According to the alternate embodiment, the user cleaning module can apply the one or more cleaning rules for only the users of the computer in the list of users, rather than for the entire computer. In an alternate embodiment, the administrator cleaning module can transmit an instruction to analyze, rather than clean, at least one of one or more files and a registry based on the cleaning rule set, over the network to the user cleaning module. As will also be discussed in greater detail in relation , the user cleaning module can apply one or more cleaning rules, based on the cleaning rule set and the instruction, and analyze at least one of one or more files and a registry on the computer that executes the user cleaning module. After step , the flow ends.",{"@attributes":{"id":"p-0121","num":"0120"},"figref":"FIG. 13"},"In the embodiment, the flow begins, and, at step , a user cleaning module determines whether a received cleaning rule set includes any cleaning rule identities that have not yet been applied. According to the embodiment, the cleaning rule set is received from an administrator cleaning module over a network. As previously described, a cleaning rule identity corresponds to a unique cleaning rule that can be stored within the user cleaning module. If the cleaning rule set includes any cleaning rule identities that have not been applied, the flow proceeds to step . If the cleaning rule set does not include any cleaning rule identities that have not been applied, the flow skips steps , , , and , and the flow ends.","At step , the user cleaning module selects a cleaning rule identity from the cleaning rule set. According to the embodiment, the user cleaning module selects a cleaning rule identity that has not been previously selected. The flow then proceeds to step .","At step , the user cleaning module selects a cleaning rule that corresponds to the selected cleaning rule identity. As previously discussed, a cleaning rule is a set of one or more parameters for cleaning at least one of one or more files and a registry of a computer, and the cleaning rule can be stored within the user cleaning module. According to the embodiment, the cleaning rule identity indicates which cleaning rule to apply to the computer where the user cleaning module is executed. The cleaning rule can include one or more parameters for at least one of the following: removing one or more files from a computer, removing data from one or more files, removing one or more registry entries from a computer, and removing data from one or more registry entries. The flow then proceeds to step .","At step , the user cleaning module cleans one or more files based on the selected cleaning rule. According to the embodiment, when the selected cleaning rule applies to one or more files stored on the computer, the user cleaning module, for each file of the one or more files, removes the file from the computer or removes data from the file, based on the selected cleaning rule. This step can be skipped if the selected cleaning rule is not applied to any files stored on the computer. In an alternate embodiment, the user cleaning module can analyze, rather than clean, one or more files based on the selected cleaning rule. According to the alternate embodiment, the user cleaning module identifies the one or more files for removal or data removal based on the cleaning rule. The flow then proceeds to step .","At step , the user cleaning module cleans one or more registry entries based on the selected cleaning rule. According to the embodiment, when the selected cleaning rule applies to one or more registry entries stored on the computer, the user cleaning module, for each registry entry of the one or more registry entries, removes the registry entry from the computer or removes data from the registry entry, based on the selected cleaning rule. This step can be skipped if the selected cleaning rule is not applied to any registry entries stored on the computer. In an alternate embodiment, the user cleaning module can analyze, rather than clean, one or more registry entries based on the selected cleaning rule. According to the alternate embodiment, the user cleaning module identifies the one or more registry entries for removal or data removal based on the cleaning rule. The flow then returns to step , where the user cleaning module again determines whether a received cleaning rule set includes any cleaning rule identities that have not been applied. Thus, according to the embodiment, steps , , , and  will be repeated for each cleaning rule identity of the cleaning rule set.","According to an embodiment, a cleaning rule can be one of three types of cleaning rules: a system cleaning rule that can be applied to clean at least one of one or more files and one or more registry entries; an application cleaning rule that can be applied to clean at least one of one or more files and one or more registry entries; and a registry cleaning rule that can be applied to clean one or more registry entities.","A system cleaning rule is a cleaning rule for the cleaning of at least one of one or more files, and one or more registry entries, corresponding to a system component of a computer, rather than a specific application. According to one embodiment, examples of system components include the following components: Recycle Bin, Temporary Files, Clipboard, Memory Dumps, Chkdsk File Fragments, Windows Log Files, Windows Error Reporting, DNS Cache, FTP Accounts, Start Menu Shortcuts, and Desktop Shortcuts. One of ordinary skill in the art would readily appreciate that these components are merely example components, and a system cleaning rule can clean other system components of a computer.","According to an embodiment, the following is an example system cleaning rule for cleaning the Windows Log Files component:",{"@attributes":{"id":"p-0130","num":"0129"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"[Windows Log Files]"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ID=1017"]},{"entry":[{},"LangSecRef=3003"]},{"entry":[{},"LangRef=3145"]},{"entry":[{},"Default=True"]},{"entry":[{},"FileKey1=%SystemDirectory%\\wbem\\Logs|*.log"]},{"entry":[{},"FileKey2=%SystemDirectory%\\wbem\\Logs|*.lo"]},{"entry":[{},"FileKey3=%windir%|*.log"]},{"entry":[{},"FileKey4=%windir%|*.bak"]},{"entry":[{},"FileKey5=%windir%|*log.txt"]},{"entry":[{},"FileKey6=%commonappdata%\\Microsoft\\Dr Watson|*.log"]},{"entry":[{},"FileKey7=%commonappdata%\\Microsoft\\Dr Watson|*.dmp"]},{"entry":[{},"FileKey8=%windir%\\Debug|*.log"]},{"entry":[{},"FileKey9=%windir%\\Debug\\UserMode|*.log"]},{"entry":[{},"FileKey10=%windir%\\Debug\\UserMode|*.bak"]},{"entry":[{},"FileKey11=%windir%|ScheduLgU.txt"]},{"entry":[{},"FileKey12=%windir%\\security\\logs|*.log"]},{"entry":[{},"FileKey13=%windir%\\security\\logs|*.old"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"According to the embodiment, the system cleaning rule includes an ID parameter, whose value represents a cleaning rule identity. The system cleaning rule also includes a LangSecRef parameter and a LangRef parameter, whose values represent a system component or application to be cleaned. In addition, the system cleaning rule includes a Default parameter, whose value indicates whether the cleaning rule is applied as a default. The system cleaning rule also includes the following parameters: FileKey1, FileKey2, FileKey3, FileKey4, FileKey5, FileKey6, FileKey7, FileKey8, FileKey9, FileKey10, FileKey11, FileKey12, and FileKey13. Each of these parameters are examples of a FileKey parameter. A FileKey parameter indicates specific files that are cleaned when the cleaning rule is applied.","In an alternate embodiment, a system cleaning rule can include a DetectFile parameter, a Detect parameter, or a combination of the two. The DetectFile parameter can be used to detect the presence of a system component or application by looking for specific files. The Detect parameter can be used to detect the presence of a system component or application by looking for specific registry entries. In the alternate embodiment, a system cleaning rule can also include any number of RegKey parameters. A RegKey parameter indicates specific registry entries that are cleaned when the cleaning rule is applied.","One of ordinary skill in the art would readily appreciate that the system cleaning rule shown above is only an example, and that a system cleaning rule may take different forms and still be within the scope of the invention.","An application cleaning rule is a cleaning rule for the cleaning of at least one of one or more files, and one or more registry entries, corresponding to a specific application of a computer. According to one embodiment, examples of applications include the following applications: Mozilla\u00ae Firefox\u00ae, Opera\u00ae, Apple\u00ae Safari\u00ae, Google\u00ae Chrome\u00ae, Adobe\u00ae Acrobat Reader\u00ae, Adobe\u00ae ImageReady\u00ae, Adobe\u00ae Photoshop\u00ae, Adobe\u00ae Illustrator\u00ae, Yahoo\u00ae Toolbar, Windows Live\u00ae Toolbar, Google\u00ae Toolbar, Google\u00ae Deskbar\u00ae, Google\u00ae Calendar Sync\u00ae, Google\u00ae Talk\u00ae, Microsoft\u00ae Windows Media Player\u00ae, Real\u00ae Player, Quicktime\u00ae Player, Adobe\u00ae Paint Shop Pro\u00ae, Microsoft\u00ae Works\u00ae, Microsoft\u00ae Office\u00ae, Installshield\u00ae Developer\u00ae, Macromedia\u00ae Flash\u00ae, Adobe\u00ae Flash Player\u00ae, Macromedia\u00ae Homesite\u00ae, Macromedia\u00ae Fireworks\u00ae, Macromedia\u00ae Dreamweaver\u00ae, Macromedia\u00ae Shockwave\u00ae, and Microsoft\u00ae Silverlight\u00ae. One of ordinary skill in the art would readily appreciate that these applications are merely example components, and an application cleaning rule can clean other applications of a computer.","According to an embodiment, the following is an example application cleaning rule for cleaning an Internet cache of Mozilla\u00ae Firefox\u00ae:",{"@attributes":{"id":"p-0136","num":"0135"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"[Mozilla - Internet Cache]"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ID=2001"]},{"entry":[{},"LangSecRef=3026"]},{"entry":[{},"Default=True"]},{"entry":[{},"SpecialDetect=DET_MOZILLA"]},{"entry":[{},"SpecialKey1=N_MOZ_CACHE"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"According to the embodiment, the application cleaning rule includes an ID parameter, whose value represents a cleaning rule identity. The application cleaning rule also includes a LangSecRef parameter, whose values represent a system component to be cleaned. In addition, the application cleaning rule includes a Default parameter, whose value indicates whether the application cleaning rule is applied as a default. The application cleaning rule also includes the following parameters: SpecialDetect and SpecialKey1. The values for the parameters SpecialDetect and SpecialKey1 represent dedicated functions that are used to detect applications or system components and clean them.","In an alternate embodiment, an application cleaning rule can include a DetectFile parameter, a Detect parameter, or a combination of the two, which have previously been described. In the alternate embodiment, an application cleaning rule can also include any number of FileKey parameters and\/or RegKey parameters, both of which have also previously been described.","One of ordinary skill in the art would readily appreciate that the application cleaning rule shown above is only an example, and that an application cleaning rule may take different forms and still be within the scope of the invention.","A registry cleaning rule is a cleaning rule for the cleaning one or more registry entries of a computer. According to one embodiment, examples of registry cleaning rules include the following examples:","Missing Shared Dynamically Linked Libraries (DLLs)\u2014Removes entry for a library which is shared by multiple programs that no longer exist;","Unused File Extensions\u2014Removes entries for file extensions that are no longer associated with installed applications;","ActiveX and Class Issues\u2014Removes invalid entries from COM\/ActiveX object that refer to a non-existing file;","Type Libraries\u2014Removes invalid entries for type library that refer to an non-existing file;","Applications\u2014Removes invalid entries for non-existent programs;","Fonts\u2014Removes invalid entries for fonts that no longer exist in a Windows Fonts folder;","Application Paths\u2014Removes entries for registered application path that no longer exists;","Help Files\u2014Removes entries referring to Help files that no longer exist;","Installer\u2014Removes unnecessary uninstallers or the remnants of previous uninstallations;","Obsolete Software\u2014Removes entries for applications that are no longer installed;","Run At Startup\u2014Removes entries for Startup applications that no longer exist;","Start Menu Ordering\u2014Removes entries for Start menu application that no longer exist; and","MUI Cache\u2014Removes invalid entries from a chance of recently run programs.","One of ordinary skill in the art would readily appreciate that these are merely example registry cleaning rules, and that other registry cleaning rules can be included. According to an embodiment, the following is an example registry cleaning rule for cleaning missing shared DLLs:",{"@attributes":{"id":"p-0155","num":"0154"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"[Missing Shared DLLs]"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LangSecRef=3501"]},{"entry":[{},"LangRef=3601"]},{"entry":[{},"Default=True"]},{"entry":[{},"SpecialKey1=R_SHARED_DLLS"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"According to the embodiment, the registry cleaning rule includes an ID parameter, whose value represents a cleaning rule identity. The registry cleaning rule also includes a LangSecRef parameter and a LangRef parameter, whose values represent one or more registry entries to be cleaned. In addition, the registry cleaning rule includes a Default parameter, whose value indicates whether the registry cleaning rule is applied as a default. The application cleaning rule also includes a SpecialKey1 parameter, whose value represents a dedicated function that is used to detect registry entries and clean them.","In an alternate embodiment, a registry cleaning rule can include a Detect parameter, which has previously been described. In the alternate embodiment, an application cleaning rule can also include any number of RegKey parameters, which also have previously been described.","One of ordinary skill in the art would readily appreciate that the registry cleaning rule shown above is only an example, and that a registry cleaning rule may take different forms and still be within the scope of the invention.","According to an alternate embodiment, an administrator cleaning module can also transmit an instruction over the network to the user cleaning module to clean one or more databases of a computer where the user cleaning module is executed, where the instruction is based on the cleaning rule set. According to the alternate embodiment, the instruction instructs the user cleaning module, for each appropriate cleaning rule identity of the cleaning rule set, to apply a cleaning rule that corresponds to the cleaning rule identity, to perform database cleaning, database optimization, database compacting, or a combination therein, on the one or more databases. As understood by one of ordinary skill in the art, database cleaning refers to removing one or more database records from one or more database tables. The one or more database records can be removed because of various technical or business reasons. For example, the data in the one or more database records may be incomplete or corrupt. As another example, the one or more database records may not be utilized. Database optimization refers to improving speed and functionality of querying the one or more databases, such as creating or modifying one or more indexes. Database compacting refers to compacting data stored in the one or more databases, so that the one or more databases require a smaller amount of storage space on the computer.","According to the alternate embodiment, a user cleaning module can clean one or more databases of a computer where the user cleaning module is executed. The one or more databases can be cleaned based on an instruction and the cleaning rule set received from the administrator cleaning module. According to the embodiment, for each appropriate cleaning rule identity of the cleaning rule set, a cleaning rule that corresponds to the cleaning rule identity is applied to perform database cleaning, database optimization, database compacting, or a combination therein, on the one or more databases. When the cleaning rule performs database cleaning, the cleaning rule can remove one or more database records from one or more database tables of the one or more databases. When the cleaning rule perform database optimization, the cleaning rule can create or modify one or more indexes that can be associated with the one or more databases. When the cleaning rule performs database compacting, the cleaning rule can compact the data stored in the one or more databases so that the one or more databases require a smaller amount of storage space on the computer.","According to another alternate embodiment, an administrator cleaning module can also transmit an instruction over the network to the user cleaning module to optimize one or more browser applications of a computer where the user cleaning module is executed, where the instruction is based on the cleaning rule set. A browser application is an application configured to retrieve, present, and traverse information resources over the Internet, such as the World Wide Web. Examples of a browser application include Microsoft\u00ae Internet Explorer\u00ae, Mozilla\u00ae Firefox\u00ae, Apple\u00ae Safari\u00ae, and Google\u00ae Chrome\u00ae. Optimizing a browser application can include cleaning one or more files associated with the browser application, cleaning one or more registry entries associated with the browser application, cleaning one or more databases associated with the browser application, or a combination therein, as previously described.","According to the alternate embodiment, a user cleaning module can optimize one or more browser applications of a computer where the user cleaning module is executed. The one or more browser applications can be optimized based on an instruction and the cleaning rule set received from the administrator cleaning module. Upon receiving the instruction and the cleaning rule set from the administrator cleaning module, the user cleaning module can clean one or more files associated with each browser application, clean one or more registry entries associated with each browser application, clean one or more databases associated with each browser application, or a combination therein, as previously described.",{"@attributes":{"id":"p-0163","num":"0162"},"figref":["FIGS. 14-15","FIGS. 14-15","FIGS. 14-15"]},{"@attributes":{"id":"p-0164","num":"0163"},"figref":["FIG. 14","FIG. 14"]},"According to the embodiment, the user interface can display cleaning rule set . Cleaning rule set  is a visual representation of a cleaning rule set that can be transmitted to a user cleaning module, where the cleaning rule set comprises one or more cleaning rule identities, where each cleaning rule identity corresponds to a unique cleaning rule. The user interface can allow an administrator to configure the cleaning rule set by \u201cclicking\u201d on icons that are displayed next to a displayed name of the cleaning rule. By \u201cclicking\u201d on each icon, the user can either add or remove the cleaning rule identity that corresponds to the displayed name of the cleaning rule to or from the cleaning rule set. In an embodiment, cleaning rule set  also includes a tab entitled \u201cUsers.\u201d According to the embodiment, an administrator can \u201cclick\u201d on the tab entitled \u201cUsers\u201d and can configure a list of users that is transmitted to the user cleaning module, so that the user cleaning module can apply one or more cleaning rules for only the users of the computer in the list of users, rather than for the entire computer.","In accordance with the embodiment, the user interface can also display computer summary . Computer summary  represents a summary of a computer selected in the user interface. If the administrator cleaning module has previously transmitted an instruction to a user cleaning module that is deployed on the computer to analyze at least one of one or more files, and one or more registry entries, computer summary  displays information regarding the one or more items identified for removal, where the items can include one or more files, one or more registry entries, or a combination of the two. If the administrator cleaning module has previously transmitted an instruction to a user cleaning module that is deployed on the computer to clean at least one of one or more files, and one or more registry entries, computer summary  displays information regarding the items cleaned, where the items can include one or more files, one or more registry entries, or a combination of the two.","According to the embodiment, to transmit an instruction to analyze at least one of one or more files, and one or more registry entries, to a user cleaning module that is deployed on the computer selected in the user interface, an administrator can \u201cclick\u201d analyze button . To transmit an instruction to clean at least one of one or more files, and one or more registry entries, to the user cleaning module that is deployed on the computer selected in the user interface, the administrator can \u201cclick\u201d clean button .",{"@attributes":{"id":"p-0168","num":"0167"},"figref":["FIG. 15","FIG. 15"]},"According to the embodiment, the user interface can display cleaning rule set . Cleaning rule set  is identical to cleaning rule set  illustrated in .","In accordance with the embodiment, the user interface can also display group summary . Group summary  represents a summary of the computers associated with a group selected in the user interface. If the administrator cleaning module has previously transmitted an instruction to a user cleaning module that is deployed on the computers of the group to analyze at least one of one or more files, and one or more registry entries, group summary  displays information regarding the items identified for removal, for each computer of the group, where the items can include one or more files, one or more registry entries, or a combination of the two. If the administrator cleaning module has previously transmitted an instruction to a user cleaning module that is deployed on the computers of the group to clean at least one of one or more files, and one or more registry entries, group summary  displays information regarding the items cleaned, for each computer of the group, where the items can include one or more files, one or more registry entries, or a combination of the two.","According to the embodiment, to transmit an instruction to analyze at least one of one or more files, and one or more registry entries, to a user cleaning module that is deployed on all the computers associated with the group selected in the user interface, an administrator can \u201cclick\u201d analyze button . To transmit an instruction to clean at least one of one or more files, and one or more registry entries, to the user cleaning module that is deployed on all the computers associated with the group selected in the user interface, the administrator can \u201cclick\u201d clean button .","According to an embodiment, an administrator can remotely deploy a cleaning application to one or more computers over a network from a central location. Furthermore, the administrator can execute the cleaning application as necessary on some or all the computers, and can update the cleaning application from a central location. Finally, an administrator can organize the computers into one or more groups, and can execute the cleaning application with a different rule set for each group, or each computer within a group.","One having ordinary skill in the art will readily understand that the invention as discussed above may be practiced with steps in a different order, and\/or with hardware elements in configurations which are different than those which are disclosed. Therefore, although the invention has been described based upon these preferred embodiments, it would be apparent to those of skill in the art that certain modifications, variations, and alternative constructions would be apparent, while remaining within the spirit and scope of the invention. In order to determine the metes and bounds of the invention, therefore, reference should be made to the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Further embodiments, details, advantages, and modifications of the present invention will become apparent from the following detailed description of the preferred embodiments, which is to be taken in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 15"}]},"DETDESC":[{},{}]}
