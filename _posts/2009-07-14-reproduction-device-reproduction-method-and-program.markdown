---
title: Reproduction device, reproduction method, and program
abstract: A problem with high resource-consuming managed copy is that simultaneous execution of the managed copy, which is controlled by a playback device, and a BD-J application, which is recorded on a recording medium, leads to a shortage in resources. Provided is a playback device that enables simultaneous execution of the managed copy and the BD-J application while preventing resource contention therebetween, by imposing an access limitation on the disc medium by causing the BD-J application to assume that the disc medium has been virtually ejected.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08649653&OS=08649653&RS=08649653
owner: Panasonic Corporation
number: 08649653
owner_city: Osaka
owner_country: JP
publication_date: 20090714
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND ART","CITATION LIST","Patent Literature","SUMMARY OF INVENTION","Technical Problem","Solution to Problem","Advantageous Effects of Invention","DESCRIPTION OF EMBODIMENTS","First Embodiment","Second Embodiment","Supplement to First Embodiment","Other Modifications","INDUSTRIAL APPLICABILITY","REFERENCE SIGNS LIST"],"p":["The present invention relates to a playback device for playing back video data recorded on a recording medium, such as a BD-ROM (Blu-ray Disc Read Only Memory), and in particular to a technology (managed copy) for copying the video data recorded on the recording medium to another recording medium.","Managed copy refers to a technology for allowing copying of a digital stream and an application program (referred to below as an \u201capplication\u201d) recorded in a read-only recording medium, such as a BD-ROM, to another readable and writable recording medium only if the copying is authorized and permitted through communication with a server in advance, rather than allowing it without limitation. Specific examples of the readable and writable recording medium include an optical disc (e.g. BD-R, BD-RE, DVD-R, DVD-RW, and DVD-RAM), a hard disk, and a removable medium (e.g. SD memory card, memory stick, Compact Flash\u2122, smart media, and multimedia card). The technology enables copy control to restrict the number of times for which the backup is made or permitting only the backup charged, for example. The technology, therefore, relaxes strict prohibition on making the backup of the BD-ROM and allows the backup to be executed under management. This improves convenience in the BD-ROM viewing.","The following Patent Literature describes a conventional technology relating to the managed copy.","[Patent Literature 1]\n\n","If leaving the management of managed copy entirely to the control of a playback device, the content distributor loses a way to offer its unique management. In this case, the distributor cannot implement features for adopting its unique accounting method and for making use of the time spent for the copy, for example by, inserting an advertisement during the copy, and operating a simple game application during the copy time so that a user does not get bored. However, since the managed copy consumes a lot of resources, if an application stored on a recording medium device is executed simultaneously with the managed copy by the playback, resources might run out. For example, a backup from a BD-ROM to a DVD-R requires recompressing and encrypting of the digital stream, in addition to data reading from the BD-ROM and data writing into the DVD-R. Executing the application during the backup entails a variety of problems, such as a shortage in a memory, collision between simultaneous data reading from the BD-ROM, and collision between simultaneous playback and recompression of the digital stream. If an application is executed during the managed copy, and the copy fails due to the shortage in resources, it causes a serious trouble to the user who has been already charged for the managed copy.","As a way to prevent the stated contentions, an idea has been suggested that the operations of all applications should be terminated while the managed copy is executed. However, the termination of all the applications in operation for the purpose of avoiding the resource contention between the managed copy brings about another problem. That is to say, any application cannot perform processes related to the managed copy other than copying, such as charging and progress display. In this case, a resident program of the playback device needs to perform those processes instead. However, since accounting (i.e. clearance) methods often differ between one content distributor to another, the manufacturer of the playback device needs to support various clearance methods specified by different distributors so that any charging processing for the managed copy may be performed. Supporting the various clearance methods for different distributors significantly increases loads of the manufacturer of the playback device, resulting in little possibility of the managed copy being adopted in home appliances.","The present invention is conceived in view of the above problems, and it is an object of the present invention to provide a playback device which is capable of executing the managed copy and application(s) simultaneously, while also preventing the resource contention caused by the executed managed copy and application(s).","In order to solve the above problems, one aspect of the present invention is a playback device that performs playback control and copy control on a first recording medium and a second recording medium while executing an application, the device comprising: a platform on which the application is executed; and a playback unit, wherein the playback control is processing to read data from the first recording medium and supply the read data to the playback unit, in response to a playback request issued by the application through an I\/O module in the platform, the copy control is processing to read data from the first recording medium, and write the read data into the second recording medium without passing through the I\/O module, and during the copy control, the I\/O module rejects a request from the application.","Under the copy control, the I\/O module within the platform rejects a playback command from the application. As a result, playback is prohibited even if a playback request is made by the application during the managed copy. This prevents resource contention between pickup control, encoder, and decoder which are utilized in reading, compression, and decoding of a digital stream, respectively.","Furthermore, not all the applications in operation are terminated while the managed copy is executed. Due to this, a user interface engaged in the copy operation may be controlled, for example by using an API that is available for an application in operation.","Accordingly, a PR\/advertisement may be displayed during the copy. Further, it is not necessary for the player to have a user interface for the managed copy. This reduces an implementation cost in the playback device. Furthermore, in the managed copy, communication with the server is completed solely by individual applications. Accordingly, no limitation is imposed to the production studio of the content, in terms of type of a protocol that is used in the communication. The flexibility in choosing the communication protocol enables the studio to adopt its unique protocol to perform the clearance for the managed copy. Moreover, there is no need for the playback device to implement a communication module peculiar to the resident program in order to communicate with the server. This reduces an implementation cost.","Besides, by adopting the present invention, the content provider is able to permit users to copy the BD-ROM and collect a charge for the copy via the network. In the charge collection, the content provider can adopt its own clearance method. Accordingly, it is easy to deploy a business model where the content provider develops a primary profit by distributing movie works on BD-ROMs and then develops a secondary profit by permitting users to copy the BD-ROMs. This provides a new business chance to the content provider.","Furthermore, although optional, during data reading from the first recording medium and data writing into the second recording medium by the copy control unit, it is preferable that the I\/O module and the medium playback module are in a rejecting state of rejecting a request from the application, and the application performs the processing that is executable without using the first recording medium. Once the I\/O module and the medium playback module make transitions to an accepting state of accepting a request from the application, it is preferable that the application performs processing that is executable using the first recording medium.","Even if the application requests an access to the data on the BD-ROM during the managed copy, the BD-ROM as the first recording medium is assumed to have been virtually ejected. Since the data to be accessed is assumed to be missing even when the data is actually present, the access is made to fail. As a result, the collision in the BD-ROM reading is prevented.","Furthermore, although optional, it is preferable that, if the data reading from the first recording medium or the data writing into the second recording medium has failed, the notification unit notifies the application registered by the registration API that the copy control by the copy control unit has failed.","In this case, when the copy fails, for example because the medium has been forcedly ejected during the copy, the application is able to receive a copy failure notification. Accordingly, the copy failure can be addressed, for example by canceling a charge imposed prior to the copy.","Furthermore, although optional, it is preferable that the playback device further comprises a progress management unit, and wherein the progress management unit notifies the application of a size of data that has been written to the second recording medium and a size of data that remains to be written, in response to a call for a size notification API made by an application.","Since assuming the disc to have been virtually ejected, the application is not able to access the data on the BD-ROM. However, the application is able to recognize the start\/end and progress of the copy. Accordingly, during the copy, it is possible to display a progress bar indicating the progress, a remaining time, or a PR\/advertisement, or execute a game application.","Embodiments of the present invention are described below with reference to the drawings.","To begin with, a description is given of a usage pattern among implementation patterns of a playback device according to the present invention.  shows an example of the usage pattern of the playback device according to the present invention. In , the playback device according to the present invention is shown as a playback device . The playback device  is used to supply a movie to a home theater system composed of a remote control  and a TV , for example. The playback device  is provided with an insertion slot to which a removable medium , such as SD memory card, memory stick, Compact Flash\u2122, smart media, and multimedia card, is inserted, and another insertion slot to which an external BD drive  is inserted.","This concludes the description on the use pattern of the playback device according to the present invention. A description is next given of the recording medium which is to be played back by the playback device according to the present invention. In this example, it is an optical disc, namely a BD-ROM , that is played back by the playback device according to the present invention.",{"@attributes":{"id":"p-0049","num":"0049"},"figref":"FIG. 2"},"The logical address space stores application data, such as video data, starting from file system (volume) information. The file system is UDF or ISO9660, for example. Like an ordinary PC, the logical data recorded on the logical address space may be read with use of a directory\/file structure as identified with a directory\/file name in 255 letters at most.","In the directory\/file structure on the BD-ROM disc in the present embodiment, a BDMV directory and a CERTIFICATE directory are located immediately below a ROOT directory. The BDMV directory stores data, such as an AV content and management information, that is handled on the BD-ROM. The CERTIFICATE directory stores certificate information that is used for the purpose of signature verification of an application.","Under the BDMV directory, the following five sub-directories exist: a PLAYLIST directory; a CLIPINF directory; a STREAM directory; a BDJO directory; and a JAR directory. Two types of files of index.bdmv and MovieObject.bdmv are located in the BDMV directory.","The STREAM directory stores a file that forms the so-called body of a digital stream and is appended with the file extension M2TS (i.e. xxx.m2ts, where \u201cxxx\u201d is variable whereas the extension \u201cm2ts\u201d is fixed). In the PLAYLIST directory is a file appended with the file extension mpls (i.e. xxx.mpls, where \u201cxxx\u201d is variable whereas the extension \u201cmpls\u201d is fixed). In the CLIPINF directory is a file appended with the file extension clpi (i.e. xxx. clpi, where \u201cxxx\u201d is variable whereas the extension \u201cclpi\u201d is fixed). In the JAR directory is a file appended with the file extension jar (i.e. xxx.jar, where \u201cxxx\u201d is variable whereas the extension \u201cjar\u201d is fixed). In the BDJO directory is a file appended with the file extension bdjo (i.e. xxx.bdjo, where \u201cxxx\u201d is variable whereas the extension \u201cbdjo\u201d is fixed).","The file with the extension \u201cm2ts\u201d stores a digital AV stream in the MPEG-TS (Transport Stream) format which is obtained by multiplexing a video stream, at least one audio stream, and at least one sub-video stream. The video stream refers to a video part of the movie, the audio stream refers to an audio part of the movie, and the sub-stream refers to a subtitle of the movie.","The file with the extension \u201cclpi\u201d stores clip (Clip) information assigned to a digital AV stream file on a one-to-one basis. The Clip information as management information has information indicating the encoding method, frame rate, bit rate, resolution, and others of the corresponding digital AV stream, as well as EP_map indicating starting positions of GOPs in the stream.","The file with the extension \u201cmpls\u201d stores playlist (PlayList) information that includes information of playback segments (\u201cIn Time\/Out Time\u201d) with respect to streams.","The file with the extension \u201cjar\u201d is a Java\u2122 archive file. In the file, a program of the Java application for performing dynamic scenario control using the Java virtual machine is described. This file is necessary if it is demended to control the playback of each Title, namely a unit of playback, of a content on the BD-ROM by the Java application.","The file with the extension \u201cbdjo\u201d stores a BD-J object. The BD-J object is information that defines a Title according to a relation between an application and an AV stream indicated by the PlayList information. The BD-J object represents an \u201capplication management table\u201d and a list of PlayLists that can be played back in the Title. The application management table indicates the application whose life cycle is bound by the Title, by showing the identifier of the application (application ID) and a list of the IDs of the Java archive files that belong to the application. That is to say, one application is constituted by one or more Java archive files.","The index.bdmv (fixed file name) stores management information with respect to the BD-ROM as a whole. The index.bdmv includes information, such as an organization ID (32 bits) that is an identifier of the provider of the movie work and a disc ID (128 bits) that is an identifier uniquely assigned to the BD-ROM provided by the provider. After a BD-ROM is inserted into the playback device, the index.bdmv is read first so that the disc is uniquely recognized by the playback device. Besides, the index.bdmv includes a table indicating a plurality of Titles playable in the BD-ROM and BD-J Objects defining the playable Titles, in one-to-one correspondence.","The MovieObject.bdmv (fixed file name) stores a scenario program describing a scenario that is used to dynamically change the progress of the playback of each Title when it is played back in the HDMV mode (which will be described later).",{"@attributes":{"id":"p-0061","num":"0061"},"figref":["FIG. 3","FIG. 3"]},"The second layer is a layer of the AV stream. The second layer defines the type of a decoding method used to decode the stream supplied by the first layer.","The third layer (BD management data) defines a static scenario of the stream. The static scenario is the playback path information and the stream management information, both of which is preliminarily defined by the disc author. The third layer defines a playback control based these information.","The fourth layer (BD playback program) is a layer that defines a dynamic scenario of the stream. The dynamic scenario is a program which performs at least one of a procedure for playing back the AV stream and a procedure for controlling the playback. The playback control by the dynamic scenario varies depending on the user operation made onto the device, and has the nature of a program. The dynamic playback control herein has two modes. One is an HDMV mode in which the video data recorded on the BD-ROM is played back in a playback environment peculiar to the AV apparatus. The other is a BD-J mode in which the video data recorded on the BD-ROM is played back while creating added value in the video data. In , the two modes of the HDMV mode and the BD-J mode are shown in the fourth layer. In the HDMV mode, which is a DVD-like playback environment, the playback is performed by operating the scenario program in which a scenario for dynamically varying the progress of the playback is described. In the BD-J mode, which is a playback mode operated by the Java virtual machine, the playback is controlled by a Java application.",{"@attributes":{"id":"p-0065","num":"0065"},"figref":["FIG. 4","FIG. 4A"]},{"@attributes":{"id":"p-0066","num":"0066"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0067","num":"0067"},"figref":["FIG. 5","FIG. 5"],"b":["401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","104","106"]},"The BD drive  loads\/ejects the BD-ROM onto and from the playback device, and accesses the BD-ROM.","The read control unit  controls the reading of data stored on the BD-ROM  loaded in the BD-ROM drive , the BD-R\/RE loaded in the recordable-type BD drive , the local storage , and the removable medium .","The demultiplexer  demultiplexes the multiplexed transport stream read by the read control unit  to obtain video frames and audio frames which compose GOPs. The demultiplexer  then outputs the video frames to the video decoder  and outputs the audio frames to the audio decoder . The sub-video stream is stored in the image memory , while navigation button (Navigation Button) information is stored in the dynamic scenario memory . The multiplexing of the demultiplexer  also includes conversion processing for converting TS packets into PES packets.","The video decoder  decodes the video frames output from the demultiplexer  to write the resultant uncompressed picture into the video plane .","The video plane  is a memory for storing the uncompressed picture.","The audio decoder  decodes the audio frames output from the demultiplexer  to output uncompressed data.","The image memory  is a buffer for storing the sub-video stream read by the demultiplexer , the PNG data included in the Navigation Button information, and an image file that has been directly read by the read control unit .","The image plane  is a memory with a memory space of a screen size. In the image plane , the developed sub-video stream, PNG data, and image file are located.","The image decoder  develops the sub-video stream, PNG data, and image file stored in the image memory  and then writes the developed sub-video stream, PNG data, and image file to the image plane . As a result of the decoding of the sub-video stream, various menu items and sub-videos are presented on the screen.","The adder  synthesizes the uncompressed picture data stored in the picture plane  and the images developed in the image plane  and outputs the synthesized image data. The scene shown in  (i.e. the scene in which the CG, namely the owl animation in the figure, is moving about by the screen on which the video is being displayed) is output by an image in the image plane  and a picture in the video plane  being synthesized by the adder .","The static scenario memory  is a memory for storing a current PlayList and current stream management information. The current PlayList refers to one of the PlayLists recorded on the BD-ROM that is currently processed. The current stream management information is one of the stream management information pieces recorded on the BD-ROM that is currently processed.","The dynamic scenario memory  is a memory that stores the current dynamic scenario that is to be processed by the HDMV module  and the BD-J module . The current dynamic scenario is one of the scenarios recorded on the BD-ROM that is currently processed.","The HDMV module  is the DVD virtual player that functions as the fundamental component of the HDMV mode operation. The HDMV module  executes the current scenario program read out to the dynamic scenario memory .","The BD-J module  is a Java platform and is composed of a Java virtual machine, configuration, and profile. The BD-J module  generates a current Java object from a Java class file read out to the dynamic scenario memory , and executes the generated current Java object. The Java virtual machine converts a Java object written in the Java language into the native code for the CPU of the playback device and causes the CPU to execute the object.","The UO detection module  detects a user operation made onto a remote control, a front panel of the playback device, and such, and notifies the mode management module  of information (referred to below as a UO or User Operation) indicating the detected user operation.","The mode management module  holds a mode management table which has been read from the BD-ROM and performs mode management and branch control. The mode management by the mode management module  is an assignment to a module, namely, assigning the execution of the dynamic scenario to the HDMV module  or the BD-J module .","The dispatcher  selects one or more UOs appropriate for the current mode of the playback device among a plurality of UOs, and passes the selected UOs to the module that supports the current mode. For example, upon receiving UOs, such as upward, downward, leftward, and rightward, and activate operations, during the execution of the HDMV mode, the dispatcher  outputs these UOs to the module that supports the HDMV mode.","The rendering engine  has basic software, such as Java 2D and OPEN-GL. The rendering engine  renders computer graphics in accordance with instructions from the BD-J module  and outputs the rendered computer graphics to the image plane .","The write control unit  writes data into one of the media loaded in the recordable-type BD drive , the local storage , and the removable medium , in accordance with instructions from the managed copy control unit .","The AV playback library  performs functions of playing back the AV and playing back the PlayList, in accordance with a function call from the HDMV module  and BD-J module . The AV playback function is a series of functionality taken on from DVD and CD players. Examples of the function includes playback start, playback stop, pause, release of pause, release of a still picture function, fast forward with the playback rate specified by an immediate value, rewind with the playback rate specified by an immediate value, switching of audio, switching of sub-videos, and switching of angles. The PlayList playback function is to perform the playback start and stop processing in accordance with the PlayList information, among the above-described AV playback functions.","The network interface  is used for connecting to the server in order to perform authentication of the managed copy. As for the authentication protocol, the protocol designated by the Java application executed by the BD-J module is used.","The local storage , the removable medium , and the recordable-type BD drive  are used for copy destinations to which the managed copy is made. The user selects one copy destination medium from among the media supported as the copy destinations of the managed copy.","The managed copy control unit  copies the data on the BD-ROM, in response to instructions from the Java application executed by the BD-J module. Depending on the selected copy destination medium, the managed copy control unit  also re-encodes the stream. For example, if the copy destination medium is the BD-R, then the managed copy control unit  performs a bit by bit copy, whereas if the copy destination medium is a medium with a small capacity, such as a DVD-R, then the managed copy control unit  re-encodes the stream to copy the data while compressing the stream.","This concludes the description of the constituent components of the playback device.",{"@attributes":{"id":"p-0092","num":"0092"},"figref":"FIG. 6","b":["423","423","601","602","603","604","605","606","607","608"]},"The serial number read unit  reads the PMSN (Pre-recorded Media Serial Number) indicating the physical serial number of the recording medium from the BCA (Burst Cutting Area) which is a special area provided on the BD-ROM. The serial number is used in generating the later-described key information.","The medium ID read unit  reads medium-specific information (medium ID) that is stored in each copy destination medium as the information uniquely provided for the medium. Generally, it is not possible to rewrite the information value, and even media of the same type are assigned with different values on a medium basis. The medium ID is also used in generating the key information.","The medium state management unit  manages a list of types of medium that are currently available for the playback device to use as the copy destination. For example, if the playback device has an SD card slot and a recordable-type BD drive, and only an SD card is currently inserted, then the medium state management unit  determines that the SD card is the current copy destination. If both the SD card and the BD-R are inserted, then the medium state management unit  determines that both the SD card and BD-R can be selected as the current copy destination. Besides, the medium state management unit  manages the free space of the copy destination medium.","The copy execution unit  performs copy of the data recorded on the BD-ROM to another medium. Depending on the copy destination medium, the copy execution unit  also re-encodes the stream.","The copy state notification unit  manages state transitions of the copy processing, such as the start, normal termination, and error, and notifies the Java application of the state transitions via the BD-J module.","The copy progress management unit  manages the byte count of data that remains to be copied as well as the byte count of data that has been copied, and notifies the current progress information in response to a request from the Java application.","The Nonce generation\/write unit  generates and writes a value (Nonce) that is generated randomly everytime the managed copy is performed. The Nonce value is also used in generating the later-described key information.","The key information write unit  writes the serial number of the BD-ROM, the ID of the copy destination medium, and the key information generated from the Nonce. The generation of the key information is based on a secret key located on the server. After acquiring the serial number, the medium ID, and the Nonce, the Java application sends these values to the server. The server generates the key information based on the values received from the Java application and the secret key managed on the server and sends the generated key information back to the Java application. The Java application sets the key information received from the server into the key information write unit . The key information write unit  writes the set key information to the copy destination medium. The key information is used in decoding the encrypted content key. If the encrypted content key is decoded successfully, the protected content may be played back. In other words, without the key information, the protected content cannot be played back even if the encrypted content key and the protected content are copied from the BD-ROM without authorization.","The managed copy control unit has the above-described structures. Managed copy control APIs are provided to the BD-J module so as to control the above processes of the managed copy control unit through the Java application. The following is the description of the APIs.","ManagedCopy_getPMSN( )","By calling this API, the serial number of a copy source medium from which copy is made is returned.","ManagedCopy_getMCMediaInfo( )","By calling this API, a list of media is returned that are (i) supported by the playback device as the copy destination and (ii) currently available for use as the copy destination since the media are inserted.","ManagedCopy_startMC(MCMediaInfo)","By calling this API, the managed copy is started to one of the media specified by a parameter.","MCMediaInfo_getMediaType( )","By calling this API with respect to each medium listed in the copy destination list obtained by calling getMCMediaInfo, the medium type (e.g. a BD-R, a BD-RE, an SD, a HDD, and a DVD-R) is returned.","MCMediaInfo_getUniqueId( )","By calling this API, the medium ID and Nonce byte sequence of the copy destination medium are returned. As soon as this API is called, the Nonce of the copy destination is generated and written. The Nonce sometimes does not exist depending on the medium type. In such a case, only the medium ID is returned.","MCMediaInfo_setSignature(byte[ ])","By calling this API, the key information to be written to the copy destination is set. Once the managed copy is started, the value set by calling this API is written to the copy destination as the key information.","MCMediaInfo_getFreeSpace( )","By calling this API, the capacity of the free space in the copy destination is returned.","MCMediaInfo_getRequiredSpace( )","By calling this API, the capacity that is required for the copy is returned.","MCMediaInfo_addMCListener(MCListener)","By calling this API, the listener for receiving a notification of the state transitions of the managed copy processing is registered. Upon every change in the state of the managed copy processing, such as the start, normal termination, and abnormal termination, the state transitions are notified to the listener registered by calling this API.","MCProgress_getMCProgress( )","By calling this API, the progress information including the byte count of data that remains to be copied and the byte count of data that has been copied is returned.",{"@attributes":{"id":"p-0122","num":"0122"},"figref":["FIG. 7","FIG. 5"],"b":["414","702","703","704","705","706"]},"The medium playback module  provides the Java application  with an API for controlling the medium playback. Once the Java application  calls the medium playback control API, the medium playback module calls a function in the AV playback library  that corresponds to the called API to control the AV playback.","The managed copy module  provides the Java application  with the above-mentioned APIs for controlling the managed copy.","The file I\/O module  processes a file access request sent from the Java application  to any of such media as the BD-ROM, the local storage, the removable medium, and the recordable-type BD drive.","The network module  provides the Java application  with an API for controlling the network. In response to a network control request from the Java application , the network module  establishes a network connection using the network interface . The Java application  is capable of accessing the server required for authentication of the managed copy, with use of the network module .","The application manager  manages the activation\/termination of the Java application based on the application management information recorded on the BD-ROM. The application manager  also performs other processing, such as passing the UO event, which has been received by the application manager from the dispatcher , to the Java application  that is currently operated.","This concludes the description of the constituent components of the BD-J module.",{"@attributes":{"id":"p-0129","num":"0129"},"figref":["FIG. 8","FIG. 9"],"b":["101","102"]},"The Java application then checks the capacity of the free space in the selected copy destination medium (S), and if it is checked that there is enough free space for the copy, performs a charging processing procedure (S). The charging processing procedure herein refers to a series of processes for connecting to the server and performing authentication of, for example, a credit card number. This step may be skipped if the charging is not particularly required. Also, merely the copy count may be checked instead of the charging.","If the charging processing ends successfully, the Java application acquires element data for the key information (S). The element data for the key information indicates the following two items. One is the serial number of the copy source medium. The other is the medium ID and the Nonce of the copy destination medium. The serial number of the copy source medium may be obtained through ManagedCopy_getPMSN( ), and the medium ID and the Nonce of the copy destination may be obtained through medium MCMediaInfo_getUniqueId( ).","Once the acquisition of the element data for the key information is completed, the Java application sends the acquired element data to the server. The server generates the key information using the received element data and the secret key held by the server, and sends the generated key information back to the Java application. The Java application sets the received key information to the playback device as the parameter of MCMediaInfo_setSignature(byte[ ]) (S).","Once the setting of the key information is completed, calling the API of ManagedCopy_startMC(MCMediaInfo) starts the managed copy. While the managed copy is performed, the Java application is able to recognize the progress of the copy by calling MCProgress_getMCProgress( ).  shows an example in which the progress of the copy is displayed on the screen. Since the Java application is able to recognize the byte count of data that remains to be copied and the byte count of data that has been copied, it is possible to roughly determine the remaining copy time from the byte count. Further, by calling MCMediaInfo_addMCListener(MCListener) to register the listener for receiving a notification of the state transitions of the managed copy processing, the Java application is able to receive the notification of copy start\/end. By this means, the Java application is able to display a progress bar or an advertisement of a new movie until the notification of copy end is received. Instead of the display, a simple game application may also be executed. Moreover, the notification is also received in the case where the copy fails. Accordingly, even if the copy fails due to a forced ejection of the medium and the like, the Java application is able to receive the notification of copy failure and then cope with the situation by canceling the charging processing, for example.",{"@attributes":{"id":"p-0134","num":"0134"},"figref":"FIG. 11","b":["702","704","702","704"]},{"@attributes":{"id":"p-0135","num":"0135"},"figref":["FIG. 13","FIG. 8"],"b":["107","201","202","201","204","205","203"]},"As mentioned above, the present embodiment makes it possible to execute the managed copy and the Java application simultaneously while preventing the resource contention. This also makes it possible to display the progress of the managed copy, display a PR\/advertisement, and execute a game application and such during the copy.","The second embodiment describes the managed copy that is made on a removable medium with a limitation with respect to the recordable file names. Files recorded on a BD-ROM adopt the Long File Name (LFN) format. Accordingly, file names of ten and twenty characters, and file names with extensions of four and five characters may be used on the BD-ROM. On the other hand, removable media often utilize a file system in which a file name length is limited to eight characters at most, a directory name length is limited to eight characters at most, and an extension length is limited to three characters at most. For this reason, some file names recorded on the BD-ROM cannot be copied as-is to the removable medium.",{"@attributes":{"id":"p-0138","num":"0138"},"figref":["FIG. 14","FIG. 15"]},"Before the playback of a removable medium, presence of the file name conversion table is determined. If it is determined that the file name conversion table is stored, and an access to one of the unconverted file names listed in the file name conversion table is detected, the read control unit  replaces the original file name with the corresponding converted file name in order to access to the file on the removable medium.","As mentioned above, the file names converted in the managed copy processing are stored in the file name conversion table, and the virtual file accesses is made using the unconverted file names with reference to the file name conversion table at the time of the playback. By these means, the files that have been copied through the managed copy to the recording medium having the file name limitation may be played back without any problem.","A description is given below in order to supplement each constituent component included in the playback device described in the first embodiment. The playback device according to the first embodiment is capable of copying and thus so-called a recording\/playback device.","It is general that installed (i.e. not portable) playback devices have a recording function, along with a playback function. With the recording function, the playback device is able to convert data and encoding formats (these conversions are called transcoding) to execute the managed copy. The following describes a configuration example in which the recording\/playback device is additionally provide with some constituent components for the transcoding.",{"@attributes":{"id":"p-0143","num":"0143"},"figref":"FIG. 16","b":["501","502","503","504","505"]},"The term transcoding mentioned above refers to processing for adjusting digital streams to an application format used in the copy destination medium. The adjustment is performed, for example, by converting the format of the digital streams recorded on the BD-ROM from an MPEG-2 transport stream format to an MPEG-2 program stream format, or by re-encoding the video and audio streams after lowering the bit rates allocated for the streams.","A path tc is used to make a bit by bit copy for copying the bit streams recorded on the BD-ROM to another recording medium while maintaining the bit pattern. Through the path tc, a video stream read by the read control unit  is input directly to the write control unit .","A path tc is used to re-multiplex the video and audio streams that have been multiplexed and stored on the BD-ROM.","Paths tc and tc are used to re-encode the video and audio streams.","The HDMI transmission\/reception unit  transmits uncompressed video data and uncompressed audio data to the television  and receives data from the television .","The signal input unit  receives an analog signal input to the playback device .","The audio encoder  encodes the analog signal input from the signal input unit  to obtain the audio stream. In the case where the transcoding is performed, the audio encoder  re-encodes the uncompressed audio data input through the path tc.","The video encoder  encodes the analog signal input from the signal input unit  to obtain the video stream. In the case where the transcoding is performed, the video encoder  re-encodes the uncompressed video data input through the path tc.","The multiplexer  multiplexes the video stream obtained by the video encoder  and the audio stream obtained by the audio encoder  into a format suitable in the copy destination medium, such as the transport stream format and the program stream format.","This concludes the description of the internal structure of the recording\/playback device. A description is next given of a technical significance of the BD-J module.","General Structure of BD-J Module","The BD-J module is a Java platform fully provided with Java 2 Micro_Edition (J2ME), Personal Basis Profile (PBP 1.0), and Globally Executable MHP specification (GEM1.0.2) for package media targets. The BD-J module serves to start the Java application, by reading a byte code from a class file present in the Java archive files and storing the read byte code to a heap memory. The BDJ-module also converts the byte code of the Java application and the byte code of the system application to native codes so that an MPU can execute the Java application and the system application. These functions of the BD-J module are shown more clearly in .",{"@attributes":{"id":"p-0155","num":"0155"},"figref":"FIG. 17","b":["704","702"]},"In , the Java application is present in the heap memory of the BD-J module. Note that, in the BD-ROM, the operation of the Java application is defined by the application management table in the BD-J object. Since there is one BD-J object per Title, the Java application on the BD-ROM operates with the Title as the life cycle. This sort of Java application whose operation is bound by the application management table in the BD-J object is called a \u201cBD-J application\u201d. On the other hand, the Java application whose operation is terminated by switching of the Title is called a title boundary application. Furthermore, the application whose operation is always terminated by exchange of the BD-ROM is called a disc boundary application.","In the heap memory shown in the figure, BD-J applications are stored, one of which is the BD-J application (copy control BD-J application) that performs copy control using the APIs as mentioned above. The copy control BD-J application specifies the operation mode of the BD-J application, upon instructing the managed copy control unit  to control the copy. There are the following three operation modes: the first mode for terminating the current BD-J application in operation and leaving the managed copy to the control of the resident program of the playback device; the second mode for not terminating the BD-J application; and the third mode for executing the BD-J application while limiting the functions of the application, by achieving a state where a request from the executed application is rejected. In the case where the copy control BD-J application specifies the third mode upon instructing the managed copy to the copy control unit , the processing of the first embodiment is performed.","A description is given of an operation that triggers the state transition of the file I\/O module  to the state where the module  rejects a playback request from the BD-J application.","The playback device adopts Linux operation system or the like, and assigns the BDMV directory to the BD-ROM drive  by issuing the command \u201c\/mount point BD\/BDMV\u201d. By issuing the command \u201c\/mount point SD\/BUDA\u201d, the BUDA directory is assigned to the removable medium . By such a mounting operation, the read-only BD, the local storage, and the recording BD are assigned to the virtual file system to be used by the BD-J application. By executing the operation to cancel the mounting operation, that is, unmounting operation, the BD-J application is disabled to acknowledge the read-only BD, the local storage, and the recording BD through the virtual file system. Thus, the state where a request from the BD-J application is rejected is achieved.","A description is given of the operation that triggers the state transition of the medium playback module  to the state where the module  rejects the playback request from the BD-J application. The playback of the PlayList is executed by the BD-J application generating a Java Media FrameWork (JMF) player instance. This generation is performed by the medium playback module  creating the JMF player instance upon being instructed to generate the JMF player instance specifying the PlayList information file. On the other hand, in spite of an instruction to generate the JMF player instance given by the BD-J application, if the medium playback module  returns an error without generating the JMF player instance of the PlayList information file, the request from the BD-J application cannot be approved. Accordingly, if the medium playback module  is in the state of rejecting the playback request form the BD-J application, the medium playback module  does not generate the JMF player instance even when receiving the request from the BD-J application.","A description is given of the usage of MCMediaInfo_addMCListener by the file I\/O module  and the medium playback module .","In order to achieve the state transitions of the file I\/O module  and the medium playback module  to the state where the respective modules reject a request from the BD-J application at the start of the managed copy, it is necessary for the file I\/O module  and the medium playback module  to call MCMediaInfo_AddMCListener (MCListener) to register therein the listeners for receiving notifications of the state transitions of the managed copy processing. By doing so, the start of the managed copy by the managed copy control unit is notified to the respective event listeners registered in the file I\/O module  and the medium playback module . When the start of the managed copy is notified to the event listener, the file I\/O module  and the medium playback module  make the transitions to the state where the respective modules reject a request from the BD-J application. Then, upon receiving a file access request or a JMF player instance generation request from the BD-J application, the file I\/O module  and the medium playback module  return an error response to these requests. This prevents the contention between the managed copy control unit and the BD-J application for BD-ROM access or the like. On the other hand, at the time of normal termination or abnormal termination, such a termination is notified to the file I\/O module  and the medium playback module . This causes the state transitions of the I\/O module  and the medium playback module  from the above state to the normal state. In this normal state, upon receiving a file access request or a JMF player instance generation request form the BD-J application, the file I\/O module  and the medium playback module  perform processing in response to the request.","The above description provides only an implementation example of software which allows the state transitions of the file I\/O module  and the medium playback module  to the state where the respective modules reject a request from the BD-J application. The file I\/O module  and the medium playback module  themselves may also sense whether the managed copy has been performed, when receiving the disc access request or the playback request form the BD-J application. By doing so, the file I\/O module  and the medium playback module  may make the transitions to the state where the respective modules reject a request from the BD-J application.","Thus, in the state where the file I\/O module  and the medium playback module  reject the playback request from the BD-J application, the BD-J application is not able to access the read-only BD, the local storage, and the recording BD. However, the BD-J application is still able to utilize the data in a cache .","The cache  is a cache memory for storing an archive file that is specified by cache management information of the BD-J object corresponding to one current Title. The archive file stored in the cache  is effective during the time when the one Title is currently processed. The BD-J application is able to utilize a program and data included in the archive file in the cache  without accessing the BD-ROM or the local storage. This means that the BD-J application is able to utilize the data included in the archive file even if the BD-ROM is ejected.",{"@attributes":{"id":"p-0166","num":"0166"},"figref":"FIG. 18","b":["704","702","402","403","505","419","702","704","604"]},{"@attributes":{"id":"p-0167","num":"0167"},"figref":"FIG. 19","b":["702","704","704","702"]},"State Transitions of BD-J Application Over Time","During the execution of the managed copy, the medium playback module  and the file I\/O module  accept a processing request from the BD-J application. In accordance with this, the states of the title boundary application and the copy control application each go through the transitions as shown in .",{"@attributes":{"id":"p-0169","num":"0169"},"figref":"FIG. 20","b":["423","0","1","1","2","2","3"]},"This concludes the description of the state transitions of the title boundary application and the copy control application over time.","API Used for Copy Control","Since the copy control in this specification is BD-J application driven control, the BD-J application programming interfaces (APIs) must be used to describe the processing of the managed copy control unit. A description is given below of the APIs used for the copy control.",{"@attributes":{"id":"p-0172","num":"0172"},"figref":"FIG. 21"},"The arrow (-) schematically indicates the call for MCMediaInfo_getMediaType made by the BD-J application. The arrow (-) schematically indicates that the medium state control unit  notifies the medium type in response to the call.","The arrow (-) schematically indicates the call for ManagedCopy_getPMSN made by the BD-J application. The arrow (-) schematically indicates that the serial number read unit  returns the serial number in response to the call.","The arrow (-) indicates the call for MCMediaInfo_getUniqueId made by the BD-J application. The arrow (-) schematically indicates that the medium ID read unit  returns the medium ID (Media-ID) in response to the call. The arrow (-) also schematically indicates that the Nonce generation\/write unit  returns the Nonce in response to the call.","The arrow (-) schematically indicates the call for MCMediaInfo_setSignature made by the BD-J application. The arrow (-) schematically indicates that the key information write unit  writes the key information in response to the call.","The arrow (-) schematically indicates the call for ManagedCopy_startMC made by the BD-J application. The arrow (-) schematically indicates that the copy execution unit  returns the key information.","The arrow (-) schematically indicates the call for MCProgress_getMCProgress made by the BD-J application. The arrow (-) schematically indicates that the copy state notification unit  returns the byte count of data that remains to be copied, and also that the copy progress management unit  returns the byte count of data that has been copied.","This concludes the description of the API calls from the BD-J application and the corresponding processing details.","Details of Copy Execution Unit ","The managed copy in the present specification is supposed to be applied to copy between different types of media and involves transcoding. Accordingly, in the managed copy, it is not suffice to sequentially copy bit streams recorded on the copy source BD-ROM from the innermost circumference to the outermost circumference. It is necessary to copy the files and directories present on the BD-ROM one by one. The processing procedure that involves such transcoding and is performed by the copy execution unit  is shown in .",{"@attributes":{"id":"p-0181","num":"0181"},"figref":"FIG. 22","b":["604","1","604","2","2","604","702","704"]},"In step S, the copy execution unit  creates a BDMV directory on the copy destination medium. In step S, the copy execution unit  copies the index.bdmv and MovieObject into the created BDMV directory. In step S, the copy execution unit  copies the PLAYLIST directory, the BDJO directory, and the JAR directory to the copy destination medium so that they are located under the created BDMV directory. In step S, it is determined whether an instruction for the transcoding is received. Without receiving the transcoding instruction, the processing moves on to step S. In step S, the copy execution unit  copies the STREAM directory and the CLIPINF directory to the copy destination medium so that they are located under the created BDMV directory. Subsequently in step S, the copy execution unit  copies the CERTIFICATE directory located under the ROOT directory.","Upon receiving the transcoding instruction, the copy execution unit  creates a STREAM directory and a CLIPINF directory on the copy destination medium. Then in step S, the copy execution unit  transcodes the AVClip including the video stream. In step S, the copy execution unit  newly creates a Clip information file associated with the transcoded AVClip. The Clip information file is newly created in the transcoding because the Clip information file includes a lot of information determined by the stream, such as the packet numbers, the entry map indicating a relation of the stream and the presentation time stamps, and others.","In step S, the copy execution unit  writes the transcoded AVClip into the created STREAM directory and also writes the newly created Clip information file into the created CLIPINF directory. Then, the processing moves on to the step S.","In step S after the above copy processes, the copy execution unit  causes the state transitions of the medium playback module  and the file I\/O module  to the state where they accept a request from the BD-J application.","This concludes the description of the processing procedure of the copy execution unit .","Details of BD-J Application Management","In the present invention, while the copy is executed, the medium playback module  and the file I\/O module  are in the state of rejecting a request from the BD-J application, and causes the BD-J application to perform processing that is executable without using the BD-ROM. In this state, the BD-ROM is assumed to have been virtually ejected despite that the BD-ROM is actually loaded in the playback device. Accordingly, the management of the BD-J applications by the BD-J application manager according to the present invention is not conventional and is unique, as shown in . A description is given below of the processing procedure of the BD-J application manager in conjunction with .",{"@attributes":{"id":"p-0188","num":"0188"},"figref":"FIG. 23","b":["71","72"]},"In step S, it is determined whether a current Title is selected by the mode management module . If it is determined that the current Title is selected, steps S and S are performed, and the processing goes back to the loop of the steps  through S. In step S, the archive files indicated by cache management information of the BD-J object corresponding to the current Title are read into the cache. In step S, the BD-J application indicated by the BD-J application management table of the BD-J object corresponding to the current Title is loaded to the heap memory, so that the BD-J application starts.","In step S, it is determined whether the managed copy has started. If it is determined that the managed copy has started, the processing moves on to step S. In the step S, the BD-J application operates based on the assumption that the disc has been virtually ejected. In step S, the BD-J application manager waits until the managed copy is completed. Once the manage copy is completed, the processing moves on to step S. In the step S, the BD-J application returns to the normal state. Then, the processing goes back to the steps S through S.","If a disk eject (Disk Eject) event occurs in step S, then, steps S through S are performed. In the step S, the title boundary application, whose life cycle is bound by the Title, and the disc boundary application, whose life cycle is bound by the disc, are all terminated. In the step S, the BD-J application manager waits until a disc insert (Disc Insert) event occurs. Once the Disc Insert event occurs, the processing moves on to step S. In the step S, the first play Title of the inserted disc is set to be the current Title, and then, the processing moves on to the step S. As mentioned above, the flowchart shows that during the managed copy, a playback request from the BD-J application is rejected, while the BD-ROM is kept loaded in the playback device.","Descriptions of BD-J Application Using APIs","The APIs are used in the copy control performed by the BD-J application. Accordingly, like the copy control by the copy control application, the charging processing prior to the copy and the copy progress display must be performed with use of the APIs. A description is given below of the descriptions for the copy control, the charging processing, and the copy progress display.",{"@attributes":{"id":"p-0193","num":"0193"},"figref":["FIG. 24","FIG. 25A","FIG. 26"]},"In step S, the BD-J application calls ManagedCopy_getMCMediaInfo. In step S, the BD-J application acquires a list of media that can be selected as the copy destination medium. After receiving the list of media, the BD-J application calls MCMediaInfo_getMediaType for each medium on the copy destination list (step S) and acquires the type of each medium on the copy destination list (step S).","In step S, each medium on the copy destination list is displayed along with the medium type in order to prompt a user selection (step S). Upon receiving the user selection, the BD-J application determines whether the copy destination medium ID is present (step S). If it is determined that the medium ID is present, the BD-J application determines the selected copy destination medium (step S). Then, the BD-J application calls MCMediaInfo_getFreeSpace to acquire the free space available in the copy destination medium (step S). In step S, the BD-J application determines whether the acquired free space is equal to or greater than free space A. If it is determined that the acquired free space is equal to or greater than the free space A (Yes in the step S), the BD-J application calls MCMediaInfo_getRequiredSpace to acquire the capacity B that is required for the copy (step S) and compares the free space A and the required capacity B (step S). If there is not enough free space, the BD-J application calculates a compression ratio and instructs the transcoding during which the data is re-encoded (step S). In step S, the BD-J application starts the charging processing. If the charging processing is performed successfully (step S), the BD-J application starts to display a progress bar (step S). Subsequently, the BD-J application calls MCMediaInfo_getUniqueId with respect to the determined copy destination medium to acquire the medium ID and the Nonce of the copy destination medium (step S). The BD-J application also calls ManagedCopy_getPMSN to acquire the serial number of the copy source medium (step S). The serial number of the copy source medium, the medium ID, and the Nonce are transmitted to the administration server run by a provider of the copy source medium (step S). The BD-J application then waits for the key information (step S). Upon receiving the key information, the BD-J application sets the key information, by calling MCMediaInfo_setSignature while specifying the bite count of the key information as the parameter (step S). Then, by calling ManagedCopy_startMC using MC MediaInfo as the parameter, the BD-J application starts the managed copy (step S).","In step S of , MCMediaInfo_addMCListener is called, while the listener for receiving a notification of the state transitions of the managed copy processing is specified as the parameter MCListener. In step S, the charging processing is started. Subsequently, the processing moves on to a loop of steps S to S. In the step S, it is determined whether the copy has failed. If it is determined that the copy has failed, the charge is cancelled in step S. In the step S, it is determined whether the copy has been completed. If it is determined that the copy has been completed, the charging processing is confirmed.",{"@attributes":{"id":"p-0197","num":"0197"},"figref":"FIG. 25B","b":["62","64","65","64","66","67","65","68"]},{"@attributes":{"id":"p-0198","num":"0198"},"figref":["FIG. 26","FIG. 10","FIG. 10","FIG. 26"]},"Although the playback device of the present invention has been described according to the embodiments, it is naturally appreciated that the present invention is not limited to these embodiments.","The first embodiment describes the playback device having only a playback function to play back a recording medium. The present invention, however, is not limited to the embodiment. For example, the playback device may be a recording\/playback device having a recording function.","Although in the embodiments Java\u2122 is used as a programming language for the virtual machine, other programming languages, such as B-Shell, Perl Script, ECMA Script, may also be used instead of Java\u2122.","The data that is to be copied in the present invention is not limited to 2D images and may be 3D stereoscopic images.","The managed copy control unit described in the embodiments is required to perform high-load processing temporarily, since it is sometimes necessary to perform re-encoding depending on the copy destination. Accordingly, in the case where CPU performance of the playback device is not sufficient, the managed copy control unit may be incorporated in the LSI.","In the embodiment, the playback device that plays back the BD-ROM has been described. Naturally, however, a similar effect may be achieved if the required data on the BD-ROM, as described in the embodiments, is recorded on a writable optical recording medium.","A playback device of the present invention can be manufactured and distributed administratively, continuously, and repeatedly in the manufacturing industry. In particular, the device may be used in the movie and household appliance industries.",{"@attributes":{"id":"p-0206","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":{"@attributes":{"id":"ul0002-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":[{"@attributes":{"id":"ul0003-0001","num":"0206"},"b":"101"},{"@attributes":{"id":"ul0003-0002","num":"0207"},"b":"102"},{"@attributes":{"id":"ul0003-0003","num":"0208"},"b":"103"},{"@attributes":{"id":"ul0003-0004","num":"0209"},"b":"104"},{"@attributes":{"id":"ul0003-0005","num":"0210"},"b":"105"},{"@attributes":{"id":"ul0003-0006","num":"0211"},"b":"106"},{"@attributes":{"id":"ul0003-0007","num":"0212"},"b":"401"},{"@attributes":{"id":"ul0003-0008","num":"0213"},"b":"402"},{"@attributes":{"id":"ul0003-0009","num":"0214"},"b":"403"},{"@attributes":{"id":"ul0003-0010","num":"0215"},"b":"404"},{"@attributes":{"id":"ul0003-0011","num":"0216"},"b":"405"},{"@attributes":{"id":"ul0003-0012","num":"0217"},"b":"406"},{"@attributes":{"id":"ul0003-0013","num":"0218"},"b":"407"},{"@attributes":{"id":"ul0003-0014","num":"0219"},"b":"408"},{"@attributes":{"id":"ul0003-0015","num":"0220"},"b":"409"},{"@attributes":{"id":"ul0003-0016","num":"0221"},"b":"410"},{"@attributes":{"id":"ul0003-0017","num":"0222"},"b":"411"},{"@attributes":{"id":"ul0003-0018","num":"0223"},"b":"412"},{"@attributes":{"id":"ul0003-0019","num":"0224"},"b":"413"},{"@attributes":{"id":"ul0003-0020","num":"0225"},"b":"414"},{"@attributes":{"id":"ul0003-0021","num":"0226"},"b":"415"},{"@attributes":{"id":"ul0003-0022","num":"0227"},"b":"416"},{"@attributes":{"id":"ul0003-0023","num":"0228"},"b":"417"},{"@attributes":{"id":"ul0003-0024","num":"0229"},"b":"418"},{"@attributes":{"id":"ul0003-0025","num":"0230"},"b":"420"},{"@attributes":{"id":"ul0003-0026","num":"0231"},"b":"421"},{"@attributes":{"id":"ul0003-0027","num":"0232"},"b":"422"},{"@attributes":{"id":"ul0003-0028","num":"0233"},"b":"423"},{"@attributes":{"id":"ul0003-0029","num":"0234"},"b":"601"},{"@attributes":{"id":"ul0003-0030","num":"0235"},"b":"602"},{"@attributes":{"id":"ul0003-0031","num":"0236"},"b":"603"},{"@attributes":{"id":"ul0003-0032","num":"0237"},"b":"604"},{"@attributes":{"id":"ul0003-0033","num":"0238"},"b":"605"},{"@attributes":{"id":"ul0003-0034","num":"0239"},"b":"606"},{"@attributes":{"id":"ul0003-0035","num":"0240"},"b":"607"},{"@attributes":{"id":"ul0003-0036","num":"0241"},"b":"608"},{"@attributes":{"id":"ul0003-0037","num":"0242"},"b":"701"},{"@attributes":{"id":"ul0003-0038","num":"0243"},"b":"702"},{"@attributes":{"id":"ul0003-0039","num":"0244"},"b":"703"},{"@attributes":{"id":"ul0003-0040","num":"0245"},"b":"704"},{"@attributes":{"id":"ul0003-0041","num":"0246"},"b":"705"},{"@attributes":{"id":"ul0003-0042","num":"0247"},"b":"706"},"S Step of checking one or more copy destination media","S Step of selecting one copy destination medium","S Step of managing free space","S Step of performing charging processing","S Step of acquiring element data for key information","S Step of acquiring the key information","S Step of performing a copy","S Step of imposing a disc access limitation","S Step of notifying copy start","S Step of copying data","S Step of lifting the disc access limitation","S Step of notifying copy end","S Step of notifying copy failure"]}}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0020","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0023"},"figref":["FIG. 4A","FIG. 4B"]},{"@attributes":{"id":"p-0024","num":"0024"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0025"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0026"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0027","num":"0027"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0028","num":"0028"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0029","num":"0029"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0030","num":"0030"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0031","num":"0031"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0032","num":"0032"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0033","num":"0033"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0034","num":"0034"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0035","num":"0035"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0036","num":"0036"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0037","num":"0037"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0038","num":"0038"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0039","num":"0039"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0040","num":"0040"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0041","num":"0041"},"figref":"FIG. 22","b":"604"},{"@attributes":{"id":"p-0042","num":"0042"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0043","num":"0043"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0044","num":"0044"},"figref":["FIG. 25A","FIG. 25B"]},{"@attributes":{"id":"p-0045","num":"0045"},"figref":"FIG. 26"}]},"DETDESC":[{},{}]}
