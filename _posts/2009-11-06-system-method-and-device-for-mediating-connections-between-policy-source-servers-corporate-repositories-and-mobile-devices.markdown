---
title: System, method, and device for mediating connections between policy source servers, corporate repositories, and mobile devices
abstract: The invention relates to providing policy from an integrated policy server to a mobile device, comprising identifying a policy in an integrated policy server applicable to the mobile device and supplying policy elements to policy transports for transmission to the mobile device. The invention also relates to providing policy from an integrated policy server to a mobile device, including identifying a policy in the integrated policy server applicable to the mobile device, determining whether the mobile device is in compliance with the policy, and supplying policy elements to policy transports for transmission to the mobile device when the mobile device is not in compliance with the policy. The invention further relates to controlling access to a data server by a mobile device, including identifying a policy in an integrated policy server applicable to the mobile device, and determining whether the mobile device is in compliance with the policy.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08572676&OS=08572676&RS=08572676
owner: McAfee, Inc.
number: 08572676
owner_city: Santa Clara
owner_country: US
publication_date: 20091106
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","DEFINITIONS (IF APPLICABLE)"],"p":["This application claims the benefit of U.S. Provisional Application No. 61\/111,762, filed Nov. 6, 2008, and U.S. Provisional Application No. 61\/252,350, filed Oct. 16, 2009, the disclosures of which are hereby incorporated by reference in their entireties.","1. Field of the Invention","The exemplary, illustrative, technology herein relates to systems, software, and methods for implementing and managing security policies for mobile and other devices of diverse types. The technology herein has applications in the areas of mobile device and enterprise network security.","2. Description of the Related Art","Security and configuration managers manage mobile devices that are part of their network in order to maintain network security, manage use of resources, and detect or prevent misuse of such devices, but often do not have the expertise or means to understand, manage, and configure the policies on the different device types in use, using device-appropriate policy management protocols and policy servers. The plethora of such policy management protocols, policy servers, device types, and policy requirements increases the difficulty of maintaining an appropriate level of configuration control over mobile devices that may connect to a given network. Network operators can end up with a collection of separate policies, defined and managed using various policy management protocols, being served from a disparate group of policy sources, using a variety of policy servers to devices with varying capabilities for policy implementation and reporting. This can result in inadequate policy implementation and enforcement, increased costs, and inefficient use of resources as well as unacceptable risks to network security.","Policies comprise one or more policy elements that define one or more aspects of the mobile device's configuration. A policy is typically applied as a unit to a mobile device's configuration. Different device models, from the same or different manufacturers, may have differing policies that can be applied to them. Thus, the policy elements used, and their settings may vary from device to device. Policies are defined in various ways, depending on the device type they apply to, the policy server used to install them and\/or verify device compliance with them. Policies are disseminated from policy servers, which act as a source of policies for transport to the devices they apply to, using various policy management protocols. Policy management protocols comprise protocols for interaction between policy servers and devices receiving policies. These protocols can provide means not only to transfer the policy to the receiving device or devices, but also to manage policies on those devices, such as by verifying that the policy has been received by the device, verifying device compliance with the policy, removing the policy, updating the policy, or other policy-related activities. The manner in which these functions are accomplished varies from one policy management protocol to another, and the functions supported also vary.","Mobile devices can have a plurality of policies applied at any given time, or sequentially over a period of time. Policies can also be stored on some mobile devices, and activated or deactivated as required. On other mobile devices, policies cannot be stored, but are activated when set, and remain activated until a newer policy is set. Most devices incorporate a method for resetting the device to \u201cfactory default\u201d settings, which typically deactivates all policies. Multiple policies can also be active on the same mobile device simultaneously, so long as the policies do not conflict. For example, if a first policy requires e-mail to be obtained from server A, and a second policy prohibits installation of new software, there is no conflict and both policies can be active on the same device at the same time. On the other hand, if a first policy requires e-mail to be obtained from server A, and a second policy requires e-mail to be obtained from server B, there is a conflict that must be resolved.","Applying a policy to mobile devices is challenging for a variety of reasons, due to a plethora of mobile device types from various manufacturers, a plurality of management protocols developed by different mobile device vendors for setting device parameters and subsequently managing these devices, and an inconsistency between device manufacturers in the device configuration elements that are exposed on different types of mobile devices and the device configuration elements that can be managed by the possible policy management protocols supported by those devices.","Policies are provided to mobile devices using policy servers. Typically, these servers permit definition and management of policies for specific types of devices, or for a limited subset of devices that share a common policy definition. This means that a plurality of policy servers may be used to support many different types of devices. Thus, an installation might have a first policy server to manage BlackBerry\u2122 devices, a second policy server to manage Microsoft\u2122 Windows Mobile\u2122 devices, and a third policy server to manage Apple iPhones\u2122. Different policy servers may offer differing policy options and the reconciliation of these policy options and settings against an integrated security policy is tedious, time consuming, and often prone to errors. Similarly, reporting the status of device compliance using a plurality of disparate policy servers has many of the same drawbacks. Finally, different policy servers may communicate with mobile devices using their own policy management protocols, which further complicates the configuration of policies and firewalls.","Different policy management protocols may have different capabilities for setting and reporting the state of device policy elements defined within a device. This makes establishing, or determining device compliance with, security policies more difficult and error prone when a plurality of policy servers are required by use of diverse device types. For example, the Apple iPhone\u2122 Configuration Utility requires user assistance to set configuration parameters and the user retains the ability to remove restrictions imposed by the configuration settings, while Microsoft Exchange ActiveSync\u2122 can alter device settings without user assistance, and the BlackBerry\u2122 Enterprise Server can set restrictions on the device user's ability to alter settings. Often, these policy management protocols manage different portions of the mobile device's configuration and are not integrated in their settings or reporting. The policy management protocol implementations can be generalized as a \u201cpolicy transport\u201d. Policy transports sometimes embedded within a broader data stream, such were policy and data are passed between an applications server and a mobile device. Well known policy transports include, for example, Microsoft ActiveSync\u2122, BlackBerry\u2122 Policy Service (BPS), Open Mobile Alliance\u2122 (OMA) Device Management (OMA-DM), and Apple iPhone\u2122 Configuration Utility. The use of a plurality of policy transports can complicate the management of firewalls and other network security systems, and reduce their effectiveness in some scenarios due to the use of different lower level network protocols or ports by diverse policy transports. In some implementations, specialized software is required to be added to a mobile device in order to make the device interoperate with a specific policy transport. This is inefficient and adds to deployment cost and complexity.","Some policy servers display and manage per-device policy compliance status information. The nature of policy compliance reported varies from policy management protocol to policy management protocol, ranging from \u201cX policy was installed\u201d to \u201cDevice Y has a specific setting Z\u201d. To obtain a \u201cwhole enterprise\u201d view of policies and device compliance, a user must manually reconcile the policy differences, the reporting differences, and ensure that the component systems in the enterprise are properly configured.","With a plethora of disparate policies and policy transports, what is needed are techniques and systems to integrate the policies and policy transports to provide an integrated enterprise-wide policy definition, management and compliance reporting system. Integrating these components requires more than simply collecting the information from two or more disparate policy servers and supplying it over an appropriate policy transport to the device(s) that must be made compliant. The information collected must be synchronized with respect to time, device and management protocol capabilities must be taken into account, conflicting policy requirements must be resolved, device compliance must be determined and optionally corrected, and techniques must be used to ensure that compliance status is collected and reported in a common format. In addition, this must be done in a manner that is efficient with respect to bandwidth use, device resource use, and delays perceptible to device users.","Microsoft Exchange ActiveSync\u2122","Microsoft Exchange ActiveSync\u2122 (EAS) is a protocol that connects mobile devices to Microsoft\u2122 Exchange servers, allowing synchronization of e-mail and PIM (Personal Information Manager) data, such as tasks, calendars, and contacts, between Microsoft\u2122 Exchange and the mobile device as well as limited policy management of the device by Microsoft\u2122 Exchange.","Microsoft\u2122 has implemented the EAS protocol on Microsoft\u2122 Windows Mobile\u2122 devices, and has licensed the protocol to a plurality of third-parties for use with a plurality of other mobile operating systems. Licensees include owners of mobile operating systems such as, for example, Nokia Symbian S60\u2122, Sony Ericsson UIQ\u2122, and Apple iPhone\u2122, handset OEMs such as Motorola\u2122, HTC\u2122, and Samsung\u2122, and third party synchronization vendors such as DataViz\u2122. These vendors license and implement the client-side EAS Application Programming Interface (API).","The EAS protocol may include three relevant areas of processing: Handshake, Email\/PIM Synchronization, and Policy Push. These are described below.","Handshake: Although EAS allows for push email from a server, EAS depends upon the mobile device to initiate the connection to the server. It is the device's responsibility to connect (and re-connect, if a connection is lost) to the server, to create the session over which email, PIM, and policy information can be pushed. The establishment of the session involves an authentication handshake, which identifies the device user (by Active Directory\u2122 (AD) Username) and the device (by EAS Device ID and EAS Policy Key) to the Microsoft\u2122 Exchange Server, associating the session with a mailbox for the purpose of email and PIM synchronization, and with a user and an AD group for the purpose of policy push. The EAS Policy Key is used as a first stage check to prevent continued communication if the Policy Key is not provided or is not valid. The User is authenticated either by passing the user's AD password in the protocol, or by using a client or machine certificate for client-side authentication of the SSL tunnel.","Email\/PIM Synchronization: Both the device and the Microsoft\u2122 Exchange server can \u201cpush\u201d new (or changed) information to each other. For example, new email can be pushed from Microsoft\u2122 Exchange to the device. New or modified contacts, calendar entries, and other PIM information can be pushed as well. Email sent from the device is pushed to the Microsoft\u2122 Exchange Server, as well as PIM information created or changed on the device. The protocol specifies mechanisms for keeping changes synchronized between Microsoft\u2122 Exchange and (multiple) devices.","Policy: The Microsoft\u2122 Exchange Server can push policies to the device. These policies can be actions such as \u201cDevice Wipe\u201d which causes the device to clear its memory and return the device configuration to its original factory state. Other policies can specify secure operation, including the requirement that the device lock itself after a period of (user) inactivity and require from the user a password or PIN of certain complexity to unlock. The device acknowledges receipt of such policies, so Microsoft\u2122 Exchange can assume that the policy has been enforced.","BlackBerry\u2122 Enterprise Server","BlackBerry\u2122 Enterprise Server (BES) is a push-based server from Research In Motion\u2122 (RIM\u2122) that enables a secure, centrally managed link between BlackBerry\u2122 devices and an organization's enterprise systems, applications, and wireless networks. It integrates with popular content sources such as e-mail and personal information management (PIM) systems such as IBM Lotus Domino\u2122 and Microsoft\u2122 Exchange, and is designed to provide secure access to e-mail, organizer data, instant messaging, Web browser, and other enterprise applications. It provides this access by retrieving information from enterprise content sources and \u201cpushing\u201d this content to a BlackBerry\u2122 mobile device. In addition to applying policies to individual devices, administrators can create groups of mobile users, then apply policies for one or more groups. Approximately 450 different policies can be applied to individual devices or groups of BlackBerry\u2122 devices, ranging from enforcing password protection and controlling access to third party mobile applications, to controlling the use of certain device features, such as using a camera or video recording.","Some policy settings take precedence over others. For example, IT policy settings override application control policy settings. If you change an Allow Internal Connections IT policy rule to \u201cNo\u201d, and if there is an application control policy set that allows a specific application to make internal connections, the application cannot make internal connections. Device users can make application permissions more, but never less, restrictive than what the BES server specifies. Devices ignore policy elements that are associated with features that the device does not support. For example, a policy element that disables use of a camera will be ignored by a device that does not include a camera. Errors are not generated in such situations.","Open Mobile Alliance\u2122 Device Management","The Open Mobile Alliance\u2122 (OMA) Device Management (DM) specification is designed for management of small mobile devices such as mobile phones, PDAs, and palm top computers. Device management includes, for example, provisioning, configuration, software installation or upgrade, and status reporting. A device may implement all or a subset of these features. Since the OMA-DM specification is intended for use with mobile devices, it is designed with sensitivity to memory and storage space limitations, communication bandwidth constraints, and security.","OMA-DM uses Extensible Markup Language (XML) for data exchange; specifically the sub-set defined by Synchronization Markup Language (SyncML). Device management is through a client-server relationship between a server and the client device being managed. OMA-DM is designed to support and utilize a variety of connection methods, such as Universal Serial Bus (USB) or RS-232 wired connections and wireless connections, such as Global System for Mobile communications (GSM), Code Division Multiple Access (CDMA), Infrared Data Association (IrDA) or Bluetooth. Transport can involve Website Project (WSP) or (Wireless Application Protocol (WAP)), Hypertext Transfer Protocol (HTTP), OBject EXchange (OBEX) or similar transport layers. Policy settings can be transferred in OMA Device Management Files (DDF), which are XML data files of known format.","The communication protocol used by OMA-DM is a request-response protocol. Authentication and challenge of authentication are included to ensure the server and client are communicating only after proper validation. The initial message from the server to a client is in the form of a notification, or alert message. Once the communication is established between the server and client, a sequence of messages is exchanged to complete a given device management task. OMA-DM provides for alerts, which are messages that can occur out of sequence, and can be initiated by either server or client. Such alerts are used to handle errors, abnormal terminations, etc.","The protocol specifies exchange of \u201cpackages\u201d during a session. The packages consist of several messages, and the message in turn consists of one or more commands. The server initiates the commands and the client executes the commands and returns the results in a reply message. In some instances, the command includes policy elements to be set on the device. In others, the command reports aspects of the device's configuration status back to the server.","iPhone\u2122 Configuration Profiles","iPhone\u2122 Configuration profiles define one or more iPhone\u2122 settings. Configuration profiles are XML files that contain device security policies and restrictions, virtual private network (VPN) configuration information, Wi-Fi\u2122 settings, email and calendar accounts, and authentication credentials that permit devices to work with enterprise systems. Configuration profiles can be installed on devices connected via USB using the iPhone\u2122 Configuration Utility, or configuration profiles can be distributed by email or through a webpage. When users open the email attachment or download the profile using the Safari\u2122 web browser on their device, they are prompted to begin the Configuration profile installation process.","Configuration profiles are created by use of the iPhone\u2122 Configuration Utility. The iPhone\u2122 Configuration Utility enables creation, encryption and installation of configuration profiles (for devices connected via USB), among other capabilities. A configuration profile is the whole file used to configure certain settings for a device. Apple\u2122 also refers to a \u201cpayload\u201d as an individual collection of a certain type of settings, such as VPN settings, within a configuration profile. Configuration profiles can be locked such that a password is required to remove one from a device after it has been installed.","Configuration profile updates are not pushed to devices. Updated profiles must be manually installed by device users. As long as the profile identifier matches, and if signed, it has been signed by the same copy of the iPhone\u2122 Configuration Utility, the new profile replaces the profile on the device. Removing a configuration profile removes policies and all of the Exchange account's data stored on the device, as well as VPN settings, certificates, and other information, including mail messages, associated with the profile.","These and other aspects and advantages will become apparent when the description below is read in conjunction with the accompanying drawings.","The invention relates to method, system, and device for providing policy from an integrated policy server to a mobile device, the mobile device having policy compliance capabilities. The method preferably comprises receiving a data stream between a data server and the mobile device, the data stream including one or more policy transports, identifying the mobile device, identifying a policy in an integrated policy server applicable to the mobile device based on the identity of the mobile device, the policy including one or more policy elements, identifying one or more of the policy elements based on the mobile device, and supplying the identified policy elements to one or more of the policy transports for transmission to the mobile device. The device preferably comprises a policy proxy configured to carry out the steps of the above method, and the system preferably includes the data server, the integrated policy server, and the policy proxy.","The method may further include one or more of the steps of removing one or more policy elements from the data stream, translating one or more of the policy elements into a form transmittable by one or more of the policy transports, identifying a policy element to serve as a policy indicator and injecting the policy indicator into the data stream, installing the identified policy elements on the mobile device and reporting the installation of the identified policy elements on the mobile device to the integrated policy server.","The invention further relates to another method, system, and device for providing policy from an integrated policy server to a mobile device, the mobile device having policy compliance capabilities. This method preferably comprises identifying the mobile device, identifying a policy in the integrated policy server applicable to the mobile device based on the identity of the mobile device, the policy including one or more policy elements, identifying one or more of the policy elements based on the mobile device, determining whether the mobile device is in compliance with the policy based on the identified policy elements, and when the mobile device is not in compliance with the policy, assigning the identified policy elements to one or more policy transports and supplying the identified policy elements to the assigned policy transports for transmission to the mobile device. The device preferably comprises a policy proxy configured to carry out the steps of the above method, and the system preferably includes the data server, the integrated policy server, and the policy proxy.","The method may further include one or more of the steps of receiving an indicia that the policy was installed on the mobile device, reporting the installation of the identified policy elements on the mobile device to the integrated policy server, determining whether the mobile device is in compliance with the policy after receiving the indicia that the policy was installed on the mobile device, and reporting the compliance of the mobile device to the policy to the integrated policy server when the mobile device is determined to be in compliance with the policy.","The invention further relates to a method, system, and device for controlling access to a data server by a mobile device, the mobile device having policy compliance capabilities. The method preferably comprises receiving a data stream between the data server and the mobile device, identifying the mobile device, identifying a policy in an integrated policy server applicable to the mobile device based on the identity of the mobile device, and determining whether the mobile device is in compliance with the policy. The device preferably comprises a policy proxy configured to carry out the steps of the above method, and the system preferably includes the data server, the integrated policy server, and the policy proxy.","The method may further include one or more of the steps of granting the mobile device access to the data server when the mobile device is in compliance with the policy, denying the mobile device access to the data server when the mobile device is not in compliance with the policy, and, when the mobile device is not in compliance with the policy, assigning the policy elements to one or more policy transports and supplying the policy elements to the policy transports for transmission to the mobile device. Compliance with the security policy may also be determined by detecting the presence of one or more policy indicators in the mobile device, the policy indicators preferably including one or more of a digital certificate, a device configuration setting, and a policy specification. Compliance with the security policy may also be determined by determining the presence of one or more device settings and comparing one or more of the device settings to one or more of the policy elements.","The invention described herein relates to provisioning of policies using a plurality of policy sources and policy transports, and in particular, providing these policies to a plurality of mobile device types without regard to the policy transports used to transfer the policies and install them on the mobile devices.","An aspect of the invention is a system for, and methods for management of, common policy specifications comprised of sets of common policy elements, for a collection of mobile devices. More specifically, embodiments of the invention include mechanisms and techniques for specifying and transporting policy elements using one or more policy transports, installing policy elements as device settings, reporting the state of device settings associated with the policy elements, and managing common policy specifications across a set of disparate mobile devices, possibly from different manufacturers, possibly with different operating systems, simultaneously, using one or more policy transports.","The following definitions are used throughout, unless specifically indicated otherwise:",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["TERM","DEFINITION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Policy","One or more policy elements."]},{"entry":["Policy Element","Defines one or more aspects of the mobile device's"]},{"entry":[{},"configuration."]},{"entry":["Policy Server","A source of policies for transport to the devices they"]},{"entry":[{},"apply to, using various policy management protocols"]},{"entry":["Policy Transport","A policy management protocol and the policy server"]},{"entry":[{},"that implements it."]},{"entry":["Policy Management","Protocols for interaction between policy servers and"]},{"entry":["Protocol","devices receiving policies. These can provide"]},{"entry":[{},"means to transfer policies to receiving devices, to"]},{"entry":[{},"manage policies on those devices, or enable other"]},{"entry":[{},"policy-related activities"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Exemplary System Architecture",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 1","b":["1000","1100","1200","1500","1300","1100","1200","1200","1100","1300","1400","1100","1100","1300","1100","1300","1100","1200","1500","1500"]},{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 2","FIG. 2"],"b":["2000","2011","2012","2013","2014","2011","2012","2013","2014","2020","2021","2022","2030","2040","2041","2042","2043","2050","2020","2021","2022"]},"Information and\/or policy transport protocols may include, for example, EAS , BPS , OMA , and HTTP\/HTTPS or e-mail used to transport Apple\u2122 Configuration Profiles .","One or more of the policy transport protocols - are routed through a policy proxy , which comprises one or more transport protocol-specific proxy components , , , & , and a policy arbitrator . A policy proxy is sometimes referred to as a \u201cmobile services proxy\u201d. The transport protocol-specific proxy components can include, for example, an EAS proxy component , a BPS proxy component , an OMA proxy component , an iPhone\u2122 Configuration Profile proxy component , or other proxy components configured for specific policy transport protocols as may be developed by those skilled in the art. A plurality of policy proxy  instances can be used to increase throughput or to segregate transport protocol traffic. The functions of one or more transport-specific proxy components and the policy arbitrator can be integrated into a single installation, or may be divided across two or more computer systems in communication to effect the functions of the policy proxy. The policy proxy and its various components are connected using a network to one or more disparate policy servers , policy integration servers  and\/or additional information resource servers .","Disparate Policy Servers ()","Legacy disparate policy servers as described herein are those systems which provide policy and\/or report policy configuration status for a particular type of mobile device. Disparate applications servers that include policy information include, for example, Microsoft\u2122 Exchange, BlackBerry\u2122 Enterprise Server (BES), and Trust Digital\u2122 Server.","Policy Integration Server ()","A policy integration server as described herein provides the capability to define common policies and apply them to a plurality of device types. Optionally, a policy integration server can be configured to identify (either manually or automatically) one or more legacy disparate policy servers, such as BES or EAS servers, in the enterprise and communicate with them to determine the policies that the legacy disparate policy servers have been configured to deploy to mobile devices. The policy integration server can then integrate those policies and identify legacy disparate policy server policies that are at variance with one or more common policies defined for the policy integration server. This enables a common set of policies to be defined for a plurality of device types, and for legacy disparate server variations from these common policies to be identified for possible correction. In some exemplary illustrative embodiments, the common policies supersede legacy disparate server policies where these conflict with common policies. In a more specific embodiment, legacy disparate server policies are automatically updated to comply with common policy requirements.","Additional Information Resource Servers ()","Additional information resource servers  may include calendar and messaging servers, such as those provided by Microsoft\u2122 products like Sharepoint\u2122 and Exchange, calendar servers such as those provided using an industry standard protocol such as iCal\u2122 (e.g. Apple\u2122 Calendar server), and the like.","Policy Proxy ()","A policy proxy  is a component that typically operates at the enterprise network boundary and intercepts, processes, and forwards policy transport communications between mobile devices - and applications servers -. Processing performed by policy proxies  can comprise injection of common policy-derived policy elements or commands into policy transport exchanges between the enterprise applications servers - and mobile devices -. A policy proxy  can receive and\/or intercept data transport communications between mobile devices - and applications servers -. Such interception and processing can be done to determine whether a mobile device - is in compliance with required policies, to bring a mobile device - into compliance with required policies, to block mobile device - access to applications servers - when the mobile device - is not in compliance with required policies, to assure an applications server - that a mobile device is in compliance with required policies, to translate policy elements or commands into forms compatible with a mobile device - or applications server -, or for other purposes such as logging or statistical information gathering. Methods of establishing proxy components in networks, and the general functionality needed to intercept and perform processing on data streams passing through proxies is well understood by those with skill in the art. The current invention extends the known concepts of network proxies so as to provide the policy-related functionality described herein. A policy proxy  can be implemented as part of a firewall, as a stand-alone device, or as a service on a network.","The policy proxy  can function as a proxy service for one or more policy transports -, in which the policy proxy  receives data packets comprising policy transport communications from both the mobile device - and from applications servers -, deconstructs the policy transport protocol, adds\/changes\/deletes device policy elements inconsistent with the policy specifications assigned for the specific device, and inserts\/changes policy elements so as to implement the common policy for the device, and finally, reassembles the policy transport communications for delivery to the mobile device - (and subsequent installation of the policy, if desired). Policy proxies in some exemplary embodiments can also receive, process, suppress, or deliver data packets comprising protocols other than policy transport communications, such as when acting as a firewall, or to prevent communication between non-compliant mobile devices and enterprise servers.","In some exemplary embodiments, a policy proxy  can function as a policy compliance checking system, wherein the policy proxy  uses one or more policy transports - to determine whether a mobile device - is in compliance with required policies. When a mobile device - is determined to be in compliance with required policies, the policy proxy  permits communication between the mobile device - and applications servers -. When a mobile device - is determined to be out of compliance with required policies, the policy proxy  can, in some exemplary embodiments, cause the mobile device - to be brought into compliance.","In some exemplary embodiments, the policy proxy  acts as a firewall to prevent mobile device - communications from reaching applications servers - until the mobile device - has implemented the common policy assigned to it and demonstrated compliance with the common policy through interactions with the policy proxy . In such exemplary embodiments, the policy proxy  is configured to act as a policy transport, at least to the extent required to implement this functionality, for the device types supported.","In some exemplary embodiments the policy proxy  comprises one or more transport protocol-specific proxy components - useful to implement device-specific aspects of the functionality of the policy proxy .","In some exemplary embodiments, a policy proxy  can provide one or more of the following services:","Policy compliance checker for the mobile device. The policy proxy  can function as a policy compliance checker, where the current state of a mobile device's - policy compliance is determined through interaction between the policy proxy  and the mobile device - using one or more policy transports -. The results of such checks can form the basis for blocking access to applications servers -, for injecting policy elements into the mobile device - to bring it closer to compliance with required policy, or for other purposes.","Policy injector to the mobile device. The policy proxy  can function as a policy injector, where third party policy elements, such as policy elements derived from a common policy, can be injected into a policy transport communication stream - between an applications server - and a mobile device -. These injected policy elements may augment and\/or replace portions of the policy transport communication stream. In some exemplary embodiments policy elements can also be removed from policy transport communication streams. Policy injection can be done at the request of the mobile device -, as a result of a mobile device - being found to be out of compliance with required policies during a compliance check, or for other reasons, such as administrator command, periodic scheduling of such injection, or for other reasons.","Policy results interceptor. The policy proxy  can also function as a policy results interceptor, in which policy and configuration results are intercepted in transit from a mobile device to an applications server, and the stream of policy and\/or configuration results are redirected to additional and\/or alternative applications servers and\/or policy servers.","Policy results injector to the applications server. The policy proxy  can also function as a policy results injector to an applications server - by formulating responses to applications server - policy status queries or other policy transport communications and using them to respond to the applications server -. This capability can be used to satisfy an applications server - that a mobile device - is in compliance with its required policies, whether the mobile device - is actually in compliance or not, or to cause the applications server - to specify the policy it expects the mobile device - to be in compliance with. The former capability is useful when an applications server - is requiring compliance with a policy that is less strict than a common policy applicable to the mobile device -, when an applications server - is requiring a policy that is more restrictive than a common policy applicable to a mobile device -, when an applications server - is not configured to interoperate with the particular mobile device -, or for other purposes as will be apparent to those with skill in the art. The later capability is useful for enabling the policy proxy  to collect legacy policy server policy elements for integration into common policies or for other purposes.","Application firewall. The policy proxy  can function as an application-aware firewall for one or more network transport protocols -. The policy proxy  is therefore enabled to intercept all elements of the mobile device - to applications server - communication stream and mediate the operation of the network transport protocol. For example, a policy proxy  may deny communication by policy (e.g., from restricted devices, by network source, or by time-of-day). Alternatively, a policy proxy  may deny particular interactions by policy (e.g., restrict \u201ccontacts\u201d synchronization but permit e-mail synchronization). In addition, a policy proxy  may ensure that commands and data in the session are properly formed, to prevent the backend applications servers - from acting on requests that may cause unpredictable behavior.","Application information routing and mediation. Policy proxy  may function to provide rule-based synchronization of other information sources  and to provide synchronization between these sources and a mobile device - under the instruction of one or more policy-based rules. A policy proxy  can synchronize the mobile device - with third party e-mail or PIM information. For example, \u201ccontacts\u201d from a Customer Relations Management (CRM) system could be shared with specific mobile devices. Alternatively, alerts may be injected as e-mails.","The policy proxy enables mobile devices to synchronize business information (e.g. E-mail and PIM information) with a variety of additional information resource servers (e.g., Lotus Notes\u2122, Microsoft Hotmail\u2122, and Google Gmail\u2122), without specialized software on the mobile device. In one aspect, the synchronization occurs transparently without the mobile device being aware of the source and\/or destination of the information being synchronized. In a second instance, the policy proxy can combine information from a plurality of information resource servers into a single content stream for synchronization with the mobile device, and split the information stream from the device to its respective information resource servers. This is useful when the server provides the system of record with a specific type of information, for example, business contacts in the CRM system, internal company contacts in the company directory, and the like. Similar types of information handling are available for each type of PIM data, such as tasks, calendar entries, contact records, email, documents, and the like.","Policy proxies make use of rules for various aspects of their functioning, such as the rule-based synchronization described above, and the delivery rules described below. The term \u201crules\u201d, as used herein, refers to any method of describing the relationship between specific data inputs and an action or other behavior on the part of a policy proxy. For example, a rule can specify that a mobile device that possesses digital certificate A is to be permitted to access a given enterprise network, and that a mobile device that does not possess digital certificate A is not permitted to access a given enterprise network. Rules can encode a wide range of information in ways that are useful to implement such things as common policy specification translation into policy transport compatible forms, policy transport to device type compatibility, and common policy specifications. In some exemplary embodiments rules are specified in the form of XML documents, with one or more rules being described by the XML document(s). For example, a document that describes a common policy specification comprising three rules can be structured as follows:",{"@attributes":{"id":"p-0079","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<common_policy>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<min_password_len> 8 <\/min_password_len>"]},{"entry":[{},"<auto_dev_lock> yes <\/auto_dev_lock>"]},{"entry":[{},"<dev_lock_delay> 600 seconds<\/dev_lock_delay>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/common_policy>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Other exemplary embodiments specify rules using other mechanisms, such as table lookups, associative arrays, hashes, comma-delimited lists, name-value pairs, tagged data, pre-defined value sequences, or any other method as will be understood by those having skill in the art.","Returning to , the policy proxy  operates as follows when a policy has been identified for sending to a mobile device -. The policy proxy  receives the policy to be sent and an identification of the mobile device the policy is applicable to. The Policy Arbitrator  component decomposes the policy into its constituent policy elements, maps these policy elements against the policy compliance capabilities of the device, identifies applicable and available policy transports, transforms policy elements to one or more device-specific policy elements appropriate to the mobile device to ensure that all policy elements in the policy are compatible with the mobile device's policy compliance capabilities, maps the resulting policy elements against the policy elements that the applicable and available policy transports can transport to and install on the mobile device, groups policy elements by the identified policy transports, and causes the policy to be transported to the specified mobile device(s) and installed on the device(s). In some exemplary embodiments, the grouping of policy elements by the identified policy transports is done in a manner that minimizes the number of policy transports that are needed to transport the policy to the mobile device(s).","In typical usage, a mobile device - initiates a connection to an applications server - or other server  using a network transport protocol built into the mobile device -. The network transport protocol is routed through the policy proxy , which identifies the mobile device and the protocol being used. If the policy proxy  and\/or network transport protocol-specific proxy components - are acting to enforce policies related to access times, the current time is compared against the policy access time restrictions. If the policy access time restrictions prohibit access at the current time, the mobile device - is prevented from communicating with at least one of the applications servers or other server. If the policy access time restrictions do not prohibit access at the current time, the access is not blocked based on policy access time restriction. The policy proxy may still block communication for other reasons, such as non-compliance with a required policy other than access time. For example, the policy proxy may block access to one or more applications servers if it is determined that the mobile device is not in conformance with specific policies regarding its configuration.","The policy proxy operates, in conjunction with policy transport-specific proxy components - and a policy arbitrator  to identify a policy integration server  to use for common policy specification. The policy proxy communicates with this policy integration server , obtains the common policies to be enforced for a mobile device -, and then applies the policies to the mobile device.",{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIGS. 3A","FIG. 6"],"b":["3","3","3100","3103","3110","3120","3130","3135","3170","3173","3175","3173","6050","3180","3190","3200"]},"If the message is a provisioning request , but not the first message in the process , a check is made to see if it is a provisioning success response . If it is, an indicator is set in the device  to show that it is now compliant. The indicator can be a digital certificate, a special setting, or other indicator as described elsewhere herein. Once the indicator is set, the process is complete. If the message is not a provisioning success response , a \u201cProvisioning Required\u201d message is returned , and the process is complete.","If the message is not a provisioning request , a check is made to see if the device is compliant with required policy . Such a check can, in various embodiments, comprise for example requesting an indicator from the device, checking a local cached copy of an indicator (optionally with an expiration time on the cached copy), checking a flag set for a communication session by a previous indicator check, or testing a device by making a request prohibited by required policy and determining whether the request was carried out or not. If the mobile device is not compliant , a check is made to see if the device is a known device that is authorized . If the device is known and authorized, a \u201cProvisioning Required\u201d message is returned  and the process is complete. If the device is not known and authorized, an \u201cUnauthorized\u201d message is returned  and the process is complete.","If the mobile device is compliant , a check is made to see if the message is a device settings query result . If not, the policy proxy connects to the requesting server and performs the server login as if it were the mobile device making the connection . In doing so the policy proxy can use data sent by the mobile device, as is typical of proxy servers in general, and understood by those with skill in the art. If a connection with the server can not be established , the failure sequence supplied by the server as a result is passed to the mobile device  and the process is complete. If a connection with the server is established , the device settings query result message is passed to the server . A check is then made to see if there are any other messages queued to be sent to either the mobile device or the server . If there are, one is sent and removed from the queue , after which another check is made for queued messages . This process is repeated until there are no more queued messages , at which point the process is complete.","If the message is a device settings query result , the message contents are added to an accumulated results cache for this particular query . This is done because device settings queries can be requested by servers that do not make use of policy transports compatible with all devices, or may not make use of preferred policy transports. The policy proxy translates the device settings query from the server into a form compatible with the mobile device, and the preferred policy transports used with it, before sending the query to the mobile device. In some cases this can require use of a plurality of policy transports, due to the fact that not all policy transports provide access to all device settings, or for other reasons such as policy transport availability at the time of the request. Responses to these queries by the mobile device can arrive in a plurality of response messages, and these are re-assembled and translated into a form compatible with the requesting server before the results are sent to the requesting server. Once the device settings query results from the message have been added to the accumulated results cache, a check is made to see whether all results have been received for the query . If not, the process is complete. If so, the accumulated results are translated into a form compatible with the requesting server and sent to the server using the connect and send method described above . Once the results have been sent to the requesting server, the accumulated results cache for the query is cleared , and the process is complete.","If the message was not sent from a mobile device , a check is made to see if it was sent by an application or policy server . If not, an \u201cUnauthorized\u201d response is returned , and the process is complete. Checks for application or policy server origin can be performed by any method, such as lookup of network addresses, use of key exchanges, passwords or other authentication, identification of protocol in use, lookup tables, or other means. If the message is from an application or policy server , a check is made to see if the device the message is destined for is a known and authorized device . If not, an \u201cUnauthorized\u201d response is returned  and the process is complete. If so, a check is made to see if the message is from a policy server . If the message is not from a policy server, then a check is made to see if the destination device is in compliance with required policy  as described above. If the mobile device is not compliant , a \u201cProvisioning Required\u201d message is sent to the device  and the message is added to the queued messages queue for the device  and the process is complete. Once the device has been made compliant, the queued messages will be sent to it as described above at  and . If the mobile device is compliant , the message is sent to the mobile device  and the process is complete.","If the message is from a policy server , a check is made to see if the message is requesting a device wipe . If the message is requesting a device wipe , the policy proxy's policy arbitrator  translates the request into the form compatible with the particular mobile device  and selects an appropriate policy transport to send the request with , then sends the request to the mobile device , after which the process is complete.","If the message is not requesting a device wipe , a check is made to see if the message is a policy update message . If the message is a policy update message , an appropriate policy transport is selected , and a \u201cProvisioning Required\u201d message is sent to the mobile device  after which the process is complete. In some exemplary embodiments, cached indicators, session status flags or other records of the mobile device being in compliance are cleared at this point","If the message is not a policy update message , a check is made to see if it is a device settings query . If not, an \u201cInvalid Request\u201d result is returned to the sending server , and the process is complete. If it is a device settings query , the query is translated into a set of query elements  by the policy proxy's policy arbitrator  component, assigned to appropriate policy transports , and sent to the mobile device , at which point the process is complete. The processing of the mobile device's response(s) is described above.","Policy Arbitrator ()","Continuing with , the policy arbitrator  component mediates policy requirements between a mobile device - and one or more policy servers , and additionally serves to receive policies created by an policy integration server , determine the appropriate policy transport(s) - to use, optionally apply translations of policy elements to policy transport and device-specific settings, and route the policy elements to the appropriate policy proxy component -. In some instances, the policy arbitrator  determines that one or more policy elements being sent to a mobile device require the use of more than one policy transport. This can happen when a first policy element to be sent to a mobile device is not supported by each of the available policy transports and a second policy element to be sent to a mobile device is not supported by any available policy transport that also supports the first policy element. Thus, a single policy might be split so that a first set of policy elements are sent to a mobile device using a first policy transport, and a second set of policy elements are sent to the mobile device using a second policy transport.","Similarly, the policy arbitrator mediates the returned configuration values from the policy transports and returns them to the appropriate policy server(s). Thus, a policy transport might report policy elements A, B, and C. The policy arbitrator, on the basis of where the configuration results are to be processed and\/or stored, might route policy elements A and B to a first policy server, and policy element C to a second policy server.","Alternatively, the policy arbitrator may decide to route policy elements to a plurality of policy servers. In embodiments of this type, policy elements A and B might be routed to a first policy server, and policy elements A and C might be routed to a second policy server.","It is sometimes not possible to manage all of the desired policy elements using a single policy transport. In this case, the policy arbitrator  selects groups of policy elements and allocates them to different policy transports. This introduces an asynchronous aspect to policy elements, where a first set of policy elements is delivered to the mobile device by a first policy transport before or after a second set of policy elements is delivered to the mobile device by a second policy transport. In some cases, policy transports are unable to recognize policy elements handled by the other policy transports. In other cases, some policy elements can be recognized by both policy transports. In still other cases, other aspects of the mobile device can be identified and reported by one or more transports. In this last case, the policy proxy  can cause additional configuration-specific device settings or policy elements to be applied to the mobile device. These additional configuration-specific device settings are called \u201cindicator\u201d settings. The policy proxy causes a first policy transport to report upon these \u201cindicator\u201d settings as applied by a second policy transport, and treats the presence or absence of a particular indicator setting as an indication of whether the mobile device's settings associated with the second policy transport have been applied to the mobile device. In some embodiments, the indicator settings can be digital certificates.","Lastly, the policy arbitrator  may provide mapping and translation services between policy elements in policies supplied by policy servers, and the policy elements used with a particular mobile device and selected available policy transports. The mapping process between policy elements of a policy and policy elements compatible with a mobile device can involve a one-to-one mapping of the policy element to a device configuration setting, a translation of the policy element to a device specific setting (e.g. mapping the policy element value of \u201cYes\u201d to a binary value of 1 in the device setting), provide a many-to-many mapping, where one or more policy elements are mapped to one or more device settings (with optional translation of values as appropriate), and\/or the creation of additional and\/or new device configuration settings as necessary. For example, a new indicator setting may be created in the form of a digital certificate. In other implementations, policy elements may not be mapped to a device configuration setting.","Compliance Binding","In some exemplary embodiments where indicator settings comprise digital certificates, the digital certificates used to indicate compliance with the associated policy or policies can also be used for authorization to connect to an enterprise network. Network components such as VPN concentrators, firewalls, Secure Socket Layer (SSL) termination points, load balancers, or routers can require possession of a valid digital certificate before permitting a mobile device to access the network. When the compliance status of the mobile device changes, such as when a common policy is revised, the group membership of the device or device user changes, or for any other reason, the digital certificate is revoked. Such revocation of the digital certificate indicates the non-compliance of the mobile device with required policy and also prevents the device from accessing the enterprise network, possibly including any policy proxies. When the device is brought into compliance with required policy, a new digital certificate indicator setting is used to indicate compliance, and also permits access to appropriate aspects of the enterprise network.","iPhone\u2122 Policy Proxy Component","The iPhone\u2122 Policy Proxy Component intercepts the http session over which a file comprising policy elements is delivered to the mobile device, as well as any required Simple Certificate Enrollment Protocol (SCEP) session by which device certificates are delivered to the device. The iPhone\u2122 Policy Proxy Component is configured to translate policy elements from one or more policy servers into iPhone\u2122 Configuration Profile format, and then generate and optionally sign\/encrypt the Configuration Profile files in the appropriate format.","EAS Proxy Component","One embodiment of the proxy interceptor described above is an EAS proxy. EAS Proxy technology intercepts and manipulates the EAS protocol between a Microsoft\u2122 Exchange Server and a mobile device. Architecturally, the EAS Proxy is similar to an application firewall for Microsoft\u2122 Exchange. It can be deployed as a network appliance, as part of a firewall, as part of a policy proxy, as a service on an IAS server, or using other techniques well understood by those skilled in the art.","The EAS Proxy component monitors the EAS protocol between a Microsoft\u2122 Exchange Server and one or more mobile devices. In addition to monitoring, filtering, and mediating the EAS protocol, the EAS proxy can inject commands into the stream, both towards the device and towards Microsoft\u2122 Exchange, as well as extracting or replacing elements in the stream (e.g., commands or authentication information).","The EAS Proxy component, in combination with the policy proxy, allows a management system other than Microsoft\u2122 Exchange to observe, filter, and change the EAS protocol stream, as well as injecting new commands into the stream and capturing the results. This provides the enterprise with a richer device management system than Microsoft\u2122 Exchange natively provides. In some embodiments, this may be performed without adding another connection or protocol between the enterprise datacenter and the device. This reduces firewall policy changes at the enterprise, as well as overhead on the device.","The EAS proxy allows other servers, in addition to the Microsoft\u2122 Exchange Server, to participate in the EAS Handshake, Email\/PIM Synchronization, and Policy processing. Some use cases for the EAS Proxy include, for example:","Splitting Off the EAS Policy Stream: by Leaving Handshake and Email\/PIM","Integrates synchronization with the Microsoft\u2122 Exchange Server over EAS, but by splitting off policy information and redirecting it to an external policy integration server, an external Policy integration server can manage policies on the mobile device instead of the Microsoft\u2122 Exchange server. This allows the Microsoft\u2122 Exchange Server to manage and synchronize each user's mailbox with his mobile device, but allows a separate policy integration server to manage policies for each device.","Credential Translation","By intercepting and modifying the handshake process, the EAS Proxy can translate device specific credential to mailbox specific credentials, removing the device's knowledge of globally useful mailbox specific credentials. For example, credential translation allows a device to access a mailbox without storing the user's AD password on the device. This works in the following way:","The EAS client on the mobile device is provisioned with (possibly device specific) credentials that the policy integration server associates with a user.","The EAS Proxy intercepts handshaking information from within EAS headers.","The EAS Proxy queries the policy integration server, to authenticate the device associated with the captured handshaking information. The policy integration server returns the associated user information.","The EAS Proxy replaces the intercepted handshaking credentials with credentials appropriate for that user. That could be the user's actual AD username or password, or more optimally, a Kerberos ticket for that user.","A Client EAS Application Firewall","Since the client EAS will only communicate with the trusted and designated EAS URL, the EAS Proxy can function as a remote and hosted EAS Client-Side Application Firewall.","Handshake Processing","By processing EAS's handshake protocol, the EAS Proxy can enable the third-party policy manager to function without Microsoft\u2122 Exchange.","In , a specific example of a policy proxy operating to check compliance and synchronize policies to an iPhone\u2122 is displayed. The policy proxy checks and enforces compliance of all iPhone\u2122s before permitting them to enter the corporate network to access applications servers in order to ensure that ActiveSync\u2122 policies and configuration profiles remain persistent. This is enabled using indicator settings that logically bind ActiveSync\u2122 policies and iPhone\u2122 configuration profiles for compliance purposes.","The iPhone\u2122 mobile device () requests registration by providing authentication information regarding the user to the enterprise. The iPhone\u2122 () then makes an SCEP request to the enterprise, which is intercepted by the policy proxy (). The policy proxy passes this request for fulfillment to one of the policy servers (). In some embodiments, the policy server () could be an policy integration server. The SCEP request is fulfilled by sending a device certificate that uniquely identifies the iPhone\u2122 () to the network.","The iPhone\u2122 () then makes a configuration request to the enterprise using the device certificate to authenticate the device endpoint of a secured http session. The policy proxy () intercepts this request, queries the policy integration server () using the device identified by the device certificate, and receives a policy from the policy integration server in response to the request. The policy arbitrator component (not shown) translates the policy received from the policy integration server into a form that can be processed using Apple\u2122's Configuration Profiles. The policy arbitrator also generates at least one indicator policy element in the Configuration Profile. This indicator policy element is a second device certificate. Some of the policy elements are not processable using Apple\u2122 Configuration Profiles, so these policy elements are configured for sending to the iPhone\u2122 using a Microsoft\u2122 Exchange ActiveSync\u2122 policy transport. Because the integrated policy was split (by the policy arbitrator) into a plurality of independently delivered policy sets, it is necessary that an indicator policy element be used to indicate when each part of the policy has been installed on the iPhone\u2122. The policy arbitrator creates an indicator policy element for one or more policy sets delivered using policy transports that do not report their installed status (e.g. configuration profiles policy transport) on an iPhone\u2122 and causes these indicator policy elements to be transmitted to the iPhone\u2122 as part of the appropriate configuration profile (). The remaining policy elements to be transmitted to the iPhone\u2122 using the ActiveSync\u2122 policy transport protocol ().","When the policy settings are transmitted to an iPhone\u2122 () using ActiveSync\u2122 (), an ActiveSync\u2122 key is returned by the protocol to indicate that the ActiveSync\u2122 portion of the policy was installed on the device. The configuration policy is transported to, and installed by, the iPhone\u2122 (), which causes the indicator policy setting (typically, in the form of a device certificate) to be installed on the iPhone\u2122. When the policy proxy () next interrogates the iPhone\u2122 (), the device certificate provided as an indictor policy setting is provided by the iPhone\u2122. This indicates to the policy proxy () that both halves of the policy have been installed on the device. The policy proxy () then updates the device status in the policy integration server (). This updated status represents the integrated compliance status of the device.","The configuration policy mechanism of the iPhone\u2122 () operates because the iPhone\u2122 accepts configuration policy elements on an \u201call or none\u201d basis, and locks these settings into the iPhone\u2122. A user can change these settings by resetting the policy on the device, which will clear both the policy settings and the indicator policy setting. Once cleared, the indicator policy setting (a device certificate) is no longer reported to the policy proxy when the iPhone\u2122 () connects, indicating that the iPhone\u2122's policy settings are no longer set in accordance with the policy.","In some embodiments, a new copy of the policy is pushed to the iPhone\u2122 () to replace the missing policy elements. In other embodiments, the policy integration server () generates an alert that the iPhone\u2122 is no longer in compliance with policy. In still other embodiments, the iPhone\u2122 () is denied access to the applications server () (e.g. denied e-mail, calendar, or other services) when it is not in compliance with policy.","In one embodiment, the indicator setting is a device certificate that is cryptographically tied to the settings provided using the configuration profiles (). Other methods of creating an indicator policy setting are possible.","In alternate embodiments, a plurality of indicator policy settings may be used to indicate that one or more portions of a policy have been installed. For example, an iPhone\u2122 configuration profile () has several sections, one for the wireless phone network, one for WiFi settings, etc. A separate indicator policy setting may be created for the configuration policy section(s).",{"@attributes":{"id":"p-0128","num":"0127"},"figref":["FIG. 5","FIG. 4"],"b":["5010","5020","5040","5030"]},"In some implementations, policy settings established by remote servers may not be changed in part by the end user. An end user may delete the policy settings as a group (e.g. deleting policy settings A by deleting group A or by resetting the device and clearing all settings). This technique is especially effective in these implementations.",{"@attributes":{"id":"p-0130","num":"0129"},"figref":"FIG. 6","b":["6000","6110","6120","6010"]},"The policy proxy is configured with one or more policy delivery rules , which specify which configuration settings may be set and managed by each particular policy transport for each particular device type. These rules are used by the policy arbitrator  to process policy  from the integrated policy server , and to split the policy into disparate policy sets A and B ( and  respectively). These policy sets are delivered to the policy proxy components  and  respectively for further delivery to one or more mobile devices. Similar rules define how information is collected from or delivered to an applications server .","Sending Policy on Device Query","Sending policy to device on device query takes several steps, as depicted in .","1. The device requests policy and\/or enrollment information ()","2. The policy proxy identifies the device making the request (), and queries an policy integration server for an appropriate policy (). The policy proxy associates a connection with a device () by inspecting the session (either from headers within the session or from client-certification authentication of the session itself).","3. The policy is translated into a form appropriate for that device (), and is put on a queue for that device (). This preferably occurs \u201con the fly\u201d, but can occur other ways as well. The policy translation is defined by one or more policy delivery rules.","4. The policy proxy replaces protocol portions associated with policy from the applications server with the translated policy () and pushes the policy along the appropriate device's policy transport (e.g. EAS) (), and track acknowledgement of the policy from the device ().","5. The policy update status is recorded in the policy integration server ().","6. Policy processing errors may be handled at both the policy proxy (e.g., by resending the policy () if a connection broke ()) or at the policy integration server (e.g., if a device refused a policy ()).","Policy Push","Policy push from the policy integration server has several steps, as depicted in :","1. The policy integration server creates policies for a specific device (), based on device, user, group, and other information.","2. The policy is translated into a form appropriate for that device (), and is put on a queue for that device (). This may occur prior to transmission or \u201con the fly\u201d.","3. The policy proxy and its components proxies connections for multiple devices. The policy proxy associates a connection with a device () by inspecting the session (either from headers within the session or from client-certification authentication of the session itself). For each connection, the job of the policy proxy is to move policies from a device's policy queue on the policy integration server and push the policy along the appropriate device's policy transport (e.g. EAS) (), and track acknowledgement of the policy from the device ().","4. The policy is removed from the policy queue () after the device acknowledges receipt of the pushed policy, preserving the transaction nature of policy processing.","5. Policy processing errors may be handled at both the policy proxy (e.g., by resending the policy () if a connection broke ()) or at the policy integration server (e.g., if a device refused a policy ()).","6. If the policy information and\/or compliance status is to be distributed to more than one policy server, the updated policy information and\/or compliance status is distributed to each policy server on the basis of one or more policies.","Device-Side Extensions","In some additional embodiments, a client-side component can be added to provide additional functionality. While the following examples describe the functioning of an EAS proxy, the overall process is applicable to any policy server and\/or content server. As described above, the EAS Proxy lives in front of the Microsoft\u2122 Exchange Server, within the Enterprise DataCenter or remote to the Enterprise DataCenter (e.g., in a hosted implementation). A Device-side EAS Proxy is also useful. Such a proxy could live in front of the native Microsoft Exchange ActiveSync\u2122 client on the mobile device (like a client-side EAS Firewall).","This EAS client proxy processes new commands passed to the device, before they are processed by the ActiveSync\u2122 client. This allows, for example, new commands to \u201cride-the-EAS-rails\u201d between the enterprise and the device, by using the Enterprise's EAS Proxy to inject new commands into the stream, and using the device-side EAS Proxy to strip them out for independent processing on the device, leaving the native EAS client with a native stream. The device-side EAS Proxy can also inject responses into the stream. These will typically be stripped out and interpreted by the policy proxy. The device-side proxy can also be used to protect the EAS client and device, by acting as an application firewall that ensures that the EAS stream is safe for the device to interpret.","The EAS client proxy can also provide enhanced functionality for existing commands above and beyond what Microsoft's ActiveSync\u2122 provides, for example, a DOD-compliant Wipe, or GPS location-based synchronization.","Similar function can be achieved if the device's EAS client itself passes non-native EAS commands to another application on the device for processing, allowing these non-native commands to be processed after the EAS Client, instead of proxying the stream before it reaches the client. As an example, if the server-side EAS proxy injected OMA XML policies into the stream, the EAS client would pass those policies to the native operating system. When those policies were ingested, they would be enforced on the mobile device.","It should be understood that processes and techniques described herein are not inherently related to any particular apparatus and may be implemented by any suitable combination of components. Further, various types of general purpose devices may be used in accordance with the teachings described herein. It may also prove advantageous to construct specialized apparatus to perform the method steps described herein. The present invention has been described in relation to particular examples, which are intended in all respects to be illustrative rather than restrictive. Those skilled in the art will appreciate that many different combinations of hardware, software, and firmware will be suitable for practicing the present invention.","Although the present invention has been described in relation to particular embodiments thereof, many other variations and modifications and other uses will become apparent to those skilled in the art. It is preferred therefore, that the present invention be limited not by the specific disclosure herein."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention will be understood more fully from the detailed description given below and from the accompanying drawings of various embodiments of the invention, which, however, should not be taken to limit the invention to the specific embodiments, but are for explanation and understanding only.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIGS. 3A-3C"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
