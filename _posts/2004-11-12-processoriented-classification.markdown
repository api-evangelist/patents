---
title: Process-oriented classification
abstract: The present invention relates in general to a data object model for describing objects within systems. To allow unambiguous classification, the data model comprises a property definition including at least one property name, at least one property value and at least one process value for storing at least one process identifier identifying processes assigned to the property.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08131694&OS=08131694&RS=08131694
owner: SAP AG
number: 08131694
owner_city: Walldorf
owner_country: DE
publication_date: 20041112
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This description relates to process-oriented classification.","In computer systems, and in particular in data management systems that provide management of real world objects, such as items, products, facilities, materials, machines, and others, the real world objects can be processed electronically using business objects. The business objects can represent the real world objects using data structures. The structures can comprise classes that carry properties. Classes can be used to organize real world objects into certain categories. Within the business objects, relevant information of the real world objects may be stored within properties. Using the business objects and their properties allows simulating real world processes within computer systems. Further, production data, sales data, quality management data, purchasing data, and any other information available within a company can be represented within the data management system using the different business objects.","It may be necessary for processes or applications within the data management systems to classify the objects they use. Classification may be useful, for instance, in a catalogue, for batch determination, configuration, or the planning of a marketing campaign. In addition, classification can be helpful for production planning, quality management, sales management, computer-aided manufacturing, computer-aided design, and any other business tasks. When classifying objects, these objects can be allocated to certain classes. The properties of the classes can be valuated, which is the act of setting a value, for the particular object. The class can represent generic attributes of all objects within the class. For instance, capstan screws and slotted screws may be classified as screws. This generic information can be used for classifying all screws. Properties can represent certain attributes of objects, for instance, the color of an object.","Objects may need to be classified according to classification standards. For example, classification standards can allow communication between different business partners, e.g., different data management systems. Classification standards provide certain classes with certain properties to be used for classification of business objects. For instance, a classification standard, for example eCl@ss, can be used. To allow communication of classified objects between two systems, it may be necessary to agree bilaterally between two systems which classification standard to use. However, a general standard can prevent using properties and values required to describe the object sufficiently because these properties might not be available within the agreed standard.","In addition, it may be necessary that a certain object needs to be classified for different purposes. For instance, products and materials can be used within many different business processes. Each of these business processes can have different requirements concerning the classification of the objects it uses. For instance, for production it can be helpful to know the type of a screw, e.g., whether it is a capstan or a slotted screw. However, quality management systems might need different information about the screws, for instance, whether these are stainless or made from certain materials. Quality management thus requires different classification of the screws than production management.","Thus, a classification tool or engine can be required to support the use of an object's classification by several different processes. When different applications or processes share different object classifications, properties, classes, class hierarchies, and class networks may need to be shared across the different applications or processes. Class allocations and property valuations of the resulting object classification may also be required to be shared among the several different processes.","It may be necessary to allow controlling whether a certain application or process is allowed to change a certain allocation of an object to a class or a certain valuation of a property. In addition, the valuation of properties of objects is required to be unique, i.e., the color of a particular material needs to be consistent within all applications and processes. Otherwise, the properties of an object used by a first application might not correspond to an object's properties used in a second application or even with the real world object. On the other hand, different valuations for properties of a single object might lead to ambiguous communication of objects between different applications.","As described below, an object model, method, and computer program products are provided for classifying objects independently of applications or processes that may request the classification. Classification may include identifying the requesting application or process, determining what properties are allowed for the identified process, and assigning the determined properties to the object. A classification engine, independent of the requesting applications or processes may perform the classification.","More specifically, for example, embodiments of the invention may integrate the handling of classes, class allocation, and valuation using the classification engine. This integration provides consistent valuation. Parallel use of various classification standards within one system is possible according to embodiments. Classification standards can be extended flexibly with further properties. The implementation enables communication of business objects between various systems without the use of a classification scheme.","Embodiments provide a data object model for describing objects within systems with a property definition including at least one property name, at least one property value and at least one process value for storing at least one process identifier identifying processes assigned to the property.","The data object model according to embodiments provides object classification independently of processes or classes. The properties themselves carry information; for example, the process for which it is used, or the process for which it is relevant. Properties are made available for processes, and may be assigned directly to an object. The properties can also be valuated directly from the process without the need of a class. One advantage of classifying objects using the properties is uniformity of description of the objects. All objects are described using the properties available from a pool of common properties. Inconsistencies due to classification within different classification schemes can be resolved. Within a classification engine, each process can assign a variety of properties to an object. When accessing an object, its properties relevant for the process can be provided directly, depending on the process value stored within the properties of an object.","Embodiments of the data object model provide a process access value for storing access rights to the property by at least one process. This process access value can be used to determine which process has access to a property. This can, for instance, be an owning process, which can have read and write access or a process that only has read access. The process value can be stored together with property values during valuation of an object. Thus, the process that valuated a certain object is known. Different processes can also access this particular property of the object; however, access can be restricted using the access value.","Other embodiments of the data object model provide a class definition storing assigned properties and omitting storing assigned processes. The class therefore does not carry any information about processes. The class can be used with these processes, which are assigned to the properties of the objects to which the class also refers.","Embodiments of the data object model use standardized property names and\/or property values. Standardization of the properties allows using these within various processes to describe objects uniformly and beyond system borders. This can, for instance, be standardization according to ISO 13584-42. Standardized classification systems can share some of these standardized properties. An object can be classified according to different classification systems used within different applications or processes.","Another aspect of the invention is a computer-implemented method for providing objects with object classification, providing a classification engine assigning properties to objects by identifying a process using the object, determining properties allowed for the identified process, and classifying the object by assigning the identified properties directly to the object.","A classification engine may be provided, which allows managing the allocations of properties and\/or classes to objects. The classification engine may also store information about which processes have assigned which properties or classes to which objects. Any process-independent classification may therefore be controlled within the classification engine. The classification engine may store a table with information about the processes and the corresponding objects. The classification engine may also be provided to implement the features as described further below.","By providing the inventive allocation of properties to objects, object valuation becomes unambiguous. The central classification engine may allocate properties to objects and valuate the properties unambiguously. By using classes and properties independently of processes, multiple classification standards may be used in parallel.","Embodiments provide a computer-implemented method that valuates the properties of the object directly using the property values defined for the respective property, independently of the process. Therefore, property values as defined in the data object model can be used by every process. The available values do not depend on the process classifying the object.","When classifying the object, i.e., assigning properties to the object and valuating the properties, the respective process carrying out this classification needs to be identified and stored in conjunction with this classification. Therefore, embodiments provide a computer-implemented method for providing within the classification engine a process access value for storing access rights of at least one process to a particular property and\/or object classification. The process requesting classification can be the owning process with all access rights, including reading and writing rights. The owning process can also change or delete the classification of the object with the particular property. Other processes, however, can have read and\/or write access rights. In addition, embodiments provide storing read and\/or write access rights within the access value. Processes that are not the owning processes may only be granted read access to valuation and class allocation. The integrity of allocation and valuation in a multi-process scenario may thus be ensured.","This access management, for instance controlling access to properties of an object by different processes, is possible by storing at least one owning process identifier together with an assignment of a property to an object. For each property, at least one process can be assigned. When assigning properties to an object, an additional attribute providing information about the respective process that owns this valuation or class allocation can be stored. It can also be possible to store within this additional attribute information about several owners of the respective property or class. The setting and changing of this attribute can be subject to access restrictions. According to other embodiments, a computer-implemented method provides a process access to a property and\/or an object classification based on the access rights of the process.","A computer-implemented method, according to embodiments, enables classifying an object with a class independently of a process. The class itself does not carry any information about a process. The class can be used by a process for classification if it contains properties that are relevant for the particular process. In addition, embodiments enable a class to be classified by processes for which identifiers are stored within the process values of the properties available within the respective class. As the class is process-independent it can be used with multiple processes (in contrast to former classification systems, where a class was implicitly or explicitly assigned to a single process).","To identify the process accessing a certain object, a process identifier may be received from a process accessing an object according to embodiments. For instance, a classification engine can be used for receiving the process identifier and obtaining the respective data from the accessed object.","Embodiments provide receiving within the classification engine a process identifier from a process accessing an object. This identifier can be used to determine properties relevant for the requesting process. Thus, the classification engine, which may be a piece of software, an integrated circuit or a circuit arrangement, can identify the requesting process and can obtain the respective values from the requested objects.","It also is possible to read an object's classification using the class allocated to the object. After determining the class allocated to the object, the relevant subset of the valuation according to the properties of the class may dynamically be determined. This can, for example, also be done by the classification engine.","To allow dynamic classification of an object to a class, implementations provide determining object properties and determining a class within available classes of a system that contains properties that most closely resemble the determined properties. In addition, a filter may be applied to the valuation of the object. Coexisting, different classification standards may also be supported. If an object is received within a system, the valuation of the object can be determined. Knowing the properties of this object, the classes, which are likely to fit most to the properties of the received object, can be determined. Comparing the properties of the object with the properties of the available classes in the system can allow determining the classes most closely resembling the received object. It can also be possible to determine from the automatic classification whether a received object is already available within the receiving system.","According to embodiments, object searches using properties, property values and object classes independently of a process are provided. Objects can be searched for using properties, property values, or classes. As the properties, property values and\/or classes are independent of a process, a search engine can search for objects within various different systems or processes. The search engine as well as the user need not be concerned about a process-specific classification system. Searching for standardized properties, property values, or classes makes searches easier and more efficient.","Other aspects of the invention are a computer program, and a computer program product with object classification, the program comprising instructions operable to cause a processor to assign properties to objects by identifying a process using the object, determining properties allowed for the identified process, and classifying the object by assigning the identified properties directly to the object.","Referring now to the drawings, in which like numerals represent like elements throughout the figures, aspects of the present invention and the operating environment will be described.","In , while reference numbers \/, \/ . . . denote similar elements, the function of these elements can be different.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 1","b":["999","900","901","902"]},"Computer  can communicate with computers  and  over network . Computer  has processor , memory , bus , and, optionally, input device  and output device  (I\/O devices, user interface ). As illustrated, the invention is implemented by computer program product  (CPP), carrier  and signal . With respect to computer , computer \/ is sometimes referred to as \u201cremote computer,\u201d computer \/ is, for example, a server, a peer device or other common network node, and typically has many or all of the elements described for computer .","Computer  is, for example, a conventional personal computer (PC), a desktop device or a hand-held device, a multiprocessor computer, a pen computer, a microprocessor-based or programmable consumer electronics device, a minicomputer, a mainframe computer, a personal mobile computing device, a mobile phone, a portable or stationary personal computer, a palmtop computer or the like.","Processor  is, for example, a central processing unit (CPU), a micro-controller unit (MCU), digital signal processor (DSP), or the like.","Memory  is comprised of elements that temporarily or permanently store data and instructions. Although memory  is illustrated as part of computer , memory can also be implemented in network , in computers \/ and in processor  itself (e.g., cache, register), or elsewhere. Memory  can be a read-only memory (ROM), a random access memory (RAM), or a memory with other access options. Memory  is physically implemented by computer-readable media, for example: (a) magnetic media, like a hard disk, a floppy disk, or other magnetic disk, a tape, a cassette tape; (b) optical media, like optical disk (CD-ROM, digital versatile disk\u2014DVD); or (c) semiconductor media, like DRAM, SRAM, EPROM, EEPROM, memory stick.","Optionally, memory  is distributed. Portions of memory  can be removable or non-removable. For reading from media and for writing in media, computer  uses well-known devices, for example, disk drives, or tape drives.","Memory  stores modules such as, for example, a basic input output system (BIOS), an operating system (OS), a program library, a compiler, an interpreter, and a text-processing tool. Modules are commercially available and can be installed on computer . For simplicity, these modules are not illustrated.","CPP  has program instructions and, optionally, data that cause processor  to execute method steps of the present invention. In other words, CPP  can control the operation of computer  and its interaction in network system  so that it operates to perform in accordance with the invention. For example and without the intention to be limiting, CPP  can be available as source code in any programming language, and as object code (\u201cbinary code\u201d) in a compiled form.","Although CPP  is illustrated as being stored in memory , CPP  can be located elsewhere. CPP  can also be embodied in carrier .","Carrier  is illustrated outside computer . For communicating CPP  to computer , carrier  is conveniently inserted into input device . Carrier  is implemented as any computer readable medium, such as a medium largely explained above (cf. memory ). Generally, carrier  is an article of manufacture having a computer-readable medium with computer-readable program code to cause the computer to perform methods of the present invention. Further, signal  can also include computer program product .","Having described CPP , carrier , and signal  in connection with computer  is convenient. Optionally, further carriers and further signals embody computer program products (CPP) to be executed by further processors in computers  and .","Input device  provides data and instructions for processing by computer . Device  can be a keyboard, a pointing device (e.g., mouse, trackball, cursor direction keys), microphone, joystick, game pad, scanner, or disc drive. Although the examples are devices with human interaction, device  can also be a device without human interaction, for example, a wireless receiver (e.g., with satellite dish or terrestrial antenna), a sensor (e.g., a thermometer), a counter (e.g., a goods counter in a factory). Input device  can serve to read carrier .","Output device  presents instructions and data that have been processed. For example, this can be a monitor or a display, cathode ray tube (CRT), flat panel display, liquid crystal display (LCD), speaker, printer, plotter, vibration alert device. Output device  can communicate with the user, but it can also communicate with other computers.","Input device  and output device  can be combined to a single device. Any device  and  can be provided optionally.","Bus  and network  provide logical and physical connections by conveying instruction and data signals. While connections inside computer  are conveniently referred to as \u201cbus ,\u201d connections between computers - are referred to as \u201cnetwork .\u201d Optionally, network  includes gateways, which are computers that specialize in data transmission and protocol conversion.","Devices  and  are coupled to computer  by bus  (as illustrated) or by network  (optionally). While the signals inside computer  are mostly electrical signals, the signals in network are electrical, electromagnetic, optical or wireless (radio) signals.","Networks are commonplace in offices, enterprise-wide computer networks, intranets and the Internet (e.g., the world wide web (WWW)). Network  can be a wired or a wireless network. To name a few network implementations, network  can be, for example, a local area network (LAN), a wide area network (WAN), a public switched telephone network (PSTN); an Integrated Services Digital Network (ISDN), an infra-red (IR) link, a radio link, like Universal Mobile Telecommunications System (UMTS), Global System for Mobile Communication (GSM), Code Division Multiple Access (CDMA), or a satellite link.","A variety of transmission protocols, data formats and conventions is known, for example, transmission control protocol\/internet protocol (TCP\/IP), hypertext transfer protocol (HTTP), secure HTTP, wireless application protocol (WAP), unique resource locator (URL), a unique resource identifier (URI), hypertext markup language (HTML), extensible markup language (XML), extensible hypertext markup language (XHTML), wireless markup language (WML), and Standard Generalized Markup Language (SGML).","Interfaces coupled between the elements are also well known in the art. For simplicity, interfaces are not illustrated. An interface can be, for example, a serial port interface, a parallel port interface, a game port, a universal serial bus (USB) interface, an internal or external modem, a video adapter, or a sound card.","The terms \u201ccomputer\u201d and \u201cprogram\u201d are closely related. As used hereinafter, phrases, such as \u201cthe computer provides\u201d and \u201cthe program provides,\u201d are convenient abbreviations to express actions by a computer that are controlled by a program.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 2","b":["2","4","4","6"]},"The classification as shown in  depends on the classifying process. The allocated class is assigned to the process and the properties are part of the respective class. Automatic classification is not possible, since the relevant process for the classification cannot be determined from outside the system. The shown classification is process-dependent, each process having a variety of different classes. The classes within a process can differ between various processes. Communication between the processes using the classified objects can thus be inhibited or ambiguous, as the classes can be different within the processes, and valuations of objects may not be unique.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 3","b":["2","10","8","12"]},"For instance, the engine may store information regarding which process has classified which object with which property. The determined properties are assigned to the object and valuated accordingly (). Additionally, within the classification engine information can be stored regarding which process is responsible for which classification, e.g., which property is assigned to which object by which process. The properties can be assigned to the owning process.","For classification of the objects with a class, the class can be automatically used by a process if properties of the class are properties that have already been assigned to the objects by the respective process ().","The determined class is allocated to the object (). After having allocated the class to the object, the properties assigned to the class are added to the properties already available through object valuation. Additionally, the object may carry properties assigned through the process itself as well as properties assigned through the class. The assignment of properties to an object () and of a class to an object () may be done together with storing at least one owning process identifier, which will be further shown in .",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 4","FIG. 3"],"b":["22","12","24","16"]},"After having valuated the properties (), the owning process of the properties can be stored (). This can be done within an attribute indicating whether the respective process owns this valuation. Several owners of a valuation can be possible. The setting and changing of this attribute can be subject to access restrictions. Other processes than the owning ones can, for instance, be granted read-only access to the attribute.","The same may apply to a class allocation (), wherein an attribute may be stored together with the class allocation indicating whether a respective process owns this class allocation. Changes to the class allocation may only be granted to the owning process. Thus, the integrity of valuations and allocations in a multi-process scenario may be ensured.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 5","b":["26","28","30","32"]},"Objects can be used within different sub-systems. To allow using classification of objects in different systems, even with different classes assigned to the processes of the sub-systems, an implementation according to  is provided.","An object may be transferred from a first system into a second system. Within the second system, the object is received (). The received object carries a valuation with properties. These properties may be determined (). From the valuation of the object, it can be determined into which classes this object is likely to fit. This can be done by searching for the class whose properties most closely resemble the properties of the received object (). After finding the respective class, this class may be allocated to the received object (). The new classification may be used within the new system.","The implementations according to  can also be carried out using a computer program in a computer program product () within a system depicted in .",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 7","b":["42","44","46","42"]},"For object classification, the object may be assigned to a class allocation  and property valuation . As can be seen from the diagram, the class allocation  and the property valuation are independent from the process .","Class allocation  may be done using different classes , each of which has certain characteristics . The characteristics obey a definition scope . Property valuation may be done using certain values , which are independent from the respective process . The values are of defined object types . Since there is no association between property valuation and process , valuation is unique for all processes. In addition, as there is no association between the classes and the processes, the class allocation can be unique, too.","Classes  are located within a class hierarchy . All associated processes  to a particular class hierarchy  have the same hierarchy attributes. All connected classes for a particular process  are associated with the same hierarchy object.","The views  of a characteristic are associated with the process . The views  of a characteristic have to be a subset of the views of the associated process .",{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 8","b":["66","68","68","70","72","74","76","76","78","78","80","82"],"i":["a","b","a","b"]},"For object classification, the application  requests classification engine  to provide a certain class for the object. The class allocation engine determines from class allocation database through class allocation database interface a respective class and allocates this class with the object within class allocation . During class allocation, properties belonging to the class may be determined from property determination .","After class allocation, properties of the object are valuated within property valuation engine . The property valuation engine  obtains from property valuation database through property valuation database interface available values for the respective properties. The values may depend on the respective property assigned to the object and provided within property determination  through property valuation .","After having assigned the properties to the object and valuated the properties accordingly within property valuation , the values of the properties are checked within value checking engine . In addition, the syntax of the values and the properties can be verified within the syntax checking engine .","After object classification and property valuation, the classification engine  can report to the process the completion of object classification."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In the FIGs:",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
