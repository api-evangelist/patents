---
title: Device and method for clock signal loss detection
abstract: A device, comprises a first counter and a second counter, a control unit and a comparing unit. The first counter and the second counter are configured to alternately count a cycle number of a monitoring clock signal. The control unit is configured to generate, based on an input clock, both a first counter enable signal and a second counter enable signal that enable or disable the first and the second counters respective, and the first counter enable signal and the second counter enable signal are inverted. The comparing unit is coupled to both the first counter and the second counter and configured to detect a loss fault of the input clock if the cycle number of the monitoring signal counted by one of the first and the second counters exceed a predetermined threshold.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09231576&OS=09231576&RS=09231576
owner: MONTAGE TECHNOLOGY (SHANGHAI) CO., LTD.
number: 09231576
owner_city: Shanghai
owner_country: CN
publication_date: 20140722
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority to Chinese application No. 201410307669.5 entitled \u201cdevice and method for clock signal loss detection,\u201d filed on Jun. 30, 2014 by Montage Technology (Shanghai) Co., Ltd., which is incorporated herein by reference.","The present invention relates to clock signal loss detection, and more particularly, but not limited to a device and method for clock signal loss detection.","The conventional method of clock loss detection tests average frequency during a predetermined period, therefore it may not promptly detect input clock loss fault. Further, there may be one cycle sampling error in start and stop point. Further, in order for the method to work, input clock duty cycle should meet Nyquist sampling theory to find an edge transition. Due to the above disadvantage of existing clock loss detection method, it is desirable to have a new device and method of detecting input clock loss.","According to an embodiment of the present invention, a device comprises a first counter and a second counter, wherein the first counter and the second counter are configured to alternately count a cycle number of a monitoring clock signal; a control unit configured to generate, based on an input clock, both a first counter enable signal and a second counter enable signal that enable or disable the first and the second counters respectively, wherein the first counter enable signal and the second counter enable signal are inverted; and a comparing unit coupled to both the first counter and the second counter and configured to detect a loss fault of the input clock if the cycle number of the monitoring clock signal counted by one of the first and the second counters exceed a predetermined threshold.","According to another embodiment of the invention, a method in a device comprises alternately counting a cycle number of a monitoring clock signal respectively by a first counter and a second counter; generating, by a control unit based on an input clock, both a first counter enable signal and a second counter enable signal that enable or disable the first and the second counters respectively, wherein the first counter enable signal and the second counter enable signal are inverted; and detecting, by a comparing unit, a loss fault of the input clock, if the cycle number of the monitoring clock signal counted by one of the first and the second counters exceed a predetermined threshold.","Various aspects and examples of the invention will now be described. The following description provides specific details for a thorough understanding and enabling description of these examples. Those skilled in the art will understand, however, that the invention may be practiced without many of these details. Additionally, some well-known structures or functions may not be shown or described in detail, so as to avoid unnecessarily obscuring the relevant description.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["10","1","2","1","2","1","2","1","2","1","2","1","2","1","1","1","2","2","2"]},"The comparing unit CMP is coupled to both the first counter CNT and the second counter CNT and the comparing unit CMP is configured to detect a loss fault of the input clock if the cycle number of the monitoring clock signal mck counted by one of the first and the second counters CNT, CNT exceed a predetermined threshold. For example, an input clock loss threshold can be quantized by the monitoring clock signal mck's period, and the result is set as the first and second counters CNT and CNT's predetermined threshold. Assume the loss threshold is 1000 ns, and the monitoring clock signal mck's period is 100 ns, then counter predetermined threshold is 10. 10 is obtained from the loss threshold value 1000 ns divided by mck's period 100 ns. It means during 10 mck period, the in_ck must toggle at least one time. That is, if the comparing unit CMP detects any one of counters CNT or CNT counts more than 10, the compare unit CMP detects the input clock is lost. In another embodiment, if the loss threshold remains 1000 ns, and the monitoring clock signal mck's period is 65 ns, the predetermined threshold can be 15 or 16. Note the predetermined threshold can be different based on the cycle number of loss threshold.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 2","FIG. 1"],"b":["20","10","20","1","2","1","2","2","1","1"]},"The compare unit CMP in  can be implemented by a first comparator COMPARE and a second comparator COMPARE in . The first comparator COMPARE is configured to generate a first loss signal loss, and the second comparator COMPARE is configured to generate a second loss signal loss. The details of first comparator COMPARE and the second comparator COMPARE will be described with the following .",{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 3","FIG. 1","FIG. 3","FIG. 2","FIG. 2"],"b":["30","30","1","2","30","3","4","1","2","2","1","2"]},"Both Q ports of the first D-type flip flop D and the third D-type flip flop D are connected to input ports of the first OR gate OR. An output port of the first OR gate OR is connected to the control unit CTRL. Both Q ports of the second D-type flip flop D and the fourth D-type flip flop D are connected to input ports of the second OR gate OR. An output port of the second OR gate OR is connected to the control unit CTRL.","Both clock ports of the third D-type flip flop D and the fourth D-type flip flop D are configured to receive an inversion of the input clock in_ck. As shown in , both clock ports of the third D-type flip flop D and the fourth D-type flip flop D are connected to an output of the second inverter INV, and an input of the second inverter INV is configured to receive the input clock in_ck. The output port of the control unit CTRL is connected to a clear port (CLR) of the fourth D-type flip flop D, and the output port of the control unit CTRL is further connected to a clear port (CLR) of the third D-type flip flop D via the first inverter INV; wherein all D ports of the first D-type flip-flop D, second D-type flip-flop D, third D-type flip-flop D and fourth D-type flip-flops D are connected to a logic high \u201c1\u201d.","The comparing unit  comprises a first comparator COMPARE, a second comparator COMPARE and a third OR gate OR. The first comparator COMPARE is connected to the first counter CNT and an output port (which outputs signal loss) of the first comparator COMPARE is connected to a first input port of the third OR gate OR. The first comparator COMPARE is also configured to receive the monitoring clock signal mck and compare the cycle number counted by the first counter CNT with the cycle number of mck. The second comparator COMPARE is connected to the second counter CNT. An output port (which outputs signal loss) of the second comparator COMPARE is connected to a second input port of the third OR gate OR. The second comparator COMPARE is also configured to receive the monitoring clock signal mck and compare the cycle number counted by the second counter CNT with the cycle number of mck. The output of the third OR gate OR is configured to indicate the loss fault of the input clock in_ck if the cycle number of the monitoring clock signal mck counted by one of the first and the second counters CNT and CNT exceed a predetermined threshold.","The device  further comprises a third inverter INV. The control unit CTRL is configured to output the first counter enable signal cnt_en. The control unit CTRL is also configured to output the second counter enable signal cnt_en through a third inverter INV. With the third inverter INV, the unexpected data relationship (always inverted) between the first counter enable signal cnt_en and the second counter enable signal cnt_en that caused by metastability can be reduced or avoided.","Two pairs of D-flip-flop (the pair of D-type flip flops D&D, the pair of D-type flip flops D&D) generate \u2018cnt_clr\u2019 and \u2018cnt_clr\u2019 respectively and each pair only works with its corresponding counter. One of the D-flip-flops in a pair is triggered by the rising edge of \u2018in_ck\u2019, and the other in the pair is triggered by the falling edge of \u2018in_ck\u2019. Taken the pair comprising D and D as an example, the first D-type flip flop D is triggered by a rising edge of the input clock in_ck, and the second D-type flip flop D is triggered by a falling edge of the input clock in_ck. The D port (also called as data-in port) of each of the four D-flip-flops is connected to constant high. With two D-type flip flops in a pair, even if the counter set up time and counter hold time do not meet with each other, which will cause for example the first D-type flip flop to fail to detect a rising edge of the input clock in_ck, the third D-type flip flop can then detect a falling edge of the input clock, so as to guarantee an accurate count cycle number of counters.","Referring back to , if the device  can tolerate one sample error, then the third D-type flip flop D and the fourth D-type flip flop D can be omitted. In other words, the device  only detects rising edge of the input clock in_ck by the first or second D-type flip flop D or D.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 4","FIG. 1","FIG. 3","FIG. 3"],"b":["40","10","1","2","3","4","1","2","1","2"]},"As shown in , the control unit  comprises a combination logic  and a fifth D-type flip flop D. A first and a second port of the combination logic  are respectively connected to both an output of the first OR gate OR and an output of the second OR gate OR. The combination logic  is configured to output, to the fifth D gate D, a different value for detecting a high of the output of the first OR gate OR or the second OR gate OR respectively. For example, if High of the first OR gate OR is detected, then the combination logic  outputs 1, if High of the second OR gate OR is detected, then the combination logic  outputs 0. A Q port of the fifth D-type flip flop D is configured to output the first counter enable signal crd_en, and the NOT Q port of the fifth D-type flip flop D is configured to output the second counter enable signal cnt_en. The Q port of the fifth D-type flip flop D is connected to the clear ports of both the first D-type flip flop D and the third D-type flip flop D via the first inverter INV. The not Q port of the fifth D-type flip flop D is connected to the clear ports of both the second D-type flip flop D and the fourth D-type flip flop D via the fourth inverter INV. Note different from  in which the clear port CLR of all of the D-type flip flop D, D, D and D are connected to a same output port of the control unit CTRL, in , the clear port of the pair of D-type flip flops D and D receive Q port output of the fifth D-type flip flop D, while clear port of the pair of D-type flip flops D and D receive NOT Q port output of the fifth D-type flip flop D. Note the CLR port of D to D can be SET\/RESET\/SETB\/RESTB port, and inverters may need to be inserted or removed accordingly. The function of the CLR port is to allow the D-type flip flops (DFFs) to be back to their initial value. For example, if CLR ports of D to D are all CLRB (or RESETB), which means the logic low on the port will set the Q port to 0, then inverters INV and INV can be omitted.","The device  further comprises a frequency divider . The frequency divider  is configured to divide the input clock in_ck by N before the input clock in_ck is input to the control unit .","The compare unit COMPARE is an implementation of the compare unit CMP shown in . As the first counter CNT and the second counter CNT works alternately, one COMPARE unit is sufficient to detect whether the cycle number counted by one of the counters exceed the threshold value, and generates a loss signal to indicate loss of input clock in_ck.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 5","FIG. 1","FIG. 5"],"b":["50","10","50","1","2","50","3","4","1","2","1","2"]},"Both Q ports of the first D-type flip flop D and the third D-type flip flop D are connected to input ports of the first AND gate AND. An output port of the first AND gate AND is connected to the control unit CTRL. Both Q ports of the second D-type flip flop D and the fourth D-type flip flop D are connected to input ports of the second AND gate AND. An output port of the second AND gate AND is connected to the control unit CTRL. The output port of the control unit CTRL is connected to a clear port CLR of the second D-type flip flop D, and the output port of the control unit CTRL is further connected to a clear port CLR of the first D-type flip flop D through a first inverter INV.","Both clock ports of the third D-type flip flop D and the fourth D-type flip flop D are configured to receive an inversion of the input clock in_ck through a second inverter INV. The output port of the control unit CTRL is connected to a clear port CLR of the fourth D-type flip flop D, and the output port of the control unit CTRL is further connected to a clear port CLR of the third D-type flip flop through the first inverter INV; wherein all D ports of the first, second, third and fourth D-type flip-flops D, D, D and D are connected to a logic low \u201c0\u201d. Also taking the device  shown in  into consideration, the D ports of each of D-type flip flops D, D, D and D can be configured to receive either 0 or 1. If each of the D ports are configured to receive 0 instead of 1, then the OR gates OR, OR in  should be changed to AND gates AND and AND shown in .","As the first and second comparators COMPARE and COMPARE in  are similar to that shown in , details are omitted for elements already described with respect to .",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 6","FIG. 1","FIG. 6","FIG. 6"],"b":["60","60","1","2","3","4","3","4"]},"Both clock ports of the first latch D and the second latch D are configured to receive the input clock in_ck. The output port of the control unit CTRL is connected to a clear port CLR of the second latch D, and the output port of the control unit CTRL is further connected to a clear port CLR of the first latch D through a first inverter INV.","Both Q ports of the first latch D and the third latch D are connected to input ports of the third AND gate AND. An output port of the third AND gate AND is connected to the control unit CTRL.","Both Q ports of the second D-type flip flop D and the fourth D-type flip flop D are connected to input ports of the fourth AND gate AND. An output port of the fourth AND gate AND is connected to the control unit CTRL.","Both clock ports of the third D-type flip flop D and the fourth D-type flip flop D are configured to receive an inversion of the input clock in_ck via the second inverter INV. The output port of the control unit CTRL is connected to a clear port of the fourth D-type flip flop D, and the output port of the control unit CTRL is further connected to a clear port of the third D-type flip flop D through the first inverter INV.","As the comparator COMPARE in  is similar to that shown in , details are omitted for elements already described with respect to .","In an embodiment, the predetermined threshold is programmable. For example, the predetermined threshold may be adjusted based on the ratio of frequency of input clock in_ck and the frequency of monitoring clock signal mck.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 7","FIG. 1","FIG. 7","FIG. 4","FIG. 4","FIG. 7","FIG. 4"],"b":["70","40","420"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 8","FIG. 4","FIG. 8","FIG. 4","FIG. 8"],"b":["7","80","1","2","80","1","80","1","1","5","80","1","2","1","2","1","2","1","2","5","5"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 9","FIG. 4","FIG. 4","FIG. 9"],"b":["7","90","2","4","5","2","90","2","2","90","2","2","2","4","4","4","5","5","5","90","5","2","2","2","5","1","2","2","5","5"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 10","FIG. 1"],"b":["100","10","100","1000","1010","1020"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 11","b":["1","2","1","2"]},"Referring to , the situation that the numbers in the parenthesis should be ignored is considered. First the monitoring clock signal mck domain is considered. In block , initially, cnt_en changes from logic 0 to logic 1 and cnt are counting, while cnt_en changes from logic 1 to logic 0 & cnt reset. In other words, CNT works with cnt_en changes from logic 0 to logic 1, and CNT does not work.","Then in block , the method detects whether CNT reaches a max value or cnt_clr=1.","To be specific, if CNT reaches a max value, the method goes to blocks  and , in block  a signal loss is detected.","If cnt_clr=1 (time b in ), then the method proceed to block . In block , cnt_en is from logic 1 to logic 0 & cnt reset (time c in ); cnt_en is from logic 0 to 1 & cnt starts counting. Then in block , the method detects whether CNT reaches a max value or cnt_clr=1.","If CNT does not reach a max value and cnt_clr does not equal 1 in block , the method goes back to block .","If yes to CNT reaches a max value in the determining of block , the method goes to blocks  and , and block , in block  a signal loss is detected, and in block  the first counter CNT and second counter CNT continuously count alternatively.","If yes to cnt_clr=1 (time B in ) in the determining of block , then the method proceeds to block , cnt_en changes from logic 0 to logic 1 & cnt counting (time D in ); cnt_en changes from logic 1 to logic 0 & cnt reset (time C in ).","If CNT does not reach a max value and cnt_clr does not equal 1, the method goes back to block .","Then the in_ck domain is considered, in block , D & D are working, while D & D reset, therefore a cnt_clr signal is generated and sent to block  in mck domain.","Then block  determines whether cnt_en changes from logic 1 to logic 0.","If yes, the method proceeds to block , wherein D & D are reset, and D & D work. Meanwhile a cnt_clr signal is generated and fed to block  in the mck domain. Then the method proceeds to block , and the block  determines whether cnt_en changes from logic 1 to logic 0. If yes to block , the method goes back to block . If no to block , the method goes back to block .","If no to block , the method proceeds back to block .","Also note that the block  also generates a cnt_en signal and the signal is fed to block . Block  generates a cnt_en signal and the signal is fed to block . Note that the numbering of blocks across different domains does not indicate specific orders. For example block  in mck domain and block  in in_ck domain do not have to be performed in order recited. Block  and block  can be implemented in different order. Note that the above method also works for the signals illustrated in the parenthesis.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 12","FIG. 12"],"b":["1","2","1","2","1","2","1","2","1","1","2","2"]},"Referring to , during operation, the first counter CNT and the second counter CNT both are synchronous step counters. The two counters (CNT & CNT), the two comparators (COMPARE & COMPARE), and control unit (CTRL) work on monitor clock signal (mck) domain. mck domain is a complete synchronous circuit. The four D-Flip-Flops work with either rising edge or falling edge of input clock in_ck.","If cnt_clr is active (for example time point a), after sampled by mck (for example, the rising edge of monitoring clock signal, such as time point b), the \u2018cnt_en\u2019 is pulled low (for example time point c), and at the same time, the \u2018cnt_en\u2019 is pulled high (for example time point d, note that time point c and time point d are substantially simultaneous). As cnt_en is pulled down, the first counter CNT ceases count, and the second counter CNT starts count. The cnt_en is also feed to the clear port CLR of first and third D-type flip flops D and D via the first inverter INV, therefore D and D are reset and stop work (when D and D are reset, that means the Q output always equal to 0, and the Q output ignores the D port and clock inputs), while the second and fourth D-type flip flops D and D start work.","Similarly, if the \u2018cnt_clr\u2019 is active (for example time point A), after sampled by mck (for example, the rising edge of monitoring clock signal, such as time point B), the \u2018cnt_en\u2019 is pulled high (for example time point D). At the same time, the \u2018cnt_en\u2019 is pulled low (for example time point C, note that time point C and time point D are substantially simultaneous). As cnt_en is pulled high, the first counter CNT starts count, and the second counter CNT ceases count. If the high of the \u2018cnt_clr\u2019 \u2018cnt_clr\u2019 is detected by mck, current counter is reset and another counter starts counting immediately.","The cnt_en is also feed to the clear port of first and third D-type flip flops D and D via the first inverter INV, therefore D and D are reset and stop work, while the first and third D-type flip flops D and D start work. In other words, at the same time as the reset of one counter and start counting of the other counter, after some delay that guaranteed by causal control system, the previous working D-flip-flop pair goes into reset status and another pair starts to work. Here the causal control system means the assertion of one bit signal \u2018cnt_en\u2019 is changed through the sampling on one bit signal \u2018cnt_clr\u2019 on mck domain. The asynchronous reset action on \u2018cnt_clr\u2019 (for example time point e) by \u2018cnt_en\u2019 is only after the \u2018cnt_en\u2019 is asserted by the effective sampling on \u2018cnt_cir\u2019 (for example time point c). The same mechanism also works for \u2018cnt_en\u2019 and \u2018cnt_clr\u2019.","During normal operation, \u2018cnt_en\u2019 and \u2018cnt_en\u2019 control two counters CNT and CNT to work in turns. For example, when the first counter CNT works, the second counter CNT ceases work. When the first counter CNT ceases work, the second counter CNT works.","During signal loss, the working counter continuously steps forward to its maximum value which equals the quantized programmable threshold if the corresponding enable signal keeps high. Loss indication signal (loss) can be detected as soon as the counter's value equals this programmable threshold value. Signal cnt_clr from in_ck domain is sampled by mck to generate single bit counter enable signal cnt_en. Signal in_ck is always run at two edge of in_ck. Signal cnt_en is used as asynchronous reset signal, and the reset recovery timing of DFF is not cared. Similarly, signal cnt_clr from in_ck domain is sampled by mck to generate single bit counter enable signal cnt_en. Signal in_ck is always run at two edge of in_ck. Signal cnt_en is used as asynchronous reset signal, and the reset recovery timing of DFF is not cared.","See  for another example. The first counter CNT is counting with D-type flip flops D and D on working status. At the same time, the second counter CNT is standby with the D-type flip flops D and D is in reset status. During the first counter CNT counting stage, one falling edge of \u2018in_ck\u2019 leads \u2018cnt_clr\u2019 to high at time a. When mck detects the high of \u2018cnt_clr\u2019 at time b, it will reset the first counter CNT (also signal cnt) through pulling low its enable signal \u2018cnt_en\u2019 at time c, and start the second counter CNT (also signal cnt) through pulling high the \u2018cnt_en\u2019 at time d. Because \u2018cnt_en is only generated after the cnt_clr\u2019 has been sampled correctly at time b, \u2018cnt_en\u2019 can reset D-type flip flops D and D safely at time e. The high level of \u2018cnt_clr\u2019 may be narrow but can always meet the hold timing requirement. The same treatment occurs, that during the second counter CNT counts 1,2, . . . until m+2, the second counter CNT is reset and the first counter CNT starts counting by rising edge of in_ck (time point A to E).","With the embodiments of the invention, clock loss fault can be checked out immediately so as to prevent the system using this clock to crash, without waiting for several periods to obtain an average value. In the embodiments, input clock loss fault can be detected as soon as the count exceeds the threshold.","In some embodiments, the monitor clock frequency does not need to be too high and only equals to a minimum threshold. Here minimum threshold indicates the lowest frequency of the mck to make sure this loss detection circuit can work. The minimum threshold may equal the frequency of CLK port of D\u02dcD (in_ck) or the divided in_ck by the frequency divider. The threshold can be as long as possible or even as small as one monitoring clock period based on different monitoring clock frequency and input clock frequency.","In some embodiments, the fully digital synchronous circuit leads the threshold to be programmed easily.","In some embodiments, the duty cycle requirement on input clock for the synchronous circuit sampling is not needed because the circuit use input clock edge trigger directly, instead of voltage level trigger.","Further, as the two comparators work seamlessly, that is, if one stops counting, the other one resumes counting immediately, seamless checking can be obtained.","Causal control system leads communication between two clock domains (in_ck domain and mck domain) simply and safely, as the causal control system according to the embodiments does not need to exchange handshaking signal between different domains.","With the frequency divider shown in the embodiment of , the embodiments also works for the situation with the input clock frequency faster than or equal to the monitoring clock signal's.","Although the present invention has been described with reference to specific exemplary embodiments, the present invention is not limited to the embodiments described herein, and it can be implemented in form of modifications or alterations without deviating from the spirit and scope of the appended claims. Accordingly, the description and the drawings are to be regarded in an illustrative rather than a restrictive sense.","From the foregoing, it will be appreciated that specific embodiments of the technology have been described herein for purposes of illustration, however various modifications can be made without deviating from the spirit and scope of the present invention. Accordingly, the present invention is not restricted except in the spirit of the appended claims.","Other variations to the disclosed embodiments can be understood and effected by those skilled in the art in practicing the claimed invention, from a study of the drawings, the disclosure, and the appended claims. In the claims the word \u201ccomprising\u201d does not exclude other elements or steps, and the indefinite article \u201ca\u201d or \u201can\u201d does not exclude a plurality. Even if particular features are recited in different dependent claims, the present invention also relates to the embodiments including all these features. Any reference signs in the claims should not be construed as limiting the scope.","Features and aspects of various embodiments may be integrated into other embodiments, and embodiments illustrated in this document may be implemented without all of the features or aspects illustrated or described. One skilled in the art will appreciate that although specific examples and embodiments of the system and methods have been described for purposes of illustration, various modifications can be made without deviating from the spirit and scope of the present invention. Moreover, features of one embodiment may be incorporated into other embodiments, even where those features are not described together in a single embodiment within the present document. Accordingly, the invention is described by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated in an exemplary manner by the accompanying drawings. The drawings should be understood as exemplary rather than limiting, as the scope of the invention is defined by the claims. In the drawings, the identical reference signs represent the same elements.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 5","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 6","FIG. 1"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 7","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 8","FIG. 4"],"b":"7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 9","FIG. 4"],"b":"7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
