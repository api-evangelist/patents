---
title: Editing an image representation of a text
abstract: Systems and methods are disclosed in which image representations of text strings can be easily edited. As such, one embodiment, among others, includes the step of receiving input from a user. The received input is indicative of a selection of an image. The image corresponds to a text string. That embodiment further comprises the step of correlating the image to the corresponding text string. Upon correlating the image to the text string, the text string is displayed to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08559764&OS=08559764&RS=08559764
owner: AT&T Intellectual Property I, L.P.
number: 08559764
owner_city: Atlanta
owner_country: US
publication_date: 20040615
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE DISCLOSURE","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["The present disclosure is related to the following co-pending U.S. patent applications: U.S. patent application Ser. No. 10\/868,233, filed on Jun. 15, 2004, and having the title \u201cConverting the Format of a Portion of an Electronic Document;\u201d and U.S. patent application Ser. No. 10\/868,369, filed on Jun. 15, 2004, and having the title \u201cVersion Control in a Distributed Computing Environment.\u201d Those applications are incorporated by reference as if set forth in their entireties.","The present disclosure relates generally to electronic documents and, more particularly, to image editors.","Web pages are often designed with text and images. While it is relatively simple to include text in a web page, it is sometimes desirable to include an image representation of the text, rather than the text itself. For example, if a web-page designer wishes to inhibit others from searching various portions of a web page but nevertheless wishes to include a readable text for the viewer, then that web-page designer may substitute the text for an image that represents the text. In another example, if the web-page designer wishes to include a particular font that is not normally supported by conventional browsers, then that web-page designer may include an image representation of the text in the different font.","Unfortunately, when text is represented with an image, there is typically no convenient way to edit the text within the image. Thus, there is a need in the art for a convenient editing tool.","Systems and methods are disclosed in which image representations of text strings can be easily edited. As such, one embodiment, among others, includes the step of receiving input from a user. The received input is indicative of a selection of an image. The image corresponds to a text string. That embodiment further comprises the step of correlating the image to the corresponding text string. Upon correlating the image to the text string, the text string is displayed to the user.","Other systems, devices, methods, features, and advantages will be or become apparent to one with skill in the art upon examination of the following drawings and detailed description. It is intended that all such additional systems, methods, features, and advantages be included within this description, be within the scope of the present invention, and be protected by the accompanying claims.","Reference is now made in detail to the description of exemplary embodiments as illustrated in the drawings. While several embodiments are described in connection with these drawings, there is no intent to limit the disclosure to the embodiment or embodiments disclosed herein. On the contrary, the intent is to cover all alternatives, modifications, and equivalents.","As noted above, spammers and other individuals often harvest personal information from the Internet by using bots that trawl the Internet for personal information. The disclosed systems and methods seek to remedy this and other problems by reformatting searchable text within a document into a generally unsearchable (or substantially unsearchable) format, thereby preventing bots from easily identifying personal information. While images may be searched by performing an optical character recognition or similar operation, the term \u201cunsearchable\u201d is used herein to infer difficulty of search.","In accordance with one embodiment, among others, various identification criteria are established to identify sensitive information, such as, for example, an individual's name, email address, telephone number, social security number, etc. Using the established criteria, the searchable segments of an electronic document are identified. Upon identifying various searchable segments that match the identification criteria, unsearchable images that represent the searchable segments are generated. For some embodiments, among others, the identified segments are converted into an unsearchable format, such as, for example, an image. Since, in reality, images can also be searched using complex algorithms, it should be appreciated that the phrase \u201cunsearchable,\u201d within the context of this disclosure, is a relative term that indicates, for example, that the image is more difficult to search than plain ASCII text. Upon generating the image, the searchable segments of the electronic documents are substituted with the image, thereby impeding the searchability of personal information on the electronic document.","According to an exemplary embodiment, rather than converting an entire electronic document into an image, only a portion of the electronic document is reformatted. One advantage of reformatting only a portion of the electronic document is that the resulting size of the file is often relatively small, as compared to a full text-to-image conversion. In that regard, if such an approach is used to generate a web-publishable document, then the resulting web page would occupy less resources. Additionally, due to the smaller file size, such web pages would load faster by a web browser than full text-to-image-converted files. It should be appreciated that the web-publishable document may be a hypertext markup language (HTML) file, a text file, a portable document file (PDF), or any other file that is generated by a word-processing program or a web-page-authoring program.","Various exemplary embodiments are described below with reference to .","Once text has been converted into one or more images, those images become relatively difficult to edit. The disclosed systems and methods further provide a convenient approach to editing the image representations of text. As such, for some embodiments, when a user selects (e.g., double-clicks) an image representation of a text string, the corresponding text string is displayed to the user through a text editor. Once the user edits the text string, a new image is generated, which reflects the edited text string. That new image is then substituted for the original image representation of the text.","Various exemplary embodiments of systems and methods associated with such an editor are described in .","Since sequential editing of image representations of text strings can, over time, generate multiple updated versions of the image, it may be difficult to track those changes, especially in a distributed computing environment. In that regard, the disclosed systems and methods also provide an approach to controlling the version of various files in a distributed computing environment. Thus, for some embodiments, version numbers are associated with a file, and each time that the file is revised or updated, that version number is updated. Hence, if a central server houses the updated file, and distributed servers house a mirror of the file, then each distributed server can maintain the most current version of a file by polling the central server under various predefined conditions. In one embodiment, among others, the polling of the central server is accomplished by a version script, which resides at each of the distributed servers.","Various exemplary embodiments of systems and methods associated with version control are described in .",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 1","FIG. 1"],"b":["110","110","130","150","160","140","170","150","110","130","110","110","140","110"],"i":["a ","a ","a ","a ","a ","a "]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 2","FIG. 1","FIG. 2","FIG. 2"],"b":["150","150","235","235","235"]},"Once loaded into memory , the selective text-to-image conversion program manifests itself as logical components within memory . These logical components include identification logic , image-generation logic , and substitution logic . Each of the logic components corresponds to a computer-readable code (e.g., a routine or a sub-routine) within the program . As such, the identification logic  is configured to identify a searchable segment of an electronic document in accordance with a predetermined identification criteria. The criteria can include, for example, a name of an individual, an email address, a social security number, a telephone number, a street address, or any other personal information associated with an individual.","In that regard, the identification logic  can be further segmented into text-string identification logic  and personal-information-identification logic . The text-string identification logic  is configured to identify a text string in accordance with predefined identification criteria. For example, a text string that represents an email address typically includes \u201c@\u201d between the username and the email domain. In that regard, one predefined criteria may be that a contiguous text string (i.e., a text string without interposed spaces) that includes a single \u201c@\u201d will be considered an email address. Similarly, a text string that represents a telephone number is typically a seven-digit number with a dash (\u201c-\u201d) interposed between the first three digits and the last four digits of the number. Thus, another predefined criteria may be that seven-digit numbers with an interposed dash (\u201c-\u201d) be treated as a telephone number. For those geographic locations that use ten-digit dialing, one can appreciate that the predefined criteria will indicate that ten-digit numbers with appropriate intervening dashes be treated as a telephone number. Likewise, the full name and address may also be appropriately defined. Since one of ordinary skill in the art can realize various permutations that define the identification criteria, further discussion of the identification criteria is omitted here. Suffice it to say, other sensitive information, whether personal or industrial, can also be similarly defined by various identification criteria.","In some embodiments, options can be presented to a user in an interactive manner, thereby permitting the user to identify how specific segments will be chosen for conversion. For example, a graphical prompt may be supplied to the user, which queries whether the user wishes the entire sensitive information to be converted, or whether the user wishes for only portions of the sensitive information (e.g., the \u201c@\u201d delimiter or the \u201c.com\u201d extension of an email address) to be converted.","In other embodiments, a user can manually select the searchable segments for conversion. Hence, for those embodiments, the identification criterion would be any selected text. In other words, for those embodiments, a determination of whether or not particular text has been selected would constitute one of the identification criteria.","In some embodiments, among others, the searchable text is converted into an image, which is typically not text-searchable. The image format can include, for example, a tagged image file format (TIFF), a bitmapped (BMP) format, a joint photographic experts group (JPEG) format, a graphics interchange format (GIF), or a variety of other known image formats. The image-generation logic  is configured to generate one or more such images. Since, in an exemplary embodiment, the image is generated by converting a text into the image, the image-generation logic  can be seen as including conversion logic , which performs the text-to-image conversion of the identified searchable segment. Since various approaches to text-to-image conversion are known in the art, further discussion of the conversion logic  is omitted here.","In addition to the conversion logic , the image-generation logic  can also include database generation logic , which is configured to generate a database that correlates the generated image with its corresponding text. It should be appreciated that, in other embodiments, the database generation logic  can be configured to simply provide a new entry to an existing database. The new entry would correlate the generated image with its corresponding text.","The substitution logic  is configured to substitute the generated image for the searchable segment, thereby producing a document in which the identified searchable segments are replaced by corresponding unsearchable images.","In operation, the processor  performs the corresponding function associated with each of the logical components that have been loaded into memory . Thus, the processor  retrieves the executable code from the memory via the bus , and executes the code to convert the searchable segments into unsearchable images.","Having described an exemplary embodiment of a system for reformatting a portion of an electronic document, attention is turned to , which show various embodiments of methods for reformatting a portion of an electronic document.","As shown in , in one embodiment, among others, the process begins by identifying () a searchable segment of a document. The searchable segment of the document can be identified () in accordance with an identification criterion. The identification criterion can be a name, an email address, a social security number, a telephone number, or other personal information that is associated with an individual. Upon identifying the searchable segment, the process continues by generating () an image from the searchable segment. The image is an unsearchable representation of the searchable segment. Upon generating () the image, the searchable segment is substituted with the unsearchable image (). In that regard, the resulting electronic document hinders the harvesting of sensitive information.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 4","FIG. 4","FIG. 2"],"b":["310","310","410","420","430","440"]},"Having described embodiments of methods for reformatting portions of an electronic document, attention is turned to , which show examples of conversions of electronic documents.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 5","FIG. 5","FIG. 5","FIG. 5"],"b":["510","520","530","540"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 6A","FIG. 5","FIG. 6A"],"b":["510","610","630","620","640"]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 6B","FIG. 5","FIG. 6A","FIG. 6B"],"b":["630","632","612"],"i":"a "},"As shown from , by converting searchable segments into unsearchable images, the disclosed systems and methods impede the harvesting of sensitive information by spammers and other Internet delinquents. Also, by converting only a portion of a document, rather than converting the entire document, much bandwidth and storage space is conserved.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIGS. 7 through 12"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 7","FIG. 7","FIG. 7"],"b":["740","730","110","720","730","110","720","740","720","110","720","110","730","110","730","110"],"i":["b","b","b ","b ","b ","b "]},"Once the document is stored on the server , it can be accessed by a variety of clients that are connected to the server , such as, for example, the editor workstation . Thus, when the editor workstation  downloads the document from the server , the contents of that document can be displayed to a user at the editor workstation . In addition to displaying the contents of the electronic document, the editor workstation  is configured to permit the user to edit the electronic document. Specifically, in some embodiments, among others, the editor workstation  facilitates editing of images that represent text, as originally generated by the author workstation . This is shown in greater detail with reference to . Since it may be desirable to provide access to editing capabilities to authorized personnel, preferably, for some embodiments, an authorization mechanism can be implemented to permit only certain workstations access to edit the electronic document. Since various authorization mechanisms are known in the art, further discussion of such mechanisms is omitted here. However, it should be appreciated by one having ordinary skill in the art that known authorization mechanisms can be implemented in conjunction with the processes described herein. Furthermore, it should be appreciated that custom authorization mechanisms may also be developed for use with the disclosed systems and methods.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 8","FIG. 7","FIG. 8","FIG. 8"],"b":["720","720","850","830","840","860","870","650","730","650","860","650","880","882","884","880","720","886","886","886","886","886"]},"In the example of , the image representation of the name  corresponds to \u201cBob Smith\u201d , the image representation of the email address  corresponds to \u201cbsmith@bob.smith.com\u201d , and the image representation of the telephone number  corresponds to \u201c(404) 555-1234.\u201d Thus, when a user downloads and displays the electronic document , as shown in , specific portions of the document are displayed as images , , .","When the user at the editor workstation  wishes to edit the contents of the images, the user simply selects the image by, for example, double-clicking on that image. Once selected, the editor workstation  is configured to open a text editor having the text that corresponds to the selected image. For example, if the user selects the image \u201cBob Smith\u201d  from , then the text editor will display ASCII text \u201cBob Smith\u201d for the user to edit. Exemplary logical components associated with the editing process are shown in .",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 9","FIG. 8","FIG. 9"],"b":["910","850","830","910","920","930","935","940","950","960","970","980","990"]},"The image-selection receive logic  is configured to receive input from the user. That input is indicative of an image selected by the user. For example, if the user double-clicks on \u201cBob Smith\u201d  of , then the image-selection receive logic  receives input that indicates that the user selected the \u201cBob Smith\u201d  image.","The correlation logic , which includes the database access logic , is configured to correlate the selected image with a particular text. The correlation information is stored in the database . Thus, once the image has been selected, the database access logic  accesses the database  in order to correlate the selected image with its corresponding text. For example, if the \u201cBob Smith\u201d  image is selected, then the correlation logic  returns the ASCII text \u201cBob Smith.\u201d","The display logic  displays the returned ASCII text \u201cBob Smith\u201d to the user in a text editor. Since text editors are known in the art, further discussion of text editors is omitted here. The user can, thereafter, edit the displayed text and prompt the editor workstation  to save the edited text. For example, if \u201cBob Smith\u201d is edited to \u201cJoe Jones,\u201d then the new text \u201cJoe Jones\u201d will be saved in response to the prompt from the user.","The text-string receive logic  is configured to receive the edited text string. In the above example, the text-string receive logic  receives the text string of \u201cJoe Jones.\u201d The image-generation logic  is configured to generate an image that corresponds to the edited text string. The image can be generated in accordance with those approaches discussed above. In this example, the generated image would be an image representation of \u201cJoe Jones.\u201d The store logic  is configured to store the generated image at a local database on the editor workstation . A remote storage configuration is described below, with reference to .","The image-replacement logic  is configured to replace the original image with the newly generated image. Thus, for this example, the original image of \u201cBob Smith\u201d would be replaced by the new image of \u201cJoe Jones.\u201d The image-delete logic  is configured to delete the original image. Thus, in this example, the \u201cBob Smith\u201d image would be deleted by the image-delete logic .","Some embodiments, among others, of processes that can be performed by the logic components are shown with reference to . It should be appreciated by those of skill in the art that other components could be used to perform the processes of .",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 10","FIG. 10"],"b":["1010","630","1010","1020","1020","1030"]},"When the user edits the text string, then that information is used to update the contents of the electronic document as well as the contents of the database. In some embodiments, rather than simply updating the contents of the database, the editor can create a wholly separate database that reflects the changes made by the editor. An exemplary embodiment of one process, among others, is shown in . Specifically, in that example, the text string \u201cbsmith@bob.smith.com\u201d is edited to \u201cjjones@joejones.com\u201d.","Once the user has edited the original text string, the new text string is received () from the user. Using the new text string, the processor  generates () an image that corresponds to the new text string. Thus, in this example, an image representation of \u201cjjones@joejones.com\u201d is generated () by the processor. The generated image, along with the information that correlates the image to the text, is stored (). Thereafter, the original image \u201cbsmith@bob.smith.com\u201d is replaced () with the new image \u201cjjones@joejones.com\u201d, and the original image \u201cbsmith@bob.smith.com\u201d is deleted ().","It should be appreciated that, for embodiments in which only a portion of the sensitive information has been converted, a separate identifier or key can be assigned to the image. Thus, using an example of an email address, that identifier or key identifies whether the entire email address has been converted to an image, whether the \u201c@\u201d delimiter has been converted to an image, whether the \u201c.com\u201d extension has been converted to an image, etc.","As seen from the embodiments of , a convenient method is disclosed, which permits editing of image representations of text strings.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 12","FIG. 12","FIG. 8","FIG. 12"],"b":["1215","1250","1230","1215","1225","1235","1237","1245","1247","1255","1265","1275","1285","1295"]},"The image-selection receive logic  is configured to receive input over the network. That input is indicative of an image selected by the user at a client. For example, if the user double-clicks on \u201cBob Smith\u201d  of  from a client machine, then the image-selection receive logic  receives that input over the network.","The correlation logic , which includes the database access logic , is configured to correlate the selected image with a particular text. The correlation information is stored in the database . Thus, once the image has been selected, the database access logic  accesses the database  in order to correlate the selected image with its corresponding text. For example, if the \u201cBob Smith\u201d  image is selected, then the correlation logic  returns the ASCII text \u201cBob Smith.\u201d","The text-string transmit logic  transmits the ASCII text \u201cBob Smith\u201d from the server to the client-side machine. The client-side machine displays the returned ASCII text \u201cBob Smith\u201d to the user in a text editor. Since text editors are known in the art, further discussion of text editors is omitted here. The user can, thereafter, edit the displayed text and prompt the client-side machine (e.g., editor workstation ) to save the edited text. For example, if \u201cBob Smith\u201d is edited to \u201cJoe Jones,\u201d then the new text \u201cJoe Jones\u201d will be saved in response to the prompt from the user.","The text-string receive logic  is configured to receive the edited text string from the client-side machine over the network. In the above example, the text-string receive logic  receives the text string of \u201cJoe Jones.\u201d The image-generation logic  is configured to generate an image that corresponds to the edited text string. The image can be generated in accordance with those approaches discussed above. In this example, the generated image would be an image representation of \u201cJoe Jones.\u201d The store logic  is configured to store the generated image at a database on the server . In this regard, the embodiment of  shows a remote storage and editing configuration, while the embodiment of  shows a local storage and editing configuration.","The image-replacement logic  is configured to replace the original image at the server with the newly generated image. Thus, for this example, the original image of \u201cBob Smith\u201d would be replaced by the new image of \u201cJoe Jones.\u201d The image-delete logic  is configured to delete the original image. Thus, in this example, the \u201cBob Smith\u201d image would be deleted by the image-delete logic .","Similar to the embodiment of , the embodiment of  facilitates editing of image representations of text strings. However, unlike , the embodiment of  permits remote editing of files. As one can see, for remote editing of files, it is possible that multiple differing copies of files can exist in various locations on the network. In some instances, it may be desirable to coordinate all of those existing copies so that the availability of incorrect or outdated information is minimized. One approach, among others, to coordinating the existing copies is provided in .",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIGS. 13 through 17"},{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 13","FIG. 13","FIG. 13"],"b":["1330","1340","1340","1340","1340","1320","1320","1330","1340","1340"],"i":["a ","n "]},"The central server  stores the most recent contents of the electronic document and is, therefore, used to synchronize the contents of the distributed servers . For example, as discussed above, it may be possible that each of the distributed servers  contains a different version of a file. In other words, unless the contents of all servers are synchronized, it is possible that outdated or obsolete files can be provided to a client, depending on the server that is accessed by the client.","Thus, in one embodiment, among others, the client  requests an electronic document from one of the distributed servers . The distributed server , upon receiving the request, queries the central server  to ensure that the contents on the distributed server match the contents of the central server . Greater details on the systems and methods for such processes are discussed with reference to .",{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 14","FIG. 13","FIG. 14","FIG. 14","FIG. 14"],"b":["1415","1340","1340","1460","1480","1482","1484","1340","1486","1480","1482","1484","1480","1482","1484","1460","1340","1450","1430","1440","1470","1415","1450","1430"],"i":["n ","n ","n ","n "]},{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 15","FIG. 13","FIG. 14","FIG. 15"],"b":["1330","1340","1330","1560","1550","1540","1570","1560","1580","1582","1584","1560","1586","1580","1582","1584"],"i":"n "},"As shown in , each of the image files , ,  has a name portion that is substantially identical to the name portion of the image files , ,  on the distributed server . However, unlike the image files , ,  on the distributed server , the image files , ,  on the central server may have a different version number portion (shown as \u201cy\u201d).","It should be appreciated that, in some embodiments, the files on the central server are not directly editable by others having access through the distributed servers . The reason being that such direct access can, in some instances, result in undesired tampering of files on the central server. Thus, in exemplary embodiments, only those having permission, as identified by a systems administrator, to access the central server would be able to edit the files on the central server. In other embodiments, however, those files on the central server can also be configured to be accessible by others.","The version number of the image files , ,  on the central server  represent the most current version of the files. Thus, if the distributed server has been updated to contain the most current version of the image files, then the version number portion (\u201cx\u201d) on the distributed server will match the version number portion (\u201cy\u201d) on the central server .  illustrate several exemplary embodiments in which the distributed server checks the central server  and updates its contents accordingly.","It should be appreciated that, for some embodiments, not all images files are correlated to an original sensitive text. For example, a hyper-text markup language (HTML) web-page may include original images that were not the result of a conversion. For those images, there would be no correlative text. Thus, in some embodiments, another identifier may be supplied, which labels the images to identify whether the image originated from a text, or whether the image is an original image that is not the result of a conversion. Consequently, for some embodiments, only those converted images may be easily editable, as described herein.",{"@attributes":{"id":"p-0089","num":"0088"},"figref":["FIG. 16","FIG. 16","FIG. 16","FIG. 14","FIG. 17"],"b":["1340","1340","1340","1610","1610","1340","1620","1415","1340","1415","1620","1415","1340","1630"],"i":["n ","n","n ","n ","n ","n "]},{"@attributes":{"id":"p-0090","num":"0089"},"figref":["FIG. 17","FIG. 16","FIG. 17","FIG. 14","FIG. 17"],"b":["1415","1415","1705","1480","1705","1480","1415","1710","1710","1715","1330","1330","1415","1720"]},"If the version numbers match, then the version script  sets () the local document content as the most current version. Thereafter, the version script  determines whether or not all of the document contents have been checked for the most current version. If all of the contents have been checked, then the process ends. If all of the contents have not been checked, then the version script  retrieves () the next document content, and the process repeats. For example, once the \u201cname.jpg.x\u201d has been checked for the most current version, the version script  checks \u201cemail.jpg.x.\u201d Thereafter, \u201cphone.jpg.x\u201d would be checked, and any other contents that are associated with the requested document.","If the version number of the local document content is determined () to be different from the version number of the content on the central server , then the version script  requests () updated content from the central server . When the central server provides the updated content, the distributed server receives () the updated content. The updated content is then set () as the local document content. In other words, for some embodiments, the local document content is replaced by the updated content from the central server . Thereafter, the local document content (which is now the updated document content) is set () as the most current version of the content. The version script  then determines whether or not all document contents have been checked against the contents of the central server .","In the specific example of , presuming that none of the contents on the distributed server are current, the files \u201cname.jpg.x\u201d , \u201cemail.jpg.x\u201d , and \u201cphone.jpg.x\u201d  would be replaced by \u201cname.jpg.y\u201d , \u201cemail.jpg.y\u201d , and \u201cphone.jpg.y\u201d  from the central server . Thereafter, those updated files would be returned to the client that originally requested the electronic document and all of its contents.","As shown in the embodiments of , each of the distributed servers  can stay current by checking their contents against the contents of the central server . In that regard, rather than pushing any updates to a large number of distributed servers , the contents of all of the distributed servers can be updated by simply updating the contents at the central server . Also, since only the versions of various files are being checked, rather than downloading the entire contents of the electronic document at each request, bandwidth is conserved and network traffic is reduced. Also, since only those outdated or obsolete files are retrieved from the central server , rather than retrieving all files, less bandwidth is occupied when compared to systems that download complete contents at each request. Furthermore, since each distributed server  queries the central server  in response to requests from clients, bottlenecks associated with synchronized downloading are reduced. In other words, unlike other approaches in which all of the distributed servers are synchronized concurrently by the central server  (also referred to as a \u201cpushing data\u201d from the central server ), the query approach (also referred to as \u201cpulling data\u201d by the distributed servers ) temporally distributes the use of network bandwidth.","According to exemplary embodiments, the identification logic , the text-string identification logic , the personal-information-identification logic , the image-generation logic , the conversion logic , the substitution logic , the image-selection receive logic , , the correlation logic , , the database access logic , , the display logic , , text-string transmit logic , , the text-string receive logic , , the image-generation logic , , the store logic , , the image-replacement logic , , and the image-delete logic ,  can be implemented in hardware, software, firmware, or a combination thereof. According to exemplary embodiment(s), the identification logic , the text-string identification logic , the personal-information-identification logic , the image-generation logic , the conversion logic , the substitution logic , the image-selection receive logic , , the correlation logic , , the database access logic , , the display logic , , text-string transmit logic , , the text-string receive logic , , the image-generation logic , , the store logic , , the image-replacement logic , , and the image-delete logic ,  are implemented in software or firmware that is stored in a memory and that is executed by a suitable instruction execution system.","If implemented in hardware, as in an alternative embodiment, the identification logic , the text-string identification logic , the personal-information-identification logic , the image-generation logic , the conversion logic , the substitution logic , the image-selection receive logic , , the correlation logic , , the database access logic , , the display logic , , text-string transmit logic , , the text-string receive logic , , the image-generation logic , , the store logic , , the image-replacement logic , , and the image-delete logic ,  can be implemented with any or a combination of the following technologies, which are all well known in the art: a discrete logic circuit(s) having logic gates for implementing logic functions upon data signals, an application specific integrated circuit (ASIC) having appropriate combinational logic gates, a programmable gate array(s) (PGA), a field programmable gate array (FPGA), etc.","Any process descriptions or blocks in flow charts should be understood as representing modules, segments, or portions of code which include one or more executable instructions for implementing specific logical functions or steps in the process, and alternate implementations are included within the scope of the preferred embodiment of the present invention in which functions may be executed out of order from that shown or discussed, including substantially concurrently or in reverse order, depending on the functionality involved, as would be understood by those reasonably skilled in the art of the present invention.","The selective text-to-image conversion program , the editor program , , and the version script , which comprises an ordered listing of executable instructions for implementing logical functions, can be embodied in any computer-readable medium for use by or in connection with an instruction execution system, apparatus, or device, such as a computer-based system, processor-containing system, or other system that can fetch the instructions from the instruction execution system, apparatus, or device and execute the instructions. In the context of this document, a \u201ccomputer-readable medium\u201d can be any means that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device. The computer-readable medium can be, for example but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, device, or propagation medium. More specific examples (a nonexhaustive list) of the computer-readable medium would include the following: an electrical connection (electronic) having one or more wires, a portable computer diskette (magnetic), a random access memory (RAM) (electronic), a read-only memory (ROM) (electronic), an erasable programmable read-only memory (EPROM or Flash memory) (electronic), an optical fiber (optical), and a portable compact disc read-only memory (CDROM) (optical). Note that the computer-readable medium could even be paper or another suitable medium upon which the program is printed, as the program can be electronically captured via, for instance, optical scanning of the paper or other medium, then compiled, interpreted or otherwise processed in a suitable manner if necessary, and then stored in a computer memory.","Although exemplary embodiments have been shown and described, it will be clear to those of ordinary skill in the art that a number of changes, modifications, or alterations to the invention as described may be made. For example, while a personal computer is shown as an example embodiment of a system, it should be appreciated that the system can be implemented using other programmable devices, such as, for example, a personal digital assistant (PDA), an Internet-capable cellular telephone, etc.","Additionally, while some embodiments show localized processing of the various functions, those having skilled in the art will appreciate that the various functions can be provided in a distributed environment in which various servers provide the disclosed functions. In that regard, it should be appreciated that, rather than being a program residing on a single computer, other embodiments contemplate a client-server architecture in which various subroutines or code segments reside at a server and are accessed by clients that generate requests for those subroutines. Since client-server environments are known in the art, further discussion of client-server environments is omitted here.","Also, for some embodiments, it should be appreciated that, rather than directly providing a substantially unsearchable image, the substantially unsearchable image can be indirectly provided by placing a universal resource locator (URL) for the image within the document. In that regard, the images can be stored in a web-accessible repository, and the electronic document can include the URL or link to the document in the web-accessible repository. It should be appreciated that the correlation database and\/or storage of images could exist at separate locations from the web pages themselves that reference those images. For such embodiments, the remote access can be provided as a service, which can be charged to the user on a per-use basis or other commercial basis. This service can be similar to known banner advertising server mechanisms, which generate advertisements based upon a particular user address identifiers (e.g., Internet protocol (IP) address). Preferably, a one-to-one relationship can be implemented, in which a particular user address identifier is linked with a particular image. Thus, for example, should an administrator at a particular IP address wish to change an image that is linked to a URL, that administrator can automatically be charged a nominal fee in exchange for the convenience of a web-based mechanism for altering that server-side image.","Moreover, for some embodiments, the text can be replaced with an inline \u201cIMG\u201d tag in hypertext markup language (HTML), which references an image that shows the text of the image in the same format as the original basic text. For those embodiments, the image conversion mechanism can also be configured to track text format, size, font, and other text characteristics so that the image seamlessly appears as text within the electronic document. Thus, for those embodiments, should the text of an electronic document be changed, then corresponding changes to the images will take place throughout the document. In that regard, the editor can be further configured to adaptively recognize and adapt the images automatically, in response to various changes within the electronic document.","All such changes, modifications, and alterations should therefore be seen as within the scope of the disclosure."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Many aspects of the disclosure can be better understood with reference to the following drawings. The components in the drawings are not necessarily to scale, emphasis instead being placed upon clearly illustrating the principles of the present disclosure. Moreover, in the drawings, like reference numerals designate corresponding parts throughout the several views.",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 6A","FIG. 5"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 6B","FIG. 5"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 9","FIG. 8"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 14","FIG. 13"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 15","FIG. 13"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 17","FIG. 16"]}]},"DETDESC":[{},{}]}
