---
title: Systems and methods for virtualizing software associated with external computer hardware devices
abstract: A method for virtualizing software associated with external computer hardware devices. The method may include maintaining a virtualized device profile associated with an external hardware device and receiving a request to provide the virtualized device profile to a client system to which the external hardware device can be temporarily connected. The method may also include downloading the virtualized device profile to the client system and installing the virtualized device profile as one or more virtualization layers on the client system. The method may further include activating the one or more virtualization layers to enable the virtualized device profile to be used to interact with the external hardware device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08881140&OS=08881140&RS=08881140
owner: Symantec Corporation
number: 08881140
owner_city: Mountain View
owner_country: US
publication_date: 20090904
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["Users may access multiple computing devices in a variety of environments. For example, a user may move from one workstation to another in an enterprise environment. Similarly, a user may work on a work desktop at work, a home desktop at home, and a laptop while traveling. When moving from one computer to another, a user may also move an external hardware device from one computer to another.","Each time a user moves an external hardware device from one computer to another, the user may need to go through the process of reinstalling and\/or reconfiguring software for the external hardware device. For example, the user may need to reinstall drivers, reinstall applications, and\/or reconfigure settings when moving an external hardware device from one computer to another computer. What is needed, therefore, is a more efficient and effective way to manage software associated with external hardware devices in multi-computer environments.","As will be described in greater detail below, the instant disclosure generally relates to systems and methods for virtualizing software associated with external computer hardware devices. Embodiments of the instant disclosure may facilitate efficient and effective use of external hardware devices that may be moved between computers. Embodiments of the instant disclosure may also facilitate installing software on a computing device in other contexts. For example, a method may include maintaining a virtualized device profile associated with an external hardware device. The method may also include receiving a request to provide the virtualized device profile to a client system to which the external hardware device can be temporarily connected. The method may further include downloading the virtualized device profile to the client system, installing the virtualized device profile as one or more virtualization layers on the client system, and activating the one or more virtualization layers to enable the virtualized device profile to be used to interact with the external hardware device.","In some embodiments, the method may include identifying a user that is using the client system and selecting, based on the identification of the user, the virtualized device profile from a set of virtualized device profiles associated with the external hardware device. The virtualized device profile may include user-customized settings associated with the external hardware device and the user, and the request to provide the virtualized device profile to the client system may be received in response to the user logging onto the client system.","According to certain embodiments, the method may include determining that a virtualization agent is not installed on the client system and downloading the virtualization agent to the client system. The virtualization agent may be programmed to manage application virtualization layers, and activating the virtualization agent may be performed by the virtualization agent. The method may further include uninstalling the virtualization agent from the client system when the external hardware device is disconnected from the client system.","The method may include determining that a driver for the external hardware device is not installed on the client system. In such embodiments, downloading the virtualized device profile to the client system may include downloading the driver to the client system and installing the virtualized device profile to the client system in a virtualization layer may include installing the driver to the client system in the virtualization layer.","In certain embodiments, the method includes deactivating the virtualization layer when the hardware device is disconnected from the client system and\/or a user logs off the client system. After the virtualization layer is deactivated, the virtualization layer may be deleted. According to some embodiments, the method may include detecting connection of the external hardware device to the client system. In such embodiments, the request to provide the virtualized device profile to the client system may be performed in response to detecting the connection of the external hardware device.","According to various embodiments, a system may include a storage device configured to store a virtualized device profile associated with an external hardware device. The system may also include a detection module programmed to receive a request to provide the virtualized device profile to a client system to which the external hardware device can be temporarily connected. The system may further include a download module programmed to download the virtualized device profile to the client system, an installation module programmed to install the virtualized device profile to the client system in a virtualization layer, and a virtualization module programmed to activate the virtualization layer to enable the virtualized device profile to be used to interact with the external hardware device. The system may include at least one processor programmed to execute the detection module, the download module, the installation module, and the virtualization module.","The detection module is further programmed to identify a user that is using the client system and select, based on the identification of the user, the virtualized device profile from a set of virtualized device profiles associated with the external hardware device. In some embodiments, the virtualized device profile may include user-customized settings associated with the external hardware device and the user. Additionally or alternatively, the request to provide the virtualized device profile to the client system may be received in response to the user logging onto the client system.","According to various embodiments, the detection module may be further programmed to determine that a driver for the external hardware device is not installed. In such embodiments, the virtualized device profile may include the driver for the external hardware device.","The virtualization module may be programmed to deactivate the virtualization layer when the hardware device is disconnected from the client system and\/or a user logs off the client system. The virtualization module may also be programmed to delete the virtualization layer after the virtualization layer is deactivated. Additionally or alternatively, the detection module may be programmed to detect connection of the external hardware device to the client system. In such embodiments, the request to provide the virtualized device profile to the client system may be performed in response to detecting the connection of the external hardware device.","In certain embodiments, A computer-readable-storage medium may include one or more computer-executable instructions that, when executed by a computing device, cause the computing device to (1) maintain a virtualized device profile associated with an external hardware device, (2) receive a request to provide the virtualized device profile to a client system to which the external hardware device can be temporarily connected, (3) download the virtualized device profile to the client system, (4) install the virtualized device profile to the client system in a virtualization layer, and (5) activate the virtualization layer to enable the virtualized device profile to be used to interact with the external hardware device. The one or more computer-executable instructions may be further programmed to cause the computing device to identify a user that is using the client system and select, based on the identification of the user, the virtualized device profile from a set of virtualized device profiles associated with the external hardware device.","Features from any of the above-mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments, features, and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.","Throughout the drawings, identical reference characters and descriptions indicate similar, but not necessarily identical, elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms, specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However, the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather, the instant disclosure covers all modifications, equivalents, and alternatives falling within the scope of the appended claims.","As will be described in greater detail below, the instant disclosure generally relates to systems and methods for virtualizing software associated with external computer hardware devices. Systems and methods described herein may use virtualized device profiles to enable users to efficiently and effectively move external hardware devices from one computing device to another computing device. Virtualized device profiles may include one or more device drivers, applications, and or settings used to interface with an external hardware device.","A virtualized device profile may be stored at a location where the virtualized device profile is accessible to multiple computers accessed by a user or group of users. Thus, when a user connects an external hardware device to one of the computers, the computer may download the virtualized device profile. The virtualized device profile may then be installed on the computer as a virtualization layer, and the virtualization layer may be activated to enable the virtualized device profile to be used to interact with the external hardware device.","Embodiments of the instant disclosure may provide various features and advantages over traditional hardware device installation systems. For example, installation of a virtualized device profile may be performed quickly and\/or with little or no user interaction. Furthermore, since the virtualized device profile is installed as a virtualization layer (or multiple virtualization layers), the virtualized device profile may be efficiently removed and\/or deactivated when the virtualized device profile is no longer needed.","The following will provide, with reference to , detailed descriptions of exemplary systems for virtualizing software associated with external computer hardware devices. Detailed descriptions of corresponding computer-implemented methods will also be provided in connection with . Detailed descriptions of exemplary virtualization systems are provided in . In addition, detailed descriptions of an exemplary computing system and network architecture capable of implementing one or more of the embodiments described herein will be provided in connection with , respectively.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 1","b":["100","100","102","100","104","100","106"]},"In addition, and as will be described in greater detail below, exemplary system  may include an installation module  programmed to install the virtualized device profile as one or more virtualization layers on the client system. System  may also include a virtualization module  programmed to activate the one or more virtualization layers to enable the virtualized device profile to be used to interact with the external hardware device. Although illustrated as separate elements, one or more of modules  in  may represent portions of a single module or application.","In certain embodiments, one or more of modules  in  may represent one or more software applications or programs that, when executed by a computing device, may cause the computing device to perform one or more tasks. For example, as will be described in greater detail below, one or more of modules  may represent software modules stored and configured to run on one or more computing devices, such as the system illustrated in , computing system  in , and\/or portions of exemplary network architecture  in . One or more of modules  in  may also represent all or portions of one or more special-purpose computers configured to perform one or more tasks.","As illustrated in , exemplary system  may also include one or more databases . Databases  may represent portions of a single database or computing device or a plurality of databases or computing devices. In one embodiment, exemplary system  may include a virtualized device profile database  for storing one or more virtualized device profiles. Virtualized device profile database  may associate one or more virtualized device profiles with one or more external hardware devices and\/or one or more users. System  may also include a virtualization software database that may store one or more virtualization agents for one or more computer platforms.","Databases  in  may represent a portion of one or more computing devices. For example, databases  may represent a portion of server  in , computing system  in , and\/or portions of exemplary network architecture  in . Alternatively, databases  in  may represent one or more physically separate devices capable of being accessed by a computing device, such as server  in  computing system  in  and\/or portions of exemplary network architecture  in .","Exemplary system  in  may be deployed in a variety of ways. For example, all or a portion of exemplary system  may represent portions of a cloud-computing or network-based environment, such as exemplary system  illustrated in . Cloud-computing environments may provide various services and applications via the Internet. These cloud-based services (e.g., software as a service, platform as a service, infrastructure as a service, etc.) may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud-based computing environment.","As shown in , system  may include a computing system , a computing system , a network , a server , and an external hardware device . In some embodiments, server  may be an enterprise server, and computing systems  and  may be computing devices managed by the enterprise. In other embodiments, computing systems  and  may be a user's personal computing systems, and server  may host a third party service for managing virtualized device profiles.","As shown, server  may include detection module , download module , installation module , virtualization module , software database , and virtualization software database . In other embodiments all or a portion of one or more of the modules and\/or databases on server  may be located on one or both of computing systems  and .","Computing systems  and  generally represent any type or form of computing device capable of reading computer-executable instructions. Examples of computing systems  and\/or  include, without limitation, laptops, desktops, servers, cellular phones, personal digital assistants (\u201cPDAs\u201d), multimedia players, embedded systems, combinations of one or more of the same, exemplary computing system  in , or any other suitable computing device.","Server  generally represents any type or form of computing device that is capable of managing virtualized device profiles. Examples of server  include, without limitation, application servers and database servers configured to perform various functions described herein. While  shows server  supporting two computing systems, in other embodiments server  may support any number of computing systems.","Server , computing system , and computing system  may communicate over network . Network  generally represents any medium or architecture capable of facilitating communication or data transfer. Examples of network  include, without limitation, an intranet, a Wide Area Network (\u201cWAN\u201d), a Local Area Network (\u201cLAN\u201d), a Personal Area Network (\u201cPAN\u201d), the Internet, Power Line Communications (\u201cPLC\u201d), a cellular network (e.g., a GSM Network), exemplary network architecture  in , or the like. Network  may facilitate communication or data transfer using wireless or wired connections.","As noted, system  may include external hardware device . As used herein, the phrase \u201cexternal hardware device\u201d generally refers to any hardware device configured to connect to a computing system via an external communication port of the computing system. External hardware devices include, but are not limited to, printers, Universal Serial Bus (\u201cUSB\u201d) drives, optical drives, external hard drives, cameras, monitors, mp3 players, mobile phones, wireless routers, scanners, and various other devices that may be connected to a computing system. External hardware devices may connect to a computing system via a USB port, a FIREWIRE port, a VGA port, a wireless network, a Bluetooth network, and\/or any other external port or communication mechanism of a computing system.","As shown in , external hardware device  may be connected to computing system . When external hardware device  is connected to computing system , a virtualized device profile may be installed and activated on computing system . The virtualized device profile may enable interaction with external hardware device . A user may move from computing system  to computing system , and may disconnect external hardware device  from computing system  and connect external hardware device  to computing system . As discussed below, when external hardware device  is disconnected from computing system , the virtualized device profile may be deactivated and\/or deleted. Conversely, when external hardware device  is connected to computing system , the virtualized device profile may be downloaded from server  and installed on computing system .",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 3","FIG. 3","FIG. 3","FIG. 1","FIG. 2"],"b":["300","100","200","302","200","206","203","202"]},"The virtualized device profile may contain one or more drivers, applications, and\/or settings associated with the external hardware device. One or more of the drivers, applications, and\/or settings in the virtualized device profile may be stored as a virtualization layer that may be installed and activated on a client system. For example, the virtualized device profile may include a virtualization layer that includes an application and application settings associated with the external hardware device. The same virtualization layer may also include a driver for the external hardware device. Alternatively, the virtualized device profile may include a first virtualization layer that includes an application associated with the external hardware device and a second virtualization layer that include a driver for the external hardware device.","Applications, settings, and\/or drivers provided in a virtualization layer may be referred to as virtualized software components. Applications, settings, and\/or drivers may be virtualized by being installed to a directory structure referred to as a virtualization layer. As discussed in , a virtualization layer may be a layer to which a file system filter driver redirects calls when the virtualization layer is installed on a client system.","In some embodiments, one or more components of the virtualized device profile may not be virtualized (i.e., provided in a virtualization layer). For example, an application and settings associated with an external hardware device may be virtualized, while a driver associated with the external hardware device may not be virtualized. In other embodiments, only the application associated with the external hardware device may be virtualized, and any drivers or settings provided with the application may not be virtualized.","At step , detection module  may receive a request to provide the virtualized device profile to a client system to which the external hardware device can be temporarily connected. Detection module  may receive the request in a variety of contexts. For example, detection module  may receive the request when a user logs onto a computing device, when the external hardware device is connected to the computing device, in response to a user request, and\/or in any other suitable manner.","As noted, detection module  may receive the request to provide the virtualized device profile to a client system in response to a user logging on to the client system. For example, a user may log onto computing system . After the user logs onto computing system , detection module  may identify the user (e.g., using log-in information or any other suitable identification information associated with the user). Detection module  may use the identification information to determine that the user is associated with the software. Detection module  may select the virtualized device profile from a set of virtualized device profiles. For example, a database, such as virtualized device profile database , may store numerous virtualized device profiles for one or more users and\/or groups of users. Thus, detection module  may use the identification information of the user, which may be identification of the user or a user group the user is associated with, to identify a virtualized device profile associated with the user.","In addition to and\/or instead of being triggered by user login, the request to provide the virtualized device profile to the client system may be triggered by detecting that the external hardware device has connected to the client system. For example, a user may log into computing system  and may then connect external hardware device  to computing system . Detection module  may detect connection of external hardware device  to computing system . For example, detection module  may hook an Application Programming Interface (\u201cAPI\u201d) of computing system  that detects new hardware being added to computing system .","In some embodiments, detection module  may also determine whether a driver (or other software component) associated with the external hardware device is already installed. For example, detection module  may search for hardware drivers on computing system  to determine whether computing system  already includes a driver that supports the external hardware device. If computing system  already includes the driver needed for the external hardware device, detection module  may indicate that the driver does not need to be downloaded and\/or installed to computing system . If the driver has not been installed, the driver may be downloaded to computing system  and installed in a virtualization layer, through a command line script, using plug-in-play functionality supported by an operating system of the client system, and\/or in any other suitable manner.","At step , download module  may download the virtualized device profile to the client system, and at step , installation module  may install the virtualized device profile to the client system in one or more virtualization layers. Installation module  may install the virtualized device profile in a variety of manners. For example, installation module  may install the virtualized device profile by copying the virtualized device profile to a location to which calls to the virtualized device profile may be directed. Additionally or alternatively, installation module  may install the virtualized device profile by providing a virtualization agent, such as virtualization module , with information about the location to which the virtualized device profile was downloaded. In some embodiments, installation module  may install the virtualized device profile by simply informing a virtualization agent that the virtualized device profile has been downloaded.","In some embodiments, detection module  may determine whether a virtualization agent, such as virtualization module , is installed on the client system. If a virtualization agent is not already installed on the client system, detection module  may initiate download and installation of a virtualization agent. For example, a virtualization agent compatible with the platform of the client system may be located in virtualization software database  and downloaded to the client system. The virtualization agent may then be installed on the client system.","Once a virtualization agent is installed on the client system, at step  the virtualization agent (e.g., virtualization module ) may activate the one or more virtualization layers to enable the software to be used to interact with the external hardware device. The virtualization agent may activate virtualization layers by making the virtualization layers visible to an operating system of the client system. Activation and deactivation of virtualization layers is described in greater detail below in .","When the virtualized device profile is no longer needed on the client system, the virtualization layer (or layers) that includes the virtualized device profile may be deactivated and\/or deleted. Furthermore, if a non-virtualized driver was installed to support the external hardware device, the non-virtualized driver may be uninstalled and deleted. Similarly, if a virtualization agent was downloaded and installed to support management of the virtualization layers, the virtualization agent may be uninstalled and\/or deleted.","The following description provides an example of how the method disclosed in  and the system of  may be implemented in an enterprise environment. In this example, computing systems  and  may be workstations that are accessed by a number of different users. Each user may be associated with a virtualized device profile stored in virtualized device profile database . The virtualized device profiles may be associated with an audio recording device and may each include settings specific to a particular user.","A user in the enterprise may log onto computing system  and may connect the audio recording device to computing system , which may cause detection module  to identify a virtualized device profile associated with the audio recording device and the user. Download module  may download the virtualized device profile to computing system . Then, installation and virtualization modules  and  may install and activate the virtualized device profile.","The virtualized device profile may include audio recording software that supports the audio recording device and a driver needed by the audio recording device. While using the recording software, the user may update one or more settings of the recording software. In some embodiments, the virtualized device profile may be updated with these settings (e.g., the new settings may be uploaded to the virtualized device profile stored in virtualized device profile database ). When the user is done using the audio recording device, the user may disconnect the device, and the virtualized device profile may be deactivated and removed from computing system .","As another example, the method disclosed in  and the system of  may be implemented in a home environment. In this example, computing system  may be a laptop of a user and computing system  may be a desktop of the user. Virtualized device profile database  may store one or more virtualized device profiles for one or more external hardware devices of the user. For example, virtualized device profile database  may store a virtualized device profile for a digital camera.","When the user connects the camera to computing system , the virtualized device profile for the digital camera may be downloaded to computing system . The virtualized device profile for the digital camera may include a picture editing software application and a driver for the digital camera. Computing system  may already have a driver for the digital camera; thus, only the picture editing software application may be installed as a virtualization layer to computing system .","In this example, a virtualization agent may also need to be downloaded to computing system . After the virtualization agent is downloaded and installed on computing system , the virtualization agent may activate the virtualization layer that includes the picture editing software application, and the picture editing software application may be automatically launched. Downloading and installing the virtualization agent and the virtualized device profile may be performed automatically and silently (e.g., in a background process) in a manner that is transparent to the user. When the user is done with the digital camera, the virtualized device profile may be deactivated but may not be deleted. Thus, when the user connects the digital camera to computing device  in the future, the virtualized device profile may simply be activated to allow the user to access the picture editing software.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIGS. 4-7","FIG. 4"],"b":["400","410","410","400","408","408","406","408","406","404","406","410","412","412","401","406","402"]},"In some application-virtualization technologies, each virtualization layer may include two sublayers: a read-only sublayer and a writable sublayer. An example of a virtualization technology that utilizes read-only and read-write sublayers is SYMANTEC WORKSPACE VIRTUALIZATION (\u201cSWV\u201d).","A read-only sublayer may include an immutable base state of an application and\/or hardware driver. In some embodiments, users may not\u2014even unintentionally\u2014make changes to the read-only sublayer. For example, in SWV, only administrators may be able to edit, update, and\/or delete the contents of read-only sublayers. An application and\/or hardware driver may be reset by deleting the existing read-only sublayer and replacing it with a new read-only sublayer.","A read-write (i.e., writeable) sublayer may capture changes to a base state of an application and\/or driver. For example, when a user alters an application by changing default preferences, these changes may be written to the read-write sublayer.","Virtualized applications and\/or drivers that include read-only sublayers and read-write sublayers may be created in any suitable manner. For example, a virtualization agent may allow a user to specify a setup program for an application the user wants to capture for purposes of virtualizing the application. The virtualization agent may launch the setup program and capture all of the applications, files, and processes, including child processes and process-induced changes, in a single Virtual Software Package (\u201cVSP\u201d). The virtualization agent may also capture MICROSOFT installer (\u201cMSI\u201d) and service control manager changes. When the setup process is complete, the virtualization agent may automatically stop the capture process. An administrator may then edit the VSP to include settings that the administrator wants to distribute to users.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 5","FIG. 5"],"b":["500","501","501","502","504","502","504","506","501","508","501","502","502","508","502","502","504","506","504","506","508","502"]},"Application  may make another file access . The virtualization system may not find a corresponding entry in layer B , but may find an entry in layer A . A third file access request  may not have a corresponding entry in layer B  or layer A , and the virtualization system may therefore return an entry from base file system .",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 6","b":["600","614","614","616","618","612","614","601","612","608","601","612"]},"Management application  may provide notices to a WINDOWS EXPLORER  indicating that the contents of a mounted file system have been changed. Other applications  may interact with the system, performing read and write operations to the file system and registry through file system filter driver . A compression library  may be provided to compress layer information.","File system filter driver  may store components of each layer and sublayer in one of two redirect areas (i.e. areas to which it redirects system calls). For example, file system filter driver  may store registry settings and attributes in a registry subsystem  and may store files in a file system subsystem .","In each sublayer's registry redirection area, file system filter driver  may store information about the state of the layer to which the sublayer belongs. File system filter driver  may also store references to the sublayer's file redirection area, reference counts, and sub-keys that\u2014through a service control manager\u2014may enable it to handle duplicate services running in multiple layers. In addition, file system filter driver  may store references to registry keys that contain user identity information, data-layer specifications, a sub-key for information about exclude entries, and a list of variables that govern the location of layer-specific files. As the name suggests, exclude entries may define application files and processes that a user may want to exclude from layers.","In the root of the file redirection area, file system filter driver  may store variable entries that abstract operating system specific file locations to enable users to deploy Virtual Software Archives (\u201cVSAs\u201d) on computers running various types of operating systems. When file system filter driver  is loaded on a user's computer, file system filter driver  may determine values for user and system variables.","File system filter driver  may store files that comprise sublayers and numbered folders under a file-redirection-area directory. File system filter driver  may use registry and file redirection areas to present to an operating system\u2014and by extension, applications and users\u2014with an aggregate view of virtualized files and data.","For example, a user may launch WINDOWS EXPLORER to view the contents of a program file folder. The user's machine may be running a virtualized application, such as MOZILLA FIREFOX, and the FIREFOX layer may be active. File system filter driver  may intercept EXPLORER's calls to the file system. From the base, which may include all files, settings, and processes that do not reside in layers on the user's machine, file system filter driver  may gather a list of non-virtualized applications that reside in the program files folder. File system filter driver  may also redirect Explorer's calls to include FIREFOX, which would normally reside in the program files folder but which, in this case, resides in the file redirection area. File system filter driver  may then respond to EXPLORER's calls with a complete list of folders that the system expects to see in the program files directory, including FIREFOX. In this example, if the FIREFOX layer were deactivated, file system filter driver  would obscure its existence.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 7","b":["702","706","702","704","706","704"],"i":["a","n","a","n","a","n ","a","n"]},"A layer may isolate an application from a base file system and may include files and a directory structure of the application's installation. The application files and directories may be shadowed or overlaid over the regular file system. Shared libraries (such as DLLs), system accessible configuration (such as registry entries), and version control may be managed by a layering subsystem.","Though each layer may be a separate and individual entity within a computing system, the application files, data, and system-accessible configuration may be presented as though they resided in their respective ordinary locations. Thus, an application stored in a layer may appear to the operating system of a computing system as if it had been installed using traditional installation techniques.","A software application installed in a virtualization layer may be an application in any commonly used meaning, including word processors, browsers, system tools, games, and the like, and the principles described herein may also extend to any other software installed on a computing system. Similarly, a hardware driver installed in a virtualization layer may be an suitable hardware driver for any suitable external hardware device.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 8","b":["810","810","810","810","814","816"]},"Processor  generally represents any type or form of processing unit capable of processing data or interpreting and executing instructions. In certain embodiments, processor  may receive instructions from a software application or module. These instructions may cause processor  to perform the functions of one or more of the exemplary embodiments described and\/or illustrated herein. For example, processor  may perform and\/or be a means for performing, either alone or in combination with other elements, one or more of the maintaining, receiving, downloading, installing, activating, identifying, selecting, determining, deactivating, and detecting steps described herein. Processor  may also perform and\/or be a means for performing any other steps, methods, or processes described and\/or illustrated herein.","System memory  generally represents any type or form of volatile or non-volatile storage device or medium capable of storing data and\/or other computer-readable instructions. Examples of system memory  include, without limitation, random access memory (RAM), read only memory (ROM), flash memory, or any other suitable memory device. Although not required, in certain embodiments computing system  may include both a volatile memory unit (such as, for example, system memory ) and a non-volatile storage device (such as, for example, primary storage device , as described in detail below). In one example, one or more of modules  from  may be loaded into system memory .","In certain embodiments, exemplary computing system  may also include one or more components or elements in addition to processor  and system memory . For example, as illustrated in , computing system  may include a memory controller , an Input\/Output (I\/O) controller , and a communication interface , each of which may be interconnected via a communication infrastructure . Communication infrastructure  generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure  include, without limitation, a communication bus (such as an ISA, PCI, PCIe, or similar bus) and a network.","Memory controller  generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example, in certain embodiments memory controller  may control communication between processor , system memory , and I\/O controller  via communication infrastructure . In certain embodiments, memory controller may perform and\/or be a means for performing, either alone or in combination with other elements, one or more of the steps or features described and\/or illustrated herein, such as maintaining, receiving, downloading, installing, activating, identifying, selecting, determining, deactivating, and detecting.","I\/O controller  generally represents any type or form of module capable of coordinating and\/or controlling the input and output functions of a computing device. For example, in certain embodiments I\/O controller  may control or facilitate transfer of data between one or more elements of computing system , such as processor , system memory , communication interface , display adapter , input interface , and storage interface . I\/O controller  may be used, for example, to perform and\/or be a means for performing, either alone or in combination with other elements, one or more of the maintaining, receiving, downloading, installing, activating, identifying, selecting, determining, deactivating, and detecting steps described herein. I\/O controller  may also be used to perform and\/or be a means for performing other steps and features set forth in the instant disclosure.","Communication interface  broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system  and one or more additional devices. For example, in certain embodiments communication interface  may facilitate communication between computing system  and a private or public network including additional computing systems. Examples of communication interface  include, without limitation, a wired network interface (such as a network interface card), a wireless network interface (such as a wireless network interface card), a modem, and any other suitable interface. In at least one embodiment, communication interface  may provide a direct connection to a remote server via a direct link to a network, such as the Internet. Communication interface  may also indirectly provide such a connection through, for example, a local area network (such as an Ethernet network), a personal area network, a telephone or cable network, a cellular telephone connection, a satellite data connection, or any other suitable connection.","In certain embodiments, communication interface  may also represent a host adapter configured to facilitate communication between computing system  and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include, without limitation, SCSI host adapters, USB host adapters, IEEE 1394 host adapters, SATA and eSATA host adapters, ATA and PATA host adapters, Fibre Channel interface adapters, Ethernet adapters, or the like. Communication interface  may also allow computing system  to engage in distributed or remote computing. For example, communication interface  may receive instructions from a remote device or send instructions to a remote device for execution. In certain embodiments, communication interface  may perform and\/or be a means for performing, either alone or in combination with other elements, one or more of the maintaining, receiving, downloading, installing, activating, identifying, selecting, determining, deactivating, and detecting steps disclosed herein. Communication interface  may also be used to perform and\/or be a means for performing other steps and features set forth in the instant disclosure.","As illustrated in , computing system  may also include at least one display device  coupled to communication infrastructure  via a display adapter . Display device  generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly, display adapter  generally represents any type or form of device configured to forward graphics, text, and other data from communication infrastructure  (or from a frame buffer, as known in the art) for display on display device .","As illustrated in , exemplary computing system  may also include at least one input device  coupled to communication infrastructure  via an input interface . Input device  generally represents any type or form of input device capable of providing input, either computer or human generated, to exemplary computing system . Examples of input device  include, without limitation, a keyboard, a pointing device, a speech recognition device, or any other input device. In at least one embodiment, input device  may perform and\/or be a means for performing, either alone or in combination with other elements, one or more of the maintaining, receiving, downloading, installing, activating, identifying, selecting, determining, deactivating, and detecting steps disclosed herein. Input device  may also be used to perform and\/or be a means for performing other steps and features set forth in the instant disclosure.","As illustrated in , exemplary computing system  may also include a primary storage device  and a backup storage device  coupled to communication infrastructure  via a storage interface . Storage devices  and  generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions. For example, storage devices  and  may be a magnetic disk drive (e.g., a so-called hard drive), a floppy disk drive, a magnetic tape drive, an optical disk drive, a flash drive, or the like. Storage interface  generally represents any type or form of interface or device for transferring data between storage devices  and  and other components of computing system . In one example, databases  from  may be stored in primary storage device .","In certain embodiments, storage devices  and  may be configured to read from and\/or write to a removable storage unit configured to store computer software, data, or other computer-readable information. Examples of suitable removable storage units include, without limitation, a floppy disk, a magnetic tape, an optical disk, a flash memory device, or the like. Storage devices  and  may also include other similar structures or devices for allowing computer software, data, or other computer-readable instructions to be loaded into computing system . For example, storage devices  and  may be configured to read and write software, data, or other computer-readable information. Storage devices  and  may also be a part of computing system  or may be a separate device accessed through other interface systems.","In certain embodiments, storage devices  and  may be used, for example, to perform and\/or be a means for performing, either alone or in combination with other elements, one or more of the maintaining, receiving, downloading, installing, activating, identifying, selecting, determining, deactivating, and detecting steps disclosed herein. Storage devices  and  may also be used to perform and\/or be a means for performing other steps and features set forth in the instant disclosure.","Many other devices or subsystems may be connected to computing system . Conversely, all of the components and devices illustrated in  need not be present to practice the embodiments described and\/or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system  may also employ any number of software, firmware, and\/or hardware configurations. For example, one or more of the exemplary embodiments disclosed herein may be encoded as a computer program (also referred to as computer software, software applications, computer-readable instructions, or computer control logic) on a computer-readable medium. The phrase \u201ccomputer-readable medium\u201d generally refers to any form of device, carrier, or medium capable of storing or carrying computer-readable instructions. Examples of computer-readable media include, without limitation, transmission-type media, such as carrier waves, and physical media, such as magnetic-storage media (e.g., hard disk drives and floppy disks), optical-storage media (e.g., CD- or DVD-ROMs), electronic-storage media (e.g., solid-state drives and flash media), and other distribution systems.","The computer-readable medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer-readable medium may then be stored in system memory  and\/or various portions of storage devices  and . When executed by processor , a computer program loaded into computing system  may cause processor  to perform and\/or be a means for performing the functions of one or more of the exemplary embodiments described and\/or illustrated herein. Additionally or alternatively, one or more of the exemplary embodiments described and\/or illustrated herein may be implemented in firmware and\/or hardware. For example, computing system  may be configured as an application specific integrated circuit (ASIC) adapted to implement one or more of the exemplary embodiments disclosed herein.",{"@attributes":{"id":"p-0094","num":"0093"},"figref":["FIG. 9","FIG. 8","FIG. 1"],"b":["900","910","920","930","940","945","950","910","920","930","810","910","100"]},"Similarly, servers  and  generally represent computing devices or systems, such as application servers or database servers, configured to provide various database services and\/or run certain software applications. Network  generally represents any telecommunication or computer network including, for example, an intranet, a wide area network (WAN), a local area network (LAN), a personal area network (PAN), or the Internet.","As illustrated in , one or more storage devices ()-(N) may be directly attached to server . Similarly, one or more storage devices ()-(N) may be directly attached to server . Storage devices ()-(N) and storage devices ()-(N) generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions. In certain embodiments, storage devices ()-(N) and storage devices ()-(N) may represent network-attached storage (NAS) devices configured to communicate with servers  and  using various protocols, such as NFS, SMB, or CIFS.","Servers  and  may also be connected to a storage area network (SAN) fabric . SAN fabric  generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric  may facilitate communication between servers  and  and a plurality of storage devices ()-(N) and\/or an intelligent storage array . SAN fabric  may also facilitate, via network  and servers  and , communication between client systems , , and  and storage devices ()-(N) and\/or intelligent storage array  in such a manner that devices ()-(N) and array  appear as locally attached devices to client systems , , and . As with storage devices ()-(N) and storage devices ()-(N), storage devices ()-(N) and intelligent storage array  generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions.","In certain embodiments, and with reference to exemplary computing system  of , a communication interface, such as communication interface  in , may be used to provide connectivity between each client system , , and  and network . Client systems , , and  may be able to access information on server  or  using, for example, a web browser or other client software. Such software may allow client systems , , and  to access data hosted by server , server , storage devices ()-(N), storage devices ()-(N), storage devices ()-(N), or intelligent storage array . Although  depicts the use of a network (such as the Internet) for exchanging data, the embodiments described and\/or illustrated herein are not limited to the Internet or any particular network-based environment.","In at least one embodiment, all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server , server , storage devices ()-(N), storage devices ()-(N), storage devices ()-(N), intelligent storage array , or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program, stored in server , run by server , and distributed to client systems , , and  over network . Accordingly, network architecture  may perform and\/or be a means for performing, either alone or in combination with other elements, one or more of the maintaining, receiving, downloading, installing, activating, identifying, selecting, determining, deactivating, and detecting steps disclosed herein. Network architecture  may also be used to perform and\/or be a means for performing other steps and features set forth in the instant disclosure.","As detailed above, computing system  and\/or one or more components of network architecture  may perform and\/or be a means for performing, either alone or in combination with other elements, one or more steps of an exemplary method for virtualizing software associated with external computer hardware devices.","While the foregoing disclosure sets forth various embodiments using specific block diagrams, flowcharts, and examples, each block diagram component, flowchart step, operation, and\/or component described and\/or illustrated herein may be implemented, individually and\/or collectively, using a wide range of hardware, software, or firmware (or any combination thereof) configurations. In addition, any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.","The process parameters and sequence of steps described and\/or illustrated herein are given by way of example only and can be varied as desired. For example, while the steps illustrated and\/or described herein may be shown or discussed in a particular order, these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and\/or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.","While various embodiments have been described and\/or illustrated herein in the context of fully functional computing systems, one or more of these exemplary embodiments may be distributed as a program product in a variety of forms, regardless of the particular type of computer-readable media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script, batch, or other executable files that may be stored on a computer-readable storage medium or in a computing system. In some embodiments, these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.","In certain embodiments, one or more of the software modules disclosed herein may be implemented in a cloud computing environment. Cloud computing environments may provide various services and applications via the internet. These cloud-based services (e.g., software as a service, platform as a service, infrastructure as a service, etc.) may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud-based computing environment. For example, data may be scanned, from, and\/or to a cloud computing environment and\/or one or more of modules  may operate in a cloud computing environment.","In addition, one or more of the modules described herein may transform data, physical devices, and\/or representations of physical devices from one form to another. For example, one or more of the modules described herein may transform a computing system into a computing system that supports an external hardware device by installing a virtualized profile database on the computing system.","The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.","Unless otherwise noted, the terms \u201ca\u201d or \u201can,\u201d as used in the specification and claims, are to be construed as meaning \u201cat least one of.\u201d In addition, for ease of use, the words \u201cincluding\u201d and \u201chaving,\u201d as used in the specification and claims, are interchangeable with and have the same meaning as the word \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate a number of exemplary embodiments and are a part of the specification. Together with the following description, these drawings demonstrate and explain various principles of the instant disclosure.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
