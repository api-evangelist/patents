---
title: Linking topics in a publish/subscribe messaging environment
abstract: Topics are linked in a publish/subscribe messaging environment. A first topic is linked to at least a second topic, and a message on the first topic is published to subscribers to the first topic. In the same transaction, any reference to the topics linked to the first topic are published in the message to subscribers of the topics linked to the first topic. A tree of topics is defined with topic nodes for each topic. A topic string is provided in a path through the tree of topics to a topic node, wherein the first topic and the at least a second topic have no commonality of topic string.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08874667&OS=08874667&RS=08874667
owner: International Business Machines Corporation
number: 08874667
owner_city: Armonk
owner_country: US
publication_date: 20110504
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["This invention relates, in general, to the field of messaging, and in particular, to linking topics in a publish\/subscribe messaging environment.","In a messaging environment where the publish\/subscribe paradigm is being used, typically a hierarchy of topics is created where topics further into the hierarchy are more specific to a particular area of interest. For example \/SPORT\/FOOTBALL\/CHELSEA would describe a hierarchy for the Chelsea (within London) football team results. It is possible to subscribe to multiple topics using a wildcard, for example subscribing on \/SPORT\/FOOTBALL\/# would lead to football results for all teams being delivered to the subscriber.","There may be other distinct parts of the topic tree which have a common sub-theme, for example, \/NEWS\/LONDON. While the themes of both parts of these trees may overlap, there is no commonality in the topic string, or in other words, the themes are on different branches of a tree. It would, therefore, require at least two subscriptions to be able to subscribe to both London-based topics. If a further topic string related to London but with no commonality in the topic string was introduced, it would require a further subscription to get that information.","According to one embodiment of the present invention there is provided a method for linking topics in a publish\/subscribe messaging environment. A first topic is linked to at least a second topic. A message on the first topic is published to subscribers to the first topic. In the same transaction, at least a second topic linked to the first topic is referenced to the at least a second topic linked to the first topic. The message is published to subscribers of the at least a second topic linked to the first topic.","According to a second aspect of the present invention, a computer program product links topics in a publish\/subscribe messaging environment. The product comprises a computer-readable storage medium, having computer readable program code embodied therewith. Computer readable program code is configured to link a first topic to at least a second topic. Computer readable program code is configured to publish a message on the first topic to subscribers of the first topic. Computer readable program code is configured to reference the at least a second topic linked to the first topic in a same transaction as publishing the message on the first topic","According to a third aspect of the present invention, a system links topics in a publish\/subscribe messaging environment. A processor and memory are connected to the processor, wherein the memory is encoded with instructions and wherein the instructions when executed comprise instructions for building a tree of topics comprising a topic node for each topic therein, in order to provide a topic string in a path through the tree of topics to a topic node for each topic therein. A linked list is provided at a first topic node of the tree of topics, the linked list comprising at least a second topic node for each topic therein. A message is published a on a first topic to subscribers to the first topic, and, in a same transaction references the linked list, and publishes the message to subscribers of at least a second topic linked to the first topic.","It will be appreciated that for simplicity and clarity of illustration, elements shown in the figures have not necessarily been drawn to scale. For example, the dimensions of some of the elements may be exaggerated relative to other elements for clarity. Further, where considered appropriate, reference numbers may be repeated among the figures to indicate corresponding or analogous features.","As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the of the present invention are described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks","The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof","In the following detailed description, numerous specific details are set forth in order to provide a thorough understanding of the invention. However, it will be understood by those skilled in the art that the present invention may be practiced without these specific details. In other instances, well-known methods, procedures, and components have not been described in detail so as not to obscure the present invention.","Publish\/subscribe applications are intended for situations where a single message is required by, and should be distributed to, multiple users. Their advantage over other delivery methods is that they keep the publisher separated from the subscriber. This means that the publisher in a publish\/subscribe application does not need to have any knowledge of either the subscriber's existence or the applications that may use the published information. Likewise, the subscriber or subscriber applications do not need to know anything about the publisher application.","Published messages are characterized into classes, without knowledge of what subscribers there may be. Subscribers express interest in one or more classes, and only receive messages that are of interest, without knowledge of what publishers there are. This decoupling of publishers and subscribers can allow for greater scalability and a more dynamic network topology.","Publish\/subscribe is typically one part of a larger message-oriented middleware system. Most messaging systems support both the publish\/subscribe and message queue models in their application programming interface (API) (e.g. Java Message Service (JMS)).","In the publish\/subscribe model, subscribers typically receive only a subset of the total messages published. The process of selecting messages for reception and processing is called filtering. There are two common forms of filtering: topic-based and content-based.","In a topic-based system, messages are published to \u201ctopics\u201d or named logical channels. Subscribers in a topic-based system will receive all messages published to the topics to which they subscribe, and all subscribers to a topic will receive the same messages. The publisher is responsible for defining the classes of messages to which subscribers can subscribe.","In many publish\/subscribe systems, publishers post messages to an intermediary message broker and subscribers register subscriptions with that broker, letting the broker perform the filtering. The broker matches the publications to the subscribers and ensures that all the messages are made available and delivered to all the subscribers in a timely manner. The broker normally performs a store and forward function to route messages from publishers to subscribers.","Multiple brokers can be connected together, enabling brokers to exchange messages. This allows subscribers to one of the brokers to pick up messages that have been published to another broker, further freeing the subscriber from the constraints of using the same broker as the publisher.","Referring to , in a messaging environment where the publish\/subscribe paradigm is being used, typically a hierarchy of topics is created as a topic tree  where topic nodes further into the hierarchy are more specific to a particular area of interest.","For example, \u201csport\u201d may be a root node  with branch nodes of \u201ccricket\u201d , \u201cfootball\u201d , and \u201ctennis\u201d . The branch node of \u201cfootball\u201d  in turn may have child nodes of \u201cChelsea\u201d , \u201cArsenal\u201d , etc. The topic string of \/SPORT\/FOOTBALL\/CHELSEA would describe the route through the hierarchy to the topic node \u201cChelsea\u201d  for the Chelsea (within London) football team results. A subscriber in the messaging environment can subscribe to the topic \u201cChelsea\u201d to receive published messages for the Chelsea team football results. It is possible to subscribe to multiple topics using a wildcard, for example subscribing on the topic \u201cFootball\u201d with the topic string \/SPORT\/FOOTBALL\/# would lead to football results for all teams being delivered to the subscriber.","There may be other distinct parts of the topic tree  which have a common sub-theme. For example, \u201cnews\u201d may be a root node  with a child node of \u201cLondon\u201d  with a topic string \/NEWS\/LONDON.","While the themes of both parts of these trees may overlap, there is no commonality in the topic strings \/SPORT\/FOOTBALL\/CHELSEA and \/NEWS\/LONDON. Conventionally, it would require at least two subscriptions to be able to subscribe to both topics. If a further topic string related to London but with no commonality in the topic string was introduced it would typically require a further subscription to get that information.","In an embodiment of the present invention, an administrator of the messaging environment defines a topic which is linked to one or more previously defined topics. Whenever a message is published on any of those linked topics it automatically gets published on the new topic as well.","It is then possible for an application to subscribe on the new topic and receive messages for multiple topics on the single subscription, potentially all with a related theme but with no commonality of topic string.","In addition, the administrator can add or remove topic links without the application having to change its subscription.","When a topic is created that has linked topics associated with it, the topic manager would mark the linked topics in a way as to indicate that when a publish operation occurs, a publish operation should also take place on the topic it is linked with within the same unit-of-work. No change to the way subscriptions work would be needed.","When a publish\/subscribe broker starts up, it builds a tree of topics that it knows about. Each point in the tree is known as a topic node and refers to a particular topic string.","In conventional systems, this tree of topic nodes is built from the topic strings contained within topic objects and those upon which existing subscriptions exist. During run time, the list of subscribers on a given topic string is maintained as a list hanging off the associated topic node: the \u201csubscriber list\u201d. When an application publishes a message to a topic string, the associated topic node in the tree is consulted and the message is delivered to the subscribers in the subscriber list, these messages are delivered in a single transactional unit-of-work, and the publisher knows the result at publish time.","The described implementation encompasses linked target topics. To implement linked target topics, at start up, the system, as well as reading the \u201csubscriber list\u201d for the source topic, additionally reads in a list of \u201clinked topic objects\u201d which maps one or more source topic strings to one or more target topic strings.","A link is added from each source topic string's node to each target topic string's node\u2014these links are maintained in a list: the \u201clinked topic nodes.\u201d As linked topic objects are updated during run time, the links between source and target topic string nodes are added\/removed from the linked topic nodes list.","When an application publishes a message to a topic string, in addition to delivering it to the subscribers in the subscriber list of the source topic node, each of the linked topic nodes in the linked topic nodes list is visited, and the message delivered to each of the subscribers in their subscriber lists. Again, all of the messages are delivered in a single transactional unit-of-work, and the publisher knows the result at publish time.","Referring to , a schematic diagram  shows a source topic node  which has a linked list of a subscriber list  indicating that subscribers A, B, C subscribe to the source topic. The source topic node  also has a linked list of linked topic nodes  which indicates that the source topic is linked to target nodes Topic  and Topic .","The target node of Topic   has a linked list of a subscriber list  of subscribers A, D, E subscribing to Topic . Similarly, the target node of Topic   has a linked list of a subscriber list  of subscribers B, F, G subscribing to Topic .",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 2","b":["210","211","1","2","221","231","1","202","232","2","203","212","1","202","233","213","2","203","234"]},"The publish operation  is, therefore, simultaneously in the same unit-of-work sent to subscribers A, B, C, D, E, F and G. A duplicate subscriber checking component ensures that duplicate messages are not sent to a subscriber of more than one of the source topic and the target topics.","In a publish\/subscribe system within a messaging environment, the described method shows how to specify links between topics in different branches of the topic hierarchy so that subscribers to a first topic will also automatically receive publications on any linked topics, it being possible to add or remove topic links without the application having to change its subscription.","The implementation of linked topics introduces a linked list into each topic node that, instead of pointing to a linked list of subscriptions, points to a linked list of other topic nodes. The linked list of topic nodes is read during the publication loop, and is modified whenever one topic is linked to another. The implementation includes provision for cyclic dependency checking for linked topic nodes whenever the list is modified. For example, when topicA is linked to topicB, all of the links from topicB (and all of their links, etc.) are followed to ensure that none end up back at topicA.","There is no republication taking place, the published message effectively appears on several different topics at once.","Referring to , a schematic diagram  shows an example embodiment of the command flow and destination queues between a publisher , broker , and subscriber . The commands exchanged are messages sent to queues. Other publish\/subscribe applications may not use queues, for example, they may handle requests and returns on API (application programming interface) calls.","In this example, during subscription by a subscriber  on a topic, the subscriber  sends a request subscription message  to a control queue  on the broker . A response message  is sent by the broker  to a reply queue  on the subscriber .","A publisher  sends a publish message  relating to a topic to a publish queue  on the broker . The broker sends a reply message  to a reply queue  on the publisher . The broker  then carries out a method described below, with reference to , to find all subscribers of the topic and all subscribers of linked topics. The publish message  is then sent by the broker  to the subscriber queue  and to other subscriber queues (not shown).","Referring to , a flow diagram  shows the method carried out by a broker. This method could be applied to any system where a publisher wishes to fan the same data out to multiple interested parties. A message broker does this for a message; however, a message may be any data being passed by a broker between interested parties.","A message publish unit-of-work is started . A topic node matching the topic string for the message is found .","At  the method distributes the message to each of the subscribers in the subscriber list at the topic node. Simultaneously, a linked list of linked topic nodes is read  at the topic node, and the method distributes  the message to each of the subscribers in the subscriber lists at each linked topic node. The publish message unit-of-work then ends .","Linked topics may be transitive, i.e. linked topics can themselves be referred to by other linked topics. So where the topic \u201cSport\\Football\\Chelsea\u201d is linked to \u201cNews\\London\u201d in the example given above, and \u201cNews\\London\u201d is also linked to \u201cNews\\England,\u201d messages published to \u201cSport\\Football\\Chelsea\u201d would also be published on \u201cNews\\England.\u201d","Linked topics can be used directly, so messages published to \u201cNews\\England\u201d directly would be published to \u201cNews\\England\u201d (but not to \u201cNews\\London\u201d or \u201cSport\\Football\\Chelsea\u201d) and messages published to \u201cNews\\London\u201d would be published to both \u201cNews\\London\u201d and \u201cNews\\England\u201d (but not to \u201cSport\\Football\\Chelsea\u201d). Unless the backwards link is explicitly requested (at which point the cyclic dependency checking is not performed at link time instead opting to check at publish time that, for each subscriber, they are not already in this unit-of-work) that none is implied.","Linked topics can be recursive, either simply by referring to themselves or cyclically. So, by setting up a link from \u201cTopicA\u201d to \u201cTopicB\u201d and also one from \u201cTopicB\u201d to \u201cTopicA\u201d, anything published on either would be published to both. This will also require the inclusion of loop detection logic.","There is protection against the same message being delivered twice to the same subscriber who is subscribed to two or more topics\u2014if a message is effectively published on two of these topics, it will be delivered to the same subscriber only once.","The end-user (the subscriber) does not need to know about the existence of the mappings between topics. The subscriber simply subscribes to the topic they need and an administrator determines that messages published elsewhere in the topic space are also relevant to that topic. The administrator sets up the link and the subscriber starts to receive messages published to topics linked to his subscribed topic.","The linkage between topics has been previously established, and, at publish time, all subscribers on the linked topics are published to. The transactional element of this is that each of the subscriptions listed at each of the original and linked topics are published to in the same unit-of-work. They all receive the message published at the same time, and there is no \u2018cascading\u2019 of publications meaning that all subscribers receive the same context provided by the publisher.","Referring to , a block diagram shows a publish\/subscribe messaging system . One or more publishers ,  publish messages to a message broker . One or more subscribers ,  subscribe to messages at the message broker . The system is described in terms of messages; however, messages may be any form of data and a broker may pass the information to other parties who are interested in it.","The messages are published and subscribed to using topic strings. The message broker  includes a tree of topics building component  for building a tree of topics  stored in a storage medium .","The tree of topics  has topic nodes . Each topic node  may have a linked list of subscribers  and additionally a linked list of linked topic nodes .","The message broker  includes a subscriber defining component  for defining the subscribers to a topic and updating the subscriber lists  of the nodes  in the stored tree of topics .","The message broker  includes a link defining component  for defining links between topic nodes . The link defining component  maintains a list of linked objects  which is updated by an administrator and updates the linked lists of linked topic nodes  of the nodes  in the stored tree of topics .","The message broker  includes a publishing component  for publishing a message including using the linked lists of linked topic nodes  to distribute a message.","In addition, the message broker  includes a cyclic checking component  to prevent a message from being published in a recursive loop of inter-linking topic nodes.","The message broker  also includes a duplicate subscriber checking component  to ensure that messages are not sent more than once to subscribers on linked nodes.","Referring to , an exemplary system for implementing aspects of the invention includes a data processing system  suitable for storing and\/or executing program code including at least one processor  coupled directly or indirectly to memory elements through a bus system . The memory elements can include local memory employed during actual execution of the program code, bulk storage, and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.","The memory elements may include system memory  in the form of read only memory (ROM)  and random access memory (RAM) . A basic input\/output system (BIOS)  may be stored in ROM . System software  may be stored in RAM  including operating system software . Software applications  may also be stored in RAM .","The system  may also include a primary storage means  such as a magnetic hard disk drive and secondary storage means  such as a magnetic disc drive and an optical disc drive. The drives and their associated computer-readable media provide non-volatile storage of computer-executable instructions, data structures, program modules and other data for the system . Software applications may be stored on the primary and secondary storage means ,  as well as the system memory .","The computing system  may operate in a networked environment using logical connections to one or more remote computers via a network adapter .","Input\/output devices  can be coupled to the system either directly or through intervening I\/O controllers. A user may enter commands and information into the system  through input devices such as a keyboard, pointing device, or other input devices (for example, microphone, joy stick, game pad, satellite dish, scanner, or the like). Output devices may include speakers, printers, etc. A display device  is also connected to system bus  via an interface, such as video adapter .","A topic linking component for a publish\/subscribe messaging system may be provided as a service to a customer over a network.","The corresponding structures, materials, acts, and equivalents of all elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.","Having thus described the invention of the present application in detail and by reference to embodiments thereof, it will be apparent that modifications and variations are possible without departing from the scope of the invention defined in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
