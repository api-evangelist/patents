---
title: Automatically deriving an application specification from a web-based application
abstract: A method for deriving an application specification from an enterprise application including mapping the enterprise application to obtain a plurality of states and a plurality of transitions, monitoring the enterprise application to obtain a list of variable usages for each of the plurality of states, parsing source code of the enterprise application to obtain process logic for each of the plurality of transitions, and deriving the application specification using each of the plurality of states, the plurality of transitions, the list of variable usages for each of the plurality of states, and the process logic for each of a plurality of transitions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06996798&OS=06996798&RS=06996798
owner: Sun Microsystems, Inc.
number: 06996798
owner_city: Santa Clara
owner_country: US
publication_date: 20020529
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF INVENTION","SUMMARY OF INVENTION","DETAILED DESCRIPTION","Code Sample 1: HTML Form","Code Sample 2: Information by Web Crawler","Code Sample 3: Information Extracted by Interaction Monitor","Code Sample 4: Information Extracted by Code Analyzer","Code Sample 5: Business Object Specification"],"p":["Modern enterprise applications are typically implemented as multi-tier systems. Multi-tier systems serve the end-user by distributing the functionality of the enterprise application across multiple tiers. In general, the enterprise application functionality is distributed across a user interface at the front end, an application server, and a database management system (DBMS) at the backend. Depending on the component providing the user interface, an additional tier may exist between the user interface and the application tier. For example, if the user interface is a web browser, then a web server is usually interposed between the user interface and the application server. The web browser sends requests to the web server, and the web server interacts with the application server to obtain data from the database via the DBMS. The web server uses the data obtained from the database to generate a response to send to the web browser.",{"@attributes":{"id":"p-0003","num":"0002"},"figref":"FIG. 1","b":["10","14","16","18","20","18","16","14"]},"Returning to , the application server () provides the business logic for the web based application. The iPlanet\u2122 Application server, designed and distributed by Sun Microsystems, California USA, is an example of an application server. (iPlanet is a registered trademark of Sun Microsystems, California, USA). As described above, the application server () interacts with the database () via the DBMS (). The DBMS () allows one or more processes to create and access data in a database. The DBMS () manages requests allowing the various processes accessing the database () to be free from having to understand where the data is physically located on storage media and, in a multi-user system, who else may also be accessing the data. In handling requests, the DBMS () ensures the integrity and security of the data.","The client () may be any process that is capable of accessing the web server () via a network (). Typically, the client () includes functionality to send and receive HTTP requests (e.g., a web browser), and to interpret Hypertext Mark-up Language (HTML) documents. Additionally, the client () may include functionality to process Common Gateway Interface (CGI) script (e.g., a CGI engine), as well as other pieces of code embedded in HTML documents (e.g., Java\u2122 embedded in Java\u2122 Server Pages). The network () may be a local area network (LAN), a wide area network (WAN) as an Internet, etc. Typically, the client () sends a request to the web server (), which in turn forwards the request to the application server (). The application server () generally processes the request, and if required, stores or retrieves information from the database () via the DBMS ().","As enterprise applications continue to grow, they have the potential to become unmanageable over time. This is usually due to enterprise application customizations, implementation work-arounds, and quick fixes during the various life-cycles of the software development. These modifications generally increase the complexity of the enterprise application, specifically, the complexity of the business process model. In these situations, the business process model of the enterprise application becomes more difficult to understand. Further, in many situations, without a complete understanding of the business process model, any modifications to the enterprise application may be difficult to implement correctly.","In general, in one aspect, the invention relates to a method for deriving an application specification from an enterprise application comprising mapping the enterprise application to obtain a plurality of states and a plurality of transitions, monitoring the enterprise application to obtain a list of variable usages for each of the plurality of states, parsing source code of the enterprise application to obtain process logic for each of the plurality of transitions, and deriving the application specification using each of the plurality of states, the plurality of transitions, the list of variable usages for each of the plurality of states, and the process logic for each of a plurality of transitions.","In general, in one the invention relates to a method for deriving an application specification from an enterprise application comprising mapping the enterprise application to obtain a plurality of states and a plurality of transitions, monitoring the enterprise application to obtain a list of variable usages for each of the plurality of states, parsing source code of the enterprise application to obtain process logic for each of the plurality of transitions, analyzing the source code of the enterprise application to derive each of a plurality of business objects, and deriving the application specification using each of the plurality of states and the plurality of transitions, the list of variable usages for each of the plurality of states, the process logic for each of a plurality of transitions, and each of the plurality of business objects.","In general, in one aspect, the invention relates to a network system, having a client and a server running an enterprise application comprising an interaction monitor interposed between the client and the enterprise application, and a code analyzer operatively connected to the server, wherein the interaction monitor maps the enterprise application to obtain a plurality of states and a plurality of transitions and monitors the enterprise application to obtain a list of variable usages for each of the plurality of states, and the code analyzer parses and analyzes source code of the enterprise application to obtain process logic for each of the plurality of transitions.","In general, in one aspect the invention relates to a network system, having a client and a server running an enterprise application comprising a web crawler operatively connected to the server, and a code analyzer operatively connected to the server, wherein the web crawler maps the enterprise application to obtain a plurality of states and a plurality of transitions, and the code analyzer parses and analyzes source code of the enterprise application to obtain a list of variable usages and process logic for each of the plurality of transitions.","In general, in one aspect, the invention relates to an apparatus for deriving an application specification from an enterprise application comprising means for mapping the enterprise application to obtain a plurality of states and a plurality of transitions, means for monitoring the enterprise application to obtain a list of variable usages for each of the plurality of states, means for parsing source code of the enterprise application to obtain process logic for each of the plurality of transitions, and means for deriving the application specification using each of the plurality of states, the plurality of transitions, the list of variable usages for each of the plurality of states, and the process logic for each of a plurality of transitions.","Other aspects and advantages of the invention will be apparent from the following description and the appended claims.","Exemplary embodiments of the invention will be described with reference to the accompanying drawings. Like items in the drawings are denoted by the same reference numbers throughout several figures for consistency.","In the following detailed description of the invention, numerous specific details are set forth in order to provide a more thorough understanding of the invention. However, it will be apparent to one of ordinary skill in the art that the invention may be practiced without these specific details. In other instances, well-known features have not been described in detail to avoid obscuring the invention.","The invention relates to a method for deriving an application specification from an enterprise application. An application specification includes two distinct components: an application usage specification, and a business object specification.","The business object specification (BOS) defines the characteristics of all business objects to be used in the enterprise application. These characteristics may include, but are not limited to, attributes, attribute constraints, persistence information, triggers, relationships, business object methods, etc. For example, the BOS may define a trigger for a particular business object such that when a specific event occurs, such as an update to a data field in a database, a set of Structured Query Language (SQL) statements is \u201cfired-off\u201d to perform an integrity check on the database. Additionally, in accordance with one embodiment of the invention, the business object methods define enterprise application and process logic. Further, the BOS defines the relationships between the various business objects.","The application usage specification (AUS) defines how the business objects, as defined by the BOS, are to be used within the enterprise application. In one or more embodiments of the invention, the AUS is defined as a series of states and transitions. A state defines an interaction with a client (i.e., a user, another enterprise application, a web service, etc.). The interaction may include, but is not limited to, a user gesture (e.g., a button click, voice commands, etc.), an interaction from another enterprise application (e.g., via a web service using Simple Object Access Protocol (SOAP)), etc. Those skilled in the art will appreciate that an interaction may take on other forms in an accessible environment.","Additionally, the AUS contains variable interaction qualifiers. The interaction qualifiers define constraints on variable usage and display within the application. For example, some variables within the application are designated as HTML text which may not be modified, while other variables may be designated as containing text that may be modified.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2","b":["22","26","26","28","28","24","24","24","22","24","24","22","23"]},"In one embodiment of the invention, the web crawler () may use the header for each web page encountered to generate the list of states (A, N), and track the hyperlinks and\/or buttons used to reach a web page to generate the list of transitions (A, N). In another embodiment of the invention, the web crawler () uses a Universal Resource Locator (URL) corresponding to each web page encountered to denote the state, i.e., each URL translates into a state.","In one embodiment of the invention, the web crawler () resides on a single computer (not shown) and sends HTTP requests for web pages within the enterprise application ().","Returning to , after obtaining an outline of the AUS (), (specifically, the list of states (A, N) and transitions (A, N)), and an interaction monitor () is used to obtain additional information about each of the states in the list of states (A, N). The additional information includes, but is not limited to, interaction qualifiers, variable usages, etc. In one embodiment of the invention, the interaction monitor () is a proxy (not shown), i.e., a process used to intercept network traffic interposed between a client (not shown) and the enterprise application (). Specifically, the proxy forwards all requests from the client to the enterprise application (), and similarly re-directs all responses from the enterprise application () back to the client. Typically, the client is not aware that the proxy exists.","In one embodiment of the invention, the proxy is located on the same web server that is providing an interface to the client. In one embodiment of the invention, the proxy is located on a server that is not in the set of servers running the enterprise application (). An example of a proxy is the Forte\u2122 HTTP Transaction Monitor. (Forte is a trademark of Sun Microsystems, California, USA).","The interaction monitor () monitors and analyzes all the network traffic i.e., requests and responses, between the client and the enterprise application (). In one embodiment of the invention, for each URL visited by the client, the interaction monitor () maps the URL to a state, and each button clicked to a transition. Further, by analyzing the HTTP requests and responses, a list of variable usages for each state () may be derived. For example, the following is a code sample of an HTML form:",{"@attributes":{"id":"p-0028","num":"0027"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<html>"]},{"entry":[{},"<body>"]},{"entry":[{},"<form method=\u201cPOST\u201d action= \u201chttp:\/\/"]},{"entry":[{},"\u2003www.johndoesite.com\/confirm\u201d>"]},{"entry":[{},"\u2003."]},{"entry":[{},"\u2003."]},{"entry":[{},"\u2003."]},{"entry":[{},"\u2003\u2002<p>"]},{"entry":[{},"\u2003\u2003First Name <input type=\u201ctext\u201d name=\u201cfirstName\u201d"]},{"entry":[{},"\u2003\u2003size=\u201c27\u201d value=\u201cJohn\u201d>"]},{"entry":[{},"\u2003\u2002<\/p>"]},{"entry":[{},"\u2003\u2002<p>"]},{"entry":[{},"\u2003\u2003<input type=\u201chidden\u201d name=\u201cclientid\u201d"]},{"entry":[{},"\u2003\u2003value=\u201cabcdefg123\u201d>"]},{"entry":[{},"\u2003\u2002<\/p>"]},{"entry":[{},"\u2003."]},{"entry":[{},"\u2003."]},{"entry":[{},"\u2003."]},{"entry":[{},"<\/form>"]},{"entry":[{},"<\/body>"]},{"entry":[{},"<\/html>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Referring to Code Sample 1, a post request issued by the client (lines 3 and 4) using the above HTML code provides the interaction monitor () with one writeable variable usage, \u201cfirstName\u201d on line 9, and a non-writeable variable usage, \u201cclientid\u201d on line 13. The variable usages (writeable and non-writeable) would be associated with a URL that corresponds to a state.","Once information has been obtained for states in the list of states (A, N), the information is combined with the outline of the AUS () to produce a partial AUS () via a first integration process (). The partial AUS () contains each state along with all variable usages () associated with that state, as obtained from the interaction monitor (). Those skilled in the art will appreciate that depending on the complexity of the enterprise application (), the interaction monitor may take an indeterminate amount of time to obtain all the variable usages () for each state in the list of states (A, N). To decrease the time required to obtain the variable usages (), multiple interaction monitors may be used.","In one embodiment of the invention, the integration process of combining the outline of the AUS () and the information obtained from the interaction monitor () to obtain the partial AUS () is performed by a script that uses the URL information to group together the variable usages () for each state in the list of states (A, N). For example, each state is associated with a URL, and each of the variable usages, both writeable and non-writeable, are also associated with URL tags. The integration process () uses the URL tag associated with each variable usage, and groups the variable usage with the state having the corresponding URL. Those skilled in the art will appreciate that each state and the variable usages may use any type of identification scheme that allows the variable usages to be associated with the corresponding state.","In one embodiment of the invention, once the partial AUS () has been generated, information regarding process logic (), and a BOS () are obtained using a code analyzer (). The code analyzer () parses and analyzes the source code of the enterprise application (). As the enterprise application () is a web-based application, the source is typically in the form of server script (e.g., CGI, Perl script, Java\u2122 Script, etc.) or embedded code such as Java\u2122 Server Pages (JSP) with JavaBeans\u2122 running on an application server, Active Server Pages, etc. Those skilled in the art will appreciate that the completeness of the BOS is dependent on the tools and methods available for code analysis.","The code analyzer () parses the source code of the enterprise application () to obtain information about how the web pages in the enterprise application () are laid out (i.e., how the content is displayed to the client). Using the information obtained from the layout, the code analyzer () can generate a business object specification. In one embodiment of the invention, Java\u2122 Introspection Application Programming Interface (API) is used to analyze the source code of the web-based application (i.e., JavaBeans\u2122). In another embodiment of the invention, a byte code analyzer is used to statically analyze the byte code from class files. Further, the code analyzer () can parse the server script or embedded code, or references to embedded code to obtain information about the process logic () associated with a given transition (A, N).","For example, if a given enterprise application () is written in JSP, then the code analyzer () can use the JSP form clause to identify a handler servlet when a form is posted to a web server (not shown) running the enterprise application (). Using the identity of the handler servlet, the code analyzer () can then extract state initialization information () and process logic () from servlet classes and helper classes, associated with the handler servlet. The state initialization information () includes, but is not limited to, information necessary to initialize the state such as setting particular variables to default values, etc. The helper class is typically used by the JavaBeans\u2122 to hold an intermediate state of the JavaBeans\u2122 when the JavaBeans\u2122 are passed in with a request from a client.","JSP runtime engines, i.e., a process running on a web server used to process JSP pages, provide a mechanism to automatically copy parameter values from a servlet request into properties of the helper class. This information may be obtained by the code analyzer () and used to derive state initialization information (). The servlet classes contain the Java\u2122 code, i.e., process logic () that may be used to process the information submitted in the form post request.","In one embodiment of the invention, the code analyzer is located on a computer operatively connected to computer system running the enterprise application (i.e., the web server, the database, etc.). Further, the code analyzer process has access to all source code associated with the enterprise application. The associated source code, includes but is not limited to, server script, DBMS script, database queries, script used to interface legacy applications, etc.","The information obtained and\/or derived by the code analyzer () uses a mapping scheme, as described above, to denote associations with various states and transitions. The information obtained from the code analyzer () is combined with the partial AUS () to produce a complete AUS () using a second integration process (). The second integration process () uses the mapping scheme of the code analyzer () to associate the process logic () with the corresponding transition (A, N). Further, the second integration process () also uses the mapping scheme to integrate the state initialization information () with the corresponding states (A, N).","The BOS () and the complete AUS () are combined to produce the application specification (). In one embodiment of the invention, the complete AUS () and the BOS () are maintained in two separate files. In another embodiment of the invention, the complete AUS () and BOS () are combined into one file. A process () to combine the BOS () and the complete AUS () may include converting the complete AUS () and BOS () into a file format such as HTML, Extensible Markup Language (XML), etc.","Those skilled in the art will appreciate that while each of information gathering technologies, i.e., web crawler (), interaction monitor (), and code analyzer (), are described as obtaining only specification information, the information obtained from each of the information gathering technologies may vary or overlap. For example, the web crawler may obtain all the state and transition information for only the static links in the enterprise application and the interaction monitor may be required to obtain information about the dynamic links. Further, the interaction monitor may only obtain limited information about the variable usages, and thus the code analyzer may be used to obtain the additional details of the variable usages that could not be obtained by the interaction monitor.","Further, those skilled in art will appreciate that the terms used to described the AUS, i.e., outline of the AUS, partial AUS, and complete AUS, are meant to describe the relative completeness of the AUS and should only be used as a general guideline rather than an absolute measure. In some cases, depending on the architecture of the enterprise application, the web crawler and the interaction monitor may be able to obtain a relatively complete AUS, while in other cases, the web crawler and the interaction monitor may only be able to extract an outline of the AUS and require the code analyzer to extract the remainder of the information.","Returning to , in one embodiment of the invention, a user may make modifications to the application specification (). A user modification () may include, but is not limited to, adding additional variable usages to the application specification, modifying the process logic () for various transitions, etc.","In one embodiment of the invention, an Integrated Development Environment (IDE) is used to make the user modifications (). In one embodiment of the invention, a text editor is used to make the user modifications ().",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 3","b":["58","60","62","64","66","58","60","62","64","66","58","60","62","64","66","68","70","72","74","76","78","80","82","84","86","88","90"]},{"@attributes":{"id":"p-0044","num":"0043"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"state initial( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"transition Start { }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} \/\/ state initial"]},{"entry":[{},"state ChoosePO( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"transition CreatePO { }"]},{"entry":[{},"transition DeletePO { }"]},{"entry":[{},"transition EditPO { }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} \/\/ state ChoosePO"]},{"entry":[{},"state CreatePO( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"transition CreateAndEditPO { }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} \/\/ state CreatePO"]},{"entry":[{},"state EditPO( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"transition Update { }"]},{"entry":[{},"transition AddLineItem { }"]},{"entry":[{},"transition DeleteLineItem { }"]},{"entry":[{},"transition Done { }"]},{"entry":[{},"transition Discard { }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} \/\/ state EditPO"]},{"entry":[{},"state DiscardEdits( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"transition Continue { }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} \/\/ state DiscardEdits"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Referring to Code Sample 2, the web crawler extracted each of the web pages within the enterprise application and each of the links. Each of the web pages was mapped to a state, and each of the links was mapped to a transition. Further, the transitions were grouped with the state from which the transition is initiated. For example, in line 1, state initial corresponds to web page Initial ( in ).","Further, the Start transition (, ) corresponds to a start link (). Note that in this particular case, the Start transition (, ) is a conditional transition. The conditional transition uses data submitted with the request to follow a particular link and determine which web page is sent to the client. An example of a conditional transition is a web page that requests a password. If the password is correct, then the enterprise application sends the client the next page in the enterprise application. If the password is incorrect, then the enterprise application sends the client back to the password page to enter a correct password.","Returning to Code Sample 2, a ChoosePO state defined in lines 7\u201312 corresponds to the ChoosePO web page (), and transitions (, , ) correspond to a DeletePO link (), a CreatePO link (), and an EditPO link (), respectively. Similarly, a CreatePO state defined in lines 14\u201317 corresponds to the CreatePO web page (), and transition () corresponds to a CreateAndEdit link (). An EditPO state defined in lines 19\u201326 corresponds to the EditPO web page (), and transitions (, , , , ) correspond to a Done link (), a Discard link (), an Update link (), an AddLineItem link (), and a DeleteLineItem link (), respectively. Finally, a DiscardEdits state defined in lines 28\u201331 corresponds to the DiscardEdits web page (), and transition () corresponds to a Continue link ().","Those skilled in the art will appreciate that the organization of the data obtained by the web crawler may be different than that illustrated in  or shown in Code Sample 2, without departing from the scope of the invention.","Once the initial information is obtained by the web crawler, an interaction monitor, as described above, is used to obtain information about variable usages. The following code sample illustrates information that may be obtained by the interaction monitor (indicated in bold typeface) for the exemplary enterprise application illustrated in  and described in code Code sample Sample 2:",{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"state initial ( )"]},{"entry":[{},"{ customerName: RW"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"transition Start {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"} \/\/ state initial"]},{"entry":[{},"state ChoosePO( )"]},{"entry":[{},"{[purchaseOrders(0,n)]: R {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"orderId \u201cOrder ID\u201d}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"transition CreatePO { }"]},{"entry":[{},"transition DeletePO { }"]},{"entry":[{},"transition EditPO { }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} \/\/ state ChoosePO"]},{"entry":[{},"state CreatePO( )"]},{"entry":[{},"{"]},{"entry":[{},"transition CreateAndEditPO { }"]},{"entry":[{},"} \/\/ state CreatePO"]},{"entry":[{},"state EditPO(PurchaseOrder po)"]},{"entry":[{},"{ po: RW {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"orderId \u201cOrder ID\u201d: R ,"]},{"entry":[{},"orderDate \u201cDate\u201d,"]},{"entry":[{},"shipToName \u201cShip To\u201d,"]},{"entry":[{},"shipToPhone \u201cPhone\u201d,"]},{"entry":[{},"shipToAddress1 \u201cAddress\u201d,"]},{"entry":[{},"shipToAddress2 \u201cAddress2\u201d,"]},{"entry":[{},"shipToCity \u201cCity\u201d,"]},{"entry":[{},"shipToState \u201cState\u201d,"]},{"entry":[{},"shipToZip \u201cZip Code\u201d,"]},{"entry":[{},"shipToCountry \u201cCountry\u201d,"]},{"entry":[{},"billToName \u201cBill To\u201d,"]},{"entry":[{},"billToPhone \u201cPhone\u201d,"]},{"entry":[{},"billToAddress1 \u201cAddress\u201d,"]},{"entry":[{},"billToAddress2 \u201cAddress2\u201d,"]},{"entry":[{},"billToCity \u201cCity\u201d,"]},{"entry":[{},"billToState \u201cState\u201d,"]},{"entry":[{},"billToZip \u201cZip Code\u201d,"]},{"entry":[{},"billToCountry \u201cCountry\u201d,"]},{"entry":[{},"[lineItems(0,n)] \u201cLine Items\u201d {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"orderLine \u201cItem\u201d,"]},{"entry":[{},"productId \u201cProduct ID\u201d,"]},{"entry":[{},"productName \u201cProduct\u201d,"]},{"entry":[{},"productDescription \u201cDescription\u201d,"]},{"entry":[{},"unitPrice \u201cUnit Price\u201d,"]},{"entry":[{},"quantity \u201cQuantity\u201d }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"transition Update { }"]},{"entry":[{},"transition AddLineItem { }"]},{"entry":[{},"transition DeleteLineItem { }"]},{"entry":[{},"transition Done { }"]},{"entry":[{},"transition Discard { }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} \/\/ state EditPO"]},{"entry":[{},"state DiscardEdits ( )"]},{"entry":[{},"{ message: R ;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"transition Continue { }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} \/\/ state DiscardEdits"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Referring to Code Sample 3, the interaction monitor extracts information about the variable usages for each of the states in the enterprise application. For example, the state initial defined in lines 1\u20136 includes one variable usage \u201ccustomerName,\u201d which is denoted as having read and write permissions. Those skilled in the art will appreciate that Code Sample 3 only illustrates one of many potential schemes for denoting variable usages. Other schemes may be used that are more or less detailed than the scheme illustrated in Code Sample 3 without departing from the scope of the invention.","Returning to code sample 3, State ChoosePO is defined by lines 9\u201316 with a variable usage defined for a purchase order object. Further, in this particular example, the enterprise application may have multiple purchaseOrder objects as indicated by the range (0, n) with each purchaseOrder object identified by an \u201cOrderId.\u201d Similarly, the EditPO state defined in lines 23\u201357 has a purchaseOrder object defined in lines 24\u201350. In particular, the purchaseOrder object is further defined to include lineItem objects as defined in lines 43\u201349. Finally, the DiscardEdits state is defined in lines 59\u201362 as having one variable usage \u201cmessage.\u201d The CreatePO state defined in lines 18\u201321 has no variable usages.","After the information obtained by the interaction monitor is integrated into the application usage specification, as illustrated in Code Sample 3, a code analyzer, as described above, is used to obtain information about process logic involved in the transitions and information about the business objects. The following code sample illustrates information that may be obtained by the code analyzer (designated in bold typeface) for the exemplary enterprise application illustrated in  and described in Code Sample 3:",{"@attributes":{"id":"p-0054","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"state initial {"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"{","customerName = \u201c\u201d;"]},{"entry":[{},"}"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"customerName: C ;"]},{"entry":[{},"transition Start {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"switch (customerName) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"case \u201c\u201d: return new initial( );"]},{"entry":[{},"default: return new ChoosePO( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002}"},{"entry":"}"},{"entry":"state ChoosePO( )"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{","purchaseOrders ="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"factory(POApplication.PurchaseOrder).myOrders(customerName);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"[purchaseOrders(0,n)): R {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"orderId \u201cOrder ID\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"transition CreatePO {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return new CreatePO( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"transition DeletePO {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PurchaseOrder po = purchaseOrders.getSelectedOne( );"]},{"entry":[{},"factory(POApplication.PurchaseOrder).remove(po);"]},{"entry":[{},"return new ChoosePO( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"transition EditPO {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PurchaseOrder po = purchaseOrders.getSelectedOne( );"]},{"entry":[{},"return new EditPO(po);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"state CreatePO( )"},{"entry":"{"},{"entry":"transition CreateAndEditPO {"},{"entry":"PurchaseOrderPK pk ="}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"factory(POApplication.PurchaseOrder).assignNextPK( );"]},{"entry":[{},"PurchaseOrder po ="]},{"entry":[{},"factory(POApplication.PurchaseOrder).create(pk);"]},{"entry":[{},"po.setBillToName(customerName);"]},{"entry":[{},"return new EditPO(po);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"state EditPO( PurchaseOrder po)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"po:","RW {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"orderId \u201cOrder ID\u201d: R ,"]},{"entry":[{},"orderDate \u201cDate\u201d,"]},{"entry":[{},"shipToName \u201cShip To\u201d,"]},{"entry":[{},"shipToPhone \u201cPhone\u201d,"]},{"entry":[{},"shipToAddress1 \u201cAddress\u201d,"]},{"entry":[{},"shipToAddress2 \u201cAddress2\u201d,"]},{"entry":[{},"shipToCity \u201cCity\u201d,"]},{"entry":[{},"shipToState \u201cState\u201d,"]},{"entry":[{},"shipToZip \u201cZip Code\u201d,"]},{"entry":[{},"shipToCountry \u201cCountry\u201d,"]},{"entry":[{},"billToName \u201cBill To\u201d,"]},{"entry":[{},"billToPhone \u201cPhone\u201d,"]},{"entry":[{},"billToAddress1 \u201cAddress\u201d,"]},{"entry":[{},"billToAddress2 \u201cAddress2\u201d,"]},{"entry":[{},"billToCity \u201cCity\u201d,"]},{"entry":[{},"billToState \u201cState\u201d,"]},{"entry":[{},"billToZip \u201cZip Code\u201d,"]},{"entry":[{},"billToCountry \u201cCountry\u201d,"]},{"entry":[{},"[lineItems(0,n)] \u201cLine Items\u201d {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"orderLine \u201cItem\u201d,"]},{"entry":[{},"productId \u201cProduct ID\u201d,"]},{"entry":[{},"productName \u201cProduct\u201d,"]},{"entry":[{},"productDescription \u201cDescription\u201d,"]},{"entry":[{},"unitPrice \u201cUnit Price\u201d,"]},{"entry":[{},"quantity \u201cQuantity\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"transition Update {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return new EditPO(po);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"transition AddLineItem {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LineItemPK pk ="]},{"entry":[{},"factory(POApplication.LineItem).assignNextPK(po);"]},{"entry":[{},"LineItem li = factory(POApplication.LineItem).create(pk);"]},{"entry":[{},"return new EditPO(po);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"transition DeleteLineItem {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LineItem li = po.lineItems.getSelectedOne( );"]},{"entry":[{},"factory(POApplication.LineItem).remove(li);"]},{"entry":[{},"return new EditPO(po);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"transition Done {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return new ChoosePO( ),"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"transition Discard {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return new DiscardEdits( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"state DiscardEdits( )"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"message:","R ;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"transition Continue {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return new ChoosePO( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Referring to Code Sample 4, the code analyzer extracts information about the process logic associated with each of the transitions. For example, the start transition, defined in lines 9\u201312, uses the \u201ccustomerName\u201d to determine which state to transition to, i.e., follow the Start1 transition ( in ) back to the Initial web page ( in ) or follow the Start2 transition ( in ) to the ChoosePO web page ( in ). Similarly, lines 16\u201339 define the ChoosePO state with detailed process logic for each of the listed transitions. Further, lines 44\u201347 define the process logic for the CreateAndEdit transition, line 83 defines the process logic for the Update transition, lines 87\u201389 define the process logic for the AddLineItem transition, lines 93\u201395 define the process logic for the DeleteLineItem transition, line 99 defines the process logic for the Done transition, line 103 defines the process logic for the Discard transition, and line 113 defines the process logic for the Continue transition.","Code Sample 4 defines a complete AUS in accordance with one embodiment of the invention. In addition to the AUS, the application specification also includes a BOS. The BOS is obtained, in one embodiment of the invention, by the code analyzer, as described above. The following code sample illustrates the BOS for the exemplary enterprise application illustrated in  and described in Code Sample 4:",{"@attributes":{"id":"p-0057","num":"0056"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"persistent class PurchaseOrder {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"persistent Long orderId;"]},{"entry":[{},"persistent Date orderDate = new Date(0);"]},{"entry":[{},"persistent String shipToName;"]},{"entry":[{},"persistent String shipToPhone;"]},{"entry":[{},"persistent String shipToAddress1;"]},{"entry":[{},"persistent String shipToAddress2;"]},{"entry":[{},"persistent String shipToCity;"]},{"entry":[{},"persistent String shipToState;"]},{"entry":[{},"persistent String shipToZip;"]},{"entry":[{},"persistent String shipToCountry = \u201cUSA\u201d;"]},{"entry":[{},"persistent String billToName;"]},{"entry":[{},"persistent String billToPhone;"]},{"entry":[{},"persistent String billToAddress1;"]},{"entry":[{},"persistent String billToAddress2;"]},{"entry":[{},"persistent String billToCity;"]},{"entry":[{},"persistent String billToState;"]},{"entry":[{},"persistent String billToZip;"]},{"entry":[{},"persistent String billToCountry = \u201cUSA\u201d;"]},{"entry":[{},"owns (0,n,1,1) LineItem lineItems orderId;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} \/\/ class PurchaseOrder"]},{"entry":[{},"persistent class LineItem {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"persistent Long orderLine;"]},{"entry":[{},"persistent String productId;"]},{"entry":[{},"persistent String productName;"]},{"entry":[{},"persistent String productDescription;"]},{"entry":[{},"persistent Decimal unitPrice;"]},{"entry":[{},"persistent Long quantity;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} \/\/ class LineItem"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In Code Sample 5, lines 1\u201323 define a PurchaseOrder business object. Specifically, within the PurchaseOrder business object, lines 2\u201319 define attributes of the PurchaseOrder business object. Line 21 defines a relationship between the PurchaseOrder business object and a LineItem business object; in particular, the PurchaseOrder business object \u201cowns\u201d the LineItem business object. Lines 25\u201334 define the LineItem business object.","Embodiments of the invention may include one or more of the following advantages. The invention provides an automated means of extracting the business logic, in the form of an application specification, from an existing enterprise application. The application specification and the business object specification allow the enterprise application to be easily modified and updated. Further, by extracting an AUS and BOS an enterprise application may be generated using an enterprise application generator. Also the platform independent nature of the AUS and BOS allow the enterprise application to be easily migrated between various platforms and between multiple tiered environments","While the invention has been described with respect to a limited number of embodiments, those skilled in the art, having benefit of this disclosure, will appreciate that other embodiments can be devised which do not depart from the scope of the invention as disclosed herein. Accordingly, the scope of the invention should be limited only by the attached claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
