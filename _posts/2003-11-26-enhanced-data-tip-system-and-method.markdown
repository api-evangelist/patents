---
title: Enhanced data tip system and method
abstract: Displaying data sub-items corresponding to a cursor-selected object displayed on a computer screen involves determining that a cursor is positioned to point at an object on the computer screen, loading the cursor-selected object, evaluating the cursor-selected object to determine it has a fixed value, has related data sub-items or if the related data sub-items are capable of expansion into lower-tier sub-items. The values for the object and the related data sub-items are assembled and displayed in a window that indicates the values of the object and the related data sub-items along with an indication of a presence of lower-tier sub-items which can in turn be further examined.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07779356&OS=07779356&RS=07779356
owner: 
number: 07779356
owner_city: 
owner_country: 
publication_date: 20031126
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["COPYRIGHT NOTICE AND PERMISSION","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS","Exemplary Embodiments"],"p":["A portion of the disclosure of this patent document may contain material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent files or records, but otherwise reserves all copyright rights whatsoever. The following notice shall apply to this document: Copyright\u00a9 2003, Microsoft Corp.","The present invention relates generally to data processing systems and, more particularly, to the displaying of underlying and related information in application programs.","The display of data in a simple, logical and convenient form is a constant challenge as data processing systems continue to develop in complexity and as the amount of data presented increases. One approach to data presentation has been to display only the data requested and allow any deriving information to be suppressed. For example, if one desires to see a financial valuation balance, an application program may display the balance but the individual elements of the balance, such as cash available, values of investments, inventory, and the value of accounts receivable may be displayed on another display page that a developer or an application user must summon to view. Often, this request to see the underlying deriving data results in the user changing display windows and requires some level of mental agility to correlate data while swapping screens between data display views. There are many examples of applications where a desire to see data underlying the results on one window necessitates switching to another window. One such application is present in a software development environment where a debugger program is used to test code for new software.","Debuggers are software utilities that are commonly used to develop and test software by invoking a powerful tool that allows program developers to observe the run-time behavior of their programs to determine the location and characteristics of semantic errors. One common task that is performed while debugging is checking the value of variables. Commonly, a developer must stop his program at a break point, switch to a tool such as a watch window or other type of viewer and type in a variable name to uncover the value of a variable. This action may be cumbersome in some circumstances.","Microsoft\u00ae Visual C++ 4.0, available from Microsoft Corporation, One Microsoft Way, Redmond, Wash. 98052, utilizes a feature called data tips to provide easy access to variable values. The data tips feature was inspired by the tool tips popularized by other Microsoft\u00ae products such as Microsoft Office\u2122. Data tips are a convenient feature that allows a developer to see the value of a variable, data structure, and expression in source code simply by moving a mouse cursor or other user pointing device over the variable in the source code. This can avoid the cumbersome activity of switching between windows or display screens to view data already in the application.","Currently, when debugging an application, the user may hover a mouse or other pointing mechanism over a variable name to read the expression under the cursor. The debugger then attempts to evaluate it and a data tip appears with the expression and a single line indicating the value. When the user moves the mouse far enough away, or pauses for 60 seconds, the data tip automatically disappears. This makes it quick and easy for a user to examine the status of his program without restoring to excessive window manipulation and\/or typing. Although the data tips implementation in debugger programs is useful, it falls short of true interactive capability.","It is commonly believed that much of the functionality of a debugger is underutilized due to complexity. If the debugger functionality were brought closer to the user through the use of interactive data tips, then the user experience could be enhanced. The editor function is believed to be the area where most developers spend large amounts of time. Also, data tips are one of most frequently used and easily understood debugger tools. If data tips were enhanced to provide interactive capabilities, then an enhanced data tips feature may improve the software development cycle time as well as improve user interaction.","Thus, there is a need for a method and system which can efficiently perform both examination and editing tasks for objects such as variables in a software development system to reduce software development cycle time and enhance user interaction. The present invention addresses the aforementioned needs and solves them with additional advantages as expressed herein.","A method for indicating the values of variables in a program under development includes detecting the position of a pointer on a computer display associated with an expression in the program under development, reading and evaluating the expression, and displaying at least one item value in a first item window, the item value associated with a variable in the expression. The display also provides an indication of at least one sub-item value associated with the variable when such a value is present. The display also allows a user to request for specific sub-item values and responds by displaying the first sub-item window containing the first sub-item value, the first sub-item window being separate from the first item window.","A method of displaying any related data sub-items corresponding to a cursor-selected object displayed on a computer screen includes determining that a cursor is positioned to point at the cursor-selected object on the computer screen, loading the cursor-selected object, evaluating the cursor-selected object to determine if the object has a fixed value or has related data sub-items, or if the related data sub-items are capable of expansion into lower-tier sub-items. The method then includes assembling values for the cursor-selected object and the related data sub-items and displaying the values of the cursor-selected object and the related data sub-items along with an indication of a presence of the lower-tier sub-items.","A system supporting the above methods for displaying data tips related to a cursor-selected object displayed on a computer screen includes a computer screen to display a cursor-selected object and data tips and a processor for executing instructions corresponding to the above-mentioned methods. The display of the values of the cursor-selected object and related sub-items in the data tips uses a window located adjacent to the cursor-selected object; the window having an indication of the lower-tier sub items if the lower-tier sub-items exist.","Additional features and advantages of the invention will be made apparent from the following detailed description of illustrative embodiments that proceeds with reference to the accompanying drawings.","Overview","The invention relates to enhanced data tips, which are an extension of the currently known data tips functionality in programs such as debuggers. In many cases, a single line of information as is currently displayed by the present data tips implementation is not enough. The present invention addresses this issue by incorporating an innovative auto-expand mechanism that allows the user to expand any expandable item and view the resulting information. The invention has several advantages in that it includes the ability to expand the information to view \u2018child\u2019 or sub-item data, which would also include further expandability if deeper information is associated with the sub-item data. This results in instant availability of a full expansion tree of data tips to the developer.","The preferred embodiment of the present invention displays a data tip when a mouse cursor points to a variable for a sufficient amount of time. The functionality of the invention is useful, for example, while using a debugger during software development. Upon activation, the invention reads the expression under the cursor and evaluates it. If the expression can be evaluated, then a data tip appears with the expression and a window indicating its value. The window may indicate that a further breakdown of the variable is possible. Once selected, the further breakdown provides a second window that displays more variable values. These additional variable values may be \u201cchild\u201d items to the \u201cparent\u201d expression or member fields. The terms item and sub-item may be used analogously with parent and child respectively. If member fields required for display are larger than the area available for display on the computer screen, scrolling devices appear which allow the user to move around in the field to examine the contents. Multiple levels of expansion are possible.","Data tips allow access to the variables such that the variables may be edited or displayed in a different format. If a user wishes to view information obscured by the presence of the data tip, the user may select the data tip to become transparent thus revealing the once-obscured screen information.","Although the preferred embodiment of the present invention concerns the evaluation of expressions and the presentation of variables in a debugger application, those skilled in the art will appreciate that the present invention may generally be applied to other applications where a computer display of underlying data may be useful. The user interface model of the present invention may be useful anywhere a hierarchy of data is encountered by the user. In particular, the invention is an alternate representation of a tree view occupying less screen real-estate. As such, the invention may be generally easier to manage when data viewing is the primary objective. Accordingly, the invention has many applications in data display wherein the information to be displayed may be any number, text, expression, code or any other type of information stored in a computer. Other implementations of the invention may include, for example, accounting software where underlying transactions, expressions, or data values may be useful for a user to see while performing the operations provided by an application. It should be appreciated that the present invention may be applied to multiple types of data display needs.","After discussing an exemplary computing environment in conjunction with  in which the invention may be practiced, exemplary embodiments will be discussed in detail in conjunction with .","Exemplary Computing Device",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 1"},"Although not required, the invention can be implemented via an operating system, for use by a developer of services for a device or object, and\/or included within application software that operates according to the invention. Software may be described in the general context of computer-executable instructions, such as program modules, being executed by one or more computers, such as client workstations, servers or other devices. Generally, program modules include routines, programs, objects, components, data structures and the like that perform particular tasks or implement particular abstract data types. Typically, the functionality of the program modules may be combined or distributed as desired in various embodiments. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer configurations. Other well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers (PCs), automated teller machines, server computers, hand-held or laptop devices, multi-processor systems, microprocessor-based systems, programmable consumer electronics, network PCs, appliances, lights, environmental control elements, minicomputers, mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network\/bus or other data transmission medium. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices, and client nodes may in turn behave as server nodes.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","100","100","110","110","120","130","121","120","121"]},"Computer system  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer system  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, Random Access Memory (RAM), Read Only Memory (ROM), Electrically Erasable Programmable Read Only Memory (EEPROM), flash memory or other memory technology, Compact Disk Read Only Memory (CDROM), compact disc-rewritable (CDRW) digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can accessed by computer system . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as ROM  and RAM . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer system , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer system  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk , such as a CD ROM, CDRW or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in  provide storage of computer readable instructions, data structures, program modules and other data for the computer system . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer system  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface , which may in turn communicate with video memory (not shown). In addition to monitor , computer systems may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer system  may operate in a networked or distributed environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer system , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks\/buses. Such networking environments are commonplace in homes, offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer system  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer system  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer system , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Various distributed computing frameworks have been and are being developed in light of the convergence of personal computing and the Internet. Individuals and business users alike are provided with a seamlessly interoperable and Web-enabled interface for applications and computing devices, making computing activities increasingly Web browser or network-oriented.","For example, MICROSOFT\u00ae's NET platform includes servers, building-block services, such as Web-based data storage and downloadable device software. While exemplary embodiments herein are described in connection with software residing on a computing device, one or more portions of the invention may also be implemented via an operating system, application programming interface (API) or a \u201cmiddle man\u201d object between any of a coprocessor, a display device and a requesting object, such that operation according to the invention may be performed by, supported in or accessed via all of NET's languages and services, and in other distributed computing frameworks as well.","One exemplary embodiment of the invention is that of an enhanced data tip for an application program such as a debugger. This example is useful to an understanding of the invention because it may be used to demonstrate how the basic principles of the invention may be used to advantage to reduce excessive user screen changes to perform multiple types of functionalities within an application program. Although the invention may be utilized with other applications, such as scientific analysis programs, scheduling programs, accounting programs to name a few, the exemplary embodiment of a debugger will be discussed.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 2","FIG. 2"],"b":["200","220","200","200","210"]},"In the embodiment of , the user is assumed to have started debugging his program and hits a breakpoint. Note that an expression , reading \u201cc.x1=50\u201d, among others, is displayed. The user may wish to see the values of various aspects of the expression. To do so, the user hovers his cursor or other pointing mechanism over the \u201cx\u201d in the expression \u201cc.x1\u201d. In less than a second, the data tip  appears. The behavior is almost identical to that of an existing data tip implementation except that the user is able to move the mouse over the data tip to interact with it as shown in following Figures. In addition, the new data tips have no timeout for when they automatically disappear. This is an improvement over the existing data tips, which would automatically disappear after about 60 seconds. The existing data tips are implemented as standard tool tips, not a custom user interface control as in the implementation of the current debugger embodiment.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 3","FIG. 2","FIG. 2"],"b":["200","210","220","230","230","310","320","310"]},"For example, if the user hovers over the expansion widget, a new data tip may be displayed, for example, just down and to the right of the first data tip.  depicts the user interface screen  of , using the same application window . Here, the user is assumed to have hovered the mouse over the \u201c+\u201d widget in the data tip  shown in . After a short timeout of roughly less than a second, or immediately when the user clicks the \u201c+\u201d widget, the list of sub-items in a new data tip may be displayed. This data tip  shows the list of data members of the original expression and their values. Notice that data tip  has been modified because a \u201c\u2212\u201d widget  is displayed in the left hand corner of data tip . This indicates to the user that there is no further expansion of the variable \u201cc\u201d because it is shown in the new data tip window .","While this behavior is similar to the behavior of the existing watch windows in the debugger, it differs in a significant manner. The sub-items or \u201cchild\u201d members are displayed in their own window. That concept has several significant advantages. One is that less screen real-estate may be covered than if the expansion happened within one window. Depending on the data being shown, this savings can be significant. Another advantage is that the separate window can be individually scrolled. Therefore, the original item or variable will always remain visible. In the current example, the data tip for variable \u201cc\u201d , which may be termed the \u201cparent\u201d node or variable, remains visible during the generation of new expansion window . As another aspect of the same invention, the child window  may disappear automatically if the user moves the mouse back over top of the parent node , allowing the user to quickly inspect multiple children without excessive scrolling and window manipulation.","Returning to , since there are more than 15 sub-items in the example data tip , scroll widgets and may be placed at the bottom and top of the new data tip . Note that scroll widget is darkened as it represents that additional data lies below. Conversely, scroll widget is not dark as it represents that no additional data is available to the user if he scrolls in the up direction. As the user moves the cursor  down over the new data tip , the closest sub-item is highlighted. This helps provide an ability for the user to see name-value pairs which may become quite long and difficult to match up by eye alone.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 5","FIG. 4","FIGS. 4 and 5"],"b":["440","430","510","430","430","430"],"i":"a "},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 6","FIG. 6","FIG. 5","FIG. 5"],"b":["200","310","430","200","310","430","310","430"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 7","FIG. 5"],"b":["510","710","710","220","720","710","710","430","310"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 8","FIG. 4","FIG. 8","FIG. 8"],"b":["430","810","810"]},"In another embodiment, editing of variables may occur as desired by the user by moving the mouse or other pointer mechanism over individual sub-items. Then, smart-tag indicators may appear under the items. Clicking on these tags may allow the user to edit values or add an item to a watch window, among other things.","A representation of the class structure and code implementing the exemplary embodiment of the enhanced data tips application to a debugger type of application program is provided below. The windows themselves may be implemented by a CDataTipWnd and CDataTipChildWnd class. The information within the tips themselves are implemented as an array entitled (CDataTipArray) of CDataTipInfos.",{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/**********************"},{"entry":"\/\/ CDataTipInfo - One of these objects represents each line of a data tip."},{"entry":"\/\/**********************"},{"entry":"struct CDataTipInfo"},{"entry":"{"},{"entry":"\u2003CStringW m_strExpression;"},{"entry":"\u2003CStringW m_strName;"},{"entry":"\u2003CStringW m_strValue;"},{"entry":"\u2003CStringW m_strTipText;"},{"entry":"};"},{"entry":"\/\/*********************"},{"entry":"\/\/ CDataTipArray - An array of CDataTipInfos"},{"entry":"\/\/*********************"},{"entry":"class CDataTipArray"},{"entry":"{"},{"entry":"\u2003dbg::dynarray<CDataTipInfo*, int> m_privDataTipInfos;"},{"entry":"\u2003int m_cntTotalAvailable;"},{"entry":"public:"},{"entry":"\u2003CDataTipArray( ) : m_cntTotalAvailable(0) { }"},{"entry":"};"},{"entry":"\/\/********************"},{"entry":"\/\/ CDataTipWnd - This is the main data tip window. It provides base implementation for all data"},{"entry":"tips. At the lowest level, it is a straight window that is custom drawn and hit-tested."},{"entry":"\/\/********************"},{"entry":"class CDataTipWnd : public CWindowImp1<CDataTipWnd, CWindow,"},{"entry":"CWinTraits<WS_POPUP | WS_BORDER, WS_EX_TOOLWINDOW |"},{"entry":"WS_EX_NOACTIVATE | WS_EX_TOPMOST | WS_EX_LAYERED>>,"},{"entry":"\u2003\u2003\u2003\u2003public CComObjectRoot,"},{"entry":"\u2003\u2003\u2003\u2003public IOleCommandTarget,"},{"entry":"\u2003\u2003\u2003\u2003public IOleComponent"},{"entry":"{"},{"entry":"\u2003CDataTipWnd* m_pParent;"},{"entry":"\/\/ The top-most tips do not have parents. All other data tips do."},{"entry":"\u2003CDataTipChildWnd* m_pChild;"},{"entry":"\/\/ If a data tip has children, this is set."},{"entry":"\u2003CDataTipArray m_aDataTipInfos;"},{"entry":"\/\/ The set of data is displayed by this data tip."},{"entry":"};"},{"entry":"\/\/********************"},{"entry":"\/\/ CDataTipChildWnd - Overrides some functionality of the base data tip to support modified"},{"entry":"behavior of child data tips. One example of this behavior is out-of-bounds testing. For child"},{"entry":"data tips, the out-of-bounds border is much larger than it is for top-level tips."},{"entry":"\/\/********************"},{"entry":"class CDataTipChildWnd : public CDataTipWnd"},{"entry":"{"},{"entry":"};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In one embodiment, a data tip may be displayed by a method where the debugger editor calls a function requesting a data tip. The debugger creates an instance of CDataTipWnd and initializes it with the appropriate expression and data and then returns a specific success code, but no data tip string. This success code is a queue for the editor to do some more analysis of other items it might need to display. For example, the request may result in a requirement to display a smart-tags for editing of the users code. If the editor determines that a data tip would be most appropriate, it calls back into the debugger through an interface called IVsCustomDataTip. This interface has only one method on it called DisplayDataTip( ). The implementation of this function may be as shown in this example:",{"@attributes":{"id":"p-0055","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT CDebugger::DisplayDataTip( )"]},{"entry":[{},"{"]},{"entry":[{},"\u2003if (m_pDataTipWnd)"]},{"entry":[{},"\u2003{"]},{"entry":[{},"\u2003\u2003CPoint ptCursor;"]},{"entry":[{},"\u2003\u2003GetCursorPos(&ptCursor);"]},{"entry":[{},"\u2003\u2003CRect rectExpression;"]},{"entry":[{},"\u2003\u2003CDataTipWnd::GetExpressionRect(&rectExpression);"]},{"entry":[{},"\u2003\u2003CPoint ptTip(ptCursor.x, rectExpression.bottom \u2212 2);"]},{"entry":[{},"\u2003\u2003CSize size(0,0);"]},{"entry":[{},"\u2003\u2003if (m_pDataTipWnd->CreateTipWindow(CRect(ptTip, size)))"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003m_pDataTipWnd->ShowWindow(SW_SHOWNA);"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003}"]},{"entry":[{},"\u2003return S_OK;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"At this point the enhanced data tip may be shown as a modal window, like, for example, a dialog. However, instead of requiring dismissal via an OK button, the enhanced data tip watches the user interface pointer mechanism, such as a mouse pointer, and determines from the user pointer position whether the data tip should be dismissed. The dismissal of data tips may be user pointer sensitive and\/or keystroke sensitive for ease of use.","In one embodiment, if a data tip is top-level (parent) and has not been expanded, then there may be a small out-of-bounds border around the entire data tip. In addition, the bounding rectangle of the expression being evaluated is considered in-bounds. This border may be large enough to allow the cursor to be moved over the data tip and around the outside of it. However, it may also be small enough such that if the user moves the cursor to the next line of code, the data tip will be considered out of bounds and may be made to disappear. This type of hit-testing makes a top-level or parent data tip act very much like the heritage-type data tips. However, if the user expands a data tip, the out-of-bounds area may be greatly expanded since it may be assumed that the user intends on more examination. In this instance, accidental dismissal of a data tip may therefore be avoided. It may be noted that the boundaries border not only includes the data tip and any sub tier data tips, but may also include the bounding rectangle of the original object that was used to originate the first data tip. So, for an exemplary expression of \u201cc.foo\u201d, the user may be able to move a mouse within the text of the expression itself, without having the data tip dismiss. However, it is contemplated that if the user were to just hover over the \u201cc\u201d in the \u201cc.foo\u201d expression, the bounding rectangle may be limited to the area around just the \u201cc\u201d, not the entire expression \u201cc.foo\u201d.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 9","b":["900","910","920","930"]},"The object may be further evaluated  to determine if it is a valid object for evaluation. If it is a valid object, the object values are determined  and a determination is made as to whether the object contains child variables, or whether it has other lower-tier variables or expressions. The values of these variables and child variables are assembled  for display. A data tip window may then be constructed and displayed , showing any variable values, and an indication of whether there are lower-tier variables that are subject to further evaluation and expansion.","At this point the user has options has discussed hereinabove as to whether he wishes to further expand the data tip window, dismiss it, make the data tip transparent, or seek a new data tip associated with another screen object. For example, if a data tip is present, but the user wishes to dismiss the tip, the process  monitors the location of the cursor , determines that the cursor may not be over an object  and determines that the cursor is out of bounds  because the user has moved the cursor out of bounds. As a result the data tip may be dismissed  and a new data tip may be brought forth if the user places the cursor over an object.","As mentioned above, while exemplary embodiments of the present invention have been described in connection with various computing devices and network architectures, the underlying concepts may be applied to any computing device or system in which it is desirable to implement a method or system to display information in the form of an interactive data tip. Thus, the methods and systems of the present invention may be applied to a variety of applications and devices. While exemplary programming languages, names and examples are chosen herein as representative of various choices, these languages, names and examples are not intended to be limiting. One of ordinary skill in the art will appreciate that there are numerous ways of providing object code that achieves the same, similar or equivalent systems and methods achieved by the invention.","The various techniques described herein may be implemented in connection with hardware or software or, where appropriate, with a combination of both. Thus, the methods and apparatus of the present invention, or certain aspects or portions thereof, may take the form of program code (i.e., instructions) embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other machine-readable storage medium, wherein, when the program code is loaded into and executed by a machine, such as a computer, the machine becomes an apparatus for practicing the invention. In the case of program code execution on programmable computers, the computing device will generally include a processor, a storage medium readable by the processor (including volatile and non-volatile memory and\/or storage elements), at least one input device, and at least one output device. One or more programs that may utilize the signal processing services of the present invention, e.g., through the use of a data processing API or the like, are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer. However, the program(s) can be implemented in assembly or machine language, if desired. In any case, the language may be a compiled or interpreted language, and combined with hardware implementations.","While the present invention has been described in connection with the preferred embodiments of the various figures, it is to be understood that other similar embodiments may be used or modifications and additions may be made to the described embodiment for performing the same function of the present invention without deviating therefrom. Furthermore, it should be emphasized that a variety of computer platforms, including handheld device operating systems and other application specific operating systems are contemplated, especially as the number of wireless networked devices continues to proliferate. Therefore, the present invention should not be limited to any single embodiment, but rather should be construed in breadth and scope in accordance with the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing summary, as well as the following detailed description of preferred embodiments, is better understood when read in conjunction with the appended drawings. For the purpose of illustrating the invention, there is shown in the drawings exemplary constructions of the invention; however, the invention is not limited to the specific methods and instrumentalities disclosed. In the drawings:",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
