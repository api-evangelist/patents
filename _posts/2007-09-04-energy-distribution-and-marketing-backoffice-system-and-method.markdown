---
title: Energy distribution and marketing backoffice system and method
abstract: A retail energy provider system comprising a market transaction manager, business rules and requirements processor, usage rater, customer analysis and quality control auditor, customer billing processor and collection manager, customer payment processor, third party sales and marketing application programming interface, customer acquisition and residual income interface, having a wholesale forecaster, interactive voice response system, intranet web services, internet web services and network based external customer service and executive management systems and financial services functions, all said functions and systems interacting with a robust SQL database engine for which the novel database schema is taught herein.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08442917&OS=08442917&RS=08442917
owner: Ambit Holdings, L.L.C.
number: 08442917
owner_city: Dallas
owner_country: US
publication_date: 20070904
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF INVENTION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["The present invention relates to the field of back office information technology systems for a retail electricity provider and is a computer system for automatically performing market transactions, customer billing and customer service functions.","In the 1990s groups of utilities along with their federal and state regulators began forming independent system operators (ISOs) or regional transmission organizations (RTOs) as states and regions in the United States established wholesale competition for electricity. ISOs and RTOs (hereafter ISOs) coordinate generation and transmission of electric power across wide geographic regions, matching generation to load instantaneously to keep supply and demand for electricity in balance. These organizations forecast load and schedule generation to assure sufficient capacity and back-up power in case demand rises, a power-plant goes offline or a power line is lost. The primary role of the ISO is to ensure equal access to the power grid for non-utility firms, enhance the reliability of the transmission system and operate wholesale electricity markets which includes the flow of money between wholesale producers, marketers, transmission and distribution service providers (TDSP) owners, buyers including other ISOs.","TDSP entities are responsible for the transmission and distribution of energy through power lines that they are responsible to maintain and typically own. As service providers, they typically own the metering devices attached to residential and commercial customers, servicing the meters and reading them periodically.","A Public Utilities Commission (PUC) regulates the delivery of electricity including reliability and safety, rates and terms, setting the operating standards for the TDSPs. The PUC typically oversees the regional ISO market, for example by reviewing proposals for new transmission facilities or generators. The PUC enforces rules and regulations for retail competition, including customer protections, \u201cprice to beat\u201d rules and the implementation of renewable energy goals. The PUC also handles the licensing and rules enforcement to REPs.","An example of an ISO is the Energy Reliability Council of Texas (ERCOT) which manages the Texas power grid, an example of a TDSP is TXU Energy Delivery; an example of a PUC is the Texas Public Utilities Commission.","The operation of a wholesale electricity market by the ISO enables local retail electricity providers (REPs) to buy and sell electricity on a real-time spot market basis supplying REPs with a means for meeting consumer needs for power at the lowest possible costs. An example of a REP is Ambit Energy, Inc. of Dallas, Tex. REPs have need for an accurate and continuous information exchange with ISOs including data such as market transactions and information related thereto, historical or current load information and customer specific transactions (e.g. connect or disconnect, meter readings, etc.). The state of the art in the energy industry to exchange information with ISOs is to utilize the electronic data interchange (EDI) standard.","REPs have certain requirements typically set by the relevant state public utilities commission to have adequate technical resources to provide continuous and reliable electric service to customers in its service area and for the technical and managerial ability to supply electric services at retail in accordance with its customer contracts. Such resources include a fundamental capability to comply with all scheduling, operating, planning, reliability, customer registration policies, settlement policies, and other rules and procedures as established by the ISO. The REP must have the ability to meet ISO requirements for 24 hour coordination with control centers for scheduling changes, reserve implementation, curtailment orders, interruption plan implementation and escalation procedures. The REP must meet certain financial standards relating to the protection of its customers and sufficient for accurate billing and collection from its customers.","An example of a set of requirements for REPs is the Texas state PUC document: P.U.C. SUBST. R.25, \u201cSubstantive Rules Applicable to Electric Service Providers\u201d, Chapter 25.","In general there is a significant amount of information that must be managed and serviced on a real-time basis (often minute to minute) by a REP to meet the requirements and to operate its systems effectively. For example, the costs of energy are generally fluctuating according to market prices and thereby rated in time intervals of 15 minutes and sold in blocks of time. The REP continuously purchases blocks of energy on the market to meet its demands, sometimes only 15 minutes in advance, but normally several days in advance or according to a forecasted buy order. To determine the costs of energy usage for its customer base a REP must be able to accurately correlate customer usage information with the rated cost of the energy as it was purchased in a given block for a given geographical area.","A need exists in the retail electric provider business community for a comprehensive automated system to manage market transactions with the ISO, apply business rules and requirements, apply ratings to usage, perform customer analysis and quality control audits, perform customer billing including customer protective measures in collection, process customer payments, manage 3party sales and marketing subsystems, manage customer acquisition and residual income systems and manage customer service systems including call centers and back-office support for financial and corporate executives.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 1","FIG. 1"],"b":["10","90","20","30","40","40","20","50","50","60","70","70","80","50","70"]},"The system of the present invention was designed to address the following issues competitive REPs face (and others):","1. Market Exceptions","2. Cost of doing business","3. Cash flow exposure","4. Rapid responses to Market\/Customer preference changes.","The primary issue that residential energy utilities face with their back-office systems is the large amount of market data exceptions that typically occur between the REP and the TDSP. Market exceptions include data integrity issues to operating issues that result in complex customer situations, such as errors in meter reads and service change requests. Together with a large customer base, these exceptions create a ripple effect across the back-office that typically results in errors with:","Billing","Service provisioning timing","Collections and Treatment processes","The present invention addresses the pervasive problems created by market exceptions though a novel system design that segments system responsibility, promotes system \u201clearning\u201d without introducing complexity, and supports large customer data sets. For example, system exceptions are categorized and managed through an exception flow. End users use interface heuristics to further define and resolve all exceptions, including through the addition of new system rules.","A further novel aspect of the present invention addresses the overall cost of doing business of a REP. The energy industry is a commodity driven market. Competitive advantages rely on service quality and accuracy in billing. The present invention creates a competitive position for the reseller by fundamentally reducing the cost to operate. This is achieved by:\n\n","A further novel aspect of the present invention addresses a common issue faced by a REP, namely, cash\/capital requirements to support billing in arrears. Meter reads are performed by the TDSP and the read sent to the REP to bill in arrears. This results in the reseller having to \u201cfront\u201d its customer's energy base as it attempts to collect from customers after purchasing the energy. The present invention addresses this though automated, real-time flow-through of meter read transactions that result in near-same day billing. This optimizes the cash collection process in order to reduce cash exposure.","A further novel aspect of the present invention addresses resistance in back-office IT systems of the REP, that prevent companies from implementing changes and improvements in system functions to meet customer\/market demands. The modular design and solid relational data architecture prescribed in the preferred embodiment of the present invention, coupled with defined development standards, provide the REP with the ability to quickly and cost-effectively introduce system changes.","Yet another novel aspect of the present invention is the combination of features meant to automatically ensure the integrity of energy business data to meet PUC requirements, said combination comprising a market transaction manager, business rules and requirements processor, usage rater, customer analysis and quality control auditor, customer billing processor and collection manager, customer payment processor, third party sales and marketing subsystems API, customer acquisition and residual income web interface and customer service and executive backoffice systems, all said subsystems interacting with an intelligent SQL database subsystem. In a preferred embodiment of the present invention, said features are implemented as a coordinated set of software programs running under the framework of a Microsoft Windows\u2122 Services platform utilizing Microsoft C#.net as the programming environment.","The present invention teaches an apparatus and method for a retail energy provider (REP) system that functions to automatically service market transactions and to control internal processes such as usage rating and account aging in such a way as to reduce human workload requirements over requirements typically found in the prior art. A novel set of transaction rules, usage rating rules and pre-bill quality control rules operate on market transactions to detect system exceptions by automatically performing quality control processes on internal and external data flow within and external to the REP system.","REP system comprises a set of internal entities which service a set of external entities in a real-time event-driven process. REP System interacts with external energy ISO partners to perform inbound and outbound energy market transactions. REP system interacts with external sales organizations via an application programming interface to perform sales functions such as order placement and residual income calculations.","REP System comprises a set of automated processes, the set of automated processes interacting with and exchanging data with a core SQL database engine which is a container for holding and organizing a set of customer data records and a set of persistent transaction records. The set of automated processes defined herein including a sales application programming interface connecting to an Internet web service, an interactive voice and response system, an intranet web service, a payment processor, a business process function, and a wholesale forecaster with a corresponding data warehouse. In the preferred embodiment of the present invention, the connections between the set of automated processes and the SQL database engine are made by a corporate intranet consisting of internet protocol IP services over an Ethernet physical infrastructure which may include local area networks (LANs) and wide area networks (WANs) of suitable computers.","To service external entities, the present invention includes an internet web service which accepts customer input such as residential data or requests for information and sends it to an application programming interface (API) for processing, the API being defined in an API specification to allow a variety of external entities to simultaneously connect to and utilize REP system in a standardized way.","The business process function is a set of inter-related processes that perform continuous and real-time operations on the database and is comprised of a market transaction importer for automatically accepting market transactions in the form of EDI transactions and grouping them according to function; an inbound transaction processor (ITP) for applying a set of transaction business rules to the EDI transactions obtained by the market transaction importer; a usage rating processor for applying a set of rates to a set of usages and for completing a scaling process useful for wholesale forecasting; a pre-bill quality control (QC) processor for checking all billable usages for exceptions, a billing processor for computing, creating and automatically sending bills; an account aging processor for applying a set of aging rules to bin unpaid bills into past due time frames; a bill treatment processor for automatically controlling a treatment process incorporating PUC requirements; and a novel customer residual income processor for computing and controlling a sales agent residual income system.","In the preferred embodiment of the present invention, the REP system is implemented on a network of servers operating a Microsoft .NET services network by Microsoft Corporation. The business process functions are run continuously as event driven processes which are controlled and generated by a Microsoft .NET services application server.","The present invention requires a robust and novel relational database infrastructure to operate efficiently and with a high degree of data integrity which allows for rapid and large overall system scaling with numbers of customers. The preferred embodiment of the present invention herein teaches a novel relational database schema for a highly normalized relational database structure to support the REP system functions.","In particular, the database schema includes a set of entities wherein the entities are comprised of sets of data tables. The entities have relationships between them as shown the relationships allowing for relational sharing of data between tables within one entity and the tables within another entity. The entities in REP database schema are: ESI ID warehouse entity for holding data relating to specific ESI IDs, Wholesale entity for compiling data relating to forecast models and ESI ID usage profiles, Market Transactions entity for storing transactions sent\/received to\/from the ISO or TDSP, Orders entity for containing sales order information, Sales Consultants entity for containing records relating to the sales process, Customer entity for accumulating detailed customer information, Rating entity for compiling usage rating data, Products and Rates entity for holding the various products and rates for the ESI IDs, Discounts entity for describing customer discounts, Payments entity for keeping records related to customer payments, Bills entity for accumulating billing information for customers and commissions entity for containing sales commission information relating to customer residual income.","Data table relationships are defined within the REP database schema: Customer entity shares relational data with Rating entity, Wholesale entity, Orders entity, Sales consultants entity and Bills entity. Market transactions entity shares relational data with Orders entity, ESI ID Warehouse, Wholesale entity and Rating entity. Orders entity shares relational data with Sales consultants in addition to those relationships already described. Bills entity shares relational data with Rating entity, Payments entity, Commissions entity and Customer entity. Rating entity shares relational data with Products and Rates entity, Discounts entity and Bills entity.","REP Database schema includes queuing and logging entities for managing the operational aspects of the REP system, the queuing entities typically being accessed by the company operations staff, customer service staff, or IT operations staff within the REP. The queuing entities within data model being: Exceptions entity for logging transaction exceptions and other system exceptions, System Queues entity comprised of queuing tables relating to worklists and business operational functions such as a queue for printing bills, Security entity for holding system user data such as authorization data, System logs entity for containing tables of various system software logs, and Alerts entity for logging data records relating to critical system alerts.","Detailed discussions and instruction of the REP system function and the REP system database schema are explained according to the preferred embodiments described herein.","The numerous innovative teachings of the present application will be described with particular reference to the presently preferred embodiments (by way of example, and not of limitation).","The present invention teaches the construction and method of operation of an efficiently tuned back office system for a retail energy provider (REP), the primary objective of said system being the automatic execution of business rules and market transaction rules to enable energy services to retail customers and to coordinate critical activity between the REP and one or more regional ISOs responsible for energy production and delivery, examples of said activity being the purchase of energy from the ISO and the acceptance of and action upon customer connects or disconnects from the REP.","A functional diagram of the system is shown in . System  comprises a series of modules and system components that are designed to handle unique processing tasks. Each task is \u201cobject-oriented\u201d in that the task is self-contained and not dependent on other tasks. This gives the system  modularity, which reduces overall system complexity and allows for rapid deployment and updates to system components without increasing the risk of system errors. Although system  modules are independent within the system framework, they are interdependent in the system flow. The primary flow of system  is indicated in  beginning with receipt of market transactions in market importer  and ending with customer residual income processor, CRI .","The system  comprises a number of internal entities and a number of external entities both of which are serviced by the system in a real-time event-driven process. System  interacts with external energy ISO partners  to perform inbound and outbound energy market transactions. System  interacts with external customers  who are connected to system  via the internet. System  also interacts with an external internet-based sales management system , the sales management system  in turn connected over the internet to sales agents  in an external sales and marketing organization. Sales agents  are typically customers of energy services from REP  who obtain residual income from REP  for their sales efforts, however the preferred embodiment of the present invention can support other types of sales organizations. System  also interacts with external financial services  to aid in the collection of payment for services.","REP  must interact with system : to perform customer service operations by its customer service call center ; to allow for interaction with back office transaction management  personnel within REP  so that transaction exceptions may be serviced according to the performance required by REP  and its ISO partners ; to create executive reports ; to perform wholesale forecasting for purchase decisions; and to generally support the performance of corporate accounting and financial functions  of REP .","System  comprises a set of automated processes to service stimuli that are generated to and from REP , sales management system , financial services , and ISO partners . The set of automated processes, which are shown as blocks inside system  in , interact with a core SQL database engine  which is a container for holding and organizing a set of customer data records, CDR , and a set of persistent transaction records in transaction table . The set of automated processes are shown in  connected by solid lines to SQL database engine , a given solid line indicating that the associated process to which it is connected exchanges data with the SQL database engine , the associated process generally operating upon said data and selectively reading and writing new data to the SQL database engine . The set of automated processes connected to the SQL database engine are sales application programming interface (API)  which integrally connects internet web service , interactive voice and response system IVR  to the SQL database engine, intranet web service , payment processor , business process function  and wholesale forecaster  which utilizes a data warehouse . REP  and data warehouse  are connected to SQL database engine  via the intranet web service . In the preferred embodiment of the present invention, the connections between the set of automated processes and the SQL database engine  are made by a corporate intranet (not shown) consisting of at least internet protocol IP services over an Ethernet physical infrastructure which may include local area networks (LANs) and wide area networks (WANs) of suitable computers. Such networks are known in the art and will not be further described.","To service external customers , internet web service  accepts customer input such as residential data or requests for information (e.g. monthly electricity usage chart) and sends it to API  for processing.","API  interfaces to internet web service , IVR  and sales management system . API  operates as a communications interface between third party software systems of the sales management system  and SQL database engine  to implement CDR . For example, API  accepts requests from sales management system  and converts them into queries appropriate for the SQL database engine  and then returns information in the form requested. In the preferred embodiment of the present invention, SOAP protocol over XML is utilized between API  and sales management system  and IVR .","Interactive voice response system, IVR , is a system for receiving and servicing telephone calls from external customers  and sales agents . IVR  allows customers to access information in customer data records, CDR  via API  by telephonic means.","Payment processor  provides an interface for system  to financial services  necessary to accept cash payment for services rendered to the customer. For example, payment processor , upon valid notice of payment from financial services , updates customer data records, CDR , in the SQL database engine . In the preferred embodiment of the present invention, financial services  includes the automated clearing house (ACH) network; at least one U.S. Bank for personal check clearing and automated bill payment; the VISA and MasterCard authorization network, at least one major U.S. check cashing firm; and at least one electronic web-based cash transfer firm. Payment processor  is connected to API  to service payments over the internet from external customers  via IVR  or internet web service . The description of the preferred embodiment of the present invention is not intended to limit the invention to the financial system interfaces so described. Other financial service interfaces in payment processor  may be extended for automatic payment processing. Examples of financial services firms are Ace Cash Express, Chase Bank (lockbox), Authorize.Net, PaymentTech and Moneygram.","System  operates an intranet web service  over REP  corporate intranet. Intranet web service  services requests for information to and from SQL database engine  including executive reports , requests for wholesale forecaster  and access to data warehouse , data exchange with back office transaction management  and queries from customer service call center . In another embodiment of the present invention, customer service call center  also utilizes intranet web service  for voice communications using voice over IP.","The business process function  is a set of processes that perform continuous and real-time operations on the data contained in SQL database engine  and is comprised of market importer , inbound transaction processor (ITP) , usage rating process , pre-bill quality control (QC) process , billing process , account aging process , bill treatment and collections process , and CRI .","In the preferred embodiment of the present invention, the system  is implemented on a network of servers operating a Microsoft .NET services network by Microsoft Corporation. The automated processes of business process function  are run continuously as event driven processes which are controlled and generated by a Microsoft .NET services application server.","The business process functions run on a schedule as shown in TABLE 1.",{"@attributes":{"id":"p-0090","num":"0092"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Business Process function","Frequency of runtimes"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Inbound transaction process","Every 2 min"]},{"entry":[{},"Rating process","Every 4 hours"]},{"entry":[{},"Pre-bill quality control","Daily"]},{"entry":[{},"Billing","Daily"]},{"entry":[{},"Aging process","Daily"]},{"entry":[{},"Treatment process","Daily after Aging process"]},{"entry":[{},"CRI - daily calculations","Daily"]},{"entry":[{},"CRI - release process","25, 1, 5and 10of month"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Market importer  continuously monitors the ISO for available transaction data via electronic data interchange (EDI) with ISO partner  and if an EDI transaction exists, downloads it into the SQL database for further processing. More specifically, a transaction event handler (not shown) flags the system  that a transaction has arrived and creates a record of the arrived transaction in transaction table . A transaction in the context of the present invention is a customer related event such as a meter reading, connect declaration, or disconnect declaration. In the preferred embodiment of the present invention described herein, system  is described in terms of specific interaction with ERCOT, the Electric Reliability Council of Texas via electronic data interchange (EDI) transactions according to the ANSI ASC X12 Ver\/Rel 004010 Transaction Set and the ERCOT transaction set known as the \u201cTexas Standard Electronic Transmission\u201d or \u201cTexas SET\u201d. Table 2 shows a list of transaction types and names in the Texas SET which pertain to the present invention. Alternate embodiments are conceived and implemented in the more general case of EDI transaction not confined to the Texas SET definitions, the discussion of the preferred embodiment not intended to limit the processing functions and data structures described herein. For example, the system  has also been applied to actively interoperate with a New York ISO and to natural gas services.",{"@attributes":{"id":"p-0092","num":"0094"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Transaction","Document Title","Document Flow"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["650_01","Service Order Request","REP to TDSP"]},{"entry":["650_02","Service Order Complete Response, ","TDSP to REP"]},{"entry":[{},"Complete Unexecutable, Reject",{}]},{"entry":[{},"Response, or Notification of",{}]},{"entry":[{},"Permit Required",{}]},{"entry":["650_04","Suspension of Delivery Service ","TDSP to REP"]},{"entry":[{},"Notification or Cancellation",{}]},{"entry":["650_05","Suspension of Delivery Service Reject ","REP to TDSP"]},{"entry":[{},"Response",{}]},{"entry":["810_02","TDSP to REP Invoice","TDSP to REP"]},{"entry":["810_03","MOU\/EC Invoice","REP to MC TDSP"]},{"entry":["814_PC","Maintain Customer Information ","REP to TDSP"]},{"entry":[{},"Request","TDSP to REP"]},{"entry":["814_PD","Maintain Customer Information ","TDSP to REP"]},{"entry":[{},"Response","REP to TDSP"]},{"entry":["814_01","Enrollment Request","REP to ISO"]},{"entry":["814_02","Enrollment Reject Response","ISO to REP"]},{"entry":["814_03","Switch REP Notification Request","ISO to TDSP"]},{"entry":["814_04","Switch REP Notification Response","TDSP to ISO"]},{"entry":["814_05","Premise Information and Enrollment ","ISO to REP"]},{"entry":[{},"Response",{}]},{"entry":["814_06","Drop Due to Switch Request","ISO to REP"]},{"entry":["814_07","Drop Due to Switch Response","REP to ISO"]},{"entry":["814_08","Cancel Switch Request","REP to ISO"]},{"entry":[{},{},"ISO to REP"]},{"entry":[{},{},"ISO to TDSP"]},{"entry":["814_09","Cancel Switch Response","REP to ISO"]},{"entry":[{},{},"TDSP to ISO"]},{"entry":[{},{},"ISO to REP"]},{"entry":["814_11","Drop Response","ISO to REP"]},{"entry":["814_12","Date Change Request","REP to ISO"]},{"entry":[{},{},"ISO to REP"]},{"entry":[{},{},"ISO to TDSP"]},{"entry":["814_13","Date Change Response","REP to ISO"]},{"entry":[{},{},"TDSP to ISO"]},{"entry":["814_14","Drop Enrollment Request","ISO to Designated "]},{"entry":[{},{},"REP during Mass"]},{"entry":[{},{},"transition"]},{"entry":["814_15","Drop Enrollment Response","Designated REP "]},{"entry":[{},{},"during Mass "]},{"entry":[{},{},"Transition to ISO"]},{"entry":["814_16","Move-In Request","REP to ISO"]},{"entry":["814_17","Move-In Reject Response","ISO to REP"]},{"entry":["814_18","Establish\/Delete Continuous Service ","REP to ISO"]},{"entry":[{},"Agreement (CSA) Request","ISO to MC TDSP"]},{"entry":["814_19","Establish\/Delete Continuous Service ","ISO to REP"]},{"entry":[{},"Agreement (CSA) Response","MCTDSP to ISO"]},{"entry":["814_20","Create\/Maintain\/Retire ESI ID ","TDSP to ISO"]},{"entry":[{},"Request","ISO to REP"]},{"entry":["814_21","Create\/Maintain\/Retire ESI ID ","ISO to TDSP"]},{"entry":[{},"Response","REP to ISO"]},{"entry":["814_22","Continuous Service Agreement (CSA) ","ISO to REP"]},{"entry":[{},"REP Move In Request",{}]},{"entry":["814_23","Continuous Service Agreement (CSA) ","REP to ISO"]},{"entry":[{},"REP Move In Response",{}]},{"entry":["814_24","Move-Out Request","REP to ISO"]},{"entry":[{},{},"ISO to TDSP"]},{"entry":["814_25","Move-Out Response","ISO to REP"]},{"entry":[{},{},"TDSP to ISO"]},{"entry":["814_26","Ad-Hoc Historical Usage Request","REP to ISO"]},{"entry":[{},{},"ISO to TDSP"]},{"entry":["814_27","Ad-Hoc Historical Usage Response","ISO to REP"]},{"entry":[{},{},"TDSP to ISO"]},{"entry":["814_28","Completed Unexecutable or Permit ","TDSP to ISO"]},{"entry":[{},"Required","ISO to REP"]},{"entry":["814_29","Response to Completed Unexecutable ","ISO to TDSP"]},{"entry":[{},"or Permit Required","REP to ISO"]},{"entry":["820_02","Remittance Advice","REP to TDSP"]},{"entry":["820_03","MOU\/EC Remittance Advice","MCTDSP to REP"]},{"entry":["824","Application Advice","REP to TDSP"]},{"entry":[{},{},"REP to ISO"]},{"entry":[{},{},"ISO to TDSP"]},{"entry":["867_02","Historical Usage","TDSP to ISO"]},{"entry":[{},{},"ISO to REP"]},{"entry":["867_03","Monthly Usage","TDSP to ISO"]},{"entry":[{},{},"ISO to REP"]},{"entry":["867_04","Initial Meter Read Notification","TDSP to ISO"]},{"entry":[{},{},"ISO to REP"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Once a transaction arrival is flagged, ITP  is started and operates on the data associated with the set of arrived transaction records in transaction table  by applying a given set of business rules to the transaction record to determine further steps to be taken. The details of the given set of business rules and the operation of ITP  will be discussed further in relation to . Application of business rules to a set of transaction records normally results in updating a set of customer data records in CDR  associated to the transaction records. Other processes in business process function  are activated according to the schedule and execute further billing oriented processes to operate on the set of associated customer records in CDR . The most common transaction for REP  is a meter reading which will indicate the read date and the usage.","Usage rating process  is activated according to the schedule in Table 1 and operates on the set of customer records, functioning to assign the correct usage billing rate to the current usage for each customer record.","Pre-bill QC process  is activated according to the schedule in Table 1 and operates on the set of customer records. Pre-bill QC process  functions to automatically identify and repair potential errors in customer bills that are about to be generated. For example, a customer may be inappropriately billed because of a change in product code. Pre-bill QC process cross-checks valid product codes with product codes that appear in the transaction record. As another example, a billing error in an amount that is more than five standard deviations above the historical average usage for that customer is flagged as an exception to prevent billing of excessive amounts or to confirm correctness. Once pre-bill QC process  is completed it marks the customer records in the set of customer records as qualified customer records.","Billing process  is activated according to the schedule in Table 1 and generates customer bills, applying taxes and fixed charges as required by REP . Furthermore, customer data records in CDR  for which bills are generated are marked as billed and placed in accounts receivable status.","Account aging process  is activated according to the schedule in Table 1 and retrieves the customers' past due balance based on the payment history contained in CDR  for that customer. Adjustments and payments are recorded according to the age of the invoice. A queue is established and populated to manage the past due invoices. If a customer account has reached a past due status requiring further treatment, then the qualified customer data record is further processed in bill treatment and collections process .","Bill treatment and collections process  then is activated according to the schedule in Table 1 and operates on qualified customer data records requiring treatment applying a set of treatment rules. Treatment rules may be governed by the regional PUC wherein certain customers' accounts may be protected. The customer's Dunning score is calculated and used to assign a grace period for bill payment and a minimum payment amount (or payment they hold). A set of automated actions are taken by bill treatment and collections process  such as past due letter generation, the accrual of charges or fees, sending of a disconnect notice, sending of a disconnect order, sending of a move-out order and sending of an accrued bill to outside collection agency. The bill treatment and collections processor  automatically checks customer data records in CDR  for payments received or for account protection.","Write-off process  is executed by system  when a customer data record indicates that that a customer is in collection. If outside collections have failed after a predetermined time period, the account is automatically closed and the accumulated customer bill is flagged as uncollectible. The system automatically determines that an account is \u201cWritten Off\u201d 10 days after a market \u201cmove out\u201d order is sent and accepted by the market. A \u201cmove out\u201d order formally releases an REP as the representative of a customer for the given retail energy segment.","Updated customer data records in CDR  for which bills have been paid are associated with sales agents  and further processed by CRI . In the preferred embodiment of the present invention, customer data records in CDR  have a sales agent field which is checked by CRI . CRI  checks the customer data records in CDR  bills paid and then provides an accounting to the associated sales agents . Each customer bill is analyzed against payments received and bills are determined to be \u201cpaid in full\u201d or \u201cstill under collection\u201d. If a bill is paid in full and a valid sales agent exists for the customer, CRI  schedules automatic payment of referral and\/or residual fees due to the proper sales agent.","The ESI ID is an electric service identifier assigned to each meter in the ISO region. The ISO typically compiles usage profiles of smaller areas within the region such as zip code areas. REP  may look up a usage profile for an area based on the ESI ID.","Data warehouse  is a repository of data related to the wholesale energy market barriers for decision including a repository of ESI ID information, ESI ID usage profiles, a repository for weather data, a repository for backcast profile load data from ISO partners , a repository for forecast profile load data and a repository for purchasing strategies and information related thereto.","System  is implemented on networked computer servers as a set of software programs executing on the networked servers. As shown in , the hardware model in the preferred embodiment comprises internet web server ; intranet web server ; redundant database servers, DB server  and DB server ; and redundant application servers APP server  and APP server . All of said servers are connected together by a corporate intranet, REP intranet , which forms the basis for network communications. In the preferred embodiment of the present invention, the web servers are connected to the public internet  via Ethernet and an appropriate internet services provider and the servers are: Application Servers : Dell PowerEdge Servers\u20142 GHZ Dual Core Processors\u20144 GB RAM; web servers  and : Dell PowerEdge 2950 Servers\u20142 GHZ Dual Core Processors\u20148 GB RAM; SQL Database Servers, DB Server  and DB Server : Dell PowerEdge 6950 Servers\u2014(4) 2 GHZ Dual Core Processors\u201432 GB RAM. Servers in the context of the present invention may imply a cluster of servers, for example, a cluster of three internet web servers. The current hardware implementation is limited only by cost and availability. Other embodiments may utilize other server and network models.","Referring to , the system  is implemented across the network of servers as a systems application. The software code for business process function , payment processor  and API , as well as Microsoft services scheduler programs are operated on the application servers, APP server  and APP server , which continuously and redundantly accept market transactions and organize batch loads of processing events through business process function . The software code for end-user internet web service  and API  are operated on internet web server  while the software code for internal intranet web service  are operated on intranet web server . The SQL database engine  is implemented redundantly on database servers, DB server  and DB server . The construction of the physical network is done in a standard consistent with the current art of computer networking so that the servicing of the system  programs can be done easily and at reasonable cost by those who are skilled in the art of modern information technology.",{"@attributes":{"id":"p-0105","num":"0107"},"figref":"FIGS. 4A through 4N","b":["182","182","182"]},"Beginning with  and in reference to , a business rule process  for an inbound \u201cEnrollment Rejection\u201d 81402 transaction is shown. The enrollment step  is executed by REP  wherein an 81401 transaction is sent to ERCOT, the 81401 transaction being sent to begin the customer enrollment process for a customer in CDR  with a customer record  corresponding to the ESI ID contained in the 81402 transaction record. In receive step , an 81402 transaction appears as a transaction record in transaction table , having been received by market importer . ITP  then marks the ESI ID status in customer record  in the 81402 transaction record as \u2018R\u2019 for \u2018reject\u2019 in marking step  and in step  adds a copy of the marked 81402 transaction record to the \u2018Rejected\u2019 worklist . At a later time, the \u2018Rejected\u2019 worklist is opened for viewing and the reason code and reasons description contained in the 81402 transaction record is displayed in step . The \u201cenrollment rejection\u201d process ends in step .",{"@attributes":{"id":"p-0107","num":"0109"},"figref":"FIG. 4B","b":["320","321","130","322","183","181"],"sub":["\u2014","\u2014","\u2014","\u2014"]},"The ESI ID in 81405 transaction record is checked to match existing REP customer ESI IDs in CDR  in step . If there is no match to any customer ESI ID, the associated 81405 transaction record is marked in mark step  with \u2018R\u2019 for rejection and the marked transaction is added in step  to a \u201cFast track issue resolution\u201d worklist . In step , the business rule process  ends.","In step , if a customer record  is matched to the ESI ID, then a response qualifier in the 81405 transaction record is checked in RQ step  for an \u2018accept\u2019 response or a \u2018reject\u2019 response. In the case of a \u2018reject\u2019 response, the ESI ID status in customer record  is marked in step  with \u2018R.\u2019 and then in step , the matched 81405 transaction record is placed in \u2018Rejected\u2019 worklist .","In the case of an \u2018accept\u2019 response in RQ step , the ESI ID status in customer record  is marked in step  with \u2018PE\u2019 for \u2018pending\u2019 and relevant premise data, meter data, and service start date from the matched 81405 transaction record is stored in step  in the matching customer record in CDR . The system  is then flagged for a pending meter read in flag step . Both the \u2018accept\u2019 and \u2018reject\u2019 processes as well as the business rule process  end in end step . At a later time, the \u2018Rejected\u2019 worklist  or the \u2018Fast track issue resolution\u2019 worklist  is opened for viewing and the reason code and reasons description contained in the 81405 transaction record is displayed in step  or step , respectively.","ITP  business rules include process  for the reception of a \u2018Drop due to switch\u2019 81406 transaction shown in . In receive step , a 81406 \u2018Drop due to switch\u201d transaction appears as a transaction record in transaction table , having been received by market importer . The ESI ID in the 81406 transaction record is checked for a match to REP customer ESI IDs in CDR  in step . If there is no match with any customer ESI ID, an 81407 \u2018Drop due to switch response\u2019 transaction is sent including a \u2018reject\u2019 code from the REP  to the ISO partners . In step , if a customer record  matches the ESI ID, then the ESI ID in customer record  status is marked in step  with \u2018PM\u2019 (pending move out or drop) and then in step  the associated transaction record is placed in \u2018Dropped\u2019 worklist . Service end date from the associated 81406 transaction record is stored in step  in customer record . Following step , an 81407 \u2018Drop due to switch response\u2019 transaction is sent (including an \u2018accept\u2019 code) from the REP  to the ISO partners . After either the \u2018accept\u2019 or \u2018reject\u2019 responses are sent to ISO partners , steps  or , respectively, the business rule process  ends in end step . At a later time, the \u2018Dropped\u2019 worklist  is opened for viewing and the reason code and reasons description contained in the 81406 transaction record is displayed in step .","ITP  business rules include process  for the reception of a \u2018Cancel switch or move in request\u2019 type 81408 transaction shown in . In receive step , an 81408 \u2018Cancel switch or move in request\u2019 transaction appears as a transaction record in transaction table , having been received by market importer . The ESI ID in the 81408 transaction record is checked for a match to REP customer ESI IDs in CDR  in step . If there is no match with a customer ESI ID, an 81409 \u2018Cancel switch response\u2019 transaction is sent from the REP  to the ISO partners  including a \u2018reject\u2019 code in step . In step , if a customer record  is matched to the ESI ID, then the associated ESI ID status in customer record  is marked in step  with \u2018C\u2019 (canceled) and then in step  the associated 81408 transaction record is placed in \u2018Cancel Request\u2019 worklist . Following step , an 81409 \u2018Cancel switch response\u2019 transaction is sent from REP  to ISO partners  including an \u2018accept\u2019 code in step . After either the \u2018accept\u2019 or \u2018reject\u2019 responses are sent to ISO partners , steps  or , respectively, the business rule process  ends in end step . At a later time, \u2018Cancel Request\u2019 worklist  is opened for viewing and the reason code and reasons description contained in the 81408 transaction record displayed in step .","ITP  business rules include process  for the reception of a \u2018Cancel switch response\u2019 type 81409 transaction shown in . In receive step , an 81409 \u2018Cancel switch response\u2019 transaction appears as a transaction record in transaction table , having been received by market importer . The ESI ID in the 81409 transaction record is checked for a match to REP customer ESI IDs in CDR  in step . In step , if any customer record  is matched to the ESI ID, then a response qualifier in the 81409 transaction record is checked in RQ step  for either an \u2018accept\u2019 response or a \u2018reject\u2019 response. If a \u2018reject\u2019 response in RQ step , then the associated ESI ID status in customer record  is marked in step  with \u2018C\u2019 (canceled) and then in step  the associated 81409 transaction record is placed in \u2018Rejected\u2019 worklist . If the ESI ID does not match a customer ESI ID in step  then the business rule process  ends. Also, if the response qualifier is an \u2018accept\u2019 in RQ step , then the business rule process  ends at end step . At a later time, the \u2018rejected\u2019 worklist  is opened for viewing and the reason code and reason description contained in the 81409 transaction record is displayed in step .",{"@attributes":{"id":"p-0114","num":"0116"},"figref":"FIG. 4F","b":["380","381","130","110","130","382","183","181","152","383","380","389"],"sub":["\u2014","\u2014","\u2014","\u2014","\u2014"]},"In step , if customer record  in CDR  matches the ESI ID, then a response qualifier in the 81411 transaction record is checked in RQ step  for an \u2018accept\u2019 response or a \u2018reject\u2019 response. In the case of a \u2018reject\u2019 response, the associated 81411 transaction record is placed in \u2018Rejected\u2019 worklist  in step . In the case of an \u2018accept\u2019 response, the ESI ID status in customer record  is marked in step  with \u2018PM\u2019 for pending and the associated 81411 transaction record is placed in \u2018Rejected\u2019 worklist  in step . Both the \u2018accept\u2019 and \u2018reject\u2019 processes as well as the business rule process  end in end step . At a later time, the \u2018Rejected\u2019 worklist  is opened for viewing and the reason code and reasons description contained in the 81411 transaction record is displayed in step .","ITP  business rules include process  for the reception of a \u2018Date change request\u2019 type 81412 transaction shown in . In receive step , an 81412 \u2018Date change request\u2019 transaction appears as a transaction record in transaction table , having been received by market importer . The ESI ID in the 81412 transaction record is checked for a match to REP customer ESI IDs in step . If there is no match with any customer ESI ID, an 81413 \u2018Date change response\u2019 transaction is sent from the REP  to the ISO partners  including a \u2018reject\u2019 code in step . In step , if customer record  in CDR  matches the ESI ID, then the ESI ID status in customer record  is marked in step  with \u2018PE\u2019 (pending) and then in step  the customer record  is updated to reflect the valid move in date and move out date. Following step , an 81413 \u2018Date change response\u2019 transaction is sent from REP  to ISO partners  including an \u2018accept\u2019 code in step . After either the \u2018accept\u2019 or \u2018reject\u2019 responses are sent to ISO partners , steps  or , respectively, the business rule process  ends in end step .","ITP  business rules include process  for the reception of a \u2018Move in reject response\u2019 type 81417 transaction shown in . \u2018Move In request\u2019 step  is executed by REP  wherein a 81416 transaction is sent to ISO partners , the 81416 transaction being used to establish a move in date for a customer. In receive step , an 81417 \u2018Move in response\u2019 transaction appears as a transaction record in transaction table , having been received by market importer . The ESI ID in the 81417 transaction record is checked for a match to REP customers' ESI IDs in CDR  in step . If there is no match with a customer ESI ID, the business rule process  is ended in end step .","In step , if a customer record  matches the ESI ID, then the ESI ID status in customer record  is marked in step  with \u2018R\u2019 (rejected) and the associated 81417 transaction record is placed in \u2018Rejected\u2019 worklist  in step  in which the reason code and reason description is displayed in step  at a later time after opening and reviewing the \u2018Rejected worklist . The business rule process  ends with end step .",{"@attributes":{"id":"p-0119","num":"0121"},"figref":"FIG. 4I","b":["450","452","183","181","152","453","130","110","454","453","455","152","456","450","469","307","458","455","462","130","110","464","307","460"],"sub":["\u2014","\u2014","\u2014","\u2014","\u2014","\u2014","\u2014"]},{"@attributes":{"id":"p-0120","num":"0122"},"figref":"FIG. 4J","b":["470","471","130","110","472","183","181","152","473","470","479","473","474","152","475","307","477","474","476","476","477","470","479","307","478"],"sub":["\u2014","\u2014","\u2014","\u2014","\u2014","\u2014","\u2014","\u2014"]},{"@attributes":{"id":"p-0121","num":"0123"},"figref":"FIG. 4K","b":["480","481","130","110","488","152","482","183","181","152","483","480","489","488","483","484","307","485","480","489","489","307","486"],"sub":["\u2014","\u2014","\u2014","\u2014","\u2014","\u2014","\u2014","\u2014"]},"ITP  business rules include process  for the reception of a \u2018Completed unexecutable\/permit required\u2019 81428 transaction shown in . In receive step , a 81428 \u2018Completed unexecutable\/permit required\u2019 transaction appears as a transaction record in transaction table , having been received by market importer . The ESI ID in the 81428 transaction record is checked for a match to REP customer ESI IDs in CDR  in step . If there is no match with a customer ESI ID, an 81429 \u2018Response to completed unexecutable\/permit required\u2019 transaction is sent in step  including a \u2018reject\u2019 code from the REP  to the ISO partners .","In step , if customer record  in CDR  matches the ESI ID, then in step  the associated transaction record is placed in \u2018displayed\u2019 worklist . Following step , an 81429 \u2018Response to completed unexecutable\/permit required\u2019 transaction is sent in step  including an \u2018accept\u2019 code from the REP  to the ISO partners . After either the \u2018accept\u2019 or \u2018reject\u2019 responses are sent to ISO partners , steps  or , respectively, the business rule process  ends in end step . At a later time, the \u2018Displayed\u2019 worklist  is opened for viewing and the reason code and reasons description contained in the 81428 transaction record is displayed in step .",{"@attributes":{"id":"p-0124","num":"0126"},"figref":"FIG. 4M","b":["500","501","130","110","504","152","504","502","183","181","508","508","503"],"sub":["\u2014","\u2014","\u2014","\u2014","\u2014"],"i":["a ","b ","b ","a"]},"If the 65002 purpose code is \u2018reject\u2019 or \u2018unexecutable\u2019, then the ESI ID status in the customer record corresponding to ESI ID is marked in step  with \u2018R\u2019 (rejected) and in step , the 65002 transaction record is placed in \u2018DNP\/RNP transaction rejected\u2019 worklist . The reason code and reason description is displayed in step  at a later time after opening and reviewing the \u2018DNP\/RNP transaction rejected\u2019 worklist . The business rule process  then ends with end step .","If the 65002 purpose code is \u2018accept\u2019 or \u2018complete\u2019 in step  and reference ID is found to match originating ID in customer record in step  and ESI ID matches the ESI ID in customer record , then the transaction type is checked in step  for DNP (disconnect for non-pay) or RNP (reconnect for non-pay). If the transaction type is DNP (disconnect for non-pay) then the ESI ID status in customer record is marked in step  as \u2018D\u2019 (DNP). If the transaction type is RNP (reconnect for non-pay) then the ESI ID status in customer record is marked in step  as \u2018E\u2019 (RNP).","If the 65002 purpose code is \u2018accept\u2019 or \u2018complete\u2019 in step  and reference ID does not match any originating ID in customer records of CDR  in step , then the transaction type is checked in step  for DNP (disconnect for non-pay) or RNP (reconnect for non-pay). If the transaction type is DNP (disconnect for non-pay) then the ESI ID status in the customer record having ESI ID is marked in step  as \u2018PD\u2019 (pending DNP). If the transaction type is RNP (pending RNP) then the ESI ID status in the customer record having ESI ID is marked in step  as \u2018E\u2019 (RNP). After either step  or step  the transaction record is added in step  to the \u2018invalid original transaction number\u2019 worklist . The business rules process  ends in any of the above cases after step , step , step  or step  with end step . At a later time, the \u2018invalid original transaction number\u2019 worklist  is opened for viewing and the reason code and reason description is displayed in step .","ITP  business rules include process  for the reception of a \u2018Suspension of delivery notification or cancellation\u2019 type 65004 transaction shown in . In receive step , a 65004 \u2018Suspension of delivery notification or cancellation\u2019 transaction appears as a transaction record in transaction table , having been received by market importer . The ESI ID in the 65004 transaction record is checked for a match to REP customer ESI IDs in CDR  in step . If there is no match with any customer ESI ID, the business rule process  is ended in end step . In step , if a customer record  matches the ESI ID, then the associated 65004 transaction record is placed in \u2018Suspension of service notification\u2019 worklist  by step . The purpose code and reason description may be displayed in step  at a later time after opening and reviewing the \u2018Suspension and service notification\u2019 worklist . The business rule process  ends with end step .",{"@attributes":{"id":"p-0129","num":"0131"},"figref":"FIG. 5","b":["184","184","562","183","181","184"],"sub":["\u2014","\u2014"]},"Usage rating process  continues with the step  of validating the meter read date in the 86703 transaction. If the meter read start date is less than the meter read end date then the meter read date is valid and the following step  is performed. If the meter read date is not valid then a notice is logged to exception in step  where the transaction record is placed in the protection exceptions worklist .","Step  validates the quantity of the meter reading in the 86703 transaction wherein if the meter quantity value is found to be greater than zero, then the meter quantity is considered to be valid and the following step  is performed. If the meter quantity is not valid then a notice is logged to exception in step  where the transaction record is placed in the billing exceptions worklist .","Step  validates the meter read value in the 86703 transaction wherein if the meter read start value is found to be greater than meter read end value as long as product transfer type code is not \u2018BD\u2019 (demand type), then the meter read value is considered to be valid and the following step  is performed. If the meter read value is not valid then a notice is logged to exception in step  where the transaction record is placed in the protection exceptions worklist .","Step  validates the product assignment in the 86703 transaction wherein if the customer record with ESI ID contained in the 86703 transaction has a valid rate product assigned to it then the product assignment is considered to be valid and the following step  is performed. If the customer is not assigned a proper rate product then a notice is logged to exception in step  where the transaction record is placed in the protection exceptions worklist .","First rating step  rates the current usage by applying a first provider's rate structure to the usage to calculate a first usage cost to the customer. In the preferred embodiment, a rate, in cost per unit usage, is multiplied by the meter read value, although more complicated rate structures are conceived based upon the given rate structure for a given provider.","Second rating step  rates the current usage by applying a second provider's rate structure to the usage to calculate a second rated usage cost to the customer. The second provider in the preferred embodiment is REP  and the rate structure is based on the customer's assigned product rate structure as checked in step . The second rating step  creates a rated record  in which the customer ID, usage and second rated usage cost is stored along with an initial rating process code having value equal to 0 (zero). Step  calculates the difference between the first rated usage and the second rated usage and stores that value in the rated record .","Scaling factors are generated in scaling process ; a scale factor describing a multiplier between an average backcasted usage from ISO partners  and the marking interval usage derived for vector read values for the customer. Backcasting is a process wherein the ISO averages the usage of ESI IDs in similar weather zones to create an average usage profile for that weather zone. Scaling process  will be described further in relation to .","Scale factors generated in scaling process  are stored in data warehouse  for further use by wholesale forecasters. Wholesale forecaster will be described further in relation to .","The final step in usage rating process  is the step  of setting a system flag to indicate that a rated record is available for further processing. The rating process ends in end step . At a time after usage rating process  completes, the \u2018billing exceptions\u2019 worklist  is opened for viewing being displayed in step . Similarly, the \u2018protection exceptions\u2019 worklist  is opened at a later time for viewing being displayed in step .","Pre-bill QC process  is described in flowchart form in . Pre-bill QC process  runs approximately once per day. Pre-bill QC starts by checking for 86703 monthly usage transactions in transaction table . Pre-bill QC process  in step  checks if a 86703 monthly usage transaction is available, and if available then a record of the 86703 transaction is placed in a pre-bill queue  in step . The process is repeated at step  until no more 86703 transactions are available in transaction table . Then pre-bill QC process  checks the transaction table  for newly downloaded TDSP invoice 81002 type transactions in step . If an 81002 transaction is available, then a record of the 81002 transaction is placed in a pre-bill queue  in step . The process is repeated at step  until no more 86703 transactions or 81002 transactions are available in transaction table .","At step , the pre-bill queue is checked for transaction records that have been queued for more than 5 (five) days. If a transaction record is more than five days old, then a log to exception is created in step  and a record is created in \u2018Billing exceptions\u2019 worklist  which may be viewed by system operators at a later time in step . Pre-bill QC process  then continues to step  of querying pre-bill queue  for matching 81002 and 86703 transactions records, a match occurring whenever the 81002 and 86703 refer to the same ESI ID. If a match is not found in the pre-bill queue  then pre-bill QC process  ends at step .","If a match is found in step , then pre-bill QC process  continues to operate on the matched 86703 transaction and 81002 transaction pair so as to complete the quality check process for a bill that is to be created in billing process .","Pre-bill QC process  continues by validating usage data from the 86703 transaction in validate usage data process . If the usage data is found to contain errors or does not match the usage assumed in the TDSP Invoice, then the usage data is not valid and an exception is logged in step . The exception is logged by posting a transaction record to the \u2018Billing exceptions\u2019 worklist. If the usage data is determined to be valid in validate usage data process  then the 81002 TDSP invoice is checked for validity in process . If the invoice is not valid then an exception is logged in step  wherein a transaction record is posted to the \u2018Billing exceptions\u2019 worklist. After any of the exception steps ,  and , pre-bill QC process  repeats  at step  to find another matching 81002 and 86703 invoice.","If the TDSP invoice is validated then the customer record in CDR  associated with ESI ID in the 86703 usage transaction is checked for customer protected status. If the customer is protected then pre-bill QC process  repeats  at step  to find another matching 81002 and 86703 invoice. \u201cProtected status\u201d occurs in situations where collections efforts are to be delayed, such as a customer in bankruptcy.","A rated record  associated with the matched 86703 transaction was previously created by a run of the usage rating process . In the case that the customer is not protected at step  and can be billed for usage then the associated rated record  status is changed to \u2018Ready to Bill\u2019 in step  by setting process code equal to unity (=1). After the rated record is made \u2018Ready to Bill\u2019, then in step , the matched 81002 and 86703 transaction records are deleted from pre-bill queue  and pre-bill QC process  repeats  at step  to find another matching 81002 and 86703 invoice.",{"@attributes":{"id":"p-0145","num":"0147"},"figref":"FIG. 7","b":["624","640","650","640","641","643","644","646","647","650","651","652","653","662","624","641","653","663","590","641","653"],"sub":["\u2014","\u2014","\u2014","\u2014","\u2014","\u2014"]},"\u2018Validate TDSP invoice\u2019 process  continues by getting the invoice type in step  from the transaction typecode . The invoice type is stored in the rated record  associated to the 86703 transaction A. Valid invoice types are inclusive of those contained in the Texas Set which are \u2018PR\u2019 product (monthly usage), \u2018FB\u2019 (final bill), \u2018BD\u2019 (balance due) and \u201826\u2019 (miscellaneous). After the invoice type is stored the step  is performed wherein transaction amount  is stored in rated record . The start date  is then compared to the end date  in step : if start date is greater than or equal to the end date then an exception is logged step  to the \u201cBilling exceptions\u201d worklist ; if start date is less than or equal to end date then the process continues with step .","\u2018Validate TDSP invoice\u2019 process  continues by checking, in step , that the start date  matches the start date ; if the two dates do not match then an exception is logged step  to the \u201cBilling exceptions\u201d worklist ; if the start dates do match then the process continues.","\u2018Validate TDSP invoice\u2019 process  continues by checking, in step , that the end date  matches the end date ; if the two dates do not match then an exception is logged in step  to the \u201cBilling exceptions\u201d worklist ; if the end dates do match then-\u2018Validate TDSP invoice\u2019 process  ends at step .","After the exception is logged in step  then TDSP invoice A is checked for any unknown TDSP charges. If there are no unknown TDSP charges in step  then \u2018Validate TDSP invoice\u2019 process  ends at step . If there are unknown TDSP charges in step  then the unknown charge code is added in step  to a table of TDSP charges contained in SQL database engine  and an exception is logged  to the \u2018Billing exceptions\u2019 list to the effect that there was an unknown TDSP charge involved in the TDSP Invoice transaction A. Furthermore, after step  the associated customer ESI ID is set to \u2018Protected\u2019 in step , an exception is logged to \u2018Protected exceptions\u2019 worklist  in log exception step  and the \u2018Validate TDSP invoice\u2019 process  ends at step .","After each exception is logged to \u2018Billing exceptions\u2019 worklist in steps , , , and  \u2018Validate TDSP invoice\u2019 process  ends.",{"@attributes":{"id":"p-0151","num":"0153"},"figref":"FIG. 8","b":["614","640","650","640","648","646","647","650","654","655","656","657","658","659","651","652"],"sub":["\u2014","\u2014","\u2014","\u2014"]},"In step  of \u2018validate usage data\u2019 process , ESI ID  is checked against REP customer ESI ID numbers in CDR . If no matching ESI ID is found, then validate user data ends at step , otherwise, in step , a customer record  in CDR  is found to match the ESI ID and the process continues with step  in which purpose code  is checked for \u2018cancelled\u2019 status. If purpose code  is \u2018cancelled\u2019 then the customer record  is marked \u2018C\u2019 in step  and the process continues with step . If purpose code  is not \u2018cancelled\u2019 in step , the \u2018validate usage data\u2019 process continues with step .","In step  of \u2018validate usage data\u2019 process  the action code  is checked for \u2018final bill\u2019 status: If the action code  is \u2018final bill\u2019 then the ESI ID in customer record  in step  is marked \u2018C\u2019 and a \u2018FINAL BILL\u2019 flag is set in rated record  after which the process continues with step . If the action code  is other than \u2018final bill\u2019 then the \u2018validate usage data\u2019 process continues with step .","In step  of \u2018validate usage data\u2019 process  the start date  is compared to the end date ; if start date is less than the end date then an exception is logged step  to the \u201cBilling exceptions\u201d worklist ; if start date is greater than or equal to end date then the \u2018validate usage data\u2019 process continues.","\u2018Validate usage data\u2019 process  continues by checking, in step , that the start date  matches the start date ; if the two dates do not match then an exception is logged step  to the \u201cBilling exceptions\u201d worklist ; if the start dates do match then the \u2018validate usage data\u2019 process continues.","\u2018Validate usage data\u2019 process  continues by checking, in step , that the end date  matches the end date ; if the two dates do not match then an exception is logged step  to the \u201cBilling exceptions\u201d worklist ; if the end dates do match then the \u2018validate usage data\u2019 process continues.","In step , meter start value  is compared to meter end value : if meter start value is greater than meter end value then an exception is logged step  to the \u2018Billing exceptions\u2019 worklist ; if the meter start value  is less than or equal to the meter end value  then the \u2018validate usage data\u2019 process continues.","In step , net interval usage , which is typically the monthly usage amount, is checked to be equal to the meter read quantity : if meter read quantity  and net interval usage  are not equal then an exception is logged step  to the \u2018Billing exceptions\u2019worklist ; if the meter read quantity  is equal to the net interval usage  the \u2018validate usage data\u2019 process ends at step . After any of log exception steps , , ,  and  are executed the \u2018validate usage data\u2019 process  ends.",{"@attributes":{"id":"p-0159","num":"0161"},"figref":"FIG. 9","b":["188","188","184","186","722","722","721","152"]},"In step  of billing process  a customer bill is calculated by adding the current balance and the total charges from the rated usage in rated record A; then an associated bill record including at least the summed balance and total charges and a due date is added to customer record . A customer bill  is automatically generated in step  in which an electronic copy of the bill  is stored in customer record . The following step  then updates the rated record A to rated record B by setting the process code equal to two (2) signaling to system  that customer bill  is \u2018Ready to send\u2019. In step , customer bill  is sent to the customer. In the preferred embodiment customer bill  may be printed and sent by regular paper mail to the customer's service address or customer bill  may be emailed to the customer's email address as determined by the customer.","Once customer bill  has been sent in step  the bill status field in the customer record  is set to \u2018A\u2019 in step , signaling system  that customer record  has a bill in accounts receivable. Then a new AgingQueue record in AgingQueue  is created in step , the new AgingQueue record being associated to the customer record  by a customer ID number. After the AgingQueue record has been created the billing process  is repeated  by continuing step  and following subsequent steps in order until all the current rated records with process code=1 have been billed.",{"@attributes":{"id":"p-0162","num":"0164"},"figref":["FIG. 10","FIG. 9"],"b":["740","748","742","188","738","744","746"]},"The AgingQueue  is used extensively in the Aging process  shown in the flowchart of . Aging process  operates on the records contained in AgingQueue  preparing each customer record associated with each AgingQueue record for possible treatment in the case that customer payments have not been received in a timely manner. Aging process  begins with the step  of retrieving a customer record  associated to an AgingQueue record. In step , the oldest active invoice in customer record  is sorted into charges that are current, post-current (between 17 days and 30 days in the preferred embodiment), 31-60 days past due, 61-90 days past due, 91-120 days past due and 120 days or more past due. The sorted amounts are stored in accumulator bins labeled \u2018BalCur\u2019, \u2018PostBalCur\u2019, \u2018Bal30\u2019, \u2018Bal60\u2019, \u2018Bal90\u2019 and \u2018Bal120\u2019, respectively, in aging array . The process is repeated in step  for all active invoices in the customer record, with the sorted charges from each subsequent invoice being summed into the stored amounts in the appropriate accumulator bins of aging array . An active invoice in the preferred embodiment is a customer bill contained in the customer record  with the bill status field marked \u2018A\u2019. In step , the total current balance  is computed as the sum of all accumulator bins after payments and adjustments.","Once all of the invoices for customer record  have been sorted and summed the aging process  continues with the step  of applying adjustments wherein the adjustments are applied to the oldest balance bin in the aging array forward until each balance is zero. An example of an adjustment is an adjustment from an estimated meter read to an actual meter read from a final bill. After adjustments are applied, the step  of applying all received payments is performed wherein payments received by the customer associated to customer record  are applied beginning with the oldest balance bin forward in the aging array until each balance is zero.","In step  the total current balance pending  is calculated, the total current balance pending  being the difference of total current balance  and any payments pending that are in process. Excess payment or adjustments may cause the total current balance  or total current balance pending  to be a credit. Upon calculating the balances in the aging array and the total current balance pending , the step  is performed in which customer record  fields associated to \u2018Bal Cur\u2019, \u2018Post BalCur\u2019, \u2018Bal30\u2019, \u2018Bal60\u2019, \u2018Bal90\u2019 and \u2018Bal120\u2019 are updated with the aging array  data, the total current balance  and the calculated total current balance pending. In step  the aging process  repeats beginning with step  for all customer records in the AgingQueue .","Treatment process  is now described with the help of  and . Treatment process  runs as a Windows Service written in C# (.Net) and in the preferred embodiment runs nightly at 12:30 am. The treatment process  begins examining bills during a post-bill period of time which is measured from the time the bill status is marked \u2018A\u2019 for a billed customer with a customer record in CDR . Subsequently the bill goes through aging process  and the various balances are updated and posted in the customer record as described for aging process . The due date stored in the customer record is set to a given number of days, the given number of days defining the post bill period. A grace period extending the time of the post bill period until an unpaid bill is considered \u201cin treatment\u201d is predetermined by the associated customer's Dunning number. A post bill period of 16 days is used in the preferred embodiment. Grace periods are in the range of zero to nine days in the preferred embodiment.","Dunning numbers are used in the treatment process, the Dunning number being a credit scoring mechanism known in the art for rating the customer with an integer Dunning number of 1 to 4 with 1 being the lowest credit score, 3 being the highest credit score.",{"@attributes":{"id":"p-0168","num":"0170"},"figref":"FIG. 12","b":["192","775","776","152","776","188","190","776","776"]},"Dunning check step  checks, for each customer record in treatment data , for necessary changes to each customer's Dunning number. If in the current billing period, a customer has had a recent \u2018move in\u2019, has had a \u2018disconnect for non-payment\u2019, has had a disconnect notice sent during the billing period, or has had three or more non-stub bills paid on time, then the customer's Dunning number will be changed beginning with upgrade step . Otherwise, the customer's Dunning number remains the same and the process continues with step  after all other customer records in treatment data  have been checked in step . Upgrade step  increases a customer's Dunning number if they recently moved in and have Dunning numbers of 2 or 3 and if the customer has paid their first three bills on time. Downgrade step  decreases a customer's Dunning number to 1 if currently Dunning numbers 2 or 3 and if the customer was disconnected for non-pay (DNP) and was reconnected. Downgrade step  decreases a customer's Dunning number by 1, if currently Dunning numbers 2 or 3 and if customer has two or more disconnect notices with no DNP. Upgrade step  increases a customer's Dunning number from 2 to 3 when a customer pays the previous three bills on-time. At step , a grace period (in days) is set according to a table for each Dunning number and a minimum payment threshold is established for each customer record. The module then moves to step .","Queue reminder calls step  queues payment and agreement reminder calls for customers on a deferred payment plan who have not returned a signed contract agreement. In the preferred embodiment, step  looks for such customers five (5) days prior to the end of the post-bill period.","Treatment process  continues with reminder letter step  wherein payment reminder letters  are sent to customers whose invoice is past due during the grace period, skipping customers who have not ever been in treatment steps or beyond and who have three recent bills paid up.","In disconnect letter step , customer disconnect letters  are sent and outbound calls  are made to those customers whose bill is past due beyond the grace period if the customer is not already \u201cin treatment\u201d. Customers who receive a disconnect letter  or outbound call  in step  have a customer status field marked as being \u201cin treatment\u201d. In the preferred embodiment disconnect letters  may be in the form of an email if the customer's email address is present in the customer record. A disconnect date is established in disconnect letter step .","Reactivate step  reactivates treatment for those customers who have defaulted on their payment plan.","First end treatment step  cancels pending disconnect and move out orders, if present, and removes the customer from being \u201cin treatment\u201d for all customers who have been placed in the status of \u201cin protection\u201d by another system process.","Second end treatment step  cancels pending disconnect and move out orders, if present, and removes the customer from being \u201cin treatment\u201d for all customers whose accounts have been cancelled.","Postpone treatment step  postpones the disconnect date for customers who are already disconnected and are not in \u201cenergized\u201d status where \u201cenergized\u201d means that electricity is turned on to the meter associated to the customer.","Disconnect treatment step  queues disconnect orders for all customers \u201cin treatment\u201d wherein a disconnect date has been established in step  and wherein the disconnect date is due and wherein the customer status is currently \u201cenergized\u201d or connected.","The disconnect order in the preferred embodiment is an ERCOT EDI transaction type 65001 and is queued along with other transactions to be sent in a given business day by the transaction exporter  of . The disconnect order is confirmed by REP  after the disconnect pending time wherein the customer's service has been turned off by the TDSP and an ERCOT EDI transaction type 65002 is sent to REP  with a \u2018disconnected for non-payment\u2019 DNP transaction \u2018Accept\u2019 response as described in the transaction business rules process .","After the disconnect order has been confirmed the treatment process  continues with move out step  wherein move out orders are queued for all active customers \u201cin treatment\u201d. In move out step , customers which have disconnect orders confirmed more than five days prior to the current date will be queued to receive a move out order. The result of queuing a move out order for a customer is that the customer is removed as REP  customer of record with the ISO partners . Treatment process ends at end step .",{"@attributes":{"id":"p-0180","num":"0182"},"figref":["FIG. 13","FIG. 2","FIGS. 10-12","FIG. 2","FIG. 10"],"b":["175","175","175","801","800","152","801","190","803","746","190","192","175","805","175","806","800","808","801","786","800","175","786","800","812","800","800","814","815"]},"In the case that the paying customer has been taken out of treatment in step  then several other steps are taken to insure that any other treatment processes underway will be cancelled. In step , a check for any outbound calls to paying customer  is made and if there is an outbound call queued then the outbound call is cancelled at step . If there is no outbound call queued then check step  is made for a disconnect notice that may have been sent to paying customer . If a disconnect notice was not mailed then a disconnect notice in queue is canceled  so that the notice is not sent. If the disconnect notice was indeed mailed in check step  then second check step  is made to ascertain if the disconnect order is queued. If the disconnect order has not been queued then payment processor  ends at step .","Once a disconnect order has been queued for paying customer  and check  verifies that this is the case, a third check step  is made to ascertain if the disconnect order has been sent to the associated TDSP in an EDI transaction. If the disconnect order has been sent then a reconnect order  is sent to the TDSP directly without queuing and the paying customer  will regain service. If the disconnect order has not been sent then the queued disconnect order is canceled in step . Payment processor  ends at step  after either step  or step .",{"@attributes":{"id":"p-0183","num":"0185"},"figref":"FIG. 14","b":["195","120","195","900","910","900","901","904","906","904","906","900"]},"CRI release process  repeats at step  on the 25th, 1st, 5th and 10th days of each month in the preferred embodiment and operates to populate CRI table , CRIDetail table  and CRI Info table . CRI table  and CRIDetail table  are treated as atomic in the sense that all data for the current billing month is reconstructed every time that CRI release process  runs. CRI Info table  is a summary data table with summary data from CRI table  accessible by sales management . Current billing month data is repopulated in CRI Info table  each time CRI release process  runs. Previous billing month data is left unaltered and is persistently stored in CRI Info table  in the preferred embodiment of the present invention.","A flowchart of the CRI daily calculation process  is drawn in . The CRI daily calculation process  begins at start event  which activates process  at a predetermined times. The predetermined times are 3:00 am each day in the preferred embodiment. After activation, the process continues with step  wherein BillPay table  and BillPayDetail table  are cleared of all data for the current billing month. Once cleared the BillPay table  is populated in step  with the set of bills  which are marked \u2018A\u2019 for accounts receivable, in CDR . The set of bills  are incorporated as a set of bill records  contained in BillPay table  having at least the field's bill number , customer number , total current balance , and payment applied . A bill record represents a unique customer bill.","Process  continues by applying adjustments and payments on the bill records . BillPayDetail table  comprises a set of payment\/adjustment records  with at least one payment\/adjustment record per bill record in BillPay table . There is a one to many relation between a bill record in BillPay table  and the set of payment\/adjustment records  in BillPayDetail table . In step  all unbilled adjustments are obtained from CDR  for the customer record associated to a first bill record in the set of bill records  and then the adjustments are applied to the first bill record in step  to create at least one payment\/adjustment record in the set of payment adjustment records . In step  all active payments credited to the customer associated to the given bill record are obtained from payment processor  in  and then in step  the payments are applied to the given bill record to create at least one record in the set of payment\/adjustment records .","Each payment adjustment record contains at least the fields: bill number , customer number , transaction number , payment and payment applied . Payment amount is collected in payment transaction with transaction number ; a credit equal to or less than payment amount is applied to the customer bill with bill number as payment applied . Payment amount may be generated by a customer payment from step  or by a system adjustment from step . An excess payment or adjustment, which is the difference: (payment amount \u2212payment applied ), is applied to another bill for the same customer number with the next largest bill number associated with customer number . In step , payment applied is updated with payment applied by adding the payment applied to the pre-existing payment applied . Then the payment\/adjustment process is repeated in step  for all of the set of bill records  in BillPay table . When all bill records  have processed as described in the combination of steps , , ,  and , CRI daily calculation process  ends at step .",{"@attributes":{"id":"p-0188","num":"0190"},"figref":"FIG. 16","b":["910","910","940","910","940"]},"Extract step  extracts from the set of bill records  in BillPay table  those bill records for which payment applied is greater than or equal to 99% of total current charges . The extracted bill records from extract step  are stored to a set of paid bills . From the set of paid bills , a set of commissionable bills  is created in the step  wherein only bill records in set of paid bills  for the current billing period  are included. The set of commissionable bills  is then available to populate customer records in CRI table . A CRT record  in CRI table  contains at least a customer number , sales agent ID , billing period month , release date , total billing period usage and band number ","Step  queries CDR  for data -for each customer number in each bill record in set of commissionable bills  according to repeat step . For all customer numbers with only one billing record in set of commissionable bills , step  takes a single bill from set of commissionable bills  and populates CRI record  in CRI table . For customers with at least two billing records in the set of commissionable bills , the rated kwh usage associated to each bill is added to billed usage of CRI Detail table  in step  and then in step , the rated usage summed for each billing record associated to customer number , the sum being accumulated and stored in usage in CRI table . CRI Detail table  has a set of records  with at least the fields of bill number , customer number and billed usage . The steps  and  are repeated  for all customers with at least two records in BillPay.","CRI release process  completes by updating CRI Info table  in step  wherein records in CRI Info table  are updated to include records  in CRI table . CRI info table  persistently stores records  from each execution of release process . CRI release process  then ends at step .","Application programming interface, API  of  is further described in reference to . API  is a secure gateway into the functionality provided by system . API  is a means to accelerate integration of systems owned and operated by third party integration partners  without sacrificing business rules and controls necessary to the integrity of system . Third party integration partners  are provided a security protocol and functional specification  that are used to integrate with system .","In addition to functional specification , API  comprises security protocol , service location lookup service , customer order processing service , payment processing service , rate quote generation service , customer billing information service  and customer order status service . All six API services , , , ,  and  are accessed from third party integration partners  via security protocol . All six API services access SQL database engine  via database servers  and  (shown in ).","API  functions to receive system requests from third party integration partners , process requests according to the type of request utilizing one of the six API services, transforming the requests into SQL database queries which are sent to SQL database engine , receiving query results from SQL database , transforming query results into a standard form specified by functional interface specification , and replying to third party integration partners  with system results ","All system requests transit security protocol . The security protocol includes authorization as a valid user of API  and assignment of security rights\/privileges to the available set of function calls in API . Once a system request clears security protocol , pre-approved third party third party integration partners  have access to the six primary functional API services:\n\n","Scaling process  is shown in the block diagram  wherein the monthly interval usage and scale factor is calculated and stored for a given 86703 transaction associated to a customer ESI ID. In step , monthly interval usage from the 86703 transaction is stored in datawarehouse  as usage . The weather zone is then looked up for the ESI ID in step  followed by a lookup of a set of backcast profiles  from one of ISO partners  associated to the weather zone in step . A backcast profile, in the set of backcast profiles, is a profile of usage for a given day in kW, wherein the usage is averaged for a group of ESI IDs in the weather zone and reported in 15 second time intervals. The backcast profile may be looked up for an entire monthly interval.","In step  a scale factor for the ESI ID for a given monthly interval is computed and stored in datawarehouse  as scale factor  according to:",{"@attributes":{"id":"p-0198","num":"0211"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mi":"S","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"ESIID"}},"mo":"=","mfrac":{"mrow":[{"mi":"U","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"ESIID"}},{"munder":{"mo":"\u2211","mrow":{"mi":["i","day"],"mo":","}},"mo":"\u2062","mrow":{"mi":"U","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["i","day","zone"],"mo":[",",","]}}}}]}}}},"br":{},"sub":["\u2014","\u2014"],"b":"2806"},{"@attributes":{"id":"p-0199","num":"0212"},"figref":["FIG. 19","FIG. 18"],"b":["820","2821","2824","2823","2812","2825","2826","2813","2812","2811","196","586"],"br":[{},{}],"in-line-formulae":[{},{}],"i":["U","d,ESIID","S","ESIID","U","d"],"sub":["f","f"]},"In step , the forecast profiles are grouped by regions in which energy will be purchased and then in step  the usage days d are summed for all ESI IDs in the set of scaled forecast profiles  according to",{"@attributes":{"id":"p-0201","num":"0214"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"msub":{"mi":["U","region"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"d"}},{"munder":{"mo":"\u2211","mrow":{"mrow":{"mi":["ESIID","in","region"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}]},"mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mo":"\u2062","mrow":{"msub":{"mi":["U","f"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["d","ESIID"],"mo":","}}}}],"mo":"="}}},"br":{},"b":["2824","2829","2814","2813"]},"Depositary requirements decisions\u2014which are decisions based on data and scoring wherein system business rules are applied\u2014that determine whether the System  data model is a highly relational set of SQL table structures designed to support self-enforcing rules, data integrity, system queues, and last-point exception buckets. The overall design is centered on the customer data entity and provides relationships to all energy system business entities and processes.","A block diagram of system  data model is provided in . Data model  comprises a set of entities wherein the entities are comprised of sets of data tables. The entities have relationships between them as shown by the solid lines in , the relationships enforcing relational sharing of data between tables within one entity and with tables within another entity.","The entities in data model  are: ESI ID warehouse entity  for holding data relating to specific ESI IDs, Wholesale entity  for compiling data relating to forecast models and ESI ID usage profiles, Market Transactions entity  for storing transactions sent\/received to\/from the ISO or TDSP, Orders entity  for containing sales order information, Sales Consultants entity  for containing records relating to the sales process, Customer entity  for accumulating detailed customer information, Rating entity  for compiling usage rating data, Products and Rates entity  for holding the various products and rates for the ESI IDs, Discounts entity  for describing customer discounts, Payments entity  for keeping records related to customer payments, Bills entity  for accumulating billing information for customers and commissions entity  for containing sales commission information relating to customer residual income.","The entities in data model  sharing relational data are as follows: Customer entity  shares relational data with Rating entity , Wholesale entity , Orders entity , Sales consultants entity  and Bills entity . Market transactions entity  shares relational data with Orders entity , ESI ID Warehouse , Wholesale entity  and Rating entity . Orders entity  shares relational data with Sales consultants  in addition to those relationships already described. Bills entity  shares relational data with Rating entity , Payments entity , Commissions entity  and Customer entity . Rating entity  shares relational data with Products and Rates entity , Discounts entity  and Bills entity .","Data model  includes queuing and logging entities for managing the operational aspects of REP , the queuing entities typically being accessed by the company operations staff, customer service staff, or IT operations staff within REP . The queuing entities within data model  are: Exceptions entity  for logging transaction exceptions and other system exceptions, System Queues entity  comprised of queuing tables relating to worklists and business operational functions such as a queue for printing bills, Security entity  for holding system user data such as authorization data, System logs entity  for containing tables of various system software logs, and Alerts entity  for logging data records relating to critical system alerts.",{"@attributes":{"id":"p-0207","num":"0220"},"figref":"FIGS. 21-37"},"Most data tables have a key assigned to one field indicated by a key graphic in the given figure. Where the key is assigned to one field, the field is called the primary key and serves as a unique identifier to each record in the data table. In some cases there may be multiple primary keys, wherein a combination of the multiple primary keys is required to uniquely specify each record in the data table. The solid line relationships have either a key or an infinity symbol graphic on the ends. A single key on one end and a single key on the other end of a solid line connection indicates a one-to-one relationship between the connected data tables. A single key on one end and an infinity symbol on the other end of a solid line connection indicates a one-to-many relationship between the a first data table and a second data table\u2014implying that for each instance of the first data table there may be many instances of the second data table. Relationships between tables require a foreign key, a foreign key being a predefined field within a data table that contains data matching the primary key in another data table.",{"@attributes":{"id":"p-0209","num":"0222"},"figref":"FIG. 21","b":["1100","150","1100","1110","1110","1111","1120","1120","1121","1130","1130","1131","1140","1140","1141","1150","1150","1151","1160","1170"]},"LookServiceProvider table  has a one to many relationship  with ESIIDAreaOfUse table  wherein ESIIDAreaOfUse table  contains foreign key ProviderID  corresponding to lookServiceProvider table  primary key .","LookESIIDTDSPStatus table  has a one to many relationship  with ESIIDAreaOfUse table  wherein ESIIDAreaOfUse table  contains foreign key ESIIDTDSPStatusCd  corresponding to LookESIIDTDSPStatus table  primary key .","LookESIIDPremiseType table  has a one to many relationship  with ESIIDAreaOfUse table  wherein ESIIDAreaOfUse table  contains foreign key PremiseTypeId  corresponding to LookESIIDPremiseType table  primary key .",{"@attributes":{"id":"p-0213","num":"0226"},"figref":"FIGS. 22A","b":["22","22","22","2200","150","2200","2201","2201","2202","2203","2203","2204","2205","2205","2206","2207","2207","2208","2216","2216","2217","2218","2218","2219","2220","2221","2221","2222","2223","2224","2224","2225","2226","2231","2231","2232","2233","2233","2234","2235","2236","2236","2237","2238","2238","2239","2247","2247","2248","2249","2249","2250","2251","2252","2252","2253","2254","2254","2255","2256","2257","2257","2258","2259","2259","2260","2261","2262","2262","2263","2264","2264","2265","2266","2267","2267","2268","2277","2277","2278","2279","2280","2281","2281","2282","2283","2283","2284","2285","2285","2286","2287","2287","2288","2289","2289","2290"]},"LookWeatherZone table  has a one-to-many relationship  with LookLoadProfile table  wherein LookLoadProfile table  contains foreign key WeatherZone  corresponding to LookWeatherZone table  primary key . LookWeatherZone table  has a one-to-many relationship  with LookWeatherStations table  wherein LookWeatherStations table  contains foreign key WeatherZone  corresponding to LookWeatherZone table  primary key . LookWeatherStations table  has a one-to-many relationship  with WeatherData table  wherein WeatherData table  contains foreign key StationCd  corresponding to LookWeatherStations table  primary key .","LookInterval table  has a one-to-many relationship  with MCP table  wherein MCP table  contains foreign key IntervalId  corresponding to LookInterval table  primary key . LookInterval table  has a one-to-many relationship  with AncilaryCharges table  wherein AncilaryCharges table  contains foreign key IntervalId  corresponding to LookInterval table  primary key . LookInterval table  has a one-to-many relationship  with AdjustedUsage table  wherein AdjustedUsage table  contains foreign key IntervalId  corresponding to LookInterval table  primary key .","LookLoadProfile table  has a one-to-many relationship  with ESIIDProfile table  wherein ESIIDProfile table  contains foreign key LoadProfileld  corresponding to LookLoadProfile table  primary key . LookLoadProfile table  has a one-to-many relationship  with ESIIDScale table  wherein ESIIDScale table  contains foreign key LoadProfileId  corresponding to LookLoadProfile table  primary key . LookStations table  has a one-to-many relationship  with ESIIDProfile table  wherein ESIIDProfile table  contains foreign key StationID  corresponding to LookStations table  primary key . ESIIDProfile table  has a one-to-many relationship  with ESIIDScale table  wherein ESIIDScale table  contains foreign key BlueESIID corresponding to ESIIDProfile table  primary key .","ERCOTForecast table  has a one-to-many relationship  with ERCOTForecastInterval table  wherein ERCOTForeeastInterval table  contains foreign key ERCOTForecastId  corresponding to ERCOTForecast table  primary key . LookInterval table  has a one-to-many relationship  with ERCOTForecastInterval table  wherein ERCOTForecastInterval table  contains foreign key IntervalId  corresponding to lookInterval table  primary key . LookInterval table  has a one-to-many relationship  with ERCOTBackcastInterval table  wherein ERCOTBackcastInterval table  contains foreign key IntervalId  corresponding to LookInterval table  primary key . LookInterval table  has a one-to-many relationship  with LoadBackcastInterval table  wherein LoadBackcastInterval table  contains foreign key IntervalId  corresponding to LookInterval table  primary key . LookInterval table  has a one-to-many relationship  with LoadForecastInterval table  wherein LoadForecastInterval table  contains foreign key IntervalId  corresponding to LookInterval table  primary key . LoadForecast table  has a one-to-many relationship  with LoadForecastInterval table  wherein LoadForecastInterval table  contains foreign key LoadForeeastId  corresponding to LoadForecast table  primary key . LoadBackcast table  has a one-to-many relationship  with LoadBackcastInterval table  wherein LoadBackcastInterval table  contains foreign key LoadBackcastId  corresponding to LoadBackcast table  primary key . ERCOTBackcast table  has a one-to-many relationship  with ERCOTBackcastInterval table  wherein ERCOTBackcastInterval table  contains foreign key ERCOTBackcastId  corresponding to ERCOTBackcast table  primary key .","WholesaleProduct table  has a one-to-many relationship  with WholesaleProductPurchase table  wherein WholesaleProductPurchase table  contains foreign key WholesaleProductId  corresponding to WholesaleProduct table  primary key . WholesaleProduct table  has a one-to-many relationship  with PurchaseStrategy table  wherein PurchaseStrategy table  contains foreign key WholesaleProductId corresponding to WholesaleProduct table  primary key . LookWholesaleProduct table  has a one-to-many relationship  with WholesaleProduct table  wherein WholesaleProduct table  contains foreign key StatusCd  corresponding to LookWholesaleProduct table  primary key . WholesalePurchase table  has a one-to-many relationship  with WholesaleProductPurchase table  wherein WholesaleProductPurchase table  contains foreign key WholesalePurchaseId  corresponding to WholesalePurchase table  primary key . LookWholesalePurchase table  has a one-to-many relationship  with WholesalePurchase table  wherein WholesalePurchase table  contains foreign key StatusCd  corresponding to LookWholesalePurchase table  primary key .",{"@attributes":{"id":"p-0219","num":"0232"},"figref":"FIGS. 24A and 24B","b":["1400","150","1400","1410","1410","1411","1420","1420","1421","1430","1430","1431"]},"Customer table  has a one-to-many relationship  with Orders table  wherein Orders table  contains foreign key CustomerNbr corresponding to Customer table  primary key . Customer table  has a one-to-many relationship  with ESCustTransactionMstr table  wherein ESCustTransactionsMstr table  contains foreign key CustomerNbr corresponding to Customer table  primary key .",{"@attributes":{"id":"p-0221","num":"0234"},"figref":"FIG. 25","b":["3500","150","3500","3501","3501","3502","3503","3503","3504","3505","3506","3506","3507","3508","3508","3509","3510","3510","3511","3512","3512","3513","3514"]},"Customerinfo table  has a one-to-many relationship  with CRIInfo table  wherein CRIInfo table  contains foreign key DPICustNbr  corresponding to CustomerInfo table primary key .",{"@attributes":{"id":"p-0223","num":"0236"},"figref":"FIGS. 26A","b":["26","26","26","1600","150","1600","1605","1605","1606","1610","1610","1611","1615","1615","1616","1620","1620","1621","1625","1625","1626","1627","1630","1630","1631","1635","1635","1636","1640","1640","1641","1645","1645","1646","1650","1650","1651","1655","1655","1656","1660","1660","1661","1665","1665","1666","1670","1670","1671","1675","1675","1659","1680","1680","1681","1682","1685","1685","1686","1688","1688","1689","1690","1690","1691","1695","1695","1696","1697"]},"Customer table  has a one-to-many relationship  with CustomerProtection table  wherein CustomerProtection table  contains foreign key CustomerNbr corresponding to Customer table  primary key . Customer table  has a one-to-many relationship  with CustomerMail table  wherein CustomerMail table  contains foreign key CustomerNbr corresponding to Customer table  primary key . Customer table  has a one-to-one relationship  with CustomerCredit table  wherein CustomerCredit table  contains foreign key CustomerNbr  corresponding to Customer table  primary key . Customer table  has a one-to-many relationship  with Notes table  wherein Notes table  contains foreign key CustomerNbr corresponding to Customer table  primary key . Customer table  has a one-to-many relationship  with CustornerCreditHistory table  wherein CustomerCreditHistory table  contains foreign key CustomerNbr corresponding to Customer table  primary key . Customer table  has a one-to-many relationship  with CustomerTaxQueue table  wherein CustomerTaxQueue table  contains foreign key CustomerNbr corresponding to Customer table  primary key . Customer table  has a one-to-many relationship  with CustomerPaymentMethod table  wherein CustomerPaymentMethod table  contains foreign key CustomerNbr corresponding to Customer table  primary key . Customer table  has a one-to-many relationship  with CustomerLetterQueue table  wherein CustomerLetterQueue table  contains foreign key CustomerNbr corresponding to Customer table  primary key . Customer table  has a one-to-many relationship  with CustomerRewards table  wherein CustomerRewards table  contains foreign key CustomerNbr corresponding to Customer table  primary key . Customer table  has a one-to-many relationship  with CustomerSavings table  wherein CustomerSavings table  contains foreign key CustomerNbr corresponding to Customer table  primary key . Customer table  has a one-to-many relationship  with ServiceLocation table  wherein Service Location table  contains foreign key CustomerNbr corresponding to Customer table  primary key .","ServiceLocation table  has a one-to-many relationship  with CustomerDiscounts table  wherein CustomerDiscounts table  contains foreign key ServiceLocationID corresponding to ServiceLocation table  primary key . ServiceLocation table  has a one-to-many relationship  with CustomerRate table  wherein CustomerRate table  contains foreign key ServiceLocationID corresponding to ServiceLocation table  primary key . ServiceLocation table  has a one-to-many relationship  with CustomerTax table  wherein CustomerTax table  contains foreign key ServiceLocationID corresponding to ServiceLocation table  primary key . ServiceLocation table  has a one-to-many relationship  with CustomerProducts table  wherein CustomerProducts table  contains foreign key ServiceLocationID corresponding to ServiceLocation table  primary key .","Products table  has a one-to-many relationship  with CustomerRate table  wherein CustomerRate table  contains foreign keys ProductNbr and ProductSt corresponding to Products table  primary keys  and , respectively. Products table  has a one-to-many relationship  with CustomerProducts table  wherein CustomerProducts table  contains foreign keys ProductNbr and ProductSt corresponding to Products table  primary keys  and , respectively.","CustomerDiscounts table  has a one-to-many relationship  with CustomerRate table  wherein CustomerRate table  contains foreign key CustDiscountNbr corresponding to CustomerDiscounts table  primary key .","ESIID table  has a one-to-many relationship  with ServiceLocation table  wherein ServiceLocation table  contains foreign key OldBlueESIID corresponding to ESIID table  primary key .","CustomerTax table  has a one-to-many relationship  with CustomerTaxDetail table  wherein CustomerTaxDetail table  contains foreign key CustomerTaxID corresponding to CustomerTax table  primary key .",{"@attributes":{"id":"p-0230","num":"0243"},"figref":"FIG. 27","b":["1700","150","1700","1710","1710","1711","1720","1720","1721","1730","1730","1731","1740","1740","1741","1750","1750","1751"]},"RatingLog  has a one to many relationship  with RatingLogDetail , wherein RatingLogDetail  contains foreign key RatingLogId  corresponding to RatingLog table  primary key .",{"@attributes":{"id":"p-0232","num":"0245"},"figref":["FIG. 28","FIG. 28"],"b":["1800","1800","150","1800","1810","1810","1811","1820","1820","1821","1822","1830","1830","1831","1832","1840","1840","1841","1850","1850","1851","1852","1853","1860","1860","1861"]},"ProductComponent table  has a one to many relationship  with ProductToComponents table  wherein ProductToComponents table  contains foreign key ComponentNbr  corresponding to ProductComponent table  primary key ComponentNbr .","ProductComponent table  has a one to many relationship  with ComponentRate table  wherein ComponentRate table  contains foreign key ComponentNbr  corresponding to ProductComponent table  primary key ComponentNbr .","ProductComponent table  has a one to many relationship  with ComponentRateOverride table  wherein ComponentRateOverride table  contains foreign key ComponentNbr  corresponding to ProductComponent table  primary key ComponentNbr .","Products table  has a one to many relationship  with ProductToComponents table  wherein ProductToComponents table  has combination foreign keys ProductNbr  and ProductSt  corresponding to Products table  combination primary keys ProductNbr  and ProductSt .","Products table  has a one to many relationship  with CustomerProducts table  wherein CustomerProducts table  contains combination foreign keys ProductNbr and ProductSt corresponding to Products table  combination primary keys ProductNbr  and ProductSt .",{"@attributes":{"id":"p-0238","num":"0251"},"figref":"FIG. 29","b":["1900","150","1900","1910","1911","1920","1921","1930","1931"]},"Discounts table  has a one to many relationship  with DiscountRate table  wherein DiscountRate table  contains foreign key DiscountNbr  corresponding to Discounts table  primary key DiscountNbr .","Discounts table  has a one to many relationship  with CustomerDiscounts table  wherein CustomerDiscounts table  contains foreign key DiscountNbr  corresponding to Discounts table  primary key DiscountNbr .",{"@attributes":{"id":"p-0241","num":"0254"},"figref":"FIG. 30","b":["3000","150","3000","3001","3001","3002","3003","3003","3004","3005","3005","3006","3007","3007","3008","3009","3009","3010","3011","3011","3012","3013","3013","3014","3015","3015","3016","3017","3018","3019","3019","3020"]},"LookPaymentSource table  has a one-to-many relationship  with Deposits table  wherein Deposits table  contains foreign key PaymentSourceId  corresponding to LookPaymentSource table  primary key . LookPaymentSource table  has a one-to-many relationship  with PaymentException table  wherein PaymentException table  contains foreign key PaymentSourceId  corresponding to LookPaymentSource table  primary key . LookPaymentSource table  has a one-to-many relationship  with Transactions table  wherein Transactions table  contains foreign key PaymentSourceId  corresponding to LookPaymentSource table  primary key . Transactions table  has a one-to-many relationship  with Deposits table  wherein Deposits table  contains foreign key TransactionNbr  corresponding to Transactions table  primary key . Transactions table  has a one-to-many relationship  with PaymentException table  wherein PaymentException table  contains foreign key TransactionNbr  corresponding to Transactions table  primary key . Transactions table  has a one-to-many relationship  with Payments table  wherein Payments table  contains foreign key TransactionNbr  corresponding to Transactions table  primary key .","LookPaymentStatus table  has a one-to-many relationship  with Payments table  wherein Payments table  contains foreign key StatusCd  corresponding to LookPaymentsStatus table  primary key .","LookPaymentType table  has a one-to-many relationship  with Deposits table  wherein Deposits table  contains foreign key PaymentTypeCd  corresponding to LookPaymentType table  primary key . LookPaymentType table  has a one-to-many relationship  with PaymentException table  wherein PaymentException table  contains foreign key PaymentTypeCd  corresponding to LookPaymentType table  primary key .","LookPaymentException table  has a one-to-many relationship  with PaymentException table  wherein PaymentException table  contains foreign key PaymentExceptionType (shown as \u201cPaymentExceptionT . . . \u201d in ) corresponding to LookPaymentException table  primary key . LookPaymentMethod table  has a one-to-many relationship  with CustomerPaymentMethod table  wherein CustomerPaymentMethod table  contains foreign key PaymentMethodId  corresponding to LookPaymentMethod table  primary key .",{"@attributes":{"id":"p-0246","num":"0259"},"figref":"FIGS. 31A and 31B","b":["2100","150","2100","2105","2105","2106","2110","2110","2111","2115","2115","2116","2120","2120","2121","2125","2125","2126","2130","2130","2131","2135","2135","2136","2140","2140","2141","2142","2145","2145","2146","2150","2130","2150","2151","2155","2135","2155","2156"]},"Bill table  has a one-to-many relationship  with Payments table  wherein Payments table  contains foreign key ApplyToBillNbr  corresponding to Bill table  primary key . Bill table  has a one-to-many relationship  with BillDetail table  wherein BillDetail table  contains foreign key BillNbr corresponding to Bill table  primary key . Documents table  has a one to one relationship  with Bill table  wherein Bill table  contains foreign key DocumentNbr corresponding to Documents table  primary key .","LookBillMethodType  has a one-to-many relationship  with Bill table  wherein Bill table  contains foreign key BillMethodTypeCd (not shown) corresponding to lookBillMethodType table  primary key . LookBillType  has a one-to-many relationship  with Bill table  wherein Bill table  contains foreign key BillTypeCd corresponding to lookBillType table  primary key . LookBillDetailType  has a one-to-many relationship  with BillDetail table  wherein BillDetail table  contains foreign key BillDetailTypeCd corresponding to lookBillDetailType table  primary key . LookDocumentType  has a one-to-many relationship  with Documents table  wherein Documents table  contains foreign key DocumentTypeCd corresponding to lookDocumentType table  primary key .",{"@attributes":{"id":"p-0249","num":"0262"},"figref":"FIG. 32","b":["3200","150","3200","1010","1010","1011","1015","1015","1016","1020","1020","1021","1025","1025","1026","1055","1055","1056","1030","1030","1031","1035","1035","1036","1040","1040","1041","1050","1050","1051","1052","1045","1045","1046"]},"Bill table  has a one-to-many relationship  with BillDetail table  wherein BillDetail table  contains foreign key BillNbr corresponding to Bill table  primary key . Bill table  has a one-to-many relationship with BillPay table  wherein BillPay table  contains foreign key BillNbr corresponding to Bill table  primary key . Bill table  has a one-to-many relationship  with BillPayDetail table  wherein BillPayDetail table  contains foreign key BillNbr corresponding to Bill table  primary key . Bill table  has a one-to-many relationship  with CRIDetail table  wherein CRIDetail table  contains foreign key BillNbr corresponding to Bill table  primary key . Bill table  has a many-to-many relationship  with Payments table  wherein Payments table  contains foreign key BillNbr (not shown) responding to Bill table  primary key .","LookBillPayDetail table  has a one-to-one relationship  with BillPayDetail table  wherein BillPayDetail table  contains foreign key BillPayDetailTypeID corresponding to LookBillPayDetailType table  primary key .","CRI table  has a one-to-one relationship  with CRIDetail table  wherein CRIDetail table  contains foreign key CRINbr (not shown) corresponding to CRI table  primary key .","LookUsageBands table  has a one-to-many relationship  with CRI table  wherein CRI table  contains foreign key BandNbr corresponding to LookUsageBands table  primary key .",{"@attributes":{"id":"p-0254","num":"0267"},"figref":"FIG. 33","b":["2300","150","2300","2310","2310","2315","2320","2320","2325","2330","2330","2335"]},"LookExceptionType table  has a one-to-many relationship  with Exceptions table  wherein Exceptions table  contains foreign key ExceptionTypeCd  corresponding to LookExceptionType table  primary key . LookExceptionStatus table  has a one-to-many relationship  with Exceptions table  wherein Exceptions table  contains foreign key StatusCd  corresponding to LookExceptionStatus table  primary key .",{"@attributes":{"id":"p-0256","num":"0269"},"figref":"FIGS. 34A and 34B","b":["2400","150","2400","2400","2410","2410","2411","2415","2415","2416","2420","2420","2421","2425","2425","2426","2430","2430","2431","2435","2435","2436","2440","2440","2441","2445","2445","2446","2450","2450","2451","2455","2455","2456","2460","2460","2461","2465","2465","2466","2470","2470","2471","2475","2475","2476"]},{"@attributes":{"id":"p-0257","num":"0270"},"figref":"FIG. 35","b":["2500","150","2500","2510","2510","2511","2520","2520","2521","2522","2530","2530","2531","2532","2540","2540","2541","2550","2550","2551","2560","2560","2561","2570","2570","2571"]},"SystemGroup table  has a one-to-many relationship  with SystemPermissions table  wherein SystemPermissions table  contains foreign key GroupNbr corresponding to SystemGroup table  primary key . SystemGroup table  has a one-to-many relationship  with SystemUserGroup table  wherein SystemUserGroup table  contains foreign key GroupNbr corresponding to SystemGroup table primary key .","SystemUser table  has a one-to-one relationship  with SecurityAdjustments table  wherein SequrityAdjustments table  contains foreign key UserID  corresponding to SystemUser table  primary key . SystemUser table  has a one-to-many relationship  with SystemUserGroup table  wherein SystemUserGroup table  contains foreign key UserID  corresponding to SystemUser table  primary key . LookUserType table  has a one-to-many relationship  with SystemUser table  wherein SystemUser table  contains foreign key UserTypeCd corresponding to lookUserType table  primary key . SystemObjects table  has a one-to-many relationship  with SystemPermissions table  wherein SystemPermissions table  contains foreign key ObjectNbr  corresponding to SystemObjects table  primary key .",{"@attributes":{"id":"p-0260","num":"0273"},"figref":["FIGS. 23A-23U","FIG. 2","FIGS. 23A-23U","FIGS. 23A-23G","FIGS. 23H-23N","FIGS. 23O-23U","FIGS. 23A"],"b":["3800","150","3800","183","3800","23","23","23","23","23"]},"The second group of tables ,  and  are primarily utilized in the preferred embodiment of the present invention to collect inbound transactions and organize them for retrieval. The table ESINTransactionMstr is the fundamental table around which inbound transactions are organized.","The Market Transaction tables shown in  comprise: ES81416Mstr table  for holding outbound 81416 EDI transactions, ES81416Mstr table  having a primary key TransactionID ; ES81401Mstr table  for holding outbound 81401 EDI transactions, ES81401Mstr table  having a primary key TransactionID ; ESOUTFileLog table  for logging records of outbound transactions, ESOUFIleLog table  having a primary key ESOutboundFileLogID ; ESInFrrorLog table  for containing records of errored inbound transactions; ESInErrorLog table  having a primary key ESInErrorLogID ; ESGFormatConfig table  for containing ISO format information of inbound and outbound transactions, ESGFormatConfig table  having a primary key ESFormatConfigID .","The Market Transactions shown in  comprise: ES81408Mstr table  for holding outbound 81408 EDI transactions, ES81408Mstr table  having a primary key TransactionID ; ES81429Mstr table  for holding outbound 81429 EDI transactions, ES81429Mstr table  having a primary key transactionID ; ES824Mstr table  for holding outbound 824 type EDI transactions, ES824Mstr table  having a primary key transactionID ; ES814_AE_REQ table  for containing account enrollment information, ES814_AE_REQ table  having a primary key transactionID .","The Market Transaction tables shown in  comprise: ES81002ChargeDetail table  for holding detailed invoice records from 81002 transactions, having a primary key ES81002ChargeDetailId ; ES81002Mstr table  for recording inbound 81002 transactions, having a primary key ES81002MstrlId ; ES820_Detail table  for holding detailed account information from 820 transactions, having a primary key ES820_DetailId ; ES81002TaxDetail table  for containing tax related data from 81002 transactions, having a primary key ES81002TaxDetailId ; and ES820 table  for recording inbound 820 transactions, having a primary key ES820_Id .","ES81002Mstr table  has a one to many relationship  with ES81002ChargeDetail table  wherein ES81002ChargeDetail table  contains foreign key ES81002MstrId corresponding to ES81002Mstr table  primary key .","ES81002Mstr table  has a one to many relationship  with ES81002TaxDetail table  wherein ES81002TaxDetail table  contains foreign key ES81002MstrId corresponding to ES81002Mstr table  primary key .","ES820 table  has a one to many relationship  with ES820_Detail table  wherein ES820_Detail table  contains foreign key ES820_Id corresponding to ES820 table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ES81002Mstr table  in  wherein ES81002Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ES820 table  in  wherein ES820 table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","The Market Transaction tables shown in  comprise: ES81405Mstr table  for recording inbound 81405 transactions, having a primary key ES81405MstrId  and ES81420Mstr table  for recording inbound 81420 transactions, having a primary key ES81420MstrId .","ESINTransactionMstr table  in  has a one to many relationship  with ES81405Mstr table  in  wherein ES81405Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ES81420Mstr table  in  wherein ES81420Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","The Market Transaction tables shown in  comprise: ES814_AC-REQ_IN table  for recording inbound account change requests, having a primary key ES814_AC_REQ_INId  and ES814_AE_RESP table  for recording inbound account enrollment responses, having a primary key ES814_AE_RespId .","ESINTransactionMstr table  in  has a one to many relationship  with ES814_AC-REQ_IN table  in  wherein ES814_AC_REQ_IN table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ES814_AE_RESP table  in  wherein ES814_AE_RESP table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","The Market Transaction tables shown in  comprise: ES86704Mstr table  for recording inbound 86704 transactions, having a primary key ES86704MstrId  and ESINTransactionException table  for logging inbound transaction exceptions having a primary key ESINTransactionExeptionId .","ESINTransactionMstr table  in  has a one to many relationship  with ES86704Mstr table  in  wherein ES86704Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ESINTransactionException table  in  wherein ESINTransactionException table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","The Market Transactions shown in  comprise: ESGStructLayout  for containing layout information, having a primary key ESGSTructLayoutID ; ESGXrefERCOT  for cross-referencing transaction codes from ERCOT, having a primary key ESGXrefERCOTId ; ES65001Detail  for holding detailed 65001transaction data and ES65001Mstr  for recording inbound 65001transactions, having a primary key ES65001MstrId .","ESGStructLayout  has a one to many relationship  with ESGXrefERCOT  wherein ESGXrefERCOT  contains foreign key ESGStructLayoutId corresponding to ESGStructLayout  primary key .","ES65001Mstr  has a one to many relationship  with ES65001Detail  wherein ES65001Detail  contains foreign key ES65001MstrId corresponding to ES65001Mstr  primary key .","The Market Transactions shown in  comprise: ESServiceProviders table  for containing service provider data, ESServiceProviders table  having a primary key ServiceProviderID ; ESSeed table  for generating seed numbers, ESSeed table  having a primary key ESDescription ; ESOutErrorLog table  for holding error information on outbound EDI transactions; ES814_AD_RESP_OUT table  for holding address information for 814 EDI transactions, ES814_AD_RESP_OUT table  having a primary key TransactionID ; ES824_OUT table  for holding account number information for outbound 824 EDI transactions, ES824_OUT table  having a primary key TransactionID .","The Market Transactions shown in  comprise: ES82002Mstr table  for holding inbound 82002 EDI transactions, ES82002Mstr table  having a primary key ES82002MstrId ; ES82002Detail table  for holding inbound 82002 EDI transaction detailed data; ESOUTTransactionMstr table  for staging outbound EDI transactions, ESOUTTransactionMstr table  having a primary key transactionID ; ES81426Mstr table  for holding inbound 81426 EDI transactions, ES81426Mstr table  having a primary key transactionID ; ES81421Mstr table  for holding inbound 81421 EDI transactions, ES81421Mstr table  having a primary key transactionID ; ES814_AC_RESP_OUT table  for holding account change information for 814 EDI transactions, ES814_AC_RESP_OUT table  having a primary key TransactionID ; ES814_AH_REQ table  for containing account history information, ES814_AH_REQ table  having a primary key transactionID .","The Market Transaction tables shown in  comprise: ES867_MU_IN_Detail table  for holding details of 867_MU type transactions, having a primary key ES867_MU_IN_DTLId .","The Market Transaction tables shown in  comprise: ES867_MU_IN table  for recording inbound 867_MU transactions, having a primary key ES867_MU_INId ; ES81402Mstr table  for recording inbound 81402 transactions, having a primary key ES81402MstrId ; ES81417Mstr table  for recording inbound 81417 transactions, having a primary key ES81417MstrId .","ES867_MU_IN table  has a one to many relationship  with ES867_MU_IN_Detail table  in  wherein ES867_MU_IN_Detail table  contains foreign key ES867_MU_INId corresponding to ES867_MU_IN table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ES867_MU_IN table  in  wherein ES867_MU_IN table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ES81417Mstr table  in  wherein ES81417Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ES81402Mstr table  in  wherein ES81402Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","The Market Transaction table shown in  comprises: ESINTransactionMstr table  for organizing and containing master records of all inbound EDI transactions, having a primary key ESINTransactionMstrId . ESINTransactionMstr table  has several one to many relationships which are described herein.","The Market Transaction tables shown in  comprise: ES81406Mstr table  for recording inbound 81406 transactions, having a primary key ES81406MstrId ; ES814_AC-RESP-IN table  for holding inbound account change response transactions, having a primary key ES814_AC_RESP_INId ; ES81425Mstr table  for recording inbound 81425 transactions, having a primary key ES81425MstrId ; ES814_AH-RESP table  for containing inbound account history response data, having a primary key ES814_AH_RespId ; and ESIN81413Mstr table  for recording inbound 81413 transactions, having a primary key ESIN81413MstrId .","ESINTransactionMstr table  in  has a one to many relationship  with ES81406Mstr table  in  wherein ES81406Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ES814_AC-RESP-IN table  in  wherein ES814_AC-RESP-IN table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ES81425Mstr table  in  wherein ES81425Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr  in  has a one to many relationship  with ES814_AH-RESP table  in  wherein ES814_AH-RESP table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr  primary key .","ESINTransactionMstr  in  has a one to many relationship  with ESIN81413Mstr table  in  wherein ESIN81413Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr  primary key .","The Market Transaction tables shown in  comprise: ES810_INVL table  for holding invoice records, having a primary key ES810_INVLId ; ES810_INVL_ChargeDetail table  for holding invoice change details, having a primary key ES810_INVL_DTL_ChargeId ; ES86703Mstr table  for recording inbound 86703 transactions, having a primary key ES86703MstrId ; and ES810_INVL_TaxDetail table  for holding the tax detail related to invoice records, having a primary key ES810_INVL_DTL_TaxId .","ES810_INVL table  has a one to many relationship  with ES810_INVL_ChargeDetail table  wherein ES810_INVL_ChargeDetail table  contains foreign key ES810_INVLId corresponding to ES810_INVL table  primary key .","ES810_INVL table  has a one to many relationship  with ES810_INVL_TaxDetail table  wherein ES810INVL_TaxDetail table  contains foreign key ES810_INVLId corresponding to ES810_INVL table  primary key .","ES86703Mstr table  has a one to many relationship  with ES86703 Detail table  in  wherein ES86703 Detail table  contains foreign key ES86703MstrId corresponding to ES86703Mstr table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ES810_INVL table  in  wherein ES810_INVL table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ES86703Mstr table  in  wherein ES86703Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","The Market Transactions tables shown in  comprise: ES814_AC_REQ_OUTMeterDetail table  for holding information for outbound 814 EDI meter requests, ES814_AC_REQ_OUTMeterDetail table  having a primary key ES814_AC_REQ_OUTMeterDetailID ; ES814_AC_REQ_OUTMtrExpDetail table  for holding information for outbound 814 EDI meter request exceptions, ES814_AC_REQ_OUTMtrExpDetail table  having a primary key ES814_AC_REQ_OUTMtrExpDetail ; ES814_AC_REQ table  for containing outbound account change information, ES814_AC_REQ table  having a primary key transactionID .","The Market Transactions shown in  comprise: ES81424Mstr table  for holding inbound 81424 EDI transactions, ES81424Mstr table  having a primary key transactionID ; ES814_PCMstr table  for holding inbound 814_PC EDI transactions, ES814_PCMstr table  having a primary key transactionID ; ESOUT81412Mstr table  for holding outbound 81412 EDI transactions, ESOUT81412Mstr table  having a primary key transactionID ; ESOUT TransactionException table  for holding outbound EDI transaction exceptions; ES814_AD REQ_OUT table  for containing outbound account address information, ES814_AD_REQ_OUT table  having a primary key transactionID .","ES81408Mstr table  in  has a one-to-one relationship  with ESOUTTransactionMstr table  in  wherein ES81408Mstr table  contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key . ES81429Mstr table  in  has a one-to-one relationship  with ESOUTTransactionMstr table  wherein ES81429Mstr table  contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key . ES814_AE_REQ table  has a one-to-one relationship  with ESOUTTransactionMstr table  in  wherein ES814_AE_REQ table  contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key . ES824Mstr table  in  has a one-to-one relationship  with ESOUTTransactionMstr table  in  wherein ES824Mstr table  contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ; ES814_AD_RESP_OUT table  in  has a one-to-one relationship  with ESOUTTransactionMstr table  wherein ES814_AD_RESP_OUT table  contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ; ES824_OUT table  has a one-to-one relationship  with ES824_OUT table  wherein ESOUTTransactionsMstr table  contains foreign key TransactionID corresponding to ESOUTTransactionMstr table primary key ; ESOUTTransactionMstr table  in  has a one-to-many relationship  with ES82002Mstr table  in  wherein ES82002Mstr table  contains foreign key TransactionID corresponding to ESOUTTransactionMstr table primary key ; ES81426Mstr table  in  has a one-to-one relationship  with ESOUTTransactionMstr table  in  wherein ES81426Mstr table  contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ; ES81421Mstr table  in  has a one-to-one relationship  with ESOUTTransactionMstr table  wherein ES81421Mstr table  contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ; ES814_AC_RESP_OUT table  in  has a one-to-one relationship  with ESOUTTransactionMstr table  wherein ES814_AC_RESP_OUT table  contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ; ES814_AH_REQ table  in  has a one-to-one relationship  with ESOUTTransactionMstr table  wherein ES814_AH_REQ table  contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ; ES81424Mstr table  in  has a one-to-one relationship  with ESOUTTransactionMstr table  in  wherein ES81424Mstr table  contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ; ES814_PCMstr table  in  has a one-to-one relationship  with ESOUTTransactionMstr table  wherein ES814_PCMstr table  contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ; ESOUT81412Mstr table  in  has a one-to-one relationship  with ESOUTTransactionMstr table  wherein ESOUT81412Mstr table  contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ; ES814_AD_REQOUT table  in  has a one-to-one relationship  with ESOUTTransactionMstr table  wherein ES814_AD_REQ_OUT table  contains foreign key TransactionID corresponding to table primary key ; ES814_AC_REQ_OUT table  in  has a one-to-one relationship  with ESOUTTransactionMstr table  wherein ES814_AC_REQ_OUT table  contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ; ESOUTTransactionMstr table  has a one-to-many relationship  with ESOUTTransactionException table  in  wherein ESOUTTransactionException table  contains foreign key TransactionID corresponding to ESOUTTransactionMstr table primary key ; ES82002 table  in  has a one-to-many relationship  with ES82002Detail table  in  wherein ES82002Detail table  contains foreign key ES82002MstrID corresponding to ES82002Mstr table primary key ; ES814_AC_REQ_OUT table  in  has a one-to-many relationship  with ES814_AC_REQ_OUTMeterDetail table  in  wherein ES81_AC_REQ_OUTMeterDetail table  contains foreign key ES814_AC_REQ_OUTId corresponding to ES814_AC_REQ_OUT table primary key ; ES814_AC_REQ_OUT table  in  has a one-to-many relationship  with ES814_AC_REQ_OUTMtrExpDetail table  wherein ES81_AC_REQ_OUTMtrExpDetail table  contains foreign key ES814_AC_REQ_OUTId corresponding to ES814_AC_REQ_OUT table primary key .","The Market Transaction tables shown in  comprise: ES81428Mstr table  for recording inbound 81428 transactions, having a primary key ES81428MstrId ; ES814_AD_RESP_IN table  for holding account drop response data, having a primary key ES814_AD_RESP_INId ; and ES86702Mtr table  for recording inbound 86702 transactions, having a primary key ES86702MstrId .","ESINTransactionMstr table  in  has a one to many relationship  with ES81428Mstr table  in  wherein ES81428Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ES86702Mtr table  in  wherein ES86702Mtr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ES814_AD_RESP_IN table  in  wherein ES814_AD_RESP_IN table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","The Market Transaction tables shown in  comprise: ES867_HU_IN table  for holding inbound 867_HU transactions, having a primary key ES867_HU_INId ; ES65004Mstr table  for recording inbound 65004 transactions, having a primary key ES65004MstrId ; ES65002Mstr table  for recording inbound  transactions having a primary key ES65002MstrId ; ES867_HU_IN_Detail table  for holding detailed information relating to 867 HU transactions, having a primary key ES867_HU_IN_DTLId ; ES65004Detail table  for holding detailed data relating to 65004 transactions, having a primary key ES65004DetailId ; and ES65002Detail table  for holding detailed data relating to 65002 transactions, having a primary key ES65002DetailId .","ES867_HU_IN table  has a one to many relationship  with ES867_HU_IN_Detail table  wherein ES867_HU_IN_Detail table  contains foreign key ES867_HU_INId corresponding to ES867_HU_IN table  primary key .","ES65004Mstr table  has a one to many relationship  with ES65004Detail table  wherein ES65004Detail table  contains foreign key ES65004MstrId corresponding to ES65004Mstr table  primary key .","ES65002Mstr table  has a one to many relationship  with ES65002Detail table  wherein ES65002Detail table  contains foreign key ES65002MstrId corresponding to ES65002Mstr table  primary key .","ESINTransactionMstr table  in  have a one to many relationship  with ES867_HU_IN table  in  wherein ES867_HU_IN table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  have a one to many relationship  with ES65004Mstr table  in  wherein ES65004Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  have a one to many relationship  with ES65002Mstr table  in  wherein ES65002Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","The Market Transaction tables shown in  comprise: ESINFileLog table  for containing inbound transaction file logs, having a primary key ESINFileLogId ; ES81411Mstr table  for recording inbound 81411 transactions, having a primary key ES81411MstrId ; ES81427Mstr table  for recording inbound 81427 transactions having a primary key ES81427MstrId .","ESINFileLog table  has a one to many relationship  with ESINTransactionMstr table  wherein ESINTransactionMstr table  contains foreign key ESINFileLogId corresponding to ESINFileLog table  primary key .","ESINTransactionMstr table  has a one to many relationship  with ES81411Mstr table  wherein ES81411Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  has a one to many relationship  with ES81427Mstr table  wherein ES81427Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","The Market Transaction tables shown in  comprise: ESIN81412Mstr table  for recording inbound 81412 transactions, having a primary key ESIN81412MstrId ; ESINTransactionMeter table  for holding detailed meter data resulting from ISO transactions, having a primary key ESMeterDetailId ; ES814_AR_REQ table  for holding inbound account reconnect records, having a primary key ES814_AR_ReqId ; and ES814_AD_REQ_IN table  for holding inbound account drop requests, having a primary key ES814_AD_REQ_INId .","ESINTransactionMstr table  in  has a one to many relationship  with ESIN81412Mstr table  in  wherein ESIN81412Mstr table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  has a one to many relationship  with ESINTransactionMeter table  in  wherein ESINTransactionMeter table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr table  in  have a one to many relationship  with ES814_AR_REQ table  in  wherein ES814_AR_REQ table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .","ESINTransactionMstr  in  have a one to many relationship  with ES814_AD_REQ_IN table  in  wherein ES814_AD_REQ_IN table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr  primary key .","The Market Transaction tables shown in  comprise: ESINTransactionOrgs table  for maintaining a list of organizations that generate inbound transactions, having a primary key ESINTransactionOrgId ; and, ES86703 Detail table  for holding detailed 86703 transaction data, having a primary key ES86703 DetailId .","ESINTransactionMstr table  in  have a one to many relationship  with ESINTransactionOrgs table  in  wherein ESINTransactionOrgs table  contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table  primary key .",{"@attributes":{"id":"p-0328","num":"0341"},"figref":"FIG. 36","b":["2600","150","2600","2600","2610","2610","2611","2615","2615","2616","2620","2625","2630","2630","2631","2635","2640","2640","2641","2645","2650","2650","2651"]},{"@attributes":{"id":"p-0329","num":"0342"},"figref":"FIG. 37","b":["2700","150","2700","2710","2710","2711","2720","2720","2721","2730","2730","2731","2740","2740","2741"]},"Alert table  has a one-to-many relationship  with AlertLog table  wherein AlertLog table  contains foreign key AlertID corresponding to Alert table primary key . Alert table  has a one-to-many relationship  with AlertNotification table  wherein AlertNotification table  contains foreign key AlertID corresponding to Alert table primary key . AlertLog  may contain a hierarchy of records having parent-child  one-to-many relationships between records wherein the foreign key ParentAlertLogID  of a particular record may refer to the primary key AlertLogID  to identify a parent record.","While the present invention has been described in reference to a preferred embodiment, this description is not intended to be construed in a limiting sense. Various modifications and combinations of the illustrative embodiments, as well as other embodiments of the preferred embodiment, will be apparent to persons skilled in the art upon reference to the description. It is therefore intended that the appended claims encompass any such modifications or embodiments."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":["The disclosed inventions will be described with reference to the accompanying drawings, which show important sample embodiments of the invention and which are incorporated in the specification hereof by reference, wherein:",{"@attributes":{"id":"p-0039","num":"0041"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0040","num":"0042"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0041","num":"0043"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0042","num":"0044"},"figref":"FIGS. 4A-4N"},{"@attributes":{"id":"p-0043","num":"0045"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0044","num":"0046"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0045","num":"0047"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0046","num":"0048"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0047","num":"0049"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0048","num":"0050"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0049","num":"0051"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0050","num":"0052"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0051","num":"0053"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0052","num":"0054"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0053","num":"0055"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0054","num":"0056"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0055","num":"0057"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0056","num":"0058"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0057","num":"0059"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0058","num":"0060"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0059","num":"0061"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0060","num":"0062"},"figref":"FIGS. 22","i":["a","b","c ","d "],"b":["22","22","22"]},{"@attributes":{"id":"p-0061","num":"0063"},"figref":"FIGS. 23","i":["a","u "],"b":"23"},{"@attributes":{"id":"p-0062","num":"0064"},"figref":"FIGS. 24","i":["a ","b "],"b":"24"},{"@attributes":{"id":"p-0063","num":"0065"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0064","num":"0066"},"figref":"FIGS. 26","i":["a","b","c ","d "],"b":["26","26","26"]},{"@attributes":{"id":"p-0065","num":"0067"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0066","num":"0068"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0067","num":"0069"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0068","num":"0070"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0069","num":"0071"},"figref":"FIGS. 31","i":["a ","b "],"b":"31"},{"@attributes":{"id":"p-0070","num":"0072"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0071","num":"0073"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0072","num":"0074"},"figref":"FIGS. 34","i":["a ","b "],"b":"34"},{"@attributes":{"id":"p-0073","num":"0075"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0074","num":"0076"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0075","num":"0077"},"figref":"FIG. 37"}]},"DETDESC":[{},{}]}
