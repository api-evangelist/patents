---
title: Realtime streaming of multimedia content from secondary storage devices
abstract: A method and system for streaming media to a client from a media server is described. In some examples, the system utilizes a virtualization layer to generate a virtual computing environment, or virtual machine, at a UPnP server, which is configured to receive requests for media, identify locations for the media within the secondary storage devices, access the media, and present the media to a client computing device associated with the media requests.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08706867&OS=08706867&RS=08706867
owner: CommVault Systems, Inc.
number: 08706867
owner_city: Oceanport
owner_country: US
publication_date: 20110331
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","DETAILED DESCRIPTION","CONCLUSION"],"p":["This application is related to U.S. patent application Ser. No. 12\/553,294, filed on Sep. 3, 2009, entitled SYSTEMS AND METHODS FOR MANAGEMENT OF VIRTUALIZATION DATA, which is incorporated by reference in its entirety.","Consumers of media are rapidly moving away from using traditional media applications, such as media players that play physical media, to digital media applications, such as content providers that offer streaming of media in real time. For example, content providers such as Hulu.com, Amazon.com, iTunes, and others, provide users with access to a huge library of images, television shows, movies, podcasts, and so on, presenting the media to the users by streaming content from their servers to the user's computing devices. Among a variety of systems, Universal Plug and Play (UPnP) systems enable these content providers, such as providers of music, movies, images, and so on, to easily stream media to user devices remotely located from UPnP servers of the content providers, by utilizing UPnP protocols to facilitate searching and retrieving media from the servers.","Typically, in order to provide users with fast, reliable streaming of desired media, a content provider stores available media files at the a UPnP server, or more specifically, a UPnP AV server. Although storing the media at the server, or at primary storage locations associated with the server, enables for a reliable streaming of media from the server, such storage is expensive to purchase, maintain, and power, which can limit the variety of media offered to users by a content provider. There is a need for a system that overcomes the above problems, as well as providing additional benefits.","Overview","A method and system for providing real time streaming of media stored in secondary storage devices via a media server, such as a Universal Plug and Play (UPnP) server, is described. In some examples, the system utilizes a virtualization layer to generate a virtual computing environment, or virtual machine, at the UPnP server, which is configured to receive requests for media, identify locations for the media within the secondary storage devices, access the media, and present the media to a client computing device associated with the media requests.","In some examples, the system transfers portions of requested media located in secondary storage, such as archive storage, to a client computing device via a virtual environment hosted by a UPnP server. For example, the system may transfer a portion of a requested movie via the UPnP server from archive storage to the client computing device, and after a certain time period, transfer one or more additional portions of the request movie from the archive storage to the client computing device. In some cases, the system transfers additional portions of a media file based on input received at the client computing device. For example, the client computing device may receive a first portion of a movie file, corresponding to a beginning section of the movie, in response to a user selecting a play function at the client computing device, and wait to transfer a second or subsequent portion until additional input (e.g., a skip or forward command) is received at the client computing device. The system may perform such sectioned or incremental streaming of media in order to provide desired media from archive storage to a user without streaming extraneous or unwanted portions of a media file, reducing the impact on the server and the storage devices, among other benefits.","In some examples, the system may automatically manage the storage locations of media offered by a content provider. The system may set certain rules or parameters that govern or define retention criteria for media within the system. For example, the system may store and maintain highly requested media files within high cost, primary storage devices, while moving or migrating less requested media files to cheaper secondary storage devices. Thus, the system, by enabling efficient, fast, and reliable streaming of media located in secondary storage devices as well as primary storage devices, enables content providers to maintain a larger inventory of media available to users, and enables content providers to automatically modify the locations in which media is stored to optimize the overall delivery of media to their customers, among other benefits.","The system will now be described with respect to various embodiments. The following description provides specific details for a thorough understanding of, and enabling description for, these embodiments of the system. However, one skilled in the art will understand that the system may be practiced without these details. In other instances, well-known structures and functions have not been shown or described in detail to avoid unnecessarily obscuring the description of the embodiments of the system.","The terminology used in the description presented below is intended to be interpreted in its broadest reasonable manner, even though it is being used in conjunction with a detailed description of certain specific embodiments of the system. Certain terms may even be emphasized below; however, any terminology intended to be interpreted in any restricted manner will be overtly and specifically defined as such in this Detailed Description section.","Suitable System",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 1 and 2"},"Aspects of the system can be embodied in a special purpose computer or data processor that is specifically programmed, configured, or constructed to perform one or more of the computer-executable instructions explained in detail herein. Aspects of the system can also be practiced in distributed computing environments where tasks or modules are performed by remote processing devices, which are linked through a communications network, such as a Local Area Network (LAN), Wide Area Network (WAN), Storage Area Network (SAN), Fibre Channel, or the Internet. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","Aspects of the system may be stored or distributed on computer-readable media, including magnetically or optically readable computer discs, hard-wired or preprogrammed chips (e.g., EEPROM semiconductor chips), nanotechnology memory, biological memory, or other data storage media. Indeed, computer implemented instructions, data structures, screen displays, and other data under aspects of the system may be distributed over the Internet or over other networks (including wireless networks), on a propagated signal on a propagation medium (e.g., an electromagnetic wave(s), a sound wave, etc.) over a period of time, or they may be provided on any analog or digital network (packet switched, circuit switched, or other scheme). Those skilled in the relevant art will recognize that portions of the system reside on a server computer, while corresponding portions reside on a client computer, and thus, while certain hardware platforms are described herein, aspects of the system are equally applicable to nodes on a network.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","b":["100","100","110","130","140","120","110","110","140","140","110","110","115","110","140"]},"The server  that receives and fulfills the requests originating at the client computing device  may be a media server, such as a UPnP AV media server, or another media server capable of serving or streaming digital media in real time over the network  to the client computing device . For example, the UPnP server is a device capable of sharing and storing digital media, such as photographs, movies, or Music, with devices over a network, using UPnP protocols to communicate with the other devices. For example, a UPnP AV media server provides services to UPnP AV client devices or \u201ccontrol points,\u201d such as client computing device , that enable browsing of media content located to available to the server and fulfilling requests for the media content to be played on the client devices. UPnP AV media servers are available on a variety of operating systems (e.g., BSD, Linux, Mac OS, Windows, Unix, and so on) and hardware platforms (e.g., any network attached storage (NAS) device, personal video recorders, and so on). Example UPnP AV media servers include PS3 Media Server, Windows Media Connect, GeeXbox, and so on.","The media server  stores media, data, and other information in a primary storage location  at or attached to the server . The primary storage location  provides storage for production data generated by the server, as well as a selected number of medial files to be streamed by the content provider. For example, the server  may store media that is highly requested (e.g., new movie releases, current television shows, and so on), or is anticipated to be requested by many users, in the primary storage location , in order to quickly handle many requests for the media. The media stored may be a number of different types of media. Examples include movies, shows, and other video files, audio files, large images files (e.g. medical images), gaming files, word processing files, illustration files, and other media.","The server  also includes a virtual layer  that enables the server to create and establish a virtual computing environment in which to provide media stored in other locations and in other types of storage, such as archive storage, to client computing devices . The virtual layer  communicates with one or more secondary storage devices  that store media files on secondary storage media and other non-primary storage types. Further details regarding the virtual layer  will be discussed with respect to .","The storage of media on the secondary storage devices  is managed and controlled by a data storage system , which facilitates the storage of media files to the second storage devices  and\/or the retrieval\/restoration of media files from the second storage devices . The data storage system  may include a storage manager, one or more data agents, one or more secondary storage devices, one or more storage types, one or more clients, one or more data or information store, a single instancing database, an index, a jobs agent, an interface agent, and a management agent. The data storage system  may include components of a modular storage system, such as the CommVault QiNetix system, the CommVault GALAXY backup system, available from CommVault Systems, Inc. of Oceanport, N.J., aspects of which are further described in the commonly-assigned U.S. patent application Ser. No. 09\/610,738, now U.S. Pat. No. 7,035,880, the entirety of which is incorporated by reference herein, and\/or the CommVault Simpana system, also available from CommVault Systems, Inc.","The data storage system  may generally include combinations of hardware and software components associated with performing storage operations on electronic data, such as media files and other content to be streamed to client computing devices. Storage operations include copying, backing up, creating, storing, retrieving, and\/or migrating primary storage data (e.g., media files in primary storage location ) and secondary storage data (which may include, for example, snapshot copies, backup copies, HSM copies, archive copies, and other types of copies of electronic data stored on storage devices). The system  may provide one or more integrated management consoles for users or system processes to interface with, in order to perform certain storage operations on electronic data, such as media files. Such integrated management consoles may be displayed at a central control facility or several similar consoles distributed throughout multiple network locations to provide global or geographically specific network data storage information.","In some examples, the transfer of media files from primary to secondary storage may be dictated by storage preferences, for example, as expressed by a user preference, a storage policy, a schedule policy, and\/or a retention policy. A \u201cstorage policy\u201d is generally a data structure or other information source that includes a set of preferences and other storage criteria associated with performing a storage operation. The preferences and storage criteria may include, but are not limited to, a storage location, relationships between system components, network pathways to utilize in a storage operation, data characteristics, compression or encryption requirements, preferred system components to utilize in a storage operation, a single instancing or variable instancing policy to apply to the data, and\/or other criteria relating to a storage operation. For example, a storage policy may indicate that certain media files are to be stored in a certain storage type, retained for a specified period of time before being aged to another storage type, copied to the storage device using a specified number of data streams, and so on.","A data agent may be a software module or part of a software module that is generally responsible for performing storage operations on data within primary storage, such as media files within primary storage location , or within other storage locations. 1060\/1062 or other memory location. The data storage system may employ multiple data agents, each of which may perform storage operations on data associated with a different application or media type. For example, different individual data agents may be designed to handle video-based data, audio-based data, image-based data, and so on.","A storage manager may be a software module or other application that coordinates and controls storage operations performed by the data storage system . The storage manager may communicate with some or all elements of the data storage system, including clients, data agents, secondary storage devices , and storage media, to initiate and manage storage operations (e.g., backups, migrations, data recovery operations, and so on). The storage manager may include a jobs agent that monitors the status of some or all storage operations previously performed, currently being performed, or scheduled to be performed by the data storage system. The jobs agent may be communicatively coupled to an interface agent \\e.g., a software module or application). The interface agent may include information processing and display software, such as a graphical user interface (\u201cGUI\u201d), an application programming interface (\u201cAPI\u201d), or other interactive interface through which users and system processes can retrieve information about the status of storage operations. The storage manager may also include a management agent that is typically implemented as a software module or application program. In general, the management agent provides an interface that allows various management agents to communicate with one another.","The storage manager may also maintain an index, a database, or other data structure. The data stored in the index may be used to indicate logical associations between components of the system, user preferences, management tasks, media containerization and data storage information, or other useful data. For example, the storage manager may use data from the index to track logical associations between secondary storage devices  and storage media (or movement of data as containerized from primary to secondary storage). Generally speaking, the secondary storage device , which may include a media agent, may be implemented as a software module that conveys data, as directed by the data storage system, between the primary storage location  and one or more storage media, such as a tape library, a magnetic media storage device, an optical media storage device, a flash media storage device, or any other suitable storage device.","The secondary storage devices  may maintain an index, a database, or other data structure that may store index data generated during storage operations for secondary storage (SS) as described herein, including creating a metabase (MB). Thus, the index may indicate where specifically the data is stored in storage media within the secondary storage location , what specific files were stored, and other information associated with storage of the data. The secondary storage location  may use this index data to quickly and efficiently locate media files that has been previously stored on secondary storage media, such as tapes. This index data may be used for various purposes, such as for retrieving media files via the virtual layer  of the media server  to be streamed to a client computing device .","Thus, unlike conventional systems that can only stream content stored in primary storage locations, the current system provides a computing environment in which content can be stored to and streamed from secondary storage devices, such as magnetic tapes. Further details regarding the virtual layer  will now be discussed.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2","b":"150"},"Referring to , the virtual layer  may operate on or be hosted by a computing device, such as the UPnP server . The virtual layer  may also include or be connected to a virtual data store, such as primary data store disk  or secondary data store disk , connected to the virtual layer via a storage area network. The virtual layer  also includes a virtual machine storage manager  operating on or being hosted by another computing device, which may be another server, and a secondary storage data store  connected to the computing device. The computing devices may be connected to each other via a network, which may be a LAN, a WAN, the public Internet, some other type of network, and so on.","The virtual layer hosts one or more virtual machines . The virtual machine  includes an operating system  and one or more applications  executing on the operating system or loaded on the operating system. The operating system  may be any type of operating system, such as Microsoft Windows 95\/98\/NT\/2000\/XP\/2003\/2008\/2010, Linux operating systems, Sun Solaris operating systems, UNIX operating systems, Apple OSx, and so on, that can be hosted by the virtual layer . The applications  may be any applications (e.g., database applications, file server applications mail server applications, web server applications, transaction processing applications, UPnP serving applications, media streaming applications, and so on) that may run on the operating system . The virtual machine may also be connected to the various networks described herein.","The operating system  may be connected to the virtual storage disks ,  via the SAN, which may be any type of SAN, such as a Fibre Channel SAN, an iSCSI SAN, or any other type of SAN. A primary storage data store may store the virtual disks ,  of the virtual machine  hosted by the virtual layer . A virtual disk ,  may correspond to one or more files (e.g., one or more *.vmdk or *.vhd files) on the primary storage data store. The primary storage data store may store a primary copy of the data of the virtual machine . Additionally or alternatively, the virtual disks ,  may be stored by other storage devices in a data storage system, such as in secondary storage  of .","A primary copy of data generally includes a production copy or other \u201clive\u201d version of the data that is used by a software application and is generally in the native format of that application. Primary copy data may be maintained in a local memory or other high-speed storage device (e.g., on the virtual disks ,  located in the primary storage data store) that allows for relatively fast data access, if necessary. Such primary copy data may be intended for short-term retention (e.g., several hours or days) before some or all of the data is stored as one or more secondary copies, for example, to prevent loss of data in the event a problem occurs with the data stored in primary storage.","In contrast, secondary copies include point-in-time data and are typically intended for long-term retention (e.g., weeks, months, or years depending on retention criteria, for example, as specified in a storage or retention policy) before some or all of the data is moved to other storage or discarded. Secondary copies may be indexed so users can browse and restore the data at another point in time. After certain primary copy data is backed up, a pointer or other location indicia, such as a stub, may be placed in the primary copy to indicate the current location of that data. As an example, the secondary storage data store  may store one or more secondary copies of the data of the virtual machine  or of data (e.g., media files), provided to clients by the UPnP server .","The virtual machine storage manager  includes a virtual machine storage operation component, which includes a Virtual Logical Unit Number (VLUN) driver for accessing virtual disks , , and a virtual machine mount component  for mounting virtual machines. The virtual machine storage manager  also includes a data agent. The data agent includes an integration component that provides functionality for the virtual machine storage operation component. The data agent also includes a virtual disk analyzer component that examines the virtual disk and configuration files corresponding to the virtual disks ,  and extracts metadata from the virtual disk and configuration files. For example, the integration component may include a set of scripts that the data agent causes to be run prior to, during, and\/or following a copy of virtual machine data. As another example, the integration component may be a component that encapsulates or wraps the virtual machine mount component and provides an Application Programming Interface (API) with functions for accessing the virtual machine mount component. The virtual machine storage manager  also includes a data store  that maintains data used by the virtual machine storage manager , such as data used during storage operations, and configuration data.","In some examples, a secondary storage computing device may be connected to the virtual machine storage manager  and to the secondary storage data store . The secondary storage computing device may assist in the transfer of copy data from the virtual machine storage manager  to the secondary storage data store . The secondary storage computing device may perform functions such as encrypting, compressing, single or variable instancing, and\/or indexing data that is transferred to the secondary storage data store . In some examples, one or more agents (e.g., a file system agent and\/or a proxy host agent) as well as a set of utilities (e.g., VMware Tools if the virtual machine  is a VMware virtual machine) may reside on the virtual machine  to provide functionality associated with copying and restoring virtual machine data.","Referring back to , the secondary storage data store  may be connected to or accessed by the virtual layer  via the UPnP server . The secondary storage data store  may be any type of storage suitable for storing one or more secondary copies of data, such as Directly-Attached Storage (DAS) such as hard disks, storage devices connected via another SAN (e.g., a Fibre Channel SAN, an iSCSI SAN, or any other type of SAN), Network-Attached Storage (NAS), a tape library, optical storage, or any other type of storage. The secondary storage data store  stores virtual machine data that is copied by the virtual machine storage manager . Accordingly, the secondary storage data store  stores one or more secondary copies, of the data of the virtual machine . A secondary copy can be in one or more various formats, such as a copy set, a backup set, an archival set, a migration set, and so on.","Virtual disks ,  may have various configurations. As previously described, a virtual disk ,  corresponds to one or more virtual disk files (e.g., one or more *.vmdk or *.vhd files) on a primary storage data store. A virtual layer  may support several types of virtual disks , . For example, a virtual disk may be either: 1) a growable virtual disk contained in a single virtual disk file that can grow in size (e.g., a monolithic sparse virtual disk that starts at 2 GB and grows larger); 2) a growable virtual disk split into multiple virtual disk files (e.g., a split sparse virtual disk comprising multiple 2 GB virtual disk files), the aggregation of which can grow in size by adding new virtual disk files; 3) a preallocated virtual disk contained in a single virtual disk file (e.g., a monolithic flat virtual disk, the size of which does not change); or 4) a preallocated virtual disk split into multiple virtual disk files (e.g., a split flat virtual disk comprising multiple 2 GB virtual disk files, the number of which and the size of each of which does not change). Where a virtual disk is split into multiple virtual disk files, each individual virtual disk file is called an extent. A virtual layer  may also support types of virtual disks other than these types. Those of ordinary skill in the art will understand that a virtual disk can be structured in a wide variety of configurations, and that virtual disks are not limited to the configurations described herein.","A virtual layer  may support snapshotting, or taking a snapshot of a virtual machine . The virtual layer  can snapshot a virtual machine  in a linear fashion (in which there is only one branch of snapshots from the original state of the virtual machine , and each snapshot in the branch linearly progresses from prior snapshots) or in a process tree (in which there are multiple branches of snapshots from the original state of the virtual machine , and two snapshots may or may not be in the same branch from the original state of the virtual machine ). When a snapshot is taken of a virtual machine , the virtual machine  stops writing to its virtual disks (e.g., stops writing to the one or more *.vmdk files). The virtual machine  writes future writes to a delta disk file (e.g., a *delta.vmdk file) using, for example, a copy-on-write (COW) semantic. As the virtual machine layer  can snapshot a virtual machine  repeatedly, there can be multiple delta disk files. The virtual disk and delta disk files can be analogized to links in a chain. Using this analogy, the original disk file is a first link in the chain. A first child delta disk file is a second link in the chain, and a second child delta disk file is a third link in the chain, and so forth.","Also as previously described, a virtual machine  generally has associated configuration files that a virtual layer  uses to store configuration data about the virtual machine . These configuration files may include a *.vmx file, which stores data about the parent-child relationships created between virtual disk files and delta disk files when a snapshot of a virtual machine  is taken. These configuration files may also include a disk descriptor file (e.g., a *.vmdk file). In some examples, instead of using a disk descriptor file, the disk descriptor is embedded into a virtual disk file (e.g., embedded in a *.vmdk file).","The disk descriptor file generally stores data about the virtual disk files that make up a virtual disk , . This data includes information about the type of the virtual disk. For example, the virtual disk may be a monolithic flat virtual disk, a monolithic sparse virtual disk, a split flat virtual disk, a split sparse virtual disk or another type of a virtual disk. This data also includes an identifier of the parent of the virtual disk file, if it has one (if the virtual machine  has been snapshotted, its original virtual disk file will have a child virtual disk file), a disk database describing geometry values for the virtual disk (e.g., cylinders, heads and sectors) and information describing the extents that make up the virtual disk. Each extent may be described by a line in the disk descriptor file having the following format: [type of access] [size] [type] [file name of extent]. Following is an example of a line in the disk descriptor file describing an extent: [0053]RW 16777216 VMFS \u201ctest-flat.vmdk.\u201d This line describes an extent for which read\/write access is allowed, of size 16777216 sectors, of type VMFS (e.g., for use on a primary storage data store), and the filename of the virtual disk file\u2014\u201ctest-flat.vmdk.\u201d","A virtual layer  provides an abstraction layer such that the one or more virtual disks files (and any delta disk files) of the virtual disks ,  appear as one or more actual disks (e.g., one or more hard disk drives) to a virtual machine . Because the virtual layer  abstracts the virtual disk so that it appears as an actual disk to an operating system  executing on the virtual machine , the operating system  can generally use its standard file system for storing data on a virtual disk , . The various structures used by the file system and the operating system  (e.g., the partition table(s), the volume manager database(s) and the file allocation table(s)) are stored in the one or more virtual disk files that make up a virtual disk.","For example, a virtual layer  may store a single virtual disk file (e.g., a single *.vmdk file) that is a preallocated virtual disk (a monolithic flat virtual disk) for each virtual disk used by a virtual machine operating on the virtual layer . The single virtual disk file may be named <virtual machine name>-flat.vmdk. There would also be a disk descriptor file for the single virtual disk file that would typically be named <virtual machine name>-.vmdk. A snapshot taken of the virtual machine would result in an additional delta disk file being created that is a single virtual disk file (e.g., a single *.vmdk file), which is a growable virtual disk (a monolithic sparse virtual disk). The delta disk file would typically be named <virtual disk name>-<######>-delta.vmdk, where <######> is a number indicating the sequence of the snapshot. There would also be a disk descriptor file for the single virtual disk file that would typically be named <virtual disk name>-<######>-.vmdk, again, where <######> is a number indicating the sequence of the snapshot.","The system may utilize various processes for restoring virtual machine data. In some examples, an component at the UPnP server, such as a media request component , may start a process in response to receiving a request to serve a media file by sending an indication to restore virtual machine data to a secondary storage computing device connected to secondary storage . The secondary storage computing device accesses an index to locate the virtual machine data, and accesses the secondary storage  upon which the virtual machine data is located. The secondary storage computing device restores the data from storage to a specified location, such as to a client  via the virtual layer . Further details regarding the restoration of media and other files from secondary storage may be found in commonly-assigned U.S. patent application Ser. No. 12\/553,294, filed on Sep. 3, 2009, entitled SYSTEMS AND METHODS FOR MANAGEMENT OF VIRTUALIZATION DATA, which is incorporated by reference in its entirety.","Thus, in some examples, a media service, such as a service that streams media over a network to requesting client computers, may utilize the primary storage  of the UPnP server  for certain media files, such as popular or highly requested media files, and utilize the secondary storage , via the virtual layer , for other media files, such as less popular or less requested media files, among other things. The service may be transparent with respect to requesting client computers (e.g., clients ) by serving requests for media stored in secondary storage  using the virtual layer  while serving requests for media stored primary storage  directly. Further details will now be described.","Real-Time Streaming of Content Located in Secondary Storage","As discussed herein, the system enables the real-time streaming of media located in secondary storage to requesting client computers.  is a flow diagram illustrating a routine  for streaming media files from a Universal Plug and Play (UPnP) server to a client computing device. In step , the system receives a request to stream or transfer media to a client computing device. For example, the system, via a media server such as a UPnP server, receives a request from a client computing device  via a network , such as the Internet. The request may be first received at the client computing device  by a user interface , such as a web browser  displaying a list of media made available by a media service utilizing the system.","In step , the system identifies a storage location for the requested media. For example, a media request component  may include a location identification component or other component configured to review an index or other data structure that indicates the storage location for the requested media file. The location identification component may review indices associated with primary storage, such as primary storage , indices associated with secondary storage, such as secondary storage , and\/or indices associated with other storage locations.","In step , the system determines whether the requested media is located on primary storage, such as primary storage . When the requested media is located on primary storage, routine  proceeds to step  and the systems provides the requested media via components of the operating system of the media server. For example, the system may stream the media using components of the UPnP server . When the requested media is located on secondary storage, routine  proceeds to step , and the request is received at a virtual machine within a virtual computing environment hosted by the media server.","After the request is received by the virtual machine, the system, in step  locates the requested media within secondary storage, such as within archive storage. For example, an identification component may review an index associated with secondary storage locations to locate the media file within secondary storage .","In step , the system mounts the storage media containing the requested media file to the virtual machine. For example, the system mounts a magnetic tape or optical disk storing the media file in secondary storage to the operating system  of the virtual machine .","In step , the system provides the requested media to the requested client computing device via the virtual computing environment. For example, the system accesses and streams in real-time some or all of the requested media file to the client computing device  via the operating system  of the virtual machine .","Thus, in some examples, the system enables the real-time streaming of content over a network to a client computing device regardless of whether the content is located in the primary data store of a media server or located in an associated secondary data store of a media server. That is, by serving requests for media stored in the primary data store directly from the primary data store and serving requests for media stored in the secondary data store directly via a virtual computing environment accessing the secondary data store, the system may provide real-time access to media, regardless of where the media is located in a data storage system, among other benefits.","In some examples, the system may transfer and\/or stream one or more portions of a media file in response to receiving a request for a media file.  is a flow diagram illustrating a routine  for streaming sections of a media file to a client computing device. In step , the system streams a first portion of a media file to a client computing device. For example, the UPnP server  accesses a first portion of a media file located in secondary storage  via a virtual layer , and transfers the first portion (e.g., the first 5 minutes of a 2 hour movie file) to client computing device .","In some cases, the request includes an action to be performed within a media file, such as an action to play a media file, an action to forward to a specific position in a media file, an action to rewind to a specific position in a media file, an action to seek to a specific position in a media file, and so on. Thus, the system, via the media server, may stream a portion associated with an action to be performed, such as a section in a middle of a media file.","In step , the system receives an indication associated with a selection of a second portion of the requested media file. For example, the system may receive a request to seek to a later section of a media file, such as a later chapter in a movie or a later image in a large image file.","In step , the system accesses the location of the requested second portion and streams the selected portion to a client computing device. For example, the system locates the second portion within secondary storage (i.e., a tape offset for the portion of the media file), via the virtual layer, and streams the media file starting at the located second portion to the client computing device  using the UPnP server .","In some cases, the system may stream a media file stored in secondary storage via a virtual layer in two or more sections or portions of the media file. For example, in response to receiving a request to play a media file, the system may stream an initial portion of the media file, periodically accessing and serving up subsequent portions of the media file during playback of the media file. That is, instead of serving up an entire medial file in real-time, in some cases the system accesses and streams subsequent portions of the media file unless receiving an indication otherwise. Such segmented accessing and streaming of media files may avoid loading and running an entire large media file unnecessarily, among other benefits.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 5","b":["500","140","510","510","110","140","512","510","512","110","510","140","514","510","514","110","110","140","516","510","516","110"]},"In some examples, the system may facilitate the movement of media between storage devices. Although the system is capable of accessing and streaming in real-time media files regardless of where the media files are stored, there may be times when it is beneficial to a media service provider to automatically transfer media between primary and secondary storage, depending on the popularity of the media files, the use or anticipated use of the media files, or other factors.  is a flow diagram illustrating a routine  for managing media content between storage devices.","In step , the system receives metadata associated with a media file. For example, the system may receive information associated with a number of users requesting a media file, information associated with a time period in which the media file was previously accessed, information associated with an anticipated use of a media file, information associated with access of similar media files, and so on. Such information based be stored in a data structure, such as a table relating media files with various associated metadata.","In step , the system compares the received metadata with a retention policy. The system may compare the received metadata with retention rules, retention threshold values, and so on. For example, the system may compare information that a certain media file has not been requested and\/or accessed for 6 months or nor accessed a certain number of times in the time period, and compare the information with a retention policy instructing the system to transfer any media files not accessed with a previous 6 month period to secondary storage.","In step , the system assigns a storage type to the media file based on the comparison. Thus, following the example, the media file that has not been requested for 6 months does not satisfy a retention policy associated with primary storage, and is assigned to secondary storage. In step , the system transfers the media file to a storage location associated with the assigned storage type. For example, the system, via data storage component , transfers the media file from primary storage to a secondary storage location, such as a magnetic tape.","Thus, because the system is capable of streaming media using a UPnP server regardless of where the media is located, the system may intelligently and\/or automatically transfer media files between storage locations based on a number of criteria. Such management of media may improve the costs associated with hosting media, among other benefits.","The following examples illustrate a few real world applications of the system. One of ordinary skill will appreciate that other scenarios are of course possible. As a first scenario, a user of a popular streaming media service (e.g., Netflix, iTunes, Ondemand, and so on), launches her browser to watch a movie via the service. The service displays the movies available at the service, listing movies stored in both primary and secondary storage at servers of the service. The user selects a movie that is stored in secondary storage. A UPnP server of the service locates the movie via a virtual layer, and streams the movie in portions to the user.","As another scenario, a doctor is reviewing old MRI images with a patient. The doctor wishes to look at the 54image of 200 images, and selects the image for viewing. At a server hosting the images, a media server, via a virtual layer, locates the media hosting the 54image at a certain tape and offset, and serves the image to the doctor's computer.","From the foregoing, it will be appreciated that specific embodiments of the system have been described herein for purposes of illustration, but that various modifications may be made without deviating from the spirit and scope of the system. Accordingly, the system is not limited except as by the appended claims.","Unless the context clearly requires otherwise, throughout the description and the claims, the words \u201ccomprise,\u201d \u201ccomprising,\u201d and the like are to be construed in an inclusive sense, as opposed to an exclusive or exhaustive sense; that is to say, in the sense of \u201cincluding, but not limited to.\u201d The word \u201ccoupled\u201d, as generally used herein, refers to two or more elements that may be either directly connected, or connected by way of one or more intermediate elements. Additionally, the words \u201cherein,\u201d \u201cabove,\u201d \u201cbelow,\u201d and words of similar import, when used in this application, shall refer to this application as a whole and not to any particular portions of this application. Where the context permits, words in the above Detailed Description using the singular or plural number may also include the plural or singular number respectively. The word \u201cor\u201d in reference to a list of two or more items, that word covers all of the following interpretations of the word: any of the items in the list, all of the items in the list, and any combination of the items in the list.","The above detailed description of embodiments of the system is not intended to be exhaustive or to limit the system to the precise form disclosed above. While specific embodiments of, and examples for, the system are described above for illustrative purposes, various equivalent modifications are possible within the scope of the system, as those skilled in the relevant art will recognize. For example, while processes or blocks are presented in a given order, alternative embodiments may perform routines having steps, or employ systems having blocks, in a different order, and some processes or blocks may be deleted, moved, added, subdivided, combined, and\/or modified. Each of these processes or blocks may be implemented in a variety of different ways. Also, while processes or blocks are at times shown as being performed in series, these processes or blocks may instead be performed in parallel, or may be performed at different times.","The teachings of the system provided herein can be applied to other systems, not necessarily the system described above. The elements and acts of the various embodiments described above can be combined to provide further embodiments.","These and other changes can be made to the system in light of the above Detailed Description. While the above description details certain embodiments of the system and describes the best mode contemplated, no matter how detailed the above appears in text, the system can be practiced in many ways. Details of the system may vary considerably in implementation details, while still being encompassed by the system disclosed herein. As noted above, particular terminology used when describing certain features or aspects of the system should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics, features, or aspects of the system with which that terminology is associated. In general, the terms used in the following claims should not be construed to limit the system to the specific embodiments disclosed in the specification, unless the above Detailed Description section explicitly defines such terms. Accordingly, the actual scope of the system encompasses not only the disclosed embodiments, but also all equivalent ways of practicing or implementing the system under the claims.","While certain aspects of the system are presented below in certain claim forms, the inventors contemplate the various aspects of the system in any number of claim forms. For example, while only one aspect of the system is recited as embodied in a computer-readable medium, other aspects may likewise be embodied in a computer-readable medium. Accordingly, the inventors reserve the right to add additional claims after filing the application to pursue such additional claim forms for other aspects of the system."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
