---
title: Web browsing enhanced by cloud computing
abstract: Methods and devices include a server and at least two web browsers operable on at least two different computing devices. Each browser reports results of processing and rendering of webpages to the server. The server aggregates the data. The server generates metadata from the aggregated browsers. The server transmits the generated metadata to at least one computing device. The computing device renders a webpage using at least a portion of the provided metadata. The metadata may identify portions of JavaScript that can be processed in parallel. The metadata may identify a library portion that does not have to be loaded. The metadata may identify a portion of the webpage that may be rendered first before a second portion of the webpage. Returning metadata to the computing device can assist the computing device in parsing, analyzing or executing the request for the webpage.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09146909&OS=09146909&RS=09146909
owner: QUALCOMM Incorporated
number: 09146909
owner_city: San Diego
owner_country: US
publication_date: 20110727
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention relates generally to computing devices. More particularly, the present invention relates to methods for supplying hints to a web browser to conserve resources on a computing device and for anticipating the web browser's next action.","Increasingly, people are using mobile computing devices to consume media. Generally in mobile computing devices, battery life is limited. Once the battery is depleted, the mobile device will shut down and cannot be restarted until a power outlet can be found or a new battery is provided. This can be very frustrating to a user since they cannot use the mobile device while the battery is drained. Additionally, there are times when the mobile device is inefficient. The mobile device will waste mobile bandwidth, processing and battery resources without the user's knowledge. For example, the mobile device browser may download a very large file, such as a library when only a portion of the library is needed. Additionally, users do not like long wait times for downloading webpages and become frustrated when a website or media source is not instantly displayed.","Some users generally follow certain daily browsing routines or habits of their mobile computing systems. For example, a user may access a portion of a webpage (e.g., stock quotes or sports scores) more frequently than other portions. Many users follow certain daily habits for consuming media. For example, if there is a newsworthy event that has recently taken place, many users will access the same webpage seeking the newsworthy content.","Methods and devices enable improved web browsing on a computing device. The method includes a processor that transmits a request for a webpage from a computing device. The processor transmits a request from the computing device to a browser assistant. The browser assistant returns metadata to the computing device. The metadata assists the computing device in parsing, analyzing or executing the request for the webpage.","In another aspect, a system includes a server and at least two web browsers operable on at least two different computing devices. Each web browser reports the results of processing and rendering webpages to the server. The server aggregates the data and the server generates metadata from the aggregated web browser data. The server transmits the metadata to at least one computing device. The computing device renders a webpage using at least a portion of the metadata.","An aspect of the present application includes a method for rendering a webpage on a computing device that includes transmitting a request for a webpage from the computing device, transmitting a request from the computing device for a browser assistant, and returning metadata to the computing device to assist the computing device in parsing, analyzing, or executing the request for the webpage. In an aspect, the metadata returned to the computing device may include data that may be any one of JavaScript function execution probabilities, AST data for parsing data, script token data, lexing information, returned binary code from data processed at a server to assist the computing device, CSS metadata to assist in processing CSS webpage data at the computing device, JavaScript metadata to assist in processing JavaScript webpage data at the computing device, HTML metadata to assist in processing HTML webpage data at the computing device, and combinations thereof. In an aspect, the metadata returned to the computing device may include a plurality of observed users browsing statistics, and the method may further include using the plurality of observed browsing statistics to assist in loading portions of the webpage at the computing device before other portions. In an aspect, the metadata returned to the computing device may include statistics regarding a portion of code that has a predetermined probability of execution. In an aspect, the metadata returned to the computing device may include translated binary code resulting from JavaScript code executed on a server, and the method may further include transmitting the binary code to the computing device to maximize processing at the server and minimize processing at the computing device.","In an aspect, the method may further include sending analytics that correlate to portions of the webpage that are popular so a web browser on the computing device loads the popular portions first. Aspect methods may further include gathering habits of a user of the computing device, and preloading into memory webpage elements frequently accessed by the user. Aspect methods may further include gathering in a server usage information from a plurality of users corresponding to popular data of the plurality of web users, and generating metadata based on the usage information and an analysis of habits of the plurality of web users. Aspect methods may further include sending metadata from a local network computer to the computing device, gathering usage information from a plurality of users corresponding to popular data of other web users, and generating metadata using the local network computer. Aspect methods may further include gathering aggregate information on browsing habits based on a plurality of users as the users use a web browser, monitoring the plurality of users to generate the browsing habits using an instrumented web browser, and generating metadata based on the browsing habits of the plurality of users.","Aspect methods may further include generating metadata indicating a library is frequently downloaded, describing in the metadata that the library has a portion that is statistically likely needed before other portions for execution based on observed statistical information, and downloading the portion of the library first based on the metadata. In an aspect, the method may further include determining that the library has a most likely executable library portion based on statistical data, downloading the most likely executable library portion first before other portions of the library.","Aspect methods may further include monitoring a plurality of users during browsing, generating metadata indicating a statistical percentage of users are likely to view a first portion of a webpage before other portions, transmitting the first portion to the computing device before other portions of the webpage. In an aspect, the metadata may include a profile for a user of the computing device, and the method may further include generating metadata indicating a statistical percentage that the user is likely to view a first portion of a webpage before other portions based on the profile, generating metadata indicating a statistical percentage that the user is not likely to view a second portion of a webpage, downloading the first portion first to the computing device before other portions of the webpage, and downloading the second portion a time period after the first portion. Aspect methods may further include generating metadata indicating habits of other users browsing, determining which portions of webpages are statistically likely to be accessed before other portions of the webpage based on the metadata, determining that a second portion is likely not accessed frequently, communicating in the metadata that the second portion is not accessed frequently and downloaded lower in priority than portions statistically likely to be accessed.","Aspect methods may further include linking to a server via a wireless network, associating a browser with the server, collecting information for use by the computing device from the browser.","Aspect methods may further include providing hints using the metadata for a web browser to parse, analyze or execute the request that may include JavaScript, determining that the JavaScript is inefficient to process at the computing device, and transmitting a binary pre-compiled translation of the JavaScript.","Aspect methods may further include aggregating statistics regarding a plurality of web users browsing habits webpage, delivering the statistics in the metadata, using the statistics to conserve mobile resources by preloading statistically popular webpages before the webpages are requested at the computing device, downloading portions of the webpage that are popular, and omitting downloading second portions of the webpage that are not popular to conserve mobile resources. Aspect methods may further include sending browsing data from an Internet browser to a server, and generating the metadata from the browser data in the server. Aspect methods may further include sending data from an instrumental browser to a server, and generating the metadata from the data. In an aspect, the metadata returned to the computing device may include returning metadata from a peer device to the computing device that correlates to portions of the webpage that are popular with computing devices connected to the peer device so a web browser on the computing device loads the popular portions first.","Aspect methods may further include providing a client side monitoring system of browsing habits of a second computing device, sending the browsing habits to a server, sending metadata from the server to the computing device based on the client side monitoring system of the browsing habits of the second computing device. Aspect methods may further include generating metadata from browsing habits that include requests and responses to requests, and providing the metadata to a peer device that is a peer of the computing device.","Aspect methods may further include monitoring browsing habits of a plurality of users, sending the browsing habits to a server, formulating a plurality of observed profiles of the plurality of users based on the monitored browsing habits, monitoring the browsing habits of a computing device user, returning metadata from the server to the computing device based on at least one observed profile that matches the computing device user browsing habits.","Aspect methods may further include describing in the metadata that a first portion of code is analyzed, downloaded, parsed, or executed more often than a second portion, and reordering and downloading the first portion of code before the second portion. Aspect methods may further include describing in the metadata that a library includes a portion that is determined most likely to be executed, and downloading the most likely to be executed library portion before other portions of the library.","Aspect methods may further include transmitting the request for the browser assistant that is located on a server, determining that a web site is frequently accessed by the computing device, and uploading updated web site data to the computing device. Aspect methods may further include downloading first portions of webpages using the computing device before second portions based on statistical browsing habits contained in the metadata. Aspect methods may further include preloading portions of webpages using the computing device with the preloaded portions being identified using statistical browsing habits contained in the metadata.","Aspect methods may further include monitoring browsing habits from a plurality of users, determining that a webpage comprising webpage elements is frequently accessed, storing webpage elements on a cache based on the browsing habits to prevent the webpage elements from being deleted on the computing device, downloading the webpage elements from the cache before an anticipated request. In an aspect, the method may further include monitoring browsing habits that are derived from a single user's browsing habits, updating the webpage stored on the cache, pushing elements on the cache to the computing device at periodic intervals without the request, updating the webpage stored on the cache, and passing elements from the cache to the computing device. Aspect methods may further include returning metadata to the computing device in advance by pre-caching the metadata to assist the computing device in parsing, analyzing, or executing the requested webpage.","Aspect methods may further include returning metadata that allows the computing device to execute the webpage in a more efficient manner by executing necessary portions, and forgoing executing an entire webpage.","In various aspects, the browser assistant may be located on a server that is the same server that responds to the request for the webpage, on a peer computer device, or on another network device.","Aspect methods may further include transmitting a request for a webpage, in which the webpage includes portions, processing the portions using the browser assistant to result in native code, and returning native code to the computing device, in which the portions include JavaScript.","Aspect methods may further include transmitting a request for data, transmitting a request to a first device, returning metadata to a second device, and describing portions of the webpage in the metadata that have a likely statistical chance of execution based on monitored empirical data of requests and responses to requests.","The various aspects further include a computing device having a processor configured with processor-executable instructions to perform operations of the aspect methods described above. The various aspects may further include a computing device including means for performing the functions of the aspect methods described above. The various aspects may further include non-transitory processor-readable storage media having stored thereon processor-executable instructions configured to cause computing device processors to perform operations of the aspect methods described above.","The various aspects further include a server having a server processor configured with processor-executable instructions to perform operations of the aspect methods described above. The various aspects may further include a server including means for performing the functions of the aspect methods described above. The various aspects may further include non-transitory processor-readable storage media having stored thereon processor-executable instructions configured to cause a server processors to perform operations of the aspect methods described above.","The various aspects further include system including a server, a cellular communications network and a computing device (e.g., a mobile phone) in communication with the server via the cellular communications network, in which the server and the computing device are configured to perform operations of the aspect methods described above.","The various aspects will be described in detail with reference to the accompanying drawings. Wherever possible, the same reference numbers will be used throughout the drawings to refer to the same or like parts. References made to particular examples and implementations are for illustrative purposes, and are not intended to limit the scope of the invention or the claims.","The word \u201cexemplary\u201d is used herein to mean \u201cserving as an example, instance, or illustration.\u201d Any implementation described herein as \u201cexemplary\u201d is not necessarily to be construed as advantageous over other implementations.","As used herein, the terms \u201ccomputing device,\u201d \u201cmobile device,\u201d \u201cmobile communication device,\u201d and \u201chandheld device\u201d refer to any one or all of cellular telephones, personal data assistants (PDA's), palm-top computers, wireless electronic mail receivers, multimedia Internet enabled cellular telephones, Global Positioning System (GPS) receivers, wireless gaming controllers, tablet computers, notebook computers, netbook computers, wireless email devices, and similar personal electronic devices that include a programmable processor and memory, and are configured to communicate with a communication network.","As used herein, the terms \u201ccomputer,\u201d \u201cpersonal computer\u201d and \u201ccomputing device\u201d refer to any programmable computer system that is known or that will be developed in the future. In an aspect, a computer will be coupled to a network such as described herein. A computer system may be configured with software instructions to perform the processes and operations described herein.","As used herein, the terms \u201ccomponent,\u201d \u201cmodule,\u201d \u201csystem,\u201d and the like are intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a server and the server can be a component. One or more components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","The various aspects described herein provide methods and systems that use machine learning technology to improve the media rendering, particularly webpage rendering on computing devices, such as mobile devices. In one aspect, a cloud service distributed network improves a browser experience by anticipating the browser's next action and providing metadata to the mobile device to provide hints to the mobile device. A mobile device has limited and constrained resources. A mobile device has a relatively smaller memory and data which is downloaded is erased or written over regularly. Additionally, a mobile device has a finite amount of battery power. Generally, battery power cannot be wasted on speculative tasks, and may be used to improve performance and provide immediate information to a user. User habits may be used by the browser to allow it to act more efficiently to conserve mobile resources or proactively to prepare media for instant access. For example, the web browser may efficiently download and process content based on the user's browsing habits, which is advantageous as load times can be faster and battery life can be extended.","A browser assistant may improve cache behavior by monitoring browsing habits of a user or may monitor browsing habits of a number of different users. A browser assistant may provide hints to a mobile device and may improve cache behavior. For example, a server may push regularly visited pre-processed webpages to the mobile device.","In another aspect, a mobile device may detect when certain browsing data that is frequently used or accessed is about to be deleted due to memory constraints. In this event, the mobile device may request targeted services from a server, and upload the frequently accessed data to a server for later use by the mobile device. The server may mark the uploaded information and return the data to the mobile device at a later date\/time. In another aspect, the server may optimize the data and return the optimized data to the mobile device.","In another aspect, the system may include a mobile device operatively connected to the Internet and a browser assistance server. The browser assistance server may also be operatively connected to the Internet and the mobile device. The browser assistance server may deliver metadata regarding websites to the mobile device. This metadata may provide hints on how the mobile device can efficiently handle a request for a webpage sent from the mobile device. For example, metadata may include information which enables the mobile device to anticipate the user's next browsing activity.","The metadata may be any information that allows the mobile device or the server to better parse, execute or analyze browser's requests. For example, the metadata may be XML, Ajax, or jSAW code. In an aspect, the mobile device may review the metadata from the browser assistance server when rendering the webpage. The metadata may provide a scheme for optimized browser execution of webpages. The browser may use the metadata to more efficiently handle a requested webpage. This may lead to faster execution times and lower power usage. For example, the metadata may provide information that certain data is frequently accessed or is popular among users. For example, using a push\/pull framework, data that ordinarily would be erased that is popular or that is used frequently can be uploaded from the mobile device to a cache memory located on a server. The data can be dynamically cached and may be read by the mobile device when needed.","In an aspect, the metadata may include JavaScript metadata. The metadata may provide useful information including JavaScript function probabilities of certain phrases, script tokens, lexing information, AST parsing information, already compiled binary data, just in time data, or other hints to save time in processing JavaScript requests at the mobile device. For example, the metadata may include CSS metadata including information such as simplified or optimized selectors, merging styles, or any other information to assist with processing, parsing, executing, or rendering CSS webpage data. In another aspect, the metadata may include hints on how to process a DOM tree in a parallel manner.","In an aspect, the metadata may include HTML metadata with partitioned code hints. The hints may instruct the mobile device to process encoded pages in parallel rather than serially. In an aspect, the metadata may include data from a number of other users and may describe analytics or patterns received from observing other user's browsing habits.","In an aspect, the analytics may indicate that a certain webpage element has a high probability of execution or may be very popular with other users. The mobile device may download those webpage elements based on speculation that the user may download the webpage element at some point. For example, using the analytics the metadata may indicate that a library includes a first portion that has a high probability of execution. The metadata may indicate that that library first portion should be transmitted or accessed immediately since it has a high probability of execution compared to other portions of the library. Another second portion may indicate a low probability of execution based on statistical information. The metadata may indicate that the second library portion need not be downloaded until later since the metadata indicates the second library has a low execution probability.","In an aspect, the browser assistance server using analytics may generate the metadata. The browser assistance server may observe relationships from a crowd's habits. The metadata may indicate that a certain webpage is frequently accessed. The metadata may indicate that a certain webpage element, for example, text located on the frequently accessed webpage, is viewed by ninety percent of the visitors to the webpage. The habit information may also be compiled by the browser assistance server based on the observed browsing habits of a number of users.","In yet another aspect, the metadata may be pre-cached on the mobile communication device and so that it may be provided to the mobile communication device in advance. For example, metadata may be transmitted to subscribing mobile devices at a predetermined time period in advance of when the user might need the information, such as during evening or early morning hours when network usage is low. Alternatively, the metadata may be transmitted as part of a synchronization procedure, such as for the top 100 websites that monitored users' access or the top 100 websites the user of the mobile communication device accesses. In some aspects, the metadata may not be provided on demand and may be provided before the request, during the request or after the request for a webpage. In one aspect, metadata may have a slower rate of change relative to web content, and thus may be pre-cached to the user's computer or mobile device at predetermined intervals. For example, the metadata may be supplied at a non-peak hour, such as late at night, or periodically, such as weekly.","When a newsworthy event occurs, users' web browsing may be monitored. The users' web browsing habits may indicate that users are sending requests from web browsers to a news website to view a particular text story and photo images. The webpage elements may have a high probability that the mobile device user may also view the webpage element based on the mobile device user's own browsing habits. The metadata from the browser assistance server may enable the mobile device to download content based on speculation that the user will download the text and webpage at some time.","In another aspect, the browser assistance server may collect information about the functions which were statistically executed by a number of users of particular webpages. In response, the browser assistance server may create an index of the statistical information. The browser assistance server may use this statistical information to deliver metadata to a number of mobile devices to enhance their users' web browsing experiences.","In an aspect, a code may be generated including HTML code, CSS, a first JavaScript function and a second JavaScript function and other code. The browser assistance server may observe that the first and second JavaScript functions were executed by many users more so than other functions on webpages. The browser assistance server may provide metadata to the mobile device including statistical information regarding the frequency or probability of execution of the first and second JavaScript functions. The metadata may enable the mobile device to optimize performance of the web browser using the metadata.","In another aspect, the mobile device may request analysis information from the browser assistance server. The analysis information may be for a particular requested webpage. The request to the browser assistance server may include context information, user profile information, communication information, mobile device information, and\/or web browser information. The request may allow the browser assistance server to return metadata that is relevant to the user.","In another aspect, the mobile device may be provided with targeted services. The mobile communication device may have a cache on the browser assistance server and the mobile device may store data on the cache. The cache may be a component of the server that transparently stores data so that future requests for that data can be served faster. The data that is stored within a cache might be values that have been computed earlier or duplicates of original values that are stored elsewhere. If requested data is contained in the cache (a \u201ccache hit\u201d), this request may be served by simply reading the cache, which is comparatively faster for the mobile device. Otherwise, the data has to be recomputed by the mobile communication device or fetched from its original storage location, which is comparatively slower. Hence, the more requests that can be served from the cache to the mobile communication device, the faster the overall system performance can be.","In an aspect, the browser assistance server may provide a targeted service for a number of mobile devices. For example, a mobile device may write to a cache on the browser assistance server including cached JavaScript or a cached library for future use. This may save processing time and battery life. For example, a mobile device or a browser assistance server may determine that data about to be erased on the mobile device is relevant to the user based on the user's browsing habits, and save the data in a cache associated with a server.","In another aspect, the server may optimize the cached data. For example, a profile of a user may be stored at the browser assistance server. For example, a browser assistance server may detect that a user downloads the same websites each day at 8:00 a.m. For example, the mobile device may run up against a memory limit later in the day. The mobile device may also detect that certain webpage elements will be used the next day at 8:00 a.m. The mobile device may write the webpage elements to the cache associated with the browser assistance server as an L2 cache. The mobile device may access the webpage elements from the cache the next day.","In another aspect, the browser assistance server may directly analyze and compile JavaScript in advance. The JavaScript may not have to be processed on the mobile communication device. This data may also be compiled for a predetermined architecture. The browser assistance server can provide a binary data that is rendered from the processed JavaScript. The binary data can be transmitted to the mobile device so the mobile device avoids compiling the JavaScript locally. The mobile device processor avoids parsing, executing, and just-in-timing phrases of a JavaScript execution path, and may render the elements faster.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 1","b":["100","110","110","110","115"]},"Some of the components of the communication system that enable controlling network and device access on a mobile device  are illustrated in . To enable a mobile device  to access the Internet , and registration server , the mobile device  may communicate with a wireless network , such as a cellular communication network. The wireless network  may communicate with the Internet  via a carrier network  through a data link , such as the Internet, a secure LAN, WAN, or other network. The carrier network  controls messages (generally comprising data packets) sent to a mobile switching center (MSC) . The carrier network  communicates with the MSC . This communication may be to transfer data and voice information. The MSC  may be connected to multiple base stations (BTS)  by another network , such as a data network and\/or Internet portion for data transfer and a POTS portion for voice information. A BTS  may wirelessly broadcast messages to, and receive messages from, the mobile devices , using predetermined voice and\/or data packet services, such as Code Division Multiple Access (CDMA), short messaging service (SMS), or any other over-the-air methods.","Mobile devices  may be configured to include a computer platform  having a memory  in communication with a processor , such as via an application programming interface (API)  that enables interaction with any resident applications (e.g., a \u201cmedia\u201d interface  that works cooperatively with information communicated by the registration server  shown ).","The platform  may also include a gateway interface . The gateway interface  may be a standard that defines how web server software can delegate the generation of webpages to a stand-alone application in an executable file. The gateway interface  may include CGI scripts written in any programming language or any scripting language. The gateway interface  has program instructions for a server  to pass a web user's request to an application program and to receive data back so to the gateway interface can forward the data to the user.","When the user requests a webpage (for example, by clicking on a highlighted word or entering a web site address), the server  may transmit the requested page. However, when a user fills out a form on a webpage and transmits the form, the form usually needs to be processed by an application program. The server  may transmit the form information to a small application program that processes the data and may transmit back a confirmation message using the gateway interface .","A browser assistance server  may also be provided. In an aspect, the browser assistance server  can be the same as server , or a different server. In another aspect, the browser assistance server may be software that is resident on multiple different computers.","The browser assistance server  may provide metadata to the mobile device  that is operatively connected to the Internet . The gateway interface  has program instructions for the browser assistance server  to pass a web user's request to an application program and for the server  to transmit metadata to the user. In one aspect, the metadata may be embedded into a header of the requested browsing data. In another aspect, the metadata may be separately transmitted from the requested browsing data.","When the user requests a webpage (for example, by clicking on a highlighted word or entering a web site address), a second request may also be provided to the browser assistance server  for the server  to transmit the requested metadata. In another aspect, the browser assistance server  can also receive the request for the webpage data to server  and in response send the metadata to the mobile device  without receiving a separate or second request. In another aspect, the metadata may be sent periodically without any request. For example, metadata may be delivered in a cycle, such as once every fifteen minutes.",{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 2","b":["200","100"]},"Method  may be implemented in a computing device having a processor  configured with processor-executable instructions to perform the operations of the method . In method , the processor of a mobile communication device  may commence operation at block  by accessing a web browser application. The web browser can be any web browser having program instructions for retrieving, presenting, and traversing information resources on the World Wide Web. An information resource is identified by a Uniform Resource Identifier (URI) and may be a webpage, image, video, or other data content. Hyperlinks present in web content enable users to easily navigate a browser to a related resource.","The web browser may bring information resources to a user of the mobile communication device . The user may input a Uniform Resource Identifier (URI) into the browser, or may click a link. Received HTML scripts may be passed to a browser's layout engine and be transformed from markup to an interactive document. The web browsers may generally display any kind of content that can be part of a webpage. Data may include image, audio, video, and XML file, Flash applications, and Java applets. Interactivity in a webpage may be supplied by JavaScript. JavaScript may be used along with other technologies to allow live interaction with the webpage's server via an Ajax programming language. JavaScript programs may produce interactive 2D graphics using the API and may render 3D graphics.","In block , the processor may send analytics from a server  to the mobile communication device . For example, the analytics may be delivered within metadata, but also the analytics may be delivered in other formats. The term metadata refers to any data about data, and can include information that provides hints to anticipate browser performance, or to assist a web browser or mobile communication device to improve performance.","Metadata may include data about a design and specification of data structures. Metadata may also include descriptive metadata which includes application data or data content. Metadata may also include statistical information and can be any description of the content and context of data files so a quality of the original data or files is greatly increased. For example, metadata may improve an experience of a user by assisting a mobile communication device to operate more efficiently to increase a life of the device.","In block , a second processor associated with the mobile communication device  may receive the analytics. This may be accomplished by the mobile communication device downloading the metadata directly from the server  or from an intermediary. In another aspect, the metadata may be embedded within data content. In another aspect, the metadata may be downloaded from a peer device or may be downloaded from a home network device. In block , the mobile communication device processor uses the analytics to improve performance. For example, the metadata may identify popular web content portions or content that has a high statistical likelihood of being executed.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 3","b":["100","150","114","1","100","114","1","1"],"i":["a ","a ","a "]},"The mobile communication device A may transmit a second request to a browser assistance server . The second request returns metadata. The metadata may include hints that can anticipate a browser's next action on the mobile communication device . The metadata includes information which allows the mobile communication device to better parse, analyze, and\/or execute a web browser's request . The metadata may be in Ajax, XML, or J-SAW.","As shown by arrow , the mobile communication device  can use the metadata to more efficiently handle a requested webpage, which can lead to faster execution times, lower power usage, or less processing time. For example, using a first browser operable on the mobile communication device , the user may select a hyperlink. A request for a webpage may be delivered to access HTML, XML, JavaScript, Cascading Style Sheets, XHTML, and data objects. The first browser may further send a second request that is unknown by the user and that does not disrupt the browsing experience.","The browser assistance server  may receive the second request . The browser assistance server  may improve performance by detecting that there exists JavaScript in the webpage that is about to be rendered. The browser assistance server  may have already compiled the JavaScript, or may compile the code immediately. The browser assistance server  may deliver the complied JavaScript into a binary file (or another native format) to the mobile communication device  browser. The compiled JavaScript binary file removes the burden of compiling the code on the processor on the mobile communication device, saving rendering time and processing resources. The precompiled JavaScript is rendered on the mobile communication device.","In another aspect, the browser assistance server  may receive both requests and and provide metadata and the web content. In another aspect, the browser assistance server  may provide a virtual machine on the mobile communication device  to allow sharing of the underlying physical machine resources between different machines, each running its own operating system. This may reduce the processing burden on a mobile device processor.",{"@attributes":{"id":"p-0095","num":"0094"},"figref":"FIG. 4","b":["150","100","114","100","114","1","100","150"],"i":"b "},"The request  may return metadata  that includes hints for the mobile communication device's browser. The hints may anticipate a browser's next action on the mobile communication device . The metadata may include information which allows the mobile communication device  to better parse, analyze, and\/or execute a web browser's request . The browser assistance server  may also process a request . The browser assistance server  may improve performance by detecting that there exists JavaScript portions in the webpage that have a high probability of execution and other second portions that have a low probability of execution based on statistical observed browsing patterns. Statistical observed browsing patterns may originate from various sources. For example, the statistical observed browsing patterns may be monitored from a number of monitored web browsers. The browser assistance server  may obtain empirical data and store the empirical data in an index. Alternatively, the statistical observed browsing patterns may be monitored from the mobile communication device . Alternatively, a third computing device may observe the browsing habits, and store the browsing habits in an index in a storage medium and upload the index to the browser assistance server .","Alternatively, the statistical observed browsing patterns may be observed from a number of peer devices. The BAS server  may study the browser data of the peer devices and store empirical data in the index.","In an alternative aspect, a programmer may include data indicating that some portions have a high probability of execution while others portions have a low probability of execution within the actual code to provide an indication to the mobile device . The browser assistance server  may pre-compile the JavaScript and transmit the high probability-of-execution portion of the JavaScript precompiled in a binary or native format.","The browser assistance server  may deliver the data or the metadata to the mobile communication device  as shown by arrow . The metadata may include hints to download the first high probability of execution portion while not downloading the second low probability execution portion. Alternatively, the metadata may include hints that the mobile device should download the first (high probability of execution) portion while downloading the second (low probability execution portion) at a later time.",{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 5A","b":["500","150","100","500","131","500"]},"In method , the processor  may commence operation at block  by collecting data from a number of other users in order to determine statistical information about webpage content. For example, the statistical information may include habit data indicating that certain web content elements have a high probability of being viewed or being executed based on the collected data. However, the data may include any other information that would lead to more efficient operation of the mobile device .","In block , the processor may request metadata on a webpage from a browser assistance server. In block , the processor may send a request from a mobile device for a webpage. In decision block , the processor may use the data collected from other users and the request to determine whether the browser assistance server has information to better parse, analyze or execute the request.","For example, the browser assistance server may determine that certain JavaScript includes a portion that has a high probability of execution based on observed statistics. If so (i.e., decision block =\u201cYes\u201d), which indicates information exists to better parse, analyze, or execute the request by the processor at the server , the processor may return metadata to the mobile device in block . On the other hand, if the BAS  does not have information to better parse, detect or analyze the request for the mobile device  (i.e., decision block =\u201cNo\u201d), the processor may have no metadata to return in block . The mobile communication device may execute the webpage code in block .","In block , the processor of the browser assistance server may return metadata to the mobile device. For example, the metadata may suggest that a portion of a library has a remote possibility of being utilized by the web browser and may not be downloaded immediately. In another aspect, the metadata may contain a binary file (or native language file) that corresponds to compiled JavaScript. This information may enable browser operations to be improved as the mobile device may not have to parse, analyze, or execute JavaScript.","In block , the processor of the mobile device can use the metadata to facilitate web processing. For example, the mobile processor may determine (using the metadata) that HTML included in webpages has sections that can be processed in parallel, rather than serially processed. The mobile processor may process the webpage elements in parallel based on the metadata. For example, the metadata may include JavaScript function probabilities, script tokens, or lexing information, and the mobile processor may use the metadata to render the webpage by executing JavaScript that has a high probability of execution while executing other portions later in time. In block , the processor for the mobile device may execute the webpage code and may render the webpage in a manner that is faster than an instance where the metadata hints are not provided.",{"@attributes":{"id":"p-0106","num":"0105"},"figref":"FIG. 5B","b":["550","100"]},"Method  may be implemented in a computing device having a processor  configured with processor-executable instructions to perform the operations of the method . In method , the processor  may commence operation at block  by a processor associated with an instrumented browser collecting data from a number of other web users in order to determine statistical information about webpage content. The statistical information may include data that certain web content elements have a high probability of being viewed or executed based on the collected data. In another aspect, the data may be particular to the user of the browser. For example, during browsing the user may have a habit of executing particular files or file types over other web elements. For example, the particular user may access financial sites that require JavaScript elements to be executed every morning at 8:00 a.m.","In block , the processor may request metadata on a webpage. In block , the processor may send a request from a mobile device for a webpage. In decision block , the processor may use the data collected from the instrumented browser to better parse, analyze, or execute the request. For example, the instrumented browser may determine that certain JavaScript includes a portion that has a high probability of execution based on observed statistics. Alternatively, the instrumented browser may determine that a user reviews the same webpage every day at 9:00 a.m. and certain data was cached for the next day so the instrumented browser does not need to download all of the webpage elements the next day.","If so (i.e., decision block =\u201cYes\u201d), which indicates that the instrumented browser has information to better parse, analyze or execute the request, the processor may return metadata to the mobile device in block . For example the metadata may indicate that a portion of a library has a remote possibility of being utilized by the web browser and may not be downloaded. In another aspect, the metadata may contain a precompiled binary (or native language) file that corresponds to JavaScript so the mobile device does not have to parse, analyze or execute JavaScript to assist the instrumented browser. Thus, the instrumented browser can simply use a native language to render the JavaScript phrase.","On the other hand, if the instrumented browser does not have information to better parse, detect or analyze the request for the mobile device  (i.e., decision block =\u201cNo\u201d), the processor may have no metadata to return in block  and a mobile communication device can execute the webpage code in block . In block , the processor of the mobile device can use the metadata to facilitate web processing. In block , the processor for the mobile device executes the webpage code and renders the webpage in a manner that is more efficient.",{"@attributes":{"id":"p-0111","num":"0110"},"figref":"FIG. 5C","b":["580","100","580","580","580","534"]},"In block , the processor may send a request for metadata on a webpage. In block , the processor may send a request from a mobile device for a webpage. In decision block , the processor may use the data collected from the user's web browsing to better parse, analyze or execute the request. For example, the browser may determine that certain JavaScript phrases include a portion that has a high probability of execution based on observed statistics. Alternatively, the browser may determine that a user reviews the same webpage every day at 9:00 a.m. and certain data is cached for the next day. Therefore, the browser does not need to download all of the webpage elements the next day and may operate more efficiently.","If so (i.e., decision block =\u201cYes\u201d), which indicates that the browser has information to better parse, analyze or execute the request, the processor may return metadata to the mobile device in block . On the other hand, if the browser does not have information to better parse, detect or analyze the request for the mobile device  (i.e., decision block =\u201cNo\u201d), the processor may have no metadata to return in block , and a mobile communication device may execute the webpage code in block . In block , the processor of the web browser may return metadata to the mobile device. In block , the processor of the mobile device can use the metadata to facilitate web processing. In block , the processor for the mobile device executes the webpage code and renders the webpage in a manner that is faster than an instance where the metadata hints are not provided.",{"@attributes":{"id":"p-0114","num":"0113"},"figref":"FIG. 6","b":["600","100"]},"Method  may be implemented in a computing device having a processor configured with processor-executable instructions to perform the operations of the method . In method , the processor may commence operation at block  by a processor of the peer device collecting data from a web browser session. This may be performed in order to determine statistical information about webpage content.","For example, the statistical information may include data that certain web content elements have a high probability of being viewed or executed based on the collected data. In another aspect, the data may be particular to the user of the browser. For example, the user may have a habit of executing particular files or file type statistically over other elements. The peer device may generate metadata to form hints to anticipate a browser's next action based on browsing habits that are observed on the mobile device. In another aspect, a peer device may receive metadata from other peer devices and may aggregate data regarding browsing habits of many users to form hints. In another aspect, the peer device may receive metadata from a browser assistance server and may share that metadata with other peer devices. In a further aspect, the peer device may collect the habit data.","In block , the processor may request metadata on a webpage. In block , the processor may send a request from a mobile device for a webpage. In decision block , the processor may determine if the data collected from the peer device can better parse, analyze or execute the request.","If so (i.e., decision block =\u201cYes\u201d), which indicates that the peer device has information to better parse, analyze or execute the request, the processor may return metadata to the mobile device in block . On the other hand, if the peer device does not have information to better parse, detect or analyze the request for the mobile device  (i.e., decision block =\u201cNo\u201d), the processor may have no metadata to return in block  and a mobile communication device may execute the webpage code in block .","In block , the processor of the peer device may return metadata to the mobile device. For example, the metadata can improve operations of the mobile device and metadata may instruct the mobile device browser that certain portions of webpages have a high likelihood of execution or a high likelihood of being viewed and may be downloaded based on data aggregated by the peer device (or by data learned by the peer device from another source). For example, the metadata may indicate that a portion of a library has a remote possibility of being utilized.","In block , the processor of the mobile device can use the metadata from the peer device to facilitate web processing. For example, the mobile processor may determine using the metadata that HTML included in webpages has portion that can be processed in parallel rather than serially processed. The mobile processor may process the webpage elements in parallel based on the metadata supplied from the peer device. In block , the processor for the mobile device executes the webpage code and renders the webpage.",{"@attributes":{"id":"p-0121","num":"0120"},"figref":"FIG. 7","b":["700","100","100","100"]},"The network device can be a desktop computer, a laptop computer, a mobile device, a tablet computer, or other device that communicates with the mobile device and\/or other devices (not shown). The network device may monitor a user's activity on a web browser and may pair with the mobile device to provide data to the mobile device. Method  may be implemented in a computing device having a processor configured with processor-executable instructions to perform the operations of the method . In method , the processor associated with the network device may commence operation at block  by collecting data from a web browser session by a user in order to determine statistical information about webpage content. In another aspect, the network device may also communicate with a browser assistance server  via the Internet . The network device may also receive data from other users' web browsing habits. The network device may use the data to predict a web browser's next action. For example, the network computer device may generate metadata to form hints to anticipate a browser's next action based on browsing habits that are observed on the mobile device.","In block , the processor may request metadata on a webpage. For example, the metadata may be generated at the network device, a peer device, or a browser assistance server . In block , the processor may send a request from a mobile device for a webpage.","In decision block , the processor of the network device may determine if the network device has information that a browser can use to better parse, analyze or execute the request. For example, the network device may determine that certain JavaScript phrases include a portion that has a high probability of execution based on observed statistics. The network device may review the request and may determine that metadata is relevant to the request and may be sent to the mobile device browser.","If so (i.e., decision block =\u201cYes\u201d), which indicates that the network device has information to better parse, analyze, or execute the request, the processor may return metadata to the mobile device in block . On the other hand, if the network computer device does not have information to better parse, detect, or analyze the request for the mobile device  (i.e., decision block =\u201cNo\u201d), the processor may have no metadata to return in block  and a mobile communication device may execute the webpage code in block .","In block , the processor of the network device may return metadata to the mobile device as a separate file or embedded in a header of the content. In block , the processor of the mobile device can use the metadata from the network device to facilitate web processing. For example, based on a number of observed users, the metadata may indicate that a portion of a webpage is the most viewed webpage element based on statistical information. Metadata may indicate that the most viewed webpage element may be downloaded first before other webpage elements. Alternatively, the network device may communicate metadata that indicates that a library includes at least (1) a high probability executable portion or (2) a low probability execution portion. Metadata may indicate that the processor may download one portion first over another portion, a sequence or a schema. In block , the processor for the mobile device executes the webpage code and renders the webpage. By using the metadata hints mobile device resources are conserved.",{"@attributes":{"id":"p-0127","num":"0126"},"figref":"FIG. 8","b":["150","802","814","101","100","802","814","150","802","100","804","806","808","810","812","814","100","150"]},"A mobile communication device processor may receive an input that a user clicked on a hyperlink indicating that the user seeks to open a first webpage using a web browser operable on the mobile communication device. In response, the mobile communication device  may send a request  for webpage content in block . The request  is transmitted to the mobile communication base station . For example, the base station  may send the request to a server  () to obtain the web content.","A request to the browser assistance server in block  is transmitted to the base station . The base station  communicates the request to the browser assistance server . In response to the request, the browser assistance server  may deliver one or more metadata blocks -, data, cached data, or other metadata, to assist the mobile communication device  with processing the webpage. Some data can be pushed to the mobile communication device without receiving any request .","For example, a mobile communication device  may periodically erase a memory and data contents due to space constraints. The metadata may indicate that some data content may be cached to a server  as targeted services on behalf of the mobile communication device . Alternatively, the cached data may be pushed to the mobile communication device at some future interval without any request. Using the metadata, the mobile communication device  may render the webpage  in an efficient manner. The mobile communication device  also will optionally notify the user of an availability of a web site in block . The mobile communication device  also may optionally provide feedback to the browser assistance server  in block  of a quality of service of the metadata.",{"@attributes":{"id":"p-0131","num":"0130"},"figref":"FIG. 9","b":["900","150","900","150"]},"Method  may be implemented in a computing device having a processor configured with processor-executable instructions to perform the operations of the method . In method , the processor may commence operation at block  by a browser assistance server  collecting data regarding browsing habits of a number of users.","In block , the processor  of the browser assistance server creates metadata based on the collected data from a number of users. Metadata may include structured data about the browsing habits of a number of users. Metadata elements can be used to specify page description, keywords, and any other metadata not provided through head elements and attributes. The metadata element may emulate the use of the HTTP response header to embed additional metadata within the HTML document. Such metadata elements are placed as tags in the head section of an HTML or XHTML document.","In block , the processor  outputs program instructions so metadata is pushed from the browser assistance server  to the computing device. In another aspect, the metadata may be pulled from the browser assistance server to the computing device. In another aspect, the metadata may be embedded in other data. In another aspect, data may be continuously provided in a feed.","A processor of the computer device that receives the metadata may use the metadata in block . In block , the processor may use the metadata to render the webpage. In block , the processor may send data from the rendering webpage to the browser assistance server  to provide feedback.",{"@attributes":{"id":"p-0136","num":"0135"},"figref":["FIG. 10","FIG. 9"],"b":["1000","1000","150"]},"For example, these may include JavaScript function probabilities based on a number of measurements made for hundreds of mobile devices. For example, the empirical data may include the JavaScript phrases that are executed, loaded, viewed, analyzed, parsed, etc. Method  may be implemented in a computing device having a processor configured with processor-executable instructions to perform the operations of the method. In method , the processor may commence operation at block  by a browser assistance server  collecting browsing habit data for a number of users.","In block , the processor of the browser assistance server  may create metadata based on the collected data from a number of users. Metadata may be created and stored in an index, which can be periodically updated. Metadata may include HTML elements or XHTML elements, which are used to provide structured data about the browsing habits of a number of users. Metadata elements can be used to specify page description, keywords, and relationships through the other head elements and attributes. In another aspect, metadata elements may emulate the use of the HTTP response header or embed additional metadata in an HTML document.","In block , the processor of the computing device outputs program instructions so metadata is pulled from the browser assistance server  to the computing device. Pull technology includes network communication where an initial request for metadata originates from a client and is responded to by the browser assistance server . In another aspect, the metadata may be pushed from the browser assistance server  to the computing device without any request. In another aspect, the metadata may be embedded in other data, or may be provided in a feed.","The processor uses the metadata in block . For example, the metadata may indicate that a library element has a very small chance of execution, while a second library element has a 90 percent chance of execution. The processor can use the metadata to download the second element immediately, while not downloading the first library element until some time later. In block , the processor may use the metadata to render the webpage. In block , the processor sends data from the rendering webpage to the browser assistance server  to optionally provide feedback. In yet another aspect, the feedback information may be provided in a pushed feed to the browser of the computing device.",{"@attributes":{"id":"p-0141","num":"0140"},"figref":"FIG. 11","b":"1100"},"The data may comprise functional probabilities that certain webpage elements are parsed, executed, or analyzed. For example, the analytical module may determine JavaScript execution function probabilities based on measurements made from hundreds of mobile devices. The data may comprise: partition code hints; lexing information; script tokens; AST data for parsing; portions of HTML that can be processed in parallel or portions that can be processed serially; CSS webpage optimization data; cached data; or any other metadata that can conserve mobile resources. An analytic module may be associated with a browser assistance server , or alternatively may be associated with the computing device , and may include an algorithm to speculate regarding portions of JavaScript code that may be executed and compiled. In another aspect, the analytic module may be an intermediate device that can deliver metadata to the computer device. The analytic module may be a software module that includes an algorithm that can monitor user habits and that can generate metadata hints based on the observed empirical data.","Method  may be implemented in a computing device having a processor  configured with processor-executable instructions to perform the operations of the method . In method , the processor  may commence operation at block  by a browser assistance server  collecting data regarding browsing habits for a number of users.","In block , the processor of the browser assistance server may provide data to an analytic module to create metadata based on the collected data from a number of users. The analytical module may create the metadata and store the metadata a storage medium, such as in an index, which can be periodically updated based on new information from browsing habits.","In block , the metadata is generated so the metadata may anticipate the user's next browsing activity and may assist the browser by providing the information pertaining to the next browsing activity in advance. The webpage may comprise JavaScript with a high probability of execution based on empirical data observed from other users. The analytical module may detect that the browser's next step may be to process the JavaScript. The analytical module may output control instructions to pre-compile the JavaScript and form binary code (or other native code) and provide the binary code to the computing device. In block , the processor outputs program instructions so the metadata is delivered from the analytical module to the computing device.","Processor  of the computer device that receives the metadata uses the metadata in block . In block , the processor renders the webpage. In block , the processor may optionally send data from the rendering webpage to the browser assistance server to provide feedback.",{"@attributes":{"id":"p-0147","num":"0146"},"figref":"FIG. 12","b":["1200","150","150"]},"For example, a website may be frequently accessed by a mobile communication device , such as daily at 8:00 a.m. The data can be written to the mobile device memory. However since the storage medium of the mobile communication device is constrained, a predetermined time later the storage medium may be full, requiring the data to be erased in favor of new data. Thus, the next day, the mobile communication device  at 8:00 a.m. will visit the predetermined site and will need to download some of the same web content elements again.","The browser assistance server  may detect repeated browsing behavior by comparing patterns in daily web browsing activity including requests and responses to requests. When repeated behavior is detected, for example, by requesting the same webpage in a predetermined sequence, the browser assistance server  may provide targeted services to the mobile communication device . The browser assistance server  may permit that mobile communication device  to write data to a storage medium (e.g., a cache memory). The cache memory may be associated with the browser assistance server , or may be a different storage medium.","For example, the browser may access the popular website at 8:00 a.m. and data is written to the mobile device memory. However, a predetermined time later since the memory of the mobile communication device is constrained, the memory can be full, and the data is designated to be erased in favor of new data associated with a later used website. Before erasing the data, the mobile communication device may upload the data associated with the website including web site elements to the cache located on the BAS server . Alternatively the browser assistance server  may obtain the data directly from the website and store it in the cache without requiring the mobile communication device to upload the data. The next day, the mobile communication device before 8:00 a.m. or at 5:00 a.m. may download the data from the cache on the BAS server . At 8:00 a.m., in the event that the user visits the predetermined popular web site, numerous web content elements will already be located on the mobile device memory and the mobile communication device will need to update the website. In another aspect, the cache memory may be located in another location, for example, a wireless hard drive or dongle. For example, a user profile of popular websites may be stored on the mobile communication device or may be stored on the server.","Method  may be implemented in a computing device having a processor configured with processor-executable instructions to perform the operations of the method. In method , the processor may commence operation at block  by a browser assistance server  collecting data from browsing habits for a number of users.","In block , the processor of the browser assistance server  may identify popular webpages used by the computing device. In block , the browser assistance server may generate metadata so the metadata may anticipate the user's next browsing activity. In block , the browser assistance server may send metadata to a mobile device to provide targeted services for the mobile device so the mobile device may use a cache memory of the browser assistance server. Processor of the mobile communication device that receives the metadata uses the metadata in block  and identifies popular webpages that are frequently accessed are transmitted to the cache of the browser assistance server for storage.","In block , the processor may render the webpage based on the user's habits and the mobile device processor may download the cache data to execute the request. The same webpage is not rendered and generally some webpage content may be reused but other webpage content likely may be updated. For example, a prior version of a newspaper website may have some web content elements in common with a new version, however, some new web content elements, text and images may be needed. In another aspect, the browser assistance server  may also provide additional pre-fetching services and may update the content at the browser assistance server  and merge the updated content with the cache data. In another aspect, the browser assistance server  may pre-compile the cache content and deliver a binary or native code to the browser so the browser can render the webpage.",{"@attributes":{"id":"p-0154","num":"0153"},"figref":"FIG. 13","b":"1300"},"Method  may be implemented in a computing device having a processor  configured with processor-executable instructions to perform the operations of the method . In method , the processor  may commence operation at block  by a browser assistance server  collecting data of browsing habits for a \u201ccrowd\u201d or a number of users.","In block , the processor of the browser assistance server may receive data regarding JavaScript execution profiles from a number of web users. For example, a first JavaScript element may have a first statistical likelihood of being executed while a second JavaScript element may have a second statistical likelihood of being executed that is less than the first by a factor of two based on the observed profile of multiple users. For example, a third JavaScript element may have a third statistical likelihood of being executed that is less than 5 percent while a fourth JavaScript element may have a fourth statistical likelihood of being executed that is less almost 95 percent based on the observed profile of multiple users.","In block , the browser assistance server  may examine the first through fourth statistical likelihoods. The browser assistance server  may compare the data to a threshold value. In block , the browser assistance server  may generate metadata. The metadata may assist the browser to anticipate the user's next browsing activity. The metadata may assist the browser by providing the information pertaining to the likely next activity in advance.","In block , the processor outputs program instructions so the browser assistance server  may send metadata to the computer device to assist the computer device and to anticipate the browser's next action. For example, the webpage may comprise the fourth JavaScript element with a high probability of execution based on empirical data observed from other users. The processor may detect that the browser's next step may be to download and process the fourth JavaScript element. The processor may confirm this decision while the third JavaScript element may not be transmitted and processed since it is likely the third JavaScript element will not be executed.",{"@attributes":{"id":"p-0159","num":"0158"},"figref":"FIG. 14","b":["1400","150","150","150","150","150"]},"For example, a website may be frequently accessed by a mobile communication device at 8:00 a.m. and data is written to the mobile device memory. However, a predetermined time later since the memory of the mobile communication device is constrained, the memory can be full, and the data erased in favor of new data associated with a later used website. The next day, the mobile communication device at 8:00 a.m. will visit the predetermined site and need to download the web content elements again. The browser assistance server  may detect this behavior and may provide targeted services to the mobile communication device  and permit that mobile communication device  to write data to a cache memory associated with the browser assistance server .","For example, the browser may access the popular website at 8:00 a.m. and data is written to the mobile device memory. However, a predetermined time later since the memory of the mobile communication device is constrained, the memory can be full, and the data is designated to be erased in favor of new data associated with a later used website. Before erasing the data, the mobile communication device  will upload the data associated with the website including web site elements to the cache of the BAS server . The next day, the mobile communication device before 8:00 a.m. at 5:00 a.m. will download the data from the cache server. At 8:00 a.m., in the event that the user visits the predetermined popular web site, numerous web content elements will already be located on the mobile device memory and the mobile communication device will need to update the website. Further, if this user behavior repeats for a specified period of time, the data on the cache server will not be written over or erased. In this aspect, the browser assistance server  can review the cached data for further analysis of user habits.","Method  may be implemented in a computing device having a processor configured with processor-executable instructions to perform the operations of the method . In method , the processor may commence operation at block  by a browser assistance server  collecting data from browsing habits for a number of users.","In block , the processor of the browser assistance server may collect information about a user profile and browsing habits of the user. In block , the browser assistance server  may provide targeted services. The browser assistance server  may permit the computer device to cache data based on the user's browsing habits. In block , the computer device may use a cache memory of the browser assistance server  to write data to the cache of popular webpage elements. In block , the popular webpages and webpage elements that are frequently accessed are transmitted to the cache of the browser assistance server  for storage and the BAS indicates that the cache data is not to be erased and is marked for further analysis.","In block , the processor of the computing device may send a request for the popular website to render the webpage based on the user's habits. In block , the mobile device processor  may read the cache data from the browser assistance server to execute the request. In another aspect, the browser assistance server  may also provide additional pre-fetching services and may update the content at the browser assistance server and merge the updated content with the cache data. In another aspect, the browser assistance server  may pre-compile the cache content and deliver a binary or native code to the browser so the browser can render the webpage. In block , the browser assistance server may analyze the cache states for further optimization, and pre-fetching. In this aspect, metadata to provide hints for other user may be generated based in part on the analysis in block .",{"@attributes":{"id":"p-0165","num":"0164"},"figref":"FIG. 15","b":["1500","150","100","150","100","150","100"]},"For example, a first website may be frequently accessed by a mobile communication device at 8:00 a.m. and data may be written to the mobile device memory. However, a predetermined time later, since the memory of the mobile communication device may be constrained, the memory may be full. The data may be erased in favor of new data associated with a later used second website. The next day, the user may instruct the browser on the mobile communication device at 8:00 a.m. and may visit the first website and may need to download the web content elements again.","The browser assistance server  (or the mobile communication device ) may detect inefficient behavior and may provide targeted services to the mobile communication device . The browser assistance server  may permit that mobile communication device  to write data to a storage medium or cache memory associated with the browser assistance server . Additionally, the browser assistance server  may augment and supplement the cached data with other learned information or hints. For example, the browser assistance server may provide metadata hints and embed the metadata hints within the cached data. For example, the browser assistance server  may pre-compile the cache data and provide the cached data in a binary format (or native format) for the mobile communication device .","For example, the browser may access the popular website at 8:00 a.m. and data may be written to the mobile device memory. However, a predetermined time later since the memory of the mobile communication device is constrained, the memory can be full, and the data is designated to be erased in favor of new data associated with a later used website. Before erasing the data, the mobile communication device  will upload the data associated with the website including web site elements to the cache of the BAS server . The browser assistance server  may also optimize the cache data and embed metadata into the cached data. The browser assistance server  may provide metadata hints within the cache data for the benefit of the mobile communication device .","The next day, the mobile communication device  before 8:00 a.m. will download the data from the cache server with the augmented learned data. At 8:00 a.m., in the event that the user visits the predetermined popular web site, numerous web content elements will already be located on the mobile device memory and the mobile communication device  may render the page after updating. Further, the mobile communication device  may visit a second new website and use the embedded metadata within the downloaded content to parse, execute or analyze new web content.","Method  may be implemented in a computing device having a processor  configured with processor-executable instructions to perform the operations of the method . In method , the processor  may commence operation at block  where a mobile communication device  transmits a request for a webpage.","In block , the processor of the mobile communication device may collect information about a user profile and send the user profile to the browser assistance server . In block , the browser assistance server  may provide targeted services and may permit the computer device to cache data to a storage medium based on the user's browsing habits. In block , the browser assistance server  may augment the cache data with metadata that includes learned information to assist the mobile communication device. In block , the processor of the computing device may send a request for the popular website to render the webpage based on the user's habits. In block , the mobile device processor may download the cache data from the browser assistance server  to execute the request and also may optionally download the metadata to assist the browser with current or future browser hints. The same webpage may not be rendered and generally some webpage content may be reused but other webpage content likely may be updated. The browser assistance server  may also provide cache data that has undergone optimization.",{"@attributes":{"id":"p-0172","num":"0171"},"figref":"FIG. 16","b":["150","100","1602","1604","1602","100","150","100","150","150","100","150","1602"]},"The browser assistance server  will store cache state A  on the server  as shown by reference arrow . The mobile communication device  can send a request for a different webpage and download data . The browser assistance server  may augment the cache data A . The browser assistance server  can embed metadata or add data that reflects learned information from the user's browsing habits. Server  may embed data from other users to provide hints to the mobile communication device browser . On the second day, day 2 at 5:00 a.m., the browser assistance server  may push the cache data A  as shown from arrow  from the server  to the mobile communication device  (along with any updated data contained and saved within the cache data A ). For example, on day 2 at 8:00 a.m., a user using a mobile communication device  may send a request to download a frequently accessed webpage and may include many web elements contained within cache data A  and may update the web site. The browser assistance server  may serve as an L2 cache for the device  and can maintain a set of cache states.",{"@attributes":{"id":"p-0174","num":"0173"},"figref":"FIG. 17","b":["1700","1700","1700","1700","1702"]},"In block , the processor of the browser assistance server  may formulate hints for the mobile communication device to efficiently parse and to execute JavaScript. For example, the metadata may identify a statistically relevant portion of the script. In block , the browser assistance server may deliver metadata to the mobile communication device that includes hints to efficiently parse and execute JavaScript. In block , the processor may use the metadata to parse the JavaScript. In block , the mobile device processor may use the hints to execute the JavaScript. In block , the mobile device sends feedback to the browser assistance server.",{"@attributes":{"id":"p-0176","num":"0175"},"figref":"FIG. 18","b":["150","150","100","150","150","100"]},"For example, at 8:00 a.m. a user using a mobile communication device  may seek to download a webpage by sending a request  to the Internet . The request may be received by a server (not shown) and the response request may potentially return data  that includes HTML, JavaScript, CSS, and objects. The mobile communication device  may also send a request  to a browser assistance server . The request  may determine whether the browser assistance server  can provide hints to more efficiently parse and execute HTML, JavaScript, CSS and objects.","In addition to the hints, the browser assistance server  can also directly analyze and pre-compile JavaScript for a predetermined architecture. The browser assistance server  may process the JavaScript and may generate a direct binary pre-compiled translation of the requested JavaScript web elements . The direct binary translation of the requested JavaScript web elements  can be transmitted to the mobile communication device  as shown by arrow  for immediate use by the mobile communication device  browser. The precompiled binary  allows the mobile communication device  to avoid parsing, analyzing and just-in-time processing associated with the JavaScript execution path. The mobile device  may optionally provide feedback to the browser assistance server . In an alternative aspect, the browser assistance server may provide a virtualized module on the mobile device  and deliver data to the virtualized module.",{"@attributes":{"id":"p-0179","num":"0178"},"figref":"FIG. 19","b":["1900","100","1900","131","1900","1900","131","1902","100"]},"In block , the processor of the mobile communication device may send a request to a browser assistance server  to efficiently parse and to execute JavaScript. In block , the browser assistance server  may analyze the request and pre-compile the webpage JavaScript for the mobile communication device . In block , the browser assistance server  may form at least one pre-compiled binary file and may transmit the pre-complied binary file to the mobile device processor . The direct binary translation may be transmitted to the mobile communication device  for immediate use by the mobile communication device browser. Alternatively, the translation may be in another native language associated with the mobile communication device browser. The native language allows the mobile communication device to avoid parsing, analyzing and just-in-time processing of a JavaScript execution path. In block , the mobile device processor  may use the pre-complied data to render the webpage. In block , the mobile device may optionally send feedback to the browser assistance server.",{"@attributes":{"id":"p-0181","num":"0180"},"figref":"FIG. 20","b":"2000"},"The browser assistance server  may provide metadata that a first library portion is more frequently executed while a second library portion is less frequently executed. In this manner, the processor  may download a first library portion that may a higher statistical chance of use relative to a second library portion that likely may not be executed. In other aspect, if the assumptions are incorrect, the browser may send the fill library as soon as practicable. Method  may be implemented in a computing device having a processor  configured with processor-executable instructions to perform the operations of the method . In method , the processor may commence operation at block  where a mobile communication device may transmit a request for a webpage, which is received by a server.","In block , the processor of the mobile communication device may send a request to a browser assistance server to obtain hints for the mobile communication device and to process the request. The browser assistance server may analyze the request and in block , the processor may provide data regarding a most frequently used or most frequently executed portion of a library to the mobile communication device. The browser assistance server may also optionally provide information about the least frequently used or the least frequently executed library portions. In block , the mobile device processor may download the most frequently used (or the most frequently executed library portion) first and may download other portions later in time. In block , the mobile device processor may execute the portion and may download a second portion of the library at a time later, if at all. In block , the mobile device may optionally transmit feedback to the browser assistance server.",{"@attributes":{"id":"p-0184","num":"0183"},"figref":"FIG. 21","b":["2100","150","150","131","2100","131","2100","2100","2102"]},"In block , the processor  of the mobile communication device  may send a request to a browser assistance server  to obtain hints for the mobile communication device  and to process the request. The hints are contained in metadata sent from the server  to the mobile communication device . The browser assistance server  may analyze the request. In block , the processor  may provide data regarding a most frequently viewed webpage portion for a website to the mobile communication device .","The browser assistance server  may derive this information from empirical or statistics observed from a number of users. The browser assistance server  may also optionally provide information about the least viewed portion of the website. In block , the mobile device processor  may download the most frequently viewed website portion first and may download other portions later in time in block . In block , the mobile device processor  may execute the portion and download a second portion later. In block , the mobile device  may send feedback to the browser assistance server .",{"@attributes":{"id":"p-0187","num":"0186"},"figref":"FIG. 22","b":["2230","2231","2232","2233","2254","2234","2235","2231","2236","2231","2230","2238"]},"The various aspects may be implemented on any of a variety of commercially available server devices, such as the server  illustrated in . Such a server  typically includes a processor  coupled to volatile memory  and a large capacity nonvolatile memory, such as a disk drive . The server  may also include a floppy disc drive, compact disc (CD) or DVD disc drive  coupled to the processor . The server  may also include network access ports  coupled to the processor  for establishing network interface connections with a network , such as a local area network coupled to other broadcast system computers and servers.","The processors ,  may be any programmable microprocessor, microcomputer or multiple processor chip or chips that can be configured by software instructions (applications) to perform a variety of functions, including the functions of the various aspects described above. In some devices, multiple processors ,  may be provided, such as one processor dedicated to wireless communication functions and one processor dedicated to running other applications. Typically, software applications may be stored in the internal memory , , and  before they are accessed and loaded into the processor , . The processor ,  may include internal memory sufficient to store the application software instructions. In many devices the internal memory may be a volatile or nonvolatile memory, such as flash memory, or a mixture of both. For the purposes of this description, a general reference to memory refers to memory accessible by the processor ,  including internal memory or removable memory plugged into the device and memory within the processor ,  itself.",{"@attributes":{"id":"p-0190","num":"0189"},"figref":["FIG. 24","FIG. 24"],"b":["2410","2410","2417","2410","2411","2412","2413","2410","2414","2415","2411","2410","2411","2411","2417","2418","2419","2411"]},"The foregoing method descriptions and the process flow diagrams are provided merely as illustrative examples and are not intended to require or imply that the steps of the various aspects must be performed in the order presented. As will be appreciated by one of skill in the art the order of steps in the foregoing aspects may be performed in any order. Words such as \u201cthereafter,\u201d \u201cthen,\u201d \u201cnext,\u201d etc. are not intended to limit the order of the steps; these words are simply used to guide the reader through the description of the methods. Further, any reference to claim elements in the singular, for example, using the articles \u201ca,\u201d \u201can\u201d or \u201cthe\u201d is not to be construed as limiting the element to the singular.","The various illustrative logical blocks, modules, circuits, and algorithm steps described in connection with the aspects disclosed herein may be implemented as electronic hardware, computer software, or combinations of both. To clearly illustrate this interchangeability of hardware and software, various illustrative components, blocks, modules, circuits, and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application, but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.","The hardware used to implement the various illustrative logics, logical blocks, modules, and circuits described in connection with the aspects disclosed herein may be implemented or performed with a general purpose processor, a digital signal processor (DSP), an application specific integrated circuit (ASIC), a field programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general-purpose processor may be a microprocessor, but, in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine. A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration. Alternatively, some steps or methods may be performed by circuitry that is specific to a given function.","In one or more exemplary aspects, the functions described may be implemented in hardware, software, firmware, or any combination thereof. If implemented in software, the functions may be stored as one or more instructions or code on a non-transitory computer-readable or processor-readable storage medium. The steps of a method or algorithm disclosed herein may be embodied in a processor-executable software module executed which may reside on a non-transitory computer-readable medium. Non-transitory computer-readable and processor media include any available storage media that may be accessed by a computer or processor. By way of example, and not limitation, such non-transitory computer-readable media may comprise RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium that may be used to carry or store desired program code in the form of instructions or data structures and that may be accessed by a computer. Disk and disc, as used herein, includes compact disc (CD), laser disc, optical disc, digital versatile disc (DVD), floppy disk, and blu-ray disc where disks usually reproduce data magnetically, while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of non-transitory computer-readable media. Additionally, the operations of a method or algorithm may reside as one or any combination or set of codes and\/or instructions on a non-transitory machine readable medium and\/or non-transitory computer-readable medium, which may be incorporated into a computer program product.","The preceding description of the disclosed aspects is provided to enable any person skilled in the art to make or use the present invention. Various modifications to these aspects will be readily apparent to those skilled in the art, and the generic principles defined herein may be applied to other aspects without departing from the spirit or scope of the invention. Thus, the present invention is not intended to be limited to the aspects shown herein but is to be accorded the widest scope consistent with the following claims and the principles and novel features disclosed herein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated herein and constitute part of this specification, illustrate exemplary aspects of the invention, and together with the general description given above and the detailed description given below, serve to explain the features of the invention.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 5C"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 24"}]},"DETDESC":[{},{}]}
