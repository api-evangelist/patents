---
title: Selective message loss handling in a cluster of replicated servers
abstract: A computer-implemented method, a computerized system and a product for providing a cluster of replicated servers. The method performed by a computerized server in a cluster of servers, wherein the cluster of servers are executing replicated instances of an application, wherein the replicated instances are configured to perform the same processing of the same input, comprising: detecting a message loss in the server; electively determining a responsive action to the message loss; and notifying the cluster of servers of the responsive action determined by the server, whereby other servers of the cluster of servers are able to mimic operation of the server by simulating the responsive action.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08738959&OS=08738959&RS=08738959
owner: International Business Machines Corporation
number: 08738959
owner_city: Armonk
owner_country: US
publication_date: 20111115
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["The present disclosure relates generally to message loss handling and, more particularly to message loss handling in a cluster of replicated servers.","A cluster of computerized servers may be configured to be replicas of one another, by executing replicated instances of an application, such as a computer program, and providing the same input to the instances (i.e., input streams of all instances have the same messages and ordering thereof). A cluster of replicated servers is depicted in US Patent Publication 2008\/0310444A1 entitled \u201cGroup Communication System Achieving Efficient Total Order and State Synchronization in a Multi-tier Environment\u201d, which is hereby incorporated by reference.","Replicated servers may be aimed at providing high availability of a service provided by the application. All the servers run the same application, process the same input, maintain the same state, and produce the same output. If one of the servers fails, the application remains available as long as at least one server remains functional. In some cases, servers may join the cluster during its operation, and thus after failing, a server may reboot and join the cluster. Joining the cluster may require synchronizing the state of the application to that of the cluster.","The cluster may have a server acting as a \u201cleader\u201d. The term \u201cleader\u201d, in the present specification, should not be construed literally. A leader server may be in charge of determining a message processing order of the cluster. Based on the determined processing order, all servers of the clusters process the messages according to the determined order. A leader may be in charge of managing the cluster, such as by providing new servers state of the application so as to enable them to join the cluster. The role of the leader may be divided to different servers, but for the sake of simplicity, and without the loss of generality, the present disclosure relates to a single leader.","A message that is transmitted to the cluster is transmitted to each server of the cluster. However, due to various reasons, such as, for example, congestion or source failure, some messages may be lost. Message loss presents a problem, as in order to be able to support transparent failover the replicated instances of the application at all the servers should maintain the same state and thus must process exactly the same set of messages and in the same order. In case one server encounters message loss from one of the sources, it cannot continue with delivering messages to the application since this may lead to an inconsistent state. In some exemplary cases, the server may attempt to recover the message or suspend itself from the cluster (and possibly attempt to regain synchronization later and rejoin the cluster). Since message loss can happen independently at each server, all the servers in the cluster may be forced to suspend themselves due to message loss from which they cannot recover. This leads to a failure of the application since the cluster is no longer able to run the application on any server.","Though reliable messaging protocols may be used to moderate the risk of message loss, such as T Speakman et al. \u201cPGM Reliable Transport Protocol Specification\u201d, RFC 3208, (2001), which is hereby incorporated by reference, message loss may still occur. The prior art discloses a variety of mechanisms to overcome message loss problems.","One solution is a use of a Guaranteed Messaging Service (GMS), such as described in Roger Barga, David Lomet, Gerhard Weikum. Recovery Guarantees for General Multi-Tier Applications. In Proceedings of the International Conference on Data Engineering (ICDE), 2002, which is hereby incorporated by reference. The GMS provides a persistent message storage, whereby messages that were not received by a server, can be retrieved from the storage. However, GMS causes a significant overhead that slows down the entire system. Hence, such solution may not be useful in certain configurations, such as high-availability, high throughput and low latency systems.","An additional solution is a use of a Group Communication Systems (GCS). Some GCS log messages and if a server encountered message loss the messages are retrieved from one of the other servers that logged these messages. Various GCSs are disclosed in Chockler et al. \u201cGroup Communication Specifications: A Comprehensive Study,\u201d ACM Computing Surveys 33:4 (2001), which is hereby incorporated by reference. However, GCS requires overhead associated with logging messages and distributing the messages between the servers in the cluster. Hence, such solution may not be useful in certain configurations, such as high-availability, high throughput and low latency systems.","One exemplary embodiment of the disclosed subject matter is a computer-implemented method performed by a computerized server in a cluster of servers, wherein the cluster of servers are executing replicated instances of an application, wherein the replicated instances are configured to perform the same processing of the same input, comprising: detecting a message loss in the server; selectively determining a responsive action to the message loss; and notifying the cluster of servers of the responsive action determined by the server, whereby other servers of the cluster of servers are able to mimic operation of the server by simulating the responsive action.","Another exemplary embodiment of the disclosed subject matter is a computerized system comprising: a cluster of computerized servers; wherein each server of the cluster comprises a processor, a memory unit and a communication module for communicating over a computerized network; wherein each server of the cluster is adapted to execute a replicated instance of an application, wherein the servers are operative to receive the same input and perform the same processing, wherein the servers are substantial replicas of one another; wherein a server of the cluster comprising a processor operative to: detect a message loss in the server; selectively determine a responsive action to the message loss; and notify the cluster of servers of the responsive action determined by the server, whereby other servers of the cluster of servers are able to mimic operation of the server by simulating the responsive action.","Yet another exemplary embodiment of the disclosed subject matter is a computer program product comprising: a non-transitory computer readable medium having stored thereon a set of instructions to be performed by a computerized server in a cluster of servers, wherein the cluster of servers are executing replicated instances of an application, wherein the replicated instances are configured to perform the same processing of the same input; wherein said set of instructions comprises: a first program instruction for detecting a message loss in the server; a second program instruction for selectively determining a responsive action to the message loss; and a third program for notifying the cluster of servers of responsive action determined by the server, whereby other servers of the cluster of servers are able to mimic operation of the server by simulating the responsive action.","The disclosed subject matter is described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the subject matter. It will be understood that blocks of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to one or more processors of a general purpose computer, special purpose computer, a tested processor, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a non-transient computer-readable medium that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the non-transient computer-readable medium produce an article of manufacture including instruction means which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a device. A computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","One technical problem dealt with by the disclosed subject matter is to provide a message loss mechanism for clusters of replicated servers. The message loss mechanism may be configured to enable selective treatment of losses of different types of messages and in different situations.","Another technical problem is to enable the selective determination to be based on the application logic and may be different with different applications.","One technical solution is to determine a responsive action to the message loss by the leader. The responsive action may be to suspend the leader from the cluster and allow a different server that received the lost messages, to become the leader and process the lost messages. Alternatively, the responsive action may be to drop the lost messages from being processed by the cluster. In some exemplary embodiments, the responsive action may determine certain types of messages to be dropped in the future, such as messages from the same source as the lost messages, messages pertaining to the same topic thereof, messages having the same priority, or the like.","Another technical solution is to determine message loss information useful for determining the responsive action and provide the information to the application for determining Hence, the application logic may be able to provide tailored decisions in accordance with the application's requirements. The application may, for example, implement an Application Programming Interface (API) for receiving the information and providing the determined responsive action. The information may be determined based on data associated with other received messages which are useful for deducing information regarding the lost messages themselves. The information may be a number of lost messages, estimated age, priority thereof, content of next available message, transport information relating to the lost messages, or the like.","In order for some message loss information to be determined, the source sending the message can add information to messages useful for indicating properties of messages that were lost. Hence, a server that did not receive some messages may extract information from other messages that were received and using thereof determine properties of the lost messages.","One technical effect of utilizing the disclosed subject matter is enabling application logic to determine which messages can be dropped without affecting availability of the cluster. Thereby, the application logic may be invoked in the decision of how to handle message loss in the cluster, and the decision is not performed by a transport layer or similar layer of a communication system.","Another technical effect is to enable reduced overhead associated with message loss handling, as some messages are allowed to be dropped without recovery attempts.","Yet another technical effect is providing a flexible solution which can be useful for applications that are executed under high throughput messaging, require low latency messaging, provide high availability service, or the like. In particular, the disclosed subject matter may be useful for applications that require high throughput and low latency messaging combined with high availability and consistency services. In some exemplary embodiments, high throughput low latency message delivery may be supported as consistency can be maintained without being forced to persist or log messages.","Yet another technical effect is that the disclosed subject matter allows combination of relatively unreliable sources of messages, without necessitating message recovery with each message lost from the unreliable sources. Furthermore, message lost from the unreliable sources does not dictate suspension of the server from the cluster, and may be handled differently than message loss from a different source.","Yet another technical effect is that different actions may be taken for different message losses that are detected. This may provide greater flexibility in handling message loss event.","The disclosed subject matter can be combined with any of the other message loss handling mechanism (e.g. guaranteed messaging, message logging, or the like) but it may also be used by itself to remove the overhead associated with the message loss handling mechanism.","Referring now to  showing a diagram of a computerized environment, in accordance with some exemplary embodiments of the disclosed subject matter. A computerized environment  comprises a cluster . Cluster  comprises a plurality of servers (e.g., , , , ) executing replicated instances of an application. Cluster  may comprise any number of servers, and the number of servers may change dynamically by new servers joining cluster , by servers suspending from cluster  in response to losing synchronization, or the like.","Replicated servers can be useful for providing high availability of a service. Hence, if a first server cannot provide the processed data to a destination (e.g., due to a communication problem, due to server malfunction or rebooting, or the like), a different server may provide the same output as the first server to the destination. In view of the above, the servers are sometimes referred as \u201cbackup servers\u201d. As long as at least one server remains function Cluster  is able to provide the service of the application.","A server, such as server , may be deemed a leader. In some exemplary embodiments, in response to a leader suspending itself, a different server may take the role of the leader instead of the suspended leader. In some exemplary embodiments, all servers of cluster  are capable of acting as leaders. In some exemplary embodiments, a portion of the servers of cluster  is not capable of acting as leaders and can only perform a role of backup servers.","One or more Message Sources (, , ) may provide to cluster  one or more message streams (, , , respectfully). It will be noted that a single source may provide cluster  with any number of message streams, and is not limited to a single message stream per source. Message sources , ,  may broadcast message streams , ,  to all servers of cluster . In some exemplary embodiments, a reliable multicast may be utilized as a communication protocol to provide the messages to all servers of cluster . Other communication protocols may be utilized to broadcast the data. It will be understood that the disclosed subject matter is applicable to environments having any number of data sources, including, but not limited to a single data source.","As can be appreciated, message stream  of source  dictates an ordering of its messages (A, A, A). Similarly, message stream  of Source  dictates an ordering of its messages (B, B, B). However, a message processing order by cluster  should be determined In some exemplary embodiments, the message processing order, also referred to as total order, can maintain the partial orders dictated by the message streams. In case that a single source is available, the total order may be the order of the message stream. However, in some embodiments, the total order may be different than the message stream order even in such an environment, or may not include all messages of the message stream.","In some exemplary embodiments, a first source (e.g., ) may be more reliable than a second source (e.g., ) and may be expected to fail delivery less often. For example, reliability may differ due to physical location or network connectivity (e.g., source  is a wireless source which may be mobile, while source  is immobile and connected using a direct wire to all servers of cluster ), due to hardware differences (e.g., source  is a home computer, while source  is a dedicated server), or the like.","In some exemplary embodiments, cluster  provides a financial service, such as stock exchange operations, bank operations, or the like. Different sources may be associated with different clients, such as for example, a large financial corporation as opposed to a private investor. Therefore, sources associated with one client may be less reliable, from a communication standpoint, than those associated with another client.","In some exemplary embodiments, a source, such as source , may encode message loss information as metadata of the messages, thereby enabling a server, such as server , to determine information associated with lost messages that were not received by server .","Cluster  may provide output to destinations (e.g., , ). The environment may have any number of destinations, including but not limited to, one destination, or hundreds of destinations. Destinations ,  may be computerized devices capable of receiving data from cluster , such as via a communication protocol. Destination  may receive data from a single server of cluster  or from multiple servers of cluster . Destination  may be indifferent of which server transmits the data to it, as the servers of the cluster  provide the same data.","It will be understood that computerized devices that communicate with one another are connected over some form of computerized network, such as Local Area Network (LAN), Wide Area Network (WAN), WiFi network, WiMAX network, Ethernet network, intranet, Internet, and the like.","In some exemplary embodiments, a message log  may be utilized to log messages received by cluster . Message log  may be, for example, data storage, a Network Associated Storage (NAS), a Storage Area Network (SAN), or a similar storage device, preferably, persistent storage device. Message log  may be utilized to store messages received by cluster  and recover messages by one or more servers of cluster  that did not receive the messages. Additionally or alternatively, message recovery by servers of cluster  may be performed by requesting the lost messages from other servers of cluster .","Referring now to  showing an embodiment of server  and server  of cluster , in accordance with some embodiments of the disclosed subject matter.","Server  comprises of different components, each having different purpose.","A messaging layer A may be configured to receive messages from the sources (e.g., message streams , , ) and send messages to the destinations. In some exemplary embodiments, reliable multicast may be utilized by messaging layer A","A transport layer A may be configured to manage cluster . Transport layer A may be configured to ensure consistent service of cluster . Transport layer A may perform tasks such as leader election, failure detection, server introduction into the cluster, and the like. Transport layer A may be configured to set and enforce the total order of the messages. In some exemplary embodiments, transport layer A provides messages, in accordance with the total order, to an application A. In some exemplary embodiments, transport layer A is configured to selectively drop certain messages, such as based on determination of the leader, determination of the application in the leader, or the like.","The application A is an application providing the service of cluster . The application A may be, for example, an application for performing trading operations in a stock market, such as registering bid and ask orders in an order book. Other exemplary applications may include applications for online shopping (e.g., multiple servers are executing requests from multiple customers and need to maintain the same state), online gaming servers (e.g., multiple users perform actions on the server and the server is replicated for high-availability), or the like. In some exemplary embodiments, application A can be any application that needs to be highly available. The disclosed subject matter is relevant even to applications where total order is not important.","Similarly, server  comprises a messaging layer , a transport layer and an application B.","Without loss of generality, server  may be deemed as the leader of cluster . Upon message loss detection, transport layer may provide application with message loss information. Based on the message loss information, application may determine a responsive action to the message loss. If, for example, the responsive action is suspending server  from cluster , transport layer may implement the responsive action, such as by initiating a leader election process in cluster  to replace server . In some exemplary embodiments, a leader may simply stop functioning as the leader, and a leader election process may initiate based on a determination by servers in cluster  that there is no leader available. Alternatively, if the responsive action is dropping the lost messages, transport layer may notify all servers, including server , that the lost messages are to be dropped. Transport layer B may receive the notification and, in case the lost messages were received by messaging layer B, drop the messages. Transport layer B may provide application B with messages, but not the lost messages, even if they were received by messaging layer B. Additionally or alternatively, transport layer may determine a total order of the messages, which does not include the lost message. The total order may be transmitted to transport layer B, which provides application B with messages in accordance with the total order. Thereby, transport layer is notified to ignore and drop the lost messages.","Referring now to  showing a flowchart diagram of steps in a method for message handling, in accordance with some exemplary embodiments of the disclosed subject matter. The method of  may be performed by a leader, or by a server configured to determine which messages are to be processed and which messages are to be dropped.","It will be noted that in some exemplary embodiments, total order may be determined by a different server than the one performing the method of . Optionally, the server performing method of  is able to modify the total order determined by the different server and notify the cluster of the modification. Alternatively, order of processing the messages need not be maintained and may be modified as long as the same set of messages are processed by each server of the cluster. However, without the loss of generality, and with the purpose of ease of explanation, the present disclosure describes an embodiment in which the server performing  determines the total order by itself and does not receive the total order from an external source.","In step , messages are obtained from message streams (e.g.,  of ).","In step , in case any of the received messages match an ignore criteria, those messages are ignored and dropped from processing. In some exemplary embodiments, dropping a message means that the message is not forwarded to the application (e.g., application A) for processing. The ignore criteria may be set in step , which is described hereinbelow.","In step , message loss is determined Message loss may be detected in any technique known in the art. In one embodiment, messages have sequential identifiers. If a previous message was received with a certain identifier, next message to be received from the same stream is expected to have a next identifier after the certain identifier. For example, assuming the sequence numbers increased by one, after receiving message #45; next message should be #46. If any other message is received, e.g., #58, message loss may be detected. Furthermore, based on the identifier of the received message, a number of lost messages may be determined (see step  hereinbelow). In the above example, twelve (12) messages are lost.","In case no message loss is detected, step  may be performed to determine a total order of received messages. The total order may be transmitted to the cluster to enable each backup server to implement the total order. Afterwards, step  may be performed to receive additional messages. It will be further understood that based on the total order messages are provided to the application in each server, including the server performing the method of .","In case message loss is detected, step  may be performed. Optionally, message recovery is attempted using any message recovery mechanism. If recovery succeeded, step  may be performed, while if not all messages are recovered, step  may be performed. It will be noted that step  enables a non-selective recovery of lost messages. However, some embodiments allow for selective recovery of messages. In particular, an embodiment that includes step  disclosed hereinbelow allows for a selective recovery of lost message based on application logic.","In step , message loss information may be generated. Message loss information may be provided to the application in step , thereby enabling the application logic to determine responsive action to the message loss based on relevant information.","Message loss information may comprise status of the cluster (), number of lost messages (), transport information (), priority indication of lost messages (), content of next available message (), message recovery information (), estimated age of lost messages (), any combination thereof, or the like.","In step , status of the cluster may be determined Status of the cluster may be an indication of how many servers compose the cluster. In some exemplary embodiments, when the leader is the only active server in the cluster, suspension of the leader would mean that the whole cluster would stop functioning, and thereby a different behavior may be determined.","In step , number of lost messages may be determined Number of lost messages may be computed based on identifiers of messages received and determination of the gap in-between. Different behavior may be performed when a large number of messages are lost than that is performed when only one message is lost.","In step , transport information may be extracted. Transport information comprises information relating to the communication protocol. The information may include the source of the messages, the message stream, the topic, or the like. The information may comprise lower level information (e.g., attributed to the physical layer, data link layer, or network layer) such as message rate, number of packets received, number of Negative-ACKnowledges (NACKs) sent, and the like. In some exemplary embodiments, the information may be useful, for example, as the application may allow loss on some topics but not on other topics. Similarly, different message streams and sources may be handled differently. Additionally, lower level information may be useful, for example, for comprehending whether recovery is feasible, whether it is likely that transmission of message to other servers was successful, or the like.","In step , priority indication of lost messages may be determined Priority indications may be determined by requesting information from the cluster, thereby the other servers of the cluster, which may have received the lost messages or other type of data that was not received by the server performing step , may provide the priority indications. Additionally or alternatively, and in order to avoid overhead of issuing a query to the cluster, the priority indication may be determined by the server using information associated with messages that were received. For example, each message may comprise metadata including an ordinal distance from last message having a predetermined priority. Thereby, using the metadata of messages before and after gap of missing messages, and taking into account the priority of the messages preceding the gap, it may be determined whether any of the lost messages are of the predetermined priority. An exemplary embodiment is described hereinbelow with respect to Tables 1 and 2.","At the sender side (source), a priority is assigned to each message based on its content or other considerations. The priority may be either high priority (denoted as 0) or low priority (denoted as 1). Additional information may be added as metadata to the message: (1) message sequence number (e.g. sequential unique identifiers); (2) priority of the message; and (3) distance in number of messages, also referred to as ordinal distance, from a last high priority message. In some exemplary embodiments, a predetermined value, such as \u22121, undef, or the like, may be utilized if no high priority messages were previously sent.","For simplicity, we denote sequence number of message M as SQN(M), priority of message M as P(M) and distance of message M as D(M).","Table 1 shows metadata as transmitted from source, where \u22121 represents that no high priority was previously sent.",{"@attributes":{"id":"p-0065","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"center"}}],"thead":{"row":{"entry":[{},"TABLE 1"]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]},{"entry":[{},"SQN(M):"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"14pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","2","3","4","5","6","7","8","9","10"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"10","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"10","colwidth":"14pt","align":"char","char":"."}},{"@attributes":{"colname":"11","colwidth":"14pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["P(M):","1","1","0","1","0","0","0","1","1","0"]},{"entry":["D(M):","\u22121","\u22121","\u22121","1","2","1","1","1","2","3"]},{"entry":{"@attributes":{"namest":"1","nameend":"11","align":"center","rowsep":"1"}}}]}}]}}},"At the leader, a message gap may be detected by detecting that message Y is received immediately after message X, but SQN(X)+1<SQN(Y). The number of messages lost can be computed by calculating: SQN(Y)\u2212(SQN(X)+1).","A determination of whether the one or more lost messages comprise at least one high priority message may be performed as follows: if D(Y) indicates that no high priority messages were previously transmitted, then the lost messages are not of high priority. Otherwise, SQN(Y)\u2212D(Y) indicates a sequence number of the last high priority message that was sent before Y. If the sequence number is greater than SQN(X) the meaning is that at least one high priority message was lost. Pseudo code for performing the above described computation may be:\n\nIF (()==\u22121) OR (SQN()\u2212()<=SQN())\n","THEN only messages of low priority have been lost","ELSE at least one message of high priority has been lost","It will be noted that the additional information is relatively small and consists of a distance that may be encoded using an integer (e.g., 2 bytes, 4 bytes, or the like).","The disclosed subject matter may handle a plurality of priorities. The distance may be with respect to a predetermined priority and may indicate whether any of the lost messages are of a priority level that is at least the predetermined priority.","Additionally or alternatively, a plurality of distances may be utilized with respect to different Priorities. Consider a messaging system with three priorities: high, medium and low. Two ordinal distances may be utilized in order to indicate ordinal distance from the last high priority and medium priority messages. Table 2 shows metadata as transmitted from source, high, medium and low priorities are indicates by 0, 1, and 2 respectfully, and where D and D indicate distance from last high or medium priority message.",{"@attributes":{"id":"p-0073","num":"0072"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"center"}}],"thead":{"row":{"entry":[{},"TABLE 2"]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]},{"entry":[{},"SQN(M):"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"14pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","2","3","4","5","6","7","8","9","10"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"10","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"10","colwidth":"14pt","align":"char","char":"."}},{"@attributes":{"colname":"11","colwidth":"14pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["P(M):","1","2","0","1","2","0","0","2","1","0"]},{"entry":["D0(M):","\u22121","\u22121","\u22121","1","2","3","1","1","2","3"]},{"entry":["D1(M):","\u22121","1","2","3","1","2","3","4","5","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"11","align":"center","rowsep":"1"}}}]}}]}}},"Using the corresponding ordinal distance metadata, it can be determined whether a message of priority p was not received by the receiver.\n\nIF (()==\u22121) OR (SQN()\u2212()<=SQN())\n","THEN no messages of priority p have been lost","ELSE at least one message of priority p has been lost","Hence, using additional metadata, which may be associated with additional overhead, more precise priority indications may be determined","In step , content of next message after the one or more lost messages may be extracted. In some exemplary embodiments, the application may utilize the content in determination whether or not the content of the lost messages is deemed important. For example, in some embodiments, a message may contain \u201crollback\u201d instructions to undo operations by previous messages. If this is the case, a lost message that was rollbacked later on may be dropped. In some exemplary embodiments, step  may extract content from a plurality of messages and not a single message.","In step , message recovery information may be extracted. Message recovery information may be, for example, whether or not the messages can be retrieved from storage, estimated retrieval time, or the like. The application may take the message recovery information into account when determining the responsive action.","In step , estimated age of lost messages may be determined. In some exemplary embodiments, messages may become stale after a certain amount of time, and may be ignored after a time period elapsed since the message creation. In such cases, lost messages that are stale may be dropped. Messages may include additional information to enable determination of estimated age of lost messages. The additional information may comprise a message creation time stamp. Additionally or alternatively, the additional information may comprise a time difference from when some of the previously sent messages were created. For example, message number X may include the time difference from when messages X-1, X-10, X-100, and X-1000 were created. Additionally or alternatively, the additional information may comprise sequence numbers of messages that were created at various time differences from this message. For example, a message created at time T may include the sequence numbers of the messages that were created at times T-10 ms, T-100 ms, T-1 sec, and T-10 sec. Based on the additional information of a received message, age of lost messages may be determined or estimated. In some exemplary embodiments, the application can use the time age encoded in the first message that is available after the loss to determine whether the missing messages are (likely to be) stale or not. Based on the information the application may select to take an appropriate responsive action. For example, it may determine to ignore stale lost messages.","In step , message loss information generated in step  may be provided to the application, or to any other component operable to select a responsive action based on the message loss information.","In step , the application (or other component in charge of responsive action selection) may determine a responsive action to the message loss. In some exemplary embodiments, possible responsive actions may be, for example, suspend the server from the cluster, attempt to recover lost data, instruct the cluster to drop the lost messages, or the like. Additionally or alternatively, based on the message loss information, a determination to ignore future messages may be determined. For example, based on a determination that a source and the cluster are not in sync after a lost message was dropped by the cluster, next messages from the source may be dropped. In some exemplary embodiments, messages may be dropped until a sync operation is performed so as to get the cluster and the source back in sync. As another example, based on a determination that messages are often lost from a certain message stream, the message stream may be ignored in the future. As yet another example, in case a message of a certain topic is ignored, messages of the same topic or of related topics may be ignored hereon.","In some exemplary embodiments, a responsive action may comprise a sequence of alternative actions, such as first try to recover the message and if unsuccessful suspend the server. As another example, the sequence may be: first try to recover and if unsuccessful ignore the message. Any sequence combining alternative or additional","In  four different responsive actions are exemplified: suspend, recover, drop and ignore. As can be appreciated, the method of  describes two sequences of responsive actions (e.g., recover and alternatively suspend; and drop and additionally ignore).","In response to a RECOVER responsive action, message recovery may be attempted (). Message recovery may be performed similarly to that performed in step . In some exemplary embodiments, if step  is performed, in step  a recovery attempt that requires additional overhead than that of step  may be performed. If recovery succeeds, there is no longer a message loss and step  may be performed. Alternatively, if recovery fails, an alternative responsive action may be performed, such as, for example, SUSPEND (step ). In some exemplary embodiments, in response to failure to recover the application may determine the alternative responsive action. In some exemplary embodiments, step  may be performed to determine the alternative responsive action. In some exemplary embodiments, the application may take into account messages that were recovered, their content, priorities or the like. Furthermore, the application may take into account the reason for which the recovery has failed.","In step , in response to a SUSPEND responsive action determination, the leader server performing the method of  may suspend itself from the cluster. In step , a different server may become a leader of the cluster, based on some leader election procedure. Leader election may initiate after the leader explicitly notifies the cluster that it suspends itself. Additionally or alternatively, leader election may initiate after the cluster is implicitly notified of the suspension, such as when the leader seizes to provide instructions to the cluster for a predetermined timeframe. In some exemplary embodiments, the leader that was suspended from the cluster may attempt to rejoin the cluster as a backup server ().","In step , in response to a DROP responsive action determination, the leader may determine a total order for the cluster that does not comprise the lost messages. In step , the cluster may be notified of the new total order, hence causing the dropped message not to be processed by any backup server and effectively dropped. Notification in step  may be said to be an implicit notification of the DROP responsive action. In some exemplary embodiments, an explicit notification of the DROP responsive action may be provided to the cluster, thereby each backup server may, in response, drop the lost messages. After the DROP responsive action is performed, new messages may be obtained and new message losses may be handled.","In step , in response to an IGNORE responsive action determination, the leader may register a type of message to be ignored. In some exemplary embodiments, messages from the message stream on which the message loss occurred may be ignored. Ignoring messages can be permanent, for a predetermined time duration, for a predetermined number of messages, or the like. Optionally, the IGNORE responsive action determination may be provided to that cluster (), hence providing an explicit notification. The backup servers may then ignore the determined type of message on their own. Alternatively, the IGNORE responsive action determination may be provided in an implicit notification, by the leader server ignoring target messages and omitting them from the total order that the leader may provide to the cluster (e.g., in step ).","In some exemplary embodiments, an IGNORE responsive action may be determined together with an additional responsive action such as RECOVER or DROP. In  an example of IGNORE & DROP is described wherein in addition to steps  and , steps ,  are performed as is described hereinabove.","It will be noted that the method of  may be performed by a server, such as a leader server of the cluster. In some exemplary embodiments, a backup server may follow instructions by the leader. In some exemplary embodiments, a backup server processes received messages only after receiving permission from the leader to do so (e.g., in the form of a total order comprising identifiers of the received messages). If a message loss responsive action is received from another server (e.g., leader), the responsive action may be implemented by the backup server. For example, the backup server may drop a message, even in case that it was received. As another example, the backup server may register types of messages to be ignored.","In some exemplary embodiments, the backup server may report the message loss event to the application being executed in the backup server. Additionally or alternatively, the application may be informed about the responsive action that was received from the leader.","In some exemplary embodiments, in case a backup server detects message loss of a message that the server did not instruct to ignore (e.g., a message comprised by the total order), the backup server may suspend itself from the cluster and optionally attempt to rejoin the cluster later on. In some exemplary embodiments, the backup server may first attempt to recover such lost message, and only in the event it cannot recover the message, suspend itself.","Referring now to  showing a block diagram of components of a server, in accordance with some exemplary embodiments of the disclosed subject matter. A Server  may be a server of a cluster, such as Cluster . In some exemplary embodiments, Server  is a server capable of being a leader of the cluster. Server  may be configured to either act as a backup server or as a leader.","Server  may be a computerized apparatus adapted to perform a method such as depicted in .","In some exemplary embodiments, Server  may comprise a Processor . Processor  may be a Central Processing Unit (CPU), a microprocessor, an electronic circuit, an Integrated Circuit (IC) or the like. Alternatively, Server  can be implemented as firmware written for or ported to a specific processor such as Digital Signal Processor (DSP) or microcontrollers, or can be implemented as hardware or configurable hardware such as field programmable gate array (FPGA) or application specific integrated circuit (ASIC). Processor  may be utilized to perform computations required by Server  or any of it subcomponents.","In some exemplary embodiments of the disclosed subject matter, Server  may comprise an Input\/Output (I\/O) Device  such as a receiver, transmitter, transceiver, modem, an input device, an output device or the like. In some exemplary embodiments, I\/O Device  is utilized to connect to an I\/O device for providing input by or output to a human user. It will however be appreciated that the system can operate without human operation.","In some exemplary embodiments, Server  may comprise a Memory . Memory  may be computerized memory, such as persistent or volatile. For example, Memory  can be a Flash disk, a Random Access Memory (RAM), a memory chip, an optical storage device such as a CD, a DVD, or a laser disk; a magnetic storage device such as a tape, a hard disk, storage area network (SAN), a network attached storage (NAS), or others; a semiconductor storage device such as Flash device, memory stick, or the like. In some exemplary embodiments, Memory  may retain program code operative to cause Processor  to perform acts associated with any of the steps shown in . In some exemplary embodiments, Memory  may retain the received messages, registered types of messages to ignore, or the like.","The components detailed below may be implemented as one or more sets of interrelated computer instructions, executed for example by Processor  or by another processor. The components may be arranged as one or more executable files, dynamic libraries, static libraries, methods, functions, services, or the like, programmed in any programming language and under any computing environment.","Application  may be an application operated by the cluster, such as A of . Application  may adhere to a predetermined API enabling Application  to receive message loss information and determine responsive action. Furthermore, the API may provide an interface for determining current state of Application  and changing current state of Application , thereby enabling different instances of Application  to be executed at a backup server be synchronized to the state of Application  of Server  without processing (by the backup server) all the messages that were processed by Application .","A Recovery Module  may be configured to recover a message that was not received by Server . Recovery module  may recover messages from a message log (e.g.,  of ), from another server of the cluster, or the like.","A Priority Indication Determinator  may be configured to determine priority indications regarding one or more lost messages. Priority indication determinator  may determine the priority indication based on messages received before and after the lost messages gap. Priority indication determinator  may perform step  of .","A Message Loss Information Generator  may be configured to generate message loss information, such as described with respect to steps - of . Generator  may be configured to generate message loss information. Generator  may be configured to utilize Priority Indication Determinator . Generator  may provide the message loss information to Application . Application  may comprise a responsive action selection logic (not shown) to determine the responsive action based on the message loss information.","A Responsive Action Implementer  may be configured to implement the responsive action received from Application . Additionally or alternatively, Responsive Action Implementer  may be configured to implement a responsive action received from an external source, such as a different server that acts as a leader. Implementing the responsive action may be performed similarly to as described with respect to steps - of .","A Selective Message Dropper  may be configured to selectively drop received messages. Selective Message Dropper  may drop a message based on a registration indicating the message is to be ignored (e.g., as is performed in step  of ), Additionally or alternatively, Selective Message Dropper  may drop a message based on a determination that the total order indicates the message is to be dropped. If, for example, a first and second messages are received from the same message stream, where the first message was received before the second message. Selective Message Dropper  may determine that the total order indicates the first message be dropped if the total order indicates processing the second message before it indicates processing the first message. As the order between the first and second messages is dictated by the message stream, processing the second message indicates that the first message was dropped by the leader and excluded from the total order altogether.","A Total Order Determinator  may determine a total order for a cluster. The total order may be transmitted to the backup servers of the cluster, which may follow the order dictated by the total order. Total Order Determinator  may perform operations such as described with respect to step  of .","The flowchart and block diagrams in the figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present disclosure. In this regard, each block in the flowchart and some of the blocks in the block diagrams may represent a module, segment, or portion of program code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the disclosure. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","As will be appreciated by one skilled in the art, the disclosed subject matter may be embodied as a system, method or computer program product. Accordingly, the disclosed subject matter may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, the present disclosure may take the form of a computer program product embodied in any tangible medium of expression having computer-usable program code embodied in the medium.","Any combination of one or more computer usable or computer readable medium(s) may be utilized. The computer-usable or computer-readable medium may be, for example but not limited to, any non-transitory computer-readable medium, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, device, or propagation medium. More specific examples (a non-exhaustive list) of the computer-readable medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CDROM), an optical storage device, a transmission media such as those supporting the Internet or an intranet, or a magnetic storage device. Note that the computer-usable or computer-readable medium could even be paper or another suitable medium upon which the program is printed, as the program can be electronically captured, via, for instance, optical scanning of the paper or other medium, then compiled, interpreted, or otherwise processed in a suitable manner, if necessary, and then stored in a computer memory. In the context of this document, a computer-usable or computer-readable medium may be any medium that can contain, store, communicate, propagate, or transport the program for use by or in connection with the instruction execution system, apparatus, or device. The computer-usable medium may include a propagated data signal with the computer-usable program code embodied therewith, either in baseband or as part of a carrier wave. The computer usable program code may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, and the like.","Computer program code for carrying out operations of the present disclosure may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present disclosure has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the disclosure in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the disclosure. The embodiment was chosen and described in order to best explain the principles of the disclosure and the practical application, and to enable others of ordinary skill in the art to understand the disclosure for various embodiments with various modifications as are suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":["The present disclosed subject matter will be understood and appreciated more fully from the following detailed description taken in conjunction with the drawings in which corresponding or like numerals or characters indicate corresponding or like components. Unless indicated otherwise, the drawings provide exemplary embodiments or aspects of the disclosure and do not limit the scope of the disclosure. In the drawings:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 1A and 1B"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
