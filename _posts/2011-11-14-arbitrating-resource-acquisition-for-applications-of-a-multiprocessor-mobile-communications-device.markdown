---
title: Arbitrating resource acquisition for applications of a multi-processor mobile communications device
abstract: In an embodiment, a multi-processor mobile communications device includes a first processor system executing a concurrency manager server application (CMSA) and a second processor system executing a concurrency manager client application (CMCA). The CMSA determines priority levels related to access to resources for a first set of applications that are configured for execution on the first processor system and a second set of applications that are configured for execution on the second processor system. The CMSA notifies the CMCA of the determined priorities. The CMSA and the CMCA each then selectively grant or reject access to the resources for the first and second sets of applications, respectively, based on the determined priorities levels. In another embodiment, if the CMSA or CMCA rejects an application's request to access resources, the CMSA or CMCA can determine availability of alternative resources by which the requesting application can achieve its goal.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09317329&OS=09317329&RS=09317329
owner: QUALCOMM Incorporated
number: 09317329
owner_city: San Diego
owner_country: US
publication_date: 20111114
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CLAIM OF PRIORITY UNDER 35 U.S.C. \u00a7119","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present Application for Patent claims priority to Provisional Application No. 61\/413,780 entitled \u201cARBITRATING RESOURCE ACQUISITION FOR APPLICATIONS OF A MULTI-PROCESSOR MOBILE COMMUNICATIONS DEVICE\u201d, filed Nov. 15, 2010, and assigned to the assignee hereof and hereby expressly incorporated by reference herein.","1. Field of the Invention","Embodiments of the invention relate to arbitrating resource acquisition for applications of a mobile communications device.","2. Relevant Background","Wireless communication systems have developed through various generations, including a first-generation analog wireless phone service (1G), a second-generation (2G) digital wireless phone service (including interim 2.5G and 2.75G networks) and a third-generation (3G) high speed data\/Internet-capable wireless service. There are presently many different types of wireless communication systems in use, including Cellular and Personal Communications Service (PCS) systems. Examples of known cellular systems include the cellular Analog Advanced Mobile Phone System (AMPS), and digital cellular systems based on Code Division Multiple Access (CDMA), Frequency Division Multiple Access (FDMA), Orthogonal FDMA (OFDMA), Time Division Multiple Access (TDMA), the Global System for Mobile access (GSM) variation of TDMA, and newer hybrid digital communication systems using both TDMA and CDMA technologies.","The method for providing CDMA mobile communications was standardized in the United States by the Telecommunications Industry Association\/Electronic Industries Association in TIA\/EIA\/IS-95-A entitled \u201cMobile Station-Base Station Compatibility Standard for Dual-Mode Wideband Spread Spectrum Cellular System,\u201d referred to herein as IS-95. Combined AMPS & CDMA systems are described in TIA\/EIA Standard IS-98. Other communications systems are described in the IMT-2000\/UM, or International Mobile Telecommunications System 2000\/Universal Mobile Telecommunications System, standards covering what are referred to as wideband CDMA (W-CDMA), CDMA2000 (such as CDMA2000 1\u00d7EV-DO standards, for example) or TD-SCDMA.","In W-CDMA wireless communication systems, user equipments (UEs) receive signals from fixed position Node Bs (also referred to as cell sites or cells) that support communication links or service within particular geographic regions adjacent to or surrounding the base stations. Node Bs provide entry points to an access network (AN)\/radio access network (RAN), which is generally a packet data network using standard Internet Engineering Task Force (IETF) based protocols that support methods for differentiating traffic based on Quality of Service (QoS) requirements. Therefore, the Node Bs generally interacts with UEs through an over the air interface and with the RAN through Internet Protocol (IP) network data packets.","In wireless telecommunication systems, Push-to-talk (PTT) capabilities are becoming popular with service sectors and consumers. PTT can support a \u201cdispatch\u201d voice service that operates over standard commercial wireless infrastructures, such as W-CDMA, CDMA, FDMA, TDMA, GSM, etc. In a dispatch model, communication between endpoints (e.g., UEs) occurs within virtual groups, wherein the voice of one \u201ctalker\u201d is transmitted to one or more \u201clisteners.\u201d A single instance of this type of communication is commonly referred to as a dispatch call, or simply a PTT call. A PTT call is an instantiation of a group, which defines the characteristics of a call. A group in essence is defined by a member list and associated information, such as group name or group identification.","In an embodiment, a multi-processor mobile communications device includes a first processor system executing a concurrency manager server application (CMSA) and a second processor system executing a concurrency manager client application (CMCA). The CMSA determines priority levels related to access to resources for a first set of applications that are configured for execution on the first processor system and a second set of applications that are configured for execution on the second processor system. The CMSA notifies the CMCA of the determined priorities. The CMSA and the CMCA each then selectively grant or reject access to the resources for the first and second sets of applications, respectively, based on the determined priorities levels. In another embodiment, if the CMSA or CMCA rejects an application's request to access resources, the CMSA or CMCA can determine availability of alternative resources by which the requesting application can achieve its goal.","Aspects of the invention are disclosed in the following description and related drawings directed to specific embodiments of the invention. Alternate embodiments may be devised without departing from the scope of the invention. Additionally, well-known elements of the invention will not be described in detail or will be omitted so as not to obscure the relevant details of the invention.","The words \u201cexemplary\u201d and\/or \u201cexample\u201d are used herein to mean \u201cserving as an example, instance, or illustration.\u201d Any embodiment described herein as \u201cexemplary\u201d and\/or \u201cexample\u201d is not necessarily to be construed as preferred or advantageous over other embodiments. Likewise, the term \u201cembodiments of the invention\u201d does not require that all embodiments of the invention include the discussed feature, advantage or mode of operation.","Further, many embodiments are described in terms of sequences of actions to be performed by, for example, elements of a computing device. It will be recognized that various actions described herein can be performed by specific circuits (e.g., application specific integrated circuits (ASICs)), by program instructions being executed by one or more processors, or by a combination of both. Additionally, these sequence of actions described herein can be considered to be embodied entirely within any form of computer readable storage medium having stored therein a corresponding set of computer instructions that upon execution would cause an associated processor to perform the functionality described herein. Thus, the various aspects of the invention may be embodied in a number of different forms, all of which have been contemplated to be within the scope of the claimed subject matter. In addition, for each of the embodiments described herein, the corresponding form of any such embodiments may be described herein as, for example, \u201clogic configured to\u201d perform the described action.","A High Data Rate (HDR) subscriber station, referred to herein as user equipment (UE), may be mobile or stationary, and may communicate with one or more access points (APs), which may be referred to as Node Bs. A UE transmits and receives data packets through one or more of the Node Bs to a Radio Network Controller (RNC). The Node Bs and RNC are parts of a network called a radio access network (RAN). A radio access network can transport voice and data packets between multiple UEs.","The radio access network may be further connected to additional networks outside the radio access network, such core network including specific carrier related servers and devices and connectivity to other networks such as a corporate intranet, the Internet, public switched telephone network (PSTN), a Serving General Packet Radio Services (GPRS) Support Node (SGSN), a Gateway GPRS Support Node (GGSN), and may transport voice and data packets between each UE and such networks. A UE that has established an active traffic channel connection with one or more Node Bs may be referred to as an active UE, and can be referred to as being in a traffic state. A UE that is in the process of establishing an active traffic channel (TCH) connection with one or more Node Bs can be referred to as being in a connection setup state. A UE may be any data device that communicates through a wireless channel or through a wired channel. A UE may further be any of a number of types of devices including but not limited to PC card, compact flash device, external or internal modem, or wireless or wireline phone. The communication link through which the UE sends signals to the Node B(s) is called an uplink channel (e.g., a reverse traffic channel, a control channel, an access channel, etc.). The communication link through which Node B(s) send signals to a UE is called a downlink channel (e.g., a paging channel, a control channel, a broadcast channel, a forward traffic channel, etc.). As used herein the term traffic channel (TCH) can refer to either an uplink\/reverse or downlink\/forward traffic channel.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1","b":["100","100","102","104","120","102","126","102","108","110","112","102","108","110","112"]},"Referring back to , the components of the wireless communications system  and interrelation of the elements of the exemplary embodiments of the invention are not limited to the configuration illustrated. System  is merely exemplary and can include any system that allows remote UEs, such as wireless client computing devices , , ,  to communicate over-the-air between and among each other and\/or between and among components connected via the air interface  and RAN , including, without limitation, core network , the Internet, PSTN, SGSN, GGSN and\/or other remote servers.","The RAN  controls messages (typically sent as data packets) sent to a RNC . The RNC  is responsible for signaling, establishing, and tearing down bearer channels (i.e., data channels) between a Serving General Packet Radio Services (GPRS) Support Node (SGSN) and the UEs \/\/\/. If link layer encryption is enabled, the RNC  also encrypts the content before forwarding it over the air interface . The function of the RNC  is well-known in the art and will not be discussed further for the sake of brevity. The core network  may communicate with the RNC  by a network, the Internet and\/or a public switched telephone network (PSTN). Alternatively, the RNC  may connect directly to the Internet or external network. Typically, the network or Internet connection between the core network  and the RNC  transfers data, and the PSTN transfers voice information. The RNC  can be connected to multiple Node Bs . In a similar manner to the core network , the RNC  is typically connected to the Node Bs  by a network, the Internet and\/or PSTN for data transfer and\/or voice information. The Node Bs  can broadcast data messages wirelessly to the UEs, such as cellular telephone . The Node Bs , RNC  and other components may form the RAN , as is known in the art. However, alternate configurations may also be used and the invention is not limited to the configuration illustrated. For example, in another embodiment the functionality of the RNC  and one or more of the Node Bs  may be collapsed into a single \u201chybrid\u201d module having the functionality of both the RNC  and the Node B(s) .",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 2A","FIG. 2A","FIG. 2A"],"b":["126","126","160","165","175","175"]},"Generally, GPRS is a protocol used by Global System for Mobile communications (GSM) phones for transmitting Internet Protocol (IP) packets. The GPRS Core Network (e.g., the GGSN  and one or more SGSNs ) is the centralized part of the GPRS system and also provides support for W-CDMA based 3G networks. The GPRS core network is an integrated part of the GSM core network, provides mobility management, session management and transport for IP packet services in GSM and W-CDMA networks.","The GPRS Tunneling Protocol (GTP) is the defining IP protocol of the GPRS core network. The GTP is the protocol which allows end users (e.g., access terminals) of a GSM or W-CDMA network to move from place to place while continuing to connect to the internet as if from one location at the GGSN . This is achieved transferring the subscriber's data from the subscriber's current SSGN  to the GGSN , which is handling the subscriber's session.","Three forms of GTP are used by the GPRS core network; namely, (i) GTP-U, (ii) GTP-C and (iii) GTP\u2032 (GTP Prime). GTP-U is used for transfer of user data in separated tunnels for each packet data protocol (PDP) context. GTP-C is used for control signaling (e.g., setup and deletion of PDP contexts, verification of GSN reach-ability, updates or modifications such as when a subscriber moves from one SGSN to another, etc.). GTP\u2032 is used for transfer of charging data from GSNs to a charging function.","Referring to , the GGSN  acts as an interface between the GPRS backbone network (not shown) and the external packet data network . The GGSN  extracts the packet data with associated packet data protocol (PDP) format (e.g., IP or PPP) from the GPRS packets coming from the SGSN , and sends the packets out on a corresponding packet data network. In the other direction, the incoming data packets are directed by the GGSN  to the SGSN  which manages and controls the Radio Access Bearer (RAB) of the destination UE served by the RAN . Thereby, the GGSN  stores the current SGSN address of the target UE and his\/her profile in its location register (e.g., within a PDP context). The GGSN is responsible for IP address assignment and is the default router for the connected UE. The GGSN also performs authentication and charging functions.","The SGSN  is representative of one of many SGSNs within the core network , in an example. Each SGSN is responsible for the delivery of data packets from and to the UEs within an associated geographical service area. The tasks of the SGSN  includes packet routing and transfer, mobility management (e.g., attach\/detach and location management), logical link management, and authentication and charging functions. The location register of the SGSN stores location information (e.g., current cell, current VLR) and user profiles (e.g., IMSI, PDP address(es) used in the packet data network) of all GPRS users registered with the SGSN , for example, within one or more PDP contexts for each user or UE. Thus, SGSNs are responsible for (i) de-tunneling downlink GTP packets from the GGSN , (ii) uplink tunnel IP packets toward the GGSN , (iii) carrying out mobility management as UEs move between SGSN service areas and (iv) billing mobile subscribers. As will be appreciated by one of ordinary skill in the art, aside from (i)-(iv), SGSNs configured for GSM\/EDGE networks have slightly different functionality as compared to SGSNs configured for W-CDMA networks.","The RAN  (e.g., or UTRAN, in Universal Mobile Telecommunications System (UMTS) system architecture) communicates with the SGSN  via a Iu interface, with a transmission protocol such as Frame Relay or IP. The SGSN  communicates with the GGSN  via a Gn interface, which is an IP-based interface between SGSN  and other SGSNs (not shown) and internal GGSNs, and uses the GTP protocol defined above (e.g., GTP-U, GTP-C, GTP', etc.). While not shown in , the Gn interface is also used by the Domain Name System (DNS). The GGSN  is connected to a Public Data Network (PDN) (not shown), and in turn to the Internet , via a Gi interface with IP protocols either directly or through a Wireless Application Protocol (WAP) gateway.","The PDP context is a data structure present on both the SGSN  and the GGSN  which contains a particular UE's communication session information when the UE has an active GPRS session. When a UE wishes to initiate a GPRS communication session, the UE must first attach to the SGSN  and then activate a PDP context with the GGSN . This allocates a PDP context data structure in the SGSN  that the subscriber is currently visiting and the GGSN  serving the UE's access point.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 2B","FIG. 1","FIG. 2B","FIG. 2B","FIG. 2B"],"b":["100","1","120","1","3","120","162","162","188","175","182","184","186","170","2","5","120","164","162","164","188","175","182","184","186","170","4","175","175"]},"Referring to , UEs ,  and  . . . N are illustrated as wireless cell-phones, UE  is illustrated as a wireless tablet-PC and UE  is illustrated as a wired desktop station. However, in other embodiments, it will be appreciated that the wireless communication system  can connect to any type of UE, and the examples illustrated in  are not intended to limit the types of UEs that may be implemented within the system. Also, while the AAA , the provisioning server , the IMS\/SIP registration server  and the application server  are each illustrated as structurally separate servers, one or more of these servers may be consolidated in at least one embodiment of the invention.","Further, referring to , the application server  is illustrated as including a plurality of media control complexes (MCCs)  . . . N B, and a plurality of regional dispatchers  . . . N A. Collectively, the regional dispatchers A and MCCs B are included within the application server , which in at least one embodiment can correspond to a distributed network of servers that collectively functions to arbitrate communication sessions (e.g., half-duplex\/full-duplex group communication sessions via IP unicasting and\/or IP multicasting protocols) within the wireless communication system . For example, because the communication sessions arbitrated by the application server  can theoretically take place between UEs located anywhere within the system , multiple regional dispatchers A and MCCs are distributed to reduce latency for the arbitrated communication sessions (e.g., so that a MCC in North America is not relaying media back-and-forth between session participants located in China). Thus, when reference is made to the application server , it will be appreciated that the associated functionality can be enforced by one or more of the regional dispatchers A and\/or one or more of the MCCs B. The regional dispatchers A are generally responsible for any functionality related to establishing a communication session (e.g., handling signaling messages between the UEs, scheduling and\/or sending announce messages, etc.), whereas the MCCs B are responsible for hosting the communication session for the duration of the call instance, including conducting an in-call signaling and an actual exchange of media during an arbitrated communication session.","Referring to , a UE , (here a wireless device), such as a cellular telephone, has a platform  that can receive and execute software applications, data and\/or commands transmitted from the RAN  that may ultimately come from the core network , the Internet and\/or other remote servers and networks. The platform  can include a transceiver  operably coupled to an application specific integrated circuit (ASIC), or other processor, microprocessor, logic circuit, or other data processing device. The one or more processors (e.g., , ) execute the application programming interface (API)  layer that interfaces with any resident programs in the memory  of the wireless device. The memory  can be comprised of read-only or random-access memory (RAM and ROM), EEPROM, flash cards, or any memory common to computer platforms. The platform  also can include a local database  that can hold applications not actively used in memory . The local database  is typically a flash memory cell, but can be any secondary storage device as known in the art, such as magnetic media, EEPROM, optical media, tape, soft or hard disk, or the like. The internal platform  components can also be operably coupled to external devices such as antenna , display , push-to-talk button  and keypad  among other components, as is known in the art.","Accordingly, an embodiment of the invention can include a UE including the ability to perform the functions described herein. As will be appreciated by those skilled in the art, the various logic elements can be embodied in discrete elements, software modules executed on a processor or any combination of software and hardware to achieve the functionality disclosed herein. For example, Processor , Processor II , memory , API  and local database  may all be used cooperatively to load, store and execute the various functions disclosed herein and thus the logic to perform these functions may be distributed over various elements. Alternatively, the functionality could be incorporated into one discrete component. Therefore, the features of the UE  in  are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.","Further, UE  is shown as including a plurality of subscriber identity modules (SIMs)  . . . N, . Thus, UE  corresponds to a multi-SIM UE, as will be described in more detail below.","The wireless communication between the UE  or  and the RAN  can be based on different technologies, such as code division multiple access (CDMA), W-CDMA, time division multiple access (TDMA), frequency division multiple access (FDMA), Orthogonal Frequency Division Multiplexing (OFDM), the Global System for Mobile Communications (GSM), or other protocols that may be used in a wireless communications network or a data communications network. For example, in W-CDMA, the data communication is typically between the client device , Node B(s) , and the RNC . The RNC  can be connected to multiple data networks such as the core network , PSTN, the Internet, a virtual private network, a SGSN, a GGSN and the like, thus allowing the UE  or  access to a broader communication network. As discussed in the foregoing and known in the art, voice transmission and\/or data can be transmitted to the UEs from the RAN using a variety of networks and configurations. Accordingly, the illustrations provided herein are not intended to limit the embodiments of the invention and are merely to aid in the description of aspects of embodiments of the invention.","Below, embodiments of the invention are generally described in accordance with W-CDMA protocols and associated terminology (e.g., such as UE instead of mobile station (MS), mobile unit (MU), access terminal (AT), etc., RNC, contrasted with BSC in EV-DO, or Node B, contrasted with BS or MPT\/BS in EV-DO, etc.). However, it will be readily appreciated by one of ordinary skill in the art how the embodiments of the invention can be applied in conjunction with wireless communication protocols other than W-CDMA (e.g., EV-DO, Long-Term Evolution (LTE), etc.).","On multi-processor handsets, most applications run on an application processor system on top of a High Level Operating Systems (HLOS) (e.g., Android, iOS, Windows Mobile, etc.). These applications are usually not particularly latency sensitive and are not closely tied to the air interface. However, for latency sensitive applications such as VoIP applications, the HLOS may be insufficient to support latency sensitive functionality, such as Quality of Service (QoS). Accordingly, latency sensitive applications can be handled by a modem processor system, which is separate from the application processor system, so that the latency sensitive applications can have more direct access to the air interface.","However, when different applications are running concurrently on the modem and application processor systems, problems can arise with respect to resource contention between the processor systems, whereby the resource cannot be assigned to more than a threshold number of applications (e.g., one) at a given time. For example, in terms of the audio output device or speakers of the handset, typical concurrency management solutions implemented by the HLOS block all other applications from access to the audio output device when a voice call is active, but otherwise do not enforce restrictions upon the applications on the modem and processor systems. Thus, it is possible that a first application (e.g., a VoIP application) on the modem processor system can attempt to access the audio output device at the same time as a second application (e.g., an MP3 application) on the application processor system, resulting in merged audio output that degrades the user experience. Additionally, the priorities for other applications may not be supported.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 4A","FIG. 4A"],"b":["400","450","400","450"]},"Referring to , the first processor system A includes a first processor A, a memory A and a battery A, and the second processor system A includes a second processor A, a memory A, a battery A and a modem A. In an example, the batteries A and A can either be implemented as separate batteries that provide power to the first and second processor systems A and A, respectively, or alternatively as a single battery that provides power to both processor systems. Also shown is bus A, which connects the first and second processor systems A and A and through which hardware and\/or software components of the respective processor systems can communicate with each other.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 4B","FIG. 4A","FIG. 4B"],"b":["400","450","400","1","1","1","1","1","1","405","405"]},"Each of the client-executable applications _ . . . N_ are configured to interact with a concurrency manager server B. The concurrency manager server B is responsible for determining the priorities of applications for accessing one or more resources of the multi-processor UE. In particular, the concurrency manager server B determines the resource-access priorities for applications associated with each processor of the multi-processor UE (e.g., modem processor system applications, application processor system applications, etc.). In an embodiment, the concurrency manager server B tracks semaphores associated with the multi-processor UE's resources while permitting a locked resource used by a lower-priority application to be unlocked in response to a higher-priority application's request for the locked resource. Alternatively, the concurrency manager server B does not need to track external semaphores and instead can implement a passive or implied resource availability status, whereby the concurrency manager server B simply monitors which resources are currently available and which resources are being used and are thereby unavailable. In either case, the concurrency manager server B is equipped to determine out which resources are available or unavailable and further to determine whether an application requesting access to an unavailable resource has sufficient privileges to preempt a current application's use of that resource.","Referring to , the second processor system A includes a plurality of client-executable applications _ . . . M_, where M>=1. The execution of client-executable applications _ . . . M_ is controlled by a second operating system (OS), B. In an example, the second OS B can correspond to a Real-Time Operating System (RTOS). Each of the client-executable applications _ . . . M_ are configured to interact with a concurrency manager client B. The concurrency manager client B is a proxy for the concurrency manager server B of the first processor system A. The concurrency manager client B and the concurrency manager server B communicate with each other over a connection B, which can be implemented via the bus A shown in  as an example. Similar to the concurrency manager server B, in an embodiment, the concurrency manager client B tracks semaphores associated with the multi-processor UE's resources while permitting a locked resource used by a lower-priority application to be unlocked in response to a higher-priority application's request for the locked resource. Alternatively, the concurrency manager client B does not need to track external semaphores and instead can implement a passive or implied resource availability status, whereby the concurrency manager client B simply monitors which resources are currently available and which resources are being used and are thereby unavailable. In either case, the concurrency manager client B is equipped to determine out which resources are available or unavailable and further to determine whether an application requesting access to an unavailable resource has sufficient privileges to preempt a current application's use of that resource.","While not shown in , it is possible that the multi-processor UE include one or more additional processors associated one or more additional processor systems. In this case, each of the additional processor systems can include a processor, memory, one or more applications as well as their own instance of the concurrency manager client B. Accordingly, the concurrency manager server B can potentially interact with multiple concurrency manager clients (e.g., B) across multiple processor systems.","As will be explained in more detail below, the concurrency manager server B monitors and determines priorities for one or more resources of the multi-processor UE, including but not limited to a display output device (e.g., a screen of the multi-processor UE), an audio output device (e.g., speakers and\/or a microphone output of the multi-processor UE), a modem or antenna, a vibration output device, battery power, etc. The concurrency manager server B can collect information regarding the one or more monitored resources via communication with the first and\/or second OS's B and B, from the client-executable applications _ . . . N_ directly or from the client-executable applications _ . . . M_ of the second processor system A via the concurrency manager client B. For example, the concurrency manager client B can send notifications regarding actual or desired resource-access of applications _ . . . M_ to the concurrency manager server B. The concurrency manager server B can use its monitored resource-access information to determine recommended priorities by which the applications _ . . . N_ and _ . . . M_ should access the associated resource. The concurrency manager server B may maintain a master list of each of applications _ . . . N_ as well as _ . . . M_, as well as their associated priorities. By notifying one or more concurrency manager clients (e.g., B) of the determined priorities, the applications _ . . . N_ and _ . . . M_ (via the concurrent manager server application B and the concurrency manager client application B, respectively) can determine whether to attempt access of the resource instead of simply acquiring the resource indiscriminately. Example implementations of application priority determination and notification are described below with respect to .",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 5A","FIG. 5A"],"b":["410","1","1","1","2","500"]},"In , the concurrency manager server B determines, for at least one resource, initial priority levels for one or more of applications _ . . . N_ of the first processor system A and applications _ . . . M_ of the second processor system A, A. For example, in A, the concurrency manager server B can load default priority levels for applications with respect to the at least one resource. For example, if the at least one resource corresponds to access to an audio output device, application _ corresponds to an MP3-player application and application _ corresponds to a VoIP application, then the initial priority level for the VoIP application may be higher than the initial priority level for the MP3-player application. One embodiment of the priority determination of A is described in more detail below with respect to .","While not shown in , the applications whose priorities are determined in A may correspond to applications that have registered with the concurrency manager server B (e.g., directly or via the concurrency manager clients) as being associated with the at least one resource. In the case of the audio output device, it will be appreciated that applications that are unrelated to audio playback need not register with the concurrency manager server B (at least, not for the resource of the audio output device).","For convenience of explanation, in , assume that applications _ and _ are registered with the concurrency manager server B for the at least one resource. Thus, in A, the concurrency manager server B determines the relative priorities of applications _ and _ for the at least one resource. After the initial priority determination of A, the concurrency manager server B sends a notification to concurrency manager client B (and any other concurrency manager clients) of the relative priorities and optionally an indication that the resource is available, A.","At some later point in time, assume that application _ determines to access the at least one resource, A. For example, if application _ corresponds to an MP3-player application, a user of the multi-processor UE may have requested to play a particular MP3 in A and informs the concurrency manager server B of the at least one resource to be used. Next, the concurrency manager server B evaluates the priority levels, A, associated with the at least one resource as indicated in A to determine whether any application of equal or higher priority than application _ is already accessing the at least one resource. In this case, it is assumed that the at least one resource is not being accessed at this point, such that concurrency manager server B determines that it is permissible to access the at least one resource in A.","The concurrency manager server B notifies application _ in A that it has priority to access the resource. It will be appreciated that the concurrency manager server B can also notify the concurrency manager client B at this time of the resource request\/grant for application _. Accordingly, after receiving approval from concurrency manager server B, application _ begins to access the at least one resource in A. The concurrency manager server B updates its records to reflect that application _ is accessing the at least one resource, and then sends a notification to concurrency manager client B to inform concurrency manager client B that the at least one resource is being accessed by application _, in A.","At some later point in time, assume that application _ determines to access the at least one resource that is already being accessed by application _, A. For example, if application _ corresponds to a VoIP application, A can include a VoIP call announcement message arriving at the multi-processor UE. Next, concurrency manager client B evaluates whether application _ can access the at least one resource by evaluating the priority levels of applications in association with the at least one resource, A. For example, in A, concurrency manager client B can determine whether any applications with a priority greater than or equal to the priority of application _ are currently accessing the at least one resource, and if not, concurrency manager client B determines the resource can be accessed. In the embodiment of , it is assumed that application _ has a higher priority than application _, such that concurrency manager client B determines that it is permissible for application _ to access the at least one resource in A. Accordingly, concurrency manager client B sends a notification to the concurrency manager server B to report the resource request, A. As illustrated, in A both application _ and concurrency manager server B are notified of the results of the evaluation (A) that indicates application _ has priority for the at least one resource. However, it will be appreciated that in alternative embodiments, the notification could go to the concurrency manager server B first for confirmation and notifying conflicted application _ that it needs to release the at least one resource. The concurrency manager server B can then notify the conflicting device and confirm availability back to the concurrency manager client B, which then can notify application _ of the availability of the resource (see, e.g., ). However, as illustrated the notification A can be sent concurrently to the concurrency manager server B and application _, which will be described in the following.","After the notification A, application _ can access the at least one resource in A, and sends a notification to the concurrency manager client B to report the resource access, A. Concurrently, notification A is received at the concurrency manager server B, which in turn sends a notification A to application _ to release the at least one resource. Optionally, concurrency manager server B can perform a separate evaluation to confirm the decision in A, prior to sending the notification A. Upon receipt of A, application _ stops accessing the at least one resource in A. In this scenario, there is no need to send a notification back to the concurrency manager client B, as the decision to grant the at least one resource to the higher priority application was already made and conveyed in A and A. In the alternative scenario described above, where the notification was delayed to application _, after the release in A, the concurrency manager server B could send the notification to confirm availability back to the concurrency manager client B and also notify any additional clients. Regardless of the optional notification paths, the concurrency manager server B can updates its records to reflect that application _ is accessing the at least one resource and distribute that information to any remaining clients.","At some later point in time, assume that application _ stops accessing the at least one resource, A. For example, if application _ corresponds to a VoIP application, A may correspond to termination of the VoIP communication session or call. Application _ sends a notification to the concurrency manager server B to report the cessation of application _'s resource access, A. The concurrency manager server B updates its records to reflect that application _ is no longer accessing the at least one resource and updates any concurrency manager clients. If there are still applications that are requesting access to the at least one resource released, the priority of the one or more applications can be evaluated. For example, if application _ is still awaiting access to the at least one resource, an evaluation of the priority level, A, of that application can be performed. After the evaluation, notification, A, can be sent to application _ to inform application _ that the at least one resource is now available. As will be appreciated, the concurrency manager server B sends the notification of A to application _ so that application _ can (in its discretion) start a new access or resume its previous access of the at least one resource, A.","For example, if the at least one resource corresponds to an audio output device and application _ corresponds to an MP3-player application, A can include resuming audio playback of a song that was \u2018paused\u2019 when the MP3-player application stopped its access to the audio output device in A. Application _ sends a notification to the concurrency manager server B to report the resumption of application _'s resource access, A, and the concurrency manager server B updates its records to reflect that application _ is accessing the at least one resource, and then sends a notification to concurrency manager client B and any other clients that the at least one resource is being accessed by application _, in A.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 5B","FIG. 5A","FIG. 5B"],"b":["1","1","1","2"]},"Referring to , a low-priority MP3 application executing on an application processor system begins to play an MP3 music file (e.g., similar to A of ). In an example, the application processor system corresponds to the first processor system A and the MP3 application corresponds to application _. During MP3 playback, a PTT client on a modem processor system receives an indication of an incoming PTT call (e.g., similar to A of ). In an example, the modem processor system corresponds to the second processor system A and the PTT client corresponding to application _. After being notified of the PTT client's request for the audio resource, the concurrency manager server application on the application processor system pauses the MP3 player. Later, when the concurrency manager server application is subsequently notified that the PTT call is over, the concurrency manager server application notifies the MP3 application that MP3 playback can resume.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 5C","FIG. 5A","FIG. 5C"]},"Referring to , a low-priority PTT client executing on the modem processor system begins to play audio media in associated with a PTT call (e.g., similar to A of , except the modem processor system executes the concurrency manager client application instead of the concurrency manager server application). In an example, the modem processor system corresponds to the second processor system A and the PTT client corresponds to application _. During the PTT call, a circuit switched (CS) voice call application on the application processor system receives an indication of an incoming CS call. In an example, the application processor system corresponds to the first processor system A and the CS voice call application corresponds to application _. After being notified of the PTT client's request for the audio resource, the concurrency manager client application on the modem processor system de-activates the PTT client, and the CS call begins. After the CS call, the PTT client is notified of the availability of the audio resource. , described below in more detail, is similar to  in the sense that a low-priority application's access to a resource is subsequently taken away and transferred to a higher-priority application.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 5D","FIG. 5D","FIG. 5D"]},"Referring to , a high-priority circuit switched (CS) voice call application executing on the application processor system receives an incoming voice call notification, acquires the audio resource and then begins the voice call (e.g., similar to A of , except the CS voice call application is a high-priority application). During the CS call, a PTT client on the modem processor system receives an indication of an incoming PTT call. After being notified of the PTT client's request for the audio resource, the concurrency manager client application on the modem processor system rejects the PTT client's audio resource request because the CS voice call application has a higher priority and is already using the audio resource. The PTT client is notified of the audio resource (or vocoder) availability after the CS voice call terminates and the audio resource is again available for acquisition. , described below in more detail, are similar to  in the sense that a high-priority application's access to a resource is used to block a subsequent request to access the resource from a lower-priority application.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 6","FIG. 6","FIG. 5A","FIG. 6"],"b":["1","2","1","1","400","450"]},"Referring to , similar to A of , the concurrency manager server B determines, for at least one resource, initial priority levels for one or more of applications _ . . . N_ of the first processor system A and applications _ . . . M_ of the second processor system A, . After the initial priority determination of , the concurrency manager server B sends a notification to concurrency manager client B (and any other concurrency manager clients) of the relative priorities and optionally an indication that the resource is available,  (similar to A of ).","At some later point in time, assume that application _ determines to access the at least one resource, . In this case, it is assumed that the at least one resource is not being accessed at this point, such that concurrency manager client B determines that it is permissible for application _ to access the at least one resource in . The concurrency manager client B notifies application _ that the at least one resource is available, , and application _ begins to access the at least one resource, . The concurrency manager client B also notifies the concurrency manager server B that the at least one resource is being accessed by application _, .","At some later point in time while the at least one resource is still being accessed by application _, assume that application _ (with a higher priority than application _) determines to access the at least one resource, . The concurrency manager server B evaluates the priority level of application _ and determines application _ to have a higher priority than application _, . The concurrency manager server B notifies the concurrency manager client B that application _ is requesting access to the resource and to cease application _'s access to the at least one resource, . The concurrency manager client B receives the notification and instructs application _ to stop accessing the at least one resource, . Application _ releases the at least one resource, , and the concurrency manager client B notifies the concurrency manager server B that the at least one resource is now available, . The concurrency manager server B notifies application _ that the at least one resource is now available, , and application _ begins to access the at least one resource, .","Referring to , at some later point in time, application _ stops accessing the at least one resource, , and the concurrency manager server B notifies the concurrency manager client B that the at least one resource is again available, . Because the at least one resource is determined to be available and is not being accessed by another application at , the concurrency manager client B notifies application _ that the at least one resource is again available for access, . The application _ thereby resumes access to the at least one resource, , and the concurrency manager client B notifies the concurrency manager server B that the at least one access is again being accessed by application _.",{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 7","b":["1","1","1","2"]},"Referring to , similar to A of , the concurrency manager server B determines, for at least one resource, initial priority levels for one or more of applications _ . . . N_ of the first processor system A and applications _ . . . M_ of the second processor system A, . After the initial priority determination of , the concurrency manager server B sends a notification to concurrency manager client B (and any other concurrency manager clients) of the relative priorities and optionally an indication that the resource is available,  (similar to A of ).","At some later point in time, assume that application _ determines to access the at least one resource, . In this case, it is assumed that the at least one resource is not being accessed at this point, such that concurrency manager server  determines that it is permissible for application _ to access the at least one resource in . The concurrency manager server B notifies application _ that the at least one resource is available, , and application _ begins to access the at least one resource, . The concurrency manager server B also notifies the concurrency manager client B that the at least one resource is being accessed by application _, .","At some later point in time while the at least one resource is still being accessed by application _, assume that application _ (with a lower priority than application _) determines to access the at least one resource, . The concurrency manager client B evaluates the priority level of application _ and determines application _ to have a lower priority than application _, . Based on the determination from , the concurrency manager client B blocks application _ from accessing the at least one resource, .","Referring to , at some later point in time after the resource request rejection at  and , application _ stops accessing the at least one resource, . The concurrency manager server B notifies the concurrency manager client B that the at least one access is now available, . Because the at least one resource is determined to be available and is not being accessed by another application at , the concurrency manager client B notifies application _ that the at least one resource is again available for access, . The application _ thereby begins to access to the at least one resource, , and the concurrency manager client B notifies the concurrency manager server B that the at least one access is being accessed by application _.",{"@attributes":{"id":"p-0085","num":"0084"},"figref":["FIG. 8","FIG. 7","FIG. 8","FIG. 8","FIG. 7","FIG. 8","FIG. 7"],"b":["1","1","1","2","800","875","700","775"]},{"@attributes":{"id":"p-0086","num":"0085"},"figref":["FIG. 9","FIG. 9","FIG. 9","FIG. 5A","FIG. 8"],"b":["410","1","1","1","1","2","2","410","1","1","1","1","2","2","900","900","500"]},"The concurrency manager server B also one or more monitors system parameters, . For example, the system parameters monitored in  can include Time, Serving System, Battery Level(s), Bandwidth Usage, Application Registration or De-Registration, and\/or Application Notifications Regarding Desired Access to the At Least One Resource. For example, the monitoring of  can be based on polling messages sent to one or more of applications _ . . . N_ and\/or _ . . . M_, reports sent by one or more of applications _ . . . N_ and\/or  . . . M_ to the concurrency manager server B and\/or based on queries sent by the concurrency manager server B to the HLOS or first OS B.","In , the concurrency manager server B selectively updates the priority levels for one or more of applications _ . . . N_ and _ . . . N_ for the at least one resource based on the monitored system parameters. For example, with respect to the time parameter, the concurrency manager server B can re-calculate or adjust the priority levels for one or more of applications _ . . . N_ and\/or _ . . . M_ with respect to the at least one resource based on a current time. In another example, with respect to the serving system parameter, the concurrency manager server B can re-calculate or adjust the priority levels for one or more of applications _ . . . N_ and\/or _ . . . M_ with respect to the at least one resource based on whether a serving system has changed (e.g., such that priority levels are at least partially serving system-specific).","Referring to  of , in another example, with respect to the battery threshold parameter(s), the concurrency manager server B can re-calculate or adjust the priority levels for one or more of applications _ . . . N_ and\/or _ . . . M_ with respect to the at least one resource based on battery level(s) of battery A and\/or A. For example, if battery levels of battery A and\/or A are relatively low or below a threshold, battery intensive applications among applications _ . . . N_ and\/or _ . . . M_ can have their respective priorities lowered. Alternatively, in another example, if battery levels of battery A and\/or A rise back above the threshold (e.g., during charging), battery intensive applications among applications _ . . . N_ and\/or _ . . . M_ can have their respective higher priorities restored.","Referring to  of , in another example, with respect to the registration parameter, the concurrency manager server B can re-calculate or adjust the priority levels for one or more of applications _ . . . N_ and\/or _ . . . M_ with respect to the at least one resource when a new application registers with the concurrency manager server B for the at least one resource, or alternatively when a previously registered application de-registers from the at least one resource with the concurrency manager server B.","After the priority levels are updated in  of , the concurrency manager server B selectively notifies one or more of the concurrency manager clients (e.g., B) of the updated priority levels, in . Accordingly, the priority levels that are distributed in each of  need not be static, and instead can change in a time-based or event-based manner as described above.","While the embodiments described above with respect to  focus upon how to manage contention for resources between applications on the same or different processing systems of a multi-processor mobile communications device,  are directed to procedures that are implemented on behavior of applications that have some or all of their resources rejected.","Accordingly,  is directed to a process of rejecting an application's access to a first set of resources while also notifying the application of an availability of a second set of resources in accordance with an embodiment of the invention. In an example, the second set of resources in  can be sufficient for the application to achieve, in an alternative manner (e.g., a reduced or non-preferred manner), a goal (or function) that prompted the application to request the first set of resources.","Referring to , in an example, the process of  can be executed by the concurrency manager server B on the first processor system A or the concurrency manager client B on the second processor system A. Accordingly, the process of  is described as executed by a \u201cresource manager\u201d, which can read on the concurrency manager server B on the first processor system A or the concurrency manager client B on the second processor system A.","Referring to , the resource manager receives a request from an application for access to at least a first set of resources for implementation of a given function, . In an example whereby the resource manager corresponds to the concurrency manager server B on the first processor system A, the request of  may correspond to A of , and so on. In an example whereby the resource manager corresponds to the concurrency manager client B on the first processor system A, the request of  may correspond to A of , and so on. The first set of resources can correspond to any combination of resources requested by the application to implement the given function, such as audio only, video only, audio and video, audio and modem, video and touchscreen display, and so on. In , the given function relates to a resource-independent or high-level objective associated with the application's request for access to the first set of resources. For example, if the application is a Voice over Internet Protocol (VoIP) application requesting audio and modem resources for making a VoIP call, the given function is a communication function for contacting a call target.","Referring to , the resource manager determines to reject the application's access to the first set of resources, , and the first set of resources is then rejected (block or released from) the application, . The rejection of  and  can correspond to a rejection of the request from , in an example, similar to  and  of  of . Alternatively, the rejection of  and  can occur after an earlier grant of the request from , similar to A and A of  of .","Referring to , the resource manager determines a second set of resources that is available for access by the application and is configured to permit the application to achieve an alternative implementation of the given function, . The resource manager may then notify the application that access to the second set of resources is available for an alternative implementation of the given function, .","For example, the request of  may request a first set of resources (e.g., audio resources) and also a second set of resources (e.g., video and modem resources) for a communication function of a videoconference call. In this case, the resource manager may block or reject the application from accessing the audio resource but may permit the application to access the video and modem resources in  and . Thus, the application can choose whether to participate in the videoconference without audio in this scenario based on the notification from . Alternatively, the request of  may request a first set of resources (e.g., audio resources) to initiate a communication function of contacting a call target via a voice call. If the audio resource is not available, the resource manager may detect that the communication function of contacting the call target can alternatively be achieved via SMS\/text resources (e.g., modem resources) at , and then recommend the SMS\/text communication in lieu of the voice call. These examples will be described in more detail below with respect to .",{"@attributes":{"id":"p-0099","num":"0098"},"figref":["FIGS. 11 and 12","FIG. 10","FIGS. 11 and 12"],"b":["410","400","420","450"]},"Referring to , a low-priority multimedia communication application determines to access an audio resource for initiating a voice call with a call target, and the multimedia communication application informs its concurrency manager (client or server) of its request to access the audio resource,  (e.g., as in  of ). In , assume that the concurrency manager determines to reject the multimedia communication application's request to access the audio resource,  (e.g., similar  of ), and the concurrency manager notifies the multimedia communication application of the audio resource access rejection,  (e.g., similar to  of ).","At , the concurrency manager determines that resources associated with simple message service (SMS) or texting are available for facilitating the communication function of contacting the call target (albeit, not with a voice call) (e.g., similar to  of ). For example, the concurrency manager may be configured with decision logic that includes a list of acceptable alternatives to certain resources when requested by certain applications, such as SMS\/text being a non-preferred but acceptable alternative to a voice call. The concurrency manager then notifies the application of the SMS\/text resource availability in order to recommend that the multimedia communication application attempt to contact the call target via an alternative mechanism to the desired voice call,  (e.g., similar to  of ). The multimedia communication application receives the notification from  and then attempts to access the SMS\/text resource to facilitate text communication instead of a voice call, . Accordingly,  shows that resource rejection (e.g., request denial or transfer) need not result in termination of a higher-level function associated with the rejected resource so long as other resources are accessible and can be used as an alternative to the rejected resource.","Referring to , a low-priority video game application determines to access both audio and video resources for initiating a voice call with a call target, and the video game application informs its concurrency manager (client or server) of its request to access the audio and video resources,  (e.g., as in  of , where the audio resource corresponds to the first set of resources). In , assume that the concurrency manager determines to grant the video game application's request to access both the audio and video resources, , and the video game application begins to access the audio and video resources while playing a video game, . At some later point in time, the concurrency manager determines that a higher priority application is requested access to the audio resource, . For example, the notification received at  may correspond to A of  of . As an example, an incoming call may be received with a higher priority than the audio played for the video game. Also, in , the notification received at  results in the determination at  of , whereby the concurrency manager determines to revoke the video game application's access privileges to the audio resource. In , the concurrency manager separately determines that the video resource is still accessible to the video game application, and that the video game application can continue to implement the game function in video-only mode (no audio) (e.g., similar to  of , with the video resource now corresponding to the second set of resources).","Accordingly, the concurrency manager notifies the video game application of the rejection of its prior privilege to access the audio resource (e.g., similar to  of ) and also of its maintained privilege to access toe video resource (e.g., similar to  of ). The video game application receives the notification from  and stops accessing the audio resource, . Further, based on the notification that the video resource remains available, instead of terminating the video game altogether in response the video game application's loss of the audio resource. Also, while not shown explicitly in , the video game can continue in video-only mode (no audio) even while the audio resource is used in conjunction with another application on the mobile device. For example, the audio resource can be used in conjunction with a modem resource to engage in a voice call which can occur in conjunction with the effectively \u201cmuted\u201d video game without audio.",{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 13","b":["1300","1300","102","108","110","112","200","124","122","160","165","170","186","1300"]},"Referring to , the communication device  includes logic configured to receive and\/or transmit information . In an example, if the communication device  corresponds to a wireless communications device (e.g., UE , Node B , etc.), the logic configured to receive and\/or transmit information  can include a wireless communications interface (e.g., Bluetooth, WiFi, 2G, 3G, etc.) such as a wireless transceiver and associated hardware (e.g., an RF antenna, a MODEM, a modulator and\/or demodulator, etc.). In another example, the logic configured to receive and\/or transmit information  can correspond to a wired communications interface (e.g., a serial connection, a USB or Firewire connection, an Ethernet connection through which the Internet  can be accessed, etc.). Thus, if the communication device  corresponds to some type of network-based server (e.g., SGSN , GGSN , application server , etc.), the logic configured to receive and\/or transmit information  can correspond to an Ethernet card, in an example, that connects the network-based server to other communication entities via an Ethernet protocol. In a further example, the logic configured to receive and\/or transmit information  can include sensory or measurement hardware by which the communication device  can monitor its local environment (e.g., an accelerometer, a temperature sensor, a light sensor, an antenna for monitoring local RF signals, etc.). The logic configured to receive and\/or transmit information  can also include software that, when executed, permits the associated hardware of the logic configured to receive and\/or transmit information  to perform its reception and\/or transmission function(s). However, the logic configured to receive and\/or transmit information  does not correspond to software alone, and the logic configured to receive and\/or transmit information  relies at least in part upon hardware to achieve its functionality.","Referring to , the communication device  further includes logic configured to process information . In an example, the logic configured to process information  can include at least a processor. Example implementations of the type of processing that can be performed by the logic configured to process information  includes but is not limited to performing determinations, establishing connections, making selections between different information options, performing evaluations related to data, interacting with sensors coupled to the communication device  to perform measurement operations, converting information from one format to another (e.g., between different protocols such as .wmv to .avi, etc.), and so on. For example, the processor included in the logic configured to process information  can correspond to a general purpose processor, a digital signal processor (DSP), an application specific integrated circuit (ASIC), a field programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor, but in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine. A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration. The logic configured to process information  can also include software that, when executed, permits the associated hardware of the logic configured to process information  to perform its processing function(s). However, the logic configured to process information  does not correspond to software alone, and the logic configured to process information  relies at least in part upon hardware to achieve its functionality.","Referring to , the communication device  further includes logic configured to store information . In an example, the logic configured to store information  can include at least a non-transitory memory and associated hardware (e.g., a memory controller, etc.). For example, the non-transitory memory included in the logic configured to store information  can correspond to RAM memory, flash memory, ROM memory, EPROM memory, EEPROM memory, registers, hard disk, a removable disk, a CD-ROM, or any other form of storage medium known in the art. The logic configured to store information  can also include software that, when executed, permits the associated hardware of the logic configured to store information  to perform its storage function(s). However, the logic configured to store information  does not correspond to software alone, and the logic configured to store information  relies at least in part upon hardware to achieve its functionality.","Referring to , the communication device  further optionally includes logic configured to present information . In an example, the logic configured to present information  can include at least an output device and associated hardware. For example, the output device can include a video output device (e.g., a display screen, a port that can carry video information such as USB, HDMI, etc.), an audio output device (e.g., speakers, a port that can carry audio information such as a microphone jack, USB, HDMI, etc.), a vibration device and\/or any other device by which information can be formatted for output or actually outputted by a user or operator of the communication device . For example, if the communication device  corresponds to UE  as shown in , the logic configured to present information  can include the display . In a further example, the logic configured to present information  can be omitted for certain communication devices, such as network communication devices that do not have a local user (e.g., network switches or routers, remote servers, etc.). The logic configured to present information  can also include software that, when executed, permits the associated hardware of the logic configured to present information  to perform its presentation function(s). However, the logic configured to present information  does not correspond to software alone, and the logic configured to present information  relies at least in part upon hardware to achieve its functionality.","Referring to , the communication device  further optionally includes logic configured to receive local user input . In an example, the logic configured to receive local user input  can include at least a user input device and associated hardware. For example, the user input device can include buttons, a touch-screen display, a keyboard, a camera, an audio input device (e.g., a microphone or a port that can carry audio information such as a microphone jack, etc.), and\/or any other device by which information can be received from a user or operator of the communication device . For example, if the communication device  corresponds to UE  as shown in , the logic configured to receive local user input  can include the display  (if implemented a touch-screen), keypad , etc. In a further example, the logic configured to receive local user input  can be omitted for certain communication devices, such as network communication devices that do not have a local user (e.g., network switches or routers, remote servers, etc.). The logic configured to receive local user input  can also include software that, when executed, permits the associated hardware of the logic configured to receive local user input  to perform its input reception function(s). However, the logic configured to receive local user input  does not correspond to software alone, and the logic configured to receive local user input  relies at least in part upon hardware to achieve its functionality.","Referring to , while the configured logics of  through  are shown as separate or distinct blocks in , it will be appreciated that the hardware and\/or software by which the respective configured logic performs its functionality can overlap in part. For example, any software used to facilitate the functionality of the configured logics of  through  can be stored in the non-transitory memory associated with the logic configured to store information , such that the configured logics of  through  each performs their functionality (i.e., in this case, software execution) based in part upon the operation of software stored by the logic configured to store information . Likewise, hardware that is directly associated with one of the configured logics can be borrowed or used by other configured logics from time to time. For example, the processor of the logic configured to process information  can format data into an appropriate format before being transmitted by the logic configured to receive and\/or transmit information , such that the logic configured to receive and\/or transmit information  performs its functionality (i.e., in this case, transmission of data) based in part upon the operation of hardware (i.e., the processor) associated with the logic configured to process information . Further, the configured logics or \u201clogic configured to\u201d of  through  are not limited to specific logic gates or elements, but generally refer to the ability to perform the functionality described herein (either via hardware or a combination of hardware and software). Thus, the configured logics or \u201clogic configured to\u201d of  through  are not necessarily implemented as logic gates or logic elements despite sharing the word \u201clogic\u201d. Other interactions or cooperation between the configured logics  through  will become clear to one of ordinary skill in the art from a review of the embodiments described above.","While references in the above-described embodiments of the invention have generally used the terms \u2018call\u2019 and \u2018session\u2019 interchangeably, it will be appreciated that any call and\/or session is intended to be interpreted as inclusive of actual calls between different parties, or alternatively to data transport sessions that technically may not be considered as \u2018calls\u2019. Also, while above-embodiments have generally described with respect to PTT sessions, other embodiments can be directed to any type of communication session, such as a push-to-transfer (PTX) session, an emergency VoIP call, etc.","Those of skill in the art will appreciate that information and signals may be represented using any of a variety of different technologies and techniques. For example, data, instructions, commands, information, signals, bits, symbols, and chips that may be referenced throughout the above description may be represented by voltages, currents, electromagnetic waves, magnetic fields or particles, optical fields or particles, or any combination thereof.","Further, those of skill in the art will appreciate that the various illustrative logical blocks, modules, circuits, and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware, computer software, or combinations of both. To clearly illustrate this interchangeability of hardware and software, various illustrative components, blocks, modules, circuits, and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application, but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.","The various illustrative logical blocks, modules, and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor, a digital signal processor (DSP), an application specific integrated circuit (ASIC), a field programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor, but in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine. A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration.","The methods, sequences and\/or algorithms described in connection with the embodiments disclosed herein may be embodied directly in hardware, in a software module executed by a processor, or in a combination of the two. A software module may reside in RAM memory, flash memory, ROM memory, EPROM memory, EEPROM memory, registers, hard disk, a removable disk, a CD-ROM, or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from, and write information to, the storage medium. In the alternative, the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a user terminal (e.g., access terminal). In the alternative, the processor and the storage medium may reside as discrete components in a user terminal.","In one or more exemplary embodiments, the functions described may be implemented in hardware, software, firmware, or any combination thereof. If implemented in software, the functions may be stored on or transmitted over as one or more instructions or code on a computer-readable medium. Computer-readable media includes both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage media may be any available media that can be accessed by a computer. By way of example, and not limitation, such computer-readable media can comprise RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Also, any connection is properly termed a computer-readable medium. For example, if the software is transmitted from a website, server, or other remote source using a coaxial cable, fiber optic cable, twisted pair, digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave, then the coaxial cable, fiber optic cable, twisted pair, DSL, or wireless technologies such as infrared, radio, and microwave are included in the definition of medium. Disk and disc, as used herein, includes compact disc (CD), laser disc, optical disc, digital versatile disc (DVD), floppy disk and blu-ray disc where disks usually reproduce data magnetically, while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer-readable media.","While the foregoing disclosure shows illustrative embodiments of the invention, it should be noted that various changes and modifications could be made herein without departing from the scope of the invention as defined by the appended claims. The functions, steps and\/or actions of the method claims in accordance with the embodiments of the invention described herein need not be performed in any particular order. Furthermore, although elements of the invention may be described or claimed in the singular, the plural is contemplated unless limitation to the singular is explicitly stated."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A more complete appreciation of embodiments of the invention and many of the attendant advantages thereof will be readily obtained as the same becomes better understood by reference to the following detailed description when considered in connection with the accompanying drawings which are presented solely for illustration and not limitation of the invention, and in which:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 2A","FIG. 1"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 2B","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 4A and 4B"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIGS. 5A-5D"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 11","FIG. 10"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 12","FIG. 10"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
