---
title: Aligning content items to identify differences
abstract: Techniques for aligning content items with one another are described herein. These techniques may align different versions of a same content item for the purpose of identifying differences between the versions, identifying commonalities between the versions, mapping annotations made in one version to the other version, aggregating annotations across the different versions, or for any other reason. The content items may include electronic books, songs, videos, documents, or the like.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09069767&OS=09069767&RS=09069767
owner: Amazon Technologies, Inc.
number: 09069767
owner_city: Reno
owner_country: US
publication_date: 20110317
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["PRIORITY","BACKGROUND","DETAILED DESCRIPTION"],"p":["This application is a continuation of and claims priority to pending U.S. Provisional Patent Application 61\/427,682 filed Dec. 28, 2010 and titled \u201cAligning Content Items to Identify Differences\u201d, which is herein incorporated by reference in its entirety.","Locations within books have traditionally been indicated by page and line numbers. However, the concept of a \u201cpage\u201d is not as meaningful in the context of electronic books, in which page divisions may be calculated dynamically, as a function of page and font size. Different book reader devices have different display sizes, and even within a particular device, a user may change viewing options to result in different effective page sizes.","Because of this, locations within electronic books are often specified in terms of an index that relates to a smaller unit of measure, such as by a byte\/character index or a word index. For example, a particular word might be specified in terms of its starting and ending character indexes, relative to the beginning of the electronic book.","A further complication arises when dealing with multiple versions of an electronic book. When publishing electronically, revisions are very easy to implement, and publishers often submit new versions to correct relatively minor things such as typographical errors, as well as to make more significant revisions. Even small changes between versions can disrupt a position indexing scheme, making it difficult to correlate locations within versions. However, identifying even these small changes between different versions of an electronic book can be difficult.","This disclosure describes systems, devices, and processes (collectively \u201ctechniques\u201d) for aligning content items with one another. For instance, the techniques may align different versions of a same content item for the purpose of identifying differences between the versions, identifying commonalities between the versions, mapping annotations made in one version to the other version, aggregating annotations across the different versions, or for any other reason. The content items may include electronic books, songs, videos, documents, or the like.","In one example, the techniques may first determine an overall similarity between two (or more) differing content items to determine whether the content items are sufficiently similar to make an attempt to align the content items worthwhile. For instance, the techniques may compare a determined overall similarity between two content items to a predefined threshold. If the overall similarity is less than the threshold, then the content items may be deemed dissimilar to one another and no attempt may be made to align the items. If, however, the similarity is greater than the threshold, then the techniques may attempt to align the content items.","In some instances, meanwhile, the techniques may identify sections of two differing content items that are generally similar and, in response, may attempt to align these sections while refraining from attempting to align the remainder of the items. For instance, two different versions of a particular electronic book may have entirely different forewords before proceeding onto the actual content of the story. As such, the techniques may attempt to align the actual content of the story (e.g., the chapters of the book) while refraining from attempting to align the forewords, given that they are entirely different from one another.","The techniques may identify the substantive content of the electronic book (e.g., the content after the foreword and\/or other \u201cfront\u201d or \u201cback\u201d matter) in any number of ways. For instance, the electronic book may mark where the first chapter of the story begins. Conversely, the techniques may identify a corresponding statistically improbable phrase (SIP) in each version of the electronic book and then may attempt to align these versions forwards and\/or backwards from the common SIP. Of course, while a few examples have been listed, the techniques may work off of a common location between the two electronic books or other content items in any other number of ways.","To align the items in any of the manners described above, the techniques may first select portions from each of the content items to compare with one another. These portions may be of equal size, such as the same number of words in an electronic book, a same amount of time in a song, or the like. Further, these portions may correspond to one another in location. For instance, the first one hundred words of a first electronic book may be selected for comparison to the first one hundred words of the second electronic book. In addition, the size of the portions (e.g., 100 words) may be based at least partly on the overall similarity between the items, with size being inversely proportional to the similarities in some examples.","After selecting the portions for comparisons, any number of algorithms may be utilized in an attempt to align the portions with one another. For instance, the techniques may utilize the Needleman-Wunsch algorithm (an example of a global alignment algorithm), the Smith-Waterman algorithm (an example of a local alignment algorithm), or the like, some or all of which may utilize edit distances (e.g., a Levenshtein distance).","After determining the alignment, the techniques may compare this alignment to an alignment threshold. If the alignment is less than the threshold, then new portions may be selected. In some instances, these new portions may include the previously-selected portions in addition to new content. For instance, in the example of comparing the first 100 words from two different versions of an electronic book, the techniques may proceed to select and attempt to align the first 200 words of the different versions of the book. The techniques may continue to select new portions (e.g., by expanding the portions) until an alignment there between is greater than the alignment threshold or until a predetermined number of iterations have been exhausted and the content items are deemed dissimilar from one another.","When the alignment similarity is greater than the alignment threshold, meanwhile, the techniques may proceed to identify differences and\/or commonalities within the portions of the content items. For instance, in the example of comparing text (e.g., from two different versions of an electronic book, a song, a video, or the like) the techniques may attempt to match each word within the two portions. That is, in the electronic book example, the first word of the portion of the first version may be matched to the first word of the portion from the second version, and so on. The techniques may log any instances where a word in one version does not find a corresponding match in the other version. In some instances, the techniques may disregard certain types of words or symbols when identifying differences between versions. For instance, the techniques may identify prices of items or ratings of items between different versions, since these pricings or ratings may change between versions even though the general content may stay the same. Furthermore, the techniques may disregard any other type of predefined content that changes between versions in some instances.","Further, after the selected alignment between the portions is determined to be greater than the alignment threshold, the techniques may proceed to match discrete pieces of the content items that are subsequent to the aligned portions. For instance, after aligning the first 100 words of the first version of the electronic book with the first 100 words of the second version, the techniques may begin performing word-to-word matching of the 101words of the books, the 102words, and so on. When a mismatch is found (or when a threshold number of mismatches is found), then the techniques may identify the difference(s) and may again select and attempt to align a portion of the content items (e.g., 100 words) as described above.","Upon completion of the alignment of the content items, the techniques may have successfully identified differences between the items. As described above, this may aid in mapping annotations between the items, identifying updates made in a subsequent version of a content item, aggregating annotations over multiple versions of a content item, and so on.","The claimed techniques are described below with reference to an example architecture. However, it is to be appreciated that a number of other architectures may also employ these techniques.","Example Architecture",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1","b":["100","102","102","102","104"]},"As illustrated, the environment  includes the plurality of users , each of which has or is associated with an electronic book reader  (also referred to herein as an electronic reader). Although  illustrates three electronic readers , the described techniques can be used with any number of users and electronic book readers. In addition, a single user  may use a plurality of electronic book readers .","In this example, each electronic reader  has a display upon which electronic content such as electronic books (eBooks) may be rendered. , for instance, illustrates one reader rendering a first version () of the electronic book \u201cPride and Prejudice,\u201d while a second reader renders a second version () of the same book. The terms content, content item, and \u201ceBook\u201d include essentially any form of electronic data that may be consumed on a device, including textual and verbal works comprising sequences of words such as digital books, audio books, electronic magazines, papers, journals, periodicals, documents, instructional materials, course content, music, movies, and so on. In other examples, the users may employ electronic devices that do not include a display, but rather include speakers or another output device for outputting audio or the like.","In addition, note that for purposes of explanation, the term \u201cversion\u201d will be used herein to indicate a specific revision and format of an electronic content item. Thus, two different \u201cversions\u201d of an electronic content item may vary from each other by content and\/or by format. As an example, two different versions of an eBook may be formatted using the same eBook format, but may have slightly different words or text. Alternatively, two different versions may have identical textual content, but may be formatted in two different eBook formats. For example, one version may be text-based, while another version may be audio-based. As another example, two different versions may comprise the same eBook in different languages. As yet another example, two versions of an eBook may have the same content, but because they are from different publishers, the words of the versions may align different to a byte index or other position index.","The electronic readers  of , meanwhile, may be handheld devices or other small, light-weight, portable devices upon which eBooks and other content can be rendered and conveniently viewed in a manner similar to viewing a paper book. Examples of handheld electronic readers include flat form-factor devices such as tablets, pads, smartphones, personal digital assistants (PDAs), etc.","In some embodiments, the electronic readers  may comprise dedicated-purpose eBook reader devices, having flat-panel displays and other characteristics that mimic the look, feel, and experience offered by paper-based books. For example, such eBook reader devices may have high-contrast flat-panel displays that appear similar to a printed page and that persist without frequent refreshing. Such displays may consume very negligible amounts of power, so that the eBook reader devices may be used for long periods without recharging or replacing batteries. In some instances, these readers may employ electrophoretic displays.","In the example of , the electronic readers  have networking capabilities. For example, the electronic readers  may have wireless communication interfaces that allow communication though a network . The wireless communications interfaces may utilize WiFi, cellular, or other wireless data and networking technologies. The network  may be any type of communication network, including a local-area network, a wide-area network, the Internet, a wireless network, a wide-area network (WWAN), a cable television network, a telephone network, a cellular communications network, combinations of the foregoing, etc.","In the described embodiment, the electronic readers  include non-volatile storage capabilities so that electronic content items can be downloaded and stored in their entirety on the electronic readers. In some instances, once an eBook has been stored by an electronic reader, it can be displayed and read at any time, whether or not the electronic reader is connected to a network. In other embodiments, meanwhile, the reader may stream or otherwise receive content items on-demand.","In the configuration illustrated by , the electronic readers  may obtain content items from the content item alignment service  and\/or from any other service. The service  and other services may be accessed using the networking capabilities of the electronic readers . The service  and the other services may be accessible through other means as well, such as by connection to intermediary devices like personal computers, different types of mobile devices, and so forth.","In , the content item alignment service  is illustrated as a network-based or cloud-based service, available over a public network such as the Internet. The electronic readers  may be configured to allow the users  to conveniently browse for content and content items from the service , and to purchase and download selected content items from the service .","Various applications and user interfaces may be used in conjunction with the electronic readers  to interact with the service , such as Internet browser programs that allow a user to interactively engage different online services. In addition, the service  may expose lower-level interfaces or APIs (application programming interfaces) through the network , through which devices and programs can access the underlying functionality of the service  without direct user interaction. For example a user may interactively purchase an eBook or other content item using a personal computer or some device other than the electronic reader device . The electronic reader  may periodically communicate with the service  to perform background synchronization or other housekeeping, and may automatically (without specific user intervention) download any content that has been purchased.","The service  might be implemented in some embodiments by an online merchant or vendor. Electronic books and other electronic content might be offered for sale by such an online merchant, or might be available to members or subscribers for some type of periodic or one-time fee. In some circumstances, eBooks or other content might be made available without charge. In either instance, the service  may include a client interface through which electronic readers  and other clients interact with the service . The client interface may include a virtual storefront or other type of online interface for interaction with consumers and\/or devices. The client interface may expose a graphical, web-based user interface that can be accessed by human users to browse and obtain (e.g., purchase, rent, lease, etc.) content items such as eBooks. The client interface may also expose programmatic interfaces or APIs that entities and devices can use to obtain digital content items and related services. As discussed above, in the illustrated example the two example users may have utilized the web-based user interface or the APIs to obtain the first and second versions () and () of \u201cPride and Prejudice.\u201d","When the content item alignment service  receives a new version of a content item, such as an electronic book, the service  may attempt to align this new version with one or more previous versions of the book. , for instance, illustrates that the content item alignment service  has attempted to align the first version () of \u201cPride and Prejudice\u201d with the second version (), as illustrated by alignment .","The alignment  illustrates that the first version () begins with the sentence \u201cIt is a truth universally acknowledged, that a single man in possession . . . \u201d, while the second version begins with the sentence \u201cIt is a truth that's universally acknowledged, that a single man in possession . . . \u201d In the illustration, the alignment  also includes arrows between the matching and corresponding words of the two versions of the eBook. In addition, the alignment  indicates that the word \u201cthat's\u201d found in the second version () does not have a corresponding match in the first version (). Manual inspection of the two sentences will confirm this absence.","By aligning the first version () of \u201cPride and Prejudice\u201d with the second version (), the content item alignment service  is able to identify the differences between these versions. The service  and\/or other entities may use this knowledge in a variety of ways. For instance, the service  may simply desire to document the updates that occur with different versions of a book. Additionally or alternatively, the service  may desire to understand the differences to allow objects (e.g., annotations, illustrations, etc.) that are associated with one version of the book to map appropriately to another version.","For instance, if a user consuming the second version () creates an annotation in association with the extraneous \u201cthat's\u201d, then the service  may understand that this annotation should map in between the words \u201ctruth\u201d and \u201cuniversally\u201d in the first version () of the book. In another example, if a publisher or other entity has associated an illustration with a particular set of words of the first version () of the book, then the alignment  may allow the service  to map this illustration over to the second version () in the appropriate location. Of course, while a few examples have been listed, it is to be appreciated that the alignment  between the first version () and the second version () may be helpful to the service , the users , and\/or other entities in many other ways.","Example Alignment",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 2","FIG. 1","FIG. 2"],"b":["112","202","108","1","204","108","2","202","108","1","206","204","108","1","208"]},"The locations or positions within a particular content item can be indicated in different ways, and different eBook formats often use different metrics to indicate position. In paper-based books, location is usually indicated by page number, and possibly by a line number relative to a page. In eBooks, however, page boundaries are generally undefined, and page divisions vary based on the rendering capabilities and\/or settings of the device upon which the eBooks are being rendered. Accordingly, some eBook formats may indicate position in terms of a character index, such as the number of characters from the beginning of the eBook, or in terms of a byte index, such as the number of bytes from the beginning of the eBook. Other eBook formats may indicate position in terms of a word index, such as the number of words from the beginning of the eBook. Other measurement quantities can also be used, such as a sentence index, a line index, or a paragraph index. In audio eBooks, location or position may be indicated by a time index\u2014the length of elapsed time from the beginning of an audio eBook. In some instances, these measurement quantities comprise invariant reference locators that do not changes with display conditions, as described in U.S. patent application Ser. No. 11\/693,677, filed on Mar. 29, 2007 and entitled \u201cInvariant Referencing in Digital Works,\u201d which is herein incorporated by reference in its entirety.","Different versions of a particular eBook can have discrepancies in location indexing, even within a single eBook format. In particular, the addition, deletion, or modification of words, characters, sentences, and paragraphs between versions of an eBook may result in the same word or passage having different position indexes within the respective versions. , for instance, illustrates that the word \u201cthat's\u201d appears in the second version () of the eBook, but not within the first version ().  thus illustrates that the position of the word \u201cthat's\u201d on the position line  includes an indication  that this word does not have a match in the other version () of the eBook. In addition to identifying this difference between the two version of the eBook, the alignment  shows that the word \u201cuniversally\u201d in the first version () has a position that is different from this word's position in the second version () due the extraneous use of \u201cthat's\u201d in the second version ().","By aligning the text  of the first version () with the text  of the second version () in this manner, the example alignment  allows for objects (e.g., annotations, illustrations, etc.) that are associated with particular words in the eBook to map correctly between the different versions of the eBook. Such annotations may include highlights, underlining, comments, ratings, tags, corrections, and other items of information relating to specific locations within the electronic content. The annotations can be stored locally on the electronic readers, or may be stored remotely.  illustrates that an annotation  is associated with the words \u201cin possession.\u201d Due to the aligning of these particular words between the different versions of the eBook, the position lines  and  include indications of this annotation  at different locations, each properly associated with the words \u201cin possession.\u201d","Example Alignment Processes",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 3","b":"300"},"At , the content item alignment service , a publisher, an eBook retailer or another entity associates respective words of a first version of an eBook with respective positions within the first version of the eBook. For instance, the service  may associate words of the eBook with a byte count, a character index, or any other position metric. Further, punctuation and white spaces may also be mapped to respective positions in some instances, while in other instances they may not. At , the service  or other entity may associate respective words of a second version of the same eBook with respective positions within the second version.","The second version may be an updated or modified version of an existing version of a content item. It may thus differ from one or more existing versions of the same content item in terms of content, storage format, or both. Content differences between two versions of the same work may range from very minor to relatively significant. For example, differences may consist of mere spelling corrections. More significant differences may involve significant editing or the addition\/deletion of entire phrases, sentences, paragraphs, chapters, introductory materials, afterwards, etc. Versions may also differ in format. For example, one version might be formatted as a PDF (portable document format) document, while another is formed as a MOBI (Mobipocket) file. Versions may also vary by language or media. Thus, one version might be in a different language than another version. As another example, one version might comprise a written or text-based eBook, while another version might comprise an audio performance of the same eBook.","At , the content alignment service  may then align, at least partly, the respective words of the first version of the electronic book with the respective words of the second version of the electronic book. While the alignment service  may align the versions in multiple different ways,  and a corresponding discussion depict one example alignment process. After aligning the different versions of the eBook, the service  may then map the respective positions within the first version of the eBook to the respective positions within the second version at .","After mapping positions within the first version to respective positions within the second version, objects (e.g., annotations, illustrations, etc.) may be mapped accurately between the versions. For instance, envision that a user that is reading the second version requests a particular set of annotations from a user who read and annotated the first version of the book. In response, the content alignment service  or another entity may identify one such annotation that has been associated with a particular position within the first version of the eBook at . The service  may then determine a position in the second version that corresponds to the particular position within the first version at . At , the service  may then associate the annotation with the position in the second version at least partly based on the determining. Further, the service  may provide this annotation to the electronic reader of the requesting user that is reading the second version of the book for rendering at the proper position within the second version.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 4","FIG. 3"],"b":["306","102","400"]},"At , the service  may first determine an overall similarity between two content items, such as the example two versions of the same eBook. The overall similarity may be determined in a number of ways, such as by comparing a total size of the content items, a number of words in the content items, a length of the content items, or in any other suitable manner. In one example, the service  determines the overall similarity with reference to a frequency of each word within each content item, as described below.","Using this technique, the service  may first count the number of times that each word within each content item is used, as well as differences in usage there between. For example, the service may tabulate the following:",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"First ","Second ","Difference"]},{"entry":[{},"Content Item","Content Item","(absolute)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Word= 10 uses","Word= 10 uses","0"]},{"entry":[{},"Word= 12 uses","Word= 11 uses","1"]},{"entry":[{},"Word= 7 uses","Word= 9 uses","2"]},{"entry":[{},"* * *","* * *","* * *"]},{"entry":[{},"Word= 9 uses","Word= 9 uses","0"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"After tabulating this count, the service  may then sum the raw difference between the two content items. In some instances, this difference may include summing the total difference from the right column above, along with the number of words (and uses thereof) in the first content item that do not appear in the second content item, and vice versa. In this example, assume that the only differences between the content items appear in Table 1 above. As such, the raw difference in this example is equal to 3.","The service  may then calculate the union of the common word count across the two different content items and the summed difference, as follows:\n\nUnion=common count+summed difference\u2003\u2003(1)\n","Here, the union is equal to 40 (10 common uses of word+11 common uses of word+7 common uses of word+9 common uses of word+the summed difference of 3). Next, the service may calculate the normalized symmetric distance as follows:\n\nSymmetric Distance=Raw Difference\/Union\u2003\u2003(2)\n","Here, the normalized symmetric distance is equal to 3\/40. Finally, the service may determine the overall similarity between the content items with reference to equation (3):\n\nSimilarity=(1\u2212Symmetric Distance)*100\u2003\u2003(3)\n","Here, the overall similarity is equal to (1\u22123\/40)*100, or 92.5%.","After calculating the overall similarity in this or in any other manner, the service  may determine whether this determined overall similarity is greater than a first threshold at . In some instances, this threshold is set as a relatively high threshold so as to identify different versions of a same content item that are nearly identical to one another.","If the determined overall similarity is indeed greater than the first threshold, then the service  may proceed straight to performing word-to-word matching at . That is, the service  may begin to attempt to match a first word of the first content item with a first word of the second content item, and so forth. Although not illustrated, the process  may identify any mismatching words and, upon identifying a mismatch, the process  may proceed to some or all of the techniques -.","If, however, the determined overall similarity is less than the first threshold, then the service  may determine whether the overall similarity is greater than a second threshold at . If so, the content item alignment service  may select a portion size of the first content item to compare to a corresponding portion of the second content item at . For instance, when comparing two different versions of an eBook, the service  may select a size of a string of words to compare. For example, the service  may choose to compare the first 100 words of the first version of the eBook with the first 100 words of the second version. In some instances, the size decreases inversely proportionally to the similarity. That is, the selected size may be small for content items that have a high degree of similarity, and vice versa.","If the determined overall similarity is less than the first and second thresholds, meanwhile, then at  the service  determines if the determined overall similarity is greater than a third threshold. If it is not, then the service  may indicate at  that the content items are dissimilar from one another and the process  may end.","If the determined overall similarity is greater than the third threshold, however, then the content service may partition the content items into discrete sections at  and may restart the process for these sections. For instance, envision that the content item alignment service  is attempting to align a microbiology textbook with a biology textbook that shares a chapter with the microbiology textbook. By partitioning the content items into chapters and running the chapters through the alignment process, the service  may identify the similar chapters and may attempt to align these similar chapters to identify differences there between. Conversely, the overall similarities between the remaining chapters will likely be so low so as to cause the service  to indicate that these chapters as dissimilar from one another.","Returning to the instances where the overall similarity is less than the first threshold but greater than the second threshold, the service  may initially select a string of words from the first content item and a string of words of the second content item to compare with one another at . After doing so, at , the service  may attempt to align these two strings of words. In some instances, the service  may attempt to align the strings using a global alignment algorithm (e.g. the Needleman-Wunsch algorithm) or a local alignment algorithm (e.g., the Smith-Waterman algorithm). After attempting to align these strings in one or more ways, the service  may determine an alignment similarity for each alignment at .","After determining the alignment similarities, the content item alignment service  may select an alignment for analysis. At , the service  may determine whether the alignment similarity for this alignment is greater than a predefined alignment threshold. If not, then the service  may increase the size of the string at  and may again attempt to align the strings. In some instances, the new strings include the original string as well as some number of additional words.","If, however, the alignment similarity is greater than the threshold, then service  may proceed to identify differences between the words within the strings at . For instance, the service  may perform word-to-word matching between the words within the strings and may identify and store these differences. In some embodiments, the service  may refrain from attempting to identify differences within the strings other than at the beginning or end of the strings. That is, the service  may only attempt to identify whether any differences exist at the beginning or the end of the strings and may refrain from making any such determinations within the body of the strings. In either instance, at , the service  may determine whether any of the identified differences between the strings are at the beginning and\/or the end of the strings. If so, then at  the service  may select new, expanded strings that include these differences and may attempt to align these new strings. If, however, no differences exist at the end of the strings, then the service  may attempt to match words that are subsequent to the strings at . For instance, after comparing 100 words of a first version of an eBook with 100 words of the second version, and after finding no differences between the first and the 100word of these strings, the service  may proceed to attempt to compare the 101word of the first version with the 101word of the second version. In some instances, meanwhile, the process may attempt to match words in this manner even if a difference exists at the end of the strings.","First, however, the service  determines, at , whether it has reached the end of one or both of the content items. If not (e.g., if there is a 101word in each version of the example eBook), then the service  determines whether the words match at . If the words match, then at  the service  proceeds to attempt to match a subsequent word\u2014such as the 102word of each of the versions of the eBook, and so forth. If, however, the words do not match, then the content item alignment service  identifies and logs this difference between the content items at  and the process  loops back to select a new string (including the identified difference) at . After selecting a new string of words in each of the content items, the service then compares the new strings at  as discussed above.","Returning to , when the service  reaches the end of one or both of the content items, the service  determines whether there is a mismatch at the end at . For instance, if one version of the example eBook includes a 101word but the second version does not, the service  would identify this mismatch and identify the difference between the versions at . The process then ends at . If, however, no mismatch is found at the end of the book, then process  simply ends at .","At the conclusion of the process , the content item alignment service  will likely have successfully aligned the different content items\u2014such as the different versions of \u201cPride and Prejudice.\u201d Furthermore, the service  will likely have identified the differences there between.","Example Server",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 5","FIG. 1"],"b":["102","102"]},"In a very basic configuration, an example server  may comprise a processing unit  composed of one or more processors, and memory . Depending on the configuration of the server , the memory  may be a type of computer storage media and may include volatile and nonvolatile memory. Thus, the memory  may include, but is not limited to, RAM, ROM, EEPROM, flash memory, or other memory technology.","The memory  may be used to store any number of functional components that are executable by the processing unit , as discussed below. In many embodiments, these functional components comprise instructions or programs that are executable by the processing unit , and that when executed implement operational logic for performing the actions attributed above to the content item alignment service . In addition, the memory  may store various types of data that are referenced by executable programs, including content items that are supplied to consuming devices such as the electronic readers .","Functional components stored in the memory  may include an operating system  and a web service component  that interacts with remote devices such as computers and media consumption devices. The memory  may also include database  to store content items , annotations , etc. In addition, the memory  may store an overall similarity module , which may function to determine an overall similarity between two or more content items, as discussed above.","The functional components may also include an alignment module  and an annotation mapping module . The alignment module  functions to create an alignment between two or more content items, such as the example alignment  between the two different versions of the eBook \u201cPride and Prejudice.\u201d The annotation mapping module , meanwhile, functions to accurately map annotations between different versions of a same content item after the alignment module  has aligned these versions. Finally, the server  may of course include many other logical, programmatic, and physical components, generally referenced by numeral , of which those described above are merely examples that are related to the discussion herein.","Returning the alignment module , this module may itself include a string selection module , a global alignment module , a local alignment module , an alignment selection module , a difference identification module , and a word-to-word matching module . The string selection module  functions to select a string of words from two or more different content items for comparison, possibly based at least in part upon the overall similarity of the content items as discussed above. The global and local alignment modules  and , meanwhile, function to attempt to align the selected string globally or locally, respectively, using any of the algorithms discussed above. After these modules create one or more potential alignments, the alignment selection module  may select an alignment. The difference identification module  then identifies any differences within the strings (as well as whether any differences exist at the beginning or the end). Finally, the word-to-word matching module  functions to attempt to match words subsequent to the strings after the strings have been successfully aligned.","Example Electronic Reader",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 6","b":["106","106"]},"In a very basic configuration, the electronic reader  includes a processing unit  composed of one or more processors, and memory . Depending on the configuration of the eBook reader , the memory  may be a type of computer storage media and may include volatile and nonvolatile memory. Thus, the memory  may include, but is not limited to, RAM, ROM, EEPROM, flash memory, or other memory technology, or any other medium which can be used to store media items or applications and data which can be accessed by the electronic reader .","The memory  may be used to store any number of functional components that are executable on the processing unit . In many embodiments, these functional components comprise instructions or programs that are executable by the processing unit  and that implement operational logic for performing the actions attributed above to the electronic reader . In addition, the memory  may store various types of data that are referenced by executable programs.","The memory  may store an operating system  and a content store  to store one or more content items, annotations, and the like. A user interface (UI) module  may also be provided in the memory  and executed on the processing unit  to provide for user operation of the electronic reader . The UI module  may provide menus and other navigational tools to facilitate selection and rendering of content items. The UI module  may further include a browser or other application that facilitates access to sites over a network, such as websites or online merchants, or other sources of electronic content items or other products.","A communication and synchronization module  is stored in the memory  and executed on the processing unit  to perform management functions in conjunction with one or more content sources, such as the content service  discussed above. In some embodiments, the communication and synchronization module  communicates with the content service  to receive eBooks and other content items.","The electronic reader  may also include an annotation module  allowing a user to enter annotations, as discussed above. In addition, the electronic reader  may optionally include an alignment module  that includes some or all of the functionality described above with reference to the alignment module . The electronic reader  may additionally or alternatively store any of the other modules discussed above with reference to the example server  of the content item alignment service , such as the overall similarity module  and\/or the annotation mapping module . Further, the alignment module  and\/or any of the other modules may be additionally or alternatively be stored and executed at any other number of client and\/or server devices.","The electronic reader  may further include a display  upon which electronic books are rendered. In one implementation, the display  uses electronic paper display technology. In general, an electronic paper display is one that has a high resolution (150 dpi or better) and is bi-stable, meaning that it is capable of holding text or other rendered images even when very little or no power is supplied to the display. The electronic paper display technology may also exhibit high contrast substantially equal to that of print on paper. Some exemplary electronic paper displays that may be used with the implementations described herein include bi-stable LCDs, MEMS, cholesteric, pigmented electrophoretic, and others. One exemplary electronic paper display that may be used is an E Ink-brand display. Touch sensitive technology may be overlaid or integrated with the electronic paper display technology to enable user input via contact or proximity to the screen.","The electronic reader  may further be equipped with various input\/output (I\/O) components . Such components may include various user interface controls (e.g., buttons, joystick, keyboard, etc.), audio speaker, connection ports, and so forth.","A network interface  may support both wired and wireless connection to various networks, such as cellular networks, radio, WiFi networks, short range networks (e.g., Bluetooth), IR, and so forth. The network interface  facilitates receiving electronic books and other content as described herein.","The electronic reader  may also include a battery and power control unit . The power control unit operatively controls an amount of power, or electrical energy, consumed by the electronic reader. Actively controlling the amount of power consumed by the electronic reader may achieve more efficient use of electrical energy stored by the battery.","The electronic reader  may have additional features or functionality. For example, the electronic reader  may also include additional data storage devices (removable and\/or non-removable) such as, for example, magnetic disks, optical disks, or tape. The additional data storage media may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data.","Conclusion","Note that the various techniques described above are assumed in the given examples to be implemented in the general context of computer-executable instructions or software, such as program modules, executed by one or more computers or other devices. Generally, program modules include routines, programs, objects, components, data structures, etc. for performing particular tasks or implement particular abstract data types.","Other architectures may be used to implement the described functionality, and are intended to be within the scope of this disclosure. Furthermore, although specific distributions of responsibilities are defined above for purposes of discussion, the various functions and responsibilities might be distributed and divided in different ways, depending on particular circumstances.","Similarly, software may be stored and distributed in various ways and using different means, and the particular software storage and execution configurations described above may be varied in many different ways. Thus, software implementing the techniques described above may be distributed on various types of computer-readable media, not limited to the forms of memory that are specifically described.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described. Rather, the specific features and acts are disclosed as illustrative forms of implementing the claims. For example, the methodological acts need not be performed in the order or combinations described herein, and may be performed in any combination of one or more acts."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The detailed description is set forth with reference to the accompanying figures. In the figures, the left-most digit(s) of a reference number identifies the figure in which the reference number first appears. The use of the same reference numbers in different figures indicates similar or identical items.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 5","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
