---
title: Profile based version comparison
abstract: Various embodiments of systems and methods to compare different versions of a development object based on a version comparison profile are described herein. Identities of the different versions of the development object are received. Further, a version comparison profile and a corresponding profile definition associated with the development object are received. Furthermore, the different versions of the development object are compared to determine one or more differences based upon the received version comparison profile and the corresponding profile definition. The determined one or more differences between the different versions of the development object are returned.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08756567&OS=08756567&RS=08756567
owner: SAP AG
number: 08756567
owner_city: Walldorf
owner_country: DE
publication_date: 20111014
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Embodiments generally relate to computer systems and more particularly to methods and systems to compare different versions of a development object based on a version comparison profile.","Typically, business requirements change over time to satisfy customer needs. In this regard, computer software is modified to meet the changed business requirements. These modifications can result in different versions of same computer software (i.e., source code). Every version can include one or more unique differences compared to other versions to meet business requirements or to improvise the previous software version. Many a times, it is important to know the significant differences between the different versions of same computer software for analyzing software lifecycle aspects within the same release and across different releases.","Generally, software versions are compared on a textual basis by using standard tools. Such method of comparison allows convenient visualization of the differences between the software versions. However, a metadata repository supports a plurality of different domain specific development objects (i.e., metadata object types). Further, changes to the content of the metadata repository may have significant impact on the functional aspects of a business application, user interface and the like. To compare the different versions of the development object using standard version comparison, the whole development object is taken into account. Further, the standard version comparison detects all differences, which leads to a huge list of differences and is a time consuming process to analyze the differences manually. Also, the development objects are not only based on source code, but a significant amount of information is available in the form of the structure of the development objects. As a disadvantage, there is no evaluation or ranking of the severity of differences and there is no filtering mechanism to search only for specific differences (e.g., to detect incompatible changes, to detect important structural changes such as enhancements and the like). Therefore, it is desirable to provide a method which enables comparison of the different versions of the development object based on the specific difference (e.g., structural change, behavioral change and the like).","Various embodiments of systems and methods to compare different versions of a development object based on a version comparison profile are described herein. In one aspect, identities of the different versions of the development object are received. Further, a version comparison profile and a corresponding profile definition associated with the development object are received. Furthermore, the different versions of the development object are compared to determine one or more differences based upon the received version comparison profile and the corresponding profile definition. The determined one or more differences between the different versions of the development object are returned.","These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings.","Embodiments of techniques to compare different versions of a development object based on a version comparison profile are described herein. The development object can be an individual part of an application stored in a metadata repository such as a process component, a data type, a business object, a process agent and the like. In one embodiment, the version comparison profile defines a profile name, such as structural changes, behavioral changes, functional changes and the like, for which the different versions of the development object are compared.","According to one embodiment, different versions of the development object are compared based on the version comparison profile and corresponding profile definition. The corresponding profile definition defines different kinds of changes, such as delete, create and update, to specific parts of the development object. The version comparison profile and the corresponding profile definition are provided by a user. The user refers to an agent, a human or other mechanism capable of providing input to a computer system. The computer system can be desktop computers, work stations, laptop computers, hand held computers, smart phone, console devices or similar portable computing systems. Since the comparison is done using the version comparison profile and the corresponding profile definition, specific differences as desired by the user can be analyzed. Therefore, the overall changes existing between the different versions of the development object are filtered to display major and important changes as desired by the user.","In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","b":["100","105","110","115","105","120","100","105","120","105"]},"In one embodiment, the user interface  provides an option for the user  to provide identities of different versions of the development object to be compared (e.g., ). In other words, the option is provided to input names or labels of the different versions of the development object to be compared. Further, the user interface  provides an option for the user to provide a version comparison profile and a corresponding profile definition (e.g., ). The version comparison profile and the corresponding profile definition define the kinds of changes to be determined between the different versions of the development object. The version comparison profile and the corresponding profile definition are explained in greater detail in , A and B.","The processor  generally assists the user to implement a method to compare the different versions of the development object. At step , the identities of different versions of the development object to be compared are received. At step , the version comparison profile and the corresponding profile definition are received (explained with an example in , A and B). Further, at step , the different versions of the development object are compared based on the version comparison profile and the corresponding profile definition using the metadata object repository . The metadata object repository  can include one or more development objects such as a process component, a data type, a business object and a process agent. The metadata object repository  may be stored in a physical location or may be a virtual database, in which the content of the metadata object repository  is drawn from separate sources. At step , the compared result is returned, which is displayed in the user interface  (e.g., ).",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2","b":["200","210"]},"At step , a version comparison profile and a corresponding profile definition associated with the development object are received. In one embodiment, the version comparison profile includes a profile name associated with the development object for which the different versions of the development object are compared. For example, the different versions of the development object can be compared for structural changes, behavioral changes, functional changes and the like. The version comparison profile associated with the development object is predefined using a metadata object model.","In one embodiment, the corresponding profile definition defines relevance of different kinds of changes (e.g., delete, create and update) to specific parts of the development object performed in different versions. For example, if the user desires to know the list of node elements which are deleted from the previous version, then the user can set the version comparison profile as \u2018structural change\u2019 and corresponding profile definition as \u2018deletion of node element\u2019. An example is described in greater detail in .","At step , the different versions of the development object are compared to determine one or more differences based upon the received version comparison profile and the corresponding profile definition. For example, the structural changes (including deletion of node elements) between the two different versions of the business object \u2018FIA_FIXED_ASSET\u2019 are determined. Therefore, the type of differences as desired by the user is returned instead of all the differences existing between the different versions of the development object.","At step , the determined one or more differences between the different versions of the development object are returned. The returned compared results are displayed to the user. For example, the deleted node elements (with respect to comparison of two different versions of the \u2018FIA_FIXED_ASSET\u2019 business object) are displayed. The method described in  is explained with an example in .",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIGS. 3A and 3B","FIG. 2"],"b":["300","300"]},{"@attributes":{"id":"p-0028","num":"0027"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Root"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Node"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Node Element"]},{"entry":[{},"Action"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Action Parameter Element"]},{"entry":[{},"..."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"..."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Wherein, the root includes header information. The node and node elements are business object data structures. The action and action parameter elements are business object behavioral aspects.  displays an exemplary \u2018FIA_FIXED_ASSET\u2019 A business object. As an example, the \u2018FIA_FIXED_ASSET\u2019 A business object may include 17 nodes, 255 node elements, 18 actions and 14 action parameter elements. For simplicity, it is considered that the \u2018FIA_FIXED_ASSET\u2019 A business object includes node \u2018SOB_VALVIEW_LINE_ITEM\u2019 A and six node elements as shown in . The \u2018FIA_FIXED_ASSET\u2019 A business object is a copy of an older version (i.e., a copy of previous release of the business object).",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 3B","FIG. 3A","FIG. 3B","FIG. 3A","FIGS. 3A and 3B","FIGS. 4 to 6"],"b":["310","310","315","320","310","335","325"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 4","FIG. 4"],"b":["400","400","410","400","430","440","430","440","400","400","440"]},"Further, previous version selection  of the user interface  provides an option for the user to input details of the older version of the development object, which has to be compared with the version of the development object as specified in the current version selection . For example, an option date\/time  is provided to input the previous version details (i.e., date and time of the release of the previous version). Thus, the current version of the development object as mentioned in the current version selection  is compared with the previous version of the development object as mentioned in the previous version selection  based on a version comparison profile and a corresponding profile definition. Defining the version comparison profile and the corresponding profile definition are described in  respectively.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIGS. 5A and 5B","FIG. 5A"],"b":["500","500","500","500","505","500","510","510","510","515","520"]},"In the user interface A, the version comparison profile  is selected and thus the second portion displays version comparison profile . The version comparison profile  includes details such as development object name , profile name  and description . For example, \u2018FIA_FIXED_ASSET\u2019 is selected as the development object name , \u2018STRC\u2019 as the profile name  and \u2018structural changes\u2019 as the description . Therefore, the \u2018STRC\u2019 (structural changes) between the current version (as shown in ) and the previous version (as shown in ) of the development object are determined based on the corresponding profile definition. The profile definition is described in .",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 5B","b":["500","520","520","520","520","520"]},"Therefore, the two versions of the development object \u2018FIA_FIXED_ASSET\u2019 business object (as described in , B and ) are compared for \u2018STRC\u2019 (structural changes) (as described in ) including creation (C) of node elements (as described in ). The display of the comparison result is described in .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 6","FIGS. 3A and 3B","FIG. 3B","FIG. 3A","FIG. 5A","FIG. 5B","FIG. 3B","FIG. 3A","FIG. 3B","FIG. 5B"],"b":["600","610","620","600","325","600","325"]},"It is advantageous to compare different versions of the development object using version comparison profiles as incompatible changes between different versions can be deleted (e.g., if deletion is considered as incompatible change, then only deletion of the development object attributes can be determined). Further, important structural changes including enhancements can be determined. For example, if an attribute is added to the development object, then corresponding changes has to be performed in the user interface. Therefore, detection of enhancements is advantageous and is achieved by comparing the different versions using the version comparison profile. Furthermore, specific changes (e.g. ad-hoc analysis) of the progress of a mass change can be detected. For example, specific kind of change or specific interested property can be highlighted using the version comparison profiles. Therefore, the most important changes in the different versions of the development object are determined by an efficient and simplified version comparison method using version comparison profiles, specific to the development object.","Further, the method of comparison of different versions of the development object is described using business object as an example for the development object. However, the development object is not restricted to the business object and the business object can be replaced by other metadata object types stored in a metadata object repository (e.g., a process component, a data type, a process agent and the like). For example, considering process component (e.g., financial accounting) as the development object, business process variants acts as a node of the process component metadata object. Thus, deletion, creation and updates of the business process variants can be determined using the method as described in .","Some embodiments of the invention may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components maybe implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer readable storage media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include machine code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment of the invention may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment of the invention may be implemented in hard-wired circuitry in place of, or in combination with machine readable software instructions.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 7","b":["700","700","705","755","700","740","755","710","715","710","715","705","715","700","725","730","700","725","730","700","735","700","750","750","700","745","700","720","760","760","760","750","760"]},"A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transactional, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transactional data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system (e.g., ERP system), and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","In the above description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however that the invention can be practiced without one or more of the specific details or with other methods, components, techniques, etc. In other instances, well-known operations or structures are not shown or described in details to avoid obscuring aspects of the invention.","Although the processes illustrated and described herein include series of steps, it will be appreciated that the different embodiments of the present invention are not limited by the illustrated ordering of steps, as some steps may occur in different orders, some concurrently with other steps apart from that shown and described herein. In addition, not all illustrated steps may be required to implement a methodology in accordance with the present invention. Moreover, it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.","The above descriptions and illustrations of embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather, the scope of the invention is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The claims set forth the embodiments of the invention with particularity. The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments of the invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 5A and 5B"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 6","FIGS. 3A and 3B"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
