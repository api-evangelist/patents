---
title: Masking sensitive information in a screen sharing session
abstract: A system can mask specific components of an application, such as a web page, displayed during a screen sharing session. As the web page is being displayed on a first computer screen (i.e., screen), the system can automatically mask specific components of the web page. Thus, when the first screen is captured, and the capture is transmitted to a second screen, the specific components of the web page that have been masked will not be displayed at the second screen.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09141332&OS=09141332&RS=09141332
owner: Oracle OTC Subsidiary LLC
number: 09141332
owner_city: Redwood Shores
owner_country: US
publication_date: 20110711
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority of U.S. Provisional Patent Application Ser. No. 61\/371,953, filed on Aug. 9, 2010, the subject matter of which is hereby incorporated by reference.","One embodiment is directed to a computer system, and more particularly, to remote access to the computer system and screen sharing of the computer system.","During an action of supporting a customer using an application, such as a web page, a customer service representative or agent may request to initiate a screen sharing session with the customer. A screen sharing session is a session where a software application captures an individual's screen, and transmits the capture to a screen of a second individual. The capture can be accomplished using a software application that can be downloaded to a desktop of the customer. Thus, based on the capture, the second individual sees exactly what the first individual sees.","For example, an agent may receive a telephone call from a customer, where the customer is indicating a problem entering information into a web page, and the agent may request that the customer share his screen with the agent, so the agent can view the customer attempt to enter information into the web page. As another example, a client may initiate an instant messaging session with the agent using his desktop, rather than telephoning the agent, where the customer can also indicate a problem with the web page by entering a message in a dialog box displayed to the customer. The agent can have a corresponding dialog box displayed on the agent's screen, and similar to the telephone example, the agent may request that the customer share his screen with the agent.","One embodiment is directed to a computer-readable medium having instructions stored thereon that, when executed by a processor, cause the processor to mask components of an application displayed during a screen sharing session. The instructions include capturing a display of a first screen, which includes a display of the application. The instructions further include identifying a component of the application with a masking indication. The instructions further include masking the component of the application identified with the masking indication, so that the component of the application identified with the masking indication is not visible. The instructions further include transmitting the captured display to a second screen. The instructions further include displaying the captured display at the second screen, wherein the component of the application identified with the masking indication is not visible in the captured display displayed at the second screen.","According to an embodiment, a system can mask specific components of an application, such as a web page, displayed during a screen sharing session. As the web page is being displayed on a first computer screen (i.e., screen), the system can automatically mask specific components of the web page. Thus, when the first screen is captured, and the capture is transmitted to a second screen, the specific components of the web page that have been masked will not be displayed at the second screen. In one embodiment, the capture can be transmitted to other screens in addition to the second screen, where the specific components of the web page that are masked are not displayed at each of the other screens.","As previously described, during an action of supporting a customer using an application, such as a web page, an agent may request to initiate a screen sharing session with the customer, and have the customer share his screen with the agent, where the screen that is displayed to the customer is also displayed to the agent. However, in a traditional screen sharing session, an agent can often see the entire screen of the customer, and it is often desirable to be able to restrict the area visible to the agent to only the web browser, or other application window that displays the application. Even when the agent can only see the web browser, or application window, it is often desirable that some areas of the web page, or other application, be masked from the view of the agent. These areas, such as fields, may contain sensitive data, such as social security numbers, credit card details, or confirmation codes, that the customer does not wish to share with the agent. Thus, according to the embodiment, an application displayed on a first screen can also be displayed on a second screen during a screen sharing session, with specific components of the application masked within the second screen, as will be described in greater detail. In other embodiments, the application displayed on the first screen can also be displayed on other screens in addition to the second screen during the screen sharing session, with specific components of the application masked within each other screen, as will also be described in greater detail.","As understood by one of ordinary skill in the art, an application is a type of computer software designed to help a user of the application perform a specific task or multiple related specific tasks when executed by a processor. In general, an application includes a user interface that is displayed on a screen, and that is designed to allow a user to interact with the application and view data output by the application. As one of ordinary skill in the art would also appreciate, one type of application is a web page. A web page is a resource that can be accessed through a web browser and be displayed on a screen. A web page can be comprised of files containing static text and other content stored within a web server's file system, or can be constructed by server-side computer software when they are requested. A web page generally includes a markup language designed to interpret content of the web page, such as HyperText Markup Language (\u201cHTML\u201d) or Extensible Hypertext Markup Language (\u201cXHTML\u201d), and a style sheet designed to provide layout, typographic, and color information.","As will be described in greater detail, in certain embodiments, certain features of the invention are specific to applications that are web pages. In other embodiments, certain features of the invention are specific to applications that are software applications. In yet other embodiments, certain features apply to both types of applications. Therefore, unless specifically stated otherwise, a feature described in this specification applies to any type of application.","As also understood by one of ordinary skill in the art, in one embodiment, a component of an application can be an area of the application that is displayed on a screen. For example, in an embodiment where an application is a web page, a component can be a field, a form field, a button, an image, a hyperlink, or any element of the web page that is displayed in a screen. In an embodiment where an application is a software application, a component can be a field, a form field, a button, an image, a cell, or any element of the software application that is displayed in a screen. In another embodiment, a component of an application can be an area of an application displayed on a screen, where the area of the application displayed on the screen is captured within a multimedia format. Thus, any reference to \u201cmasking a component\u201d or \u201cmasking components\u201d within this specification can either refer to masking an area of an application displayed on a screen, or masking an area of a multimedia format where an area of an application displayed on a screen is captured. The capturing of the area of the application displayed on the screen within a multimedia format, and the multimedia format, are discussed in greater detail in relation to .",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["10","10","12","10","10","22","12","22","10","14","22","14","10","20","10"]},"A computer-readable medium may be any available medium that can be accessed by processor . A computer-readable medium may include both a volatile and nonvolatile medium, a removable and non-removable medium, a communication medium, and a storage medium. A communication medium may include computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism, and may include any other form of information delivery medium known in the art. A storage medium may include RAM, flash memory, ROM, erasable programmable read-only memory (\u201cEPROM\u201d), electrically erasable programmable read-only memory (\u201cEEPROM\u201d), registers, hard disk, a removable disk, a compact disk read-only memory (\u201cCD-ROM\u201d), or any other form of storage medium known in the art.","Processor  can also be operatively coupled via bus  to a display , such as a Liquid Crystal Display (\u201cLCD\u201d). Display  can display information to the user. A keyboard  and a cursor control device , such as a computer mouse, can also be operatively coupled to bus  to enable the user to interface with system .","According to one embodiment, memory  can store software modules that may provide functionality when executed by processor . The modules can include an operating system , a screen capture module , as well as other functional modules . Operating system  can provide an operating system functionality for system . Screen capture module  can provide functionality for masking components of an application that is displayed during a screen sharing session, as will be described in more detail below. System  can also be part of a larger system. Thus, system  can include one or more additional functional modules  to include the additional functionality. For example, functional modules  may include modules that are part of a Commerce Service Center product from Art Technology Group, Inc.","Processor  can also be operatively coupled via bus  to a database . Database  can store data in an integrated collection of logically-related records or files. Database  can be an operational database, an analytical database, a data warehouse, a distributed database, an end-user database, an external database, a navigational database, an in-memory database, a document-oriented database, a real-time database, a relational database, an object-oriented database, or any other database known in the art.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 2","FIG. 2","FIG. 2","FIG. 2","FIG. 2"],"b":["210","200","200","200","210","220","230","220","230","210","200","220","230","210","200","210","200","210","220","230","210"]},"According to an embodiment of the invention, specific components of an application can be identified with a visible indication, where a visible indication is an indication that indicates the specific components are to be visible during a screen sharing session. For example, a border of each component that is to be visible may be set to a visible color, such as blue, where a visible color is a color that indicates the component is to be visible during a screen sharing session. Thus, during a screen sharing session, each component with a border of a visible color can be displayed on another screen when the application is displayed on another screen. According to an embodiment, a visible indication, such as a border of a visible color, can indicate to a screen capture module (such as screen capture module  of ), that captures and transmits the display of the application, to display the component on the other screen.","Also according to the embodiment, other specific components of the application can be identified with a masking indication, where a masking indication is an indication that indicates the specific components are not to be visible (i.e., are to be masked) during a screen sharing session. For example, a border of each component that is not to be visible may be set to a masking color, such as red, where masking color is a color that indicates the component is not to be visible (i.e., is to be masked) during a screen sharing session. Thus, during a screen sharing session, each component with a border of a masking color can be masked on another screen when the application is displayed on the other screen. In one embodiment, by being masked, each component can be replaced with a solid color or pattern, rendering the component invisible when the application is displayed on the other screen. According to an embodiment, a masking indication, such as a border of a masking color, can indicate to a screen capture module (such as screen capture module  of ) to mask the component.","In an alternate embodiment, by being masked, text, icons, objects, or other types of content in each component can be changed to match the color of the background color of the component. In embodiments in which the component includes text of a known color that can be entered by a user, all pixels of the known text color and colors \u201cclose\u201d to the known text color can be replaced with pixels of the background color. In this context, \u201cclose\u201d means that the color merely differs from the known text color in amount that would be expected to result from compression, or anti-aliasing techniques. In certain embodiments, this color distance is represented by a defined number of least significant bits (e.g., two least significant bits) of components of a color. For example, in an 24-bit red-green-blue (\u201cRGB\u201d) scheme, where colors are represented as red, green, and blue components with eight bits of resolution for each component, where a known text color is a bright green (i.e. has a RGB value of 0x00fd00), then pixels of any color within two least significant bits (e.g., 0x00ff00, 0x00fe00, 0x00fc00, 0x00fb00, 0x02fd00, 0x01fd00, 0x00fd02, 0x00fd01, 0x01fd01, 0x02fd02, 0x01fd02, and 0X02fd01) would be considered \u201cclose\u201d to the known text color, and can be replaced with pixels of the background color.","For example, according to the illustrated embodiment in , component  can be a component that is to be visible during a screen sharing session, and component  can be a component that is to be masked during a screen sharing session. In the illustrated embodiment, component  displays name data, employee identity data, address data, and phone data, and thus, component  includes data that can be visible during a screen sharing session. Also in the illustrated embodiment, component  displays social security data (represented by \u201cXXX-XX-XXXX\u201d), which can be identified as confidential data, and thus, component  includes data that can be masked during a screen sharing session. This is merely an example embodiment, and in alternate embodiments, a component that is to be visible during a screen sharing session can include any type of data, and a component that is to be masked during a screen sharing session can also include any type of data.","According to the illustrated embodiment in , in order to identify that component  is to be visible during a screen sharing session, component  is identified with a visible indication. For example, a border of component  is set to a visible color, such as blue (not shown in ). In an embodiment, the border is displayed in screen . In order to identify that component  is to be masked during a screen sharing session, according to the illustrated embodiment, component  is identified with a masking indication. For example, a border of component  is set to a masking color, such as red (not shown in ). In an embodiment, the border is also displayed in screen . According to an embodiment, any border that is shared by component  and component  can be identified with both a first and a masking indication, so that the border is identifiable as a border of both component  and component . Thus, according to the embodiment, a screen capture module (such as screen capture module  of ) can determine that, when the display of application  on screen  is to be captured and transmitted to another screen, component  should be displayed on the second screen, and component  should be masked.","While in the illustrated embodiment of , application  includes one component (i.e., component ) with a visible indication, and one component (i.e., component ) with a masking indication, this is merely an example embodiment. In alternate embodiments, application  can include any number of components with a visible indication, and any number of components with a masking indication. In one embodiment, application  can only include one or more components with a masking indication. In addition, while in the above example, two indications are used, there is also merely an example embodiment, and in alternate embodiment, any number of indications can be used. In one alternate embodiment, only one or more masking indications can be used.","According to an embodiment of the invention, a screen capture module (such as screen capture module  of ) can dynamically identify components of an application (such as component  of application ) with a visible indication, and dynamically identify other components of the application (such as component  of application ) with a masking indication. In an embodiment where the application is a web page, the screen capture module can utilize source code written in a scripting language for the dynamic identification of components of an application.","As part of the dynamic identification of components of a web page, the source code can dynamically determine components to be displayed during a screen sharing session, and components to be masked during the screen sharing session. According to the embodiment, the source code can apply a set of configurable rules to dynamically determine whether a component is to be displayed or masked during a screen sharing session. The set of configurable rules can include one or more sets of elements, such as component class name, component identity, or component path. The one or more sets of elements can identify whether each element should be displayed or masked during a screen sharing session. According to the embodiment, the source code can analyze a document object model (\u201cDOM\u201d) of the web page and determine whether each component of the web page is an element that should be displayed during a screen sharing session, or whether the component is an element that should be masked during the screen sharing session. The set of configurable rules can be configured at runtime by editing the one or more sets of elements, which can be done utilizing an administration module.","Also as part of the dynamic identification of components of a web page, the source code can also dynamically modify the web page to identify components to be displayed during a screen sharing session with a visible indication, and to identify components to be masked during the screen sharing session with a masking indication. According to the embodiment, the source code can dynamically modify the web page by dynamically modifying a style sheet of the web page. As one of ordinary skill in the art would understand, a style sheet can be used to define a visual layout (i.e., style) of a web page. A style sheet can comprise an external style sheet file that utilizes a style sheet language, such as Cascading Style Sheets (\u201cCSS\u201d) or Extensible Stylesheet Language (\u201cXSL\u201d). Thus, according to the embodiment, the source code can dynamically modify the style sheet of the web page to identify components to be displayed during a screen sharing session with a visible indication, and to identify components to be masked during the screen sharing session with a masking indication. As an example, the source code can dynamically modify the style sheet of the web page to display components that are to be displayed during a screen sharing session with a border of a visible color. In the example, the source code can also dynamically modify the style sheet of the web page to display components that are to be masked during a screen sharing session with a border of a masking color.","According to this embodiment, the source code can be included in one or more tags that are inserted within the web page, where the one or more tags can automatically load the source code. Once loaded, the source code can dynamically identify components and dynamically modify the web page as previously described. In an embodiment, the source code can be written in a JavaScript scripting language.","In an alternate embodiment where the application is a software application, the screen capture module can utilize source code written in the native language of the software application for the dynamic identification of components of the software application.","As part of the dynamic identification of components of a software application, the source code can dynamically determine components to be displayed during a screen sharing session, and components to be masked during the screen sharing session. According to the embodiment, the source code can apply a set of configurable rules to dynamically determine whether a component is to be displayed or masked during a screen sharing session. The set of configurable rules can include one or more sets of elements, such as component class name, component identity, or component path. The one or more sets of elements can identify whether each element should be displayed or masked during a screen sharing session. According to the embodiment, the source code can analyze source code of the software application and determine whether each component of the software application is an element that should be displayed during a screen sharing session, or whether the component is an element that should be masked during the screen sharing session. The set of configurable rules can be configured at runtime by editing the one or more sets of elements, which can be done utilizing an administration module.","Also as part of the dynamic identification of components of a software application, the source code can also dynamically modify the software application to identify components to be displayed during a screen sharing session with a visible indication, and to identify components to be masked during the screen sharing session with a masking indication. According to the embodiment, the source code can dynamically modify the software application by dynamically modifying one or more attributes of the software application. As one of ordinary skill in the art would understand, an attribute is a specification within the software application that defines a property, or value, of an object, such as a component. An example of an attribute is a display property that defines how an object, such as a component, is displayed. Thus, according to the embodiment, the source code can dynamically modify the one or more attributes of the software application to identify components to be displayed during a screen sharing session with a visible indication, and to identify components to be masked during the screen sharing session with a masking indication. As an example, the source code can dynamically modify attributes of the software application to display components that are to be displayed during a screen sharing session with a border of a visible color. In the example, the source code can also dynamically modify the attributes of the software application to display components that are to be masked during a screen sharing session with a border of a masking color. According to this embodiment, an application programming interface (\u201cAPI\u201d) of the software application can be extended to allow the source code to interact with the source code of the software application and modify the one or more attributes of the software application.","According to an alternate embodiment of the invention, a third party (such as an owner or developer of an application) can manually identify components of the application (such as component  of application ) with a visible indication, and manually identify other components of the application (such as component  of application ) with a masking indication. In an embodiment where the application is a web page, the third party can manually determine components to be displayed during a screen sharing session, and components to be masked during the screen sharing session. According to the embodiment, the third party can manually modify a style sheet of the web page to identify components to be displayed during a screen sharing session with a visible indication, and to identify components to be masked during the screen sharing session with a masking indication. As an example, similar to the example described above, the third party can manually modify the style sheet of the web page to display components that are to be displayed during a screen sharing session with a border of a visible color. In the example, the third party can also manually modify the style sheet of the web page to display components that are to be masked during a screen sharing session with a border of a masking color.","In an alternate embodiment where the application is a software application, the third party can manually determine components to be displayed during a screen sharing session, and components to be masked during the screen sharing session. According to the embodiment, the third party can manually modify one or more attributes of the software application to identify components to be displayed during a screen sharing session with a visible indication, and to identify components to be masked during the screen sharing session with a masking indication. In the above example, the third party can manually modify the attributes of the software application to display components that to be displayed during a screen sharing session with a border of a visible color. In the example, the third party can also manually modify the attributes of the software application to display components that are to be masked during a screen sharing session with a border of a masking color.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 3","FIG. 3","FIG. 3","FIG. 2","FIG. 2","FIG. 3","FIGS. 4 and 5"],"b":["320","310","300","350","330","310","300","350","300","350","320","310","330","310","300","310","320","330","320","320","330","330","340","340","340","340","300","310","350","340","340"]},"According to the embodiment, second screen  receives the multimedia format from first screen  and displays the multimedia format as multimedia format . As illustrated in , component  is visible in multimedia format  as visible component . Furthermore, as also illustrated in , component  is masked in multimedia format  as masked component . In the illustrated embodiment of , the text of component  is visible in visible component , and the text of component  is replaced in masked component  with a solid color. Of course, the replacement of the text of component  with a solid color is only an example of masking, and, in alternate embodiment, component  can be masked by replacing the text of component  with any solid color or pattern, or by changing the text of component  to match the color of the background color of component , as previously described.","As previously described, a connection, such as connection  illustrated in , facilitates a screen sharing session between two screens by capturing the display of the first screen into a multimedia format and transmitting the multimedia format to the second screen. As also previously described, the connection can be a direct connection or indirect connection. The type of connection can depend upon whether the screen sharing session utilizes a peer-to-peer model or an intermediary server model. Both models will now be described in greater detail.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 4","FIG. 4","FIG. 4"],"b":["410","410","420","420","410","420","410"]},"According to an embodiment, a display of first screen , which includes a display of the application, is captured by a screen capture module . Screen capture module  is a module that can be automatically (or manually) downloaded to a computer of the customer (not shown in ), where the computer is operatively coupled to first screen . According to the embodiment, screen capture module  can capture the display of first screen  into a multimedia format .","Screen capture module  can mask any components of the application that are identified with an indication that the components are to be masked, as previously described in relation to , in accordance with an embodiment. In the embodiment, the masking of the components is performed by the screen capture module  at the computer operatively coupled to first screen , before multimedia format  is transmitted to second screen . By performing the masking of the components before multimedia format  is transmitted to second screen , the security of the transmission is enhanced. In an alternate embodiment, the masking of the components is performed by a computer operatively coupled to second screen  (not shown in ), after multimedia format  is transmitted to second screen .","A multimedia format, as understood by one of ordinary skill in the art, is a data format, such as a computer file or data stream, for storing and transmitting multimedia data. An example of a multimedia format is a set of image files that utilize an image format, such as a Joint Photographic Experts Group (\u201cJPEG\u201d) format, a Graphics Interchange Format (\u201cGIF\u201d), and a Portable Network Graphics (\u201cPNG\u201d) format. Another example of a multimedia format is a video file that utilizes a video format, such as a Flash Video format and a Moving Pictures Experts Group (\u201cMPEG\u201d) format. In these examples, a viewer at the computer of the agent (not shown in ) can access the file and display the set of images files, or video file, at second screen . Yet another example of a multimedia format is a streaming protocol, such as a Real Time Streaming Protocol (\u201cRTSP\u201d), a Real Time Transport Protocol (\u201cRTTP\u201d), a Real Time Transport Control Protocol (\u201cRTCP\u201d), and a Real Time Messaging Protocol (\u201cRTMP\u201d). In this example, a player at the computer of the agent (not shown in ) can subscribe to the stream and display the stream at second screen .","According to the embodiment, after the display of first screen  is captured into multimedia format , multimedia format  is transmitted to second screen  over a direct data connection. More specifically, multimedia format  is transmitted directly from the computer operatively coupled to first screen  (not shown in ) over a data connection to the computer operatively coupled to second screen  (also not shown in ). Multimedia format  is then displayed on second screen . The peer-to-peer model can be utilized, in one embodiment, when the computer operatively coupled to first screen  and the computer operatively coupled to second screen  are part of a common network, and there are no firewalls between the two computers.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 5","FIG. 5","FIG. 4","FIG. 5","FIG. 5","FIG. 5","FIG. 5"],"b":["440","410","420","440","420","440","410","450","450","440","450","420","440","450"]},"Furthermore, similar to the illustrated embodiment of , the masking can be performed by screen capture module  (before multimedia format  is transmitted to intermediate server ), or be performed by the computer operatively coupled to second screen  (after multimedia format  has been transmitted to both intermediate server  and the computer operatively coupled to second screen ). However, in one embodiment, the masking can be performed in an alternate manner; namely, the masking can be performed by intermediate server . In this embodiment, masking of any components of an application displayed in first screen , where the components are identified with an indication that the components are to be masked, can be performed at intermediate server , after multimedia format  is transmitted to intermediate server , but before multimedia format  is transmitted to the computer operatively coupled to second screen . According to the embodiment, the masking is performed as previously described in relation to .","According to an embodiment where identifying a component of an application to be masked with an indication comprises setting a border of the component to a color, masking the component can comprise properly determining the border of the component, in order to correctly mask the component. In most cases, the entire region of the component to be masked is visible, and determining the border of the component is straightforward. However, in certain cases, the entire region of the component to be masked is not visible. For example, a display of an application may be minimized so that only a portion of the application may be displayed on the screen, and a portion of the region of the component to be masked is not displayed on the screen. As another example, a separate application may be superimposed over the original application and may obscure a portion of the region of the component to be masked. This poses a risk that the entire region will not be correctly masked.","According to the embodiment, in order to address this scenario, a screen capture module (such as screen capture module  of ) can determine a masking border by searching for visible corners of the masking border. Once the screen capture module locates a first visible corner, the screen capture module can trace the colored masking border in a horizontal direction, a vertical direction, or both directions, extending from the first visible corner until the screen capture module detects a color change in the display.","If the location of the color change is a second corner of the masking border, then the screen capture module can trace the masking border in a new horizontal direction, a new vertical direction, or both new directions, extending from the second visible corner until the screen capture module again detects a color change in the display, or until the screen capture module completes the trace of the masking border.","However, if the location of the color change is before a second visible corner is reached, then the screen capture module can assume that the next corner is obscured from view (by either the scrollable area of the application window or by another application window), and can insert a corner of the appropriate orientation within the masking border.","After inserting a corner within the masking border, the screen capture module then traces a new masking border by inserting a masking border in a horizontal direction, a vertical direction, or both directions, extending from the inserted corner. The screen capture module can insert the masked border in the horizontal direction, vertical direction, or both directions, extending from the inserted corner until the screen capture module completes the trace of the masking border. Once the screen capture module completes the trace based on a first visible corner, the screen capture module can begin a trace using a second visible corner, if there is a second visible corner. The screen capture module can complete the trace for each visible corner, thus tracing the complete masking border.","This method only requires that one corner of the masking border be visible at any time. Of course, more corners of the masking border may be visible, and the screen capture module can complete the masking border by adding appropriate edges as described above.","Embodiments of the invention that utilize a masking border will now be described in greater detail in relation to .",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 6","FIG. 6"],"b":["600","610","620","600","610","620","600","605","605","605"]},"Similar to application , application  includes a component to be masked that is surrounded by masking border . However, the entire region formed by masking border  is not visible on the screen because a portion of the region is outside the displayed region of application . This can be due to the fact that application  is minimized. According to the embodiment, a screen capture module (such as screen capture module  of ) searches and locates the visible corners of masking border  (i.e., the upper and lower left corners of masking border ), traces masking border  in horizontal and vertical directions extending from the visible corners, inserts the missing corners, and inserts the missing masking border extending from the inserted corners to complete masking border , where the inserted corners and inserted masking border are indicated by the dashed line of masking border  in .","Similar to application , application  includes a component to be masked that is surrounded by masking border , where the entire region formed by masking border  is not visible on the screen because a portion of the region is outside the displayed region of application . However, in contrast to application , only one corner of masking border  (i.e., the upper left corner) is visible, rather than two corners. Nevertheless, according to the embodiment, the screen capture module searches and locates the visible corner of masking border , traces masking border  in horizontal and vertical directions extending from the visible corner, inserts the missing corners, and inserts the missing masking border extending from the inserted corners to complete masking border , where the inserted corners and inserted masking border are indicated by the dashed lines of masking border  in .",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 7","FIG. 7","FIG. 6","FIG. 6","FIG. 1","FIG. 7"],"b":["700","710","700","710","700","705","705","706","700","705","705","16","705","705","705","705","705"]},"Similar to application , application  includes a component to be masked that is surrounded by masking border , where the entire region formed by masking border  is not visible on the screen. In contrast to application , this is because two applications (i.e., applications  and ) are superimposed over application , and the two applications obscure a portion of the region formed by masking border . Similar to application , according to an embodiment, the screen capture module searches and locates the visible corners of masking border  (i.e., the lower left, upper right, and lower right corners of masking border ), traces masking border  in horizontal and vertical directions extending from the visible corners, inserts the missing corners, and inserts the missing masking border extending from the inserted corners to complete masking border , where the inserted corners and inserted masking border are indicated by the dashed lines of masking border  in .",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 8","FIG. 8"]},"At , a display of a first screen, which includes a display of an application, is captured. In one embodiment, the captured display includes a multimedia format that includes one or more images. In an alternate embodiment, the captured display includes a multimedia format that includes a video.","At , a component of the application is identified with a visible indication, and a component of the application is identified with a masking indication, where the application is displayed on a first screen. In an embodiment, there is no identification of a component of the application with a visible indication, and there is only an identification of a component of the application with a masking indication. In one embodiment, a border of the component identified with a visible indication is set to a visible color, and a border of the component identified with a masking indication is set to a masking color. In an embodiment, there is no setting of a border of a component identified with a visible indication to a visible color, and there is only a setting of a border of a component identified with a masking indication to a masking color.","In an embodiment, the setting of the border can first require the determination of the border. A border can be determined by: locating a first visible corner of the border of at least one component that is set to a masking color, tracing the border in a horizontal or vertical direction extending from the first visible corner until a color change is detected in the display, when the location of the color change is at a second visible corner of the border, tracing the border in a new horizontal or vertical direction extending from the second visible corner, and when the location of the color change is not at a second visible corner of the border, inserting a corner at the location of the color change and tracing a new masking border by inserting a masking border in a horizontal direction or vertical direction extending from the inserted corner.","In an embodiment, an application is a web page. When an application is a web page, a document object model of the web page can be analyzed, and it can be determined whether each component of the web page should be displayed or masked during a screen sharing session. According to the embodiment, a style sheet of the web page can be dynamically modified to identify the component to be displayed during the screen sharing session with the visible indication, and to identify the component to be masked during the screen sharing session with the masking indication. In one embodiment, there is no dynamic modification of a style sheet of the web page to identify the component to be displayed during the screen sharing session with the visible indication, and there is only a dynamic modification of a style sheet of the web page to identify the component to be masked during the screen sharing session with the masking indication.","In an alternate embodiment, an application is a software application. When an application is a software application, source code of the software application can be analyzed, and it can be determined whether each component of the software application should be displayed or masked during a screen sharing session. According to the embodiment, one or more attributes of the software application can be dynamically modified to identify the component to be displayed during a screen sharing session with a visible indication, and to identify the component to be masked during the screen sharing session with a masking indication. In one embodiment, there is no dynamic modification of one or more attributes of the software application to identify the component to be displayed during a screen sharing session with a visible indication, and there is only a dynamic modification of one or more attributes of the software application to identify the component to be masked during the screen sharing session with a masking indication.","At , the component of the application identified with the masking indication is masked, so that the component of the application identified with the masking indication is not visible. In an embodiment, the component of the application identified with the masking indication is masked by replacing the component identified with the masking indication with at least one of a solid color and a pattern. In an alternate embodiment, the component of the application identified with the masking indication is masked by changing content, such as text, in the component identified with the masking indication to match a color of a background color of the component.","At , the captured display is transmitted to a second screen. In one embodiment, the captured display is transmitted to the second screen over a direct connection. In an alternate embodiment, the captured display is first transmitted to an intermediate server, and then the captured display is transmitted, by the intermediate server, to the second screen. In alternate embodiments, the captured display is transmitted to any number of additional screens.","At , the captured display is displayed at the second screen. The component of the application identified with the visible indication is visible in the captured display displayed at the second screen. The component of the application identified with the masking indication is not visible in the captured display displayed at the second screen. In an embodiment where there is no component of the application identified with the visible indication, the component of the application identified with the masking indication is not visible in the captured display displayed at the second screen. In alternate embodiments, the captured display is displayed at any number of additional screens.","In one embodiment, utilizing either a direct connection or an intermediate server, the masking is performed at a computer operatively coupled to the first screen, and the masking is performed before the capturing and the transmitting are performed. In another embodiment, also utilizing either a direct connection or an intermediate server, the masking is performed at a computer operatively coupled to the second screen, and the masking is performed after the capturing and the transmitting is performed. In an alternate embodiment utilizing an intermediate server, the masking is performed at the intermediary server, and the masking is performed before the capturing and the transmitting the captured display to the intermediate server are performed, but before the transmitting the captured display to the second screen is performed.","Thus, according to an embodiment, a screen sharing session can be provided utilizing two screens where specific components of an application may be masked and thus, hidden from view. In accordance with the embodiment, the masking can be customized within a display of an application, rather than an all-or-nothing display of the application. Thus, a customer service agent can provide direct assistance to a customer of an application, utilizing a screen sharing session, yet the confidentiality of sensitive information of the customer, that displayed in the application, can be preserved.","The features, structures, or characteristics of the invention described throughout this specification may be combined in any suitable manner in one or more embodiments. For example, the usage of \u201cone embodiment,\u201d \u201csome embodiments,\u201d \u201ccertain embodiment,\u201d \u201ccertain embodiments,\u201d or other similar language, throughout this specification refers to the fact that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment of the present invention. Thus, appearances of the phrases \u201cone embodiment,\u201d \u201csome embodiments,\u201d \u201ca certain embodiment,\u201d \u201ccertain embodiments,\u201d or other similar language, throughout this specification do not necessarily all refer to the same group of embodiments, and the described features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.","One having ordinary skill in the art will readily understand that the invention as discussed above may be practiced with steps in a different order, and\/or with elements in configurations which are different than those which are disclosed. Therefore, although the invention has been described based upon these preferred embodiments, it would be apparent to those of skill in the art that certain modifications, variations, and alternative constructions would be apparent, while remaining within the spirit and scope of the invention. In order to determine the metes and bounds of the invention, therefore, reference should be made to the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Further embodiments, details, advantages, and modifications will become apparent from the following detailed description of the preferred embodiments, which is to be taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
