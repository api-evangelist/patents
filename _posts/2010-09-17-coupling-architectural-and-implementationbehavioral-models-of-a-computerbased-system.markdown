---
title: Coupling architectural and implementation/behavioral models of a computer-based system
abstract: Coupling architectural and implementation/behavioral models of a computer-based system by creating a bridge element, defining a port of the bridge element, associating the port of the bridge element with a port of an implementable element of an architectural model of a computer-based system and a port of an implementation element of an implementation/behavioral model of the computer-based system, mapping an interface member of the implementation element port to an interface member of the implementable element port, generating, from a template, skeleton source code applicable for the mapped interface member, generating a usage description element for the architectural model corresponding to the mapped interface member, generating an architectural description document from the architectural model, generating implementation code from the implementation/behavioral model and the generated skeleton source code, and generating a declaration file for an operating system service for use by the implementation code.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09020792&OS=09020792&RS=09020792
owner: International Business Machines Corporation
number: 09020792
owner_city: Armonk
owner_country: US
publication_date: 20100917
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field","Embodiments of the invention relate to computer system modeling in general, and more particularly to coupling architectural and implementation\/behavioral models of a computer-based system.","2. Description of the Related Art","Computer-based systems may be modeled using various modeling methodologies. One type of modeling methodology may be used to produce an architectural model of a system that is not specific to any specific operating environment, where the implementation\/behavioral details of the various model components are not modeled, but where adapting the system for a specific operating environment requires manual coding. Another type of modeling methodology may be used to produce a model that is more geared to modeling the implementation\/behavioral details of the various model components for a specific operating environment, where source code or other artifacts may, as a result, be generated for the specific operating environment, but where adapting the system for other operating environments requires revising the model for each specific operating environment.","In one aspect of the invention, a method is provided for coupling architectural and implementation\/behavioral models of a computer-based system, the method including creating a bridge element, defining a port of the bridge element, associating the port of the bridge element with a port of an implementable element of an architectural model of a computer-based system and a port of an implementation element of an implementation\/behavioral model of the computer-based system, mapping an interface member of the implementation element port to an interface member of the implementable element port, generating, from a template, skeleton source code applicable for the mapped interface member, generating a usage description element for the architectural model corresponding to the mapped interface member, generating an architectural description document from the architectural model, generating implementation code from the implementation\/behavioral model and the generated skeleton source code, and generating a declaration file for an operating system service for use by the implementation code.","In another aspect of the invention, a system is provided for coupling architectural and implementation\/behavioral models of a computer-based system, the system including an architectural model builder configured to build an architectural model of a computer-based system, an implementation\/behavioral model builder configured to build an implementation\/behavioral model of the computer-based system, a bridge model builder configured to create a bridge element, define a port of the bridge element, associate the port of the bridge element with a port of an implementable element of the architectural model and a port of an implementation element of the implementation\/behavioral model, map an interface member of the implementation element port to an interface member of the implementable element port, generate, from a template, skeleton source code applicable for the mapped interface member, and generate a usage description element for the architectural model corresponding to the mapped interface member, and a work product generator configured to generate an architectural description document from the architectural model, generate implementation code from the implementation\/behavioral model and the generated skeleton source code, and generate a declaration file for an operating system service for use by the implementation code.","A computer program product implementing the invention is also provided.","In the following description, reference is made to the accompanying drawings which form a part hereof and which illustrate several embodiments of the invention. It is understood that other embodiments may be utilized and structural and operational changes may be made without departing from the scope of the invention.","The embodiments of the invention are now described within the context of one or more embodiments, although the description is intended to be illustrative of the invention as a whole, and is not to be construed as limiting the invention to the embodiments shown. It is appreciated that various modifications may occur to those skilled in the art that, while not specifically shown herein, are nevertheless within the true spirit and scope of the invention.","As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical data storage device, a magnetic data storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the present invention are described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","The code implementing the described operations may further be implemented in hardware logic or circuitry (e.g., an integrated circuit chip, Programmable Gate Array (PGA), Application Specific Integrated Circuit (ASIC), etc.","Reference is now made to , which is a simplified conceptual illustration of a system for coupling architectural and implementation\/behavioral models of a computer-based system, constructed and operative in accordance with embodiments of the invention. In the system of , an architectural model builder  is configured to be used by a system architect to build an architectural model  of a computer-based system, such as in accordance with a modeling methodology that supports the Automotive Open System Architecture (AUTOSAR). An implementation\/behavioral model builder  is configured to be used by the system architect to build an implementation\/behavioral model  of the computer-based system, such as in accordance with the Uniform Modeling Language (UML)\/Systems Modeling Language (SysML) modeling methodology.","A bridge model builder  is configured to be used by the system architect to create one or more bridge elements which may be introduced into either of architectural model  or the implementation\/behavioral model  or may exist independently of models  and . Bridge model builder  is configured to be used to define one or more ports of a bridge element, and associate each port of the bridge element with a port of an implementable element of architectural model , such as of an Atomic Software Component of an AUTOSAR architectural model, and a port of an implementation element of implementation\/behavioral model , such as of a class of a UML\/SysML model. Bridge model builder  is configured to be used, for each such bridge association, to map the members of the interface of the associated implementation element port to the members of the interface of the associated implementable element port. This mapping may be performed automatically using any known automatic mapping technique, such as where the member names and types of one interface match those of the other interface, or may be performed manually. Bridge model builder  is configured to be used to define one or more behaviors for one or more of the mapped interface members. Bridge model builder  is configured to be used, for each mapped interface member, to generate skeleton source code for implementation\/behavioral model  from templates, where the source code represents one or more actions that are applicable given any behaviors that have been defined for the interface member, as well as given known characteristics of the interface member. Thus, for example, if a mapped interface member is of a type and\/or is associated with defined behavior that requires data handling, then skeleton source code is generated for the interface member to receive and handle data, and if the mapped interface member is of a type and\/or is associated with defined behavior that also requires event handling, then skeleton source code is generated for the interface member to receive and handle events. Bridge model builder  is configured to be used, for each behavior defined for a mapped interface member, to generate corresponding behavioral elements for architectural model , such as Internal Behavior elements in an AUTOSAR architectural model. Bridge model builder  is configured to be used, for each mapped interface member, to generate corresponding usage description elements for architectural model , such as ElementAccess, DataPoints, Events, etc., in an AUTOSAR architectural model.","A work product generator  is configured to generate, using conventional techniques, an architectural description document, such as an ARXML document in an AUTOSAR architectural model, from architectural model ; implementation code, such as .C and .H files (e.g., written in the C programming language) for a UML\/SysML model, from implementation\/behavioral model  and the generated skeleton source code; and declaration files for operating system services, such as an RTE Application Programming Interface (API) .H file in an AUTOSAR architectural model, used by the implementation code generated for the interface members.","Any of the elements shown in  are preferably executed by or otherwise made accessible to a computer , such as by implementing any of the elements in computer hardware and\/or in computer software embodied in a physically-tangible, computer-readable medium in accordance with conventional techniques.","Reference is now made to , which is a simplified flowchart illustration of a method for coupling architectural and implementation\/behavioral models of a computer-based system, operative in accordance with embodiments of the invention. In the method of  a bridge element is created to bridge between an architectural model of a computer-based system, such as an AUTOSAR architectural model, and an implementation\/behavioral model of the computer-based system, such as a UML\/SysML model (block ). The bridge element may be introduced into either of architectural model or the implementation\/behavioral model or may exist independently of the models. One or more ports of the bridge element are defined (block ). Each port of the bridge element is associated with a port of an implementable element of the architectural model, such as of an Atomic Software Component of an AUTOSAR architectural model, and a port of an implementation element of the implementation\/behavioral model, such as of a class of a UML\/SysML model (block ). For each such bridge association, the members of the interface of the associated implementation element port are mapped to the members of the interface of the associated implementable element port (block ). This mapping may be performed automatically or manually. One or more behaviors are defined for one or more of the mapped interface members (block ), such as, for example, \u201cwhen integer A receives data, run function UpdateDisplay( ).\u201d For each mapped interface member, skeleton source code is generated for the implementation\/behavioral model from templates to represent one or more actions that are applicable given any behaviors that have been defined for the interface member, as well as given known characteristics of the interface member (block ). For each behavior defined for a mapped interface member, corresponding behavioral elements are generated for the architectural model (block ), such as Internal Behavior elements in an AUTOSAR architectural model. For each interface member, corresponding usage description elements are generated for the architectural model (block ), such as ElementAccess, DataPoints, Events, etc., in an AUTOSAR architectural model. An architectural description document, such as an ARXML document in an AUTOSAR architectural model, is generated from the architectural model using conventional techniques (block ). Implementation code, such as .C and .H files for a UML\/SysML model, is generated from the implementation\/behavioral model and generated skeleton source code using conventional techniques (block ). Declaration files for operating system services, such as an RTE API .H file in an AUTOSAR architectural model, are generated for operating system services used by the implementation code generated for the interface members using conventional techniques (block ).","The system and method of  may be appreciated in the context of the following example as supported by , where IBM\u00ae RATIONAL\u00ae RHAPSODY\u00ae, commercially-available from International Business Machines Corporation, Armonk, N.Y., is used to implement the invention with respect to AUTOSAR and UML\/SysML models of a computer-based system in order to automate the generation of AUTOSAR work products including ARXML documents, c-Documents (i.e., files containing sources in the language C), obj-Documents (i.e., object files), and h-Documents (i.e., files containing header files that are included in c-Documents), as well as to automate connection of a user implementation of the modeled system to the AUTOSAR domain, including AUTOSAR run-time environment (RTE) and AUTOSAR Ports. (IBM, RATIONAL, and RHAPSODY, are trademarks of International Business Machines Corporation in the United States, other countries, or both.) In the following example, an abstraction layer is created over the AUTOSAR domain, where AUTOSAR elements are represented using RHAPSODY\u00ae modeling, and implementation blocks are connected to the AUTOSAR elements represented in the model. After the system is described in this manner, RHAPSODY\u00ae generates lower-level AUTOSAR API calls in accordance with the system description, system source code, and the AUTOSAR XML (ARXML) file(s) to describe the system to AUTOSAR tools and compilers.","Referring now to , one or more instance objects are created of RHAPSODY\u00ae Implementation Blocks (RIMBs), such as RHAPSODY\u00ae Implementation Block Object (RIMBO) , to connect the UML\/SysML domain to the AUTOSAR domain. In , the ports . . . are represented by squared elements. One or more ports . . . are defined on RIMBO , where each port . . . drives the generation of the appropriate AUTOSAR-specific setters\/getters using the appropriate AUTOSAR RTE API. Each RIMBO  has one or more Active Elements (e.g., Class or Operation) that are implemented in the AUTOSAR domain as a Runnable Entity. AUTOSAR Internal Behavior artifacts are determined by activation policies associated with each of the Active Elements, as described in RHAPSODY\u00ae in an Activation\/Access table, such as table  in , together with any associated Access Methods. User-defined Attributes are set to be Inter-Runnable variables, allowing various runnable entities to access these variables.","RIMBO  is used inside an AUTOSAR Atomic Software Component  to define the internal behavior and implementation for the software component. RIMBO  performs the tasks of receiving incoming data on ports . . . , handling the received data, sending data over ports . . . , calling operations on client ports, implementing operations on server ports, and performing calculations and algorithms as required to perform these tasks, including the execution of Statecharts.","Each RIMB may have associated Operations and Active operations, an Access\/Activation table, Exclusive Area settings, Inter-Runnable Variables (i.e., Attributes), and (regular) Attributes. Each RIMB may have Sender\/Receiver (S\/R) ports and interfaces, where S\/R ports have attributes that can be typed by a C type, or by RHAPSODY\u00ae event. C-type attributes are used as data inside the RIMB, while RHAPSODY\u00ae Event-type attributes are used as events and can trigger Statecharts. Access-Mode is preferably specified for each attribute. Each RIMB may also have Client\/Server (C\/S) ports and interfaces, where each C\/S port has Operations, and where Call-Mode is specified for Each Operation","Referring now to , Activation\/Access table  specifies the policy for each active element, including Activation policy, Data Elements On ports, Operations on ports and Inter-Runnable variables to which the Active Element has access, and Exclusive Areas to which the Active element has access or in which it runs.","Once a system has been described in RHAPSODY\u00ae as above, RHAPSODY\u00ae performs model transformations to\n\n",{"@attributes":{"id":"p-0036","num":"0038"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if( Attribute_Type_Is_RhapsodyData ){"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if ( IsQueued ){"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Call Queued Explicit access RTE API;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else if ( IsExplicit ){"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Call Non-Queued Explicit access RTE API;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else if ( IsImplicit ){"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Call Implicit access RTE API;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else if( Attribute_Type_Is_RhapsodyEvent ){"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if ( RhapsodyEventWithArgument ){"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Call Queued Explicit access RTE API using argument;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Call Queued Explicit access RTE API using dummy;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},{"@attributes":{"id":"p-0037","num":"0039"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2022 Receive Data"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2218 For attribute n_onlyAttr of type RhpInteger on"]},{"entry":[{},"RIMBReceiverPort North:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"static Std_ReturnType receiveData_North_n_onlyAttr(RhpInteger*"},{"entry":"const n_onlyAttr) {"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return Rte_Read_Nox_n_onlyAttr(n_onlyAttr);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2022 Handle Data"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2218 For attribute n_onlyAttr of type RhpInteger on"]},{"entry":[{},"RIMPReceiverPort North:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"static void handleData_North_n_onlyAttr(RhpInteger n_onlyAttr) {"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"North_n_onlyAttr = n_onlyAttr;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2022 Receive and Handle Data"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2218 For attribute n_onlyAttr of type some-event on"]},{"entry":[{},"RIMBReceiverPort North:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"static Std_ReturnType receiveAndHandleData_North_n_onlyAttr(void)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RhpInteger n_onlyAttr;"]},{"entry":[{},"Std_ReturnType retval ="]},{"entry":[{},"Rte_Read_Nox_n_onlyAttr(&n_onlyAttr);"]},{"entry":[{},"if(retval == RTE_E_OK){"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"North_n_onlyAttr = n_onlyAttr;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"return retval;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2022 Receive Event"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2218 For attribute n_evArg of type some-event on"]},{"entry":[{},"RIMBReceiverPort North:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"static Std_ReturnType receiveEvent_North_n_evArg(RhpInteger* const"},{"entry":"argument_0) {"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return Rte_Receive_Nox_n_evArg(argument_0);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2022 Handle Event"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2218 For attribute n_evArg of type some-event on"]},{"entry":[{},"RIMBReceiverPort North:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"static void handleEvent_North_n_evArg(RhpInteger argument_0) {"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RiCGEN(&rimb_0, event_1(argument_0));"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2022 Receive and Handle Event"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2218 For attribute n_evArg of type some-event on"]},{"entry":[{},"RIMBReceiverPort North:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"static Std_ReturnType receiveAndHandleEvent_North_n_evArg(void) {"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RhpInteger argument_0;"]},{"entry":[{},"Std_ReturnType retval ="]},{"entry":[{},"Rte_Receive_Nox_n_evArg(&argument_0);"]},{"entry":[{},"if(retval == RTE_E_OK){"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RiCGEN(&rimb_0, event_1(argument_0));"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"return retval;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2022 Send Data"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2218 For attribute s_di of type RhpReal on"]},{"entry":[{},"RIMBSenderPort Smouth:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"static Std_ReturnType sendData_Smouth_s_di(RhpReal s_di) {"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return Rte_Write_Sayyid_s_di(s_di);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2022 Send Event"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2218 For attribute s_ev of type some-event on"]},{"entry":[{},"RIMBSenderPort Smouth:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"static Std_ReturnType sendEvent_Smouth_s_ev(void) {"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return Rte_Send_Sayyid_s_ev(0);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2022 Callers"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2218 For operation opNoArgs on RIMBClientPort"]},{"entry":[{},"Colombo:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"static Std_ReturnType call_Colombo_opNoArgs(void) {"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return Rte_Call_Cairo_opNoArgs( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In the above example the RHAPSODY\u00ae system model definition may be reused across multiple architectural-type domains by:\n\n","Referring now to , block diagram  illustrates an exemplary hardware implementation of a computing system in accordance with which one or more components\/methodologies of the invention (e.g., components\/methodologies described in the context of ) may be implemented, according to embodiments of the invention.","As shown, the techniques for controlling access to at least one resource may be implemented in accordance with a processor , a memory , I\/O devices , and a network interface , coupled via a computer bus  or alternate connection arrangement.","It is to be appreciated that the term \u201cprocessor\u201d as used herein is intended to include any processing device, such as, for example, one that includes a CPU (central processing unit) and\/or other processing circuitry. It is also to be understood that the term \u201cprocessor\u201d may refer to more than one processing device and that various elements associated with a processing device may be shared by other processing devices.","The term \u201cmemory\u201d as used herein is intended to include memory associated with a processor or CPU, such as, for example, RAM, ROM, a fixed memory device (e.g., hard drive), a removable memory device (e.g., diskette), flash memory, etc. Such memory may be considered a computer readable storage medium.","In addition, the phrase \u201cinput\/output devices\u201d or \u201cI\/O devices\u201d as used herein is intended to include, for example, one or more input devices (e.g., keyboard, mouse, scanner, etc.) for entering data to the processing unit, and\/or one or more output devices (e.g., speaker, display, printer, etc.) for presenting results associated with the processing unit.","The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","It will be appreciated that any of the elements described hereinabove may be implemented as a computer program product embodied in a computer-readable medium, such as in the form of computer program instructions stored on magnetic or optical storage media or embedded within computer hardware, and may be executed by or otherwise accessible to a computer (not shown).","While the methods and apparatus herein may or may not have been described with reference to specific computer hardware or software, it is appreciated that the methods and apparatus described herein may be readily implemented in computer hardware or software using conventional techniques.","While the invention has been described with reference to one or more specific embodiments, the description is intended to be illustrative of the invention as a whole and is not to be construed as limiting the invention to the embodiments shown. It is appreciated that various modifications may occur to those skilled in the art that, while not specifically shown herein, are nevertheless within the true spirit and scope of the invention.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of embodiments of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiments were chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.","The foregoing description of embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the embodiments to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the embodiments be limited not by this detailed description, but rather by the claims appended hereto. The above specification, examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Since many embodiments may be made without departing from the spirit and scope of the invention, the embodiments reside in the claims hereinafter appended or any subsequently-filed claims, and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":["Embodiments will be understood and appreciated more fully from the following detailed description taken in conjunction with the appended drawings in which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 3 and 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
