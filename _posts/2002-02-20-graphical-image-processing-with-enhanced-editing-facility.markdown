---
title: Graphical image processing with enhanced editing facility
abstract: A method for modifying characteristics of an animation. An animation is created for a live broadcast and comprises graphic data including first parameters and references to editable parameters. The editable parameters have their characteristics, including a value and a description for each editable parameter, stored as metadata. The graphic data is instantiated by a metafile containing the metadata to determine the overall characteristics of an animation used during the live broadcast. The metadata may be independently modified on remote processing systems without having access to said graphic data. Finally, the animation is rendered during a broadcast, during which both the first and editable parameters are used to determine characteristics of the rendered animation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06873328&OS=06873328&RS=06873328
owner: Autodesk Canada Inc.
number: 06873328
owner_city: Quebec
owner_country: CA
publication_date: 20020220
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","BEST MODE FOR CARRYING OUT THE INVENTION"],"p":["1. Field of the Invention","The present invention relates to generating animations, and in particular relates to modifying an existing animation so that it may be modified for use in several instances.","2. Description of the Related Art","Animations have been used widely in television broadcasting, as a useful graphical method for the presentation of news stories. For example, in an election broadcast, complex statistics can be presented in a compelling way so as to communicate information to viewers. Such animations are generated digitally, using processing systems that are linked to databases so as to update several characteristics automatically. Several graphics can be sequenced in time in what is referred to as a rundown, and the corresponding animation sequence can be cued manually or automatically by a studio automation system, such as that provided by the MOS (Media Object Server) protocol.","The design of such animations is a complex and highly skilled process. All the objects of an animation have to be defined from basic geometric primitives. Surface textures, text fonts, and three dimensional views must all be coordinated by the graphic artist in order to create a good effect. Animations consist of moving objects. so as to provide a more exciting visual scene. In order to do this, the designer must carefully define the motion, duration, start and end positions of objects contained within the animation. This can take considerable effort. As the complexity of animation processing systems increases, the possibilities for detail and visual richness increase also, creating an additional stress upon the design of such animations.","The cost of this effort requires that such designs be re-used whenever possible. Known animation systems facilitate customisation by provision of an Application Programming Interface (API). Using the API, an animation can be customised with a computer program written especially for the purpose, in a programming language such as Visual BASIC, C++, or possibly a scripting language such as PERL. The complexity of re-using an animation is minimised by the creation of software specifically for an animation, thereby enabling journalists, TV program producers, and so on, to interact and modify an animation through a simplified interface that can be presented on a conventional computer terminal.","The creation of such custom-written software requires considerable effort. Effort is expended therefore in both the original design of an animation, and also in writing custom software to provide an interface that permits easy changes to be made to some of its characteristics. Both these levels of design require highly skilled teams. The known animation design process is therefore split into two expensive procedures, and extra effort is often expended to overcome difficulties created by the fact that such complex design processes are being carried out by different teams of people. This can result in considerable cost.","As a result of these considerations, custom animations are only used extensively in high budget television broadcasts. Although the equipment to render animations becomes cheaper all the time, the cost of personnel with the skill to create animations, and write custom software to modify each such animation, is excessively prohibitive.","According to an aspect of the present invention, there is provided an animation editing system for generating graphic data and metadata for an animation, including processing means, display means and data storage means, in which graphic data and metadata are generated in response to user interactions with said editing system, under control of processing instructions for said processing means to facilitate user input of first characteristics of an animation via a graphical user interface displayed on said display means; wherein said graphic data Includes first parameters defining said first characteristics, and references to editable parameters in said metadata; said metadata includes said editable parameters which define second characteristics of said animation; and for each said editable parameter, said metadata includes a value field, and an identifying means for identifying the corresponding parameter to a user, thereby defining an interface to facilitate subsequent editing of said second characteristics of said animation.","In a preferred embodiment the identifying means is a description of the corresponding parameter, and preferably the metadata includes a defined range of permissible values for each parameter. Preferably the metadata includes a default value for each of the editable parameters, and processing instructions are provided to enable the processing means to combine the graphic data with rendering instructions to create an executable graphic file. Preferably the metadata is encoded in XML (Extensible Markup Language).","The invention will now be described by way of example only with reference to the accompanying drawings.","A system for generating animations is shown in FIG. . Animations are initially created in an animation design house . The animations are designed for a specific purpose, for example, the enhancement of a television news program, in which news information is additionally presented in the form of graphical animations. An animation design, also known as a graphic, once complete, can be transferred via the Internet  to a newsroom . Alternative modes of transfer for the animation include physical transfer via CDROM, and local area networks that include both the newsroom  and the animation design house .","The newsroom  updates the graphic with current news data, and supplies these to a TV studio , where this information is integrated within the context of a news program for broadcast via a broadcast transmitter . Journalists using personal computers  and  may supply news data to the newsroom , by a modem connection to an internet service provider (ISP)  which provides connectivity to the Internet . Connection between the newsroom  and the TV Studio is also made over the Internet. A microwave link  facilitates transfer of live audio and video broadcast signals from the TV studio  to the broadcast transmitter .","Equipment present in the animation design house  shown in , is detailed in FIG. . Several animation editing workstations  to  are connected to a network . A server  is also connected to the network , and provides facilities for data storage and connection  to the Internet. A workstation  includes a monitor  and a processing system . A keyboard  and a graphics tablet  are connected to the processing system . A stylus  is used to provide graphical input to the processing system  via the graphics tablet . The processing system includes a CD-RW (compact disc read-write) drive . A CDROM  includes data structures defining instructions that, once installed upon the processing system , enable a user at the workstation  to create and modify animations. A CD-R (recordable compact disc)  may be recorded by the user once an animation has been created, and the disc  contains a data structure that defines the animation that has been designed.","Several users, at each of the different workstations, may collaborate upon the design of a single animation, or alternatively work on different animations. The server  may be used to hold animation data and or instructions centrally, or alternatively, data and or instructions may be stored locally at each workstation, depending upon the nature of each job, and the amount of data that needs to be stored. As an alternative to storing an animation on the CD-R disc , such information and or instructions may be transferred to their destination over the Internet, by the connection  with the server .","In an alternative embodiment, animations are created in-house by design personnel of the broadcasting company. A LAN (local area network) is then used to transfer the relevant data Files from the designers to the newsroom and to the graphic department of the TV studio.","A summary of the typical workflow performed by the user of the workstation  shown in , is shown in FIG. . At step  the user switches on the processing system . At step  instructions for creating and or modifying an animation are installed if necessary. The instructions may be supplied on the CDROM disc , or downloaded by ftp (file transfer protocol) over the Internet . At step  an animation graphic file is created by the user, along with metadata which defines how the graphic file can be used. The metadata is stored as a separate file, referred to as a metafile. At step , the graphic file and the metafile are transmitted over the Internet to the newsroom . Alternatively, a CD-R is created containing a data structure representing these files, and the disc  is transmitted physically to the newsroom . Or, in the alternative embodiment, described above with reference to , the design department may be in-house, in which case the metafile is transferred to the newsroom and the graphic file is transferred to the graphic department via a LAN.","At step  the user switches off the processing system .","A screenshot of the monitor  shown in , during creation of an animation, is shown in FIG. . The screen area includes a preview area  in which the user may interact graphically with the animation. In the example shown in this Figure, two opposing candidates in a local election have their proportions of votes displayed in the form of a three-dimensional bar graph. The animation changes over time, including variations in the view angle of a virtual camera, and the extent of the bars  and  is configured to grow from zero to the extent determined by results. All these effects are created by the user, from the assembly of primitive objects such as cubes, spheres, text and other shapes. Their characteristics have to be defined not only statically, but also over time. The construction of such animations is a highly skilled and time-intensive process. The cost of generating an animation for a news story is high. In the art, only special events, such as an election, or a widely viewed sports event, can afford to have completely new animations created. A complex user interface  enables the user who designs the graphic to set up, modify and control the various components of the animation.","The main components of the processing system  shown in , are detailed in FIG. . The processing system  is an Octane\u2122 produced by Silicon Graphics Inc. It comprises two central processing units  and  operating in a symmetrical multi-processing (SMP) configuration. Each of these processors is a MIPS R12000 manufactured by MIPS Technologies Incorporated, of Mountain View, Calif. Each of the processors  and  has a secondary cache memory  and  that facilitate per-CPU storage of frequently used instructions and data. Each CPU  and  further includes separate primary instruction and data cache memory circuits on the processor chip, thereby providing an additional level of processing efficiency. A memory controller  provides the connection between the processors  and  and a main memory . The main memory  comprises two gigabytes of dynamic RAM.","The memory controller  facilitates connectivity between the aforementioned components of the processing system  and a high bandwidth non-blocking crossbar switch . The switch makes it possible to provide a direct high bandwidth connection between any of several attached components. These include a graphics card . The graphics card  receives instructions from the processors  and  to perform various types of graphical image rendering processing, resulting in animated images, and an editing interface for the animation, being rendered on the monitor .","A SCSI bridge  facilitates connection between the crossbar switch  and a DVD\/CD-RW drive . The DVD\/CD-RW drive is used to install instructions for the processing system  onto a hard disk drive . The DVD\/CD-RW drive  may also be used to create CD-R discs containing large quantities of instructions and or data. Instructions located on the hard disk drive  may be transferred into the main memory  for execution by the processors  and . An input output (I\/O) bridge  provides an interface to the graphics tablet  and the keyboard , through which the user interacts with the processing system . A second SCSI bridge  provides an interface with a network card , that provides a network connection between the processing system  and the network .","In alternative embodiments, the processing system  may be an Onyx2, an Octane2 or an O2.","The contents of the main memory  shown in , as they would appear during step  in , are detailed in FIG. . An operating system  provides common system functionality for application instructions running on the processing system . The operating system  is the Irix\u2122 operating system, available from Silicon Graphics Inc. Animation editing instructions  and animation rendering instructions  are instructions required for generating an animation. The rendering instructions  are required to preview the results of editing operations carried out by the user. Graphic data  includes data defining the animation in terms of its basic ingredients, including object primitives and their geometrical attributes, that are created by the animation artist working at the workstation . Metadata  includes information for selected characteristics of an animation. Other data , includes data required for the operating system , and other instructions  and .","Creating an animation graphic and metadata, as performed at step  in , is detailed in FIG. . At step  the user defines objects, geometry and parameters for the animation. Such manipulations are performed using the user-interface shown in , in combination with operations of the keyboard  and or graphics tablet . At step  the user categorises parameters as being locked or unlocked. At step  the user sets the values for locked parameters. At step  the user sets values, including default values, for unlocked parameters. Also, the user defines a description for each of the unlocked parameters. At step  the finished graphic is previewed in real-time. At step , a question is asked as to whether to continue with animation design. If so, control is directed to step . Alternatively, this completes the steps performed during creation of an animation.","The steps of  are descriptive of the operations performed by a user. However, their order is arbitrary, and in practice, the order in which these steps are taken is random due to the way in which a graphical user interface operates. Each of the described operations in the steps-may be performed separately, in combination with, and in any order, with respect to any of the other described operations. Steps  to  are intended to delineate operations which require specific reference.","The transmission of a graphic file and a metafile, shown at step  in , is illustrated in FIG. . Metadata  is supplied as a metafile , for inclusion on the CD-R disc . The metadata includes descriptions, default values, value fields and actual values of unlocked parameters, in accordance with operations performed at step  in FIG. .","Graphic data  defines first characteristics of an animation. The first characteristics are the most complex, and are appropriate for a first level of user access, such as access by an animation designer working in the animation design house . The graphic data , defining most of the components of an animation, may be combined  with rendering instructions , to generate an executable graphic file . The executable graphic file is stored on the CD-R disc . These data structures may also or alternatively be transmitted over a network , and or over the Internet .","The metadata  is stored in the metafile  in XML (extensible mark-up language). An example of a metafile is shown in FIG.  and continued in FIG. . Each line has a line number, which is provided for reference purposes only. At lines  and  the data format is defined. In the preferred embodiment, metadata is known alternatively as page data, and this is reflected in some of the contents of line . Lines  and  are a single XML statement defining the page name, or the identity of the metadata. Within this line is the text: graphicName=\u201cdave_scene\u201d. This refers to the name of the graphic data  contained within the graphic file . Line , therefore, contains an instantiation of the animation defined in the graphic. Unlocked parameters in the metadata may be adjusted in accordance with the requirements of a specific news story.","At line  a reference ID number is defined. This associates the following XML lines with a specific parameter link that is contained within the graphic data . In this way the locked parameters in the graphic data may be combined with unlocked parameters in the metadata to fully define the appearance and characteristics of the resulting animation. Lines  to  complete the definition of a single unlocked parameter. The value is defined in the value field at line . The type of parameter and its default value are defined at line . The parameter's permissible range is defined at lines  and , in this case, in the form of a maximum and minimum value for a floating point number. At line , the parameter's description is provided.","The contents of lines  to  are defined initially by the user of the workstation , who is responsible for the detailed design of the graphic, and the parameter's value, shown at line , is therefore modifiable at a first level of user access. However, the parameter's value, may be changed by anyone who has access to the metafile . This is considered as providing a second level of user access. The information provided in lines  to  provides subsequent users with enough information to sensibly select different values of the parameter, without necessarily having full and detailed knowledge of characteristics encoded in the graphic data . In particular, the metadata includes a value field at line  allowing the parameter's value to be edited, and a description at line  which provides a means of identifying the parameter to the user. In addition, the default value at line , provides a suitable alternative for the parameter's value at line , even when the user might have no idea what effect this value has on the appearance of the resulting animation. The designer of the graphic carefully chooses default values, so that subsequent users of the system can receive useful information as to what kind of values are suitable for the value field at line . In this respect, the designer of the animation designs how its user interface operates, and can guide the method and ways in which the animation can be most advantageously operated.","A similar parameter definition is provided at lines  to . The metaflle continues in  third parameter is defined at lines  to . In this case, the parameter is a string of characters. Again, a default value is provided. The permissible range for a string of characters is here defined in terms of its maximum length, as shown at line . At line , certain characters are defined as being invalid for the string. Lines  and  may be considered as defining a range of permissible characteristics for the parameter. A fourth parameter is defined at lines  to . In this case, the parameter is defined as having one of several preset values. These pre-set values are defined in lines  to . This type of parameter is known as an enumerated type, as indicated at line , along with a default value. The instantiation of graphic data is completed by the end-of-page tag at line .","Metadata typically consists of many dozens of such parameter definitions. Each such definition provides the user with a means for accessing a characteristic of the resulting animation. Parameters that are defined in this way are known as unlocked parameters, whereas locked parameters are defined as part of the graphic data . Unlocked parameters are accessible at a second level of user access, as well as at a first level of user access, whereas locked parameters are accessible only at the first level of user access.","The newsroom  shown in  is detailed in FIG. . Equipment in the newsroom includes three news editing workstations ,  and . These are connected to a network . A server  provides central file storage facilities, and also provides a connection  to the Internet . The first news editing workstation  includes a monitor , a processing system , a keyboard  and a mouse . A CDROM  contains instructions for editing metadata , which are installed on the processing system . The server comprises a CPU , input output circuitry , random access memory  and a redundant array of inexpensive disks (RAID) , upon which news data, including metafiles, can be centrally stored.","The workflow of a user situated at the first news editing work station  in  is summarised in FIG. . At step  metadata editing instructions are installed if necessary. Installation may be from the CDROM , or by download across the Internet. At step  the metadata editor instructions are started, and at step , the user edits the metadata.","A screenshot of the monitor  shown in  during editing, is shown in FIG. . The editor creates a window  in which are defined fields for each parameter. The editing window  has a title . Each parameter has a description field and an editable value field . The title , description  and value  are each generated from data in the metafile . While editing a value field, the user may, with appropriate interactions with the graphical user interface, discover the default value recommended for an unlocked parameter by the designer of the animation, for example by right-clicking on the mouse while the cursor is located over a parameter description. Where a pre-set value must be selected, the interface provides a drop-down menu, as indicated at , from which the user can select an appropriate value for the unlocked parameter.","Four parameters , ,  and  are shown in FIG. . These correspond to the four parameters defined in the XML data structure shown in . The user may set new values using the interface. The new parameter settings may be saved by activating a SAVE button . Another page of XML may be edited using a LOAD button , and the edit window  may be closed by activating an EXIT button .","It should be understood that the workstation  need only receive the metadata , and does not need to receive the graphic data . The metafile  containing the metadata contains sufficient information to provide an interface which may be understood by the user of the workstation in the absence of the animation generated by the graphic data.","The processing system , used in the news editing workstation  shown in , is detailed in FIG. . The processing system is a Power Mac G4, available from Apple Computer Inc. The central processing unit  is a G4, running at 533 MHz, details available from Motorola Inc. The CPU  includes on chip primary instruction and data caches, and an off-chip secondary cache. The CPU  is connected to a main memory , in which are stored data, and instructions that are executable on the CPU . A graphics card  receives graphics commands from the CPU  to render the window-based graphical user interface . A SCSI input output (I\/O) interface  provides efficient communication with storage devices  and . These storage devices are a CDROM drive  and a nine gigabyte hard disk drive . A network interface  provides the connection to the newsroom Ethernet network . A Universal Serial Bus (USB) port  provides connections to the keyboard  and the mouse .","In an alternative embodiment the processing system  is a personal computer (PC) having an Intel Pentium\u2122 processor.","The main memory  shown in , is detailed in  MacOS9\u2122 operating system  provides common application processing functions, including interfacing instructions for the USB port , the network interface , and other peripherals. Metadata editing instructions  include instructions for the editing interface shown in FIG. . Other application instructions  include other applications and resident utilities such as those commonly provided in a processing system of this type. Metadata  includes the XML data  shown in . Other data  includes data required for the correct operation of the instructions ,  and .","The step of editing metadata, shown at  in , is detailed in FIG. . At step  the user selects a metafile for loading. At step  the metafile  is loaded, via the network , from the RAID  in the server . At step  the metafile is parsed, and a user interface, as shown in , is constructed for the unlocked parameters. Steps  to  represent actions performed by the user while editing using the interface shown in FIG. . At step  the user selects a parameter, for example, by clicking on its value . At step  the user enters a new value for the selected parameter, either by typing one in, selecting the default, or by dragging with the mouse  through a list of pre-set values . At step , the value field , ,  or  is updated in the metadata. At step  a question is asked as to whether the user wishes to edit another unlocked parameter. If so, control is directed to step . Alternatively, control is directed to step , where modified metadata  is saved in response to the user activating the SAVE button .","Newsroom activities are summarised in FIG. . Several news stories are being edited for a news program. Metafile  is being used for just one such story. It is loaded from the server's RAID  across the network to the first workstation's memory . There it is modified in accordance with a particular series of facts that are to be displayed as part of an animated graphic for the news program. Several other stories are provided with graphics in this way. The same graphic data  may be instantiated several times over several days, as a particular news story develops, but with slight variations each time it is put on air. Other news stories evolve similarly. Different metafiles and possibly different graphic data are used for these. However, the newsroom only needs access to the metafiles, as these contain the unlocked data that is to be modified by an editor or journalist. The main memories  and  of other computers also contain metafiles, which are loaded and saved to and from the server's RAID . In this way, the newsroom quickly and efficiently maintains an up-to-date sequence of news stories, and their animations, by simple editing using an interface of the type shown in FIG. .","A metafile  is typically several kilobytes in size. This size of file is suitable for easy transfer over the Internet, and so remotely connected computers  and  can be used to edit metadata for a news story. In addition to writing an article, a journalist can also transfer a modified metafile back to the newsroom server , where other aspects of the story can be updated by a news editor, or left unchanged. Graphic data , by contrast, is extremely large, and typically is many megabytes in size. Furthermore, the graphic data can only be edited upon a powerful image processing workstation of the type shown in , and requires a different set of skills to do so.","The metadata  is encoded in such a way as to enable construction of a user interface, within which a user may modify values, or have value hints supplied to them, in the form of default parameter values. By linking the unlocked parameter values with parameter characteristics, in the same file, a user is provided, not only with parameter access, but also with information about parameters, such as their description, and a default value. The use of the XML open format, ensures that simple editing instructions can be created for a variety of processing environments. For example, an editor can be encoded as an ActiveX\u2122 object for a Windows\u2122 operating system.","The designer of the graphic can determine what level of customisation the end user has access to. By selecting which parameters are locked, or left unlocked, the designer can ensure that end users are able to control as much of the animation as is appropriate to their needs, and not more. By restricting the interface possibilities in this way, the process of setting up an animation for a specific TV broadcast becomes greatly simplified. The editor, journalist or program maker, can concentrate on relevant characteristics, rather than being confronted with an enormous amount of information that is irrelevant for the finalisation of a television production.","Once metadata  has been generated for a news story, it is supplied to the television studio  for use in a broadcast. The television studio  shown in  is illustrated in  graphical rendering system comprises a processing system , a monitor , a broadcast monitor , a keyboard  and a mouse . The processing system  receives signals from a video camera . A newsreader  is located at a desk  in front of a blue screen backdrop . The processing system substitutes blue portions of the camera image with an artificial background. Background or foreground portions of the camera's image may be substituted for digitally generated image contents from an animation. During the news broadcast, an operator manually provides cues to the processing system  via the keyboard , in order to trigger the star of each new animation sequence as it is required for its associated news story. Alternatively, automatic cues may be provided via a studio network. Instructions for rendering an animation are loaded from the CD-R disc . Metadata on this disk is not usually used. Metadata is received instead, from the newsroom .","The workflow associated with an operator of the processing system  shown in  is detailed in FIG. . At step  the user switches on the system prior to broadcast. At step  the executable graphic file  is installed, either from the CD-R disc  or from the Internet. Alternatively the graphic file could be received from a local or networked hard disc drive. Also, in this step, metadata for each news item is loaded from the newsroom . At step  the executable graphic file  is executed, the operator inputs cue signals for each instantiated animation, and the live broadcast proceeds.","Throughout the news program, the processing system  generates digital animated images that are composited with signals from the camera . Most of the time, the only part of the camera image that is retained is that of the image of the newsreader herself. The monitor , shown in , provides a user interface for selecting cue points throughout the program, while the broadcast monitor shows the resulting image as the broadcast proceeds.","In an alternative embodiment, external broadcast video hardware is used to generate composite image signals from the graphics signals generated by processing system , and the video signals produced by the camera .","Screenshots of several sections of the news program are shown in  to . In  the main shot of the program is shown, including the newsreader  located centrally, with several graphical components  to  superimposed upon the image. The blue screen background  has been replaced by a more aesthetically pleasing background . Several of the graphical components ,  and  are animated, and change their appearance as the broadcast proceeds.",{"@attributes":{"id":"P-00077","num":"00077"},"figref":"FIG. 21","b":["2101","1804","1801"]},"A typical animation from an election news item is shown in , in which two animated three-dimensional bar graphs are rendered, against a backdrop of other graphical data. In , the animation resulting from the metafile shown in  is illustrated. This includes a pie chart , with a name  and labels  and  for each portion. Here it will be noted that many design details have been predetermined by the originator of the graphic data, such as the size and colour and overall appearance of the pie chart .","The unlocked parameters that were provided in the metadata  for editing, are only those that are minimally required for the construction of a news item. This minimises the complexity of generating an animation for a news story\u2014the same basic design can be reused whenever required. If, for example, the producer requires some inaccessible characteristic to be changed, this requirement is passed on to the animation design house , and new graphic data and executable graphic file  are produced.","The processing system  shown in  is a Silicon Graphics Onyx2\u2122 processing system, details available from http:\/\/www.sgi.com. The components of the processing system  are detailed in FIG. . The processing system contains eight main processing modules. Each module comprises four processors , ,  and . Each processor is a MIPS R12000 sixty-four bit processor. Each processor has an on-chip primary instruction and data cache, as well as a larger separate secondary cache circuit . Each processing module includes one gigabyte of main memory  and a switch .","The four processors , ,  and  are connected together in a symmetric multi-processing (SMP) array, and have equal access to the local memory . The main memories on each of the processing modules are connected to each other via the switches , . All the memory circuits of the modules are combined into a unified addressable space. However, when a processor requires access to an address in memory that is not local, this increases memory access time. This is known as a Non-Uniform Memory Architecture (NUMA). An operating system running on this type of architecture takes account of this non-uniformity of access times and has a process scheduling algorithm that seeks to localise memory access for a running process (or thread) within the same or nearby processing modules.","A total of thirty-two processors is provided in the processing system , and this provides sufficient processing power to render animations of considerable complexity, and to a high level of quality. The availability of this level of processing also ensures that animations will be rendered in real time. Complex designs can be created on processing systems of lower processing capacity, such as the processing system  shown in FIG. . However, in order to guarantee real time rendering, a more powerful processing system is typically used when generating animations for live broadcast.","In addition to the processing modules, the processing system  also includes a storage module , a graphics module  and an input output module . The storage module  includes a redundant array of inexpensive disks  and a CDROM drive . These are connected to a switch  via a SCSI interface . The graphics module  includes several graphics processing circuits and a switch . The graphics module supplies output video signals to the monitor , the broadcast preview monitor , and in digital form to the broadcast mixing and production stage of the television studio . The graphics module  also receives video signals from the camera , which are combined with animation data to generate the broadcast video signals. The input output module  facilitates Ethernet, mouse and keyboard connections. It is also able to receive serial data from the camera , defining camera pan, lens zoom and focus, and so on, for synchronising camera position and characteristics with possible virtual views created as part of an interactive animation, thereby providing a virtual studio. A virtual studio of this type is considered to be generated as a result of rendering an animation with the appropriate interactive characteristics. The input output module  includes a switch , to provide integration with the rest of the modules in the processing system .","In alternative embodiments other processing systems are used which have fewer processors than processing system . For example, in one embodiment a processing system is used which has four processors. However, the larger processing power of system  has benefits when dealing with the large amounts of data involved, at high speeds.","The contents of the main memory of the processing system shown in  are detailed in FIG. . An Irix operating system  provides common operating system utilities and scheduling for processes. Animation rendering instructions  perform rendering of the graphic data in real time. Graphic data  includes locked parameters  in binary format. Metadata  includes unlocked parameters  in ASCII format. The unlocked parameters are also stored in binary equivalent form at . At  several video frame buffers are provided to ensure efficient pipelining of rendering operations so as to exploit the full potential of the processing capacity of the processing system . Other data includes state data used by the instructions  and .","The step  of running an executable graphic file shown in , is detailed in FIG. . At step  data structures for each of several finished graphics in a broadcast are instantiated. As stated previously, each metafile has a line  which effectively instantiates a graphic with particular modifiable attributes as defined by the unlocked parameters in the metafile . At step  the next rundown is initialised before it is required, and begins waiting for its cue. As mentioned earlier, a rundown is defined by a sequence of graphics, and in the present embodiment, the rundown data also includes the identities of the metafiles which are to be referenced when rendering each graphic. At step  a question is asked as to whether the cue has been received. If not, this question is asked again. Eventually, once the cue has been received, control is directed to step . A cue may be in the form of a manual user operation, for example pressing a key on the keyboard , or remotely or automatically triggered using the MOS commands over the studio's Ethernet network. At step  the next animation in the sequence is rendered. At step  a question is asked as to whether the rundown is complete. If not, control is directed to step , and the next cue is awaited. When waiting for the next cue, it is likely that rendering will continue, perhaps indefinitely, until the next cue is received. At step , when the current rundown has completed, a question is asked at step  as to whether there is another rundown in the current program sequence. If so, control is directed to step . Alternatively, this completes the steps performed when running the executable graphic file .","The step of instantiating data structures  shown in , is detailed in FIG. . At step  the first metafile is selected. Steps  to  then analyse the selected metafile. At step  the ASCII encoded XML is parsed to identify the next parameter object. At step  the object is instantiated as binary data, for example, by assigning a binary numerical value to an unlocked parameter. Step  results in the translation of ASCII formatted unlocked parameters  into their binary equivalents , so that they can be directly accessed during the mathematical procedures used when rendering animated graphical components , , . At step  a question is asked as to whether there is any more XML left to parse in the current metafile. If so, control is directed to step , where the next parameter object is selected. Alternatively control is directed to step , where a question is asked as to whether another metafile is available for the current sequence of graphics that are to be rendered during the broadcast. If so, control is directed to step . Alternatively, this completes the sequence of steps required for instantiating data structures for each graphic.","The various levels of access to data defining an animation are summarised in FIG. . Graphic data  is defined by the designer of an animation, at a first level of access. This is a complex task, and requires the definition of many parameters. The designer designates certain parameters as being unlocked, and therefore editable by users at the second level of access. The designer may create an unlocked parameter whose modification results in a complex manipulation of several variables within an animation. Either way, the designer has the ability to control and select, not only the design of the animation, as encoded within the graphic data , but also the way in which users can interact with this animation at a second level of access, and set it up to produce customised versions of their own, each time the graphic data is used.","The metadata  describes only these unlocked parameters, and therefore makes it possible to modify animation characteristics extremely quickly at the second level of user access. The time and effort required to do this is much less than the effort required to define or even selectively modify the graphic data at the first level of user access.","A limited amount of data, referred to as rundown data  is received in order to define how the graphics should be brought on air. The rundown data includes the triggers, manual or automatic, that cause the animation to commence, information defining the sequence of graphics to be animated, along with details of which metafiles are to be used, and information defining the transitions between graphics.","In addition, the rundown data might also include triggers of when queries to database servers might be executed to ensure the timely retrieval from the database. The data stored in such a database may be generated at the TV studio or by compiling information received from viewers, for instance via the internet or a back channel. In such a case, the query for the database may be stored in a metafile, while the timing of when the query is executed is stored in the rundown.","The graphic data  may be considered as defining the first level of user access. The metadata may be considered as defining the second level of user access. The rundown data is the final level, where minimal additional data is required in order to synchronise the animation with events and information that occur unpredictably during animation execution."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"P-00012","num":"00012"},"figref":"FIG. 1"},{"@attributes":{"id":"P-00013","num":"00013"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"P-00014","num":"00014"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"P-00015","num":"00015"},"figref":["FIG. 4","FIG. 2","FIG. 3"]},{"@attributes":{"id":"P-00016","num":"00016"},"figref":["FIG. 5","FIG. 2"]},{"@attributes":{"id":"P-00017","num":"00017"},"figref":["FIG. 6","FIG. 5","FIG. 3"]},{"@attributes":{"id":"P-00018","num":"00018"},"figref":["FIG. 7","FIG. 3","FIG. 3"],"b":"6"},{"@attributes":{"id":"P-00019","num":"00019"},"figref":["FIG. 8","FIG. 3"]},{"@attributes":{"id":"P-00020","num":"00020"},"figref":["FIGS. 9 and 10","FIG. 6"]},{"@attributes":{"id":"P-00021","num":"00021"},"figref":["FIG. 11","FIG. 1"]},{"@attributes":{"id":"P-00022","num":"00022"},"figref":["FIG. 12","FIG. 11"]},{"@attributes":{"id":"P-00023","num":"00023"},"figref":["FIG. 13","FIG. 11","FIG. 12"]},{"@attributes":{"id":"P-00024","num":"00024"},"figref":["FIG. 14","FIG. 11"]},{"@attributes":{"id":"P-00025","num":"00025"},"figref":["FIG. 15","FIG. 14"]},{"@attributes":{"id":"P-00026","num":"00026"},"figref":["FIG. 16","FIG. 12"]},{"@attributes":{"id":"P-00027","num":"00027"},"figref":["FIG. 17","FIG. 12"]},{"@attributes":{"id":"P-00028","num":"00028"},"figref":["FIG. 18","FIG. 1"]},{"@attributes":{"id":"P-00029","num":"00029"},"figref":["FIG. 19","FIG. 18"]},{"@attributes":{"id":"P-00030","num":"00030"},"figref":["FIGS. 20","FIG. 18"],"b":"23"},{"@attributes":{"id":"P-00031","num":"00031"},"figref":["FIG. 24","FIG. 18"]},{"@attributes":{"id":"P-00032","num":"00032"},"figref":["FIG. 25","FIG. 24"]},{"@attributes":{"id":"P-00033","num":"00033"},"figref":["FIG. 26","FIG. 19"]},{"@attributes":{"id":"P-00034","num":"00034"},"figref":["FIG. 27","FIG. 26"]},{"@attributes":{"id":"P-00035","num":"00035"},"figref":"FIG. 28"}]},"DETDESC":[{},{}]}
