---
title: Method for telephony client synchronization in telephone virtualization
abstract: A method for synchronizing telephony applications running on different system software images is provided. When a telecommunications session is conducted by a first telephony application, the first telephony application controls the state of the telecommunications session through a signaling protocol stack executing on the same system software image as the first telephony application (or on a virtualization layer). The present invention allows the sharing of the signaling protocol stack by multiple telephony applications running on different system software images.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09143597&OS=09143597&RS=09143597
owner: Avaya Inc.
number: 09143597
owner_city: Basking Ridge
owner_country: US
publication_date: 20090921
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention relates to telecommunications in general, and, more particularly, to telephony applications.","Telephone receivers differ in their features. Some manufacturers produce telephones suited for business users that provide robust productivity applications, such as conference schedulers and email clients. Other manufacturers make telephones suited for entertainment that come with entertainment applications, such as video games. When a user wants to buy a telephone receiver, he or she has to choose between having either the productivity applications provided by one manufacturer or the entertainment applications provided by another.","The need to make such choice can be avoided by using hardware virtualization. Both the operating system of the business telephone and the operating system of the entertainment telephone can execute on the same device concurrently, if hardware virtualization is used. This way, when at work, the user can access the productivity applications needed for his or her work on the \u201cbusiness operating system.\u201d And when at home, the user can use the entertainment applications running on the \u201centertainment operating system.\u201d","However, a significant drawback of present virtualization techniques is that virtualized telephone receivers cannot switch between operating systems seamlessly. If the user receives a business-related call at home, the user will not be able to answer the call and then switch to the business operating system without terminating the call first. The connection has to be terminated because, in general, virtualized operating systems running in a virtualized environment are isolated from each other.","In order for the telephony application executing on the business operating system to be able to take control over the telephone call, it needs at least some information about the phone call state, such as identity of the far-end party, media type used for the phone call (e.g. video, voice, etc.), and so forth. This information, while readily accessible from the entertainment operating system, is not accessible from the business operating system because the two operating systems are isolated. So, the telephony application executing on the business operating system cannot access the needed state information and it cannot take control over the phone call.","Therefore, a need exists for a method that would allow the sharing of information about the state of a telecommunications session across a plurality of system software images running on the same device.","The present invention answers this need by providing a method for synchronizing telephony applications running on different system software images. When a telecommunications session is conducted by a first telephony application, the first telephony application typically controls the state of the telecommunications session through a signaling protocol stack executing on the same system software image as the first telephony application (or on a virtualization layer). The present invention allows the sharing of the signaling protocol stack by multiple telephony applications running on different system software images. Importantly, in the present invention the first and second telephony applications need not know about each other and need not be modified in order to share the signaling protocol stack.","In accordance with one embodiment of the present invention, a telecommunications session is conducted by a first telephony application and a far-end party. During the course of the telecommunications session, messages between the first telephony application and a signaling protocol stack are broadcast on a message bus shared by the signaling protocol stack, first telephony application, and a second telephony application. Because the second telephony application is executing on a different system software image than both the first telephony application and the signaling protocol stack, a translator is utilized to translate the messages broadcast by the first telephony application and the signaling protocol stack.","The translator translates the messages to a form readable by the second telephony application. It receives messages broadcast over the message bus, by either the first telephony application or the signaling stack, translates them, and forwards the translated messages to the second telephony application which processes the translated messages in order to maintain a record of the state of the telecommunications session. Maintaining the state record allows the second telephony application to take control of the ongoing telecommunications session when the user decides to switch to the system software image in which the second telephony application is running.","This arrangement is analogous to a setting in which a pilot and a co-pilot fly an aircraft. In this setting, the pilot controls the state of the aircraft while the co-pilot observes and remains prepared to take control over the aircraft when need becomes. In a similar fashion, the second telephony application observes at least some actions taken by the first telephony application and the signaling protocol stack during the conduct of a telecommunications session. In doing so, the second telephony application keeps track of the state of the telecommunications session. It remains prepared to take control when the user decides to switch the active system software running on his telecommunications terminal and start using the second telephony application (which is running on a different system software image) for the conduct of the telecommunications session.","Furthermore, after the second telephony application takes control of the telecommunications session, it channels messages intended for the signaling stack through the translator. The translator translates the messages and broadcasts them over the message bus. The signaling stack receives the messages sent over the message bus by the translator, processes them, and changes the state of the telecommunications session accordingly.","In another illustrative embodiment of the present invention, the first telephony application and second telephony application are running within the same system software image. A translator and a message bus are used in the same way as described above in order to share a single signaling protocol stack.","The following disclosure teaches examples of the embodiments and their operation.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1","b":["101","140","1","2","3","110","120","130"],"i":["i","i. "]},"User  is a natural person using terminal  in well known fashion.","Terminal  is a desk set telephone receiver capable of running two or more operating systems in a virtualized fashion. In accordance with the illustrative embodiment of the present invention, terminal  is capable of both voice and video telecommunications, but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which terminal  has only a voice capability. Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which terminal  is another type of telecommunications device (e.g. cellular telephone, 2-way radio, portable digital assistant, soft phone, etc.).","Telecommunications network  transports signals between terminal  and terminals -. In accordance with the illustrative embodiment of the present invention, telecommunications network  is the Internet, but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telecommunications network  is any type of telecommunications network (e.g. local area network, the Public Switched Telephone Network, Sonet, ATM, cellular network, etc.)","Terminal -is a telephone receiver capable of conducting telecommunications sessions with terminal . In accordance with the illustrative embodiment of the present invention, terminal  is capable of conducting both audio and video telephone calls but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which terminal  has only a voice capability. Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which terminal  is another type of telecommunications device (e.g. cellular telephone, 2-way radio, portable digital assistant, soft phone, desktop computer, etc.).","User -is a natural person using terminal -in well known fashion.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2","b":["230","240","220","210","232","242","233","244"]},"Hardware  is the electronic components that comprise terminal , such as, for example, and without limitation, processor (single-core or multi-core), memory, transceiver, network interface, display, sound interface, video interface, etc. Hardware  is capable of executing system software and one or more telephony applications. It will be clear to those skilled in the art how to make and use hardware .","Virtualization Layer  is a software layer that facilitates the sharing of the resources of hardware  by multiple system software images. In accordance with the illustrative embodiment of the present invention, virtualization layer  is an OKL4 microkernel, but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which virtualization layer  is any other Type 1 hypervisor (e.g. Xen\u2122, VMware ESX Server\u2122, etc.) or any other hosted virtual machine (e.g. QEMU\u2122, VMware Workstation\u2122, etc.).","System Software  is an image of the Android operating system that is running on top of virtualization layer . It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which System Software  is any type of system software, firmware, or software platform that is capable of executing one or more software applications, such as, for example, and without limitation, Nokia Series 40 Platform\u2122, Nokia Series 60 Platform\u2122, Embedded Linux, Symbian OS\u2122, Linux, BlackBerry OS\u2122, etc. In accordance with the illustrative embodiment of the present invention, both telephony application  and signaling protocol stack  are executing on system software .","Signaling protocol stack  is a Session Initiation Protocol (SIP) stack. The signaling protocol stack is configured to register one or more user agents on a Session Initiation Protocol (SIP) network and forward incoming messages from telecommunications network  to telephony application  and\/or telephony application . Furthermore, signaling protocol stack  is configured to route outgoing signaling messages from telephony application  and\/or telephony application  to telecommunications network . Those skilled in the art will recognize that signaling protocol stack  provides telephony applications  and  with an application programming interface (API) for the creating and transmitting of Session Initiation Protocol (SIP) messages. Moreover, those skilled in the art will recognize that signaling protocol stack , is also capable of maintaining an information record concerning the state of a telecommunications session, such as, for example, and without limitation, callback function (or listener) registration, far-end party addresses, application identification numbers, etc.","Although, in accordance with the illustrative embodiment of the present invention, signaling protocol stack  uses the Session Initiation Protocol (SIP), it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which signaling protocol stack  uses any other communications protocol, such as, and without limitation, H.323, P2P-SIP, Skype, and so forth. Furthermore, in accordance with the illustrative embodiment of the present invention, signaling protocol stack  is running on system software , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which signaling protocol stack  is executing on system software , virtualization layer , or system software that is host to virtualization layer .","Telephony application  is a software application for conducting telephone conversations. In accordance with the illustrative embodiment of the present invention, telephony application  is compatible with the application programming interface (API) provided by signaling protocol stack . It is capable of reading and processing messages sent by the signaling protocol stack via message bus , reading and processing data structures and variables indicated by the messages, as well as executing any callback (or listener) functions identified by the messages. It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telephony application  is any type of telecommunications application (e.g. instant messenger, video phone, audio enabled instant messenger, Skype, Google Talk, Yahoo Instant Messenger, etc.).","System software  is an image of the Symbian\u2122 operating system that is running on top of virtualization layer  concurrently with system software . It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which System Software  is any type of system software, firmware, or software platform that is capable of executing one or more software applications, such as, for example, and without limitation Nokia Series 40 Platform\u2122, Nokia Series 60 Platform\u2122, Embedded Linux, Symbian OS\u2122, Linux, BlackBerry OS\u2122, etc. In accordance with the illustrative embodiment of the present invention, both telephony application  and translator  are executing on system software .","Telephony application  is a software application for conducting telephone conversations. In accordance with the illustrative embodiment of the present invention, telephony application  is different software from telephony application , however, it will be clear to those skilled in the art, after reading this disclosure, in which telephony applications  and  are the same software. Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telephony application  is any type of telecommunications application (e.g. instant messenger, a video phone, audio enabled instant messenger, Skype\u2122, Google Talk\u2122, Yahoo Instant Messenger\u2122, etc.).","In contrast to telephony application , telephony application  does not natively support signaling protocol stack . Telephony application  is not capable of reading and processing messages sent by the signaling protocol stack via message bus , reading and processing data structures and variables indicated by those messages, as well as executing one or more callback functions identified by those messages. In other words, telephony application  does not support the application programming interface (API) provided by signaling protocol stack . And for this reason, telephony application  uses translator  to adapt messages of which telephony application  is either the producer or the recipient to a format compatible with either the application programming interface (API) of the signaling protocol stack or the application programming interface (API) supported by telephony application .","Translator  is a software wrapper that acts as an adapter between telephony application  and signaling protocol stack  and between telephony application  and telephony application . Translator  is configured to act as a virtual device driver and it allows telephony application  to utilize the functionality of signaling protocol stack . It provides an Application Programming Interface (API) which telephony application  calls when it needs access to the functionality of signaling protocol stack . When called by telephony application , translator  translates outgoing messages from telephony application  into a form that is readable by signaling protocol stack  and telephony application  before broadcasting the translated messages over message bus . Furthermore, translator  receives messages broadcast on message bus , translates them into a form readable by telephony application , and forwards the translated messages to telephony application . And still furthermore, translator  translates data that is forwarded by telephony application  to a form that is readable by telephony application  and signaling protocol stack , as well as it translates data broadcast by telephony application  and signaling protocol stack  to a form that is readable by telephony application .","Stated succinctly, translator  provides functionality similar to other software wrappers known in the art. But, in accordance with the illustrative embodiment of the present invention, translator  is used to connect a telephony application executing on first system software with a signaling protocol stack executing on second system software via a message bus. In accordance with the illustrative embodiment of the present invention, translator  is running on system software , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which translator  is executing on virtualization layer , or system software that is host to virtualization layer .",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 3","b":["232","233","242","244","310"]},"Message bus  is a software bus which telephony application , telephony application , and signaling protocol stack  use to exchange information with the illusion of broadcasting this information. In accordance with the illustrative embodiment of the present invention, when one of the telephony applications wants to call a function provided by the application programming interface (API) of signaling protocol stack , it places a message on the bus identifying the function and indicating the function parameters. The broadcast message is received by both signaling protocol stack  and the other telephony application allowing the two telephony applications to maintain a synchronized state. In accordance with the illustrative embodiment of the present invention, message bus  is implemented through mapping messages from one of signaling protocol stack , telephony application , and telephony application  to shared memory accessible by all three entities. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the message bus is implemented through a network interface and\/or network protocol, such as, and without limitation, Internet Protocol, Asynchronous Transfer Mode Protocol, Hypertext Transfer Protocol, Simple Object Access Protocol, etc.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 4","FIG. 4"]},"At task , telephony application  initiates a telecommunications session with user -. Task  is further described in the discussions with respect to  and .","At task , telephony application  changes the state of the telecommunications session initiated at task . In accordance with the illustrative embodiment of the present invention, telephony application  joins user - to the telecommunications session, but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the change of state is any change of state permitted by the telecommunications protocol used for the telecommunications session. Task  is executed in identical fashion to task \u2014namely, through the exchange of messages, via message bus , between telephony application  and signaling protocol stack  all while telephony application also receives the same messages through translator  and maintains a record of the telecommunications session state in the manner described in the discussion with respect to .","At task , telecommunications terminal  switches to running system software  as its active software environment. When system software  is made the active software environment, its user interface becomes visible on the display of terminal . Furthermore, those skilled in the art will recognize, after reading this disclosure, that in situations in which virtualization layer  runs on top of a native operating system, system software  will be an application executing in the native operating system instead of a separate software environment. Correspondingly, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which, at task , telecommunications terminal  makes system software  the active window that is open in the native operating system.","Furthermore, those skilled in the art will recognize, after reading this disclosure, that in situations in which virtualization layer  runs on top of a native operating system, system software  will be an application executing in the native operating system instead of a separate software environment. Correspondingly, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which at task , telecommunications terminal  activates system software  (e.g. makes system software  the active window that is open in the native operating system), instead of selecting it as its active software environment.","At task , telephony application  changes the state of the telecommunications session without interrupting the telecommunications session. In accordance with the illustrative embodiment of the present invention, telephony application  joins user - to the telecommunications session, but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the change of the state is any change permitted by the telecommunications protocol used. Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which, at task , telephony application  answers an invitation to participate in a telecommunications session which has been received at terminal  while system software  is the active software environment running on terminal . The execution of task  is described in further detail in the discussions with respect to  and .",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 5A","FIG. 5A"],"b":["232","233","410"]},"At task -A, telephony application  and signaling protocol stack  exchange messages via message bus  in order start the telecommunications session. The messages are used to initialize signaling protocol stack  and to instruct it to transmit appropriate Session Initiation Protocol (SIP) signaling to the far-end party. Those skilled in the art will recognize, after reading this disclosure, that the messages exchanged via message bus  indicate specific functions provided by either of signaling protocol stack  and telephony application  and\/or data and data structures (e.g. function parameters, function return values, etc.). Upon receipt of the messages, the indicated functions are executed and\/or the data is processed by the message recipients. Furthermore, in accordance with the illustrative embodiment of the present invention, when messages are broadcast on message bus , they are also received by telephony application  which processes the messages in order to maintain a record of the state of the telecommunications session.","At task -A, signaling protocol stack  transmits and receives the Session Initiation Protocol (SIP) signaling necessary to start the telecommunications session over telecommunications network . It will be clear to those skilled in the art how to execute task -A.","At task -A, the telephone call media is encoded, decoded, and reproduced. In accordance with the illustrative embodiment of the present invention, hardware  detects that incoming voice packets are received from network . The received packets are placed in a buffer and decoded into raw audio data. The raw audio data is sent to the audio interface of terminal  for reproduction. In accordance with the illustrative embodiment of the present invention, the media decoding is accomplished by hardware , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the encoding is performed by a coder-decoder program (a.k.a. codec) located in a higher software layer, such as, for example, and without limitation, virtualization layer , and system software  or by telephony application .",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 5B","FIG. 5B","FIG. 5A","FIG. 5B"],"b":["242","244","410"]},"At task -B, translator  receives the messages broadcast in the execution of task -A. Although, only one message is discussed with respect to the illustrative embodiment of the present invention, those skilled in the art will appreciate that a plurality of messages may be exchanged between telephony application  and signaling protocol stack  in the course of initiating the telecommunications session. In accordance with the illustrative embodiment of the present invention, the message received is a call to a callback function of telephony application  indicating that a new incoming Session Initiation Protocol (SIP) message has been received by signaling protocol stack . It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the message received over message bus  performs other functions, such as, for example, and without limitation, to carry the return value for a function call made by the application, and so forth. Furthermore, in accordance with the illustrative embodiment of the present invention, the source of the received message is signaling protocol stack , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the source of the message is telephony application .","At task -B, translator  translates the message received at task -B into a form that is readable by telephony application . In accordance with the illustrative embodiment of the present invention, translator  determines that the message received at task -B indicates a call to a callback function of telephony application . Then, the translator extracts the payload of the function call, which is a data structure representing the Session Initiation Protocol (SIP) message, and converts the data structure to a form that is readable by telephony application . In accordance with the illustrative embodiment of the present invention, the source of the translated message is signaling protocol stack , but it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which translator  translates, in a similar fashion, messages broadcast by telephony application .","At task -B, translator  forwards the translated message to telephony application . In accordance with the illustrative embodiment of the present invention, translator  forwards the converted data structure indicating the Session Initiation Protocol (SIP) message to telephony application  by calling a callback function which telephony application  has registered with translator . However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention, in which translator  forwards the message by broadcasting it over message bus , placing it in shared memory, etc. Furthermore, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which translator  keeps a record of the received and translated messages and delivers information from that record to telephony application  only upon request.","At task -B, telephony application  receives the messages translated at task -B and maintains a record of the state of the telecommunications session. In accordance with the illustrative embodiment of the present invention, the state record comprises far-end party identification, media type of the telecommunications session (e.g. voice, video, etc.), names of call-back functions registered with SIP stack , etc. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the state record comprises any item of information related to the telecommunications session. It will be clear to those skilled in the art how to determine what information is necessary to be included in the state record.","It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which telephony application  maintains a record of one or more invitations to participate in telecommunications sessions that are received by signaling protocol stack  while system software  is the active software environment of terminal . In accordance with the alternative embodiments of the present invention, the record of the invitations comprises information that is needed by telephony application  in order to answer the invitations, such as, for example, and without limitation, a uniform resource identifier (URI) for the sender of the invitation, media capabilities of the sender (e.g. voice, video, etc.), so that telephony application  can answer the invitations if need arises. It will be clear to those skilled in the art how to determine what information is necessary to be included in the state record.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 6A","FIG. 6A"],"b":["242","244","440"]},"At task -A, telephony application  and signaling protocol stack  exchange messages, via message bus , in order to join user - to the telecommunications session. The messages are used to instruct signaling protocol stack  to exchange the appropriate Session Initiation Protocol (SIP) signaling with user - over telecommunications network . Those skilled in the art will recognize, after reading this disclosure, that the messages exchanged via message bus  indicate specific functions provided by either of signaling protocol stack  and one or more of the telephony applications, and\/or data and data structures (e.g. function parameters, function return values, etc.). Upon receipt of the messages, the indicated functions are executed and\/or the data is processed by the message recipients. Furthermore, in accordance with the illustrative embodiment of the present invention, when messages are broadcast on message bus , they are also received by telephony application  which processes the messages in order to maintain a record of the state of the telecommunications session.","At task -A, signaling protocol stack  transmits and receives over telecommunications network  the Session Initiation Protocol (SIP) signaling necessary to join user - to the telecommunications session. It will be clear to those skilled in the art how to execute task -A.","At task -A, the telephone call media is encoded, decoded, and reproduced. In accordance with the illustrative embodiment of the present invention, hardware  detects that incoming voice packets are received from network . The received packets are placed in a buffer and decoded into raw audio data. The raw audio data is sent to the audio interface of terminal  for reproduction. In accordance with the illustrative embodiment of the present invention, the media decoding is accomplished by hardware . However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the encoding is performed by a coder-decoder program (a.k.a. codec) located in a higher software layer, such as, for example, and without limitation, virtualization layer , and system software  or by telephony application .","Specifically, in the illustrative embodiments of the present invention in which the decoding of the incoming voice packets is performed by a coder-decoder program (a.k.a. codec) located in system software , a second coder-decoder program (a.k.a. codec), running in system software , is stared when system software  is switched to being the active software environment of terminal . The second coder-decoder program (a.k.a. codec) is configured to receive data from the buffer where the received packets are placed. And then, the second coder-decoder program (a.k.a. codec) is used to decode the media received by terminal .",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 6B","FIG. 6B","FIG. 6A","FIG. 6B"],"b":["232","440"]},"At task -B, telephony application  receives the messages broadcast by translator  at task -A.","At task -B, telephony application  maintains a record of the state of the telecommunications session. In accordance with the illustrative embodiment of the present invention, the state record comprises far-end party identification, media type of the telecommunications session (e.g. voice, video, etc.), number of parties engaged in the telecommunications session and so forth. However, it will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the state record comprises any item of information related to the telecommunications session. It will be clear to those skilled in the art how to determine what information is necessary to be included in the state record.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 7A","FIG. 7A"],"b":["610","242"]},"At task -A, telephony application  forwards a message to translator  instructing it to join user - to the telecommunications session. In accordance with the illustrative embodiment of the present invention, telephony application  calls the application programming interface (API) provided by translator  in order to utilize the functionality of signaling protocol stack . Although, only one message is discussed with respect to the illustrative embodiment of the present invention, those skilled in the art will appreciate that a plurality of messages may be sent by telephony application  in the course of joining user - to the telecommunications session. In accordance with the illustrative embodiment of the present invention, telephony application  calls the application programming interface (API) of translator  directly, but those skilled in the art will appreciate, after reading this disclosure, that the call can be accomplished via message bus , as well.","At task -A, translator  receives and translates the message forwarded by telephony application  at task -A. In accordance with the illustrative embodiment of the present invention, translator  determines that the message received indicates a call to a function and it also determines that the message seeks a change of state of the telecommunications session which can be accomplished by signaling protocol . Then, the translator extracts the payload of the function call, translates it to a form readable by signaling protocol stack , and makes the necessary calls to the application programming interface (API) of signaling protocol stack  in order to achieve the desired change of state (which is joining user -).","At task -A, translator  broadcasts a message indicating the call to signaling protocol stack  and the translated payload via message bus .",{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 7B","FIG. 7B"],"b":["610","310","242"]},"At task -B, virtual device driver  receives the messages transmitted by signaling protocol stack  during the execution of task -A. Although, only one message is discussed with respect to the illustrative embodiment of the present invention, those skilled in the art will appreciate that a plurality of messages may be received by telephony application  in the course of joining user - to the telecommunications session. In accordance with the illustrative embodiment of the present invention, the message is a call to a callback function provided by one of the telephony applications indicating that a new incoming Session Initiation Protocol (SIP) message has been received by signaling protocol stack  following the transmission of an INVITE Session Initiation Protocol (SIP) message by signaling protocol stack  inviting user - to join the telecommunications session. It will be clear to those skilled in the art, after reading this disclosure, how to make and use alternative embodiments of the present invention in which the message received over message bus  performs other functions, such as, for example, and without limitation, to carry the return value of function calls and so forth.","At task -B, translator  translates the message received at task -B into a form that is readable by telephony application . In accordance with the illustrative embodiment of the present invention, translator  determines that the message received indicates a call to a callback function. Then, the translator extracts the payload of the function call, which is a data structure representing the Session Initiation Protocol (SIP) message, and converts the data structure to a form that is readable by telephony application .","At task -B, translator  forwards the translated message to telephony application  in the fashion described in the discussion with respect to task -B."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5A","b":["232","233","420"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5B","b":["242","244","420"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6A","b":["242","244","440"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6B","b":["232","440"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7A","b":["610","242"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7B","b":["610","310","242"]}]},"DETDESC":[{},{}]}
