---
title: Providing expressive user interaction with a multimodal application
abstract: Methods, apparatus, and products are disclosed for providing expressive user interaction with a multimodal application, the multimodal application operating in a multimodal browser on a multimodal device supporting multiple modes of user interaction including a voice mode and one or more non-voice modes, the multimodal application operatively coupled to a speech engine through a VoiceXML interpreter, including: receiving, by the multimodal browser, user input from a user through a particular mode of user interaction; determining, by the multimodal browser, user output for the user in dependence upon the user input; determining, by the multimodal browser, a style for the user output in dependence upon the user input, the style specifying expressive output characteristics for at least one other mode of user interaction; and rendering, by the multimodal browser, the user output in dependence upon the style.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08725513&OS=08725513&RS=08725513
owner: Nuance Communications, Inc.
number: 08725513
owner_city: Burlington
owner_country: US
publication_date: 20070412
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["1. Field of the Invention","The field of the invention is data processing, or, more specifically, methods, apparatus, and products for providing expressive user interaction with a multimodal application.","2. Description of Related Art","User interaction with applications running on small devices through a keyboard or stylus has become increasingly limited and cumbersome as those devices have become increasingly smaller. In particular, small handheld devices like mobile phones and PDAs serve many functions and contain sufficient processing power to support user interaction through multimodal access, that is, by interaction in non-voice modes as well as voice mode. Devices which support multimodal access combine multiple user input modes or channels in the same interaction allowing a user to interact with the applications on the device simultaneously through multiple input modes or channels. The methods of input include speech recognition, keyboard, touch screen, stylus, mouse, handwriting, and others. Multimodal input often makes using a small device easier.","Multimodal applications are often formed by sets of markup documents served up by web servers for display on multimodal browsers. A \u2018multimodal browser,\u2019 as the term is used in this specification, generally means a web browser capable of receiving multimodal input and interacting with users with multimodal output, where modes of the multimodal input and output include at least a speech mode. Multimodal browsers typically render web pages written in XHTML+Voice (\u2018X+V\u2019). X+V provides a markup language that enables users to interact with an multimodal application often running on a server through spoken dialog in addition to traditional means of input such as keyboard strokes and mouse pointer action. Visual markup tells a multimodal browser what the user interface is look like and how it is to behave when the user types, points, or clicks. Similarly, voice markup tells a multimodal browser what to do when the user speaks to it. For visual markup, the multimodal browser uses a graphics engine; for voice markup, the multimodal browser uses a speech engine. X+V adds spoken interaction to standard web content by integrating XHTML (eXtensible Hypertext Markup Language) and speech recognition vocabularies supported by VoiceXML. For visual markup, X+V includes the XHTML standard. For voice markup, X+V includes a subset of VoiceXML. For synchronizing the VoiceXML elements with corresponding visual interface elements, X+V uses events. XHTML includes voice modules that support speech synthesis, speech dialogs, command and control, and speech grammars. Voice handlers can be attached to XHTML elements and respond to specific events. Voice interaction features are integrated with XHTML and can consequently be used directly within XHTML content.","In addition to X+V, multimodal applications also may be implemented with Speech Application Tags (\u2018SALT\u2019). SALT is a markup language developed by the Salt Forum. Both X+V and SALT are markup languages for creating applications that use voice input\/speech recognition and voice output\/speech synthesis. Both SALT applications and X+V applications use underlying speech recognition and synthesis technologies or \u2018speech engines\u2019 to do the work of recognizing and generating human speech. As markup languages, both X+V and SALT provide markup-based programming environments for using speech engines in an application's user interface. Both languages have language elements, markup tags, that specify what the speech-recognition engine should listen for and what the synthesis engine should \u2018say.\u2019 Whereas X+V combines XHTML, VoiceXML, and the XML Events standard to create multimodal applications, SALT does not provide a standard visual markup language or eventing model. Rather, it is a low-level set of tags for specifying voice interaction that can be embedded into other environments. In addition to X+V and SALT, multimodal applications may be implemented in Java with a Java speech framework, in C++, for example, and with other technologies and in other environments as well.","As mentioned above, current multimodal applications provide user interaction with a multimodal device through a variety of modalities. For example, a multimodal application may provide user interaction through a voice mode using a speaker and a microphone or through a visual mode using a graphical user interface. Within each mode of user interaction, a multimodal application may vary the expressiveness of the interaction with the user. For example, within the voice mode of user interaction, the multimodal application may use a strong, confident voice to prompt a user for input and use a meek, more hesitant voice when requesting the user to clarity the response. Within the visual mode of user interaction, the multimodal application may use normal text on a graphical user interface to prompt a user for input and use a bold, red text to indicate that the user needs to provide a more detailed response. The drawback to current multimodal applications, however, is that expressive user interaction is not typically synchronized across multiple modes of user interaction. That is, input provided in a one mode of user interaction does not affect the expressiveness of user interaction in other modes of user interaction. As such, readers will appreciates that room for improvement exists in providing expressive user interaction with a multimodal application.","Methods, apparatus, and products are disclosed for providing expressive user interaction with a multimodal application, the multimodal application operating in a multimodal browser on a multimodal device supporting multiple modes of user interaction including a voice mode and one or more non-voice modes, the multimodal application operatively coupled to a speech engine through a VoiceXML interpreter, including: receiving, by the multimodal browser, user input from a user through a particular mode of user interaction; determining, by the multimodal browser, user output for the user in dependence upon the user input; determining, by the multimodal browser, a style for the user output in dependence upon the user input, the style specifying expressive output characteristics for at least one other mode of user interaction; and rendering, by the multimodal browser, the user output in dependence upon the style.","The foregoing and other objects, features and advantages of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of exemplary embodiments of the invention.","Exemplary methods, apparatus, and products for providing expressive user interaction with a multimodal application according to embodiments of the present invention are described with reference to the accompanying drawings, beginning with .",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","b":"195"},"Providing expressive user interaction with a multimodal application in this example is implemented with a multimodal application () operating in a multimodal browser () on a multimodal device (). The multimodal application () of  is composed of at least one X+V page (). The multimodal device () of  supports multiple modes of interaction including a voice mode and one or more non-voice modes of user interaction with the multimodal application (). The voice mode is represented here with audio output of voice prompts and responses () from the multimodal devices and audio input of speech for recognition () from a user (). Non-voice modes are represented by input\/output devices such as keyboards and display screens on the multimodal devices (). The multimodal application () is operatively coupled () to a speech engine () through a VoiceXML interpreter (). The operative coupling may be implemented with an application programming interface (\u2018API\u2019), a voice service module, or a VOIP connection as explained more detail below.","In the exemplary system of , the multimodal browser () provides an execution environment for the multimodal application (). The multimodal browser () of  includes computer program instructions configured to provide expressive user interaction with a multimodal application () according to embodiments of the present invention. The multimodal browser () of  operates generally for providing expressive user interaction with a multimodal application () according to embodiments of the present invention by: receiving user input from a user through a particular mode of user interaction; determining user output for the user in dependence upon the user input; determining a style for the user output in dependence upon the user input; and rendering the user output in dependence upon the style.","The style for the user output specifies expressive output characteristics for at least one other mode of user interaction than the mode of user interaction through which the multimodal browser received the user input. For example, if the multimodal browser received the user input through a voice mode using a microphone, then the style for the user output may specify expressive output characteristics for a visual mode through a graphical user interface. Similarly, if the multimodal browser received the user input through a visual mode using a graphical user interface, then the style for the user output may specify expressive output characteristics for a voice mode through a speaker. Specifying expressive output characteristics for at least one other mode of user interaction advantageous allows the multimodal browser to provide expressive user interaction with a multimodal application using a mode other than the mode of user interaction through which the multimodal browser received the user input.","To support the multimodal browser () in processing the multimodal application (), the system of  includes a VoiceXML interpreter (). The VoiceXML interpreter () is a software module of computer program instructions that accepts voice dialog instructions and other data from the multimodal browser () for processing. The voice dialog and other data processed by the VoiceXML interpreter () are specified in the multimodal application (), typically in the form of a VoiceXML <form> element. The voice dialog instructions include one or more grammars, data input elements, event handlers, styles, and so on, that advise the VoiceXML interpreter () how to administer voice input from a user and voice prompts and responses to be presented to a user. The VoiceXML interpreter () administers such dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm (\u2018FIA\u2019).","As mentioned above, the VoiceXML interpreter () of  processes voice dialog instructions that include one or more grammars. A grammar communicates to the speech engine () or the VoiceXML interpreter () the words and sequences of words that currently may be recognized. In the example of , a grammar includes grammar rules that advise a speech engine or a voice interpreter which words and word sequences presently can be recognized. Grammars for use according to embodiments of the present invention may be expressed in any format supported by a speech engine, including, for example, the Java Speech Grammar Format (\u2018JSGF\u2019), the format of the W3C Speech Recognition Grammar Specification (\u2018SRGS\u2019), the Augmented Backus-Naur Format (\u2018ABNF\u2019) from the IETF's RFC2234, in the form of a stochastic grammar as described in the W3C's Stochastic Language Models (N-Gram) Specification, and in other grammar formats as may occur to those of skill in the art. Grammars typically operate as elements of dialogs, such as, for example, a VoiceXML <menu> or an X+V<form>. A grammar's definition may be expressed in-line in a dialog. Or the grammar may be implemented externally in a separate grammar document and referenced from with a dialog with a URI. Here is an example of a grammar expressed in JSFG:",{"@attributes":{"id":"p-0024","num":"0023"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<grammar scope=\u201cdialog\u201d ><![CDATA]"},{"entry":"\u2003\u2003#JSGF V1.0;"},{"entry":"\u2003\u2003grammar command;"},{"entry":"\u2003\u2003<command> = [remind me to] call | phone | telephone <name>"},{"entry":"\u2003\u2003<when>;"},{"entry":"\u2003\u2003<name> = bob | martha | joe | pete | chris | john | artoush | tom;"},{"entry":"\u2003\u2003<when> = today | this afternoon | tomorrow | next week;"},{"entry":"\u2003\u2003]]>"},{"entry":"<\/grammar>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In this example, the elements named <command>, <name>, and <when> are rules of the grammar. Rules are a combination of a rulename and an expansion of a rule that advises a speech engine or a VoiceXML interpreter which words presently can be recognized. In the example above, rule expansions includes conjunction and disjunction, and the vertical bars \u2018|\u2019 mean \u2018or.\u2019 A speech engine or a VoiceXML interpreter processes the rules in sequence, first <command>, then <name>, then <when>. The <command> rule accepts for recognition \u2018call\u2019 or \u2018phone\u2019 or \u2018telephone\u2019 plus, that is, in conjunction with, whatever is returned from the <name> rule and the <when> rule. The <name> rule accepts \u2018bob\u2019 or \u2018martha\u2019 or \u2018joe\u2019 or \u2018pete\u2019 or \u2018chris\u2019 or \u2018john\u2019 or \u2018artoush\u2019 or \u2018tom,\u2019 and the <when> rule accepts \u2018today\u2019 or \u2018this afternoon\u2019 or \u2018tomorrow\u2019 or \u2018next week.\u2019 The command grammar as a whole matches utterances like these, for example:\n\n","A multimodal device on which a multimodal application operates is an automated device, that is, automated computing machinery or a computer program running on an automated device, that is capable of accepting from users more than one mode of input, keyboard, mouse, stylus, and so on, including speech input\u2014and also providing more than one mode of output such as, graphic, speech, and so on. A multimodal device is generally capable of accepting speech input from a user, digitizing the speech, and providing digitized speech to a speech engine for recognition. A multimodal device may be implemented, for example, as a voice-enabled browser on a laptop, a voice browser on a telephone handset, an online game implemented with Java on a personal computer, and with other combinations of hardware and software as may occur to those of skill in the art. Because multimodal applications may be implemented in markup languages (X+V, SALT), object-oriented languages (Java, C++), procedural languages (the C programming language), and in other kinds of computer languages as may occur to those of skill in the art, a multimodal application may refer to any software application, server-oriented or client-oriented, thin client or thick client, that administers more than one mode of input and more than one mode of output, typically including visual and speech modes.","The system of  includes several example multimodal devices:\n\n","Each of the example multimodal devices () in the system of  includes a microphone, an audio amplifier, a digital-to-analog converter, and a multimodal application capable of accepting from a user () speech for recognition (), digitizing the speech, and providing the digitized speech to a speech engine for recognition. The speech may be digitized according to industry standard codecs, including but not limited to those used for Distributed Speech Recognition as such. Methods for \u2018COding\/DECoding\u2019 speech are referred to as \u2018codecs.\u2019 The European Telecommunications Standards Institute (\u2018ETSI\u2019) provides several codecs for encoding speech for use in DSR, including, for example, the ETSI ES 201 108 DSR Front-end Codec, the ETSI ES 202 050 Advanced DSR Front-end Codec, the ETSI ES 202 211 Extended DSR Front-end Codec, and the ETSI ES 202 212 Extended Advanced DSR Front-end Codec. In standards such as RFC3557 entitled\n\n","As mentioned, a multimodal device according to embodiments of the present invention is capable of providing speech to a speech engine for recognition. The speech engine () of  is a functional module, typically a software module, although it may include specialized hardware also, that does the work of recognizing and generating or \u2018synthesizing\u2019 human speech. The speech engine () implements speech recognition by use of a further module referred to in this specification as a automatic speech recognition (\u2018ASR\u2019) engine, and the speech engine carries out speech synthesis by use of a further module referred to in this specification as a text-to-speech (\u2018TTS\u2019) engine. As shown in , a speech engine () may be installed locally in the multimodal device () itself, or a speech engine () may be installed remotely with respect to the multimodal device, across a data communications network () in a voice server (). A multimodal device that itself contains its own speech engine is said to implement a \u2018thick multimodal client\u2019 or \u2018thick client,\u2019 because the thick multimodal client device itself contains all the functionality needed to carry out speech recognition and speech synthesis\u2014through API calls to speech recognition and speech synthesis modules in the multimodal device itself with no need to send requests for speech recognition across a network and no need to receive synthesized speech across a network from a remote voice server. A multimodal device that does not contain its own speech engine is said to implement a \u2018thin multimodal client\u2019 or simply a \u2018thin client,\u2019 because the thin multimodal client itself contains only a relatively thin layer of multimodal application software that obtains speech recognition and speech synthesis services from a voice server located remotely across a network from the thin client. For ease of explanation, only one () of the multimodal devices () in the system of  is shown with a speech engine (), but readers will recognize that any multimodal device may have a speech engine according to embodiments of the present invention.","A multimodal application () in this example provides speech for recognition and text for speech synthesis to a speech engine through the VoiceXML interpreter (). As shown in , the VoiceXML interpreter () may be installed locally in the multimodal device () itself, or the VoiceXML interpreter () may be installed remotely with respect to the multimodal device, across a data communications network () in a voice server (). In a thick client architecture, a multimodal device () includes both its own speech engine () and its own VoiceXML interpreter (). The VoiceXML interpreter () exposes an API to the multimodal application () for use in providing speech recognition and speech synthesis for the multimodal application. The multimodal application () provides dialog instructions, VoiceXML <form> elements, grammars, input elements, event handlers, and so on, through the API to the VoiceXML interpreter, and the VoiceXML interpreter administers the speech engine on behalf of the multimodal browser () executing the multimodal application (). In the thick client architecture, VoiceXML dialogs are interpreted by a VoiceXML interpreter on the multimodal device. In the thin client architecture, VoiceXML dialogs are interpreted by a VoiceXML interpreter on a voice server () located remotely across a data communications network () from the multimodal device running the multimodal application ().","The VoiceXML interpreter () provides grammars, speech for recognition, and text prompts and styles for speech synthesis to the speech engine (), and the VoiceXML interpreter () returns to the multimodal application speech engine () output in the form of recognized speech, semantic interpretation results, and digitized speech for voice prompts. In a thin client architecture, the VoiceXML interpreter () is located remotely from the multimodal client device in a voice server (), the API for the VoiceXML interpreter is still implemented in the multimodal device (), with the API modified to communicate voice dialog instructions, speech for recognition, and text and voice prompts to and from the VoiceXML interpreter on the voice server (). For ease of explanation, only one () of the multimodal devices () in the system of  is shown with a VoiceXML interpreter (), but readers will recognize that any multimodal device may have a VoiceXML interpreter according to embodiments of the present invention. Each of the example multimodal devices () in the system of  may be configured for providing expressive user interaction with a multimodal application by installing and running on the multimodal device a VoiceXML interpreter and an ASR engine that supports providing expressive user interaction with a multimodal application according to embodiments of the present invention.","The use of these four example multimodal devices () is for explanation only, not for limitation of the invention. Any automated computing machinery capable of accepting speech from a user, providing the speech digitized to an ASR engine through a VoiceXML interpreter, and receiving and playing speech prompts and responses from the VoiceXML interpreter may be improved to function as a multimodal device according to embodiments of the present invention.","The system of  also includes a voice server (), which is connected to data communications network () through wireline connection (). The voice server () is a computer that runs a speech engine () that provides voice recognition services for multimodal devices by accepting requests for speech recognition and returning text representing recognized speech. Voice server () also provides speech synthesis, text to speech (\u2018TTS\u2019) conversion, for voice prompts and voice responses () to user input in multimodal applications such as, for example, X+V applications, SALT applications, or Java voice applications.","The system of  includes a data communications network () that connects the multimodal devices () and the voice server () for data communications. A data communications network for providing expressive user interaction with a multimodal application according to embodiments of the present invention is a data communications data communications network composed of a plurality of computers that function as data communications routers connected for data communications with packet switching protocols. Such a data communications network may be implemented with optical connections, wireline connections, or with wireless connections. Such a data communications network may include intranets, internets, local area data communications networks (\u2018LANs\u2019), and wide area data communications networks (\u2018WANs\u2019). Such a data communications network may implement, for example:\n\n","The system of  also includes a web server () connected for data communications through wireline connection () to network () and therefore to the multimodal devices (). The web server () may be any server that provides to client devices X+V markup documents () that compose multimodal applications. The web server () typically provides such markup documents via a data communications protocol, HTTP, HDTP, WAP, or the like. That is, although the term \u2018web\u2019 is used to described the web server generally in this specification, there is no limitation of data communications between multimodal devices and the web server to HTTP alone. A multimodal application in a multimodal device then, upon receiving from the web sever () an X+V markup document as part of a multimodal application, may execute speech elements by use of a VoiceXML interpreter () and speech engine () in the multimodal device itself or by use of a VoiceXML interpreter () and speech engine () located remotely from the multimodal device in a voice server ().","The arrangement of the multimodal devices (), the web server (), the voice server (), and the data communications network () making up the exemplary system illustrated in  are for explanation, not for limitation. Data processing systems useful for providing expressive user interaction with a multimodal application according to various embodiments of the present invention may include additional servers, routers, other devices, and peer-to-peer architectures, not shown in , as will occur to those of skill in the art. Data communications networks in such data processing systems may support many data communications protocols in addition to those noted above. Various embodiments of the present invention may be implemented on a variety of hardware platforms in addition to those illustrated in .","Providing expressive user interaction with a multimodal application according to embodiments of the present invention in a thin client architecture may be implemented with one or more voice servers, computers, that is, automated computing machinery, that provide speech recognition and speech synthesis. For further explanation, therefore,  sets forth a block diagram of automated computing machinery comprising an example of a computer useful as a voice server () in providing expressive user interaction with a multimodal application according to embodiments of the present invention. The exemplary voice server () provides voice services to a multimodal application operating in a multimodal browser on a multimodal device connected via a network to the voice server (). The exemplary voice server () is useful in a system providing expressive user interaction with a multimodal application according to embodiments of the present invention that includes: receiving, by the multimodal browser, user input from a user through a particular mode of user interaction; determining, by the multimodal browser, user output for the user in dependence upon the user input; determining, by the multimodal browser, a style for the user output in dependence upon the user input, the style specifying expressive output characteristics for at least one other mode of user interaction; and rendering, by the multimodal browser, the user output in dependence upon the style.","The voice server () of  includes at least one computer processor () or \u2018CPU\u2019 as well as random access memory () (\u2018RAM\u2019). The RAM () is connected through a high speed memory bus () and bus adapter () to processor () and to other components of the voice server ().","Stored in RAM () is a voice server application (), a module of computer program instructions capable of operating a voice server in a system that is configured for providing expressive user interaction with a multimodal application according to embodiments of the present invention. Voice server application () provides voice recognition services for multimodal devices by accepting requests for speech recognition and returning speech recognition results, including text representing recognized speech, text for use as variable values in dialogs, and text as string representations of scripts for semantic interpretation. Voice server application () also includes computer program instructions that provide text-to-speech (\u2018TTS\u2019) conversion for voice prompts and voice responses to user input in multimodal applications such as, for example, X+V applications, SALT applications, or Java Speech applications. Voice server application () may be implemented as a web server, implemented in Java, C++, or another language, that supports providing expressive user interaction with a multimodal application according embodiments of the present invention.","The voice server () in this example includes a speech engine (). The speech engine is a functional module, typically a software module, although it may include specialized hardware also, that does the work of recognizing and synthesizing human speech. The speech engine () includes an automated speech recognition (\u2018ASR\u2019) engine () for speech recognition and a text-to-speech (\u2018TTS\u2019) engine () for synthesizing speech. The speech engine () also includes a grammar () created by a VoiceXML interpreter () in dependence upon predictive texts for a predictive text event. The speech engine () also includes a lexicon () and a language-specific acoustic model (). The language-specific acoustic model () is a data structure, a table or database, for example, that associates Speech Feature Vectors with phonemes representing, to the extent that it is practically feasible to do so, all pronunciations of all the words in a human language. The lexicon () is an association of words in text form with phonemes representing pronunciations of each word; the lexicon effectively identifies words that are capable of recognition by an ASR engine. Also stored in RAM () is a Text To Speech (\u2018TTS\u2019) Engine (), a module of computer program instructions that accepts text as input and returns the same text in the form of digitally encoded speech, for use in providing speech as prompts for and responses to users of multimodal systems.","The voice server application () in this example is configured to receive, from a multimodal client located remotely across a network from the voice server, digitized speech for recognition from a user and pass the speech along to the ASR engine () for recognition. ASR engine () is a module of computer program instructions, also stored in RAM in this example. In carrying out providing expressive user interaction with a multimodal application, the ASR engine () receives speech for recognition in the form of at least one digitized word and uses frequency components of the digitized word to derive a Speech Feature Vector (\u2018SFV\u2019). An SFV may be defined, for example, by the first twelve or thirteen Fourier or frequency domain components of a sample of digitized speech. The ASR engine can use the SFV to infer phonemes for the word from the language-specific acoustic model (). The ASR engine then uses the phonemes to find the word in the lexicon ().","In the example of , the voice server application () passes the speech along to the ASR engine () for recognition through a VoiceXML interpreter (). The VoiceXML interpreter () is a software module of computer program instructions that accepts voice dialogs () from a multimodal application running remotely on a multimodal device. The dialogs () include dialog instructions, typically implemented in the form of a VoiceXML <form> element. The voice dialog instructions include one or more grammars, data input elements, event handlers, and so on, that advise the VoiceXML interpreter () how to administer voice input from a user and voice prompts and responses to be presented to a user. The VoiceXML interpreter () administers such dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm (\u2018FIA\u2019) ().","Also stored in RAM () is an operating system (). Operating systems useful in voice servers according to embodiments of the present invention include UNIX\u2122, Linux\u2122, Microsoft NT\u2122, IBM's AIX\u2122, IBM's i5\/OS\u2122, and others as will occur to those of skill in the art. Operating system (), voice server application (), VoiceXML interpreter (), speech engine (), including ASR engine (), and TTS Engine () in the example of  are shown in RAM (), but many components of such software typically are stored in non-volatile memory also, for example, on a disk drive ().","Voice server () of  includes bus adapter (), a computer hardware component that contains drive electronics for high speed buses, the front side bus (), the video bus (), and the memory bus (), as well as drive electronics for the slower expansion bus (). Examples of bus adapters useful in voice servers according to embodiments of the present invention include the Intel Northbridge, the Intel Memory Controller Hub, the Intel Southbridge, and the Intel I\/O Controller Hub. Examples of expansion buses useful in voice servers according to embodiments of the present invention may include Peripheral Component Interconnect (\u2018PCI\u2019) buses and PCI Express (\u2018PCIe\u2019) buses.","Voice server () of  includes disk drive adapter () coupled through expansion bus () and bus adapter () to processor () and other components of the voice server (). Disk drive adapter () connects non-volatile data storage to the voice server () in the form of disk drive (). Disk drive adapters useful in voice servers include Integrated Drive Electronics (\u2018IDE\u2019) adapters, Small Computer System Interface (\u2018SCSI\u2019) adapters, and others as will occur to those of skill in the art. In addition, non-volatile computer memory may be implemented for a voice server as an optical disk drive, electrically erasable programmable read-only memory (so-called \u2018EEPROM\u2019 or \u2018Flash\u2019 memory), RAM drives, and so on, as will occur to those of skill in the art.","The example voice server of  includes one or more input\/output (\u2018I\/O\u2019) adapters (). I\/O adapters in voice servers implement user-oriented input\/output through, for example, software drivers and computer hardware for controlling output to display devices such as computer display screens, as well as user input from user input devices () such as keyboards and mice. The example voice server of  includes a video adapter (), which is an example of an I\/O adapter specially designed for graphic output to a display device () such as a display screen or computer monitor. Video adapter () is connected to processor () through a high speed video bus (), bus adapter (), and the front side bus (), which is also a high speed bus.","The exemplary voice server () of  includes a communications adapter () for data communications with other computers () and for data communications with a data communications network (). Such data communications may be carried out serially through RS-232 connections, through external buses such as a Universal Serial Bus (\u2018USB\u2019), through data communications data communications networks such as IP data communications networks, and in other ways as will occur to those of skill in the art. Communications adapters implement the hardware level of data communications through which one computer sends data communications to another computer, directly or through a data communications network. Examples of communications adapters useful for providing expressive user interaction with a multimodal application according to embodiments of the present invention include modems for wired dial-up communications, Ethernet (IEEE 802.3) adapters for wired data communications network communications, and 802.11 adapters for wireless data communications network communications.","For further explanation,  sets forth a functional block diagram of exemplary apparatus for providing expressive user interaction with a multimodal application of a multimodal application in a thin client architecture according to embodiments of the present invention. The example of  includes a multimodal device () and a voice server () connected for data communication by a VOIP connection () through a data communications network (). A multimodal application () operates in a multimodal browser () on the multimodal device (), and a voice server application () operates on the voice server (). The multimodal application () may be a composed of at least one X+V page () that executes in the multimodal browser ().","In the example of , the multimodal device () supports multiple modes of interaction including a voice mode and one or more non-voice modes. The exemplary multimodal device () of  supports voice with a sound card (), which is an example of an I\/O adapter specially designed for accepting analog audio signals from a microphone () and converting the audio analog signals to digital form for further processing by a codec (). The example multimodal device () of  may support non-voice modes of user interaction with keyboard input, mouseclicks, a graphical user interface (\u2018GUI\u2019), and so on, as will occur to those of skill in the art.","The multimodal browser () of  provides an execution environment for the multimodal application (). The multimodal browser () of  includes computer program instructions configured to provide expressive user interaction with a multimodal application () according to embodiments of the present invention. The multimodal browser () of  operates generally for providing expressive user interaction with a multimodal application () according to embodiments of the present invention by: receiving user input from a user through a particular mode of user interaction; determining user output for the user in dependence upon the user input; determining a style for the user output in dependence upon the user input, the style specifying expressive output characteristics for at least one other mode of user interaction; and rendering the user output in dependence upon the style.","In addition to the voice sever application (), the voice server () also has installed upon it a speech engine () with an ASR engine (), a grammar (), a lexicon (), a language-specific acoustic model (), and a TTS engine (), as well as a Voice XML interpreter () that includes a form interpretation algorithm (). VoiceXML interpreter () interprets and executes a VoiceXML dialog () received from the multimodal application and provided to VoiceXML interpreter () through voice server application (). VoiceXML input to VoiceXML interpreter () may originate from the multimodal application () implemented as an X+V client running remotely in a multimodal browser () on the multimodal device (). The VoiceXML interpreter () administers such dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm (\u2018FIA\u2019) ().","VOIP stands for \u2018Voice Over Internet Protocol,\u2019 a generic term for routing speech over an IP-based data communications network. The speech data flows over a general-purpose packet-switched data communications network, instead of traditional dedicated, circuit-switched voice transmission lines. Protocols used to carry voice signals over the IP data communications network are commonly referred to as \u2018Voice over IP\u2019 or \u2018VOIP\u2019 protocols. VOIP traffic may be deployed on any IP data communications network, including data communications networks lacking a connection to the rest of the Internet, for instance on a private building-wide local area data communications network or \u2018LAN.\u2019","Many protocols are used to effect VOIP. The two most popular types of VOIP are effected with the IETF's Session Initiation Protocol (\u2018SIP\u2019) and the ITU's protocol known as \u2018H.323.\u2019 SIP clients use TCP and UDP port 5060 to connect to SIP servers. SIP itself is used to set up and tear down calls for speech transmission. VOIP with SIP then uses RTP for transmitting the actual encoded speech. Similarly, H.323 is an umbrella recommendation from the standards branch of the International Telecommunications Union that defines protocols to provide audio-visual communication sessions on any packet data communications network.","The apparatus of  operates in a manner that is similar to the operation of the system of  described above. Multimodal application () is a user-level, multimodal, client-side computer program that presents a voice interface to user (), provides audio prompts and responses () and accepts input speech for recognition (). Multimodal application () provides a speech interface through which a user may provide oral speech for recognition () through microphone () and have the speech digitized through an audio amplifier () and a coder\/decoder (\u2018codec\u2019) () of a sound card () and provide the digitized speech for recognition to ASR engine (). Multimodal application (), through the multimodal browser (), an API (), and a voice services module (), then packages the digitized speech in a recognition request message according to a VOIP protocol, and transmits the speech to voice server () through the VOIP connection () on the network ().","Voice server application () provides voice recognition services for multimodal devices by accepting dialog instructions, VoiceXML segments, and returning speech recognition results, including text representing recognized speech, text for use as variable values in dialogs, and output from execution of semantic interpretation scripts\u2014as well as voice prompts. Voice server application () includes computer program instructions that provide text-to-speech (\u2018TTS\u2019) conversion for voice prompts and voice responses to user input in multimodal applications providing responses to HTTP requests from multimodal browsers running on multimodal devices.","The voice server application () receives speech for recognition from a user and passes the speech through API calls to VoiceXML interpreter () which in turn uses an ASR engine () for speech recognition. The ASR engine receives digitized speech for recognition, uses frequency components of the digitized speech to derive an SFV, uses the SFV to infer phonemes for the word from the language-specific acoustic model (), and uses the phonemes to find the speech in the lexicon ().","The ASR engine then compares speech found as words in the lexicon to words in a grammar () to determine whether words or phrases in speech are recognized by the ASR engine. The multimodal application () is operatively coupled to the speech engine () through the VoiceXML interpreter (). In this example, the operative coupling to the speech engine () through a VoiceXML interpreter () is implemented with a VOIP connection () through a voice services module (). The voice services module is a thin layer of functionality, a module of computer program instructions, that presents an API () for use by an application level program in providing dialogs () and speech for recognition to a VoiceXML interpreter and receiving in response voice prompts and other responses, including action identifiers according to embodiments of the present invention. The VoiceXML interpreter (), in turn, utilizes the speech engine () for speech recognition and generation services.","In the example of , the voice services module () provides data communications services through the VOIP connection and the voice server application () between the multimodal device () and the VoiceXML interpreter (). The API () is the same API presented to applications by a VoiceXML interpreter when the VoiceXML interpreter is installed on the multimodal device in a thick client architecture. So from the point of view of an application calling the API (), the application is calling the VoiceXML interpreter directly. The data communications functions of the voice services module () are transparent to applications that call the API (). At the application level, calls to the API () may be issued from the multimodal browser (), which provides an execution environment for the multimodal application ().","Providing expressive user interaction with a multimodal application of a multimodal application according to embodiments of the present invention in thick client architectures is generally implemented with multimodal devices, that is, automated computing machinery or computers. In the system of , for example, all the multimodal devices () are implemented to some extent at least as computers. For further explanation, therefore,  sets forth a block diagram of automated computing machinery comprising an example of a computer useful as a multimodal device () in providing expressive user interaction with a multimodal application according to embodiments of the present invention. In a multimodal device implementing a thick client architecture as illustrated in , the multimodal device () has no connection to a remote voice server containing a VoiceXML interpreter and a speech engine. Rather, all the components needed for speech synthesis and voice recognition in providing expressive user interaction with a multimodal application according to embodiments of the present invention are installed or embedded in the multimodal device itself.","The example multimodal device () of  includes several components that are structured and operate similarly to parallel components of the voice server, having the same drawing reference numbers, as described above with reference to : at least one computer processor (), frontside bus (), RAM (), high speed memory bus (), bus adapter (), video adapter (), video bus (), expansion bus (), communications adapter (), I\/O adapter (), disk drive adapter (), an operating system (), a VoiceXML Interpreter (), a speech engine (), and so on. As in the system of , the speech engine in the multimodal device of  includes an ASR engine (), a grammar (), a lexicon (), a language-dependent acoustic model (), and a TTS engine (). The VoiceXML interpreter () administers dialogs () by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm (\u2018FIA\u2019) ().","The speech engine () in this kind of embodiment, a thick client architecture, often is implemented as an embedded module in a small form factor device such as a handheld device, a mobile phone, PDA, and the like. An example of an embedded speech engine useful for providing expressive user interaction with a multimodal application according to embodiments of the present invention is IBM's Embedded ViaVoice Enterprise. The example multimodal device of  also includes a sound card (), which is an example of an I\/O adapter specially designed for accepting analog audio signals from a microphone () and converting the audio analog signals to digital form for further processing by a codec (). The sound card () is connected to processor () through expansion bus (), bus adapter (), and front side bus ().","Also stored in RAM () in this example is a multimodal application (), a module of computer program instructions capable of operating a multimodal device as an apparatus that supports providing expressive user interaction with a multimodal application according to embodiments of the present invention. The multimodal application () implements speech recognition by accepting speech utterances for recognition from a user and sending the utterance for recognition through VoiceXML interpreter API calls to the ASR engine (). The multimodal application () implements speech synthesis generally by sending words to be used as prompts for a user to the TTS engine () through VoiceXML interpreter API calls. As an example of thick client architecture, the multimodal application () in this example does not send speech for recognition across a network to a voice server for recognition, and the multimodal application () in this example does not receive synthesized speech, TTS prompts and responses, across a network from a voice server. All grammar processing, voice recognition, and text to speech conversion in this example is performed in an embedded fashion in the multimodal device () itself.","In , a multimodal browser () provides an execution environment for the multimodal application (). The multimodal browser () of  includes computer program instructions configured to provide expressive user interaction with a multimodal application () according to embodiments of the present invention. The multimodal browser () of  operates generally for providing expressive user interaction with a multimodal application () according to embodiments of the present invention by: receiving user input from a user through a particular mode of user interaction; determining user output for the user in dependence upon the user input; determining a style for the user output in dependence upon the user input, the style specifying expressive output characteristics for at least one other mode of user interaction; and rendering the user output in dependence upon the style.","The multimodal application () in the example of  is a user-level, multimodal, client-side computer program that provides a speech interface through which a user may provide oral speech for recognition through microphone (), have the speech digitized through an audio amplifier () and a coder\/decoder (\u2018codec\u2019) () of a sound card () and provide the digitized speech for recognition to ASR engine (). The multimodal application () may be implemented as a set or sequence of X+V pages () executing in the multimodal browser () or microbrowser that passes VoiceXML grammars and digitized speech by calls through a VoiceXML interpreter API directly to an embedded VoiceXML interpreter () for processing. The embedded VoiceXML interpreter () may in turn issue requests for speech recognition through API calls directly to the embedded ASR engine (). The embedded VoiceXML interpreter () may then issue requests to the action classifier () to determine an action identifier in dependence upon the recognized result provided by the ASR engine (). Multimodal application () also can provide speech synthesis, TTS conversion, by API calls to the embedded TTS engine () for voice prompts and voice responses to user input.","The multimodal application () is operatively coupled to the speech engine () through a VoiceXML interpreter (). In this example, the operative coupling through the VoiceXML interpreter is implemented using a VoiceXML interpreter API (). The VoiceXML interpreter API () is a module of computer program instructions for use by an application level program in providing dialog instructions, speech for recognition, and other input to a VoiceXML interpreter and receiving in response voice prompts and other responses. The VoiceXML interpreter API presents the same application interface as is presented by the API of the voice service module ( on ) in a thin client architecture. At the application level, calls to the VoiceXML interpreter API may be issued from the multimodal browser (), which provides an execution environment for the multimodal application () when the multimodal application is implemented with X+V. The VoiceXML interpreter (), in turn, utilizes the speech engine () for speech recognition and synthesization services.","The multimodal application () in this example, running in a multimodal browser () on a multimodal device () that contains its own VoiceXML interpreter () and its own speech engine () with no network or VOIP connection to a remote voice server containing a remote VoiceXML interpreter or a remote speech engine, is an example of a so-called \u2018thick client architecture,\u2019 so-called because all of the functionality for processing voice mode interactions between a user and the multimodal application\u2014as well as all or most of the functionality for providing expressive user interaction with a multimodal application of a multimodal application according to embodiments of the present invention\u2014is implemented on the multimodal device itself.","For further explanation,  sets forth a flow chart illustrating an exemplary method of providing expressive user interaction with a multimodal application according to embodiments of the present invention. Providing expressive user interaction with a multimodal application in this example is implemented with a multimodal application (). The multimodal application () operates in a multimodal browser () on a multimodal device supporting multiple modes of interaction including a voice mode and one or more non-voice modes of user interaction with the multimodal application. The voice mode may be implemented in this example with audio output through a speaker and audio input through a microphone. Non-voice modes may be implemented by user input devices such as, for example, a keyboard and a mouse.","The multimodal application () is operatively coupled to a speech engine through a VoiceXML interpreter. The operative coupling provides a data communications path from the multimodal application () to the speech engine for grammars, speech for recognition, and other input. The operative coupling also provides a data communications path from the speech engine to the multimodal application () for recognized speech, semantic interpretation results, and other results. The operative coupling may be effected with a VoiceXML interpreter ( on ) when the multimodal application is implemented in a thick client architecture. When the multimodal application is implemented in a thin client architecture, the operative coupling may include a voice services module ( on ), a VOIP connection ( on ), and a VoiceXML interpreter ( on ).","The method of  includes prompting (), by the multimodal browser (), the user for the user input (). The user input () of  represents information received by the multimodal application () from a user. The user input () in the example of  is implemented as graphical user input () received through a graphical user interface (\u2018GUI\u2019). In other embodiments, however, the user input () may be implemented as a voice utterance received through a microphone. The multimodal browser () may prompt () the user for the user input () according to the method of  by displaying a visual representation of a prompt () on a GUI to visually cue the user for input or by playing a voice representation of the prompt () through a speaker to aurally cue the user for input. The prompt () represents information presented to a user in a particular mode of user interaction, such as for example visual or voice, to solicit the user input () from the user. For further explanation, consider the following segment of an exemplary multimodal application:",{"@attributes":{"id":"p-0070","num":"0100"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<html xmlns=\u201chttp:\/\/www.w3.org\/1999\/xhtml\u201d"},{"entry":"xmlns:vxml=\u201chttp:\/\/www.w3.org\/2001\/vxml\u201d"},{"entry":"xmlns:ev=\u201chttp:\/\/www.w3.org\/2001\/xml-events\u201d"},{"entry":"xmlns:xv=\u201chttp:\/\/www.voicexml.org\/2002\/xhtml+voice\u201d"},{"entry":"xml:lang=\u201cen-US\u201d>"},{"entry":"<head>"},{"entry":"\u2003\u2003<vxml:form id=\u201cvforml\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<vxml:field name=\u201cquestion\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<vxml:prompt src=\u201c#pl\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<grammar>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003..."},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<\/vxml:grammar>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003..."},{"entry":"\u2003\u2003\u2003\u2003<\/vxml:field>"},{"entry":"\u2003\u2003<\/vxml:form>"},{"entry":"\u2003\u2003..."},{"entry":"<\/head>"},{"entry":"<body ev:event=\u201cload\u201d ev:handler=\u201c#vforml\u201d>"},{"entry":"\u2003\u2003<form>"},{"entry":"\u2003\u2003\u2003\u2003<p id=\u201cpl\u201d>Please rate your experience with our product.<\/p>"},{"entry":"\u2003\u2003\u2003\u2003<input type=\u201cradio\u201d name=\u201cexp\u201d onclick=\u201cnext(1)\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Excellent<BR>"},{"entry":"\u2003\u2003\u2003\u2003<input type=\u201cradio\u201d name=\u201cexp\u201d onclick=\u201cnext(2)\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Ok<BR>"},{"entry":"\u2003\u2003\u2003\u2003<input type=\u201cradio\u201d name=\u201cexp\u201d onclick=\u201cnext(3)\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Terrible<BR>"},{"entry":"\u2003\u2003\u2003\u2003<p id=\u201cp2\u201d\/>"},{"entry":"\u2003\u2003<\/form>"},{"entry":"<\/body>"},{"entry":"<\/html>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The exemplary multimodal application segment above instructs a multimodal browser to prompt a user for user input both visually and aurally. Using the HTML <p> element, the exemplary multimodal application instructs the multimodal browser to display a visual representation of the prompt \u201cPlease rate your experience with our product\u201d on a GUI to visually cue the user for input. Using the VoiceXML <prompt> element, the exemplary multimodal application also instructs the multimodal browser to play an audio representation of the prompt \u201cPlease rate your experience with our product\u201d through a speaker to aurally cue to user for input.","To generate a voice representation of the prompt (), the multimodal browser () passes the textual representation of the prompt () to a speech engine using calls to a VoiceXML interpreter API. The speech engine and the VoiceXML interpreter return synthesized speech corresponding to the textual representation of the prompt () to the multimodal browser (). The synthesized speech returned from the speech engine is the voice representation of the prompt (), which the multimodal browser () then plays to the user through a speaker of the multimodal device.","The method of  includes receiving (), by the multimodal browser (), user input () from a user through a particular mode of user interaction. A particular mode of user interaction may be a visual mode of user interaction such as, for example, using a GUI, or may be a voice mode of user interaction such as, for example, using a speaker and a microphone. In the method of , the multimodal browser () receives () user input () from a user by receiving () graphical user input () from the user through a graphical user interface. The multimodal browser () may receive () graphical user input () from the user through a GUI according to the method of  by providing the user with GUI components to access and manipulate such as, for example, text input fields, check boxes, radio buttons, and so on. For example, consider again, a segment of the exemplary multimodal application above:",{"@attributes":{"id":"p-0074","num":"0104"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<body ev:event=\u201cload\u201d ev:handler=\u201c#vforml\u201d>"},{"entry":"\u2003\u2003<form>"},{"entry":"\u2003\u2003\u2003\u2003<p id=\u201cpl\u201d>Please rate your experience with our product.<\/p>"},{"entry":"\u2003\u2003\u2003\u2003<input type=\u201cradio\u201d name=\u201cexp\u201d onclick=\u201cnext(1)\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Excellent<BR>"},{"entry":"\u2003\u2003\u2003\u2003<input type=\u201cradio\u201d name=\u201cexp\u201d onclick=\u201cnext(2)\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Ok<BR>"},{"entry":"\u2003\u2003\u2003\u2003<input type=\u201cradio\u201d name=\u201cexp\u201d onclick=\u201cnext(3)\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Terrible<BR>"},{"entry":"\u2003\u2003\u2003\u2003<p id=\u201cp2\u201d\/>"},{"entry":"\u2003\u2003<\/form>"},{"entry":"<\/body>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The exemplary multimodal segment above instructs a multimodal browser to provide the user with three radio buttons on a graphical user interface to receive user input in response to the prompt \u201cPlease rate your experience with our product.\u201d The first radio button is labeled \u2018Excellent.\u2019 The second radio button is labeled \u2018Ok.\u2019 The third radio button is labeled \u2018Terrible.\u2019 Through a user's selection of one of these radio buttons, the multimodal browser may receive graphical user input from the user.","The method of  also includes determining (), by the multimodal browser (), user output () for the user in dependence upon the user input (). The user output () of  represents information provided to the user in response to the user's input (). The multimodal browser () determines () user output () for the user according to the method of  by determining () the user output () for the user in dependence upon the graphical user input (). Determining () the user output () for the user in dependence upon the graphical user input () according to the method of  may be carried out by executing an ECMAScript script that generates user output based on the graphical user input () provided by the user. For further explanation, consider another segment of the exemplary multimodal application above:",{"@attributes":{"id":"p-0077","num":"0107"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<html xmlns=\u201chttp:\/\/www.w3.org\/1999\/xhtml\u201d"},{"entry":"xmlns:vxml=\u201chttp:\/\/www.w3.org\/2001\/vxml\u201d"},{"entry":"xmlns:ev=\u201chttp:\/\/www.w3.org\/2001\/xml-events\u201d"},{"entry":"xmlns:xv=\u201chttp:\/\/www.voicexml.org\/2002\/xhtml+voice\u201d"},{"entry":"xml:lang=\u201cen-US\u201d>"},{"entry":"<head>"},{"entry":"\u2003\u2003<vxml:form id=\u201cvforml\u201d>"},{"entry":"\u2003\u2003\u2003\u2003..."},{"entry":"\u2003\u2003<\/vxml:form>"},{"entry":"\u2003\u2003..."},{"entry":"\u2003\u2003<script type=\u201ctext\/javascript\u201d>"},{"entry":"\u2003\u2003\u2003\u2003..."},{"entry":"\u2003\u2003\u2003\u2003function next(choice)"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003var paragraph = document.getElementByld(\u201c#p2\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003var textNode;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003if (choice == 1 || choice == 2)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003textNode ="},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003document.createTextNode(\u201cThank you"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003for your business!\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003paragraph.style = \u201cemotion: happy\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003if (choice == 3)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003textNode ="},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003document.createTextNode(\u201cI'm sorry. I'll"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003get a live operator to talk to you.\u201d;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003paragraph.style = \u201cemotion: sad; color: red\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003paragraph.appendChild(textNode);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003var e = document.createEvent(\u201cUIEvents\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003e.initEvent(\u201cDOMActivate\u201d,\u201ctrue\u201d,\u201ctrue\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003document.getElementByld(\u2018vform2\u2019).dispatchEvent(e);"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003<\/script>"},{"entry":"\u2003\u2003..."},{"entry":"<\/head>"},{"entry":"<body ev:event=\u201cload\u201d ev:handler=\u201c#vforml\u201d>"},{"entry":"\u2003\u2003<form>"},{"entry":"\u2003\u2003\u2003\u2003<p id=\u201cpl\u201d>Please rate your experience with our product.<\/p>"},{"entry":"\u2003\u2003\u2003\u2003<input type=\u201cradio\u201d name=\u201cexp\u201d onclick=\u201cnext(1)\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Excellent<BR>"},{"entry":"\u2003\u2003\u2003\u2003<input type=\u201cradio\u201d name=\u201cexp\u201d onclick=\u201cnext(2)\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Ok<BR>"},{"entry":"\u2003\u2003\u2003\u2003<input type=\u201cradio\u201d name=\u201cexp\u201d onclick=\u201cnext(3)\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Terrible<BR>"},{"entry":"\u2003\u2003\u2003\u2003<p id=\u201cp2\u201d\/>"},{"entry":"\u2003\u2003<\/form>"},{"entry":"<\/body>"},{"entry":"<\/html>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The exemplary multimodal application segment above instructs a multimodal browser to execute ECMAScript script implementing a function \u2018next\u2019 when the multimodal browser receives graphical user input indicating a user's selection of one of the radio buttons. Each radio button is associated with a different numeric parameter that is provided to the \u2018next\u2019 function. When the user selects the \u2018Excellent\u2019 radio button, the multimodal browser executes the \u2018next\u2019 function with a parameter value of \u20181,\u2019 which generates user output \u201cThank you for your business!\u201d When the user selects the \u2018Ok\u2019 radio button, the multimodal browser executes the \u2018next\u2019 function with a parameter value of \u20182,\u2019 which also generates user output \u201cThank you for your business!\u201d When the user selects the \u2018Terrible\u2019 radio button, the multimodal browser executes the \u2018next\u2019 function with a parameter value of \u20183,\u2019 which generates user output \u201cI'm sorry. I'll get a live operator to talk to you.\u201d In such a manner, the multimodal browser may determine the user output for the user based on the graphical user input.","The method of  includes determining (), by the multimodal browser (), a style () for the user output () in dependence upon the user input (). The style () of  specifies expressive output characteristics for various modes of user interaction, including at least one other mode of user interaction than the mode by which the multimodal browser () received the user input (). For example, if the multimodal browser () received the user input () through a visual mode of user interaction, then the style () may specify expressive output characteristics for a voice mode of user interaction along with the visual mode of user interaction. Similarly, if the multimodal browser () received the user input () through a voice mode of user interaction, then the style () may specify expressive output characteristics for a visual mode of user interaction along with the voice mode of user interaction. The expressive output characteristics define the manner in which the user output () is provided to a user for a particular mode of user interaction. For example, when the mode of user interaction is visual, expressive output characteristics may define that text displayed on a GUI is to be displayed using bold, red lettering to indicate frustration at a wrong answer or that a face displayed on a GUI should be rendered with a smile to indicate satisfactory input. When the mode of user interaction is voice, expressive output characteristics may define that synthesized speech prompts increase in volume with each syllable to indicate frustration at a wrong answer or that synthesized speech prompts are rendered using a deep male voice in an effort to sooth the user.","In the example of , the style () specifies prosody for the voice mode of user interaction and the visual characteristics for a visual mode of user interaction. Prosody generally refers to the characteristics of user output implemented as synthesized speech. Prosody may include the intonation, rhythm, syllable length, and focus of the synthesized speech. Acoustically, prosody describes changes in the syllable length, loudness, pitch, and certain details of the formant structure of speech sounds. With regard to speech articulators, prosody describes changes in the velocity and range of motion in articulators like the jaw and tongue, along with quantities like the air pressure in the trachea and the tensions in the laryngeal muscles. Phonologically, prosody is described by tone, intonation, rhythm, and lexical stress.","The manner in which the style () of  is specified will vary among the modes of user interaction for which the style specifies expressive output characteristics. When specifying expressive output characteristics for a visual mode of user interaction, the style may be specified using Dynamic HTML technologies including static markup languages such as HTML, a client-side scripting language such as JavaScript, a presentation definition language such as Cascading Style Sheets (\u2018CSS\u2019), and a Document Object Model. When specifying expressive output characteristics for a voice mode of user interaction, the style may, for example, be specified using extensions to a Speech Synthesis Markup Language (\u2018SSML\u2019) described in and incorporated herein by reference: E. E., MSSMLDE, P8ECSCT, G, S, Sep. 1-4, 2003. Dynamic HTML technologies, such as CSS, and extensions to SSML, such as those describe in E, advantageously allow an author of a multimodal application to enhance each mode of user interaction with expressive output characteristics using human-level concepts such as, for example, attitude, emotion, proximity, and so on\u2014as opposed to application-level concepts such as font, color, graphic, and so on or as opposed to speech synthesis-level concepts such as waveform, frequency, amplitude, and so on. For example, an author may use Dynamic HTML technologies to correspond the human-level emotion of \u2018sad\u2019 with particular visual attributes such as font, color, graphics, animations, and the like for user output on a GUI. Similarly, an author may use extension to SSML to correspond the human-level emotion of \u2018anger\u2019 with particular voice attributes such as increasing volume levels for each syllable in the user output played through a speaker.","Determining (), by the multimodal browser (), a style () for the user output () in dependence upon the user input () according to the method of  includes determining () the style () for the user output () in dependence upon the graphical user input (). The multimodal browser () may determine () the style () for the user output () in dependence upon the graphical user input () according to the method of  by executing an ECMAScript script that assigns the style () to the user output () in the Document Object Model (\u2018DOM\u2019) representing the multimodal application. For further explanation, consider again the segment of the exemplary multimodal application above:",{"@attributes":{"id":"p-0083","num":"0113"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<html xmlns=\u201chttp:\/\/www.w3.org\/1999\/xhtml\u201d"},{"entry":"xmlns:vxml=\u201chttp:\/\/www.w3.org\/2001\/vxml\u201d"},{"entry":"xmlns:ev=\u201chttp:\/\/www.w3.org\/2001\/xml-events\u201d"},{"entry":"xmlns:xv=\u201chttp:\/\/www.voicexml.org\/2002\/xhtml+voice\u201d"},{"entry":"xml:lang=\u201cen-US\u201d>"},{"entry":"<head>"},{"entry":"\u2003\u2003<vxml:form id=\u201cvforml\u201d>"},{"entry":"\u2003\u2003\u2003\u2003..."},{"entry":"\u2003\u2003<\/vxml:form>"},{"entry":"\u2003\u2003<vxml:form id=\u201cvform2\u201d>"},{"entry":"\u2003\u2003\u2003\u2003..."},{"entry":"\u2003\u2003<\/vxml:form>"},{"entry":"\u2003\u2003<script type=\u201ctext\/javascript\u201d>"},{"entry":"\u2003\u2003\u2003\u2003function next(choice)"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003var paragraph = document.getElementByld(\u201c#p2\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003var textNode;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003if (choice == 1 || choice == 2)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003textNode ="},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003document.createTextNode(\u201cThank you"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003for your business!\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003paragraph.style = \u201cemotion: happy\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003if (choice == 3)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003textNode ="},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003document.createTextNode(\u201cI'm sorry. I'll"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003get a live operator to talk to you.\u201d;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003paragraph.style = \u201cemotion: sad; color: red\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003paragraph.appendChild(textNode);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003var e = document.createEvent(\u201cUIEvents\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003e.initEvent(\u201cDOMActivate\u201d,\u201ctrue\u201d,\u201ctrue\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003document.getElementByld(\u2018vform2\u2019).dispatchEvent(e);"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003<\/script>"},{"entry":"\u2003\u2003..."},{"entry":"<\/head>"},{"entry":"<body ev:event=\u201cload\u201d ev:handler=\u201c#vforml\u201d>"},{"entry":"\u2003\u2003<form>"},{"entry":"\u2003\u2003\u2003\u2003<p id=\u201cpl\u201d>Please rate your experience with our product.<\/p>"},{"entry":"\u2003\u2003\u2003\u2003<input type=\u201cradio\u201d name=\u201cexp\u201d onclick=\u201cnext(1)\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Excellent<BR>"},{"entry":"\u2003\u2003\u2003\u2003<input type=\u201cradio\u201d name=\u201cexp\u201d onclick=\u201cnext(2)\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Ok<BR>"},{"entry":"\u2003\u2003\u2003\u2003<input type=\u201cradio\u201d name=\u201cexp\u201d onclick=\u201cnext(3)\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Terrible<BR>"},{"entry":"\u2003\u2003\u2003\u2003<p id=\u201cp2\u201d\/>"},{"entry":"\u2003\u2003<\/form>"},{"entry":"<\/body>"},{"entry":"<\/html>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The exemplary multimodal application segment above instructs a multimodal browser to execute ECMAScript script implementing a function \u2018next\u2019 when the multimodal browser receives graphical user input indicating a user selection of one of the radio buttons. Each radio button is associated with a different numeric parameter provided to the \u2018next\u2019 function. When the user selects the \u2018Excellent\u2019 radio button, the multimodal browser executes the \u2018next\u2019 function with a parameter value of \u20181,\u2019 which assigns the style \u2018emotion: happy\u2019 to the user output \u201cThank you for your business!\u201d When the user selects the \u2018Ok\u2019 radio button, the multimodal browser executes the \u2018next\u2019 function with a parameter value of \u20182,\u2019 which also assigns the style \u2018emotion: happy\u2019 to the user output \u201cThank you for your business!\u201d When the user selects the \u2018Terrible\u2019 radio button, the multimodal browser executes the \u2018next\u2019 function with a parameter value of \u20183,\u2019 which assigns the style \u2018emotion: sad; color: red\u2019 to the user output \u201cI'm sorry. I'll get a live operator to talk to you.\u201d In such a manner, the multimodal browser may determine the style for the user output based on the graphical user input. The manner in which the style \u2018emotion: happy\u2019 and the style \u2018emotion: sad; color: red\u2019 affect the rendering of the user output will vary depending on the expressive output characteristics applied to each style using dynamic HTML technologies, such as CSS, and extensions to SSML, such as those describe in E","The method of  also includes rendering (), by the multimodal browser (), the user output () in dependence upon the style (). The multimodal browser () renders () the user output () according to the method of  by synthesizing (), through the VoiceXML interpreter using the speech engine, the user output () into synthesized speech () in dependence upon the style () and playing () the synthesized speech () for the user. The synthesized speech () of  is digitized speech representing the user output () expressed according to the style () specified by the multimodal application for the voice mode of user interaction. The multimodal browser () may synthesize () the user output () into synthesized speech () according to the method of  by passing the user output () along with the style () to a speech engine and receiving, in return, synthesized speech () for playback through a speaker of the multimodal device.","To activate synthesizing () the user output () into synthesized speech (), the end of the exemplary \u2018next\u2019 function above includes the statement \u201cdocument.getElementByld(\u2018vform2\u2019). dispatchEvent(e).\u201d The exemplary statement instructs the multimodal browser to process the following VoiceXML dialog using the VoiceXML interpreter:",{"@attributes":{"id":"p-0087","num":"0117"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<vxml:form id=\u201cvform2\u201d>"]},{"entry":[{},"<vxml:block>"]},{"entry":[{},"\u2003\u2003<vxml:prompt src=\u201c#p2\u201d\/>"]},{"entry":[{},"<\/vxml:block>"]},{"entry":[{},"<\/vxml:form>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The exemplary dialog above prompts a user with the user output generated by the exemplary \u2018next\u2019 function above according to the style specified by the exemplary \u2018next\u2019 function above.","Rendering (), by the multimodal browser (), the user output () in dependence upon the style () according to the method of  also includes displaying () the user output () to the user in dependence upon the style (). The multimodal browser () may display () the user output () to the user according to the method of  by rendering the user output () on a GUI according to the style () specified by the multimodal application for the visual mode of user interaction.","Readers will note that the method of  renders the user output () according to the style () specified by the multimodal application in both visual and voice modes of user interaction. To synchronize rendering the user output () according to the style () in both modes, the example of  includes a prosody event (). The prosody event () of  represents an event that is triggered by the speech engine each time the speech engine synthesizes speech using a new prosody as specified by a particular style ().","The method of  includes providing (), by the speech engine to the multimodal browser () through the VoiceXML interpreter, the prosody event () in dependence upon the synthesization () of the user output () into synthesized speech (). The speech engine may provide () the prosody event () to the multimodal browser () through the VoiceXML interpreter according to the method of  by generating the prosody event () that contains the details of the prosody specified by the style () and passing the prosody event () to the multimodal browser () through a VoiceXML interpreter. Before passing the prosody event () along to the multimodal browser (), the VoiceXML interpreter may transform the prosody event () into a DOM event according to the DOM Events specification or an XML event according to the XML Events specification. For example, consider the following exemplary DOM Events interface for a prosody event:",{"@attributes":{"id":"p-0092","num":"0122"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"interface ProsodyEvent : Event {"]},{"entry":[{},"\u2003\u2003readonly attribute views::AbstractView view;"]},{"entry":[{},"\u2003\u2003readonly attribute string detail;"]},{"entry":[{},"\u2003\u2003void initProsodyEvent(in DOMString typeArg,"]},{"entry":[{},"\u2003\u2003\u2003\u2003in boolean canBubbleArg,"]},{"entry":[{},"\u2003\u2003\u2003\u2003in boolean cancelableArg,"]},{"entry":[{},"\u2003\u2003\u2003\u2003in views::AbstractView viewArg,"]},{"entry":[{},"\u2003\u2003\u2003\u2003in string detailArg);"]},{"entry":[{},"};"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The VoiceXML interpreter, upon receiving a prosody event from a speech engine, may transform the prosody event into a DOM Event with the exemplary interface above. Using the exemplary DOM Events interface above, the multimodal browser () may access the prosody event () provided by a speech engine. The \u2018detail\u2019 string contains attribute value pairs for prosody such as, for example, \u2018emotion=\u201ccalm\u201d,\u2019 \u2018attitude=\u201cconfident\u201d,\u2019 and \u2018proximity=\u201cclose\u201d.\u2019 As mentioned above, the manner in which these attribute value pairs affect the rendering of the user output will depend on rendering definitions supplied using dynamic HTML such as, for example CSS, and extensions to the SSML such as, for example, those extension described in E","The method of  also includes receiving (), by the multimodal browser () through the VoiceXML interpreter, a prosody event () from the speech engine. The multimodal browser () receives () the prosody event () from the speech engine through a VoiceXML interpreter and accesses the prosody event () in the DOM Events model using, for example, the exemplary interface described above.","Rendering (), by the multimodal browser (), the user output () in dependence upon the style () according to the method of  includes rendering () the user output () in dependence upon the prosody event (). In the method of , rendering () the user output () in dependence upon the prosody event () includes displaying () the user output () to the user in dependence upon the style (). As discussed above, the multimodal browser () may display () the user output to the user according to the method of  by rendering the user output () on a GUI according to the style () specified by the multimodal application for the visual mode of user interaction. In such an example, therefore, the multimodal browser () does not display the user output () on a graphical user interface according to the style () until the multimodal browser () receives the prosody event.","The multimodal browser () may render () the user output () in dependence upon the prosody event () to display () the user output () in dependence upon the style () according to the method of  by executing an ECMAScript script that modifies visual characteristics of the user output () for a visual mode of user interaction. Consider, for example, the following exemplary ECMAScript script:",{"@attributes":{"id":"p-0097","num":"0127"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<script type=\u201ctext\/javascript\u201d ev:event=\u201cprosody\u201d>"},{"entry":"\u2003\u2003function Attribute(name, value) { this.name=name;"},{"entry":"\u2003\u2003this.value=value; }"},{"entry":"\u2003\u2003function attributesFromString(input, ouptut)"},{"entry":"\u2003\u2003\u2003\u2003{\/* Parses the prosody event detail into an array of attribute"},{"entry":"\u2003\u2003\u2003\u2003objects *\/}"},{"entry":"\u2003\u2003var attributes = new Array( );"},{"entry":"\u2003\u2003attributesFromString(event.detail, attributes);"},{"entry":"\u2003\u2003for (i in attributes)"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003if attributes [i] .name.match(\u201cemotion\u201d)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003{\/* Process value for emotion value*\/}"},{"entry":"\u2003\u2003\u2003\u2003if attributes[i].name.match(\u201cattitude\u201d)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003{\/* Process value for attitude value*\/}"},{"entry":"\u2003\u2003\u2003\u2003if attributes[i].name.match(\u201cproximity\u201d)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003{\/* Process value for proximity value*\/}"},{"entry":"\u2003\u2003\u2003\u2003..."},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"<\/script>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The exemplary ECMAScript script above executes when the multimodal browser () receives a prosody event identified as \u2018prosody.\u2019 Readers will recall from the exemplary prosody event interface above that the prosody event includes a \u2018detail\u2019 field that contains attribute value pairs for prosody such as, for example, \u2018emotion=\u201ccalm\u201d,\u2019 \u2018attitude=\u201cconfident\u201d,\u2019 and \u2018proximity=\u201cclose\u201d.\u2019 In the exemplary ECMAScript script above, the \u2018attributesFromString\u2019 function parses the prosody event detail into an array of attribute objects. The exemplary ECMAScript script above provides computer program instructions for processing values for each type of prosody attribute that may be contained in a prosody event such as, for example, \u2018emotion,\u2019 \u2018attitude,\u2019 and \u2018proximity.\u2019 Therefore, when the multimodal browser receives a prosody event from the speech engine, which indicates that the speech engine has synthesized speech using the prosody specified by the style, the multimodal browser may modify the visual representation of the user output to correspond with the prosody used to generate synthesized speech from the user output. In such a manner, the prosody event advantageously allows the multimodal browser to synchronize rendering the user output according to the style in both a visual mode of user interaction and a voice mode of user interaction.","As mentioned above, a multimodal browser may receive user input from a user by receiving graphical user input through a graphical user interface. A multimodal browser may, however, receive user input from a user by receiving a voice utterance. For further explanation, therefore,  sets forth a flow chart illustrating a further exemplary method of providing expressive user interaction with a multimodal application according to embodiments of the present invention that includes receiving () a voice utterance () from the user. Providing expressive user interaction with a multimodal application in this example is implemented with a multimodal application (). The multimodal application () operates in a multimodal browser () on a multimodal device supporting multiple modes of interaction including a voice mode and one or more non-voice modes of user interaction with the multimodal application. The voice mode may be implemented in this example with audio output through a speaker and audio input through a microphone. Non-voice modes may be implemented by user input devices such as, for example, a keyboard and a mouse.","The multimodal application () is operatively coupled to a speech engine through a VoiceXML interpreter. The operative coupling provides a data communications path from the multimodal application () to the speech engine for grammars, speech for recognition, and other input. The operative coupling also provides a data communications path from the speech engine to the multimodal application () for recognized speech, semantic interpretation results, and other results. The operative coupling may be effected with a VoiceXML interpreter ( on ) when the multimodal application is implemented in a thick client architecture. When the multimodal application is implemented in a thin client architecture, the operative coupling may include a voice services module ( on ), a VOIP connection ( on ), and a VoiceXML interpreter ( on ).","The method of  is similar to the method of . That is, the method of  includes prompting (), by the multimodal browser (), the user for the user input (); receiving (), by the multimodal browser (), user input () from a user through a particular mode of user interaction; determining (), by the multimodal browser (), user output () for the user in dependence upon the user input (); determining (), by the multimodal browser (), a style () for the user output () in dependence upon the user input (), the style () specifying expressive output characteristics for at least one other mode of user interaction; and rendering (), by the multimodal browser (), the user output () in dependence upon the style (). Similar to the example of , the multimodal browser () in the example of  prompts () the user for user input () using a prompt () that may be rendered to the user using both visual and voice modes of user interactions as described above.","The method of  differs from the method of  in that receiving (), by the multimodal browser (), user input () from a user through a particular mode of user interaction includes receiving () a voice utterance () from the user. The voice utterance () of  represents digitized human speech provided to the multimodal browser () by a user of a multimodal device. As mentioned above, the multimodal browser () may acquire the voice utterance () from a user through a microphone and encode the voice utterance in a suitable format for storage and transmission using any CODEC as will occur to those of skill in the art.","Receiving (), by the multimodal browser (), user input () from a user through a particular mode of user interaction according to the method of  also includes determining () recognition results () using the speech engine and a grammar (). The recognition results () of  represent output returned from a speech engine based on the voice utterance (). The multimodal browser () may determine () recognition results () using the speech engine and a grammar () according to the method of  by passing the voice utterance () and the grammar () specified in the multimodal application () to a speech engine for speech recognition through a VoiceXML interpreter, and receiving, in return, the recognition results () from the speech engine as values stored in an ECMAScript data structure such as, for example, the application variable array \u2018application.lastresult$\u2019 some other field variable array for a VoiceXML field specified by the multimodal application (). ECMAScript data structures represent objects in the Document Object Model (\u2018DOM\u2019) at the scripting level in an X+V page of a multimodal application ().","In a thin client architecture, the multimodal browser () may pass the voice utterance () and the grammar () to a speech engine for speech recognition through a VoiceXML interpreter according the method of  as part of a call by the multimodal browser () to a voice services module ( on ) to provide voice recognition services. The voice services module, then in turn, passes the voice utterance () and the grammar () to the VoiceXML interpreter () through a VOIP connection ( on ) and a voice server application ( on ), which in turn, passes the voice utterance () and the grammar () to a speech engine for recognition. In a thick client architecture, the multimodal browser () may pass the voice utterance () and the grammar () to a speech engine for speech recognition through a VoiceXML interpreter according to the method of  as part of a call directly to an embedded VoiceXML interpreter () by the multimodal browser () through an API exposed by the VoiceXML interpreter ().","As mentioned above, the multimodal browser () may receive, in return, the recognition results () from the speech engine as values stored in an ECMAScript data structure such as, for example, the application variable array \u2018application.lastresult$\u2019 some other field variable array for a VoiceXML field specified by the multimodal application (). The \u2018application.lastresult$\u2019 array holds information about the last recognition generated by a speech engine for the VoiceXML interpreter (). The \u2018application.lastresult$\u2019 is an array of elements where each element, application.lastresult$[i], represents a possible result through the following shadow variables:\n\n","When the multimodal browser () receives the recognition results () in an ECMAScript field variable array for a field specified in the multimodal application (), the recognition results () may be stored in field variable array using shadow variables similar to the application variable \u2018application.lastresult$.\u2019 For example, a field variable array may represent a possible recognition result through the following shadow variables:\n\n","In the method of , determining (), by the multimodal browser (), user output () for the user in dependence upon the user input () includes determining () the user output () for the user in dependence upon the recognition results (). The multimodal browser () may determine () the user output () for the user in dependence upon the recognition results () according to the method of  by executing an ECMAScript script that generates user output based on the recognition results () provided by a speech engine. For further explanation, consider another segment of the exemplary multimodal application above:",{"@attributes":{"id":"p-0108","num":"0146"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<html xmlns=\u201chttp:\/\/www.w3.org\/1999\/xhtml\u201d"},{"entry":"xmlns:vxml=\u201chttp:\/\/www.w3.org\/2001\/vxml\u201d"},{"entry":"xmlns:ev=\u201chttp:\/\/www.w3.org\/2001\/xml-events\u201d"},{"entry":"xmlns:xv=\u201chttp:\/\/www.voicexml.org\/2002\/xhtml+voice\u201d"},{"entry":"xml:lang=\u201cen-US\u201d>"},{"entry":"<head>"},{"entry":"\u2003\u2003<vxml:form id=\u201cvforml\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<vxml:field name=\u201cuser input\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<vxml:prompt src=\u201c#pl\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003<grammar>"},{"entry":"\u2003\u2003\u2003\u2003<![CDATA["},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003#JSGF VI.0;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003grammar questionaire;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003public <questionaire> ="},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003([I had] [a | an] <rating> [experience])"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003{$=$rating};"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<rating> = excellent {$=1} | ok {$=2} | terrible {$=3};"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003]]>"},{"entry":"\u2003\u2003\u2003\u2003<\/vxml:grammar>"},{"entry":"\u2003\u2003\u2003\u2003<vxml:filled>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<vxml:assign name=\u201ctemp\u201d expr=\u201cnextForm( )\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003<\/vxml:filled>"},{"entry":"\u2003\u2003\u2003\u2003<\/vxml:field>"},{"entry":"\u2003\u2003<\/vxml:form>"},{"entry":"\u2003\u2003..."},{"entry":"\u2003\u2003<script type=\u201ctext\/javascript\u201d>"},{"entry":"\u2003\u2003\u2003\u2003function nextForm( )"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003next(application.lastresult$);"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003function next(choice)"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003var paragraph = document.getElementByld(\u201c#p2\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003var textNode;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003if (choice == 1 || choice == 2)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003textNode ="},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003document.createTextNode(\u201cThank you"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003for your business!\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003paragraph.style = \u201cemotion: happy\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003if (choice == 3)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003textNode ="},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003document.createTextNode(\u201cI'm sorry. I'll"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003get a live operator to talk to you.\u201d;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003paragraph.style = \u201cemotion: sad; color: red\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003paragraph.appendChild(textNode);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003var e = document.createEvent(\u201cUIEvents\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003e.initEvent(\u201cDOMActivate\u201d,\u201ctrue\u201d,\u201ctrue\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003document.getElementByld(\u2018vform2\u2019).dispatchEvent(e);"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003<\/script>"},{"entry":"\u2003\u2003..."},{"entry":"<\/head>"},{"entry":"..."},{"entry":"<\/html>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The exemplary multimodal application segment above instructs a multimodal browser to execute an ECMAScript script implementing a function \u2018nextForm\u2019 when the multimodal browser receives recognition results for the VoiceXML field \u2018user input\u2019 of the VoiceXML form \u2018vform1\u2019 Using the semantic interpretation scripts in the <rating> grammar rule, the recognition results are assigned a value of \u20181\u2019 if the voice utterance contains the word \u2018excellent.\u2019 The recognition results are assigned a value of \u20182\u2019 if the voice utterance contains the word \u2018ok.\u2019 The recognition results are assigned a value of \u20183\u2019 if the voice utterance contains the word \u2018terrible.\u2019 Readers will recall that the recognition results may be stored in the \u2018application.lastresult$\u2019 variable.","In the exemplary multimodal application segment above, the \u2018nextForm\u2019 function calls the \u2018next\u2019 function using the recognition results received by the multimodal browser from the speech engine as a parameter. When the recognition results are assigned a value of \u20181,\u2019 then the \u2018next\u2019 function generates user output \u201cThank you for your business!\u201d When the recognition results are assigned a value of \u20182,\u2019 then the \u2018next\u2019 function also generates user output \u201cThank you for your business!\u201d When the recognition results are assigned a value of \u20183,\u2019 then the \u2018next\u2019 function generates user output \u201cI'm sorry. I'll get a live operator to talk to you.\u201d In such a manner, the multimodal browser may determine the user output for the user based on the recognition results.","To further understand how the ECMAScript script implementing the \u2018nextForm\u2019 function is executed when the multimodal browser receives recognition results for the VoiceXML field \u2018user input\u2019 of the VoiceXML form \u2018vform1,\u2019 readers will note that the function call for the \u2018nextForm\u2019 function is contained in a VoiceXML <filled> element, which is in turn contained in VoiceXML <field> element. The exemplary <filled> element above is only executed when the parent <field> element is filled with a value. For example, the exemplary <filled> element above is only executed when the \u2018user input\u2019 field of the \u2018vform1\u2019 dialog is filled with a value from the recognition result \u2018application.lastresult$.\u2019 Upon executing the exemplary <filled> element, the \u2018nextForm\u2019 function is executed.","Determining (), by the multimodal browser (), a style () for the user output () in dependence upon the user input () according to the method of  includes determining () the style () for the user output () in dependence upon the recognition results (). The multimodal browser () may determine () the style () for the user output () in dependence upon the recognition results () according to the method of  by executing an ECMAScript script that assigns the style () to the user output () in the Document Object Model (\u2018DOM\u2019) representing the multimodal application. For further explanation, consider another segment of the exemplary multimodal application above:",{"@attributes":{"id":"p-0113","num":"0151"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<html xmlns=\u201chttp:\/\/www.w3.org\/1999\/xhtml\u201d"},{"entry":"xmlns:vxml=\u201chttp:\/\/www.w3.org\/2001\/vxml\u201d"},{"entry":"xmlns:ev=\u201chttp:\/\/www.w3.org\/2001\/xml-events\u201d"},{"entry":"xmlns:xv=\u201chttp:\/\/www.voicexml.org\/2002\/xhtml+voice\u201d"},{"entry":"xml:lang=\u201cen-US\u201d>"},{"entry":"<head>"},{"entry":"\u2003\u2003<vxml:form id=\u201cvforml\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<vxml:field name=\u201cuser input\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<vxml:prompt src=\u201c#pl\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003<grammar>"},{"entry":"\u2003\u2003\u2003\u2003<![CDATA["},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003#JSGF VI.0;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003grammar questionaire;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003public <questionaire> ="},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003([I had] [a | an] <rating> [experience])"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003{$=$rating};"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<rating> = excellent {$=1} | ok {$=2} | terrible {$=3};"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003]]>"},{"entry":"\u2003\u2003\u2003\u2003<\/vxml:grammar>"},{"entry":"\u2003\u2003\u2003\u2003<vxml:filled>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<vxml:assign name=\u201ctemp\u201d expr=\u201cnextForm( )\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003<\/vxml:filled>"},{"entry":"\u2003\u2003\u2003\u2003<\/vxml:field>"},{"entry":"\u2003\u2003<\/vxml:form>"},{"entry":"\u2003\u2003..."},{"entry":"\u2003\u2003<script type=\u201ctext\/javascript\u201d>"},{"entry":"\u2003\u2003\u2003\u2003function nextForm( )"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003next(application.lastresult$);"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003function next(choice)"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003var paragraph = document.getElementByld(\u201c#p2\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003var textNode;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003if (choice == 1 || choice == 2)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003textNode ="},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003document.createTextNode(\u201cThank you"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003for your business!\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003paragraph.style = \u201cemotion: happy\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003if (choice == 3)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003textNode ="},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003document.createTextNode(\u201cI'm sorry. I'll"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003get a live operator to talk to you.\u201d;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003paragraph.style = \u201cemotion: sad; color: red\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003paragraph.appendChild(textNode);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003var e = document.createEvent(\u201cUIEvents\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003e.initEvent(\u201cDOMActivate\u201d,\u201ctrue\u201d,\u201ctrue\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003document.getElementByld(\u2018vform2\u2019).dispatchEvent(e);"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003<\/script>"},{"entry":"\u2003\u2003..."},{"entry":"<\/head>"},{"entry":"..."},{"entry":"<\/html>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The exemplary multimodal application segment above instructs a multimodal browser to execute an ECMAScript script implementing a function \u2018nextForm\u2019 when the multimodal browser receives recognition results for the VoiceXML field \u2018user input\u2019 of the VoiceXML form \u2018vform1.\u2019 Using the semantic interpretation scripts in the <rating> grammar rule as mentioned above, the recognition results are assigned a value of \u20181\u2019 if the voice utterance contains the word \u2018excellent.\u2019 The recognition results are assigned a value of \u20182\u2019 if the voice utterance contains the word \u2018ok.\u2019 The recognition results are assigned a value of \u20183\u2019 if the voice utterance contains the word \u2018terrible.\u2019 Readers will recall that the recognition results may be stored in the \u2018application.lastresult$\u2019 variable.","In the exemplary multimodal application segment above, the \u2018nextForm\u2019 function calls the \u2018next\u2019 function using the recognition results received by the multimodal browser from the speech engine as a parameter. When the recognition results are assigned a value of \u20181,\u2019 the \u2018next\u2019 function assigns the style \u2018emotion: happy\u2019 to the user output \u201cThank you for your business!\u201d When the recognition results are assigned a value of \u20182,\u2019 the \u2018next\u2019 function also assigns the style \u2018emotion: happy\u2019 to the user output \u201cThank you for your business!\u201d When the recognition results are assigned a value of \u20183,\u2019 however, the \u2018next\u2019 function assigns the style \u2018emotion: sad; color: red\u2019 to the user output \u201cI'm sorry. I'll get a live operator to talk to you.\u201d In such a manner, the multimodal browser may determine the style for the user output based on the recognition results. The manner in which the style \u2018emotion: happy\u2019 and the style \u2018emotion: sad; color: red\u2019 affect the rendering of the user output will vary depending on the expressive output characteristics applied to each style using dynamic HTML technologies, such as CSS, and extensions to SSML, such as those describe in E","Readers will note that the remaining steps in the method of  operate in a manner similar to the method of . As mentioned above, the prosody event advantageously allows the multimodal browser to synchronize rendering the user output according to the style in both a visual mode of user interaction and a voice mode of user interaction.","Exemplary embodiments of the present invention are described largely in the context of a fully functional computer system for providing expressive user interaction with a multimodal application. Readers of skill in the art will recognize, however, that the present invention also may be embodied in a computer program product disposed on signal bearing media for use with any suitable data processing system. Such signal bearing media may be transmission media or recordable media for machine-readable information, including magnetic media, optical media, or other suitable media.","Examples of recordable media include magnetic disks in hard drives or diskettes, compact disks for optical drives, magnetic tape, and others as will occur to those of skill in the art. Examples of transmission media include telephone networks for voice communications and digital data communications networks such as, for example, Ethernets\u2122 and networks that communicate with the Internet Protocol and the World Wide Web. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that, although some of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware, nevertheless, alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.","It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
