---
title: System and method for searching multiple disparate search engines
abstract: Described is a system and method for searching multiple disparate search engines. More particularly, a search system provides search engine manager that operates to provide a standard interface with which one or more search engines may be queried through a search client. The search system being extensible, allows for the addition of search engines beyond the time of the initial construction of the search system. Each search engine, being wrapped around a COM (component object model) object, first registers with the search system through the wrapper, the wrapper providing communication between the search engine manager and the search engine. When initiated by a client, a query is transmitted to the search engines in series, the search engines execute the query in parallel, and the results are returned asynchronously to the client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07451136&OS=07451136&RS=07451136
owner: Microsoft Corporation
number: 07451136
owner_city: Redmond
owner_country: US
publication_date: 20010809
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EMBODIMENTS OF THE INVENTION"],"p":["This utility application is related to a previously filed U.S. Provisional Application, Application No. 60\/237,804, filed on Oct. 11, 2000, the benefit of the earlier filing date of which is hereby claimed under 35 U.S.C. \u00a7 119 (e).","The present invention relates to database searching and search engines. More specifically, the invention relates to searching multiple disparate search engines.","Electronic information searching and search capabilities are an important and evolving part of computing technology. Search engines are a general class of applications that search a database for specified query parameters and return a list of documents associated with those query parameters. Search engines may also be associated with a single application. For example, computer programs often have an associated help module that allows a user to search for a help topic on that particular computer program.","One limitation common to search engines is that they are only able to search a single source. Search engines associated with a computer program may search a database associated with the help module, generally without searching any other source. To search other sources, a user has to launch another search engine to perform the search. For instance, a help module may allow a user to search a help database about an associated application with one query, but another search engine may be required to search the WWW for similar information. The user cannot search both sources at the same time from the same search engine.","Meta searchers, most commonly associated with the WWW, are not actually search engines, but rather provide a common front end for multiple search engines. Meta searchers interact directly with a native interface to each of the multiple search engines, making it impossible for other search engines to easily make their information available to the meta searcher. This limitation creates a barrier to adding additional search engines to the meta searcher.","These and other problems render existing search systems inadequate to easily make available the information stored by many search engines to a common search client.","The present invention overcomes the problems identified above by providing a common interface with which one or more search engines may be queried through a common search client, and which allows various search engines to easily register with the common search client. Briefly stated, the search system provides a uniform wrapper that exposes a common interface to a search manager, and which interacts with a search engine through the search engine's native interface. Through the use of many such uniform wrappers, an arbitrary number of search engines may \u201cplug in\u201d or be added to the system at any time, thereby extending the search capabilities of the search system with each new addition.","In one aspect, the present invention provides a search system for performing electronic data searches using a standardized set of interfaces. Preferably, standard COM interfaces are provided between a search manager and multiple search engines. Each search engine is \u201cwrapped\u201d by a COM object that exports a search engine application program interface (API). The wrapper provides communication between the search engine manager and its associated search engine. The search engine may be on a local machine, a network, the Internet, or the like. Each search engine registers with the search system. A list of registered search engines is kept in a store of search engines, such as a local XML file. With this construct, a search query may be provided to the search manager by a search client and passed to each of the several search engines via the standard wrapper APIs. Results from each search engine may be returned, via the standard APIs, to the search client.","In one example, when a client executes a query, the search engine manager calls each wrapper registered to handle queries for participating search engines. The wrappers may be called to execute their respective searches asynchronously in parallel. Optionally, the client may enable or disable particular registered search engines. The search results of each search engine may be returned as the searches are completed. Status updates may be provided to the search engine manager as the searches are performed, such as which searches are complete and which are still being processed. If a particular search engine allows for refined search capabilities, those may also be made available to the client.","Advantageously, the search system is extensible, allowing for a more unified system for performing search queries. In other words, there are no limitations to the number of search engines available to a client. The only practical limitation of the search system is the number of registered search engines.","One embodiment of the present invention takes the form of a computer-implemented system or method for performing search queries on multiple disparate search engines with each search engine having its own native interface. Each search engine includes a wrapper that exports a common set of interfaces to a search manager. The wrappers for the several search engines are dynamically loadable into the search system. The search manager may receive a search query and present it to each of the several wrappers using the common interfaces. Each wrapper then transforms the queries into the native format of the respective wrapper, and passes the transformed query to the associated search engine. The wrappers may also present the results of the query to the search manager using the same common interfaces. This particular embodiment, together with certain alternatives, is described in detail below with reference to the included Figures.","Illustrative Operating Environment","With reference to , an exemplary system for implementing the invention includes a computing device, such as computing device . In a very basic configuration, computing device  typically includes at least one processing unit  and system memory . Depending on the exact configuration and type of computing device, system memory  may be volatile (such as RAM), non-volatile (such as ROM, flash memory, etc.) or some combination of the two. System memory  typically includes an operating system , one or more program modules , and may include program data . This basic configuration is illustrated in  by those components within dashed line .","Computing device  may also have additional features or functionality. For example, computing device  may also include additional data storage devices (removable and\/or non-removable) such as, for example, magnetic disks, optical disks, or tape. Such additional storage is illustrated in  by removable storage  and non-removable storage . Computer storage media may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. System memory , removable storage  and non-removable storage  are all examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can accessed by computing device . Any such computer storage media may be part of device . Computing device  may also have input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, etc. Output device(s)  such as a display, speakers, printer, etc. may also be included. These devices are well know in the art and need not be discussed at length here.","Computing device  may also contain communication connections  that allow the device to communicate with other computing devices , such as over a network. Communications connections  is one example of communication media. Communication media may typically be embodied by computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave or other transport mechanism, and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.","Illustrative Search System",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 2","FIG. 2"],"b":["200","220","260","266","200","260","266","260","266","262","264","266","260"]},"The search system  is also operable with any type of client  that can be used to formulate and present a search query to the search manager . The client  may be configured to provide a user interface, or may be configured to provide search capabilities to an application program, or the like. In this example, the illustrative client  is a Help Center module provided with the Windows 2000 operating system owned and licensed by the Microsoft Corporation of Redmond, Wash. The Help Center module provides search capabilities for topics relating to features of the operating system or other installed application programs. It will be appreciated, however, that the client  can be any application or software module configured to interface with the search engine manager  and provide search query functionality. The client  may be further configured to provide query modifiers, such as for selecting which of the available registered search engines to perform the query. The client  may additionally and optionally provide other query limitations.","The search system  also includes a search engine manager , a search engine store , and search engine wrappers -. Briefly stated, the search engine manager  is configured to receive a query initiated by the client  as well as any additional information provided with the query. The additional information provided may include parameters, variable, or limitations to the query provided by the client. One such parameter may include the maximum number of results to be returned. Search engine manager  is configured to build a query from the information received from the client  and pass the standard query to one or more search engine wrappers -. The components of the search engine manager  are discussed in greater detail below.","The search engine store  is configured to store information to identify to the system  the search engine wrappers - and search engines -. The information in the search engine store  is used by the search engine manager  to identify search engines, such as search engines -, that have registered themselves for service with the system . The information stored may include a wrapper identifier or wrapper ID for each search engine wrapper - and possibly additional capabilities or limitations of each search engine -. The wrapper ID can be used to allow a client  to select or deselect search engines -. In one embodiment, the search engine store  may be an eXtensible Markup Language (XML) type file maintained by an HCUpdate service  to store information about search engines that register with the system .","Search engine wrappers - are configured to receive the standard query from the search engine manager  via a set of common interfaces between each search engine wrapper and the search engine manager . Each search engine wrapper is additionally configured to translate the received query into the native format of its respective search engine. The components of each search engine wrapper - are discussed in greater detail below.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3","b":["240","230","240","230"]},"First, Search engine manager  includes a client interface , a query generation module , and a wrapper interface . The client interface  of search engine manager  provides Application Programming Interfaces (APIs) that allow the client  to communicate with the search engine manager . It is through client interface  that search engine manager  receives query information from the client , as well as passing progress updates back to the client  when called.","Query generation module  is configured to receive the query from the client interface , along with any additional information or limitations regarding the query, and build a standard query in a format understood by the search engine wrappers -. The standard query is in a common format and includes sufficient information from the client's query to retrieve information related to the client's query from each of the registered search engines.","Wrapper interface  provides the APIs that allow the search engine manager  to communicate with each search engine wrapper, such as search engine wrapper . Wrapper interface  is configured to issue the standard query in a common format to each search engine wrapper that is registered to provide search capabilities.","Next, the search engine wrapper  includes a manager interface , a translation module , a wrapper ID , and a search engine interface . Search engine wrapper  is representative of the other search engine wrappers - that may be registered with the system , but that each search engine wrapper may be different to accommodate the native communication mechanism of the search engine wrapper's respective search engine.","Manager interface  provides the APIs for the search engine wrapper  to communicate with the search engine manager . Through manager interface , search engine wrapper  receives the standard query and passes back progress updates of the query's execution by search engines -.","Translation module  is configured to translate the standard query received at the manager interface  to the native format of the search engine supported by the wrapper , search engine  in this case. Each search engine wrapper includes a translation module  that translates the standard query into a query in the native format of the search engines - associated with that search engine wrapper -. In this way, the query originally generated by the client may be presented to each search engine in the native format of the search engine without undue modification to the search engine to receive many various forms of search query.","Wrapper ID  is an identifier for the search engine wrapper . Wrapper ID  may be presented to a service charged with maintaining the search engine store  as an identifier for the wrapper during the registration process. The wrapper ID  may be stored in the search engine store  to allow the search engine manager  to enumerate each search engine wrapper - from the search engine store .","Search engine interface  provides the APIs for search engine wrapper  to communicate with search engine . Each search engine wrapper registered with the system  transforms the standard query created by the search engine manager  into a native format understandable by the search engine associated with the wrapper. For that reason, the search engine interface  for each wrapper is likely to include code or modules that result in a different transformation of the standard query. Thus, a difference between search engine wrappers - may be discovered when examined at their associated search engine interface .","The logical operations of the various embodiments of the present invention are implemented (1) as a sequence of computer implemented steps or program modules running on a computing system and\/or (2) as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system implementing the invention. Accordingly, the logical operations making up the embodiments of the present invention described herein are referred variously as operations, structural devices, acts, modules, or the like. It will be recognized by one skilled in the art that these operations, structural devices, acts, modules, or the like may be implemented in software, in firmware, in special purpose logic, analog circuitry, or any combination thereof without deviating from the spirit and scope of the present invention as recited within the claims attached hereto.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 4","b":["230","200","400","410","200","200","400","420"]},"At block , search wrapper  calls a service charged with maintaining a data store, such as the search engine store , to register as a provider of searching capability. For instance, the search wrapper  may call an HCUpdate service  to register itself as providing search capabilities to the search system . Search engine wrapper  may provide a wrapper ID , its interface information, and may possibly include additional information describing its associated search engine . Search engine wrapper  may also provide limitations or additional parameters required by search engine  to complete a search query. Once search engine wrapper  has presented its registration information to the search engine store , the process continues to block .","At block , wrapper ID  and the interface information for search engine  is stored in a database. The database may be of any type. For example, an XML file may be used to store the wrapper and search engine interface information. The database (such as the search engine store  shown in ) is available to search engine manager , allowing search engine manager  to access the database when a query is initiated by the client . By registering, search engine wrapper  has made the search capabilities of search engine  available to the search system . When the wrapper ID  and other search engine information of search engine wrapper  has been stored, the process proceeds to decision block .","At decision block , the search system  determines whether there remain search engine wrappers to register their search services. If so, blocks  and  are repeated until the search engines - currently requesting to be registered are registered. Although only four search engines - are depicted in , any number of search engines may be registered with the search system . Also, blocks  and  may be repeated at any time to register search engines with the search system . For the search system  depicted in , blocks  and  are repeated until each search engine - has been registered with the search system . Once all requesting search engines have been registered with the search system , the process proceeds to block  where the process ends.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 5","b":["240","230","236","500","510","260","266","200","230","236","200","200","200","500","520"]},"At block , search engine manager  discovers which search engines - are registered with the search system . In this embodiment, search engine manager  accesses the search engine store  to retrieve identification information for each registered search engine wrapper, such as a wrapper ID  corresponding to each search engine wrapper. Search engine manager  may also retrieve other information from the search engine store , such as any parameter limitations or query modifiers that are possibly associated with a particular search engine. Once the registered search engines - have been discovered, the process  proceeds to block .","At block , search engine manager  receives a query initiated by the client . The client  passes the query to search engine manager  via client interface . In this embodiment, the client interface  is a standardized COM interface allowing for ease of communication between the client  and search engine manager . The query may additionally identify any particular search engines to exclude from the search if that information has been made available to the client via the client interface . Once search engine manager  receives the client query, the process  proceeds to block .","At block , search engine manager  builds a standard query to be passed to the several search engine wrappers -. The client query is in a format that meets the requirement of the API between the client  and search engine manager . The search engine manager  then generates a standard query from the client query. The query generation module , shown in , performs the task of building the standard query in the standard format that will be understood by the several search engine wrappers -. Once the standard query is built, the process proceeds to block .","At block , search engine manager  passes the standard query to each registered search engine wrapper -. The standard query is passed via wrapper interface , shown in . In this embodiment, the standard query is transmitted to each search engine wrapper - in series until each search engine wrapper - has received the standard query. Optionally, if any search engines were identified for exclusion in the client query, the search engine manager  does not transmit the standard query to the excluded search engine wrappers. In one embodiment, the standard query is the same for each search engine wrapper -. In another embodiment, the search engine manager  may change the standard query in accordance with any specific information about a particular search engine identified when the several registered search engine wrappers were registered. Once the standard query has been sent to the search engine wrappers -, the process continues at decision block .","At decision block , search engine manager  idles awaiting results from one of the search engine wrappers, for example search engine wrapper . While idling, search engine wrapper  may notify the search engine manager  of the progress of the standard query, described below. In one embodiment, the results of each search engine wrapper - return as they are completed rather than in a particular order. Depending on whether search engine wrapper  is finished with the standard query, the process  proceeds to decision block  or block  for search engine wrapper .","At decision block , when the results have not been received for search engine wrapper , the elapsed time since the standard query was passed to search engine wrapper  is compared to a specified allowable time. If the elapsed time is greater than the specified allowable time, the standard query transmitted to search engine wrapper is \u201ctimed out.\u201d If the standard query transmitted to search engine wrapper  has timed out, the process continues to block . If the standard query transmitted to search engine wrapper  has not timed out, the process  continues to block .","At block , if the standard query for search engine wrapper  is not complete and is not timed out, a progress update, along with the wrapper ID , is transmitted back to search engine manager  signifying that the standard query is incomplete. After the progress update and wrapper ID  are transmitted back to search engine manager , the process  returns to decision block , and if necessary decision block  and block , until the standard query transmitted to search engine wrapper  is complete or timed out.","At block , if the standard query for search engine wrapper  is not complete and has timed out, a failure notification is returned to the search engine manager . In one embodiment, the wrapper ID  identifying search engine wrapper  is returned with the failure notification to the search engine manager . Once the failure notification is transmitted to the search engine manager , the process  proceeds to block  where the process  for search engine wrapper  ends.","At block , if the standard query transmitted to search engine wrapper  is complete, a progress update is returned to the search engine manager  signifying that the standard query is complete. In one embodiment, the wrapper ID  identifying search engine wrapper  is returned with the notification that the standard query is complete. Alternatively, a success or error code may be returned to search engine manager  by the particular search engine wrapper -. The operations of blocks , , , , and  are repeated for each registered search engine wrapper - that is enabled. As the standard queries are performed asynchronously, search engine wrappers - may complete the operations at different times. Once the search engine manager  has received a notification from every enabled search engine wrapper - that they are complete with their standard queries (or a timeout occurs), the process  continues to block , where the process  ends.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 6","FIG. 5"],"b":["230","260","600","230","236","600","610","230","236","200","220","240","244","600","620"]},"At block , search engine wrapper  receives the standard query from search engine manager . The standard query is transmitted to search engine wrapper  via manager interface . The standard query may be the standard query transmitted to the rest of the search engine wrappers -, or it may have been modified as previously stated. Once search engine wrapper  receives the standard query, the process  proceeds to block .","At block , the standard query received from search engine manager  is translated from the standard format, as understood by the COM interface between search engine manager  and search engine wrapper , to the native format understood by search engine . The translation is performed by the translation module  of search engine wrapper  and is likely to be different for each search engine wrapper. Each of the several translation modules of the several search engine wrappers -, such as translation module , translates the standard query into the native format of its respective search engine -. Once the standard query of search engine manager  has been translated by the translation module  of the search engine wrapper , the process  continues at block .","At block , the translated query, translated by the translation module  of the search engine wrapper , is transmitted from search engine wrapper  to search engine  to be executed. The translated query is transmitted via search engine interface . As mentioned above, search engine interface  is the native interface format by which search engine  was originally configured to receive queries. As the translated query is now in this native format, the translated query may be executed by the search engine . Optionally, the query parameters or values may be modified dynamically according to any additional or unique search capabilities search engine  may provide. Once search engine wrapper  has sent the translated query, translated by the translation module  of the search engine wrapper , to search engine , the process continues at decision block .","At decision block , search engine wrapper  idles awaiting a response from each of the search engine wrappers that their respective queries have been completed or have timed out. While idling for these responses, search engine wrapper  may periodically send progress updates, as mentioned previously in relation to , to search engine manager . The search engine wrapper  continues to idle until the search engine  completes the query or is timed out. Once search engine wrapper  receives the responses that the query is complete or has timed out from the search engine wrapper , the process  continues to block .","At block , search engine wrapper  returns the results obtained from the search engines - to the search engine manager . In one embodiment, the results are returned in response to a request for the results from the search engine manager . In another embodiment, the results are returned at the end of a specified time period. The results may then be returned to the client  together with or separate from the results from the other search engine wrappers -. Once search engine wrapper  returns the results to client , the process  proceeds to block  where the process ends.","The above specification, examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention, the invention resides in the claims hereinafter appended."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
