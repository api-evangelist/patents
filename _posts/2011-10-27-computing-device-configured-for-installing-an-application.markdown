---
title: Computing device configured for installing an application
abstract: A computing device configured for installing an application is described. The computing device includes a processor and instructions stored in memory that is in electronic communication with the processor. The computing device determines if an application instruction length is a first instruction length or a second instruction length. The first instruction length is shorter than the second instruction length. If the application instruction length is the first instruction length, then the computing device runs an application installer in a first instruction length mode. If the application instruction length is the second instruction length, then the computing device determines if an operating system instruction length is the first instruction length or the second instruction length. If the operating system instruction length is the second instruction length, then the computing device disables a compatibility module.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08732690&OS=08732690&RS=08732690
owner: Crimson Corporation
number: 08732690
owner_city: Dover
owner_country: US
publication_date: 20111027
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["The present disclosure relates generally to computers and computer-related technology. More specifically, the present disclosure relates to a computing device for installing an application.","The use of electronic devices has become increasingly prevalent in modern society. As the cost of electronic devices has declined and as the usefulness of electronic devices has increased, people are using them for a wide variety of purposes. For example, many people use electronic devices to perform work tasks as well as to seek entertainment. One type of an electronic device is a computer.","Computer technologies continue to advance at a rapid pace. Computers commonly used include everything from hand-held computing devices to large multi-processor computer systems. These computers include software, such as applications including user interfaces, in order to make them useful and accessible to an end user. Computers are increasingly linked with other computers through networks.","The expansion of computer technology has led to an increase of computer diversity. Computers have become diverse in terms of hardware and software. For example, some software may run on some hardware and may not run on other hardware. Such diversity among computers may be beneficial for users desiring a broad range of computing options. However, the diversity of computers may be very challenging for computer management. As can be observed from this discussion, improved systems and methods for managing computers may be beneficial.","A computing device configured for installing an application is described. The computing device includes a processor and instructions stored in memory that is in electronic communication with the processor. The computing device determines if an application instruction length is a first instruction length or a second instruction length. The first instruction length is shorter than the second instruction length. If the application instruction length is the first instruction length, then the computing device runs an application installer in a first instruction length mode. If the application instruction length is the second instruction length, then the computing device determines if an operating system instruction length is the first instruction length or the second instruction length. If the operating system instruction length is the second instruction length, then the computing device disables a compatibility module. If the application instruction length is the second instruction length, then the computing device runs the application installer in a second instruction length mode. The application installer and the application instruction length may be received from a second computing device.","The compatibility module may run an application in the first instruction length mode in an operating system that operates in the second instruction length mode. The first instruction length may be 32 bits. The second instruction length may be 64 bits. The computing device may also terminate and report an error when the application instruction length is the second instruction length and the operating system instruction length is the first instruction length.","The computing device may determine if the compatibility module has been disabled by another entity. If the compatibility module has been disabled by another entity, then the compatibility module is not disabled or enabled. Disabling the compatibility module may not comprise accessing a registry. The computing device may also enable the compatibility module after the application installer has run in the second instruction length mode.","A method for installing an application on a computing device is also described. The method includes determining if an application instruction length is a first instruction length or a second instruction length. The first instruction length is shorter than the second instruction length. The method also includes running an application installer in a first instruction length mode if the application instruction length is the first instruction length. If the application instruction length is the second instruction length, then the method includes determining if an operating system instruction length is the first instruction length or the second instruction length. The method includes disabling a compatibility module if the operating system instruction length is the second instruction length. The method further includes running the application installer in a second instruction length mode if the application instruction length is the second instruction length.","A non-transitory, tangible computer-readable medium for installing an application is additionally described. The computer-readable medium includes executable instructions for determining if an application instruction length is a first instruction length or a second instruction length. The first instruction length is shorter than the second instruction length. The computer-readable medium also includes executable instructions for running an application installer in a first instruction length mode if the application instruction length is the first instruction length. If the application instruction length is the second instruction length, then the computer-readable medium includes executable instructions for determining if an operating system instruction length is the first instruction length or the second instruction length. The computer-readable medium additionally includes executable instructions for disabling a compatibility module if the operating system instruction length is the second instruction length. The computer-readable medium also includes executable instructions for running the application installer in a second instruction length mode if the application instruction length is the second instruction length.","In software distribution management, system administrators deploy software to one or more computing devices through a variety of means including Windows Installer (MSI) files, custom executable (EXE) file installers, batch files, power shell files and script files. One of the challenges associated with software distribution management is that deployed software may be received by computing devices with different types of operating systems. Operating system (OS) vendors have extended the types of operating systems by supporting both 32-bit types and 64-bit types. In order to support older software, 64-bit operating systems support 32-bit applications through an abstraction layer to enable them to run correctly.","For instance, Microsoft implements \u201cWindows 32-bit on Windows 64-bit\u201d (WoW64) in the 64-bit versions of Windows to enable 32-bit applications to run. In short, WoW64 changes the way 32-bit applications view the resources on the system in such a way that enables them to run in a compatibility mode. For example, for 32-bit applications the OS maps the % SystemRoot %\\System32 directory to the % SystemRoot %\\SysWOW64 directory with the latter having 32-bit versions of standard applications including cmd.exe, regedit, PowerShell, cscript & wscript. The registry is also remapped for 32-bit applications so that access to HKEY_LOCAL_MACHINE\\Software is rerouted to HKEY_LOCAL_MACHINE\\Software\\Wow6432Node. Thus, 32-bit applications running on a 64-bit version of Windows will see the file system and registry differently due to features in WOW64 called file redirection and registry redirection. This file redirection and registry redirection may be problematic.","For example, if an application installer (e.g., batch file, powershell or script, etc.) is written to install a 64-bit application but is run as a 32-bit application on the 64-bit OS, then it will write to the registry at HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\<VendorName>. However, the installed application will expect it to be at HKEY_LOCAL_MACHINE\\Software\\<VendorName>. Thus, the application installer may read and write to the wrong location in the registry when accessing HKEY_LOCAL_MACHINE\\Software and may read and write files to the wrong location on the disk if accessing % SystemRoot %\\System32.","In an ideal world the OS would implicitly determine that it should or should not run the application installer with file system redirect and registry redirect turned on or off. However, this may not be possible because it may be difficult to accurately determine what the batch file or script writer intended. Thus, it may be beneficial for the script writer's intent be explicitly defined.","Previous approaches for disabling the data redirect have required the deployment script to call into the Windows Management Instrumentation (WMI) layer of the Windows application programming interface (API) to access the registry. In doing so, the WMI layer bypasses the data redirect system. This method is limited to VBScript scripts and is not a suitable implementation for software distribution management programs that need to support other types of scripts and batch files. Moreover, the method using WMI requires a substantially greater amount of code to achieve the same purposes, making it more difficult for administrators to write and maintain these batch files and scripts.","Systems and methods for installing an application are disclosed. In one configuration, a computing device may receive a software package that includes an indicator if an application installer should be run as a 64-bit application or not. This may allow the computing device to correctly execute the application installer.","For example, one or more computing devices may receive a software package (e.g., a deployed software distribution package) for installing an application. The deployment process may be performed by a computing device receiving a software package and running an application installer. The software package may include an application installer, configuration information and any necessary data. In one configuration, the application installer includes one or more of a script (e.g., batch file, PowerShell script or some other script, etc.) and\/or an executable file (e.g., MSI, EXE, etc.). The computing device may receive a software package that has been configured for deployment to different operating systems. In one example, a computing device may receive a software package that includes an indicator that the application installer is to be run as a 64-bit application. In some cases, the software package may be pushed or pulled to the client in some fashion for deployment. The computing device may load the software package including the configuration information. The computing device may read the configuration information to determine how the deployment should occur. If the computing device determines that the software package was not marked to be run as a 64-bit application, the computing device may run the application installer as a traditional 32-bit application. If the computing device determines that the software package was marked to be run as a 64-bit application, the computing device may check the operating system to see if it supports 64-bit application execution. If the computing device determines that the operating system supports 64-bit applications, the computing device may disable the WOW64 redirect features. The computing device may then execute the application installer. The computing device may then re-enable the WOW64 redirect features. Thus, the computing device may run the application installer in a fashion that is suitable for both 32-bit and 64-bit applications, which may be beneficial.","Previous approaches were limited to the execution of 32-bit applications because the WOW64 data redirection would causes issues. The systems and methods disclosed herein may be beneficial for allowing 32-bit execution as needed for backwards compatibility.","In one configuration, the computing device may determine if data redirection has already been disabled. If the computing device determines that data redirection had already been disabled, then there may not be a need to disable it again or to enable it after running the application installer. The computing device may preserve whether data redirection has already been disabled in a variable so that the data redirection may be re-enabled only if it had not been disabled previously. Making this determination may be beneficial if a plug-in or other 3rd party component has already disabled data redirect. Thus, data redirection may not be inadvertently re-enabled when it has already been disabled by another entity.","In another configuration, the computing device may determine that the software package was marked for 64-bit deployment, but was being deployed to a 32-bit OS. In this case, the computing device may determine that it should not run the software package as a 32-bit application. Instead, the computing device may stop the application installation process and indicate that an error has occurred. The computing device may additionally generate a report that the application installation process was terminated.","In another configuration, the computing device may generate detailed reports such as error and\/or status reports. In some cases, these reports may be transmitted to the system administrator. These reports may help the computing device and\/or the system administrator understand which code path was executed. These reports may also provide the computing device and\/or the administrator with the information needed to take corrective action should the application installation process fail.","In some configurations, procedural steps and\/or components may be interchanged to obtain logically equivalent results. For instance, they may be interchanged for performance reasons. If one is considered faster than the other, then it may come first. In one configuration, the systems and methods disclosed herein may be implemented in software. In another configuration, the systems and methods disclosed may be implemented in firmware or hardware logic. In yet another configuration, a combination of software, firmware and\/or hardware may be used to implement the systems and methods disclosed.","Various configurations of the systems and methods are now described with reference to the Figures, where like reference numbers may indicate identical or functionally similar elements. The configurations of the present systems and methods, as generally described and illustrated in the Figures herein, could be arranged and designed in a wide variety of different configurations. Thus, the following more detailed description of several configurations, as represented in the Figures, is not intended to limit the scope of the systems and methods, as claimed, but is merely representative of the various configurations of the systems and methods.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 1","b":["102","102","104","112","120","122","128","130"]},"The operating system  may include operating system information  and a compatibility module . Examples of operating systems include Microsoft Windows operating systems, Linux operating systems, UNIX operating systems, Mac OS operating systems, BSD operating systems, Android operating systems, BlackBerry OS operating systems, iOS operating systems, Symbian operating systems, QNX operating systems, etc. The operating system information  may included information about the operating system (e.g., name, version, type, etc.). The operating system information  may include an operating system instruction length . The operating system length  may be the word size of the operating system instructions (e.g., 16 bits, 32 bits, 64 bits, 128 bits, etc.).","The compatibility module  may allow an operating system with one word size (e.g., 64 bits) to properly run an application with a different word size (e.g., 32 bits). For example, the compatibility module  may be an abstraction layer and\/or subsystem. In one example, the compatibility module  may be \u201cWindows 32-bit on Windows 64-bit\u201d (WoW64). WoW64 provides a 32-bit environment and interface for allowing 32-bit applications to run unmodified on a 64-bit system. WoW64 may redirect data and registry keys to create the 32-bit environment. In another example, the compatibility module  may be an instruction set tailored to handle 32-bit instructions on a 64-bit system. Although the example provided describes a compatibility module  for running 32-bit applications in a 64-bit system, the compatibility module  may be used for many different instruction word lengths (e.g., 32 bits on 128-bit systems, 64 bits on 128-bit systems, etc.).","The software package  may include an application installer  and configuration information . The application installer  may install an application onto the computing device . The application installer  may include one or more of a script (e.g., batch file, PowerShell script or some other script, etc.) and\/or an executable file (e.g., MSI, EXE, etc.). In one configuration, the application installer  may allow for an unattended install (the application installer  may install the application on the computing device  without any interaction from a user, for example). In another configuration, the application installer  includes a deployment script that may run upon deployment of the software package  to the computing device . For example, another computing device (e.g., administrative system, server, etc.) may deploy a software package  (e.g., software distribution package) to the computing device . In another example, the configuration, the software package  may be preexisting on the computing device  and\/or received from a storage device.","The configuration information  may be used for configuring the software package  and\/or the application installer . The configuration information  may include an application instruction length . The application instruction length  may be the word size of the application instructions (e.g., 16 bits, 32 bits, 64 bits, 128 bits, etc.).","The agent  may be used to manage and\/or perform operations on the computing device . For example, the agent  may receive and perform instructions from an administrative system. For instance, the agent  may receive a software package  that was deployed to it from the administrative system. In other instances, the agent  may uninstall software, eliminate threats (e.g., viruses, Trojans, worms, malware, adware, spyware, etc.), report information to the administrative system (e.g., usage reports, status, etc.), update firmware, etc. This may be done according to instructions received from the administrative system, for example.","The determination block\/module  may determine an instruction length (e.g., the length of an instruction) for a piece of software. Examples of instruction length include 8 bits, 16 bits, 32 bits, 64 bits, 128 bits, etc. An instruction length may be an indicated value. For example, instruction length may be indicated by a string value, an integer value, a sample instruction, a bit sequence, a signal, a source code, a Boolean, or some other indicator. The determination block\/module  may include data regarding a first instruction length  (e.g., 16 bits, 32 bits, 64 bits, etc.) and data regarding a second instruction length  (e.g., 32 bits, 64 bits, 128 bits, etc.). The first instruction length  may be shorter than the second instruction length . The computing device  may determine an instruction length based on an instruction length indicator and the data regarding the first instruction length  and\/or the data regarding the second instruction length . For example, the determination block\/module  may determine an instruction length is a first instruction length  by comparing an instruction length indicator (e.g., a string value of 32-bits) with data regarding a first instruction length  (e.g., a string value of 32-bits) and with data regarding a second instruction length  (e.g., a string value of 64-bits). In another example, the determination block\/module  may determine an instruction length is a second instruction length  by making a function call (a query if the software is 64-bit, for example) to the software to obtain an instruction length indicator (e.g., a Boolean value of True) and comparing the instruction length indicator with data regarding a first instruction length  (e.g., a Boolean value of False) and with data regarding a second instruction length  (e.g., a Boolean value of True). Thus, the determination block\/module  may determine that an instruction length (of an operating system  and\/or an application, for example) is a first instruction length  (e.g., 32 bits) or a second instruction length  (e.g., 64 bits).","The determination block\/module  may make other determinations. For example, the determination block\/module  may determine whether the compatibility module  is disabled by another entity such as another application. For example, the determination block\/module  may make a function call to the operating system that returns a Boolean value that indicates if the compatibility module  is enabled or disabled.","The disabling block\/module  may disable the compatibility module . For example, the disabling block\/module  may make a function call that disables the compatibility module . In another example, the disabling block\/module  may send a signal that disengages the compatibility module . In one configuration, the disabling block\/module  may disable the compatibility module  using a script (batch file, PowerShell script or some other script, etc.). In one configuration, the disabling block\/module  may disable the compatibility module  without calling into the WMI layer of windows (without using a VBScript to access the registry, for example). In some configurations, the disabling block\/module  may enable the compatibility module .","The communications block\/module  may be used to communicate with one or more computing devices (e.g., administrative system, server, computing device, etc.). For example, the communications block\/module  may format and\/or send messages to another computing device. Additionally or alternatively, the communications block\/module  may receive messages from the one or more computing devices.","The operating system , software package , agent , determination block\/module , disabling block\/module  and communications block\/module  may be implemented in software, firmware or hardware and\/or some combination of the three.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 2","b":["200","200","120","102"]},"The computing device  may begin  operation by determining  whether an application instruction length  is a first instruction length  or a second instruction length . In one configuration the determination block\/module  may determine whether the application instruction length  is a first instruction length  or a second instruction length . In one example, the computing device  may receive a software package  with the application instruction length  indicated as the first instruction length . In this case, the determination block\/module  may determine  that the application instruction length  is the first instruction length .","If the computing device  determines  that the application instruction length  is the first instruction length , then the computing device  may run  the application installer  in a first instruction length mode. In one configuration, (when the operating system instruction length  is the first instruction length , for example) the first instruction length mode may be a native mode of the operating system (e.g., the application instruction length  and the operating system instruction length  are the same length). In another configuration, (when the operating system instruction length  is the second instruction length , for example) the first instruction length mode may be a compatibility mode provided through the compatibility module  (e.g., the application instruction length  may be the first instruction length  and the operating system instruction length  may be the second instruction length ). Operation may end  after running  the application installer  in the first instruction length mode.","In another example, the computing device may receive a software package with the application instruction length  indicated as the second instruction length . In this case, the determination block\/module  may determine  that the application instruction length  is the second instruction length .","If the computing device  determines  that the application instruction length  is the second instruction length , then the computing device  may determine  whether an operating system instruction length  is a first instruction length  or a second instruction length . In one example, the operating system instruction length  may be the first instruction length . In this case, the determination block\/module  may determine  that the operating system instruction length  is the first instruction length . If the computing device  determines  that the operating system instruction length  is the first instruction length , then the computing device  may run  the application installer  in the first instruction length mode as described previously. In another example, the operating system instruction length  may be the second instruction length . In this case, the determination block\/module  may determine  that the operating system instruction length  is the second instruction length .","If the computing device  determines  that the operating system instruction length  is the second instruction length , then the computing device  may disable  the compatibility module. In one configuration, the disabling block\/module  may be used to disable  the compatibility module . Disabling  the compatibility module  may comprise disengaging the compatibility module . For example, the compatibility module  may be disengaged so that if an application indicated as a first instruction length (e.g., 32-bit) application is run while the compatibility module  is disengaged, the application will not use the compatibility module . For instance, the application will run in the second instruction length mode (e.g., native mode, 64-bit mode) and will not be run in the first instruction length mode (e.g., compatibility mode, 32-bit mode).","The computing device  may run  the application installer  in the second instruction length mode. In this case, when the application instruction length  and the operating system instruction length  are both the second instruction length , the application installer  may run  in the native mode of the operating system (according to the second instruction length in this instance).","In one configuration, operation may end  after running  the application installer  in the second instruction length mode. In another configuration, the computing device  may optionally enable  the compatibility module . In one configuration, the disabling block\/module  may be used to enable  the compatibility module . Enabling  the compatibility module  may comprise engaging and\/or re-engaging the compatibility module . For example, the compatibility module  may be engaged so that if an application indicated as a first instruction length (e.g., 32-bit) application is run while the compatibility module  is engaged, then the application will use the compatibility module . For instance, the application will run in the first instruction length mode (e.g., compatibility mode, 32-bit mode) and will not be run in the second instruction length mode (e.g., native mode, 64-bit mode). Operation may end  after enabling  the compatibility module .",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 3","b":["300","300","120","102"]},"The computing device  may begin  operation by receiving  a software package  (e.g., software distribution package). In one configuration, the communications block\/module  may be used to receive  the software package . For example, the communications block\/module  may receive  the software package  from another computing device (e.g., an administrative system).","The computing device  may determine  whether an operating system instruction length  is 64 bits. Determining  whether an operating system instruction length  is 64 bits may be similar to determining  an operating system instruction length as illustrated in . In one example, the operating system instruction length  may be 32 bits. In this case, the determination block\/module  may determine  that the operating system instruction length  is not 64 bits.","If the computing device  determines  that the operating system instruction length  is not 64 bits, then the computing device  may run  the application installer  in a 32-bit mode. Running  the application installer in 32-bit mode may be similar to running  the application installer in the first instruction length mode as illustrated in . Operation may end  after running  the application installer  in the 32-bit mode.","In another example, the operating system instruction length  may be 64 bits. In this case, the determination block\/module  may determine  that the operating system instruction length  is 64 bits.","If the computing device  determines  that the operating system instruction length  is 64 bits, then the computing device  may determine  whether an application instruction length is 64 bits. Determining  whether an application instruction length  is 64 bits may be similar to determining  whether an application instruction length is a first instruction length or a second instruction length as illustrated in . In one example, the computing device  may receive a software package  with the application instruction length  indicated as 32 bits. In this case, the determination block\/module  may determine  that the application instruction length  is not 64 bits.","If the computing device  determines  that the application instruction length  is not 64 bits, then the computing device  may run  the application installer  in the 32-bit mode step described previously. In another example, the computing device  may receive a software package  with the application instruction length  indicated as 64 bits. In this case, the determination block\/module  may determine  that the application instruction length  is 64 bits.","It should be noted that steps of determining the operating system instruction length and the application instruction length may be interchanged. For example, as illustrated in , the application instruction length  may be determined  before the operating system instruction length  may be determined . In contrast, as illustrated in , the operating system instruction length  may be determined  before the application instruction length  may be determined .","If the computing device  determines  that the application instruction length  is 64 bits, then the computing device  may disable  the compatibility module . Disabling  the compatibility module  may be similar to the step of disabling  the compatibility module  as illustrated in . The computing device  may run  the application installer  in 64-bit mode. Running  the application installer  in 64-bit mode may be similar to running  the application installer  in the second instruction length mode as illustrated in .","The computing device  may enable  the compatibility module . In one configuration, the disabling block\/module  may be used to enable  the compatibility module . Enabling  the compatibility module  may comprise engaging and\/or re-engaging the compatibility module . For example, the compatibility module  may be engaged so that if an application indicated as a first instruction length (e.g., 32-bit) application is run while the compatibility module  is engaged, then the application will use the compatibility module . For instance, the application will run in the first instruction length mode (e.g., compatibility mode, 32-bit mode) and will not be run in the second instruction length mode (e.g., native mode, 64-bit mode). Operation may end  after enabling  the compatibility module .",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 4","FIG. 1"],"b":["402","434","434","402","402","102","402","420","402","434"]},"The managed node  may include an operating system , a software package , a determination block\/module , a disabling block\/module  and a communications block\/module . The operating system  may be similar to the operating system  described previously. The operating system  may include operating system information  and a compatibility module . The operating system information  may include an operating system instruction length . The operating system information  may be similar to the operating system information  described previously. The operating system instruction length  may be similar to the operating system instruction length  described previously. The compatibility module  may be similar to the compatibility module  described previously.","The software package  may be similar to the software package  described previously. The software package  may include an application installer  and configuration information . Configuration information  may include an application instruction length . The application installer  may be similar to application installer  described previously. Configuration information  may be similar to configuration information  described previously. Application instruction length  may be similar to application instruction length  described previously.","The determination block\/module  may be similar to the determination block\/module  described previously. The determination block\/module  may include data regarding a first instruction length  and data regarding a second instruction length . The first instruction length  may be similar to the first instruction length  described previously and the second instruction length  may be similar to the second instruction length  described previously. Data regarding an instruction length may refer to an instruction length (e.g., 8-bit, 16-bit, 32-bit, 64-bit, 128-bit, etc.). In some cases, there may be additional and\/or different instruction lengths (e.g., where the first is 32 bits and the second is 128 bits, where the first is 64 bits and the second is 128 bits, where the first is 128 bits and the second is 32 bits, etc.).","The disabling block\/module  may be similar to the disabling block\/module  described previously. The communications block\/module  may be similar to the communications block\/module  described previously. The communications block\/module  may be coupled to a network . Examples of the network  include personal area networks, local area networks, wide area networks, etc. The network  may couple the managed node  to the administrative system .","In one configuration, the communications block\/module  may receive a software package . In another configuration, the communications block\/module  may send status reports to the administrative system . For example, the communications block\/module  may send a report on the status of the application installation process.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 5","b":["534","502","534","434","502","402"]},"The administrative system  may con a software package  (e.g., software distribution package). Configuring  the software package  may include configuring the application installer  and\/or configuring the configuration information . For example, the administrative system  may receive and\/or determine application instruction length  information and add that information to the software package  (the information may be added to a configuration file included in the software package , for example).","The administrative system  may set  the application instruction length . In one configuration, the application instruction length  is set  as part of the configuration  of the software package . In one configuration, the administrative system may receive a manually entered value indicating the application instruction length  information. In another configuration, the administrative system may automatically determine the application instruction length  information based on the application. In yet another configuration, the administrative system may determine the application instruction length  information based on a file or resource that indicates an application instruction length . The application instruction length  may be included in configuration information  of the software package . For example, the application instruction length  may be added to a configuration file included in the software package .","The administrative system  may transmit  the software package  to the managed node . For example, a software package  may include a script (e.g., a deployment script) that configures the computing device and executes an executable file of the program to be run (e.g., an application installer, utility program, etc.). For instance, a software package  may be a software distribution package for Microsoft Office 2010 Professional 64-bit that includes a deployment script and an executable file that installs Microsoft Office 2010 Professional 64-bit. In one configuration, the software distribution package may be transmitted  across a network . The managed node  may receive  the software distribution package (e.g., software package ).","The managed node  may determine  the application instruction length . Determining  the application instruction length  may be similar to determining  the application instruction length  as illustrated in . If the application instruction length  is determined  to be 32 bits, then the application installer  is run  in 32-bit mode. Running  in 32-bit mode may be similar to one or more of running , . If the application instruction length  is determined  to be 64 bits, then the operating system instruction length  is determined . Determining  the operating system instruction length  may be similar to determining  the operating system instruction length  as illustrated in . If the operating system instruction length  is determined  to be 32 bits, then the application installer  is run  in 32-bit mode. Running  in 32-bit mode may be similar to running  in 32-bit mode described previously. If the operating system instruction length  is determined  to be 64 bits, then the status of the compatibility module  is determined .","Determining  the status of the compatibility module  may comprise determining  whether the compatibility module  is enabled or disabled. In some cases, another entity may change the status (e.g., enable, disable) of the compatibility module . The compatibility module  is disabled  unless the compatibility module  was disabled by another entity. For example, if the status of the compatibility module  is enabled, then the compatibility module  will be disabled . However, if the status of the compatibility module  is disabled, then the compatibility module  will not be disabled .","The managed node  may run  the application installer  in 64-bit mode. Running  in 64-bit mode may be similar to running  in 64-bit mode as illustrated in . Following the running  of the application installer  in 64-bit mode, the managed node  may enable  the compatibility module  unless disabled by another entity. For example, if the compatibility module  was disabled , then the compatibility module  may be enabled . However, if the status of the compatibility module  is disabled (e.g., disabled by another entity) then the compatibility module  may not be enabled .","The managed node  may report  the installation status of the software distribution package. In some configurations, the report may be generated at the end of the application installation process. In other configurations, one or more reports may be generated and reported  throughout the application installation process. In one configuration, a result of one or more of the determinations is reported  as the determinations occur. The installation status may be reported  to the administrative system .",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 6","b":["600","600","420","402"]},"The managed node  may begin  operation by receiving  a software package  (e.g., software distribution package). Receiving  a software package  may be similar to receiving  a software package as illustrated in . For example, the managed node  may receive  a software package  from an administrative system . The software package  received  from the administrative system  may include an application installer  and an application instruction length  (e.g., 32 bits, 64 bits, etc.).","The managed node  may determine  whether the application instruction length  is 64 bits. Determining  whether an application instruction length  is 64 bits may be similar to determining  whether an application instruction length is 64 bits as illustrated in . In one example, the computing device  may receive  a software package  with the application instruction length  indicated as 32 bits. In this case, the determination block\/module  may determine  that the application instruction length  is not 64 bits.","If the computing device determines  that the application instruction length  is not 64 bits, then the computing device  may run  the application installer  in the 32-bit mode. Running  the application installer  in 32-bit mode may be similar to running  the application installer  in the 32-bit mode as illustrated in . The managed node  may report  the application installation status after running  the application installer  in 32-bit mode. For example, the managed node  may transmit a report to the administrative system  about the results of the application installation process. For instance, the report may include the determinations of any decision blocks and any logs associated with any operations. Operation may end  after reporting  the status of the application installation process.","In another example, the computing device  may receive  a software package  with the application instruction length  indicated as 64 bits. In this case, the determination block\/module  may determine  that the application instruction length  is 64 bits.","If the managed node  determines  that the application instruction length  is 64 bits, then the managed node  may determine  whether the operating system instruction length  is 64 bits. Determining  whether an operation system instruction length  is 64 bits may be similar to determining  whether an operating system instruction length  is 64 bits as illustrated in . In one example, the operating system instruction length  may be 32 bits. In this case, the determination block\/module  may determine  that the operating system instruction length  is not 64 bits.","If the managed node  determines  that the operating system instruction length  is not 64 bits, then the managed node  may report  an error. The managed node  may send a report  to the administrative system  indicating that an error (e.g., the software package  is attempting to install a 64-bit application on a 32-bit operating system) has occurred. Operation may end  after reporting  the error. In another example, the operating system instruction length  may be 64 bits. In this case, the determination block\/module  may determine  that the operating system instruction length  is 64 bits.","If the managed node  determines  that the operating system instruction length  is 64 bits, then the managed node  may determine  whether the compatibility module  is disabled. For example, the determination block\/module  may determine  whether the compatibility module  is disabled. In one example, the compatibility module  has not been disabled. In this case, the determination block\/module  may determine  that the compatibility module  has not been disabled.","If the managed node  determines  that the compatibility module  has not been disabled, then the managed node  may disable  the compatibility module . Disabling  the compatibility module  may be similar to the step of disabling  the compatibility module  as illustrated in . The managed node  may run  the application installer  in 64-bit mode. Running  the application installer  in 64-bit mode may be similar to running  the application installer  in 64-bit mode as illustrated in . The managed node  may enable  the compatibility module . Enabling  the compatibility module  may be similar to enabling  the compatibility module  as illustrated in . The managed node  may report  the application installation status as described previously after enabling  the compatibility module .","In another example, the compatibility module  has been disabled (e.g., by another entity). In this case, the determination block\/module  may determine  that the compatibility module  has been disabled. If the managed node  determines  that the compatibility module  has been disabled, then the managed node  may run  the application installer  in 64-bit mode. Running  the application installer  in 64-bit mode may be similar to running  the application installer  in 64-bit mode as illustrated in . The managed node  may report  the application installation status as described previously after running  the application installer  in 64-bit mode.","In some configurations, the managed node  may additionally report the results of the determination steps (e.g., , , ) and\/or errors to the administrative system . For example, the managed node  may report to the administrative system  that the compatibility module  was disabled (e.g., determined  to be disabled). In another example, the managed node  may report to the administrative system  that an error occurred during the disabling  of the compatibility module . Reports may be used by the managed node  and\/or the administrative system  to overcome errors and\/or for reporting purposes. In some case, the reports are made at the time of the determinations and\/or errors to improve the error response time.",{"@attributes":{"id":"p-0086","num":"0085"},"figref":["FIG. 7","FIG. 7","FIG. 7"],"b":["734","766","766","768","768","768","768","702","702","702","770","770","770","768","702","702","702","770","770","770","768","702","702","702","770","770","770","702","766","768","770","702","766","768","770","702"],"i":["a","b","c","a ","a","b","c","a","b","c","b ","d","e","f","d","e","f","c ","g","h","i","g","h","i"]},{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 8","FIG. 8"],"b":["802","102","402","502","702","434","534","734","802","802","200","300","600"]},"The computing device  may include a processor  and memory . The processor  controls the operation of the computing device  and may be embodied as a microprocessor, a microcontroller, a digital signal processor (DSP) or other device known in the art. The memory  may include instructions and data . The processor  typically performs logical and arithmetic operations based on program instructions and data stored within the memory . That is, instructions and data may be stored and\/or run on the processor .","The computing device  typically may include one or more communication interfaces  for communicating with other electronic devices. The communication interfaces  may be based on wired communication technology, wireless communication technology, or both. Examples of different types of communication interfaces  include a serial port, a parallel port, a Universal Serial Bus (USB), an Ethernet adapter, an IEEE 1394 bus interface, a small computer system interface (SCSI) bus interface, an infrared (IR) communication port, a Bluetooth wireless communication adapter, and so forth.","The computing device  typically may include one or more input devices  and one or more output devices . Examples of different kinds of input devices  include a keyboard, mouse, microphone, remote control device, button, joystick, trackball, touchpad, lightpen, etc. Examples of different kinds of output devices  include a speaker, printer, etc. One specific type of output device which may be typically included in a computer system is a display device . Display devices  used with embodiments disclosed herein may utilize any suitable image projection technology, such as a cathode ray tube (CRT), liquid crystal display (LCD), light-emitting diode (LED), gas plasma, electroluminescence, or the like. A display controller  may also be provided, for converting data stored in the memory  into text, graphics, and\/or moving images (as appropriate) shown on the display device .","Of course,  illustrates only one possible configuration of a computing device wherein systems and methods for determining a group based on a relationship may be performed. Various other architectures and components may be utilized.","In the above description, reference numbers have sometimes been used in connection with various terms. Where a term is used in connection with a reference number, this is meant to refer to a specific element that is shown in one or more of the Figures. Where a term is used without a reference number, this is meant to refer generally to the term without limitation to any particular Figure.","As used herein, the term \u201cagent\u201d and other variations thereof may refer to software and\/or hardware that is used to manage and\/or perform operations on a managed computing device. For example, the agent may receive and perform instructions from an administrative system. For instance, the agent may install software, uninstall software, eliminate threats (e.g., viruses, Trojans, worms, malware, adware, spyware, etc.), report information to the administrative system (e.g., usage reports, status, etc.), update firmware, detect unauthorized use, detect unauthorized products on the managed computing device, etc.","As used herein, the term \u201ccoupled\u201d and other variations thereof may mean that one element is connected to another element directly or indirectly. For example, if a first element is coupled to a second element, the first element may be connected directly to the second element or may be connected to the second element through another element.","The term \u201cdetermining\u201d encompasses a wide variety of actions and, therefore, \u201cdetermining\u201d can include calculating, computing, processing, deriving, investigating, looking up (e.g., looking up in a table, a database or another data structure), ascertaining and the like. Also, \u201cdetermining\u201d can include receiving (e.g., receiving information), accessing (e.g., accessing data in a memory) and the like. Also, \u201cdetermining\u201d can include resolving, selecting, choosing, establishing and the like.","The phrase \u201cbased on\u201d does not mean \u201cbased only on,\u201d unless expressly specified otherwise. In other words, the phrase \u201cbased on\u201d describes both \u201cbased only on\u201d and \u201cbased at least on.\u201d","The term \u201cprocessor\u201d should be interpreted broadly to encompass a general purpose processor, a central processing unit (CPU), a microprocessor, a digital signal processor (DSP), a controller, a microcontroller, a state machine, and so forth. Under some circumstances, a \u201cprocessor\u201d may refer to an application specific integrated circuit (ASIC), a programmable logic device (PLD), a field programmable gate array (FPGA), etc. The term \u201cprocessor\u201d may refer to a combination of processing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration.","The term \u201cmemory\u201d should be interpreted broadly to encompass any electronic component capable of storing electronic information. The term memory may refer to various types of processor-readable media such as random access memory (RAM), read-only memory (ROM), non-volatile random access memory (NVRAM), programmable read-only memory (PROM), erasable programmable read only memory (EPROM), electrically erasable PROM (EEPROM), flash memory, magnetic or optical data storage, registers, etc. Memory is said to be in electronic communication with a processor if the processor can read information from and\/or write information to the memory. Memory that is integral to a processor is in electronic communication with the processor.","The terms \u201cinstructions\u201d and \u201ccode\u201d should be interpreted broadly to include any type of computer-readable statement(s). For example, the terms \u201cinstructions\u201d and \u201ccode\u201d may refer to one or more programs, routines, sub-routines, functions, procedures, etc. \u201cInstructions\u201d and \u201ccode\u201d may comprise a single computer-readable statement or many computer-readable statements. It should be noted that the instructions described herein may be executable instructions.","The term \u201ccomputer-readable medium\u201d refers to any available medium that can be accessed by a computer or processor. By way of example, and not limitation, a computer-readable medium may comprise RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer or processor. It should be noted that a computer-readable medium may be non-transitory and tangible. Disk and disc, as used herein, includes compact disc (CD), laser disc, optical disc, digital versatile disc (DVD), floppy disk and Blu-ray\u00ae disc where disks usually reproduce data magnetically, while discs reproduce data optically with lasers.","Software or instructions may also be transmitted over a transmission medium. For example, if the software is transmitted from a website, server, or other remote source using a coaxial cable, fiber optic cable, twisted pair, digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave, then the coaxial cable, fiber optic cable, twisted pair, DSL, or wireless technologies such as infrared, radio, and microwave are included in the definition of transmission medium.","The methods disclosed herein comprise one or more steps or actions for achieving the described method(s). The method steps and\/or actions may be interchanged with one another without departing from the scope of the claims. In other words, unless a specific order of steps or actions is required for proper operation of the method that is being described, the order and\/or use of specific steps and\/or actions may be modified without departing from the scope of the claims.","It is to be understood that the claims are not limited to the precise configuration and components illustrated above. Various modifications, changes and variations may be made in the arrangement, operation and details of the systems, methods, and apparatus described herein without departing from the scope of the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4","sub":"; "},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
