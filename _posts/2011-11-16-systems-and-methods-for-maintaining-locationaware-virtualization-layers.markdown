---
title: Systems and methods for maintaining location-aware virtualization layers
abstract: A computer-implemented method may include 1) maintaining an application virtualization subsystem on a computing system having a base file system and base registry of a base operating system, 2) installing an application and/or data to a virtualization layer on the computing system without changing the base file system and/or base registry such that the virtualization layer is isolated from the base file system and/or base registry, 3) identifying a current geographical location of the computing system, and 4) determining, based on the current geographical location of the computing system, whether the virtualization layer should be enabled such that access attempts associated with the application and/or data are redirected to the virtualization layer or should be disabled such that access attempts associated with the application and/or data are allowed to pass through to the base file system and/or base registry. Various other methods, systems, and computer-readable media are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09060004&OS=09060004&RS=09060004
owner: Symantec Corporation
number: 09060004
owner_city: Mountain View
owner_country: US
publication_date: 20111116
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCES TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["This application is related to U.S. Pat. No. 7,162,724 filed 11 Jun. 2003 and titled \u201cLayered Computing Systems and Methods\u201d, U.S. Pat. No. 7,117,495 filed 11 Jun. 2003 and titled \u201cSystems and Methods for the Creation of Software Packages Using Layered Systems\u201d, and U.S. Pat. No. 7,165,260 filed 11 Jun. 2003 and titled \u201cLayered Computing Systems and Methods for Insecure Environments\u201d, the disclosures of each of which are incorporated, in their entirety, by this reference.","With the growing trend of employees using their own personal devices for work purposes, it has become increasing difficult for Information Technology (\u201cIT\u201d) administrators of enterprises to control and provision company resources. Many IT administrators turn to virtualization technologies to quickly provision computing devices with applications and\/or settings. However, traditional virtualization technologies do not adequately handle security, confidentiality, and legality issues that may be associated with the use of a company's systems and\/or data. What is needed, therefore, is a mechanism that enables IT administrators and others to more efficiently and effectively provision and control computing systems.","As will be described in greater detail below, the instant disclosure generally relates to systems and methods for maintaining location-aware virtualization layers. In one example, a computer-implemented method for maintaining location-aware virtualization layers may include 1) maintaining an application virtualization subsystem on a computing system having a base file system and base registry of a base operating system, 2) installing an application and\/or data to a virtualization layer on the computing system without changing the base file system and\/or base registry such that the virtualization layer is isolated from the base file system and\/or base registry, 3) identifying a current geographical location of the computing system, and 4) determining, based on the current geographical location of the computing system, whether the virtualization layer should be enabled such that access attempts associated with the application and\/or data are redirected to the virtualization layer or should be disabled such that access attempts associated with the application and\/or data are allowed to pass through to the base file system and\/or base registry.","In some embodiments the method may also include maintaining a virtualization-layer activation policy that associates a geographical location with the application and\/or data in the virtualization layer. In such embodiments, determining whether the virtualization layer should be activated or deactivated may include determining whether the current geographical location of the computing system is within the geographical location associated with the application and\/or data in the virtualization layer.","According to various embodiments, the method may include enabling the virtualization layer if the current location of the computing system is within the geographical location associated with the application and\/or data in the virtualization layer and disabling the virtualization layer if the current location of the computing system is not within the geographical location associated with the application and\/or data in the virtualization layer.","Additionally or alternatively, the method may include identifying an attempt to access the application and\/or data in the virtualization layer, where determining whether the virtualization layer should be enabled or disabled is performed in response to the attempt to access the application and\/or data in the virtualization layer.","In some examples, identifying the attempt to access the application in the virtualization layer may include detecting an attempt to launch the application, determining whether the virtualization layer should be enabled or disabled may include determining that the virtualization layer should be enabled because the current geographical location of the computing system is within a geographical location where the application is allowed to run, and the method may further include enabling the virtualization layer to allow the application to launch.","According to certain embodiments, the method may further include determining that the computing system is no longer within the geographical location where the application is allowed to run and, in response to determining that the computing system is no longer within the geographical location where the application is allowed to run, automatically stopping the application by disabling the virtualization layer.","In at least one embodiment, the application is stored to a read-only sublayer of the virtualization layer and the data is stored to a plurality of read-write sublayers of the virtualization layer. In such embodiments, the method may further include, for each read-write sublayer in the plurality of sublayers 1) maintaining a virtualization-layer activation policy that associates a geographical location with the data in the read-write sublayer, 2) if the current location of the computing system is within the geographical location associated with the data in the read-write sublayer, enabling the read-write sublayer to allow access to the data in the read-write sublayer, and 3) if the current location of the computing system is not within the geographical location associated with the data in the read-write sublayer, disabling the read-write sublayer to prohibit access to the data in the read-write sublayer.","In one embodiment, a system for implementing the above-described method may include 1) a virtualization subsystem programmed on a computing system, the computing system having a base file system and base registry of a base operating system, 2) an installation module programmed to install an application and\/or data to a virtualization layer on the computing system without changing the base file system and\/or base registry such that the virtualization layer is isolated from the base file system and\/or base registry, 3) a geolocation module programmed to identify a current geographical location of the computing system, 4) a determination module programmed to determine, based on the current geographical location of the computing system, whether the virtualization layer should be enabled such that access attempts associated with the application and\/or data are redirected to the virtualization layer or should be disabled such that access attempts associated with the application and\/or data are allowed to pass through to the base file system and\/or base registry, and 5) at least one processor configured to execute the virtualization subsystem, the installation module, the geolocation module, and the determination module.","In some examples, the above-described method may be encoded as computer-readable instructions on a computer-readable-storage medium. For example, a computer-readable-storage medium may include one or more computer-executable instructions that, when executed by at least one processor of a computing device, may cause the computing device to 1) maintain an application virtualization subsystem on a computing system, the computing system having a base file system and base registry of a base operating system, 2) install an application and\/or data to a virtualization layer on the computing system without changing the base file system and\/or base registry such that the virtualization layer is isolated from the base file system and\/or base registry, 3) identify a current geographical location of the computing system, and 4) determine, based on the current geographical location of the computing system, whether the virtualization layer should be enabled such that access attempts associated with the application and\/or data are redirected to the virtualization layer or should be disabled such that access attempts associated with the application and\/or data are allowed to pass through to the base file system and\/or base registry.","Features from any of the above-mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments, features, and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.","Throughout the drawings, identical reference characters and descriptions indicate similar, but not necessarily identical, elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms, specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However, the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather, the instant disclosure covers all modifications, equivalents, and alternatives falling within the scope of the appended claims.","Embodiments of the instant disclosure may provide a computing device with virtualization layers that are enabled and\/or disabled based on a geographical location of the computing device. By implementing location-aware virtualization layers, the systems and methods described herein may prevent a user from unknowingly breaking a law, may protect sensitive data against being inadvertently or intentionally leaked, may facilitate resource provisioning and control for IT administrators, may provide parents with an effective location-based parental control mechanism, and\/or may provide various other advantages and features.","The following will provide, with reference to , detailed descriptions of exemplary systems for maintaining location-aware virtualization layers. Detailed descriptions of corresponding computer-implemented methods will also be provided in connection with . Descriptions of an exemplary virtualization subsystem are provided in connection with , and descriptions of exemplary geographical location boundaries are provided in connection with . In addition, detailed descriptions of an exemplary computing system and network architecture capable of implementing one or more of the embodiments described herein will be provided in connection with , respectively.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1","b":["100","100","102","100","104","100","106"]},"In addition, and as will be described in greater detail below, exemplary system  may include a geolocation module  programmed to identify a current geographical location of the computing system. System  may also include a determination module  programmed to determine, based on the current geographical location of the computing system, whether the virtualization layer should be enabled such that access attempts associated with the application and\/or data are redirected to the virtualization layer or should be disabled such that access attempts associated with the application and\/or data are allowed to pass through to the base file system and\/or base registry. Although illustrated as separate elements, one or more of modules  in  may represent portions of a single module or application.","In certain embodiments, one or more of modules  in  may represent one or more software applications or programs that, when executed by a computing device, may cause the computing device to perform one or more tasks. For example, and as will be described in greater detail below, one or more of modules  may represent software modules stored and configured to run on one or more computing devices, such as the devices illustrated in  (e.g., computing device  and\/or server ), computing system  in , and\/or portions of exemplary network architecture  in . One or more of modules  in  may also represent all or portions of one or more special-purpose computers configured to perform one or more tasks.","As illustrated in , exemplary system  may also include one or more databases, such as database . In one example, database  may be configured to store virtualization-layer activation policies  that indicate geographical locations where virtualization layers should be activated and\/or deactivated. Database  may also include geographical location data  that may identify current geographical locations of one or more computing devices.","Database  may represent portions of a single database or computing device or a plurality of databases or computing devices. For example, database  may represent a portion of server  in , computing system  in , and\/or portions of exemplary network architecture  in . Alternatively, database  in  may represent one or more physically separate devices capable of being accessed by a computing device, such as server  in , computing system  in , and\/or portions of exemplary network architecture  in .","Exemplary system  in  may be implemented in a variety of ways. For example, all or a portion of exemplary system  may represent portions of exemplary system  in . As shown in , system  may include a computing device  in communication with a server  via a network .","In one embodiment, one or more of modules  from  may, when executed by at least one processor of computing device , enable computing device  to maintaining location-aware virtualization layers. For example, and as will be described in greater detail below, computing device  may include virtualization subsystem , installation module , geolocation module , and determination module . Computing device  may also include base operating system  and virtualization layer . In the example shown in , computing device  may access server  to identify virtualization-layer activation policies  and\/or geographical location data .","In some examples, computing device  may be an employee's device and server  may be managed by an employer or a third-party service provider. As another example, computing device  may be a child's device and server  may be part of a parental-control management system. In other embodiments, computing device  may be a user's device and server  may provide cloud-based support for virtualization services employed by the user.","While  shows virtualization subsystem , installation module , geolocation module , and determination module  in computing device , one or more of these modules may be located on server  and\/or on another remote system. Similarly, virtualization-layer activation policies  and geographical location data  may be located on computing device  instead of server .","Computing device  generally represents any type or form of computing device capable of reading computer-executable instructions. Examples of computing device  include, without limitation, laptops, desktops, servers, cellular phones, personal digital assistants (PDAs), multimedia players, embedded systems, combinations of one or more of the same, exemplary computing system  in , or any other suitable computing device.","Server  generally represents any type or form of computing device that is capable of maintaining and\/or managing location-aware virtualization layers. Examples of server  include, without limitation, application servers and database servers configured to provide various database services and\/or run certain software applications.","Network  generally represents any medium or architecture capable of facilitating communication or data transfer. Examples of network  include, without limitation, an intranet, a wide area network (WAN), a local area network (LAN), a personal area network (PAN), the Internet, power line communications (PLC), a cellular network (e.g., a GSM Network), exemplary network architecture  in , or the like. Network  may facilitate communication or data transfer using wireless or wired connections. In one embodiment, network  may facilitate communication between computing device  and server .",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 3","FIG. 3","FIG. 3","FIG. 1","FIG. 2","FIG. 7","FIG. 8"],"b":["300","100","200","710","800"]},"At step , one or more of the systems described herein may maintain an application virtualization subsystem on a computing system having a base file system and base registry of a base operating system. For example, computing device  may include virtualization subsystem , a base file system, and a base registry.","A virtualization subsystem may be maintained on a computing device in a variety of contexts. For example, an IT administrator may deploy virtualization subsystem  to devices managed by the IT administrator to facilitate compliance objectives, data-loss-prevention, license management, and\/or for a variety of other reasons. Alternatively, a parent may install virtualization subsystem  to a child's computing device to enable the parent to control applications and\/or data accessed by the child in different locations. In some embodiments, a user may install virtualization subsystem  to his or her computing device to facilitate data and\/or application management.","A virtualization subsystem may be maintained on a computing system in any suitable manner. For example, virtualization subsystem  may be installed, updated, configured, and\/or otherwise managed on computing device  and may create and control virtualization layers on computing device .  shows an example of how virtualization subsystem  may be implemented. For example, virtualization subsystem  may include a layer manager (e.g., layer manager  and\/or layering system software  in ) and\/or any other code that facilitates virtualization.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 4","FIG. 4"],"b":["202","216","212","202","401","402","406","408","410","216","216","408","202","408","216","408","406","408","406","410","401","212","406","410","212"]},"When virtualization layer  is enabled, the contents of virtualization layer  may overlay any corresponding files of base file system and base registry . Layering system software  may present base operating system  with an expected, ordinary view of data of the contents of virtualization layer  when virtualization layer  is enabled by intercepting and manipulating file system calls to create the appearance that the contents of virtualization layer  are from base file system and base registry . For example, file and registry calls may be manipulated by redirecting the calls to virtualization layer  rather than base file system and base registry . If virtualization layer  is activated (i.e., enabled), layering system software  may redirect such calls to virtualization layer . If virtualization layer  is not activated (i.e., disabled), layering system software  may allow such calls to pass through to base operating system  or may respond to such calls by indicating that the requested data and\/or application is not available.","Returning to , at step , one or more of the systems described herein may install an application and\/or data to a virtualization layer on the computing system without changing the base file system and\/or base registry such that the virtualization layer is isolated from the base file system and\/or base registry. For example, virtualization subsystem  may install application  and\/or data associated with application  (e.g., application data, settings, etc.) to virtualization layer  of computing device .","Virtualization subsystem  may install data and\/or software to virtualization layer  on computing device  such that virtualization layer  is isolated from base file system and base registry . In this manner, the components installed to virtualization layer  may be used without affecting base file system and base registry . For example, a virtualization layer may overlay software and\/or data that is already installed in base file system and base registry  without affecting the components already installed in base file system and base registry . Alternatively, virtualization subsystem  may install one or more components to virtualization layer  that do not have corresponding components in base file system and base registry . In such embodiments, software and\/or data installed to virtualization layer  may not be available when virtualization layer  is not activated.","Virtualization subsystem  may install data and\/or software to virtualization layer  in a variety of different contexts. For example, an IT administrator may install confidential data to virtualization layer  such that the confidential data may only be accessed in certain locations. An IT administrator may also install an application that is only licensed for use in particular locations to virtualization layer . As another example, a parent may install a set of location-specific parental-control settings to virtualization layer . Various other types of data and software may also be stored to virtualization layer , as discussed in greater detail below.","At step  in , one or more of the systems described herein may identify a current geographical location of the computing system. For example, geolocation module  may determine a current geographical location of computing device . Geolocation module  may determine a current geographical location of computing device  in any suitable manner. For example, geolocation module  may query a Global Positioning System (GPS) component of computing device  for GPS coordinates of computing device . Additionally or alternatively, geolocation module  may use cell-phone tower triangulation to identify the current geographical location of computing device . As another example, geolocation module  may identify the current location of computing device  by determining a network (e.g., a wifi network, a Bluetooth network, a cellular network, etc.) to which computing device  is connected. In some embodiments, geolocation module  may use Radio Frequency Identification (RFID) to determine the current geographical location of computing device . Geolocation module  may also determine the current geographical location of computing device  in any other suitable manner.","At step  in , one or more of the systems described herein may determine, based on the current geographical location of the computing system, whether the virtualization layer should be enabled such that access attempts associated with the application and\/or data are redirected to the virtualization layer or should be disabled such that access attempts associated with the application and\/or data are allowed to pass through to the base file system and\/or base registry. For example, determination module  may determine whether virtualization layer  should be enabled based on the current geographical location of computing device .","Determination module  may determine whether to enable or disable virtualization layer  in a variety of ways. For example, determination module  may access, in database , a virtualization-layer activation policy that associates a geographical location with the application and\/or data in the virtualization layer. A virtualization-layer activation policy may be any policy, setting, tag, metadata, or other information that indicates one or more geographical locations where access to data and\/or an application is allowed or prohibited. Virtualization layer policies may be stored in a database (e.g., database ), a location-index table, as metadata of a virtualization layer or file, and\/or in any other manner that associates the policies with corresponding and\/or software. Determination module  may use a virtualization-layer activation policy to determine whether virtualization layer  should be activated or deactivated by determining whether the current geographical location of the computing system is within the geographical location associated with the application and\/or data in the virtualization layer in the policy.","In some embodiments, determination module  may direct virtualization subsystem  to enable virtualization layer  if the current location of computing device  is within the geographical location associated with the application and\/or data in the virtualization layer. Alternatively, determination module  may direct virtualization subsystem  to disable virtualization layer  if the current location of computing device  is not within the geographical location associated with the application and\/or data in the virtualization layer.","In some embodiments, determination module  may periodically (e.g., every ten minutes, every hour, once a day) check the geographical location of computing device . After determining the geographical location of computing device , determination module  may check any virtualization-layer activation policies associated with data and\/or applications of computing device  to determine whether any virtualization layers should be enabled or disabled based on the current geographical location. Alternatively, determination module  may be prompted to determine whether a virtualization layer should be enabled or disabled in response to a request to access an application and\/or data stored in a virtualization layer.","In some embodiments, determination module  may identify an attempt to launch an application and may determine that a virtualization layer storing the application should be enabled because the current geographical location of the computing system is within a geographical location where the application is allowed to run. In this situation, determination module  may direct virtualization subsystem  to enable the virtualization layer to allow the application to launch. If determination module  determines that the computing system is no longer within the geographical location where the application is allowed to run, determination module  may automatically stop the application by directing virtualization subsystem  to disable the virtualization layer.","For example, a virtualization layer activation policy may indicate that an instant messaging client installed to virtualization layer  may be legal in a country of origin but illegal in other countries. In this example, when computing device  is in the country of origin, determination module  may direct virtualization subsystem  to activate virtualization layer  to enable access to the instant messaging client. However, when computing device  leaves the country of origin, determination module  may determine, based on the current geographical location of computing device  and the virtualization layer activation policy, that computing device  is no longer in a location where access to the instant messaging client is allowed. As a result, determination module  may direct virtualization subsystem  to disable virtualization layer  to prevent access to the instant messaging client.","Virtualization-layer activation policies may define various types of geographical boundaries. In some exemplary embodiments, the geographical boundaries defined by a policy may correspond to cities, states, countries, physical buildings, and\/or property boundaries. The geographical boundaries defined by a policy may also be network boundaries indicating that data and\/or applications may only be accessed within (or cannot be accessed within) a particular wide area network, local area network, cellular network, Bluetooth network, or any other wireless or wired network.","In certain embodiments, a sub-region may be identified within a geographical location. As an example,  illustrates a first physical location  and a sub-region located within the first physical location. A boundary  may be defined to encompass a building . A sub-boundary  may be defined to encompass a room  within building . In one example, building  may be a school and room  may be the library of the school. A first policy may define that a child is not allowed to access the internet on a smartphone while at school. Thus, a virtualization layer that includes an internet browser application may be disabled when the child carries the phone into the school (i.e., within boundary ).","Continuing with the previous example, a second policy may indicate that the child cannot send or receive calls while in the library (i.e., within sub-boundary ). Thus, a virtualization layer with a setting that disables the cellular antenna of the child's phone may be activated when the child enters the library and deactivated when the child leaves the library.","As another example, building  may be an office building of a corporation, and room  may be a conference room within the office building. An IT administrator for the corporation may set up a policy that indicates classified information can only be accessed within the office building and highly classified information can only be accessed within the conference room. The IT administrator may load classified information into a first virtualization layer on an employee's laptop and may associate the first virtualization layer with the policy that restricts data access to the office building. The IT administrator may also load highly classified information into a second virtualization on the employee's laptop and may associate the second virtualization layer with the policy that restricts data access to the conference room.","Continuing with the previous example, when the employee enters the office building, the first virtualization layer may be enabled, thereby allowing access to the classified data. When the employee leaves the office building, the first virtualization layer may be disabled to prevent access to the classified data outside the office building. Similarly, when the employee enters the conference room, the second virtualization layer may be enabled, thereby allowing access to the highly classified data. When the employee leaves the conference room, the second virtualization layer may be disabled to prevent access to the highly classified data outside the conference room. In this manner, embodiments of the instant disclosure may facilitate data loss prevention.","Embodiments of the instant disclosure may also facilitate data loss prevention on a stationary device (e.g., desktop computer, workstation, etc.) and\/or mobile device by deactivating virtual layers containing sensitive data and\/or applications if the device is removed from a building (e.g., inadvertently or as a result of theft), when a device is moved more than a predefined distance from a geographical location, and\/or in a variety of other situations.","Geographical locations identified in virtualization layer activation policies may be defined by a boundary of any shape or size. In some embodiments, a boundary box may be defined using two geographical coordinates (e.g., latitude and longitude coordinates). A boundary may also be defined with more than two geographical coordinates, which may be useful in creating boundaries unique to the various shapes of physical locations.","In some embodiments, a first physical location may include more than one sub-region.  illustrates an exemplary location with multiple sub-regions.  illustrates a real-world location . Real-world location  may include a boundary  defined to be around a building . A sub-boundary  may be defined around an area , and a sub-boundary  may be defined around an area .","In one embodiment, real-world location  may be a hospital, area  may be a first patient's room, and area  may be a second patient's room. An administrator for the hospital may establish policies that control access to patient's data stored in a patient-record database. For example, the administrator may establish a policy that indicates doctors may only access the patient-record database within the hospital. The administrator may install patient-record database access software to a virtualization layer on a doctor's tablet device and may indicate that the virtualization layer should only be activated when the device is within the hospital. Thus, if the doctor tried to access the software outside the hospital, the software would not run because the virtualization layer where the software is installed would be deactivated.","The administrator may also create policies that prohibit the doctor from accessing records of other patients while the doctor is in a current patient's room. In this example, the records for each of the doctor's patients may be stored to different virtualization layers, and the virtualization layer with a particular set of records may only be activated when the doctor enters a hospital room of a patient associated with the particular set of records. For example, if the doctor carries his tablet into a patient's room and accidentally tries to access records of a different patient, access will be denied because the virtualization layer containing the records of the different patient will not be enabled. In this manner, the doctor may be prevented from accidentally exposing records of one patient to another patient and may avoid violating health-care privacy laws.","In some embodiments, data and\/or software may be installed to virtualization sublayers of a virtualization layer. For example, an application may be stored to a read-only sublayer of the virtualization layer, and data associated with the application may be stored to one or more of a plurality of read-write sublayers of the virtualization layer. In this embodiment, for each read-write sublayer in the plurality of sublayers, the system described herein may maintain a virtualization-layer activation policy that associates a geographical location with data in the read-write sublayer. If the current location of the computing system is within the geographical location associated with the data in a read-write sublayer, the read-write sublayer may be enabled to allow access to the data in the read-write sublayer. If the current location of the computing system is not within the geographical location associated with the data in the read-write sublayer, the read-write sublayer may be disabled to prohibit access to the data in the read-write sublayer. For example, the patient-record database access software of the hospital in the previous example may be installed to a read-only sublayer and patient data may be stored to different read-write sublayers for each patient.","A read-only sublayer may include any sublayer that one or more users is prohibited from modifying. For example, a read-only sublayer may include a sublayer that may only be modified by an administrator. A read-only sublayer may provide a base state for an application installation. In contrast, a read-write sublayer may be configured to capture application changes made by users who are prohibited from modifying the read-only sublayer.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 7","b":["710","710","710"]},"Computing system  broadly represents any single or multi-processor computing device or system capable of executing computer-readable instructions. Examples of computing system  include, without limitation, workstations, laptops, client-side terminals, servers, distributed computing systems, handheld devices, or any other computing system or device. In its most basic configuration, computing system  may include at least one processor  and a system memory .","Processor  generally represents any type or form of processing unit capable of processing data or interpreting and executing instructions. In certain embodiments, processor  may receive instructions from a software application or module. These instructions may cause processor  to perform the functions of one or more of the exemplary embodiments described and\/or illustrated herein.","System memory  generally represents any type or form of volatile or non-volatile storage device or medium capable of storing data and\/or other computer-readable instructions. Examples of system memory  include, without limitation, random access memory (RAM), read only memory (ROM), flash memory, or any other suitable memory device. Although not required, in certain embodiments computing system  may include both a volatile memory unit (such as, for example, system memory ) and a non-volatile storage device (such as, for example, primary storage device , as described in detail below). In one example, one or more of modules  from  may be loaded into system memory .","In certain embodiments, exemplary computing system  may also include one or more components or elements in addition to processor  and system memory . For example, as illustrated in , computing system  may include a memory controller , an Input\/Output (I\/O) controller , and a communication interface , each of which may be interconnected via a communication infrastructure . Communication infrastructure  generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure  include, without limitation, a communication bus (such as an ISA, PCI, PCIe, or similar bus) and a network.","Memory controller  generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example, in certain embodiments memory controller  may control communication between processor , system memory , and I\/O controller  via communication infrastructure .","I\/O controller  generally represents any type or form of module capable of coordinating and\/or controlling the input and output functions of a computing device. For example, in certain embodiments I\/O controller  may control or facilitate transfer of data between one or more elements of computing system , such as processor , system memory , communication interface , display adapter , input interface , and storage interface .","Communication interface  broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system  and one or more additional devices. For example, in certain embodiments communication interface  may facilitate communication between computing system  and a private or public network including additional computing systems. Examples of communication interface  include, without limitation, a wired network interface (such as a network interface card), a wireless network interface (such as a wireless network interface card), a modem, and any other suitable interface. In at least one embodiment, communication interface  may provide a direct connection to a remote server via a direct link to a network, such as the Internet. Communication interface  may also indirectly provide such a connection through, for example, a local area network (such as an Ethernet network), a personal area network, a telephone or cable network, a cellular telephone connection, a satellite data connection, or any other suitable connection.","In certain embodiments, communication interface  may also represent a host adapter configured to facilitate communication between computing system  and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include, without limitation, SCSI host adapters, USB host adapters, IEEE 1394 host adapters, SATA and eSATA host adapters, ATA and PATA host adapters, Fibre Channel interface adapters, Ethernet adapters, or the like. Communication interface  may also allow computing system  to engage in distributed or remote computing. For example, communication interface  may receive instructions from a remote device or send instructions to a remote device for execution.","As illustrated in , computing system  may also include at least one display device  coupled to communication infrastructure  via a display adapter . Display device  generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly, display adapter  generally represents any type or form of device configured to forward graphics, text, and other data from communication infrastructure  (or from a frame buffer, as known in the art) for display on display device .","As illustrated in , exemplary computing system  may also include at least one input device  coupled to communication infrastructure  via an input interface . Input device  generally represents any type or form of input device capable of providing input, either computer or human generated, to exemplary computing system . Examples of input device  include, without limitation, a keyboard, a pointing device, a speech recognition device, or any other input device.","As illustrated in , exemplary computing system  may also include a primary storage device  and a backup storage device  coupled to communication infrastructure  via a storage interface . Storage devices  and  generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions. For example, storage devices  and  may be a magnetic disk drive (e.g., a so-called hard drive), a solid state drive, a floppy disk drive, a magnetic tape drive, an optical disk drive, a flash drive, or the like. Storage interface  generally represents any type or form of interface or device for transferring data between storage devices  and  and other components of computing system . In one example, database  from  may be stored in primary storage device .","In certain embodiments, storage devices  and  may be configured to read from and\/or write to a removable storage unit configured to store computer software, data, or other computer-readable information. Examples of suitable removable storage units include, without limitation, a floppy disk, a magnetic tape, an optical disk, a flash memory device, or the like. Storage devices  and  may also include other similar structures or devices for allowing computer software, data, or other computer-readable instructions to be loaded into computing system . For example, storage devices  and  may be configured to read and write software, data, or other computer-readable information. Storage devices  and  may also be a part of computing system  or may be a separate device accessed through other interface systems.","Many other devices or subsystems may be connected to computing system . Conversely, all of the components and devices illustrated in  need not be present to practice the embodiments described and\/or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system  may also employ any number of software, firmware, and\/or hardware configurations. For example, one or more of the exemplary embodiments disclosed herein may be encoded as a computer program (also referred to as computer software, software applications, computer-readable instructions, or computer control logic) on a computer-readable-storage medium. The phrase \u201ccomputer-readable-storage medium\u201d generally refers to any form of device, carrier, or medium capable of storing or carrying computer-readable instructions. Examples of computer-readable-storage media include, without limitation, transmission-type media, such as carrier waves, and physical media, such as magnetic-storage media (e.g., hard disk drives and floppy disks), optical-storage media (e.g., CD- or DVD-ROMs), electronic-storage media (e.g., solid-state drives and flash media), and other distribution systems.","The computer-readable-storage medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer-readable-storage medium may then be stored in system memory  and\/or various portions of storage devices  and . When executed by processor , a computer program loaded into computing system  may cause processor  to perform and\/or be a means for performing the functions of one or more of the exemplary embodiments described and\/or illustrated herein. Additionally or alternatively, one or more of the exemplary embodiments described and\/or illustrated herein may be implemented in firmware and\/or hardware. For example, computing system  may be configured as an application specific integrated circuit (ASIC) adapted to implement one or more of the exemplary embodiments disclosed herein.",{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 8","b":["800","810","820","830","840","845","850","800","800"]},"Client systems , , and  generally represent any type or form of computing device or system, such as exemplary computing system  in . Similarly, servers  and  generally represent computing devices or systems, such as application servers or database servers, configured to provide various database services and\/or run certain software applications. Network  generally represents any telecommunication or computer network including, for example, an intranet, a wide area network (WAN), a local area network (LAN), a personal area network (PAN), or the Internet. In one example, client systems , , and\/or  and\/or servers  and\/or  may include all or a portion of system  from .","As illustrated in , one or more storage devices ()-(N) may be directly attached to server . Similarly, one or more storage devices ()-(N) may be directly attached to server . Storage devices ()-(N) and storage devices ()-(N) generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions. In certain embodiments, storage devices ()-(N) and storage devices ()-(N) may represent network-attached storage (NAS) devices configured to communicate with servers  and  using various protocols, such as NFS, SMB, or CIFS.","Servers  and  may also be connected to a storage area network (SAN) fabric . SAN fabric  generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric  may facilitate communication between servers  and  and a plurality of storage devices ()-(N) and\/or an intelligent storage array . SAN fabric  may also facilitate, via network  and servers  and , communication between client systems , , and  and storage devices ()-(N) and\/or intelligent storage array  in such a manner that devices ()-(N) and array  appear as locally attached devices to client systems , , and . As with storage devices ()-(N) and storage devices ()-(N), storage devices ()-(N) and intelligent storage array  generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions.","In certain embodiments, and with reference to exemplary computing system  of , a communication interface, such as communication interface  in , may be used to provide connectivity between each client system , , and  and network . Client systems , , and  may be able to access information on server  or  using, for example, a web browser or other client software. Such software may allow client systems , , and  to access data hosted by server , server , storage devices ()-(N), storage devices ()-(N), storage devices ()-(N), or intelligent storage array . Although  depicts the use of a network (such as the Internet) for exchanging data, the embodiments described and\/or illustrated herein are not limited to the Internet or any particular network-based environment.","In at least one embodiment, all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server , server , storage devices ()-(N), storage devices ()-(N), storage devices ()-(N), intelligent storage array , or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program, stored in server , run by server , and distributed to client systems , , and  over network .","As detailed above, computing system  and\/or one or more components of network architecture  may perform and\/or be a means for performing, either alone or in combination with other elements, one or more steps of an exemplary method for maintaining location-aware virtualization layers.","While the foregoing disclosure sets forth various embodiments using specific block diagrams, flowcharts, and examples, each block diagram component, flowchart step, operation, and\/or component described and\/or illustrated herein may be implemented, individually and\/or collectively, using a wide range of hardware, software, or firmware (or any combination thereof) configurations. In addition, any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.","In some examples, all or a portion of exemplary system  in  may represent portions of a cloud-computing or network-based environment. Cloud-computing environments may provide various services and applications via the Internet. These cloud-based services (e.g., software as a service, platform as a service, infrastructure as a service, etc.) may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud-based computing environment.","The process parameters and sequence of steps described and\/or illustrated herein are given by way of example only and can be varied as desired. For example, while the steps illustrated and\/or described herein may be shown or discussed in a particular order, these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and\/or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.","While various embodiments have been described and\/or illustrated herein in the context of fully functional computing systems, one or more of these exemplary embodiments may be distributed as a program product in a variety of forms, regardless of the particular type of computer-readable-storage media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script, batch, or other executable files that may be stored on a computer-readable storage medium or in a computing system. In some embodiments, these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.","In addition, one or more of the modules described herein may transform data, physical devices, and\/or representations of physical devices from one form to another. For example, one or more of the modules recited herein may transform storage and\/or functionality of a computing system by enabling and\/or disabling virtualization layers on the computing system based on a physical location of the computing system.","The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.","Unless otherwise noted, the terms \u201ca\u201d or \u201can,\u201d as used in the specification and claims, are to be construed as meaning \u201cat least one of.\u201d In addition, for ease of use, the words \u201cincluding\u201d and \u201chaving,\u201d as used in the specification and claims, are interchangeable with and have the same meaning as the word \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate a number of exemplary embodiments and are a part of the specification. Together with the following description, these drawings demonstrate and explain various principles of the instant disclosure.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
