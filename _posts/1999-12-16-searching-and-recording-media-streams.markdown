---
title: Searching and recording media streams
abstract: In a networked client/server system, media data is streamed from a server to a client. A user of the client can search the media data to identify portions that satisfy certain search criteria, and/or store the media data locally at the client for subsequent playback.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07149359&OS=07149359&RS=07149359
owner: Microsoft Corporation
number: 07149359
owner_city: Redmond
owner_country: US
publication_date: 19991216
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","CONCLUSION"],"p":["This invention relates to networked client\/server systems and to searching and recording streaming media content in such systems.","Multimedia streaming\u2014the continuous delivery of synchronized media data like video, audio, text, and animation\u2014is a critical link in the digital multimedia revolution. Today, streaming media is primarily about video and audio, but a richer, broader digital media era is emerging with a profound and growing impact on the Internet and digital broadcasting.","Synchronized media means multiple media objects that share a common timeline. Video and audio are examples of synchronized media\u2014each is a separate data stream with its own data structure, but the two data streams are played back in synchronization with each other. Virtually any media type can have a timeline. For example, an image object can change like an animated .gif file, text can change and move, and animation and digital effects happen over time. This concept of synchronizing multiple media types is gaining greater meaning and currency with the emergence of more sophisticated media composition frameworks implied by MPEG-4, Dynamic HTML, and other media playback environments.","The term \u201cstreaming\u201d is used to indicate that the data representing the various media types is provided over a network to a client computer on a real-time, as-needed basis, rather than being pre-delivered in its entirety before playback. Thus, the client computer renders streaming data as it is received from a network server, rather than waiting for an entire \u201cfile\u201d to be delivered.","Streaming multimedia content enables a variety of informational content that was not previously available over the Internet or other computer networks. Live content is one significant example of such content. Using streaming multimedia, audio, video, or audio\/visual coverage of noteworthy events can be broadcast over the Internet as the events unfold. Similarly, television and radio stations can transmit their live content over the Internet.","However, one current problem with streaming multimedia content is that users are typically limited to accessing the multimedia content via common \u201cshuttle controls\u201d on a multimedia player, such as a play button, fast forward button, pause button, etc. Given that large amounts of data can be stored as multimedia content (e.g., individual presentations lasting for hours), such controls make it difficult for a user to locate the portions of the multimedia content that are of most interest to him or her.","An additional problem with streaming multimedia content is that the user must typically be connected to the same network as the server (e.g., the Internet) in order to receive the streaming multimedia content. If this connection is not maintained then the streaming of the multimedia content stops. This \u201ccontinuous connection\u201d limitation can be troublesome for many individuals, such as those using portable computers in locations that may not always have access to the appropriate network, or individuals who do not want to tie up a telephone line for their network connection while playing back the multimedia content.","The invention described below addresses these disadvantages, providing for the searching and recording of streaming media content.","In a networked client\/server system, media content is streamed from the server to the client. A user of the client can search the media content to identify temporal locations that satisfy certain search criteria, and\/or store the media content locally at the client for subsequent playback.","According to one aspect of the invention, indexes are maintained for each of different media streams that can be streamed to the client either individually or together for a multimedia presentation. The indexes store a correspondence between content for a media stream and temporal locations of that media stream. In response to a user search request, search criteria is compared to the appropriate index(es) to identify whether the search criteria matches any data in the index(es).","According to another aspect of the invention, in response to a user search request the search criteria from the search request is compared directly to the media stream data rather than to an index. This comparison is made to identify whether the search criteria matches any of the media stream data.","According to another aspect of the invention, if data matching the search criteria is found (either in an index or the media stream data), then the media server \u201cseeks\u201d to a temporal location of the media stream identified by the matching data. The server then proceeds to stream the media content to the client beginning at that temporal location.","According to another aspect of the invention, a search request and corresponding search criteria are compared to multiple media streams (either directly or indirectly via associated indexes). Thus, a single search request can be used to search through all of the media streams of a multimedia presentation.","According to another aspect of the invention, the multiple media streams of a multimedia presentation are streamed from the server to the client and stored locally by the client. A markup document, referencing the multiple media streams also stored locally at the client, is generated and stored at the client. Thus, a user can play back the locally stored multimedia presentation at a later time when not coupled to a network and thus not able to receive streaming media from the server.","General Network Structure",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 1","FIG. 1"],"b":["100","102","104","106","100","104"]},"Multimedia servers  have access to streaming media content in the form of different media streams. These media streams can be individual media streams (e.g., audio, video, graphical, text, etc.), or alternatively composite media streams including multiple such individual streams. Some media streams might be stored as files  in a database or other file storage system, while other media streams  might be supplied to the server on a \u201clive\u201d basis from other data source components through dedicated communications channels or through the Internet itself.","The media streams received from servers  are rendered at the client computers  as a multimedia presentation, which can include media streams from one or more of the servers . These different media streams can include one or more of the same or different types of media streams. For example, a multimedia presentation may include two video streams, one audio stream, and one stream of graphical images.","A user interface (UI) at the client computer  allows users to control the playback of the multimedia presentation, such as selecting which of multiple presentations to play back, controlling pausing of the playback, etc. The UI at client  further allows a user to input search criteria for searching one or more of the individual media streams available from a server , and to save the media streams of a multimedia presentation for subsequent playback when not coupled to network .","Index servers  optionally maintain indexes for the streaming media data available from servers . These indexes provide a correspondence between elements or objects of the media data streams and temporal locations of the media data streams. These indexes can be used for searching the media data streams, as discussed in more detail below. Alternatively, the indexes may be maintained at the media servers .","Streaming Media","In this discussion, streaming media refers to one or more individual media streams being transferred over a network to a client computer on an as-needed basis rather than being pre-delivered in their entirety before playback. Each of the individual media streams corresponds to and represents a different media type and each of the media streams can be rendered by a network client to produce a user-perceivable presentation using a particular presentation medium. The individual media streams can be rendered to produce a plurality of different types of user-perceivable media, including synchronized audio or sound, video graphics or motion pictures, animation, textual content, command script sequences, or other media types that convey time-varying information or content in a way that can be sensed and perceived by a human. The individual media streams have their own timelines, which are synchronized with each other so that the media streams can be rendered simultaneously for a coordinated multimedia presentation. These individual media streams can be delivered to the client computer as individual streams from one or more servers, as a composite media stream(s) from one or more servers, or a combination thereof.","In this discussion, the term \u201ccomposite media stream\u201d describes synchronized streaming data that represents a segment of multimedia content. The composite media stream has a timeline that establishes the speed at which the content is rendered. The composite media stream can be rendered to produce a plurality of different types of user-perceivable media, such as synchronized audio or sound, video graphics or motion pictures, animation, textual content, command script sequences, etc. A composite media stream includes a plurality of individual media streams representing the multimedia content.","There are various standards for streaming media content and composite media streams. \u201cAdvanced Streaming Format\u201d (ASF) is an example of such a standard, including both accepted versions of the standard and proposed standards for future adoption. ASF specifies the way in which multimedia content is stored, streamed, and presented by the tools, servers, and clients of various multimedia vendors. ASF provides benefits such as local and network playback, extensible media types, component download, scalable media types, prioritization of streams, multiple language support, environment independence, rich inter-stream relationships, and expandability. Further details about ASF are available from Microsoft Corporation of Redmond, Wash.","Regardless of the streaming format used, an individual data stream contains a sequence of digital data units that are rendered individually, in sequence, to produce an image, sound, or some other stimuli that is perceived by a human to be continuously varying. For example, an audio data stream comprises a sequence of sample values that are converted to a pitch and volume to produce continuously varying sound. A video data stream comprises a sequence of digitally-specified graphics frames that are rendered in sequence to produce a moving picture. An animation stream comprises a sequence of graphical images that are rendered in sequence to produce a moving image. An image stream comprises a sequence of graphical images that are rendered to produce a changing image over time. A text stream is a sequence of symbols and\/or alphanumeric characters that are rendered to produce different symbol\/character combinations over time (e.g., in the form of words).","For a composite media stream, the individual data streams are typically interleaved in a single sequence of data packets. Various types of data compression might be used within a particular data format to reduce communications bandwidth requirements.","The sequential data units (such as audio sample values, video frames, groups of characters, graphical images, etc.) of the individual streams are associated with both delivery times and presentation times, relative to an arbitrary start time. The delivery time of a data unit indicates when the data unit should be delivered to a rendering client. The presentation time indicates when the value should be actually rendered. Normally, the delivery time of a data unit precedes the presentation time.","The presentation times determine the actual speed of playback. For data streams representing actual events or performances, the presentation times correspond to the relative times at which the data samples were actually recorded. The presentation times of the various different individual data streams are consistent with each other so that the streams remain coordinated and synchronized during playback.","Exemplary Computer Environment","In the discussion below, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by one or more conventional personal computers. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. In a distributed computer environment, program modules may be located in both local and remote memory storage devices.","Alternatively, the invention could be implemented in hardware or a combination of hardware, software, and\/or firmware. For example, one or more application specific integrated circuits (ASICs) could be programmed to carry out the invention.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 2","FIG. 1"],"b":["142","142","100","102","104"]},"Computer  includes one or more processors or processing units , a system memory , and a bus  that couples various system components including the system memory  to processors .","The bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. The system memory includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within computer , such as during start-up, is stored in ROM . Computer  further includes a hard disk drive  for reading from and writing to a hard disk, not shown, a magnetic disk drive  for reading from and writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by an SCSI interface  or some other appropriate interface. The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for computer . Although the exemplary environment described herein employs a hard disk, a removable magnetic disk  and a removable optical disk , it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, random access memories (RAMs) read only memories (ROM), and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk, magnetic disk , optical disk , ROM , or RAM , including an operating system , one or more application programs , other program modules , and program data . A user may enter commands and information into computer  through input devices such as keyboard  and pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are connected to the processing unit  through an interface  that is coupled to the system bus. A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown) such as speakers and printers.","Computer  operates in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be another personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet. In the described embodiment of the invention, remote computer  executes an Internet Web browser program such as the \u201cInternet Explorer\u201d Web browser manufactured and distributed by Microsoft Corporation of Redmond, Wash.","When used in a LAN networking environment, computer  is connected to the local network  through a network interface or adapter . When used in a WAN networking environment, computer  typically includes a modem  or other means for establishing communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via a serial port interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Generally, the data processors of computer  are programmed by means of instructions stored at different times in the various computer-readable storage media of the computer. Programs and operating systems are typically distributed, for example, on floppy disks or CD-ROMs. From there, they are installed or loaded into the secondary memory of a computer. At execution, they are loaded at least partially into the computer's primary electronic memory. The invention described herein includes these and other various types of computer-readable storage media when such media contain instructions or programs for implementing the steps described below in conjunction with a microprocessor or other data processor. The invention also includes the computer itself when programmed according to the methods and techniques described below. Furthermore, certain sub-components of the computer may be programmed to perform the functions and steps described below. The invention includes such sub-components when they are programmed as described. In addition, the invention described herein includes data structures, described below, as embodied on various types of memory media.","For purposes of illustration, programs and other executable program components such as the operating system are illustrated herein as discrete blocks, although it is recognized that such programs and components reside at various times in different storage components of the computer, and are executed by the data processor(s) of the computer.","Searching Data Streams","As shown in , a network system in accordance with the invention includes network server(s)  from which a plurality of composite media streams are available. In some cases, the composite media streams are actually stored by server(s) . In other cases, server(s)  obtains the composite media streams from other network sources or devices.","The system also includes network clients . Generally, the network clients are responsive to user input to select or request identified multimedia presentations. In response to a request for a multimedia presentation, server(s)  streams the requested media stream(s) to the network client in accordance with some known format such as ASF. The client renders the data streams to produce the multimedia presentation.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 3","b":["100","202","104","100","104","203","100","104","202","104"]},"When a user requests a particular composite media stream, client  requests the underlying media streams from the appropriate server(s) . This request can be from a standalone control application that is stored and executed at client , or alternatively an application that is hosted at a server  and is transmitted to client  for execution. For example, the control application could be hosted in a HTTP web page (maintained by either server  or another server coupled to the network) in accordance with Hypertext Markup Language (HTML) or Extended Markup Language (XML). The control application (whether standalone or server-hosted) includes identifier(s) of the composite media stream and\/or the individual media streams of the multimedia presentation, and coordinates when and how they are presented at client .","Each media stream has a timeline, and the timelines of the individual streams are synchronized with each other so that the streams can be rendered in combination to produce coordinated multimedia content at the network client . A streaming module  in server  manages the streaming of the composite media stream to client  based at least in part on the delivery times of the data units in the composite media stream.","The client computer has a demultiplexer component  that receives the composite media stream and separates out the individual media streams from the composite format in which the data is streamed (such as ASF). This results in a video stream , an audio stream , a text stream , an image stream , and an animation stream .","The individual media streams are received from demultiplexer  by respective decoders , , , , and  that perform in accordance with the particular data format being employed. For example, the decoders might perform data decompression. The decoded streams are then provided to and received by respective renderers , , , , and . The rendering components \u2013 render the streams as the streams continue to be streamed from the network server .","Server  stores a composite media stream  (e.g., in accordance with ASF) including multiple individual media streams \u2013 for a multimedia presentation. The individual media streams are of different types, which in the illustrated embodiment are audio stream , video stream , image stream , text stream , and animation stream . A streaming module  manages, on behalf of server , the communication between server  and client , including the streaming of the composite media stream  and communication of control information to and from client .","Server  also stores indexes \u2013, each corresponding to one of the individual media streams \u2013. Indexes \u2013 can be part of the same composite media stream  as the individual media streams \u2013, or alternatively may be stored separately. In the illustrated example, each individual media stream \u2013 has a corresponding index \u2013, illustrated as audio index , video index , image index , text index , and animation index . Alternatively, one or more of the indexes \u2013 may be combined together.","Alternatively, some or all of indexes \u2013 may be stored at a remote server, such as index server  of . Or, in other alternate embodiments, some or all of indexes \u2013 may be stored at client  or transferred to client  for searching.","Each of the indexes \u2013 maintains a correspondence between a particular term or element of the associated media stream and a temporal location of the associated media stream. This correspondence identifies, for each term or element, a temporal location(s) of the associated media stream at which that term or element occurs. This correspondence can be maintained by storing multiple entries in the index, each entry including a term or element of the associated media stream and a temporal location(s) at which that term or element occurs. In one implementation these terms or elements are characters, words, symbols, or groups thereof. Alternatively the exact nature of these terms or elements may be dependent on the nature of the associated media stream. For example, text index  may include words or phrases as terms or elements, while audio index  may include digital representations of audio waveforms as terms or elements.","Indexes \u2013 can be generated in any of a wide variety of manners, including both manual and automatic generation. Manual generation can be performed by an individual (e.g., the author of the multimedia presentation) manually identifying the different terms or elements to index for each of the individual media streams and the temporal location(s) of each of these terms or elements. Automatic generation of the indexes can be performed by server  or another device. The manner in which the automatic generation is carried out is dependent on the nature of the associated individual media stream.","Text streams can be indexed based on different elements, such as characters, symbols, words, or groups thereof (e.g., phrases or sentences). In the illustrated example, server  (or other device generating the index) generates the index by identifying each of the elements in the text stream and their corresponding presentation times. As each element can occur multiple times in a text stream, multiple presentation times may be identified for the index.","Image streams can be indexed in a similar manner as text streams. Any of a variety of conventional pattern recognition techniques can be used to identify particular objects in the image stream or different characteristics of those objects (e.g., color). A textual description of each of these objects is included as an element in the index, along with its corresponding presentation time.","Animation streams can be indexed in an analogous manner as image streams. However, each object in the animation may have a range of presentation times corresponding to, for example, the object moving or changing locations over time. Thus, multiple presentation times (the presentation times for this range) may be associated with the object. The earliest presentation time in the range may be used in the index as the temporal location for this object, or alternatively another temporal location within the range may be used (e.g., the entire range, or alternatively a mid-range or \u201caverage\u201d temporal range).","Audio streams can be similarly indexed. Conventional audio analysis techniques may be used to identify words or groups of words in the audio stream, based on the digital representation of the analog waveform of the audio content. These digital representations of words or groups of words are stored in the index along with their temporal locations in the audio content. Alternatively, conventional speech to text techniques can be used to convert the audio stream to words which can then be included in the index analogous to text streams discussed above.","Video streams can also be indexed. Using image analysis techniques similar to those for analyzing image streams, different objects within the video stream can be identified and included in the index. Alternatively, general video frame characteristics can be indexed, such as predominant colors within the frame. Objects in a video stream may correspond to a range of presentation times analogous to those in animation streams, and the temporal locations of these can be stored in the index in a manner analogous to those of animation streams.","A user at client  can search through the media streams \u2013 by submitting a search request and search criteria (e.g., particular words, or other text or symbols) to server . A search engine  receives such search requests and accompanying search criteria at server . Search engine , upon receipt of the search request, compares the search criteria to the entries in each of indexes \u2013 to determine whether any of the entries match or are satisfied by the search criteria. Thus, a single search request from the user can initiate searching of multiple individual media streams. Alternatively, the user may identify in the search request specific media streams that are to be searched, with the other media streams to be left unsearched.","Additionally, search engine  can search multiple different individual or composite streams located at server , regardless of whether the streams correspond to the same or different media presentations. Alternatively, search engine  may forward a search request to other servers  to identify matches with media streams stored at such servers. Thus, a single search request from the user can initiate searching of media streams of multiple different media presentations regardless of where the streams are stored.","Alternatively, search engine  may not use indexes \u2013. Rather, upon receipt of a search request search engine  can access the various steams \u2013 directly to identify terms or elements to compare to the search criteria. These terms or elements can be identified in any of the manners discussed above with reference to generating the indexes.","Situations can arise where the search criteria match multiple entries in the index. For example, a particular object may occur multiple times in an image stream and thus have multiple temporal locations associated with it in the index. Search engine  can identify one of these temporal locations to use as the result of the search process. In one implementation, if the media stream is currently being played back, then the current presentation time of the multimedia presentation is identified (e.g., from client ). Search engine  then selects the next temporal location associated with the index entry that is after the current presentation time. Alternatively, search engine  may select the temporal location that is closest to the current presentation time as the result, or alternatively may use some other process for identifying one of the presentation times. Alternatively, search engine  may make such determinations based on the delivery times for the data units of the media stream rather than the presentation times.","Search engine  can take a variety of different actions when a term or element in the index matches the search criteria. For example, the search engine  may inform streaming module  to \u201cseek\u201d to that temporal location and begin streaming the media stream to client  at that temporal location. By way of another example, the matching entry and associated temporal locations) may be returned to client  and displayed to the user.","Additionally, the search process may make use of global variables. For example, a global character can be used to represent one or more characters, symbols, or words during the searching process.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 4","FIG. 4","FIG. 4","FIGS. 1 and 3"]},"An index for one of the media streams of a media presentation is initially generated, step . Indexes for any additional media streams are also generated, steps  and . This index generation can be carried out by multimedia server , index server , or alternatively some other device (not shown) and subsequently transferred to server  or .","Once the indexes are generated, server  eventually receives a search request with accompanying search criteria, step . Search engine  compares the index(es) of the media stream(s) corresponding to the search request to the search criteria, step , and attempts to identify a match, step . If no match is identified, then an indication that the search failed is sent to the client, step . Alternatively, steps \u2013 may be carried out at an index server  or client  rather than media server .","However, if a match is identified then search engine  identifies a temporal location corresponding to the match (selecting one of multiple temporal locations if necessary), step . Streaming module  then streams, to client , the data for the media presentation starting at a location based on the identified temporal location, step . Streaming module  may stream the data beginning at the identified temporal location, or alternatively may \u201crewind\u201d or \u201cback up\u201d to a temporal point prior to the temporal location. This \u201crewinding\u201d may be of a fixed amount (e.g., three seconds), or alternatively may be based on pauses or breaks. For example, conventional audio or video analysis programs may be used to identify pauses or breaks in the speech or action in the multimedia presentation, and module  may search back through the multimedia presentation beginning at the identified temporal location to identify such a pause or break and begin streaming at that location. Alternatively, rather than \u201cseeking\u201d to the match location in step , other indications of a match may be provided to client .","In alternative implementations, the index generation of steps \u2013 is performed in response to a user search request rather than as an initialization process as illustrated in . For example, when a user submits a request for a multimedia presentation that has not been indexed, the index generation may occur in response to the request (either generating all of the indexes or only those necessary until a match with the search criteria is reached).","Alternatively, rather than performing any sort of \u201crewind\u201d or \u201cbacking up\u201d process during the search request, such rewinding can be performed at the time the index is generated. Thus, rather than storing a specific presentation time that corresponds to the time that a particular term or object occurs in the multimedia presentation, the index could store the presentation times that should be used to begin playback of the multimedia presentation in the event of a match to the particular term or object.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 5","FIG. 5","FIG. 5","FIGS. 1"],"b":["3","4"]},"A search request and corresponding search criteria are initially received by server , step . Search engine  then compares the data of the media streams corresponding to the search request to the search criteria, step . If no match is identified, step , then an indication that the search has failed is sent to client , step . However, if a match is identified, then search engine  identifies the temporal location in the media streams corresponding to the match, step . Streaming module  then begins streaming the media presentation to the client starting at the match location, step , analogous to step  of .","The comparisons performed by search engine  in steps  of  of  can be carried out in a variety of different manners. In one implementation, the comparisons are made through each of the indexes (or media streams) to identify all possible matches to the search criteria and then the temporal location of one of these matches is selected in step  () or  (). Alternatively, all of these possible matches may be provided to the user (e.g., the presentation times) and the user can select one of them to \u201cseek\u201d to. Alternatively, as soon as one match of the search criteria is found the comparison can stop and that temporal location seeked to. Alternatively, search engine  may identify the current presentation time of the multimedia presentation and search, from that temporal location on, for the next presentation time in each of the media streams that satisfies the search request and select from this set of presentation times.","Recording Data Streams","Returning to , client  also includes a stream saving module . Module  stores composite media stream  locally at client  as stream  is received. Module  also optionally receives indexes \u2013 and stores them locally at client  as well. This storage can be done concurrently with the rendering of the media streams, or alternatively can be carried out independently without rendering the streams. Module  can store the media streams locally in response to a user request to store the streams, or alternatively automatically in response to some other event or action (e.g., an indication of search criteria being satisfied from server ).","Module  also generates and stores a markup document that describes how the various media streams are to be rendered (e.g., the screen locations for audio, text, image, and animation streams). This markup document can be generated using any of a variety of conventional programming languages, such as HTML or XML. In the illustrated example, module  generates the markup document by modifying a pre-existing markup document, such as one received from server  for the rendering of the individual media streams \u2013. Module  modifies the pre-existing markup document by searching the pre-existing document for references to the locations of media streams \u2013 and changing those references to the locally stored media streams. Alternatively, module  may generate such a markup document \u201cfrom scratch\u201d.","Module  may also \u201cpackage\u201d the locally stored media streams and the modified markup document into the same file or folder, thereby allowing easier transport of the files. It is to be appreciated that the locally stored media streams could be transferred or copied to another client and played back without requiring further modification to the markup document so long as the path names where the files are stored on the different clients remain the same.",{"@attributes":{"id":"p-0081","num":"0080"},"figref":["FIGS. 6 and 7","FIGS. 6 and 7","FIG. 6"],"b":["340","342","344","104","346","356","346","356","358","368"]},"To store the multimedia presentation locally, the media streams \u2013 are streamed (or otherwise copied) to local storage  of . Markup document  is also modified to generate markup document  that references the locally stored media streams \u2013. By changing the references to the locally stored media streams \u2013, subsequent playback of the multimedia presentation using markup document  will result in the locally stored streams \u2013 being played back (being input to either demultiplexer  or the decoders \u2013 directly) rather than the remotely stored streams \u2013 of , thereby avoiding any access to remote servers.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 8","FIG. 8","FIG. 3","FIG. 8","FIG. 3"],"b":"104"},"Client  initially receives a markup document referencing one or more media streams of a media presentation, step . Client  also receives the media stream(s) of the media presentation, step . The received media stream(s) are stored locally at client , step . Client  also modifies the markup document received in step  to reference the locally stored media stream(s), step , and stores the modified markup document locally, step . Client  may also optionally package the locally stored media stream(s) and modified markup document into a single file or folder, allowing for easy subsequent transfer of the files.","The invention allows for searching and recording of streaming multimedia data. Any or all of the multiple data streams of a multimedia presentation can advantageously be searched via a single search request by a user, and the user can be immediately presented with the temporal location of the multimedia presentation that satisfies his or her search request. Additionally, a streaming multimedia presentation can advantageously be saved locally, allowing subsequent playback of the presentation when not connected to the remote multimedia servers.","Although the invention has been described in language specific to structural features and\/or methodological steps, it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or steps described. Rather, the specific features and steps are disclosed as preferred forms of implementing the claimed invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated by way of example and not limitation in the figures of the accompanying drawings. The same numbers are used throughout the figures to reference like components and\/or features.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 6 and 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
