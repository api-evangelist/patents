---
title: Documents for commerce in trading partner networks and interface definitions based on the documents
abstract: Machine readable documents connect businesses with customers, suppliers and trading partners. The self defining electronic documents, such as XML based documents, can be easily understood amongst the partners. Definitions of these electronics business documents, called business interface definitions, are posted on the Internet, or otherwise communicated to members of the network. The business interface definitions tell potential trading partners the services the company offers and the documents to use when communicating with such services. Thus, a typical business interface definition allows a customer to place an order by submitting a purchase order or a supplier checks availability by downloading an inventory status report. Also, composition of the input and output documents, coupled with interpretation information in a common business library, programs the transaction in a way which closely parallels the way in which paper based businesses operate.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08006177&OS=08006177&RS=08006177
owner: Open Invention Network, LLC
number: 08006177
owner_city: Pound Ridge
owner_country: US
publication_date: 19981016
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","COPYRIGHT NOTICE","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present application is related to U.S. patent application Ser. No. 09\/173,847 filed on 16 Oct. 1998, now U.S. Pat. No. 6,226,675 B1, entitled PARTICIPANT SERVER WHICH PROCESSES DOCUMENTS FOR COMMERCE IN TRADING PARTNER NETWORKS; and","to U.S. patent application Ser. No. 09\/173,854, filed on 16 Oct. 1998, now U.S. Pat. No. 6,125,391, entitled MARKET MAKERS USING DOCUMENTS FOR COMMERCE IN TRADING PARTNER NETWORKS.","A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","1. Field of the Invention","The present invention relates to systems and protocols supporting transactions among diverse clients coupled to a network; and more particularly to systems and protocols supporting commercial transactions among platforms having variant architectures.","2. Description of Related Art","The Internet and other communications networks provide avenues for communication among people and computer platforms which are being used for a wide variety of transactions, including commercial transactions in which participants buy and sell goods and services. Many efforts are underway to facilitate commercial transactions on the Internet. However, with many competing standards, in order to execute a transaction, the parties to the transaction must agree in advance on the protocols to be utilized, and often require custom integration of the platform architectures to support such transactions. Commercial processes internal to a particular node not compatible with agreed upon standards, may require substantial rework for integration with other nodes. Furthermore, as a company commits to one standard or the other, the company becomes locked-in to a given standardized group of transacting parties, to the exclusion of others.","A good overview of the challenges met by Internet commerce development is provided in Tenenbaum, et al., \u201c\u201d, Computer, May 1997, pp. 48-55.","To open commercial transactions on the Internet, standardization of architectural frameworks is desired. Platforms developed to support such commercial frameworks include IBM Commerce Point, Microsoft Internet Commerce Framework, Netscape ONE (Open Network Environment), Oracle NCA (Network Computing Architecture), and Sun\/JAVASoft JECF (JAVA Electronic Commerce Framework).","In addition to these proprietary frameworks, programming techniques, such as common distributed object model based on CORBA HOP (Common Object Request Broker Architecture Internet ORB Protocol), are being pursued. Use of the common distributed object model is intended to simplify the migration of enterprise systems to systems which can inter-operate at the business application level for electronic commerce. However, a consumer or business using one framework is unable to execute transactions on a different framework. This limits the growth of electronic commerce systems.","Companies implementing one framework will have an application programming interface API which is different than the API's supporting other frameworks. Thus, it is very difficult for companies to access each others business services, without requiring adoption of common business system interfaces. The development of such business system interfaces at the API level requires significant cooperation amongst the parties which is often impractical.","Accordingly, it is desirable to provide a framework which facilitates interaction amongst diverse platforms in a communication network. Such system should facilitate spontaneous commerce between trading partners without custom integration or prior agreement on industry wide standards. Further, such systems should encourage incremental path to business automation, to eliminate much of the time, cost and risks of traditional systems integration.","Overall, it is desirable to provide an electronic commerce system that replaces the closed trading partner networks based on proprietary standards with open markets.","The present invention offers an infrastructure for connecting businesses with customers, suppliers and trading partners. Under the infrastructure of the present invention, companies exchange information and services using self-defining, machine-readable documents, such as XML (Extensible Markup Language) based documents, that can be easily understood amongst the partners. Documents which describe the documents to be exchanged, called business interface definitions BIDs herein, are posted on the Internet, or otherwise communicated to members of the network. The business interface definitions tell potential trading partners the services the company offers and the documents to use when communicating with such services. Thus, a typical business interface definition allows a customer to place an order by submitting a purchase order, compliant with a document definition published in the BID of a party to receive the purchase order. A supplier is allowed to check availability by downloading an inventory status report compliant with a document definition published in the BID of a business system managing inventory data. Use of predefined, machine-readable business documents provides a more intuitive and flexible way to access enterprise applications.","A node in the commerce network establishes an interface for transactions according to the present invention that comprises a machine-readable specification of an interface, along with a machine-readable data structure that includes interpretation information for the machine-readable specification of the interface. The machine-readable specification of the interface includes a definition of an input document and a definition of an output document, that are accepted and produced by transaction processes for which the node acts as an interface. The definitions of the input and output documents comprise respective descriptions of sets of storage units and logical structures for sets of storage units, such as according to a standard XML based document. The machine-readable data structure that includes interpretation information according to various aspects of the invention includes data type specifications (e.g. string, array, etc.) for logical structures in the definitions of the input and output documents, content models (e.g. lists of possible values) for logical structures and\/or data structures that map predefined sets of storage units for a particular logic structure to respective entries in a list in order to provide a semantic definition of logical structures (e.g. mapping codes to product names).","According to other aspects of the invention, the interface includes a repository in memory accessible by at least one node in the network that stores a library of logic structures and interpretation information for the logic structures. The repository can be extended to include a library of definitions of input and output documents, a library of specifications of interfaces, and a library of specifications for participant interface nodes in the network.","Thus, a participant in the transaction framework of the present invention executes transactions amongst nodes in a network that includes a plurality of nodes executing processes involved in the transactions. The method includes storing a machine-readable specification of an interface for a transaction, the specification includes a definition of an input document and a definition of an output document. The definition of the input and output documents comprise respective descriptions of sets of storage units and logical structures for the sets of storage units. In a preferred system, the definitions are expressed in a manner compliant with a standard XML document type definition DTD, extended by semantic mapping, content modeling and data typing of some elements. The participant in the transaction receives data comprising a document through a communication network. The participant parses the document according to the specification stored for a transaction to identify an input document for the transaction. After parsing the document, at least a portion of the input document is provided in a machine-readable format to a transaction process which produces an output. An output document is formed comprising the output of the transaction process, based on the definition of an output document in the stored specification. The output document is transmitted on the communication network, typically back to the source of the input document, or elsewhere as suits the needs of a particular type of transaction.","Thus the business interface definition bridges the gap between the documents specified for example according to XML and the programs which execute on the front end of the transaction processing services at particular nodes. Such front ends are implemented for example by JAVA virtual machines, or by other common architectures providing for interconnection of systems across a network. The business interface definition provides a technique by which a transaction protocol is programmed using the business interface definition document. The program for the protocol of the transaction is established by a detailed formal specification of a document type.","The machine-readable specification of the interface of the transaction is made accessible to other platforms in the network. Participant platforms include resources to design input documents and output documents according to the transaction interface specified at a complementary node. Thus, participant nodes include resources to access the definition of an input document for the complementary interface and a definition of an output document for the complementary interface. The stored specification for the accessing participant node is established by including at least part of the definition of the output document of the complementary interface in the definition of the input document of the interface stored in the specification.","The process of establishing the stored specification of an interface according to another aspect of the invention includes accessing elements of the machine-readable specification from a repository. The repository stores a library of logic structures, content models, and schematic maps for logic structures, and definition of documents that comprise logic structures used to build interface description. A repository accessible in the network facilitates the building of interface descriptions which can be easily shared. Any differences between the input document created for a particular process and the output document expected as a return by a complementary process can be easily negotiated by communication on the network and agreeing on common logic structures to express particular information.","The machine-readable specification of an interface of a transaction according to one aspect of the invention includes a document compliant with a definition of an interface document that is shared amongst members of the network. A definition of the interface document includes logic structures for storing an identifier of a particular transaction and at least one of definitions and references to definitions of input and output documents for the particular transaction. That is, the interface description for a particular service may actually encompass a definition of the input and output documents. Alternatively, it may include pointers to a location in the repository, or elsewhere in the network, of such definitions.","According to another alternative of the invention, the machine-readable specification includes a business interface definition BID document compliant with a definition of an interface document that includes logical structures for storing an identifier of the interface, and for storing at least one of specifications and references to specifications of a set of one or more transactions supported by the interface. For each supported transaction, the document includes at least one of definitions and references to definitions of input and output documents for the particular transaction.","According to another aspect of the invention, the storage units defined in the definitions of the input and output document comprise parsed data including character data encoding text characters, and mark-up data identifying sets of storage units according to the logical structures of the input and output documents. According to another aspect of the invention, at least one of the sets of storage units encodes the plurality of text characters providing a natural language word. This facilitates the use of the definitions of input and output documents by human readers and developers of such documents.","According to another aspect of the invention, the specification of the input and output documents includes interpretation information for at least one of the sets of storage units identified by the logical structure. The interpretation information in one example encodes definitions for sets of parsed characters. In another example, the interpretation information provides for content model specifications, such as requiring a specific logic structure to carry a member of a list of codes mapped to product descriptions in a catalog. In some systems, the storage units in a logic structure of a document may include sets of unparsed data, as suits the needs of a particular implementation.","According to yet another aspect of the invention, the transaction process in a particular platform has a transaction processing architecture which is one of a plurality of variant transaction processing architectures. Thus the participant node includes resources for translating at least a portion of the input document into a format readable according to the variant transaction processing architecture of the transaction process utilizing the information. The elements of the document definition are translated into programming objects that include variables and methods according to the variant transaction processing architectures of the transaction process. For a participant having a JAVA virtual machine acting as a transaction process front end, particular fields in the documents are translated into JAVA objects, including the data as well as get and set functions associated with a JAVA object. Other transaction processing architectures supportable according to the present invention include processes compliant with an interface description language in the sense of Common Object Request Broker Architecture CORBA, Component Object Model COM, On-Line Transaction Processing OLTP, and Electronic Data Interchange EDI.","According to other aspects of the invention, a repository is provided that stores document types for use in the plurality of transactions. The machine-readable specification for a particular transaction defines at least one of the input and output documents by reference to a document type in the repository. According to another aspect, the document type included in the repository include a document type for identifying participants in the network. Such document type providing structures for identifying a participant, specifying the services supported by the participant, and specifying the input and output documents for each of such services.","In addition to the methods described above, the present invention provides an apparatus for managing transactions among nodes that includes a network interface, memory for storing data and programs of instructions including a machine-readable specification of an interface for a transaction as described above, and a data processor that is coupled with the memory and the network interface. The programs of instructions stored in the apparatus include logic to execute the processes described above for a participant in the transactions.","The present invention further provides an apparatus for establishing participant interfaces for transactions executed on a system that include a network interface and a data processing resources that execute transaction processes according to a transaction processing architecture. The apparatus includes programs of instructions that are executable by the system and stored on a medium accessible by the system that provide tools to build a definition of a participant interface for a participant in a particular transaction. The definition of a participant interface includes a definition of an input document and a definition of an output document. The definitions of the input and output documents comprise respective machine-readable descriptions of sets of storage units in logical structures for the sets of storage units, which may be compliant in one aspect of the invention with XML document type definitions.","The apparatus for establishing participant interfaces according to this aspect of the invention also includes programs of instructions stored on a medium accessible by the data processing system and responsive to the definitions of input and output documents to compile data structures corresponding to the sets of storage units and logical structures of the input and output documents that are compliant with the transaction processing architecture, to compile instructions executable by the system to translate the input document to the corresponding data structures, and to compile instructions executable by the system to translate output of the transaction processes into sets of storage units and logical structures of the output document.","The tools to build a definition of a participant interface in a preferred system include instructions executable by the system to access elements of the definition from complementary nodes and\/or from a repository that stores a library of logical structures and interpretation information for logical structures used to build interface descriptions. According to various aspects of the invention, the repository includes not only a library of logical structures but definitions of documents that comprise logical structures, and formats for specifying participant interfaces. According to this aspect of the invention, tools are provided for building specifications of business interfaces according to the techniques described above in connection with the description of the participant nodes. The tools for building interfaces and the tools for compiling the interfaces into resources needed for communication with transaction processing architectures according to this aspect of the invention, are implemented in participant nodes in the preferred system, and utilized for the development and optimization of the interface descriptions as use of the network grows based on interface descriptions that define input and output documents.","Accordingly, another aspect of the invention provides an apparatus that includes memory and a data processor that executes instructions stored in the memory that include tools to build a definition of a participant interface and a compiler performing the functions described above.","According to yet another aspect of the invention, the use of the participant interface descriptions enables the operation of a market maker node. At such a node, a method for managing transactions is provided that comprises storing machine-readable specifications of a plurality of participant interfaces which identify transactions supported by the interfaces, and the respective input and output documents of such transactions. As described above, the definitions of the input and output documents comprise respective descriptions of sets of storage units and logical structures for the sets of storage units, such as according to the XML standard. In addition, the definitions of the transactions and the definitions of the participant interfaces all comprise documents specified according to a technique compliant with XML or other standardized document expression language. At such market maker node, data comprising a document is received over a communication network. The document is parsed according to the specifications to identify an input document in one or more transactions which accept the identified input document. At least a portion of the input document is provided in a machine-readable format to a transaction process associated with the one or more identified transactions. The step of providing at least a portion of the input document to a transaction process includes executing a routing process according to a processing architecture at the market maker node. The routing process in one aspect of the invention is executed according to a particular processing architecture, and at least a portion of the incoming document is translated into the format of the processing architecture of the routing process. The translating according to the preferred aspect includes producing programming objects that include variables and methods according to the processing architecture of the routing process.","According to another aspect of the invention, the market maker node also supports the repository structure. Thus, a process is included at the market maker node for allowing access by participants in the network to a repository stored at the market maker node. As described above, the repository includes definitions of logic structures, interpretation information, and document definitions for use by the participant nodes to build transaction interface documents and includes instances of business interface definitions that identify the participants, and the transactions executed by the respective participants.","The routing process includes according to various alternatives the translating of the input document into the variant processing architecture of the processes to which the document is to be routed, or routing the input document in its original document format across the network to a remote processing node, or to combinations of such processes. In alternatives, the routing process may also include techniques for transforming an input document defined according to one input document definition into a different document defined according to a different document specification for a process which has registered to watch for the input document.","Also, the market maker node is provided according to the present invention as apparatus that includes a network interface, memory storing data and programs of instructions including the specifications of the participant interfaces, and a data processor. The logic is provided with the data processor in the form of programs of instructions or otherwise to perform the market maker process as discussed above.","Accordingly, the present invention provides a foundation for electronic commerce based on the sharing of specifications of input and output documents. Documents provide an intuitive and flexible way to access business services, much simpler to implement than programming APIs. It is much easier to interconnect companies in terms of documents that are exchanged, on which such companies already largely agree, than in terms of business system interfaces which invariably differ. In addition, such documents are specified in a human readable format in the preferred embodiment. According to the present invention the business interfaces are specified in documents, such as XML documents that are readily interpretable by humans as well as by computers.","Utilization of the document based transaction architecture of the present invention involves the use of a parser which operates in basically the same way for any source of documents, eliminating much of the need for custom programs to extract and integrate information from each participant in the network. Thus, integrating enterprise information from accounting, purchasing, manufacturing, shipping and other functions can be accomplished by first converting each source to a document having an architecture according to the present invention, and then processing the parsed data stream. Each node in the system that participates in the market only needs to know about the format of its internal systems, as well as the format of the documents being specified for interchange according to the transaction. Thus, there is no need to be able to produce the native format of every other node which might want to participate in the electronic commerce network.","For complete business integration, the present invention provides a repository of standardized logical structures, like XML elements, attributes or meta data, establishing a semantic language for particular commerce communities, a means for mapping between different meta data descriptions, and a server for processing the documents and invoking appropriate applications and services. The basic building blocks of a network according to the present invention include the business interface definitions which tell potential trading partners what online services a company offers and which documents to use to invoke the services; and servers which provide the bridge to bind together the set of internal and external business services to create a trading community. The server operates to parse the incoming documents and invoke the appropriate services. Also the server according to the present invention handles the translation tasks from the format of the documents being received and transmitted, to and from the formats of the respective host systems. Thus, trading partners need only agree on the structure, content and sequencing of the business documents exchanged, and not on the details of application programmer interfaces. How a document is processed and the actions which result from receipt of a document are strictly up to the businesses providing the services. This elevates integration from the system level to the business level. It enables the business to present a clean and stable interface to its partners despite changes in its internal technology implementation, organization or processes.","The whole process of building business interface definitions and enabling servers to manage commerce according to such descriptions is facilitated by a common business library, or repository, of information models for generic business concepts including business description primitives like companies, services and products, business forms like catalogs, purchase orders and invoices, and standard measurements, including time and date, location and classification of goods.","Other aspects of the present invention can be seen upon review of the figures, the detailed description, and the claims which follow.","A detailed description of the present invention is provided with respect to the figures, in which  illustrates a network of market participants and market makers based on the use of business interface definitions, and supporting the trading of input and output documents specified according to such interface descriptions. The network includes a plurality of nodes - which are interconnected through a communication network such as the Internet , or other telecommunications or data communications network. Each of the nodes - consists of a computer, such as a portable computer, a desktop personal computer, a workstation, a network of systems, or other data processing resources. The nodes include memory for storing the business interface definition, processors that execute transaction processes supporting commercial transactions with other nodes in the network, and computer programs which are executed by the processors in support of such services. In addition each of the nodes includes a network interface for providing for communication across the Internet , or the other communication network.","In the environment of , nodes , , , ,  and  are designated market participants. Market participants include resources for consumers or suppliers of goods or services to be traded according to commercial transactions established according to the present invention.","In this example, nodes  and  are market maker nodes. The market maker nodes include resources for registering business interface definitions, called a BID registry. Participants are able to send documents to a market maker node, at which the document is identified and routed to an appropriate participant which has registered to receive such documents as input. The market maker also facilitates the commercial network by maintaining a repository of standard forms making up a common business library for use in building business interface definitions.","In this example, the market participant  is connected directly to the market maker , rather than through the Internet . This connection directly to the market maker illustrates that the configuration of the networks supporting commercial transactions can be very diverse, incorporating public networks such as the Internet , and private connections such as a local area network or a Point-to-Point connection as illustrated between nodes  and . Actual communication networks are quite diverse and suitable for use to establish commercial transaction networks according to the present invention.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 2","FIG. 2","FIG. 2","FIG. 2"],"b":["200","200","201","202","203","204","205","206","207","205","208","209","210","211","205","212","211","213","214","215","216","217","218","212","219","220","221","222","223","224"]},"In the preferred system, the document of  is specified in an XML document type definition DTD, although other document definition architectures could be used, and includes interpretation information for the logical structures used in interpretation of instances of the documents. In addition, each of the transaction BIDs, input document BIDs and output document BIDs are specified according to an XML document type definitions. The XML type document is an example of a system based on parsed data that includes mark-up data and character data. Mark-up data identifies logical structures within the document and sets of character data identify the content of the logical structures. In addition, unparsed data can be carried in the document for a variety of purposes. See for example the specification of the Extensible Mark-up Language XML 1.0 REC-XML-19980210 published by the WC3 XML Working Group at WWW.W3.ORG\/TR\/1998\/REC-XML-19980210.","Thus in an exemplary system, participant nodes in the network establish virtual enterprises by interconnecting business systems and services with XML encoded documents that businesses accept and generate. For example, the business interface definition of a particular service establishes that if a document matching the BID of a request for a catalog entry is received, then a document matching a BID of a catalog entry will be returned. Also, if a document matching the BID of a purchase order is received, and it is acceptable to the receiving terminal, a document matching the BID of an invoice will be returned. The nodes in the network process the XML documents before they enter the local business system, which is established according to the variant transaction processing architecture of any given system in the network. Thus, the system unpacks sets of related documents, such as MIME-encoded sets of XML documents, parses them to create a stream of \u201cmark-up messages\u201d. The messages are routed to the appropriate applications and services using for example an event listener model like that described below.","The documents exchanged between business services are encoded using an XML language built from a repository of building blocks (a common business language) from which more complex document definitions may be created. The repository stores modules of interpretation information that are focused on the functions and information common to business domains, including business description primitives like companies, services and products; business forms like catalogs, purchase orders and invoices; standard measurements, like time, date, location; classification codes and the like providing interpretation information for logical structures in the XML documents.","The business interface definition is a higher level document that acts as a schema used for designing interfaces that trade documents according to the present invention. Thus the business interface definition bridges the gap between the documents specified according to XML and the programs which execute on the front end of the transaction processing services at particular nodes. Such front ends are implemented by JAVA virtual machines, or by other common architectures providing for interconnection of systems across a network. Thus, the business interface definition provides a technique by which a transaction protocol is programmed using the business interface definition document. The program for the protocol of the transaction is established by a detailed formal specification of a document type.","An example business interface definition BID based on a market participant document which conforms to an XML format is provided below. The market participant DTD groups business information about market participants, associating contact and address information with a description of services and financial information. This business information is composed of names, codes, addresses, a dedicated taxonomic mechanism for describing business organization, and a pointer to terms of business. In addition, the services identified by the market participant DTD will specify the input and output documents which that participant is expected respond to and produce. Thus, documents which define schema using an exemplary common business language for a market participant DTD, a service DTD, and a transaction document DTD specified in XML with explanatory comments follow:",{"@attributes":{"id":"p-0068","num":"0067"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"center"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Market Participant Sample"},{"entry":"<!DOCTYPE SCHEMA SYSTEM \u201cbidl.dtd\u201d>"},{"entry":"<SCHEMA>"},{"entry":"<H1>Market Participant Sample BID<\/H1>"},{"entry":"<META"},{"entry":"WHO.OWNS=\u201cVeo Systems\u201d \u2003\u2003WHO.COPYRIGHT=\u201cVeo Systems\u201d"},{"entry":"WHEN.COPYRIGHT=\u201c1998\u201d \u2003\u2003DESCRIPTION=\u201cSample BID\u201d"},{"entry":"WHO.CREATED=\u201c*\u201d \u2003\u2003\u2003\u2003\u2003WHEN.CREATED=\u201c*\u201d"},{"entry":"WHAT.VERSION=\u201c*\u201d \u2003\u2003\u2003\u2003\u2002WHO.MODIFIED=\u201c*\u201d"},{"entry":"WHEN.MODIFIED=\u201c*\u201d \u2003\u2003\u2003\u2003WHEN. EFFECTIVE=\u201c*\u201d"},{"entry":"WHEN.EXPIRES=\u201c*\u201d \u2003\u2003\u2003\u2003\u2002\u2009WHO.EFFECTIVE=\u201c*\u201d"},{"entry":"WHO.EXPIRES=\u201c*\u201d>"},{"entry":"<\/META>"},{"entry":"<PROLOG>"},{"entry":"<XMLDECL STANDALONE=\u201cno\u201d><\/XMLDECL>"},{"entry":"<DOCTYPE NAME=\u201cmarket.participant\u201d>"},{"entry":"<SYSTEM>markpart.dtd<\/SYSTEM><\/DOCTYPE>"},{"entry":"<\/PROLOG>"},{"entry":"<DTD NAME=\u201cmarkpart.dtd\u201d>"},{"entry":"<H2>Market Participant<\/H2>"},{"entry":"<H3>Market Participant<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201cmarket.participant\u201d>"},{"entry":"<EXPLAIN><TITLE>A Market Participant<\/TITLE>"},{"entry":"<SYNOPSIS>A business or person and its service interfaces.<\/SYNOPSIS>"},{"entry":"<P>A market participant is a document definition that is created to describe a business and at"},{"entry":"least one person with an email address, and it presents a set of pointers to service interfaces"},{"entry":"located on the network. In this example, the pointers have been resolved and the complete BID"},{"entry":"is presented here.<\/P><\/EXPLAIN>"},{"entry":"<MODEL><CHOICE>"},{"entry":"<ELEMENT NAME=\u201cbusiness\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cperson\u201d><\/ELEMENT>"},{"entry":"<\/CHOICE><\/MODEL><\/ELEMENTTYPE>"},{"entry":"<H3>Party Prototype<\/H3>"},{"entry":"<PROTOTYPE NAME=\u201cparty\u201d>"},{"entry":"<EXPLAIN><TITLE>The Party Prototype<\/TITLE><\/EXPLAIN>"},{"entry":"<MODEL><SEQUENCE>"},{"entry":"<ELEMENT NAME=\u201cparty.name\u201d OCCURS=\u201c+\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201caddress.set\u201d><\/ELEMENT>"},{"entry":"<\/SEQUENCE><\/MODEL>"},{"entry":"<\/PROTOTYPE>"},{"entry":"<H3>Party Types<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201cbusiness\u201d>"},{"entry":"<EXPLAIN><TITLE>A Business<\/TITLE>"},{"entry":"<SYNOPSIS>A business (party) with a business number attribute.<\/SYNOPSIS>"},{"entry":"<P>This element inherits the content model of the party prototype and adds a business number"},{"entry":"attribute, which serves as a key for database lookup. The business number may be used as a"},{"entry":"cross-reference to\/from customer id, credit limits, contacts lists, etc.<\/P><\/EXPLAIN>"},{"entry":"<EXTENDS HREF=\u201cparty\u201d>"},{"entry":"<ATTDEF NAME=\u201cbusiness.number\u201d><REQUIRED><\/REQUIRED><\/ATTDEF>"},{"entry":"<\/EXTENDS>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Person Name<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201cperson\u201d>"},{"entry":"<EXPLAIN><TITLE>A Person<\/TITLE><\/EXPLAIN>"},{"entry":"<EXTENDS HREF=\u201cparty\u201d>"},{"entry":"<ATTDEF NAME=\u201cSSN\u201d><IMPLIED><\/IMPLIED><\/ATTDEF>"},{"entry":"<\/EXTENDS>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Party Name<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201cparty.name\u201d>"},{"entry":"<EXPLAIN><TITLE>A Party's Name<\/TITLE>"},{"entry":"<SYNOPSIS>A party's name in a string of character.<\/SYNOPSIS><\/EXPLAIN>"},{"entry":"<MODEL><STRING><\/STRING><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Address Set<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201caddress.set\u201d>"},{"entry":"<MODEL><SEQUENCE>"},{"entry":"<ELEMENT NAME=\u201caddress.physical\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201ctelephone\u201d OCCURS=\u201c*\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cfax\u201d OCCURS=\u201c*\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cemail\u201d OCCURS=\u201c*\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cinternet\u201d OCCURS=\u201c*\u201d><\/ELEMENT>"},{"entry":"<\/SEQUENCE><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Physical Address<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201caddress.physical\u201d>"},{"entry":"<EXPLAIN><TITLE>Physical Address<\/TITLE>"},{"entry":"<SYNOPSIS>The street address, city, state, and zip code.<\/SYNOPSIS><\/EXPLAIN>"},{"entry":"<MODEL><SEQUENCE>"},{"entry":"<ELEMENT NAME=\u201cstreet\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201ccity\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cstate\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cpostcode\u201d OCCURS=\u201c?\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201ccountry\u201d><\/ELEMENT>"},{"entry":"<\/SEQUENCE><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Street<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201cstreet\u201d>"},{"entry":"<EXPLAIN><TITLE>Street Address<\/TITLE>"},{"entry":"<SYNOPSIS>Street or postal address.<\/SYNOPSIS><\/EXPLAIN>"},{"entry":"<MODEL><STRING><\/STRING><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>City<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201ccity\u201d>"},{"entry":"<EXPLAIN><TITLE>City Name or Code<\/TITLE>"},{"entry":"<P>The city name or code is a string that contains sufficient information to identify a city"},{"entry":"within a designated state.<\/P>"},{"entry":"<\/EXPLAIN>"},{"entry":"<MODEL><STRING><\/STRING><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>State<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201cstate\u201d>"},{"entry":"<EXPLAIN><TITLE>State, Province or Prefecture Name or Code<\/TITLE>"},{"entry":"<P>The state name or code contains sufficient information to identify a state within a"},{"entry":"designated country.<\/P><\/EXPLAIN>"},{"entry":"<MODEL><STRING DATATYPE=\u201cCOUNTRY.US.SUBENTITY\u201d><\/STRING><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Postal Code<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201cpostcode\u201d>"},{"entry":"<EXPLAIN><TITLE>Postal Code<\/TITLE>"},{"entry":"<P>A postal code is an alphanumeric code, designated by an appropriate postal authority, that"},{"entry":"is used to identify a location or region within the jurisdiction of that postal authority. Postal"},{"entry":"authorities include designated national postal authorities.<\/P><\/EXPLAIN>"},{"entry":"<MODEL><STRING DATATYPE=\u201cstring\u201d><\/STRING><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Country<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201ccountry\u201d>"},{"entry":"<EXPLAIN><TITLE>Country Code<\/TITLE>"},{"entry":"<P>A country code is a two-letter code, designated by ISO, that is used to uniquely identify a"},{"entry":"country.<\/P><\/EXPLAIN>"},{"entry":"<MODEL><STRING DATATYPE=\u201ccountry\u201d><\/STRING><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Network Addresses<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201ctelephone\u201d>"},{"entry":"<EXPLAIN><TITLE>Telephone Number<\/TITLE>"},{"entry":"<P>A telephone number is a string of alphanumerics and punctuation that uniquely identifies a"},{"entry":"telephone service terminal, including extension ntunber.<\/P><\/EXPLAIN>"},{"entry":"<MODEL><STRING><\/STRING><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Fax<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201cfax\u201d>"},{"entry":"<EXPLAIN><TITLE>Fax Number<\/TITLE>"},{"entry":"<P>A fax number is a string of alphanumerics and punctuation that uniquely identifies a fax"},{"entry":"service terminal.<\/P>"},{"entry":"<\/EXPLAIN>"},{"entry":"<MODEL><STRING><\/STRING><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Email<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201cemail\u201d>"},{"entry":"<EXPLAIN><TITLE>Email Address<\/TITLE>"},{"entry":"<P>An email address is a datatype-constrained string that uniquely identifies a mailbox on a"},{"entry":"server.<\/P><\/EXPLAIN>"},{"entry":"<MODEL><STRING DATATYPE=\u201cemail\u201d><\/STRING><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Intemet Address<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201cinternet\u201d>"},{"entry":"<EXPLAIN><TITLE>Internet Address<\/TITLE>"},{"entry":"<P>An Internet address is a datatype-constrained string that uniquely identifies a resource on"},{"entry":"the Internet by means of a URL.<\/P><\/EXPLAIN>"},{"entry":"<MODEL><STRING DATATYPE=\u201curl\u201d><\/STRING><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<\/DTD>"},{"entry":"<\/SCHEMA>"},{"entry":"Service Description Sample"},{"entry":"<!DOCTYPE schema SYSTEM \u201cbidl.dtd\u201d>"},{"entry":"<SCHEMA>"},{"entry":"<H1>Service Description Sample BID<\/H1>"},{"entry":"<META"},{"entry":"WHO.OWNS=\u201cVeo Systems\u201d \u2003\u2003\u2003WHO.COPYRIGHT=\u201cVeo Systems\u201d"},{"entry":"WHEN.COPYRIGHT=\u201c1998\u201d \u2003\u2003\u2003DESCRIPTION=\u201cSample BID\u201d"},{"entry":"WHO.CREATED=\u201c*\u201d \u2003\u2003\u2003\u2003\u2003\u2003WHEN.CREATED=\u201c*\u201d"},{"entry":"WHAT.VERSION=\u201c*\u201d \u2003\u2003\u2003\u2003\u2003\u2002WHO.MODIFIED=\u201c*\u201d"},{"entry":"WHEN.MODIFIED=\u201c*\u201d \u2003\u2003\u2003\u2003\u2003WHEN.EFFECTIVE=\u201c*\u201d"},{"entry":"WHEN.EXPIRES=\u201c*\u201d \u2003\u2003\u2003\u2003\u2003\u2002\u2009WHO.EFFECTIVE=\u201c*\u201d"},{"entry":"WHO.EXPIRES=\u201c*\u201d>"},{"entry":"<\/META>"},{"entry":"<PROLOG>"},{"entry":"+21XMLDECL STANDALONE=\u201cno\u201d><\/XMLDECL>"},{"entry":"<DOCTYPE NAME=\u201cservice\u201d>"},{"entry":"<SYSTEM>service.dtd<\/SYSTEM><\/DOCTYPE>"},{"entry":"<\/PROLOG>"},{"entry":"<DTD NAME=\u201cservice.dtd\u201d>"},{"entry":"<H2>Services<\/H2>"},{"entry":"<H3>Includes+21\/H3>"},{"entry":"<!-- INCLUDE><SYSTEM>comments.bixn<\/SYSTEM><\/INCLUDE -->"},{"entry":"<H3>Service Set<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201cservice.set>"},{"entry":"<EXPLAIN><TITLE>Service Set<\/TITLE>"},{"entry":"<SYNOPSIS>A set of services.<\/SYNOPSIS><\/EXPLAIN>"},{"entry":"<MODEL>"},{"entry":"<ELEMENT NAME =\u201cservice\u201d OCCURS=\u201c+\u201d><\/ELEMENT>"},{"entry":"<\/MODEL><\/ELEMENTTYPE>"},{"entry":"<H3>Services Prototype<\/H3>"},{"entry":"<PROTOTYPE NAME=\u201cprototype.service\u201d>"},{"entry":"<EXPLAIN><TITLE>Service<\/TITLE><\/EXPLAIN>"},{"entry":"<MODEL><SEQUENCE>"},{"entry":"<ELEMENT NAME=\u201cservice.name\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cservice.terms\u201d OCCURS=\u201c+\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cservice.location\u201d OCCURS=\u201c+\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cservice.operation\u201d OCCURS=\u201c+\u201d><\/ELEMENT>"},{"entry":"<\/SEQUENCE><\/MODEL>"},{"entry":"<!-- ATTGROUP><IMPLEMENTS"},{"entry":"HREF=\u201ccommon.attrib\u201d><\/IMPLEMENTS><\/ATTGROUP -->"},{"entry":"<\/PROTOTYPE>"},{"entry":"<H3>Service<\/H3>"},{"entry":"<INTRO><P>A service is an addressable network resource that provides interfaces to specific"},{"entry":"operations by way of input and output documents.<\/P><\/INTRO>"},{"entry":"<ELEMENTTYPE NAME=\u201cservice\u201d>"},{"entry":"<EXPLAIN><TITLE>Service<\/TITLE>"},{"entry":"<P>A service is defined in terms of its name, the location(s) at which the service is available,"},{"entry":"and the operation(s) that the service performs.<\/P><\/EXPLAIN>"},{"entry":"<MODEL><SEQUENCE>"},{"entry":"<ELEMENT NAME=\u201cservice.name\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cservice.location\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cservice.operation\u201d OCCURS=\u201c+\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cservice.terms\u201d><\/ELEMENT>"},{"entry":"<\/SEQUENCE><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Service Name<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201cservice.name\u201d>"},{"entry":"<EXPLAIN><TITLE>Service Name<\/TITLE>"},{"entry":"<P>The service name is a human-readable string that ascribes a moniker for a service. It may be"},{"entry":"employed is user interfaces and documentation, or for other purposes.<\/P><\/EXPLAIN>"},{"entry":"<MODEL><STRING><\/STRING><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Service Location<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201cservice. location\u201d>"},{"entry":"<EXPLAIN><TITLE>Service Location<\/TITLE>"},{"entry":"<SYNOPSIS>A URI of a service.<\/SYNOPSIS>"},{"entry":"<P>A service location is a datatype-constrained string that locates a service on the Internet by"},{"entry":"means of a URI.<\/P><\/EXPLAIN>"},{"entry":"<MODEL><STRING DATATYPE=\u201curl\u201d><\/STRING><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Service Operations<\/H3>"},{"entry":"<INTRO><P>A service operation consists of a name, location and its interface, as identified by"},{"entry":"the type of input document that the service operation accepts and by the type of document that it"},{"entry":"will return as a result.<\/P><\/INTRO>"},{"entry":"<ELEMENTTYPE NAME=\u201cservice.operation\u201d>"},{"entry":"<EXPLAIN><TITLE>Service Operations<\/TITLE>"},{"entry":"<P>A service operation must have a name, a location, and at least one document type as an"},{"entry":"input, with one or more possible document types returned as a result of the operation.<\/P>"},{"entry":"<\/EXPLAIN>"},{"entry":"<MODEL><SEQUENCE>"},{"entry":"<ELEMENT NAME=\u201cservice.operation.name\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cservice.operation.location\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cservice.operation.input\u201d><\/ELEMENT>"},{"entry":"<ELEMENT NAME=\u201cservice.operation.output\u201d><\/ELEMENT>"},{"entry":"<\/SEQUENCE><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Service Operation Name<\/H3>"},{"entry":"<ELEMENTTYPE NAME=\u201cservice.operation.name\u201d>"},{"entry":"<EXPLAIN><TITLE>Service Operation Name<\/TITLE>"},{"entry":"<P>The service operation name is a human-readable string that ascribes a moniker to a service"},{"entry":"operation. It may be employed in user interfaces and documentation, or for other"},{"entry":"purposes.<\/P><\/EXPLAIN>"},{"entry":"<MODEL><STRING><\/STRING><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Service Operation Location<\/H3>"},{"entry":"<INTRO><P>The service location is a network resource. That is to say, a URI.<\/P><\/INTRO>"},{"entry":"<ELEMENTTYPE NAME=\u201cservice.operation.location\u201d>"},{"entry":"<EXPLAIN><TITLE>Service Operation Location<\/TITLE>"},{"entry":"<SYNOPSIS>A URI of a service operation.<\/SYNOPSIS>"},{"entry":"<P>A service operation location is a datatype-constrained string that locates a service operation"},{"entry":"on the Internet by means of a URL.<\/P><\/EXPLAIN>"},{"entry":"<MODEL><STRING DATATYPE=\u201curl\u201d><\/STRING><\/MODEL>"},{"entry":"<\/ELEMENTTYPE>"},{"entry":"<H3>Service Operation Input Document<\/H3>"},{"entry":"<INTRO><P>The input to a service operation is defined by its input document type. That is,"},{"entry":"the service operation is invoked when the service operation location receives an input document"},{"entry":"whose type corresponds to the document type specified by this element.<\/P>"},{"entry":"<P>Rather than define the expected input and output document types in the market participant"},{"entry":"document, this example provides pointers to externally-defined BLDs. This allows reuse of the"},{"entry":"same BID as the input and\/or output document type for multiple operations. In addition, it"},{"entry":"encourages parallel design and implementation.<\/P><\/INTRO>"},{"entry":"<ELEMENTTYPE NAME=\u201cservice.operation.input\u201d>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The service DTD schema may be extended with a service type element in a common business language repository as follows:\n\n","The service type element above illustrates interpretation information carried by a business interface definition, in this example a content form allowing identification of any one of a list of valid service types. Other interpretation information includes data typing, such as for example the element <H3>Internet Address<\/H3>including the content form \u201curl\u201d and expressed in the data type \u201cstring.\u201d Yet other interpretation information includes mapping of codes to elements of a list, such as for example the element <H3>State<H3>including the code mapping for states in the file \u201cCOUNTRY.US.SUBENTITY.\u201d","The service description referred to by the market participant DTD defines the documents that the service accepts and generates upon competition of the service. A basic service description is specified below as a XML document transact.dtd.","Transact.dtd models a transaction description, such as an invoice, or a description of an exchange of value. This document type supports many uses, so the transaction description element has an attribute that allows user to distinguish among invoices, performance, offers to sell, requests for quotes and so on. The exchange may occur among more than two parties, but only two are called out, the offeror and the counter party, each of whom is represented by a pointer to a document conforming to the market participant DTD outlined above. The counter party pointer is optional, to accommodate offers to sell. The exchange description is described in the module tranprim.mod listed below, and includes pricing and subtotals. Following the exchange description, charges applying to the transaction as a whole may be provided, and a total charge must be supplied. Thus, the transaction description schema document transact.dtd for this example is set forth below:\n\n","Representative market participant, and service DTDs, created according to the definitions above, are as follows:","Market Participant DTD","<!ELEMENT business (party.name+, address.set)>","<!ATTLIST business business.number CDATA #REQUIRED",{"@attributes":{"id":"p-0074","num":"0000"},"ul":{"@attributes":{"id":"ul0008","list-style":"none"},"li":{"@attributes":{"id":"ul0008-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0009","list-style":"none"},"li":[">\n\n<!ELEMENT party.name (#PCDATA)>\n\n<!ELEMENT city (#PCDATA)>\n\n<!ELEMENT internet (#PCDATA)>\n\n<!ELEMENT country (#PCDATA)>\n\n<!ELEMENT state (#PCDATA)>\n\n<!ELEMENT email (#PCDATA)>\n\n<!ELEMENT address.physical (street, city, state, postcode?i, country)>\n\n<!ELEMENT telephone (#PCDATA)>\n\n<!ELEMENT person (party.name+, address.set)>\n\n<ATTLIST person SSN CDATA #IMPLIED\n",">\n\n<!ELEMENT fax (#PCDATA)>\n\n<!ELEMENT street (#PCDATA)>\n\n<!ELEMENT address.set (address.physical, telephone*, fax*, email*, Internet*)>\n\n<!ELEMENT postcode (#PCDATA)>\n\n<!ELEMENT market.participant (business|person)>\n\nService DTD\n\n<!ELEMENT service.location (#PCDATA)>\n\n<!ELEMENT service.terms (#PCDATA)>\n\n<!ELEMENT service.operation.name (#PCDATA)>\n\n<!ELEMENT service.operation (service.operation.name, service.operation.location, service.operation.input, service.operation.output)>\n\n<!ELEMENT service (service.name, service.location, service.operation+, service.terms)>\n\n<!ELEMENT service.operation.input (#PCDATA)>\n\n<!ELEMENT service.operation.location (#PCDATA)>\n\n<!ELEMENT service.name (#PCDATA)>\n\n<!ELEMENT service.set (service+)>\n\n<!ELEMENT service.operation.output (#PCDATA)>\n"]}}}},"One instance of a document produced according to the transact.dtd follows:\n\n","Accordingly, the present invention provides a technique by which a market participant is able to identify itself, and identify the types of input documents and the types of output documents with which it is willing to transact business. The particular manner in which the content carried in such documents is processed by the other parties to the transaction, or by the local party, is not involved in establishing a business relationship nor carrying out transactions.",{"@attributes":{"id":"p-0077","num":"0209"},"figref":["FIG. 3","FIG. 3"],"b":["300","301","301","301","302","301","302","303"]},"The output data structures from the translator  are supplied to a transaction process front end  along with events signaled by the parser . The front end  in one embodiment consists of a JAVA virtual machine or other similar interface adapted for communication amongst diverse nodes in a network. The transaction processing front end  responds to the events indicated by the parser  and the translator  to route the incoming data to appropriate functions in the enterprise systems and networks to which the participant is coupled. Thus, the transaction process front end  in the example of  is coupled to commercial functions , database functions , other enterprise functions such as accounting and billing , and to the specific event listeners and processors  which are designed to respond to the events indicated by the parser.","The parser  takes a purchase order like that in the example above, or other document, specified according to the business interface definition and creates a set of events that are recognized by the local transaction processing architecture, such as a set of JAVA events for a JAVA virtual machine.","The parser of the present invention is uncoupled from the programs that listen for events based on the received documents. Various pieces of mark-up in a received document or a complete document meeting certain specifications serve as instructions for listening functions to start processing. Thus listening programs carry out the business logic associated with the document information. For example, a program associated with an address element may be code that validates the postal code by checking the database. These listeners subscribe to events by registering with a document router, which directs the relevant events to all subscribers who are interested in them.","For example, the purchase order specified above may be monitored by programs listening for events generated by the parser, which would connect the document or its contents to an order entry program. Receipt of product descriptions within the purchase order, might invoke a program to check inventory. Receipt of address information within the purchase order, would then invoke a program to check availability of services for delivery. Buyer information fields in the document, could invoke processes to check order history for credit worthiness or to offer a promotion or similar processing based on knowing the identity of the consumer.","Complex listeners can be created as configurations of primitive ones. For example, a purchase order listener may contain and invoke the list listeners set out in the previous paragraph, or the list members may be invoked on their own. Note that the applications that the listeners run are unlikely to be native XML processes or native JAVA processes. In these cases, the objects would be transformed into the format required by the receiving trans application. When the application finishes processing, its output is then transformed back to the XML format for communication to other nodes in the network.","It can be seen that the market participant document type description, and the transaction document type description outlined above include a schematic mapping for logic elements in the documents, and include mark-up language based on natural language. The natural language mark-up, and other natural language attributes of XML facilitate the use of XML type mark-up languages for the specification of business interface definitions, service descriptions, and the descriptions of input and output documents.","The participant module  in addition to storing the business interface definition includes a compiler which is used to compile objects or other data structures to be used by the transaction process front end  which corresponds to the logical structures in the incoming documents, and to compile the translator . Thus, as the business interface definition is modified or updated by the participant as the transactions with which the participant is involved change, the translator  and parser  are automatically kept up to date.","In a preferred system, the set of JAVA events is created by a compiler which corresponds to the grove model of SGML, mainly the standard Element Structure Information Set augmented by the \u201cproperty set\u201d for each element. International Standard ISO\/IEC10179:1996 (E), Information Technology\u2014Processing Languages\u2014Document Style Semantics and Specification Language (DSSSL). Turning the XML document into a set of events for the world to process contrasts with the normal model of parsing in which the parser output is maintained as an internal data structure. By translating the elements of the XML document into JAVA events or other programming structures that are suitable for use by the transaction processing front end of the respective nodes enables rich functionality at nodes utilizing the documents being traded.","Thus, the transaction process front end  is able to operate in a publish and subscribe architecture that enables the addition of new listener programs without the knowledge of or impact on other listening programs in the system. Each listener, , , ,  in , maintains a queue in which the front end  directs events. This enables multiple listeners to handle events in parallel at their own pace.","Furthermore, according to the present invention the applications that the listeners run need not be native XML functions, or native functions which match the format of the incoming document. Rather, these listeners may be JAVA functions, if the transaction process front end  is a JAVA interface, or may be functions which run according to a unique transaction processing architecture. In these cases, the objects would be transformed into the format required by the receiving application. When the application of the listener finishes, its output is then transformed back into the format of a document as specified by the business interface definition in the module . Thus, the translator  is coupled to the network interface  directly for supplying the composed documents as outputs.","The listeners coupled to the transaction processing front end may include listeners for input documents, listeners for specific elements of the input documents, and listeners for attributes stored in particular elements of the input document. This enables diverse and flexible implementations of transaction processes at the participant nodes for filtering and responding to incoming documents.",{"@attributes":{"id":"p-0089","num":"0221"},"figref":["FIG. 4","FIG. 3"],"b":["400","401","402","403","404","405","406","407"]},{"@attributes":{"id":"p-0090","num":"0222"},"figref":["FIG. 5","FIG. 3","FIG. 5","FIG. 3"]},"The system illustrated in  includes a generic XML parser . Such parser can be implemented using a standard call back model. When a parsing event occurs, the parser calls a particular method in an application object, passing in the appropriate information in the parameters. Thus a single application  resides with the parser. The application packages the information provided by the parser in an XML event object and sends it to as many event listeners as have identified themselves, as indicated by the block . The set of events  is completely parser independent. The events  can be supplied to any number of listeners and any number of threads on any number of machines. The events are based on the element structure information set ESIS in one alternative. Thus, they consist of a list of the important aspects of a document structure, such as the starts and ends of elements, or of the recognition of an attribute. XML (and SGML) parsers generally use the ESIS structure as a default set of information for a parser to return to its application.","A specialized ESIS listener  is coupled to the set of events . This listener  implements the ESIS listener API, and listens for all XML events from one or more generators. An element event generator  is a specialized ESIS listener which is also an XML event generator. Its listeners are objects only interested in events for particular types of elements. For example in an HTML environment, the listener may only be interested in ordered lists, that is only the part of the document between the <OL> and <\/OL> tags. For another example, a listener may listen for \u201cparty.name\u201d elements, or for \u201cservice.name\u201d elements according to the common business language, from the example documents above, process the events to ensure that the elements carry data that matches the schematic mapping for the element, and react according to the process needed at the receiving node.","This allows the system to have small objects that listen for particular parts of the document, such as one which only adds up prices. Since listeners can both add and remove themselves from a generator, there can be a listener which only listens to for example the <HEAD> part of an HTML document. Because of this and because of the highly recursive nature of XML documents, it is possible to write highly targeted code, and to write concurrent listeners. For example, an <OL> listener can set up an <LI> listener completely separate from the manner in which the <UL> (unordered list) listener sets up its <LI> listener. Alternatively, it can create a listener which generates a graphic user interface and another which searches a database using the same input. Thus, the document is treated as a program executed by the listeners, as opposed to the finished data structure which the application examines one piece at a time. If an application is written this way, it is not necessary to have the entire document in memory to execute an application.","The next listener coupled to the set of events  is an attribute filter . The attribute filter  like the element filter  is an attribute event generator according to the ESIS listener model. The listener for an attribute filter specifies the attributes it is interested in, and receives events for any element having that attribute specified. So for example, a font manager might receive events only for elements having a font attribute, such as the <P FONT=\u201cTimes Roman\u201d\/P>.","The element event generator  supplies such element objects to specialize the element listeners A.","The attribute event generator  supplies the attribute event objects to attribute listeners A. Similarly, the attribute objects are supplied to a \u201carchitecture\u201d in the sense of an SGML\/XML transformation from one document type to another using attributes. Thus the architecture of B allows a particular attribute with a particular name to be distinguished. Only elements with that attribute defined become part of the output document, and the name of the element in the output document is the value of the attribute in the input document. For example, if the architecture B is HTML, the string:","<PURCHASES HTML=\u201cOL\u201d><ITEM HTML=\u201cLI\u201d><NAME HTML=\u201cB\u201d>STUFF<\/NAME><PRICE HTML=\u201cB\u201d>123<\/PRICE><\/ITEM><\/PURCHASES>","translates into:","<OL><LI><B>STUFF<B><B>123<\/B><\/LI><\/OL>","which is correct HTML.","The next module which is coupled to the set of events  is a tree builder . The tree builder takes a stream of XML events and generates a tree representation of the underlying document. One preferred version of the tree builder  generates a document object model DOM object , according to the specification of the W3C (See, http:\/\/www.w3.org\/TR\/1998\/WD-DOM-19980720\/introduction.html). However listeners in event streams can be used to handle most requirements, a tree version is useful for supporting queries around a document, reordering of nodes, creation of new documents, and supporting a data structure in memory from which the same event stream can be generated multiple times, for example like parsing the document many times. A specialized builder  can be coupled to the tree builder  in order to build special subtrees for parts of the document as suits a particular implementation.","In addition to responses to incoming documents, other sources of XML events  can be provided. Thus, an event stream  is generated by walking over a tree of DOM objects and regenerating the original event stream created when the document was being parsed. This allows the system to present the appearance that the document is being parsed several times.","The idea of an object which walks a tree and generates a stream of events can be generalize beyond the tree of DOM objects, to any tree of objects which can be queried. Thus, a JAVA walker  may be an application which walks a tree of JAVA bean components . The walker walks over all the publicly accessible fields and methods. The walker keeps track of the objects it has already visited to ensure that it doesn't go into an endless cycle. JAVA events  are the type of events generated by the JAVA walker . This currently includes most of the kinds of information one can derive from an object. This is the JAVA equivalent of ESIS and allows the same programming approach applied to XML to be applied to JAVA objects generally, although particularly to JAVA beans.","The JAVA to XML event generator  constitutes a JAVA listener and a JAVA event generator. It receives the stream of events  from the JAVA walker  and translates selected ones to present a JAVA object as an XML document. In the one preferred embodiment, the event generator  exploits the JAVA beans API. Each object seen becomes an element, with the element name the same as the class name. Within that element, each embedded method also becomes an element whose content is the value returned by invoking the method. If it is an object or an array of objects, then these are walked in turn.",{"@attributes":{"id":"p-0103","num":"0235"},"figref":["FIG. 6","FIG. 5","FIG. 5","FIG. 6","FIG. 6"],"b":["600","601","602","603","604","505","505","605","506"]},"The organization of the processing module illustrated in  is representative of one embodiment of the parser and transaction process front end for the system of . As can be seen, a very flexible interface is provided by which diverse transaction processes can be executed in response to the incoming XML documents, or other structured document formats.",{"@attributes":{"id":"p-0105","num":"0237"},"figref":["FIG. 7","FIG. 3","FIG. 7","FIG. 7"],"b":["700","701","702","703","703","704","705","706","707","708","700"]},"The business interface definition builder module  also includes a compiler which is used for generating the translator , the objects to be produced by the translator according to the host transaction processing architecture, and to manage the parsing function .",{"@attributes":{"id":"p-0107","num":"0239"},"figref":"FIG. 8","b":["700","800","801","802","803","804","805","806","807","808","809"]},"In addition to the party and service BIDs, input and output document BIDs are stored in the repository as indicated by the field . Thus, a purchase order BID , an invoice BID , a request for quote BID , a product availability report BID , and an order status BID  might be stored in the repository.","The repository, in addition to the business interface definitions which in a preferred system are specified as document type definitions according to XML, stores interpretation information in the form of semantic maps as indicated by the field . Thus, semantic maps which are used for specifying weights , currencies , sizes , product identifiers , and product features  in this example might be stored in the repository. Further, the interpretation information provides for typing of data structures within the logical structures of documents.","In addition, logical structures used in the composing of business interface definitions could be stored in the repository as indicated by block . Thus, forms for providing address information , forms for providing pricing information , and forms for providing terms of contractual relationships could be provided 825. As the network expands, the CBL repository will also expand and standardize tending to make the addition of new participants, and the modification of business interface definitions easier.",{"@attributes":{"id":"p-0111","num":"0243"},"figref":["FIG. 9","FIG. 7"],"b":["900","901"]},"Next, any referenced logical structures, interpretation information, document definitions and\/or service definitions are retrieved from the repository in response to user input via the graphical user interface (step ). In the next step, any complementary business interface definitions or components of business interface definitions are accessed from other participants in the network selected via user input, by customized search engines, web browsers or otherwise (step ). A document definition for the participant is created using the information gathered (step ). The translators for the document to host and host to document mappers are created by the compiler (step ). Host architecture data structures corresponding to the definition are created by the compiler (step ), and the business interface definition which has been created is posted on the network, such as by posting on a website or otherwise, making it accessible to other nodes in the network (step ).","Business interface definitions tell potential trading partners the online services the company offers and which documents to use to invoke those services. Thus, the services are defined in the business interface definition by the documents that they accept and produce. This is illustrated in the following fragment of an XML service definition.\n\n","This XML fragment defines a service consisting of two transactions, one for taking orders and the other for tracking them. Each definition expresses a contract or promise to carry out a service if a valid request is submitted to the specified Web address. The Order service here requires an input document that conforms to a standard \u201cpo.dtd\u201d Document Type Definition located in the repository, which may be local, or stored in an industry wide registry on the network. If a node can fulfill the order, it will return a document conforming to a customized \u201cinvoice.dtd\u201d whose definition is local. In effect, the company is promising to do business with anyone who can submit a Purchase Order that conforms to the XML specification it declares. No prior arrangement is necessary.","The DTD is the formal specification or grammar for documents of a given type; it describes the elements, their attributes, and the order in which they must appear. For example, purchase orders typically contain the names and addresses of the buyer and seller, a set of product descriptions, and associated terms and conditions such as price and delivery dates. In Electronic Data Interchange EDI for example, the X12 850 specification is a commonly used model for purchase orders.","The repository encourages the development of XML document models from reusable semantic components that are common to many business domains. Such documents can be understood from their common message elements, even though they may appear quite different. This is the role of the Common Business Library repository.","The Common Business Library repository consists of information models for generic business concepts including:\n\n","This information is represented as an extensible, public set of XML building blocks that companies can customize and assemble to develop XML applications quickly. Atomic CBL elements implement industry messaging standards and conventions such as standard ISO codes for countries, currencies, addresses, and time. Low level CBL semantics have also come from analysis of proposed metadata frameworks for Internet resources, such as Dublin Core.","The next level of elements use these building blocks to implement the basic business forms such as those used in X12 EDI transactions as well as those used in emerging Internet standards such as OTP (Open Trading Protocol) and OBI (Open Buying on the Internet).","CBL's focus is on the functions and information that are common to all business domains (business description primitives like companies, services, and products; business forms like catalogs, purchase orders, and invoices; standard measurements, date and time, location, classification codes). CBL builds on standards or industry conventions for semantics where possible (e.g., the rules that specify \u201cday\/month\/year\u201d in Europe vs \u201cmonth\/day\/year\u201d in the U.S. are encoded in separate CBL modules).","The CBL is a language that is used for designing applications. It is designed to bridge the gap between the \u201cdocument world\u201d of XML and the \u201cprogramming world\u201d of JAVA or other transaction processing architectures. Schema embodies a philosophy of \u201cprogramming with documents\u201d in which a detailed formal specification of a document type is the master source from which a variety of related forms can be generated. These forms include XML DTDs for CBL, JAVA objects, programs for converting XML instances to and from the corresponding JAVA objects, and supporting documentation.","The CBL creates a single source from which almost all of the pieces of a system can be automatically generated by a compiler. The CBL works by extending SGML\/XML, which is normally used to formally define the structures of particular document types, to include specification of the semantics associated with each information element and attribute. The limited set of (mostly) character types in SGML\/XML can be extended to declare any kind of datatype.","Here is a fragment from the CBL definition for the \u201cdatetime\u201d module:\n\n","In this fragment, the ELEMENT \u201cyear\u201d is defined as character data, and an associated \u201cschema\u201d attribute, also character data, defines the schema for \u201cyear\u201d to be section 3.8 of the ISO 8601 standard.","This \u201cdatetime\u201d CBL module is in fact defined as an instance of the Schema DTD. First, the module name is defined. Then the \u201cdatetime\u201d element \u201cYEAR\u201d is bound to the semantics of ISO 8601:\n\n","The example market participant and service modules above are also stored in the CBL repository.","In , an Airbill  is being defined by customizing a generic purchase order DTD , adding more specific information about shipping weight . The generic purchase order  was initially assembled from the ground up out of CBL modules for address, date and time, currency, and vendor and product description. Using CBL thus significantly speeds the development and implementation of XML commerce applications. More importantly, CBL makes it easier for commercial applications to be interconnected.","In the CBL, XML is extended with a schema. The extensions add strong-typing to XML elements so that content can be readily validated. For example, an element called <CPU_clock_speed> can be defined as an integer with a set of valid values: {100, 133, 166, 200, 233, 266 Mhz.}. The schema also adds class-subclass hierarchies, so that information can be readily instantiated from class definitions. A laptop, for instance, can be described as a computer with additional tags for features such as display type and battery life. These and other extensions facilitate data entry, as well as automated translations between XML and traditional Object-Oriented and relational data models.","Thus the completed BID is run through the compiler which produces the DTDs for the actual instance of a participant and a service as outlined above, the JAVA beans which correspond to the logical structures in the DTD instances, and transformation code for transforming from XML to JAVA and from JAVA to XML. In alternative systems documentation is also generated for display on a user interface or for printing by a user to facilitate use of the objects.","For the example market participant and service DTDs set forth above, the JAVA beans generated by the compiler are set forth (with some redactions for conciseness) as follows:",{"@attributes":{"id":"p-0131","num":"0298"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003import com.veo.vsp.doclet.meta.Document;"},{"entry":"public class AddressPhysical extends Document {"},{"entry":"\u2003public static final String DOC_TYPE = "},{"entry":"\u2003\u201caddress.physical\u201d;"},{"entry":"\u2003\u2003String mStreet;"},{"entry":"\u2003\u2003String mCity;"},{"entry":"\u2003public final static int AK = 0;"},{"entry":"\u2003public final static int AL = 1;"},{"entry":"\u2003public final static int AR = 2;"},{"entry":"\u2003public final static int AZ = 3;"},{"entry":"\u2003public final static int CA = 4;"},{"entry":"\u2003..."},{"entry":"\u2003public final static int WI = 48;"},{"entry":"\u2003public final static int WV = 49;"},{"entry":"\u2003public final static int WY = 50;"},{"entry":"\u2003\u2003int mState;"},{"entry":"\u2003\u2003String mPostcode;"},{"entry":"\u2003public final static int AD = 51;"},{"entry":"\u2003public final static int AE = 52;"},{"entry":"\u2003public final static int AF = 53;"},{"entry":"\u2003public final static int AG = 54;"},{"entry":"\u2003public final static int AI = 55;"},{"entry":"\u2003public final static int AM = 56;"},{"entry":"\u2003..."},{"entry":"\u2003\u2003int mCountry;"},{"entry":"\u2003public AddressPhysical( ){ "},{"entry":"\u2003\u2003\u2003\u2003\u2003super(DOC_TYPE);"},{"entry":"\u2003mStreet = new String( );"},{"entry":"\u2003mCity = new String( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mState = \u22121;"},{"entry":"\u2003mPostcode = null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mCountry = \u22121;"},{"entry":"\u2003}"},{"entry":"\u2003public AddressPhysical(String doc_type){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(doc_type);"},{"entry":"\u2003mStreet = new String( );"},{"entry":"\u2003mCity = new String( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mState = \u22121;"},{"entry":"\u2003mPostcode = null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mCountry = \u22121;"},{"entry":"\u2003}"},{"entry":"\u2003static public AddressPhysical initAddressPhysical"},{"entry":"\u2003(String iStreet,String iCity,int"},{"entry":"iState,String iPostcode,int iCountry){"},{"entry":"\u2003\u2003\u2003\u2003\u2003AddressPhysical obj = new AddressPhysical( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003obj.initializeAll(iStreet, iCity, "},{"entry":"\u2003\u2003\u2003\u2003\u2003iState, iPostcode, iCountry);"},{"entry":"\u2003\u2003\u2003\u2003\u2003return obj;"},{"entry":"\u2003}"},{"entry":"\u2003public void initializeAll(String iStreet,String "},{"entry":"\u2003iCity,int iState,String iPostcode,int"},{"entry":"iCountry){"},{"entry":"\u2003\u2003\u2003\u2003\u2003mStreet = iStreet;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mCity = iCity;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mState = iState;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mPostcode = iPostcode;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mCountry = iCountry;"},{"entry":"\u2003}"},{"entry":"\u2003public String getStreet( ){"},{"entry":"\u2003\u2003return mStreet;"},{"entry":"\u2003}"},{"entry":"\u2003public String getStreetToXML( ){ "},{"entry":"\u2003\u2003\u2003\u2003\u2003if (getStreet( ) == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = getStreet( ).toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\\\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return sb.toString( );"},{"entry":"\u2003}"},{"entry":"\u2003public void setStreet(String inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mStreet = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void streetFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setStreet(n);"},{"entry":"\u2003}"},{"entry":"\u2003public String getCity( ){"},{"entry":"\u2003\u2003return mCity;"},{"entry":"\u2003}"},{"entry":"\u2003public String getCityToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (getCity( ) = null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = getCity( ).toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\\\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return sb.toString( );"},{"entry":"\u2003}"},{"entry":"\u2003public void setCity(String inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mCity = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void cityFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setCity(n);"},{"entry":"\u2003}"},{"entry":"\u2003public int getState( ){"},{"entry":"\u2003\u2003return mState;"},{"entry":"\u2003}"},{"entry":"\u2003public String getStateToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003switch (mState){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003case AK: return \u201cAK\u201d;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003case AL: return \u201cAL\u201d;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003case AR: return \u201cAR\u201d;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003case AZ: return \u201cAZ\u201d;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003..."},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003return null;"},{"entry":"\u2003}"},{"entry":"\u2003public void setState(int inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mState = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void stateFromXML(String s){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (s.equals(\u201cAK\u201d)) mState = AK;"},{"entry":"\u2003\u2003\u2003\u2003\u2003else if (s.equals(\u201cAL\u201d))mState = AL;"},{"entry":"\u2003\u2003\u2003\u2003\u2003else if (s.equals(\u201cAR\u201d))mState = AR;"},{"entry":"\u2003\u2003\u2003\u2003\u2003else if (s.equals(\u201cAZ\u201d))mState = AZ;"},{"entry":"\u2003\u2003\u2003\u2003\u2003..."},{"entry":"\u2003}"},{"entry":"\u2003public String getPostcode( ){"},{"entry":"\u2003\u2003return mPostcode;"},{"entry":"\u2003}"},{"entry":"\u2003public String getPostcodeToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (getPostcode( ) == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = getPostcode( ).toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\\\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return sb.toString( );"},{"entry":"\u2003}"},{"entry":"\u2003public void setPostcode(String inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mPostcode = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void postcodeFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setPostcode(n);"},{"entry":"\u2003}"},{"entry":"\u2003public int getCountry( ){"},{"entry":"\u2003\u2003return mCountry;"},{"entry":"\u2003}"},{"entry":"\u2003public String getCountryToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003switch (mCountry){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003case AD: return \u201cAD\u201d;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003case AE: return \u201cAE\u201d;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003case AF: return \u201cAF\u201d;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003..."},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003return null;"},{"entry":"\u2003}"},{"entry":"\u2003public void setCountry(int inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mCountry = inp;"},{"entry":"\u2003}"},{"entry":"\u2003\u2003public void countryFromXML(String s){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (s.equals(\u201cAD\u201d)) mCountry = AD;"},{"entry":"\u2003\u2003\u2003\u2003\u2003else if (s.equals(\u201cAE\u201d))mCountry = AE;"},{"entry":"\u2003\u2003\u2003\u2003\u2003else if (s.equals(\u201cAF\u201d))mCountry = AF;"},{"entry":"\u2003\u2003\u2003\u2003\u2003else if (s.equals(\u201cAG\u201d))mCountry = AG;"},{"entry":"\u2003\u2003\u2003\u2003\u2003else if (s.equals(\u201cAI\u201d))mCountry = AI;"},{"entry":"\u2003\u2003\u2003\u2003\u2003.."},{"entry":"\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"\u2003package com.veo.xdk.dev.schema.test.blib;"},{"entry":"\u2003import com.veo.vsp.doclet.meta.Document;"},{"entry":"\u2003public class AddressSet extends Document {"},{"entry":"\u2003\u2003\u2003\u2003\u2003public static final String DOC_TYPE "},{"entry":"\u2003\u2003\u2003\u2003\u2003= \u201caddress.set\u201d;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003AddressPhysical mAddressPhysical;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003String [ ] mTelephone;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003String [ ] mFax;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003String [ ] mEmail;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003String [ ] mInternet;"},{"entry":"\u2003\u2003\u2003\u2003\u2003public AddressSet( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003super(DOC_TYPE);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003this.mAddressPhysical = "},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003new AddressPhysical( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003mTelephone = null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mFax = null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mEmail = null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mInternet = null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003public AddressSet(String doc_type){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003super(doc_type);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003this.mAddressPhysical = "},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003new AddressPhysical( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003mTelephone = null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mFax = null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mEmail = null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mInternet = null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003static public AddressSet initAddressSet"},{"entry":"\u2003\u2003\u2003\u2003\u2003(AddressPhysical iAddressPhysical,String [ ]"},{"entry":"\u2003iTelephone,String [ ] iFax,String [ ] iEmail,"},{"entry":"\u2003String [ ] iInternet){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003AddressSet obj = new AddressSet( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003obj.initializeAll(iAddressPhysical, iTelephone, "},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003iFax, iEmail, iInternet);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003return obj;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003public void initializeAll(AddressPhysical "},{"entry":"\u2003\u2003\u2003\u2003\u2003iAddressPhysical,String [ ] iTelephone,String"},{"entry":"\u2003[ ] iFax,String [ ] iEmail,String [ ] iInternet){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003mAddressPhysical = iAddressPhysical;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003mTelephone = iTelephone;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003mFax = iFax;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003mEmail = iEmail;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003mInternet = iInternet;"},{"entry":"\u2003}"},{"entry":"\u2003public AddressPhysical getAddressPhysical( ){"},{"entry":"\u2003\u2003return mAddressPhysical;"},{"entry":"\u2003}"},{"entry":"\u2003public void setAddressPhysical"},{"entry":"\u2003(AddressPhysical inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mAddressPhysical = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public String [ ] getTelephone( ){"},{"entry":"\u2003\u2003return mTelephone;"},{"entry":"\u2003}"},{"entry":"\u2003public String getTelephone(int index){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (this.mTelephone == null)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= this.mTelephone.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0 && -index > this.mTelephone.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= 0) return this.mTelephone[index];"},{"entry":"\u2003\u2003\u2003\u2003\u2003return this.mTelephone[this.mTelephone."},{"entry":"\u2003\u2003\u2003\u2003\u2003length + index];"},{"entry":"\u2003}"},{"entry":"\u2003public String [ ] getTelephoneToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003String [ ] valArr = getTelephone( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (valArr == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003String [ ] nvArr = new String[valArr.length];"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int z = 0; z < nvArr.length; z++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = valArr[z].toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer st = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2032\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003nvArr[z] = sb.toString( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return nvArr;"},{"entry":"\u2003}"},{"entry":"\u2003public void setTelephone(int index, String inp){"},{"entry":"\u2003\u2003\u2003if (this.mTelephone == null) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mTelephone = new String[1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mTelephone[0] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mTelephone = new String[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mTelephone[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003} else if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String [ ] newTelephone = new String"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[this.mTelephone.length + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mTelephone, 0,"},{"entry":"(Object)newTelephone, 0, this.mTelephone.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newTelephone[newTelephone."},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003length \u2212 1] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mTelephone = newTelephone;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else if (index >= this.mTelephone.length){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String [ ] newTelephone = "},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003new String[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mTelephone, 0,"},{"entry":"(Object)newTelephone, 0, this.mTelephone.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newTelephone[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mTelephone = newTelephone;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003this.mTelephone[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"\u2003public void setTelephone(String [ ] inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mTelephone = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void telephoneFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setTelephone(\u22121, n);"},{"entry":"\u2003}"},{"entry":"\u2003public String [ ] getFax( ){"},{"entry":"\u2003\u2003return mFax;"},{"entry":"\u2003}"},{"entry":"\u2003public String getFax(int index){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (this.mFax == null)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= this.mFax.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0 && -index > this.mFax.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= 0) return this.mFax[index];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return this.mFax[this.mFax.length + index];"},{"entry":"\u2003}"},{"entry":"\u2003public String [ ] getFaxToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003String [ ] valArr = getFax( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (valArr == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003String [ ] nvArr = new String[valArr.length];"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int z = 0; z < nvArr.length; z++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = valArr[z].toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer st = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2032\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003nvArr[z] = sb.toString( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return nvArr;"},{"entry":"\u2003}"},{"entry":"\u2003public void setFax(int index, String inp){"},{"entry":"\u2003\u2003\u2003if (this.mFax == null) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mFax = new String[1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mFax[0] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mFax = new String[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mFax[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003} else if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String [ ] newFax = new String"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[this.mFax.length + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)mFax, "},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u20030, (Object)newFax, 0,"},{"entry":"this.mFax.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newFax[newFax.length \u2212 1] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mFax = newFax;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else if (index >= this.mFax.length){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String [ ] newFax = new String[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003javalang.System. "},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003arraycopy((Object)mFax, 0,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003(Object)newFax, 0,"},{"entry":"this.mFax.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newFax[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mFax = newFax;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003this.mFax[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"\u2003public void setFax(String [ ] inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mFax = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void faxFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setFax(\u22121, n);"},{"entry":"\u2003}"},{"entry":"\u2003public String [ ] getEmail( ){"},{"entry":"\u2003\u2003return mEmail;"},{"entry":"\u2003}"},{"entry":"\u2003public String getEmail(int index){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (this.mEmail == null)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= this.mEmail.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0 && -index > this.mEmail.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= 0) return this.mEmail[index];"},{"entry":"\u2003\u2003\u2003\u2003\u2003return this.mEmail[this.mEmail.length + index];"},{"entry":"\u2003}"},{"entry":"\u2003public String [ ] getEmailToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003String [ ] valArr = getEmail( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (valArr = null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003String [ ] nvArr = new String[valArr.length];"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int z = 0; z < nvArr.length; z++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = valArr[z].toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer st = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2032\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003nvArr[z] = sb.toString( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return nvArr;"},{"entry":"\u2003}"},{"entry":"\u2003public void setEmail(int index, String inp){"},{"entry":"\u2003\u2003\u2003if (this.mEmail == null) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mEmail = new String[1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mEmail[0] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mEmail = new String[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mEmail[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003} else if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String [ ] newEmail = new String"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[this.mEmail.length + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System. "},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003arraycopy((Object)mEmail,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u20030, (Object)newEmail,"},{"entry":"0, this.mEmail.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newEmail[newEmail.length \u2212 1] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mEmail = newEmail;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else if (index >= this.mEmail.length){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String [ ] newEmail = new "},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mEmail, 0, (Object)newEmail,"},{"entry":"0, this.mEmail.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newEmail[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mEmail = newEmail;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003this.mEmail[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"\u2003public void setEmail(String [ ] inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mEmail = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void emailFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setEmail(\u22121, n);"},{"entry":"\u2003}"},{"entry":"\u2003public String [ ] getInternet( ){"},{"entry":"\u2003\u2003return mInternet;"},{"entry":"\u2003}"},{"entry":"\u2003public String getInternet(int index){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (this.mInternet == null)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= this.mInternet.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0 && -index > this.mInternet.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= 0) return this.mInternet[index];"},{"entry":"\u2003\u2003\u2003\u2003\u2003return this.mInternet[this.mInternet.length + index];"},{"entry":"\u2003}"},{"entry":"\u2003public String [ ] getInternetToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003String [ ] valArr = getInternet( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (valArr == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003String [ ] nvArr = new String[valArr.length];"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int z = 0; z < nvArr.length; z++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = valArr[z].toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer st = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2032\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003nvArr[z] = sb.toString( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return nvArr;"},{"entry":"\u2003}"},{"entry":"\u2003public void setInternet(int index, String inp){"},{"entry":"\u2003\u2003\u2003if (this.mInternet == null) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mInternet = new String[1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mInternet[0] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mInternet = new String[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003thisinInternet[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003} else if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String [ ] newInternet = new String"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[this.mInternet.length + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003((Object)mInternet, 0,"},{"entry":"(Object)newInternet, 0, this.mInternet.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newInternet[newInternet.length \u2212 1] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mInternet = newInternet;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else if (index >= this.mInternetlength){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String [ ] newInternet = "},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003new String[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003((Object)mInternet, 0,"},{"entry":"(Object)newInternet, 0, this.mInternet.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newInternet[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mInternet = newInternet;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003this.mInternet[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"\u2003public void setInternet(String [ ] inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mInternet = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void intemetFromXML(String n){ "},{"entry":"\u2003\u2003\u2003\u2003\u2003setInternet(\u22121, n);"},{"entry":"\u2003}"},{"entry":"}"},{"entry":"package com.veo.xdk.dev.schema.test.blib;"},{"entry":"import com.veo.vsp.doclet.meta.Document;"},{"entry":"public class Business extends Party {"},{"entry":"\u2003public static final String DOC_TYPE = \u201cbusiness\u201d;"},{"entry":"\u2003\u2003String aBusinessNumber;"},{"entry":"\u2003public Business( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(DOC_TYPE);"},{"entry":"\u2003aBusinessNumber = new Strings;"},{"entry":"\u2003}"},{"entry":"\u2003public Business(String doc_type){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(doc_type);"},{"entry":"\u2003aBusinessNumber = new String( );"},{"entry":"\u2003}"},{"entry":"\u2003static public Business initBusiness"},{"entry":"\u2003(String iBusinessNumber,String [ ]"},{"entry":"iPartyName,AddressSet iAddressSet){"},{"entry":"\u2003\u2003\u2003\u2003Business obj = new Business( );"},{"entry":"\u2003\u2003\u2003\u2003obj.initializeAll(iBusinessNumber, "},{"entry":"\u2003\u2003\u2003\u2003iPartyName, iAddressSet);"},{"entry":"\u2003\u2003\u2003\u2003return obj;"},{"entry":"\u2003}"},{"entry":"\u2003public void initializeAll(String iBusinessNumber,"},{"entry":"\u2003String [ ] iPartyName,AddressSet"},{"entry":"iAddressSet){"},{"entry":"\u2003\u2003\u2003\u2003aBusinessNumber = iBusinessNumber;"},{"entry":"\u2003\u2003\u2003\u2003super.initializeAll(iPartyName, iAddressSet);"},{"entry":"\u2003}"},{"entry":"\u2003public String getBusinessNumber( ){"},{"entry":"\u2003\u2003return aBusinessNumber;"},{"entry":"\u2003}"},{"entry":"\u2003public String getBusinessNumberToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (getBusinessNumber( ) == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = getBusiness"},{"entry":"\u2003\u2003\u2003\u2003\u2003Number( ).toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\\\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return sb.toString( );"},{"entry":"\u2003}"},{"entry":"\u2003public void setBusinessNumber(String inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.aBusinessNumber = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void businessNumberFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setBusinessNumber(n);"},{"entry":"\u2003}"},{"entry":"}"},{"entry":"import com.veo.vsp.doclet.meta.Document;"},{"entry":"public class Party extends Document {"},{"entry":"\u2003public static final String DOC_TYPE = \u201cparty\u201d;"},{"entry":"\u2003\u2003String [ ] mPartyName;"},{"entry":"\u2003\u2003AddressSet mAddressSet;"},{"entry":"\u2003public Party( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(DOC_TYPE);"},{"entry":"\u2003mPartyName = new String[0];"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mAddressSet = new AddressSet( );"},{"entry":"\u2003}"},{"entry":"\u2003public Party(String doc_type){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(doc_type);"},{"entry":"\u2003mPartyName = new String[0];"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mAddressSet = new AddressSet( );"},{"entry":"\u2003}"},{"entry":"\u2003static public Party initParty(String [ ] "},{"entry":"\u2003iPartyName,AddressSet iAddressSet){"},{"entry":"\u2003\u2003\u2003\u2003\u2003Party obj = new Party( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003obj.initializeAll(iPartyName, iAddressSet);"},{"entry":"\u2003\u2003\u2003\u2003\u2003return obj;"},{"entry":"\u2003}"},{"entry":"\u2003public void initializeAll(String [ ] "},{"entry":"\u2003iPartyName,AddressSet iAddressSet){"},{"entry":"\u2003\u2003\u2003\u2003\u2003mPartyName = iPartyName;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mAddressSet = iAddressSet;"},{"entry":"\u2003}"},{"entry":"\u2003public String [ ] getPartyName( ){"},{"entry":"\u2003\u2003return mPartyName;"},{"entry":"\u2003}"},{"entry":"\u2003public String getPartyName(int index){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (this.mPartyName == null)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= this.mPartyName.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0 && -index > this.mPartyName.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= 0) return this.mPartyName[index];"},{"entry":"\u2003\u2003\u2003\u2003\u2003return this.mPartyName[this.mPartyName.length "},{"entry":"\u2003\u2003\u2003\u2003\u2003+ index];"},{"entry":"\u2003}"},{"entry":"\u2003public String [ ] getPartyNameToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003String [ ] valArr = getPartyName( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (valArr == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003String [ ] nvArr = new String[valArr.length];"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int z = 0; z < nvArr.length; z++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = valArr[z].toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer st = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2032\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003nvArr[z] = sb.toString( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return nvArr;"},{"entry":"\u2003}"},{"entry":"\u2003public void setPartyName(int index, "},{"entry":"\u2003String inp){"},{"entry":"\u2003\u2003\u2003if (this.mPartyName == null) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mPartyName = new String[1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mPartyName[0] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mPartyName = new String[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mPartyName[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003} else if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String [ ] newPartyName = new String"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[this.mPartyName.length + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mPartyName, 0,"},{"entry":"(Object)newPartyName, 0, this.mPartyName.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newPartyName[newPartyName."},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003length \u2212 1] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mPartyName = newPartyName;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else if (index >= this.mPartyName.length){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String [ ] newPartyName = new String[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)mPartyName, 0,"},{"entry":"(Object)newPartyName, 0, this.mPartyName.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newPartyName[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mPartyName = newPartyName;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003this.mPartyName[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"\u2003public void setPartyName(String [ ] inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mPartyName = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void partyNameFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setPartyName(\u22121, n);"},{"entry":"\u2003}"},{"entry":"\u2003public AddressSet getAddressSet( ){ "},{"entry":"\u2003\u2003return mAddressSet;"},{"entry":"\u2003}"},{"entry":"\u2003public void setAddressSet(AddressSet inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mAddressSet = inp;"},{"entry":"\u2003}"},{"entry":"}"},{"entry":"package com.veo.xdk.dev.schema.test.blib;"},{"entry":"import com.veo.vsp.doclet.meta.Document;"},{"entry":"public class Person extends Party {"},{"entry":"\u2003public static final String DOC_TYPE = \u201cperson\u201d;"},{"entry":"\u2003\u2003String aSSN;"},{"entry":"\u2003public Person( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(DOC_TYPE);"},{"entry":"\u2003aSSN = null;"},{"entry":"\u2003}"},{"entry":"\u2003public Person(String doc_type){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(doc_type);"},{"entry":"\u2003aSSN = null;"},{"entry":"\u2003}"},{"entry":"\u2003static public Person initPerson(String iSSN,"},{"entry":"\u2003String [ ] iPartyName,AddressSet"},{"entry":"iAddressSet){"},{"entry":"\u2003\u2003\u2003\u2003\u2003Person obj = new Person( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003obj.initializeAll(iSSN, iPartyName, iAddressSet);"},{"entry":"\u2003\u2003\u2003\u2003\u2003return obj;"},{"entry":"\u2003}"},{"entry":"\u2003public void initializeAll(String iSSN,String "},{"entry":"\u2003[ ] iPartyName,AddressSet iAddressSet){"},{"entry":"\u2003\u2003\u2003\u2003\u2003aSSN = iSSN;"},{"entry":"\u2003\u2003\u2003\u2003\u2003super.initializeAll(iPartyName, iAddressSet);"},{"entry":"\u2003}"},{"entry":"\u2003public String getSSN( ){"},{"entry":"\u2003\u2003return aSSN;"},{"entry":"\u2003}"},{"entry":"\u2003public String getSSNToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (getSSN( ) == null) return null; "},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = getSSN( ).toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\\\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return sb.toString( );"},{"entry":"\u2003}"},{"entry":"\u2003public void setSSN(String inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.aSSN = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void sSNFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setSSN(n);"},{"entry":"\u2003}"},{"entry":"}"},{"entry":"package com.veo.xdk.dev.schema.test.blib;"},{"entry":"import com.veo.vsp.doclet.meta.Document;"},{"entry":"public class PrototypeService extends Document {"},{"entry":"\u2003public static final String DOC_TYPE = \u201cprototype.service\u201d;"},{"entry":"\u2003\u2003String mServiceName;"},{"entry":"\u2003\u2003String [ ] mServiceTerms; "},{"entry":"\u2003\u2003String [ ] mServiceLocation;"},{"entry":"\u2003\u2003ServiceOperation [ ] mServiceOperation;"},{"entry":"\u2003public PrototypeService( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(DOC_TYPE);"},{"entry":"\u2003mServiceName = new String( );"},{"entry":"\u2003mServiceTerms = new String[0];"},{"entry":"\u2003mServiceLocation = new String[0];"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceOperation = new ServiceOperation[0];"},{"entry":"\u2003}"},{"entry":"\u2003public PrototypeService(String doc_type){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(doc_type);"},{"entry":"\u2003mServiceName = new String( );"},{"entry":"\u2003mServiceTerms = new String[0];"},{"entry":"\u2003mServiceLocation =new String[0];"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceOperation = new ServiceOperation[0];"},{"entry":"\u2003}"},{"entry":"\u2003static public PrototypeService initPrototypeService"},{"entry":"\u2003(String iServiceName,String [ ]"},{"entry":"iServiceTerms,String [ ] iServiceLocation,"},{"entry":"ServiceOperation [ ] iServiceOperation){"},{"entry":"\u2003\u2003\u2003\u2003\u2003PrototypeService obj = new PrototypeService( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003obj.initializeAll(iServiceName, iServiceTerms, "},{"entry":"iServiceLocation,"},{"entry":"iServiceOperation);"},{"entry":"\u2003\u2003\u2003\u2003\u2003return obj;"},{"entry":"\u2003}"},{"entry":"\u2003public void initializeAll(String iServiceName,"},{"entry":"String [ ] iServiceTerms,String [ ]"},{"entry":"iServiceLocation,ServiceOperation [ ] "},{"entry":"iServiceOperation){"},{"entry":"\u2003\u2003\u2003\u2003\u2003mServiceName = iServiceName;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mServiceTerms = iServiceTerms;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mServiceLocation = iServiceLocation;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mServiceOperation = iServiceOperation;"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceName( ){"},{"entry":"\u2003\u2003return mServiceName;"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceNameToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (getServiceName( ) == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = getServiceName( ).toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\\\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return sb.toString( );"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceName(String inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceName = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void serviceNameFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setServiceName(n);"},{"entry":"\u2003}"},{"entry":"\u2003public String [ ] getServiceTerms( ){"},{"entry":"\u2003\u2003return mServiceTerms;"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceTerms(int index){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (this.mServiceTerms == null)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= this.mServiceTerms.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0 && -index > this.mServiceTerms.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= 0) return this.mServiceTerms[index];"},{"entry":"\u2003\u2003\u2003\u2003\u2003return this.mServiceTerms[index];"},{"entry":"\u2003}"},{"entry":"\u2003public String [ ] getServiceTermsToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003String [ ] valArr = getServiceTerms( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (valArr == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003String [ ] nvArr = new String[valArr.length];"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int z = 0; z < nvArr.length; z++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = valArr[z].toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer st = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2032\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003nvArr[z] = sb.toString( );"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003return nvArr;"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceTerms"},{"entry":"\u2003(int index, String inp){"},{"entry":"\u2003\u2003\u2003if (this.mServiceTerms == null) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceTerms = new String[1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceTerms[0] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceTerms = new String[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceTerms[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003} else if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String [ ] newServiceTerms = new String"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[this.mServiceTerms.length"},{"entry":"+ 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceTerms, 0,"},{"entry":"(Object)newServiceTerms, 0, this.mServiceTerms.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newServiceTerms[newService"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003Terms.length \u2212 1] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceTerms = newServiceTerms;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else if (index >= this.mServiceTerms.length){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String [ ] newServiceTerms = "},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003new String[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceTerms, 0,"},{"entry":"(Object)newServiceTerms, 0, this.mServiceTerms.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newServiceTerms[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceTerms = newServiceTerms;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceTerms[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceTerms(String [ ] inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceTerms = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void serviceTermsFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setServiceTerms(\u22121, n);"},{"entry":"\u2003}"},{"entry":"\u2003public String [ ] getServiceLocation( ){"},{"entry":"\u2003\u2003return mServiceLocation;"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceLocation(int index){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (this.mServiceLocation == null)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= this.mServiceLocation.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0 && -index > this.mServiceLocation.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= 0) return this.mServiceLocation[index];"},{"entry":"\u2003\u2003\u2003\u2003\u2003return this.mServiceLocation"},{"entry":"\u2003\u2003\u2003\u2003\u2003[this.mServiceLocation.length + index];"},{"entry":"\u2003}"},{"entry":"\u2003public String [ ] getServiceLocationToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003String [ ] valArr = getServiceLocation( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (valArr == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003String [ ] nvArr = new String[valArr.length];"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int z = 0; z < nvArr.length; z++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = valArr[z].toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer st = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case\u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2032\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003nvArr[z] = sb.toString( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return nvArr;"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceLocation(int index, "},{"entry":"\u2003String inp){"},{"entry":"\u2003\u2003\u2003if (this.mServiceLocation == null) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceLocation = new String[1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceLocation[0] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceLocation = new String[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceLocation[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003} else if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String [ ] newServiceLocation = new"},{"entry":"String[this.mServiceLocation.length + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceLocation, 0,"},{"entry":"(Object)newServiceLocation, 0, this.mServiceLocation.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newServiceLocation[newServiceLocation."},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003length \u2212 1] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceLocation = newServiceLocation;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else if (index >= this.mServiceLocation.length){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003String [ ] newServiceLocation = "},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003new String[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceLocation, 0,"},{"entry":"(Object)newServiceLocation, 0, this.mServiceLocation.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newServiceLocation[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceLocation = newServiceLocation;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceLocation[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceLocation(String [ ] inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceLocation = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void serviceLocationFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setServiceLocation(\u22121, n);"},{"entry":"\u2003}"},{"entry":"\u2003public ServiceOperation [ ] getServiceOperation( ){"},{"entry":"\u2003\u2003return mServiceOperation;"},{"entry":"\u2003}"},{"entry":"\u2003public ServiceOperation getServiceOperation(int index){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (this.mServiceOperation == null)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= this.mServiceOperation.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0 && -index > this.mServiceOperation.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= 0) return this.mServiceOperation[index];"},{"entry":"\u2003\u2003\u2003\u2003\u2003return this.mServiceOperation"},{"entry":"\u2003\u2003\u2003\u2003\u2003[this.mServiceOperation.length + index];"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceOperation(int index, "},{"entry":"\u2003ServiceOperation inp){"},{"entry":"\u2003\u2003\u2003if (this.mServiceOperation == null) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceOperation = new ServiceOperation[1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceOperation[0] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceOperation = "},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003new ServiceOperation[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceOperation[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003} else if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003ServiceOperation [ ] "},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newServiceOperation = new"},{"entry":"ServiceOperation[this.mServiceOperation.length + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceOperation, 0,"},{"entry":"(Object)newServiceOperation, 0, this.mServiceOperation.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newServiceOperation"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[newServiceOperation.length \u2212 1] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceOperation = newServiceOperation;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else if (index >= this.mServiceOperation.length){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003ServiceOperation [ ] newServiceOperation = new"},{"entry":"ServiceOperation[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceOperation, 0,"},{"entry":"(Object)newServiceOperation, 0, this.mServiceOperation.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newServiceOperation[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceOperation = newServiceOperation;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceOperation[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceOperation(ServiceOperation [ ] inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceOperation = inp;"},{"entry":"\u2003}"},{"entry":"}"},{"entry":"package com.veo.xdk.dev.schema.test.blib;"},{"entry":"import com.veo.vsp.doclet.meta.Document;"},{"entry":"public class Service extends Document {"},{"entry":"\u2003public static final String DOC_TYPE = \u201cservice\u201d;"},{"entry":"\u2003\u2003String mServiceName;"},{"entry":"\u2003\u2003String mServiceLocation;"},{"entry":"\u2003\u2003ServiceOperation [ ] mServiceOperation;"},{"entry":"\u2003\u2003String mServiceTerms;"},{"entry":"\u2003public Service( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(DOC_TYPE);"},{"entry":"\u2003mServiceName = new String( );"},{"entry":"\u2003mServiceLocation = new String( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceOperation = new ServiceOperation[0];"},{"entry":"\u2003mServiceTerms = new String( );"},{"entry":"\u2003}"},{"entry":"\u2003public Service(String doc_type){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(doc_type);"},{"entry":"\u2003mServiceName = new String( );"},{"entry":"\u2003mServiceLocation = new String( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceOperation = new ServiceOperation[0];"},{"entry":"\u2003mServiceTerms = new String( );"},{"entry":"\u2003}"},{"entry":"\u2003static public Service initService"},{"entry":"\u2003(String iServiceName,String"},{"entry":"iServiceLocation,ServiceOperation [ ] "},{"entry":"iServiceOperation,String iServiceTerms){"},{"entry":"\u2003\u2003\u2003\u2003\u2003Service obj = new Service( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003obj.initializeAll(iServiceName, "},{"entry":"iServiceLocation, iServiceOperation,"},{"entry":"iServiceTerms);"},{"entry":"\u2003\u2003\u2003\u2003\u2003return obj;"},{"entry":"\u2003}"},{"entry":"\u2003public void initializeAll(String iServiceName,String"},{"entry":"iServiceLocation,ServiceOperation [ ] "},{"entry":"iServiceOperation,String iServiceTerms){"},{"entry":"\u2003\u2003\u2003\u2003\u2003mServiceName = iServiceName;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mServiceLocation = iServiceLocation;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mServiceOperation = iServiceOperation;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mServiceTerms = iServiceTerms;"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceName( ){"},{"entry":"\u2003\u2003return mServiceName;"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceNameToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (getServiceName( ) == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = getServiceName( ).toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\\\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return sb.toString( );"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceName(String inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceName = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void serviceNameFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setServiceName(n);"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceLocation( ){"},{"entry":"\u2003\u2003return mServiceLocation;"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceLocationToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (getServiceLocation( ) == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = getServiceLocation( ).toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\\\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return sb.toString( );"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceLocation(String inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceLocation = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void serviceLocationFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setServiceLocation(n);"},{"entry":"\u2003}"},{"entry":"\u2003public ServiceOperation [ ] getServiceOperation( ){"},{"entry":"\u2003\u2003return mServiceOperation;"},{"entry":"\u2003}"},{"entry":"\u2003public ServiceOperation getServiceOperation(int index){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (this.mServiceOperation == null)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= this.mServiceOperation.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0 && -index > this.mServiceOperation.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= 0) return this.mServiceOperation[index];"},{"entry":"\u2003\u2003\u2003\u2003\u2003return this.mServiceOperation"},{"entry":"\u2003\u2003\u2003\u2003\u2003[this.mServiceOperation.length + index];"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceOperation(int index, "},{"entry":"\u2003ServiceOperation inp){"},{"entry":"\u2003\u2003\u2003if (this.mServiceOperation == null) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceOperation = new ServiceOperation[1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceOperation[0] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceOperation = new ServiceOperation"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceOperation[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003} else if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003ServiceOperation [ ] newServiceOperation = new"},{"entry":"ServiceOperation[this.mServiceOperation.length + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceOperation, 0,"},{"entry":"(Object)newServiceOperation, 0, "},{"entry":"this.mServiceOperation.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newServiceOperation[newServiceOperation."},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003length \u2212 1] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceOperation = newServiceOperation;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else if (index >= this.mServiceOperation.length){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003ServiceOperation [ ] newServiceOperation = new"},{"entry":"ServiceOperation[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceOperation, 0,"},{"entry":"(Object)newServiceOperation, 0, "},{"entry":"this.mServiceOperation.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newServiceOperation[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mServiceOperation = newServiceOperation;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003this.mServiceOperation[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceOperation(ServiceOperation [ ] inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceOperation = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceTerms( ){"},{"entry":"\u2003\u2003return mServiceTerms;"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceTermsToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (getServiceTerms( ) == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = getServiceTerms( ).toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\\\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return sb.toString( );"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceTerms(String inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceTerms = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void serviceTermsFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setServiceTerms(n);"},{"entry":"\u2003}"},{"entry":"}"},{"entry":"package com.veo.xdk.dev.schema.test.blib;"},{"entry":"import com.veo.vsp.doclet.meta.Document;"},{"entry":"public class ServiceOperation extends Document {"},{"entry":"\u2003public static final String DOC_TYPE = "},{"entry":"\u2003\u201cservice.operation\u201d;"},{"entry":"\u2003\u2003String mServiceOperationName;"},{"entry":"\u2003\u2003String mServiceOperationLocation;"},{"entry":"\u2003\u2003String mServiceOperationInput;"},{"entry":"\u2003\u2003String mServiceOperationOutput;"},{"entry":"\u2003public ServiceOperation( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(DOC_TYPE);"},{"entry":"\u2003mServiceOperationName = new String( );"},{"entry":"\u2003mServiceOperationLocation = new String( );"},{"entry":"\u2003mServiceOperationInput = new String( );"},{"entry":"\u2003mServiceOperationOutput = new String( );"},{"entry":"\u2003}"},{"entry":"\u2003public ServiceOperation(String doc_type){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(doc_type);"},{"entry":"\u2003mServiceOperationName = new String( );"},{"entry":"\u2003mServiceOperationLocation = new String( ); ."},{"entry":"\u2003mServiceOperationInput = new String( );"},{"entry":"\u2003mServiceOperationOutput = new String( );"},{"entry":"\u2003}"},{"entry":"\u2003static public ServiceOperation initServiceOperation(String"},{"entry":"iServiceOperationName,String iServiceOperationLocation,"},{"entry":"String iServiceOperationInput,String"},{"entry":"iServiceOperationOutput){"},{"entry":"\u2003\u2003\u2003\u2003\u2003ServiceOperation obj = new ServiceOperation( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003obj.initializeAll(iServiceOperationName, "},{"entry":"iServiceOperationLocation,"},{"entry":"iServiceOperationInput, iServiceOperationOutput);"},{"entry":"\u2003\u2003\u2003\u2003\u2003return obj;"},{"entry":"\u2003}"},{"entry":"\u2003public void initializeAll(String iServiceOperationName,String"},{"entry":"iServiceOperationLocation,String iServiceOperationInput,"},{"entry":"String iServiceOperationOutput){"},{"entry":"\u2003\u2003\u2003\u2003\u2003mServiceOperationName = iServiceOperationName;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mServiceOperationLocation = iServiceOperationLocation;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mServiceOperationInput = iServiceOperationInput;"},{"entry":"\u2003\u2003\u2003\u2003\u2003mServiceOperationOutput = iServiceOperationOutput;"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceOperationName( ){"},{"entry":"\u2003\u2003return mServiceOperationName;"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceOperationNameToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (getServiceOperationName( ) == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = getServiceOperationName( ).toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\\\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return sb.toString( );"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceOperationName(String inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceOperationName = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void serviceOperationNameFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setServiceOperationName(n);"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceOperationLocation( ){"},{"entry":"\u2003\u2003return mServiceOperationLocation;"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceOperationLocationToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (getServiceOperationLocation( ) == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = getServiceOperationLocation( ).toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\\\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return sb.toString( );"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceOperationLocation(String inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceOperationLocation = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void serviceOperationLocationFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setServiceOperationLocation(n);"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceOperationInput( ){"},{"entry":"\u2003\u2003return mServiceOperationInput;"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceOperationInputToXML( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (getServiceOperationInput( ) == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = getServiceOperationInput( ).toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\\\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return sb.toString( );"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceOperationInput(String inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceOperationInput = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void serviceOperationInputFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setServiceOperationInput(n);"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceOperationOutput( ){"},{"entry":"\u2003\u2003return mServiceOperationOutput;"},{"entry":"\u2003}"},{"entry":"\u2003public String getServiceOperationOutputToXML( ){ "},{"entry":"\u2003\u2003\u2003\u2003\u2003if (getServiceOperationOutput( ) == null) return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003char [ ] c = getServiceOperationOutput( ).toCharArray( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003StringBuffer sb = new StringBuffer( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003for (int x = 0; x < c.length; x++){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003switch(c[x]){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018>\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&gt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018<\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&lt;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018&\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&amp;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\u2033\u2019:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003case \u2018\\\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(\u201c&quot;\u201d);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003default:"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003if (Character.isDefined(c[x]))"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003sb.append(c[x]);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003\u2003return sb.toString( );"},{"entry":"\u2003}"},{"entry":"\u2003public void setServiceOperationOutput(String inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mServiceOperationOutput = inp;"},{"entry":"\u2003}"},{"entry":"\u2003public void serviceOperationOutputFromXML(String n){"},{"entry":"\u2003\u2003\u2003\u2003\u2003setServiceOperationOutput(n);"},{"entry":"\u2003}"},{"entry":"}"},{"entry":"package com.veo.xdk.dev.schema.test.blib;"},{"entry":"import com.veo.vsp.doclet.meta.Document;"},{"entry":"public class ServiceSet extends Document {"},{"entry":"\u2003public static final String DOC_TYPE = \u201cservice.set\u201d;"},{"entry":"\u2003\u2003Service [ ] mService;"},{"entry":"\u2003public ServiceSet( ){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(DOC_TYPE);"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mService = new Service[0];"},{"entry":"\u2003}"},{"entry":"\u2003public ServiceSet(String doc_type){"},{"entry":"\u2003\u2003\u2003\u2003\u2003super(doc_type);"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mService = new Service[0];"},{"entry":"\u2003}"},{"entry":"\u2003static public ServiceSet initServiceSet(Service [ ] iService){"},{"entry":"\u2003\u2003\u2003\u2003\u2003ServiceSet obj = new ServiceSet( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003obj.initializeAll(iService);"},{"entry":"\u2003\u2003\u2003\u2003\u2003return obj;"},{"entry":"\u2003}"},{"entry":"\u2003public void initializeAll(Service [ ] iService){"},{"entry":"\u2003\u2003\u2003\u2003\u2003mService = iService;"},{"entry":"\u2003}"},{"entry":"\u2003public Service [ ] getService( ){"},{"entry":"\u2003\u2003return mService;"},{"entry":"\u2003}"},{"entry":"\u2003public Service getService(int index){"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (this.mService == null)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= this.mService.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0 && -index > this.mService.length)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003return null;"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index >= 0) return this.mService[index];"},{"entry":"\u2003\u2003\u2003\u2003\u2003return this.mService[this.mService.length + index];"},{"entry":"\u2003}"},{"entry":"\u2003public void setService(int index, Service inp){"},{"entry":"\u2003\u2003\u2003if (this.mService == null) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mService = new Service[1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mService[0] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mService = new Service[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003this.mService[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003} else if (index < 0) {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003Service [ ] newService = new Service"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003[this.mService.length + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mService, 0, "},{"entry":"(Object)newService, 0, this.mService.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newService[newService.length \u2212 1] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mService = newService;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else if (index >= this.mService.length){"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003Service [ ] newService = new Service[index + 1];"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003java.lang.System.arraycopy((Object)mService, 0,"},{"entry":"(Object)newService, 0, this.mService.length);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003newService[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003mService = newService;"},{"entry":"\u2003\u2003\u2003\u2003\u2003} else {"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003this.mService[index] = inp;"},{"entry":"\u2003\u2003\u2003\u2003\u2003}"},{"entry":"\u2003}"},{"entry":"\u2003public void setService(Service [ ] inp){"},{"entry":"\u2003\u2003\u2003\u2003\u2003this.mService = inp;"},{"entry":"\u2003}"},{"entry":"}"},{"entry":"\u2003In addition to the JAVA beans set "},{"entry":"forth above, transformation code is"},{"entry":"produced for translating from JAVA to "},{"entry":"XML and XML to JAVA as set forth"},{"entry":"below:"},{"entry":"\u2003Java to XML"},{"entry":"<!DOCTYPE tree SYSTEM \u201ctree.dtd\u201d>"},{"entry":"<tree source = \u201cnull\u201d pass-through = \u201cfalse\u201d>"},{"entry":"<before>"},{"entry":"\u2003\u2003<vardef name = \u201cattribute.def\u201d>"},{"entry":"\u2003\u2003<element source = \u201cATTRIBUTE\u201d class = "},{"entry":"\u2003\u2003\u201cNAME\u201d type = \u201c5\u201d position = \u201c\u22122\u201d>"},{"entry":"\u2003\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003\u2003<data class = \u201cjava.lang.String\u201d position = \u201c\u22122\u201d\/>"},{"entry":"\u2003\u2003\u2003<\/parse>"},{"entry":"\u2003\u2003<\/element>"},{"entry":"\u2003<\/vardef>"},{"entry":"\u2003<vardef name = \u201cpcdata.def\u201d>"},{"entry":"\u2003\u2003<element source = \u201cPCDATA\u201d class = \u201cNAME\u201d "},{"entry":"\u2003\u2003type = \u201c4\u201d position = \u201c\u22122\u201d>"},{"entry":"\u2003\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003\u2003<data class = \u201c999\u201d type = \u201c6\u201d position = \u201c\u22122\u201d\/>"},{"entry":"\u2003\u2003\u2003<\/parse>"},{"entry":"\u2003\u2003<\/element>"},{"entry":"\u2003<\/vardef>"},{"entry":"\u2003<vardef name = \u201ccontent.def\u201d>"},{"entry":"\u2003\u2003<element source = \u201cPCDATA\u201d>"},{"entry":"\u2003\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003\u2003<data class = \u201c999\u201d type = \u201c6\u201d position = \u201c\u22122\u201d\/>"},{"entry":"\u2003\u2003\u2003<\/parse>"},{"entry":"\u2003\u2003<\/element>"},{"entry":"\u2003<\/vardef>"},{"entry":"\u2003<vardef name = \u201cServiceSet.var\u201d>"},{"entry":"\u2003<element source = \u201ccom.veo.xdk.dev.schema.test."},{"entry":"\u2003blib.ServiceSet\u201d class = \u201cservice.set\u201d type ="},{"entry":"\u201c4\u201d position = \u201c\u22122\u201d>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cService.var\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"\u2003<\/vardef>"},{"entry":"\u2003<vardef name = \u201cPrototypeService.var\u201d>"},{"entry":"\u2003<element source = \u201ccom.veo.xdk.dev."},{"entry":"\u2003schema.test.blib.PrototypeService\u201d class ="},{"entry":"\u201cprototype.service\u201d type = \u201c4\u201d position = \u201c\u22122\u201d>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cpcdata.def\u201d parms = \u201csetSource "},{"entry":"\u2003\u2003\u2003ServiceNameToXML setGenerator"},{"entry":"service.name\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cpcdata.def\u201d parms = \u201csetSource "},{"entry":"\u2003\u2003\u2003ServiceTermsToXML setGenerator"},{"entry":"service.terms\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cpcdata.def\u201d parms = \u201csetSource "},{"entry":"\u2003\u2003\u2003ServiceLocationToXML setGenerator"},{"entry":"service.location\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cServiceOperation.var\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"\u2003<\/vardef>"},{"entry":"\u2003<vardef name = \u201cService.var\u201d>"},{"entry":"\u2003<element source = \u201ccom.veo.xdk.dev.schema.test."},{"entry":"\u2003blib.Service\u201d class = \u201cservice\u201d type = \u201c8\u201d"},{"entry":"position = \u201c0\u201d>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cpcdata.def\u201d parms = \u201csetSource "},{"entry":"\u2003\u2003\u2003ServiceNameToXML setGenerator"},{"entry":"service.name\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cpcdata.def\u201d parms = \u201csetSource "},{"entry":"\u2003\u2003\u2003ServiceLocationToXML setGenerator"},{"entry":"service.location\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cServiceOperation.var\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cpcdata.def\u201d parms = \u201csetSource "},{"entry":"\u2003\u2003\u2003ServiceTermsToXML setGenerator"},{"entry":"service.terms\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"\u2003<\/vardef>"},{"entry":"\u2003<vardef name = \u201cServiceOperation.var\u201d>"},{"entry":"\u2003<element source = \u201ccom.veo.xdk.dev.schema."},{"entry":"\u2003test.blib.ServiceOperation\u201d class ="},{"entry":"\u201cservice.operation\u201d type = \u201c4\u201d position = \u201c\u22122\u201d>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cpcdata.def\u201d parms = \u201csetSource "},{"entry":"\u2003\u2003\u2003ServiceOperationNameToXML"},{"entry":"setGenerator service.operation.name\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cpcdata.def\u201d parms = \u201csetSource "},{"entry":"\u2003\u2003\u2003ServiceOperationLocationToXML"},{"entry":"setGenerator service.operation.location\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cpcdata.def\u201d parms = \u201csetSource "},{"entry":"\u2003\u2003\u2003ServiceOperationInputToXML"},{"entry":"setGenerator service.operation.input\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cpcdata.def\u201d parms = \u201csetSource "},{"entry":"\u2003\u2003\u2003ServiceOperationOutputToXML"},{"entry":"setGenerator service.operation.output\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"\u2003<\/vardef>"},{"entry":"<\/before>"},{"entry":"<\/parse>"},{"entry":"<callvar name = \u201cServiceSet.var\u201d\/>"},{"entry":"<callvar name = \u201cPrototypeService.var\u201d\/>"},{"entry":"<callvar name = \u201cService.var\u201d\/>"},{"entry":"<callvar name = \u201cServiceOperation.var\u201d\/>"},{"entry":"<\/parse>"},{"entry":"<\/tree>"},{"entry":"XML to Java"},{"entry":"<!DOCTYPE tree SYSTEM \u201ctree.dtd\u201d>"},{"entry":"<tree source = \u201cnull\u201d pass-through = \u201cfalse\u201d>"},{"entry":"<before>"},{"entry":"<vardef name = \u201cbusiness.var\u201d>"},{"entry":"\u2003<element source = \u201cbusiness\u201d"},{"entry":"\u2003\u2003\u2003\u2003class = \u201ccom.veo.xdk.dev.schema.test.blib.Business\u201d"},{"entry":"\u2003\u2003\u2003\u2003type = \u201c7\u201d setter = \u201csetBusiness\u201d>"},{"entry":"\u2003\u2003<before>"},{"entry":"\u2003\u2003\u2003<onattribute name = \u201cbusiness.number\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<actions>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<callmeth name = \u201cbusinessNumberFromXML\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<parms>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<getattr name = \u201cbusiness.number\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/parms>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/callmeth>"},{"entry":"\u2003\u2003\u2003\u2003<\/actions>"},{"entry":"\u2003\u2003\u2003<\/onattribute>"},{"entry":"\u2003\u2003<\/before>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cparty.name.var\u201d parms = "},{"entry":"\u2003\u2003\u2003\u201csetPosition \u22121\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201caddress.set.var\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<vardef name = \u201cparty.name.var\u201d>"},{"entry":"\u2003<element source = \u201cparty.name\u201d setter = "},{"entry":"\u2003\u201cpartyNameFromXML\u201d position = \u201c\u22121\u201d class ="},{"entry":"\u201cjava.lang.String\u201d>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003\u2003<data class = \u201cjava.lang.String\u201d position = \u201c0\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<vardef name = \u201ccity.var\u201d>"},{"entry":"\u2003<element source = \u201ccity\u201d setter = \u201ccityFromXML\u201d "},{"entry":"\u2003position = \u201c\u22121\u201d class = \u201cjava.lang.String\u201d>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003\u2003<data class = \u201cjava.lang.String\u201d position = \u201c0\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<vardef name = \u201cinternet.var\u201d>"},{"entry":"\u2003<element source = \u201cinternet\u201d setter = "},{"entry":"\u201cinternetFromXML\u201d position = \u201c\u22121\u201d class ="},{"entry":"\u201cjava.lang.String\u201d>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003\u2003<data class = \u201cjava.lang.String\u201d position = \u201c0\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<vardef name = \u201ccountry.var\u201d>"},{"entry":"\u2003<element source = \u201ccountry\u201d setter = "},{"entry":"\u2003\u201ccountryFromXML\u201d position = \u201c\u22121\u201d class ="},{"entry":"\u201cjava.lang.String\u201d>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003\u2003<data class = \u201cjava.lang.String\u201d position = \u201c0\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<vardef name = \u201cstate.var\u201d>"},{"entry":"\u2003<element source = \u201cstate\u201d setter = \u201cstateFromXML\u201d "},{"entry":"\u2003position = \u201c\u22121\u201d class = \u201cjavalang.String\u201d>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003\u2003<data class = \u201cjava.lang.String\u201d position = \u201c0\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<vardef name = \u201cemail.var\u201d>"},{"entry":"\u2003<element source = \u201cemail\u201d setter = "},{"entry":"\u2003\u201cemailFromXML\u201d position = \u201c\u22121\u201d class ="},{"entry":"\u201cjava.lang.String\u201d>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003\u2003<data class = \u201cjava.lang.String\u201d position = \u201c0\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<vardef name = \u201caddress.physical.var\u201d>"},{"entry":"\u2003<element source = \u201caddress.physical\u201d"},{"entry":"\u2003\u2003\u2003\u2003class = \u201ccom.veo.xdk.dev.schema.test.blib."},{"entry":"\u2003\u2003\u2003\u2003AddressPhysical\u201d"},{"entry":"\u2003\u2003\u2003\u2003type = \u201c7\u201d setter = \u201csetAddressPhysical\u201d>"},{"entry":"\u2003\u2003<before>"},{"entry":"\u2003\u2003<\/before>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cstreet.var\u201d parms = \u201csetPosition \u22121\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201ccity.var\u201d parms = \u201csetPosition \u22121\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cstate.var\u201d parms = \u201csetPosition \u22121\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cpostcode.var\u201d parms = \u201csetPosition \u22121\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201ccountry.var\u201d parms = \u201csetPosition \u22121\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<vardef name = \u201ctelephone.var\u201d>"},{"entry":"\u2003<element source = \u201ctelephone\u201d setter = "},{"entry":"\u2003\u201ctelephoneFromXML\u201d position = \u201c\u22121\u201d class ="},{"entry":"\u201cjava.lang.String\u201d>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003\u2003<data class = \u201cjava.lang.String\u201d position = \u201c0\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<vardef name = \u201cperson.var\u201d>"},{"entry":"\u2003<element source = \u201cperson\u201d"},{"entry":"\u2003\u2003\u2003\u2003class = \u201ccom.veo.xdk.dev.schema.test.blib.Person\u201d"},{"entry":"\u2003\u2003\u2003\u2003type = \u201c7\u201d setter = \u201csetPerson\u201d>"},{"entry":"\u2003\u2003<before>"},{"entry":"\u2003\u2003\u2003<onattribute name = \u201cSSN\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<actions>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<callmeth name = \u201csSNFromXML\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<parms>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003<getattr name = \u201cSSN\u201d\/>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/parms>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/callmeth>"},{"entry":"\u2003\u2003\u2003\u2003<\/actions>"},{"entry":"\u2003\u2003\u2003<\/onattribute>"},{"entry":"\u2003\u2003<\/before>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cparty.name.var\u201d parms = "},{"entry":"\u2003\u2003\u2003\u201csetPosition \u22121\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201caddress.set.var\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<vardef name = \u201cfax.var\u201d>"},{"entry":"\u2003<element source = \u201cfax\u201d setter = \u201cfaxFromXML\u201d "},{"entry":"\u2003position = \u201c\u22121\u201d class = \u201cjava.lang.String\u201d>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003\u2003<data class = \u201cjava.lang.String\u201d position = \u201c0\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<vardef name = \u201cstreet.var\u201d>"},{"entry":"\u2003<element source = \u201cstreet\u201d setter = "},{"entry":"\u2003\u201cstreetFromXML\u201d position = \u201c\u22121\u201d class ="},{"entry":"\u201cjava.lang.String\u201d>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003\u2003<data class = \u201cjava.lang.String\u201d position = \u201c0\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<vardef name = \u201caddress.set.var\u201d>"},{"entry":"\u2003<element source = \u201caddress.set\u201d"},{"entry":"\u2003\u2003\u2003\u2003class = \u201ccom.veo.xdk.dev.schema."},{"entry":"\u2003\u2003\u2003\u2003test.blib.AddressSet\u201d"},{"entry":"\u2003\u2003\u2003\u2003type = \u201c7\u201d setter = \u201csetAddressSet\u201d>"},{"entry":"\u2003\u2003<before>"},{"entry":"\u2003\u2003<\/before>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201caddress.physical.var\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201ctelephone.var\u201d parms = \u201csetPosition \u22121\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cfax.var\u201d parms = \u201csetPosition \u22121\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cemail.var\u201d parms = \u201csetPosition \u22121\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cinternet.var\u201d parms = \u201csetPosition \u22121\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<vardef name = \u201cpostcode.var\u201d>"},{"entry":"\u2003<element source = \u201cpostcode\u201d setter = "},{"entry":"\u2003\u201cpostcodeFromXML\u201d position = \u201c\u22121\u201d class ="},{"entry":"\u201cjava.lang.String\u201d>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003\u2003<data class = \u201cjava.lang.String\u201d position = \u201c0\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<vardef name = \u201cmarket.participant.var\u201d>"},{"entry":"\u2003<element source = \u201cmarket.participant\u201d"},{"entry":"\u2003\u2003\u2003\u2003class = \u201ccom.veo.xdk.dev.schema.test.blib."},{"entry":"\u2003\u2003\u2003\u2003MarketParticipant\u201d"},{"entry":"\u2003\u2003\u2003\u2003type = \u201c7\u201d position = \u201c0\u201d>"},{"entry":"\u2003\u2003<before>"},{"entry":"\u2003\u2003<\/before>"},{"entry":"\u2003\u2003<parse>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cbusiness.var\u201d\/>"},{"entry":"\u2003\u2003\u2003<callvar name = \u201cperson.var\u201d\/>"},{"entry":"\u2003\u2003<\/parse>"},{"entry":"\u2003<\/element>"},{"entry":"<\/vardef>"},{"entry":"<\/before>"},{"entry":"<parse>"},{"entry":"<callvar name = \u201cbusiness.var\u201d\/>"},{"entry":"<callvar name = \u201cparty.name.var\u201d\/>"},{"entry":"<callvar name = \u201ccity.var\u201d\/>"},{"entry":"<callvar name = \u201cinternet.var\u201d\/>"},{"entry":"<callvar name = \u201ccountry.var\u201d\/>"},{"entry":"<callvar name = \u201cstate.var\u201d\/>"},{"entry":"<callvar name = \u201cemail.var\u201d\/>"},{"entry":"<callvar name = \u201caddress.physical.var\u201d\/>"},{"entry":"<callvar name = \u201ctelephone.var\u201d\/>"},{"entry":"<callvar name = \u201cperson.var\u201d\/>"},{"entry":"<callvar name = \u201cfax.var\u201d\/>"},{"entry":"<callvar name = \u201cstreet.var\u201d\/>"},{"entry":"<callvar name = \u201caddress.set.var\u201d\/>"},{"entry":"<callvar name = \u201cpostcode.var\u201d\/>"},{"entry":"<callvar name = \u201cmarket.participant.var\u201d\/>"},{"entry":"<\/parse>"},{"entry":"<\/tree>"},{"entry":"Makefiles:"},{"entry":"#"},{"entry":"# this makefile was generated by bic "},{"entry":"version 0.0. 05\/02\/1998"},{"entry":"#"},{"entry":"#"},{"entry":"#"},{"entry":"#"},{"entry":"# get the package name from the package "},{"entry":"argument passed to SchemaGen"},{"entry":"PACKAGE_NAME = com\/veo\/xdk\/"},{"entry":"dev\/schema\/test\/blib"},{"entry":"JAVA_SOURCES\u2003\u2003+= \u2003\u2003\u2003\u2003\\"},{"entry":"\u2003\u2003\u2003\u2003MarketParticipant.java \\"},{"entry":"\u2003\u2003\u2003\u2003Business.java \\"},{"entry":"\u2003\u2003\u2003\u2003Person.java \\"},{"entry":"\u2003\u2003\u2003\u2003Party.java \\"},{"entry":"\u2003\u2003\u2003\u2003AddressPhysical.java \\"},{"entry":"\u2003\u2003\u2003\u2003AddressSet.java \\"},{"entry":"MAKEFILE_MASTER_DIR = xxx"},{"entry":"include $(MAKEFILE_MASTER_DIR)\/"},{"entry":"Makefile.master"},{"entry":"all:: $(JAVA_CLASSES)"},{"entry":"#"},{"entry":"# this makefile was generated by bic "},{"entry":"version 0.0. 05\/02\/1998"},{"entry":"#"},{"entry":"#"},{"entry":"#"},{"entry":"#"},{"entry":"# get the package name from the package "},{"entry":"argument passed to SchemaGen"},{"entry":"PACKAGE_NAME = com\/veo\/xdk\/"},{"entry":"dev\/scherna\/test\/blib"},{"entry":"JAVA_SOURCES\u2003\u2003+= \u2003\u2003\u2003\u2003\\"},{"entry":"\u2003\u2003\u2003\u2003ServiceSet.java \\"},{"entry":"\u2003\u2003\u2003\u2003PrototypeService.java \\"},{"entry":"\u2003\u2003\u2003\u2003Service.java \\"},{"entry":"\u2003\u2003\u2003\u2003ServiceOperation.java \\"},{"entry":"MAKEFILE_MASTER_DIR = xxx"},{"entry":"include $(MAKEFILE_MASTER_DIR)\/"},{"entry":"Makefile.master"},{"entry":"all:: $(JAVA_CLASSES)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Finally, the XML document instances generated at run time according to the model above for one example follows:","<!DOCTYPE market.participant SYSTEM \u201cmarket.participant.dtd\u201d>","<market.participant>","<business business.number=\u201c1234567890\u201d>","<party.name>IBM<\/party.name>","<address.set>","<address.physical>","<street>1 IBM Way<\/street>","<city>Palo Alto<\/city>","<state>CA<\/state>","<postcode>94304<\/postcode>","<country>USA<\/country>","<\/address.physical>","<telephone>123 456-7890<\/telephone>","<fax>123 456 0987<\/fax>","<email>ibmec@ibm.com<email>","<\/address.set>","<\/business>","<\/market.participant>","<!DOCTYPE service SYSTEM \u201cservice.dtd\u201d>","<service.set>","<service>","<service.name>Order Service<\/service.name>","<service.location>www.ibm.com\/order<\/service.location>","<service.operation>","<service.operation.name>Submit Order<\/service.operation.name>","<service.operation.location>www.ibm.com\/order\/submit<\/service.location>","<service.operation.input>urn:x-ibm:services:order:operations:po.dtd<\/service.operation.input>","<service.operation.output>urn:x-ibm:services:order:operations:poack.dtd<\/service.operation.output>","<\/service.operation>","<service.operation>","<service.operation.name>Track Order<\/service.operation.name>","<service.operation.location>www.ibm.com\/order\/track<\/service.location>","<service.operation.input>urn:x-ibm:services:order:operations:track.irequest.dtd<\/service.operation.input>","<service.operation.output>urn:x-ibm:services:order:operations:track.iresponse.dtd<\/service.operation.output>","<\/service.operation>","<\/service>","<\/service.set>","Using the tools along with a BID composer application, which provides a drag, drop and forms editing user interface, a developer is able to create a business interface definition and to produce a well formed, valid business interface definition in the form of an XML document. Thus, the example run time instance is a business interface definition for an ordering service for IBM to be used by Ingram Micro and others to order laptop computers from IBM. (There is no relationship between the applicant and IBM or Ingram Micro). Utilizing these processes, a user is able to build a system that allows for programming of a business interface using the documents defined according to the present invention.","The role of CBL and the BID processor of the present invention in an XML\/JAVA environment can be further understood by the following explanation of the processing of a Purchase Order.","Company A defines its Purchase Order document type using a visual programming environment that contains a library of CBL DTDs and modules, all defined using common business language elements so that they contain data type and other interpretation information. Company A's PO might just involve minor customizations to a more generic \u201ctransaction document\u201d specification that comes with the CBL library, or it might be built from the ground up from CBL modules for address, date and time, currency, etc.","The documentation for the generic \u201ctransaction document\u201d specification (such as the transact.dtd set out above) typifies the manner in which CBL specifications are built from modules and are interlinked with other CBL DTDs.","A compiler takes the purchase order definition and generates several different target forms. All of these target forms can be derived through \u201ctree to tree\u201d transformations of the original specification. The most important for this example are:\n\n","Now, back to the scenario. A purchasing application generates a Purchase Order that conforms to the DTD specified as the service interface for a supplier who accepts purchase orders.","The parser uses the purchase order DTD to decompose the purchase order instance into a stream of information about the elements and attribute values it contains. These \u201cproperty sets\u201d are then transformed into corresponding JAVA event objects by wrapping them with JAVA code. This transformation in effect treats the pieces of marked-up XML document as instructions in a custom programming language whose grammar is defined by the DTD. These JAVA events can now be processed by the marshaling applications generated by the compiler to \u201cload\u201d JAVA Bean data structures.","Turning the XML document into a set of events for JAVA applications to process, is unlike the normal model of parsing in which the parser output is maintained as an internal data structure and processing does not begin until parsing completes. The event based processing, in response to the BID definitions, is the key to enabling the much richer functionality of the processor because it allows concurrent document application processing to begin as soon as the first event is emitted.","JAVA programs that \u201clisten for\u201d events of various types are generated from the Schema definition of those events. These listeners are programs created to carry out the business logic associated with the XML definitions in the CBL; for example, associated with an \u201caddress\u201d element may be code that validates the postal code by checking a database. These listeners \u201csubscribe\u201d to events by registering with the document router, which directs the relevant events to all the subscribers who are interested in them.","This publish and subscribe architecture means that new listener programs can be added without knowledge by or impact on existing ones. Each listener has a queue into which the router directs its events, which enables multiple listeners can handle events in parallel at their own pace.","For the example purchase order here, there might be listeners for:\n\n","Complex listeners can be created as configurations of primitive ones (e.g., a purchase order listener may contain and invoke these listeners here, or they may be invoked on their own).",{"@attributes":{"id":"p-0145","num":"0320"},"figref":["FIG. 11","FIG. 1","FIG. 3"],"b":["1101","1102","1103","1104","1105","1104","1104","1104"]},"The router  may also serve local host services  and , and as such act as a participant in the market as well as the market maker. Typically, documents that are received by the router  are traversed to determine the destinations to which such documents should be routed, there again passed back through the translator , if necessary, and out the network interface  to the respective destinations.","The market maker is a server that binds together a set of internal and external business services to create a virtual enterprise or trading community. The server parses incoming documents and invokes the appropriate services by, for example, handing off a request for product data to a catalog server or forwarding a purchase order to an ERP system. The server also handles translation tasks, mapping the information from a company's XML documents onto document formats used by trading partners and into data formats required by its legacy systems.","With respect to the service definition above, when a company submits a purchase order, the XML parser in the server uses the purchase order DTD to transform the purchase order instance into a stream of information events. These events are then routed to any application that is programmed to handle events of a given type; in some cases, the information is forwarded over the Internet to a different business entirely. In the purchase order example, several applications may act on information coming from the parser:\n\n","Trading partners need only agree on the structure, content, and sequencing of the business documents they exchange, not on the details of APIs. How a document is processed and what actions result is strictly up to the business providing the service. This elevates integration from the system level to the business level. It enables a business to present a clean and stable interface to its business partners despite changes in its internal technology implementation, organization, or processes.",{"@attributes":{"id":"p-0150","num":"0330"},"figref":["FIGS. 12","FIG. 11","FIG. 12"],"b":["13","14","1200","1201","1202","1203","1204","1205","1206","1207","1208","1209"]},"The registration service is one such function which is managed by the router. Thus, a market participant document is accepted at the network interface as shown in  (step ). The market participant document is stored in the business interface definition repository (step ) for the market maker node. In addition, the document is parsed (step ). The parsed document is translated into the format of the host (step ). Next, the document is passed to the router service (step ). The router service includes a listener which identifies the registration service as the destination of the document according to the document type and content (step ). The document or elements of the document are passed to the registration service (step ). In the registration service, the needed service specifications are retrieved according to the business interface definition (step ). If the service specifications are gathered, at step , the router service filters are set according to the business interface definition and the service specifications (step ). Registration acknowledgment data is produced (). The registration acknowledgment data is converted to a document format (step ). Finally, the acknowledgment document is sent to the participant node indicating to the participant that is successfully registered with the market maker (step ).","The process at step  of gathering needed service specifications is illustrated for one example in . This process begins by locating a service business interface definition supported by the market participant (step ). The service definition is retrieved, for example by an E-mail transaction or web access to repository node (step ). The service specification is stored in the BID repository (step ). The service business interface definition document is parsed (step ). The parsed document is translated into the format of the host (step ). Host objects are passed to the router service (step ). The registration service is identified according to the document type and content (step ). Finally, the information in the service business interface definition document is passed to the registration service (step ) for use according to the process of .",{"@attributes":{"id":"p-0153","num":"0333"},"figref":"FIG. 15","b":["1500","1501","1502","1504","1505","1500","1506"]},"The converted documents are supplied to the parser . The XML parser parses the received XML document according to the document type definition which matches it. If an error is found, then the parser sends the document back to the communication agent . A business interface definition compiler BIDC  acts as a compiler for business interface definition data. The DTD file for the XML parser, JAVA beans corresponding to the DTD file, and translation rules for translating DTD files to JAVA beans are created by compiling the BID data. An XML instance is translated to JAVA instance by referring to these tools. Thus the BID compiler  stores the DTD documents  and produces JAVA documents which correspond . The XML documents are passed to the processor  which translates them into the JAVA format. In a preferred system, JAVA documents which have the same status as the document type definitions received in the XML format are produced. The JAVA beans are passed to the document router . The document router  receives the JAVA beans and passes the received class to the appropriate document service using a registry program, for example using the event listener architecture described above. The document service  which receives the document in the form of JAVA beans from the router  acts as the interface to the enterprise solution software. This includes a registry service  by which listeners to XML events are coupled with the incoming data streams, and a service manager  to manage the routing of the incoming documents to the appropriate services. The document service manager  provides for administration of the registry service and for maintaining document consistency and the like.","The document service communicates with the back end system using any proprietary API, or using such more common forms as the CORBA\/COM interface or other architectures.",{"@attributes":{"id":"p-0156","num":"0336"},"figref":["FIG. 16","FIG. 16"],"b":["1600","1601","1602","1601","1603","1604","1603","1605","1606"]},"Thus, the present invention in an exemplary system provides a platform based on the XML processor and uses XML documents as the interface between loosely coupled business systems. The documents are transferred between businesses and processed by participant nodes before entering the company business system. Thus the platform enables electronic commerce applications between businesses where each business system operates using different internal commerce platforms, processes and semantics, by specifying a common set of business documents and forms.","According to the present invention, virtual enterprises are created by interconnecting business systems and service, are primarily defined in terms of the documents (XML-encoded) that businesses accept and generate:\n\n","The foregoing description of a preferred embodiment of the invention has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Obviously, many modifications and variations will be apparent to practitioners skilled in this art. It is intended that the scope of the invention be defined by the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 14","FIG. 9"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 16"}]},"DETDESC":[{},{}]}
