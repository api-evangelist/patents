---
title: Compressed data multiple description transmission and resolution conversion system
abstract: A system provides lossless split and merge processes of integer discrete cosine transform (DCT) transformed data such that the discrete cosine transform of one data block may be split into two half length DCT odd and even blocks for merging, with split and merge processes being lossless and are generated in the discrete cosine transformed domain. After splitting, the redundancy existing between the two integer discrete cosine transformed half data blocks allows one to approximately reconstruct the original data block in case one of the discrete cosine transformed half data block is lost during transmission. The system may be used with existing JPEG and MPEG compressors and decompressors because both use the discrete cosine transform for image and video compression and decompression, may be used as a resolution conversion device for transcribing from digital high-definition TV to analog low-definition TV, and may be used for lossless splitting and merging type-IV discrete cosine transformed data for audio compression and decompression in the international standard MPEG-4 Advanced Audio Coding (AAC), such as AC-3 or MP3.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07720299&OS=07720299&RS=07720299
owner: The Aerospace Corporation
number: 07720299
owner_city: El Segundo
owner_country: US
publication_date: 20050510
---

{"@attributes":{"id":"description"},"GOVINT":[{},{}],"heading":["STATEMENT OF GOVERNMENT INTEREST","REFERENCE TO RELATED APPLICATION","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["The invention was made with Government support under contract No. F04701-00-C-0009 by the Department of the Air Force. The Government has certain rights in the invention.","The present application is one of several related copending applications, all of which are by the same inventor, Dr. Hsieh Hou: MERGE AND SPLIT DISCRETE COSINE BLOCK TRANSFORM METHOD, patent application Ser. No. 10\/175,594 filed Jun. 19, 2002, now U.S. Pat. No. 7,437,394; HAAR WAVELET TRANSFORM EMBEDDED LOSSLESS TYPE IV DISCRETE COSINE TRANSFORM, patent application Ser. No. 11\/168,977, filed Jun. 27, 2005; SHARED HAAR WAVELET TRANSFORM, patent application Ser. No. 11\/168,979, filed Jun. 27, 2005; HAAR WAVELET TRANSFORM EMBEDDED LOSSLESS TYPE II DISCRETE COSINE TRANSFORM, patent application Ser. No. 11\/168,978, filed Jun. 27, 2005, now U.S. Pat. No. 7,613,761; and, EXTENDED HAAR TRANSFORM, patent application Ser. No. 11\/168,981, filed Jun. 27, 2005.","The invention relates to the field of discrete cosine transforms. More particularly, the present invention relates the use of merge and split function in discrete cosine transform for data compression.","A fast recursive algorithm for computing the discrete cosine transform can be used for image data compression that is useful in compressing data for either data storage for saving storage space or for data communications for saving communication channel bandwidth. During the calculation of the discrete cosine transform the DCT algorithm separates and combines data. A Radix-2 DCT separate block process and a Radix-2 DCT combine block process have been used to separate and combine data blocks. This DCT does not enable one to directly merge two equal sized transforms into one double size transform, nor to split double size transform whole. Equal splitting and merging is desirable for communicating transformed packets in smaller divisible packets. However, the DCT is not a true merge and split transformation process. The DCT data have been quantized into integers for converting into binary codes and causing data loss. When the DCT is used to split or merge there is a lossy transformation as there is no teachings known to form a mirror DCT transform that offer lossless transformation. A problem with the DCT transform is that the DCT can only perform a merge process by inversely transforming two equal sized DCT transforms back into the time domain, and then merge in the time domain, and finally forward transform the combined double size block into a double size DCT transform. This disadvantageously required additional inverse transformations and forward transformations prior to transmission that degrades the transformed data when repetively inverse and forward transforming the data. Hence, the DCT is not a true direct split or merge transform. Another problem with this discrete cosine transform is that there is no decimation-in-time DCT combine flow process compatible with the DCT decimation-in-time separate flow process. In prior art the T(N\/2), type-II DCT and D(N\/2) type-IV DCT blocks are DCT transforms of equal sized blocks processing first and second halves of the input data prior to combining the two halves into a double size type-II DCT output. The separate transform of prior art operates on first and second half inputs but the data is transformed into odd and even type-II DCT halves, incompatible with true merge and split transform processing. During the separate transformation processing of prior art the first and second half data are firstly subject to add and subtract processing prior to transformation, that is, separate combinational processing precedes the forward transformations. Another disadvantage of type-II and type-IV DCTs is that the separate and combine processes are always incurred with loss of data integrity. The type-II DCT are lossy separate and combine processes. Improved type-II and type-IV DCT provide lossy split and merge processes where the splitting and merging are mutually compatible for true splitting and merging of transform data in the transform domain, but disadvantageously provide lossy transformations.","A 2\u00d72 rotator, whether lossy or lossless, has two bit-parallel serial word inputs Xand Xthat are rotated in radians into two outputs Yand Y. The first output of the 2\u00d72 rotator is the first input weighted by the cosine of the rotating angle adding to the second input weighted by the sine of the same rotating angle. The second output of a 2\u00d72 rotator is the first input weighted by the sine of the same rotating angle subtracted from the second input weighted by the cosine of the same rotating angle. That is, Y=cos \u03b8X+sin \u03b8Xand Y=\u2212sin \u03b8X+cos \u03b8X. An integer lossy 2\u00d72 rotator has two integer outputs for two integer inputs. An integer lossy 2\u00d72 rotator has been implemented using traditional lifting stages. The unweighted input in each lifting stage is always used for addition but not for subtraction. Rotators have been used in DCT transforms. Rounding errors cannot be cancelled during continuous use of additions in lifting stages. The total rounding error of the traditional lifting method used in prior arts is very large because the accumulation of rounding errors throughout lifting stages. As such, the use of traditional lifting method produces lossy rotators.","The progressive transmission of compressed data works well when the data packets are sent and received without any error or loss. But when a packet is lost, the long delay in receiving a retransmitted packet often causes stalls in the whole decompression process. To improve the data integrity in unreliable channels, the original data stream has been split and sent on two separate links. Early multiple description speech coding processes separate the data into even and odd parts, and compress and communicate the even and odd parts over two independent paths. However, there are two drawbacks in multiple description methods. A first disadvantage is the use of separate compression and decompression hardware with the use of two independent channels. A second disadvantage is the respective inefficient compression of even and odd parts of data because the correlation between adjacent data samples in each part has been decreased. Recent multiple description methods add redundancies to the two halves of compressed data. The method of adding statistical dependencies to each channel can be used to estimate the loss of description. However, the method of adding statistical dependencies is not a real-time operation. Statistical data are needed to generate the multiple description transform in real time. The derived benefit of multiple descriptions may not be able to justify the additional complexity.","Another problem associated with transmitting DCT compressed data using unreliable communication links is the unreliable reconstruction of the compressed image after reception. Compressed still images or compressed video frames are to be transmitted over unreliable links. When one of the communication links is functional but the remaining communication links are corrupted, the existing DCT reconstruction disadvantageously poorly reconstructs the low-resolution version of the original image. When more links are functional, the reconstructed image quality could be improved at the cost of adding addition communication channels. Another problem with DCT transform communications is the incompatibility of receiver resolution. When a digital high-definition TV picture is transmitted to receivers, a conventional analog TV receiver must first decompress the high-definition picture signal prior to performing resolution down conversion for display. A low-resolution down conversion of compressed data has a less amount of data and save processing power and can be used to display an image on a low-resolution display but suffers from having to first decompress the high-resolution data before displaying the low-resolution data. These and other disadvantages are solved or reduced using the invention.","An object of the invention is to provide merging and splitting DCT transform data in the transform domain.","An object of the invention is to provide merging and splitting DCT type-II and type-IV transform data in the transform domain.","An object of the invention is to provide lossless merging and splitting DCT type-II and type-IV transform data in the transform domain.","An object of the invention is to provide lossless merging and splitting DCT type-II and type-IV transform data by decimation in time in the transform domain.","Another object of the invention is to provide lossless merging and splitting of compressed high-resolution transform data for communicating high and low compressed transform data over separate communications channels.","Still another object of the invention is to provide lossless merging and splitting of compressed high-resolution transform data for communicating high and low compressed transform data over separate communications channels for decompressing the low-resolution data independently of receiving the high compressed transform data for providing a low-resolution image.","The invention is directed to a system for transforming and compressing data for communication or storage of the compressed data using lossless merge and split DCT transform data. The DCT transform data can be either DCT type-II or type-IV DCT transform data. In a first aspect of the invention, input DCT transform data is first split into odd and even DCT transform data halves. The two transform data halves can then be communicated over respective communication channels. The two transform data halves can then be merged using an inverse DCT rotator in the transform domain for providing lossless merged high-resolution DCT transform data. In a second aspect of the invention, the odd and even DCT transform data halves can be merged when both of the odd and even transform data halves are received for providing the merged high-resolution DCT transform data. One of the odd or even DCT transform data halves can be inversely rotated for providing low-resolution DCT transform data preferably when one of the communication channels is corrupted. As such, a high-resolution display could display low-resolution data when one of the two communication channels is corrupted. The system enables the selection of low-resolution DCT transform data for displaying on a low-resolution display a low-resolution image independent when either one of the DCT transform data halves is received. The system enables the generation of high-resolution transform data when both DCT transform data halves are received, and enables the generation of low-resolution transform data when either one of the DCT transform data halves are received.","The system can be implemented as additions to existing JPEG and MPEG compressors, decompressors and communications systems for preferred use during multimedia transmission over wireless communication links. A real-time system can be used generating multiple descriptions of JPEG and MPEG compressed data over unreliable communication links. In addition, the system may be used for resolution down conversion from HDTV to conventional TV systems. These and other advantages will become more apparent from the following detailed description of the preferred embodiment.","An embodiment of the invention is described with reference to the figures using reference designations as shown in the figures. Referring to , an input set of eight integer samples from the DCT-II input buffer  is DCT-II transformed and quantized data. DCT data words two and eight are sent to processing unit PU , DCT data words three and seven are sent to processing unit PU , and DCT data words four and six to processing unit PU . The processing units, PU, PU, and PU are 2\u00d72 lossless rotators. A 2\u00d72 lossless rotator has two integer outputs for two integer inputs. A 2\u00d72 rotator can be lossy or lossless. The first output is the first input weighted by the cosine of a rotating angle adding to the second input weighted by the sine of the same rotating angle. The second output is the first input weighted by the sine of the same rotating angle subtracted from the second input weighted by the cosine of the same rotating angle. The 2\u00d72 lossless rotator comprises of three integer-to-integer lifting stages. Referring to PU , for example, the inputs to the first lifting stage are DCT data words two and eight that are integers. The first input to the first lifting stage, DCT data words two is passed on to the first output of the first lifting stage without change. The second output of the first lifting stage is the second input, DCT data word, adding to the integer round off of the weighted first input. The weighting constant w is defined as one minus the sine of rotating angle divided by the cosine of the same rotating angle. The inputs to the second lifting stage are the outputs from the first lifting stage. The second input to the second lifting stage is passed to the second output of the second lifting stage without change. The first output of the second lifting stage is the integer round off of the weighted second input subtracting the first input. The weighting constant is the cosine of the rotating angle. The inputs to the third lifting stage are the outputs from the second lifting stage. The first input to the third lifting stage is passed to the second output of the third lifting stage without change. The first output of the third lifting stage is the second input subtracting the integer round off of the weighted first input. The weighting constant w is defined as one minus the sine of rotating angle divided by the cosine of the same rotating angle. Both of the lossless 2\u00d72 rotators, PU  and PU  have the same integer-to-integer three lifting stages as PU  except that each of the processing units PU , PU , and PU  has a unique rotating angle. The rotating angle of PU  is \u03c0\/16, PU  is \u03c0\/8, and PU  is 3\u03c0\/16 for \u03c0=3.14159 radians. The rotated outputs from PU , PU , and PU , and the DCT data words one and five from the DCT-II input buffer  are latched on by latch A . The latch A  serves to permute input words to latched words by mere wire routing. The latch output words six and eight are sent to processing unit PU , and the latch output words five and seven to processing unit PU . Both processing units PU  and PU  are lossless 2\u00d72 rotators that have the same integer-to-integer three lifting stages as PU . The rotating angles of PU  and PU  are both \u03c0\/8 radians. The rotated outputs from PU  are sent to the DCT-II rotator data buffer  as input words seven and five. The rotated outputs from PU  are sent to the DCT-II rotator data buffer  as input words eight and six. The output words one, two, three and four from latch A  are sent directly without further rotations to the DCT- rotator data buffer  as input words one, two, three, and four.","The weights that are used for multiplication of inputs in an integer-to-integer three stage lifting lossless 2\u00d72 rotator may be replaced by shift and add operations on the binary digits of the inputs to each lifting stage. For binary shifts and adds, the weights, sine and cosine of rotating angles, are given by the canonic signed digit codes of sin(\u03c0\/16), cos(\u03c0\/16), sin(\u03c0\/8), cos(\u03c0\/8), sin(3\u03c0\/16), and cos(3\u03c0\/16) with \u03c0=3.14159.","Referring to , an input set of eight integer samples from the DCT-IV input buffer  is DCT-IV transformed and quantized data.  depicts the lossless implementation of the first two matrix factors comprising of Rand F. DCT data words one and eight are sent to processing unit PU , DCT data words two and seven are sent to processing unit PU , DCT data words three and six are sent to processing unit PU , and DCT data words four and five to processing unit PU . The processing units, PU , PU , PU , and PU  are lossless 2\u00d72 rotators that each of the 2\u00d72 lossless rotators comprises of three integer-to-integer lifting stages. Each of the processing units, PU , PU , PU  and PU  has a unique rotating angle. The rotating angle of PU  is \u03c0\/32 radians, of PU  is \u03c0\/16 radians, of PU  is 3\u03c0\/32 radians, and of PU  is \u03c0\/8 radians for \u03c0=3.14159 radians. The rotated outputs from PU , PU , PU , and PU , are latched on by latch B . The latch output words five and eight are sent to processing unit PU , and the latch output words six and seven are sent to processing unit PU . Both of the processing units, PU  and PU  are lossless 2\u00d72 rotators that each of the lossless 2\u00d72 rotators comprises of three integer-to-integer lifting stages. The rotated outputs from PU  and PU  are sent respectively to the next processing units, PU  and PU . Both of the processing units, PU  and PU  are 2\u00d72 lossless rotators. The rotated outputs from PU  and PU  are again sent respectively to the next processing units, PU  and PU . Both of the processing units, PU  and PU  are 2\u00d72 lossless rotators. Each of the PU , PU , PU , PU , PU , and PU  has a unique rotating angle. The rotating angle of PU  is \u03c0\/16 radians, of PU  is 3\u03c0\/16 radians, of PU  is \u03c0\/4 radians, of PU  is \u03c0\/4 radians, of PU  is \u2212\u03c0\/16 radians, and PU  is \u22123\u03c0\/16 radians. The rotated outputs from PU  are sent to the DCT-IV rotator data buffer  as output words eight and five. The rotated outputs from PU  are sent to the DCT-IV rotator data buffer  as output words seven and six. The output words one, two, three, and four from latch B  are sent directly without further rotations to the DCT-IV rotator data buffer  as output words one, two, three, and four.","Each of the lossless 2\u00d72 rotators comprises of three integer-to-integer lifting stages. The weights that are used for multiplication of inputs in an integer-to-integer three stage lifting lossless 2\u00d72 rotator may be replaced by shift and add operations on the binary digits of the inputs to each lifting stage. The weights, sine and cosine of rotating angles, are stored in the read only memory (ROM) in canonic signed digit codes.","Referring to , the input DCT data of eight data samples at rotator data buffer  are either rotated integer DCT-II transformed or rotated integer DCT-IV transformed data. Every pair of the input DCT data is sent to processing units, PU , PU , PU , and PU  for pair-wise additions and subtractions. Processing units PU , PU , PU , and PU  are identical 2\u00d72 lossless rotators with 45 degree rotating angles at \u03c0\/4 radians. The first integer outputs of PU , PU , PU , and PU  are the DCT transformed of even numbered integer spatial or time data, being stored at the even transform buffer . The second integer output of PU , PU , PU , and PU  are the DCT transformed of odd numbered integer spatial or time data, being stored at the odd transform buffer .","Each of the lossless 2\u00d72 rotators in processing units PU , PU , PU , and PU  comprises of three integer-to-integer lifting stages. The weights that are used for multiplication of inputs in an integer-to-integer three stage lifting lossless 2\u00d72 rotator may be replaced by shift and add operations on the binary digits of the inputs to each lifting stage. For binary shifts and additions, the weights, sine and cosine of rotating angles, are given by the canonic signed digit codes of sin(\u03c0\/4) and cos(\u03c0\/4).","The data stored in the even transform buffer  is the DCT-II of the even half input, T(x), and the data stored in the odd transform buffer  is the DCT-II of the odd half input, T(x). Both T(x) and T(x) were obtained from the quantized DCT-II coefficients z according to the DCT-II split equation.",{"@attributes":{"id":"p-0029","num":"0028"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"T","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","e"]}}}}},{"mtd":{"mrow":{"mi":"T","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","o"]}}}}}]}},{"mrow":{"mrow":[{"mfrac":{"mn":"1","msqrt":{"mn":"2"}},"mo":"\u2061","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mi":"I"},{"mi":"I"}]},{"mtd":[{"mi":"I"},{"mrow":{"mo":"-","mi":"I"}}]}]}}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mi":"I"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mi":"F"}]}]}}],"mo":"\u2061"},"mo":"\u2062","msubsup":{"mi":["R","t"],"mn":"8"}}],"mo":"="}}}},"In the DCT-II split equation F is a symmetric 4\u00d74 matrix consisting of two pair-wise elementary rotators, with c=cos(k\u03c0\/16) and s=sin(k\u03c0\/16) for k=1, 2, 3 in an F matrix and Rmatrix.",{"@attributes":{"id":"p-0031","num":"0030"},"maths":[{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"F","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"msub":{"mi":"s","mn":"2"}},{"mn":"0"},{"msub":{"mi":"c","mn":"2"}}]},{"mtd":[{"msub":{"mi":"s","mn":"2"}},{"mn":"0"},{"msub":{"mi":"c","mn":"2"}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"msub":{"mi":"c","mn":"2"}},{"mn":"0"},{"mrow":{"mo":"-","msub":{"mi":"s","mn":"2"}}}]},{"mtd":[{"msub":{"mi":"c","mn":"2"}},{"mn":"0"},{"mrow":{"mo":"-","msub":{"mi":"s","mn":"2"}}},{"mn":"0"}]}]}}}}},{"@attributes":{"id":"MATH-US-00002-2","num":"00002.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":"R","mn":"8"},"mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"msub":{"mi":"c","mn":"1"}},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"s","mn":"1"}}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"msub":{"mi":"c","mn":"2"}},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"s","mn":"2"}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"c","mn":"3"}},{"mn":"0"},{"msub":{"mi":"s","mn":"3"}},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mrow":{"mo":"-","msub":{"mi":"s","mn":"3"}}},{"mn":"0"},{"msub":{"mi":"c","mn":"3"}},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mrow":{"mo":"-","msub":{"mi":"s","mn":"2"}}},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"c","mn":"2"}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mrow":{"mo":"-","msub":{"mi":"s","mn":"1"}}},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"c","mn":"1"}}]}]}}}}}]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 1","FIG. 3","FIGS. 2 and 3"],"sub":["8 ","e","o","e","o"],"b":["60","62"]},{"@attributes":{"id":"p-0033","num":"0032"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"D","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","e"]}}}}},{"mtd":{"mrow":{"mi":"D","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","o"]}}}}}]}},{"mrow":{"mrow":[{"mfrac":{"mn":"1","msqrt":{"mn":"2"}},"mo":"\u2061","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mi":"I"},{"mi":"I"}]},{"mtd":[{"mi":"I"},{"mrow":{"mo":"-","mi":"I"}}]}]}}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mi":"I"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mi":"F"}]}]}}],"mo":"\u2061"},"mo":"\u2062","msubsup":{"mi":["R","t"],"mn":"8"}}],"mo":"="}}}},"In the DCT-IV split equation F is a symmetric 4\u00d74 matrix consisting of two pair-wise elementary rotators, as with c=cos(k\u03c0\/32) and s=sin(k\u03c0\/32) for k=1, 2, 3, 4, 5, 6 in F, Rand Rmatrices.",{"@attributes":{"id":"p-0035","num":"0034"},"maths":[{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"F","mo":"=","mrow":{"mrow":[{"mrow":{"mfrac":{"mn":"1","msqrt":{"mn":"2"}},"mo":["\u2062","\u2062"],"mrow":{"msub":{"mi":"R","mn":"4"},"mo":"\u2061","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mn":"1"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}]},{"mtd":[{"mn":"1"},{"mrow":{"mo":"-","mn":"1"}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}]},{"mtd":[{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mn":"1"},{"mn":"1"}]},{"mtd":[{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mn":"1"},{"mrow":{"mo":"-","mn":"1"}}]}]}}},"msubsup":{"mi":["R","t"],"mn":"4"}},"mo":["\u2192","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mtext":{}}],"msub":{"mi":"R","mn":"8"}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"msub":{"mi":"c","mn":"1"}},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"s","mn":"1"}}]},{"mtd":[{"mn":"0"},{"msub":{"mi":"c","mn":"2"}},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"s","mn":"2"}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"msub":{"mi":"c","mn":"3"}},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"s","mn":"3"}},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"c","mn":"4"}},{"msub":{"mi":"s","mn":"4"}},{"mn":"0"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mrow":{"mo":"-","msub":{"mi":"s","mn":"4"}}},{"msub":{"mi":"c","mn":"4"}},{"mn":"0"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mrow":{"mo":"-","msub":{"mi":"s","mn":"3"}}},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"c","mn":"3"}},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mrow":{"mo":"-","msub":{"mi":"s","mn":"2"}}},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"c","mn":"2"}},{"mn":"0"}]},{"mtd":[{"mrow":{"mo":"-","msub":{"mi":"s","mn":"1"}}},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"c","mn":"1"}}]}]}}],"mo":"="}}}},{"@attributes":{"id":"MATH-US-00004-2","num":"00004.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":"R","mn":"4"},"mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"msub":{"mi":"c","mn":"2"}},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"s","mn":"2"}}]},{"mtd":[{"mn":"0"},{"msub":{"mi":"c","mn":"6"}},{"msub":{"mi":"s","mn":"6"}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mrow":{"mo":"-","msub":{"mi":"s","mn":"6"}}},{"msub":{"mi":"c","mn":"6"}},{"mn":"0"}]},{"mtd":[{"mrow":{"mo":"-","msub":{"mi":"s","mn":"2"}}},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"c","mn":"2"}}]}]}}}}}]},"Referring to , the design of a lossless 2\u00d72 rotator is based on a three-stage lifting transform comprising of three lifting stages, a first lifting stage , a second lifting stage , and a third lifting stage . The electronic circuit is a parallel pipeline with data flow arranged in word serial and bit parallel format. Three multiplying constants, p, c, and (\u2212p), are respectively stored in ROM , ROM , and ROM  in canonic signed digital codes. The constant c is the cosine of the rotating angle. The constant p is equal to one minus the sine of the rotating angle divided by the cosine of the rotating angle. In two's complement, the first input data IN- from the input buffer  is multiplied to the canonic signed digit codes of p in ROM  by the first pipelined multiply-add unit PMA-  in the lifting stage A . In the same PMA-  unit the multiplied result is added to the second input data IN- from the input buffer  in two's complement form. The pipelined multiply-add unit, composing of many levels of arrays of carry and save adders, and an array of carry look-ahead adders with an output latch at the output end of the pipelined multiply-add unit (PMA), performs array multiplications and additions in the same unit. The number of pipelined multiply-add unit levels depends on the bit length of each data involved in multiplication and addition operations. At the same time instant that PMA-  begins processing, the first latch FF-  latches on the first input IN-. A common data ready signal is used to delatch the PMA-  latch and the FF-  latch, so that both outputs from PMA-  and FF-  can simultaneously flow to the second lifting stage . The output from PMA-  is multiplied to the canonic signed digit codes of c in ROM  by the second pipelined multiply-add unit PMA-  in the second lifting stage . In the same PMA-  unit the multiplied result subtracts the output of FF-  in two's complement form. At the same time instant that PMA-  begins processing, the second latch FF-  latches on the output of PMA- . A common data ready signal is used to delatch the PMA-  latch and the FF-  latch, so that both outputs from PMA-  and FF-  can simultaneously flow to the third lifting stage . The output from PMA-  is multiplied to the canonic signed digit codes of (\u2212p) in ROM  by the third pipelined multiply-add unit PMA-  in the third lifting stage . In the same PMA-  unit, the multiplied result is added to the output of FF-  in two's complement form. At the same time instant that PMA-  begins processing, the third latch FF-  latches on the output of PMA- . A common data ready signal is used to delatch the PMA-  latch and the FF-  latch, so that both outputs from PMA-  and FF-  can simultaneously flow to the output buffer . The output from PMA-  is the OUT- in the output buffer . The output from FF-  is the OUT- in the output buffer .","Referring to , the first input MD  is the integer DCT transformed data of even numbered spatial or time data words. The second input MD  is the integer DCT transformed data words of odd numbered spatial or time data. MD  and MD  are inputs to a 2\u00d72 lossless rotator  with 45 degrees rotating angle at \u03c0\/4 radians. The lossless 2\u00d72 rotator  comprises of three integer-to-integer lifting stages. The first output of the lossless 2\u00d72 rotator, the scaled sum, is the integer round-offs of (MD+MD) divided by the square root of two. The second output of the lossless 2\u00d72 rotator, the scaled difference, is the integer round-offs of (MD\u2212MD) divided by the square root of two. The absolute value of the scaled sum obtained from the magnitude unit  and the absolute value of the scaled difference obtained from the magnitude unit  are compared at the comparator XOR . The output of comparator XOR  is a binary zero when MD  or MD  or both are missing. The output of comparator XOR  is a binary one when both MD  and MD  are present. In the latter case, with the output of the resolution conversion  being one also, both the scaled sum and the scaled difference pass through the respective multiplexer  and multiplexer  to the input Mux-High and the input Mux-Low of the inverse rotator . In the same latter case, when the output of the resolution conversion  is zero and the output of AND  becomes one, only the scaled sum is passed on to a mux-high data and zero value from ROM  is passed on to mux-low data. When the output of comparator XOR  is zero, when MD  is missing and MD  is present, the first input mux-high to the inverse rotator  is two times the scaled sum because of the shifting up of one bit by an X multiplier , and the second input mux-low to the inverse rotator  is always zero because of zero value inputting to the multiplexer  from ROM  while disregarding the output value of the resolution conversion  as the AND  output becomes zero. When the output of comparator XOR  is zero, when MD  is missing and MD  is present, the first input mux-high to the inverse rotator  is two times the scaled sum and the second input mux-low to the inverse rotator  is always zero while disregarding the output value of the resolution conversion  as the AND  output becomes zero. The process of the inverse rotator  is to perform the inverse function of the DCT rotator. The output of the inverse rotator, DCT transformed data , is the recovered DCT data. The DCT data is perfectly recovered when both inputs, MD  and MD  are received without errors. Otherwise, a low-resolution version of the DCT data is reconstructed back when either one of the inputs, MD  and MD , is missing, when the output of the resolution conversion  is set to zero.","The output of the comparator XOR  is always one when both inputs, MD  and MD , are received without loss. For DCT-II data, T(x) is the input MD  and T(x) is the input MD . Setting the output of the resolution conversion  into one implies that there is no requirement for resolution down conversion. In such a case, the quantized DCT-II data are perfectly recovered from the input MD  and MD  according to the DCT-II merge equation.",{"@attributes":{"id":"p-0039","num":"0038"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"z","mo":"=","mrow":{"mfrac":{"mn":"1","msqrt":{"mn":"2"}},"mo":"\u2062","mrow":{"mrow":[{"mrow":[{"msub":{"mi":"R","mn":"8"},"mo":"\u2061","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mi":"I"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mi":"F"}]}]}}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mi":"I"},{"mi":"I"}]},{"mtd":[{"mi":"I"},{"mrow":{"mo":"-","mi":"I"}}]}]}}],"mo":"\u2061"},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"T","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","e"]}}}}},{"mtd":{"mrow":{"mi":"T","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","o"]}}}}}]}}],"mo":"\u2061"}}}}}},"The lossless 2\u00d72 rotator  is the lossless implementation of the first matrix factor comprising four pairs of scaled sums and differences in the DCT-II merge equation. The inverse rotator  is the lossless implementation of the next two matrix factors comprising F and Rin the DCT-II merge equation.","The output of comparator XOR  is always 1 when both inputs, MD  and MD , are received without loss. For DCT-IV data, D(x) is the input MD  and D(x) is the input MD . Setting the output of the resolution conversion  into 1 implies that there is no requirement for resolution down conversion. In such a case, the quantized DCT-IV data are perfectly recovered from the input MD  and MD  according to the DCT-IV merge equation.",{"@attributes":{"id":"p-0042","num":"0041"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"z","mo":"=","mrow":{"mfrac":{"mn":"1","msqrt":{"mn":"2"}},"mo":"\u2062","mrow":{"mrow":[{"mrow":[{"msub":{"mi":"R","mn":"8"},"mo":"\u2061","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mi":"I"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mi":"F"}]}]}}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mi":"I"},{"mi":"I"}]},{"mtd":[{"mi":"I"},{"mrow":{"mo":"-","mi":"I"}}]}]}}],"mo":"\u2061"},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"D","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","e"]}}}}},{"mtd":{"mrow":{"mi":"D","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["x","o"]}}}}}]}}],"mo":"\u2061"}}}}}},"The lossless 2\u00d72 rotator  is the lossless implementation of the first matrix factor comprising four pairs of scaled sums and differences in the DCT-IV merge equation. The inverse rotator  is the lossless implementation of the next two matrix factors comprising F and Rin the DCT-IV merge equation.","When one of the MD  and MD  is lost during transmission while disregarding the value of the output of the resolution conversion , a low-resolution reconstruction of the original spatial or time data is realized by passing the two times the scaled sum  to the inverse rotator . The two times value the scaled sum is equal to square root of two times one of the survived inputs MD  or MD  denoted by T(x). The inverse rotator  then reconstructs a low-resolution version of the original spatial or time data according to the reconstruction equation.",{"@attributes":{"id":"p-0045","num":"0044"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"z","mo":"=","mrow":{"mrow":[{"msub":{"mi":"R","mn":"8"},"mo":"\u2061","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mi":"I"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mi":"F"}]}]}}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"msqrt":{"mn":"2"},"mo":"\u2062","mrow":{"mi":"T","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}}}}},{"mtd":{"mn":"0"}}]}}],"mo":"\u2061"}}}}},"When the output of the resolution conversion  is set to zero disregarding the present of both MD  and MD  inputs, a low-resolution reconstruction of the original spatial or time data is realized by passing the scaled sum, S(x) to the Mux-High of the inverse rotator  and by passing zero to the Mux-Low of the inverse rotator . The inverse rotator  then reconstructs a low-resolution version of the original spatial or time data according to the resolution down conversion equation.",{"@attributes":{"id":"p-0047","num":"0046"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"z","mo":"=","mrow":{"mrow":[{"msub":{"mi":"R","mn":"8"},"mo":"\u2061","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mi":"I"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mi":"F"}]}]}}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"S","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}}}},{"mtd":{"mn":"0"}}]}}],"mo":"\u2061"}}}}},"Referring to all Figures, no extra redundancies are needed to add to the DCT compressed data because the even and odd halves of the original spatial or time data are highly correlated, and so are the respective DCTs. The correlation allows for the use of only one MD data stream to reconstruct a low-resolution version of the original DCT data. It should be apparent that the transforms as shown have input and output buffers and communication lines for communicating input data and output data. The transforms are useful in data compression that conserves storage capacities and communication bandwidth such that the invention can be used in computer systems and communication systems. Those skilled in the art can make enhancements, improvements, and modifications to the invention, and these enhancements, improvements, and modifications may nonetheless fall within the spirit and scope of the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
