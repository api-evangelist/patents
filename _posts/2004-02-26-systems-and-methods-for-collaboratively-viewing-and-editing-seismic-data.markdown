---
title: Systems and methods for collaboratively viewing and editing seismic data
abstract: In one embodiment, a computer-implemented seismic viewing/editing collaboration method includes performing real-time collaborative cursor tracking, copaging, picking, and image manipulation in a distributed-display-processing, peer-to-peer architecture. A parameterized, minimal set of information required to update a display is transferred directly between different clients. A group state containing events generated by different clients is enforced to be synchronized on the different clients.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07031842&OS=07031842&RS=07031842
owner: 3DGeo Development, Inc.
number: 07031842
owner_city: Santa Clara
owner_country: US
publication_date: 20040226
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION DATA","FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of the filing date of U.S. Provisional Patent Application No. 60\/450,290, filed Feb. 26, 2003, entitled \u201cSystems and Methods for Collaboratively Viewing and Editing Seismic Data,\u201d which is herein incorporated by reference.","This invention relates to geophysical prospecting using seismic signals, and in particular to systems and methods for managing and viewing seismic data.","Computer-intensive processing of reflection seismic data is the main tool for imaging the Earth's subsurface to identify hydrocarbon reservoirs and determine rock and fluid properties. Seismic data are recorded at the earth's surface or in wells, and an accurate model of the underlying geologic structure is constructed by processing the data. In the past decade, 3-D seismic processing has shown far superior cost-effectiveness than conventional 2-D seismic processing. However, the reconstruction of accurate 3-D images of the subsurface requires the handling of a huge amount of seismic data (on the order of terabytes for a single modern marine 3-D survey) and the application of computer-intensive imaging algorithms. Even today, only large-scale parallel computers can image modern marine surveys with the most sophisticated algorithms within a useful turn-around time. Indeed, the use of large-scale parallel computers for seismic processing has achieved such technical and economical success that the geophysical market accounts for one of the largest commercial market for scientific high-performance computing.","Many exploration organizations have no direct access to high-end seismic imaging technologies because they lack the resources to acquire and maintain the necessary hardware and software. The cost of the required computing and data-storage facilities is still quite high, although it keeps going down. However, in perspective, even more problematic is the large investment in application development and system maintenance that the effective use of these computational facilities requires. These costs are not decreasing, they are actually increasing with the level of complexity and sophistication of the imaging applications. Many existing commercial packages are targeted to run effectively on workstations, not on large parallel systems, and thus are ineffective for the high-end applications. As a result, only the central processing departments of large oil companies can afford to employ large-scale parallel computers for imaging 3-D seismic data. The rest of the exploration industry outsources large 3-D seismic imaging projects to outside service companies.","According to this outsourcing model, the data are physically sent on tape to the service companies, who process the data with little input from the oil companies, and then deliver the final images after several months. This service model has been historically successful for exploring areas with relatively simple geology, but it has proven inadequate for exploring areas with complex geology, where most of the still undiscovered hydrocarbon reservoirs are yet to be found. In such areas, the data must often be imaged by applying 3-D prestack depth migration, instead of simpler and more traditional time imaging procedures. Depth imaging is potentially much more accurate than time imaging, but it is also less robust with respect to some of the processing parameters. In particular, depth imaging needs an accurate interval velocity function to properly focus the reflections. Because the velocity function cannot be uniquely determined from the data alone, a priori geological information must be taken into account, and the final results are greatly enhanced when geologists work closely with the processing team. However, in the typical interaction between service companies and oil companies, the geologist cannot be involved in the processing because of the physical distance and the difficulties caused by the old traditional service model.","In the preferred embodiment, a computer-implemented seismic viewing\/editing collaboration method includes performing collaborative cursor tracking, copaging, picking, and image manipulation in a distributed-display-processing, peer-to-peer architecture. A parameterized, minimal set of information required to update a display is transferred directly between different clients.","In the following description, a set of elements is understood to comprise one or more elements. It is understood that results and other data structures can be generated and\/or stored in system memory and\/or in files. Geophysical data encompasses recorded as well as synthetic data. Unless otherwise characterized, geophysical data processing is understood to broadly encompass any transformation, generation, visualization, use or accessing of geophysical data. An action performed automatically in response to an event is an action performed without requiring user intervention after the event. Unless otherwise limited, the term multicasting encompasses sending data to one or more recipients from a selected group, and is distinct from broadcasting, which involves sending data to any user having available equipment.","The following description illustrates the present invention by way of example and not necessarily by way of limitation.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1-A","b":["20","20","22","24","24","22","24","26","26","24","22","26","24","22","24","22"]},"Server subsystem  preferably comprises a processing unit  and a data storage device . Processing unit  can include an integrated parallel computer such as an Origin 2000 from SGI or Enterprise from Sun Microsystems. Processing unit  can also include a cluster of interconnected computers, such as for example a Linux cluster forming a parallel computer. Data storage device  includes an array of tape and\/or hard disk drives capable of storing geophysical data sets\u2014on the order of hundreds of gigabytes to tens of terabytes of data. Processing unit  is connected to data storage device  over a data link . Processing unit  and storage device  are preferably located within the same physical facility, and can be implemented on the same computer system. Data link  can have a higher-bandwidth than control\/interpretation links , and can be implemented over a local area network (LAN). Computationally-intensive tasks such as processing performed on seismic data sets (e.g. migration, velocity analysis, datuming) are preferably performed on server .","Each client subsystem  can be implemented using a personal computer or workstation with less storage and\/or computational capability than server subsystem . Each client subsystem  includes processing, storage, and display and input devices (e.g. monitor and keyboard) for control, data entry, and data visualization. The client storage capabilities are preferably used to store synchronized local copies of seismic data sets used to generate 3D and 2D image displays, and associated data such as pick sets. The locally stored images can range in size from hundreds of kB to tens or hundreds of MB. Each client subsystem  includes a graphical user interface (GUI) and an associated geophysical data viewer. The data viewer preferably includes a 3D Viewer for displaying and manipulating 3D images, and a 2D Viewer for displaying and manipulating 2D images such as slices of a 3D image. Different client subsystems  may have different operating systems (platforms). The GUI and geophysical data viewer are preferably implemented in a platform-independent language such as Java. In one implementation, the GUI is run as an applet in a conventional browser, although in general the GUI can be provided as a standalone installed program. Both server  and clients  may have the Java Runtime Environment (JRE) installed thereon.","Clients  may be used to remotely control geophysical data processing performed on server , for example as described in U.S. Pat. No. 6,493,635, herein incorporated by reference. In addition, collaboration engines running on clients  also allow a geographically-distributed team of geophysicists to work together on a project\/dataset. A processing project can include performing several data processing iterations over a common set of data files, pick files, and data processing flows. The collaboration engines preferably allow different members of the team to visualize, manipulate and edit in real time geophysical data, picks, and other parameters. During a collaboration session, the collaboration engines running on clients  can communicate directly with each other, without the intermediation of server , as described below. Clients  are also capable of retrieving data from server  at the beginning of a collaboration session, and of saving data on server  during a collaboration session or when the session is over.","At least some applications running on clients  may be connected to server  and to each other through a network protocol implemented using the Remote Method Invocation (RMI) application programming interface (API). Other applications may employ TCP or UDP connections. The Java Remote Method Invocation system allows an object running on one Java Virtual Machine (VM) to invoke methods on an object running on another Java VM. The system can be used to implement an authentication protocol based on the Java Authentication and Authorization Service (JAAS). A Secure Socket Layer (SSL) protocol can also be implemented selectively below the JAAS level, and on top of TCP\/IP, for communications outside a secure zone such as a corporate Intranet. Code loaded on clients  and server  may be signed, i.e. assigned permissions based on a security policy currently in effect. The security policy can specify permissions available for given code, users, and locations.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 2","FIG. 2"],"b":["100","24","102","24","22","24","22","104"]},"Collaboration Room","In a step , the user creates a new collaboration room or joins an existing collaboration room. A collaboration room is a virtual space maintained primarily on server , where a number of users meet and generate input that ultimately translates into quasi-concurrent changes applied to the data which is the subject of the collaboration. Each collaboration room can be graphically represented as an object in a project tree structure implemented as described in the above-incorporated U.S. Pat. No. 6,493,635. Preferably, a collaboration room has a specific icon, and is a subelement of the site tree root, of a project group or of a project. The hierarchical position of a collaboration room in the site defines the user permissions required to join the collaboration room. For example, all users may access a site collaboration room not associated with a project or project group. Only users with permission to access a specific project group or project can use the corresponding collaboration rooms. Different projects or project groups may correspond to different customers or groups within a customer company. A given project or project group can include multiple collaboration rooms, and a user may be a member of multiple collaboration rooms.","In a step , client  retrieves from server  a list of users and event generators the users\/clients contributed to the collaboration room. The users present at a given moment in a collaboration room can be graphically represented as subelements of the room node in the tree structure. Once a user connects to a room and becomes member of that collaboration room, the user's name is made public and becomes available to the other members of the room. Preferably, a member has permanent access to the list of the other members participating in the collaboration, and is able to make two choices relative to any other member: whether to send events to the other member, and whether to receive\/accept events from the other member. By default, all events (described below) are sent and received to\/from all members.","Collaboration Event Generators","Preferably, available event generators include a chat interface, a 2D data viewer, and a 3D data viewer. The event generators are preferably run on each client , and the event generators communicate directly with other clients . The event generators may also communicate with server , for example to retrieve data at the beginning of a session and to save data at the end of a session. The chat interface is a part of the GUI allowing a collaboration room member to send and receive text events to\/from other members. The 2D data viewer is a module specialized in displaying 2D geophysical images. The 2D data viewer preferably provides a number of tools including zoom, color map control, copaging, and picking. Events sent and received by a 2D data viewer preferably include cursor position tracking, copaging, image modification, and picking events. The 3D data viewer is a module specialized in displaying 3D geophysical images. The 3D data viewer preferably provides a number of tools including zoom, color map control, viewing angle control, and picking. Events sent and received by a 3D data viewer include cursor position tracking, projection transformation data, and picking events. Projection transformation data is information needed to apply a transform to the 3D data to generate a 2D image to be displayed on a monitor, for a given viewing angle and distance.","Preferably, events are divided into two categories: group state (stateful) events and transitory events. Group state events include image manipulation, copaging, and pick set manipulation events. Groups state events modify the group state on each client , and the group state is enforced to be synchronized between different clients . Preferably, the loss of state events in the transmission process is prevented completely, since such a loss would lead to desynchronization of the group state and would effect subsequent state data. Preventing data loss can be achieved through the use of a reliable multicast protocol which verifies the receipt of data, such as a protocol implemented using the open source JGroups (Javagroups) API. Delivery of a stateful event is complete only when all recipient clients have confirmed receipt of the event. Transitory events include cursor position tracking events. Loss of some transitory event data is acceptable. For transitory events, maintaining a high-throughput and low latency is preferably more important than preventing data loss. Transitory events are preferably transmitted using a transmission protocol which does not verify receipt of data.","The transmitted events are parameterized object descriptions (object parameters), rather than full graphical descriptions (pixel sequences). A set of object parameters includes, for example: a cursor\/client identity, two cursor coordinates, and a cursor color. A client receiving the object parameters can construct a graphical representation of the object (e.g. cursor) locally. A full graphical description of a cursor would include an array of pixels defining an image area containing the graphical representation of the cursor.","A user using a client  may select an existing event generator from the list retrieved from server , as shown at  in . Choosing an existing event generator causes the event generator of the selected type to start running on client , and communicate with event generators of that type on other clients . A user may also start a new event generator (step ) and enable collaboration for that event generator (step ). Enabling collaboration leads to the transfer of an event generator identifier to server  for addition to the event generator list accessible by other clients . Starting or selecting an existing event generator such as a data viewer can involve transferring a data set including seismic data and associated other data (e.g. pick set, velocity model) from server  or one client  to another client .","In a step , multiple clients  perform collaborative viewing, manipulation, and editing of geophysical data and associated data. The collaborative process includes sending and receiving events directly to\/from other clients , as described in further detail below. Each client  updates its display to reflect the actions performed by other clients  in real time, e.g. with an average latency of less than 1 s, preferably on the order of tens to hundreds of ms, ideally on the order of ms (i.e. less than 10 ms). In practice, it was observed that latencies on the order of a few ms are commonly achieved for clients collaborating from locations in Houston, Tex., and Silicon Valley, Calif. Once a user decides to end his or her participation in the collaborative process, the user can save the collaboration results on server  (step ), close the event generator(s) running on the corresponding client , and leave the collaboration room.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 3","FIG. 4"],"b":["200","24","206","22","208","210","212","214"]},"The user can then engage in collaborative viewing, manipulation, and editing of geophysical data and associated data, as shown generally at . Preferably, the collaborative process can include collaborative cursor tracking (step ), copaging (step ), picking (step ), and image manipulation (step ). Steps \u2013 can be performed repeatedly, in parallel and in any order. Once the collaboration process is over, the user can close the data viewer (step ). Each of the collaborative steps \u2013 is described in further detail below.","Collaborative Cursor Display","In step , a client  sends current cursor position data for that client directly to all other clients, and receives current cursor position data from all other clients. The current cursor position includes an identification of the client and two cursor coordinates. Each client  then locally generates corresponding displays of the local cursor and the remote cursors, and generates displays of corresponding cursor labels.  shows two exemplary cursor displays labeled \u201cUser \u201d and \u201cUser .\u201d Each time a cursor is moved by its corresponding user, the corresponding client  sends directly to all other clients the current cursor position. Each client  updates its cursor display whenever the local cursor or a remote cursor has changed position. The cursor updating is performed in real time. The cursor position data is preferably transmitted directly between different clients , rather than indirectly through server , in order to minimize the latency of the cursor display process. Generally, the cursor position data may also be transmitted through server . The latency of the collaborative display process is also minimized by transmitting only cursor parameters needed to reconstruct each cursor locally, rather than a graphical representation of the cursor. Generating the cursor displays is then performed locally on each client  using the parameterized cursor display data.","Collaborative Copaging","In step , a client  can change the current 2D page or image displayed by the viewer. The current 2D page is typically a slice within a larger 3D volume comprising a plurality of 2D slices. Client  alters the data display to reflect the updated page, and sends updated page identification information directly to all other clients . All other clients then automatically update their data display to reflect the current 2D page chosen by the first client . Preferably, a user can choose to control co-paging manually, or automatically in a timed sequence.","Collaborative Picking","In a step  shown in , a user can employ a corresponding client  to collaboratively change a pick set corresponding to the current image displayed by the 2D viewer.  is a flowchart illustrating a collaborative picking method  according to a preferred embodiment of the present invention. In a first step , a client  determines whether any collaborative pick set corresponding to a selected data viewer is active. If no pick set is active, a user can direct client  to create a new active collaborative pick set (step ). A pick set is preferably a shared state (e.g. a file or part of a file) stored in a synchronized manner on all clients , and associated with a 3D data set. Each pick can correspond to a location within a 2D or 3D image. The pick set preferably includes an ordered list of 3D coordinates for a plurality of picks, an identification of the 3D image to which the picks correspond, and a pick set name. The pick set is displayed by generating graphical representations of pick icons at each location, and of segments sequentially interconnecting the picks in the list. The collaborative pick set is maintained in a common, synchronized shared state on all participating clients . Multiple pick sets can be grouped together in a horizon.","Once a collaborative set is active, any client  can add (step ), move (step ) or delete (step ) picks to\/from the pick set. Preferably, a user may also change the display color of a pick set. The pick set modification commands are multicast to all other clients  in real time. The corresponding display generated by each viewer is updated to reflect the modifications to the pick set, by adding, moving, or deleting pick representations (icons) and associated segments from the corresponding image display. Any user may employ a corresponding client  to save the collaborative pick set.","Collaborative Image Manipulation","In a step  shown in , a user can employ a corresponding client  to collaboratively perform image manipulation operations on the current image displayed by the 2D viewer. The manipulated image is ordinarily a velocity model image. Image manipulation operations can include changing a velocity model displayed according to user commands, for example by moving velocity interface boundaries, filling an area defined between pick sets with a constant velocity, or painting a velocity within a region with a brush tool having a customizable width. A shared state is maintained for the current velocity model on all clients  that participate in a collaboration session.","In the preferred approach described above, parameterized interaction-related tasks are transferred directly between different clients , although generally server  may also be used as a communication relay, particularly when direct communication between clients  is difficult. Server  is preferably used only for computationally-intensive geophysical data processing steps such as imaging and velocity analysis, while communication, display generation, picking, co-paging and other tasks are performed locally on each client  and are transferred directly to other clients . The data transferred is parameterized, minimal meta-information (e.g. cursor coordinates) required to generate the displays by processing performed on each client , rather than processed graphical information (e.g. a set of cursor pixel locations). This parameterized, direct communications approach reduces the load on the links between clients  and server .","By contrast, in a system employing the X-protocol and it variations (e.g. the X11R6 Broadway extension), the display rendering and other related operations are performed on the server, and each client connects to other clients only through the server. While such a \u201cthin-client\u201d approach allows a conventional server application to be run remotely without editing, the network communications can suffer from high latency. The high latency is a consequence of the relatively large amount of graphical data sent between the server and the clients, and of the centralization of all communications through each client-server link. Collaboration in a system using a \u201cthin-client\u201d approach can be frustrating, particularly as the number of users increases.","The present invention further provides computers and computer systems programmed to perform the methods described herein, computer-readable media encoding instructions to perform the methods described herein, and computer apparatus comprising means for performing the method steps described herein. Suitable means for performing the method steps described herein include computer hardware programmed with corresponding software.","It will be clear to one skilled in the art that the above embodiments may be altered in many ways without departing from the scope of the invention. Accordingly, the scope of the invention should be determined by the following claims and their legal equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
