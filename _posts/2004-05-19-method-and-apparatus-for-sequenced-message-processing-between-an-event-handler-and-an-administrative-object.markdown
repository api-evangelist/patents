---
title: Method and apparatus for sequenced message processing between an event handler and an administrative object
abstract: An apparatus for and method of predefining a series of messages between a client application and a server application which needed to be transferred and honored in sequence to perform a compound service request. The sequence of messages is predefined through the use of an Action Control List, whereby the event handler defines the messages to the administrative object.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08281319&OS=08281319&RS=08281319
owner: Unisys Corporation
number: 08281319
owner_city: Blue Bell
owner_country: US
publication_date: 20040519
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO CO-PENDING APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["U.S. patent application Ser. No. 10\/848,902, filed May 19, 2004, and entitled, \u201cMethod and Apparatus for Combining Extended Markup Language and Key Value Pairs into the Format of an Interprocess Message Payload\u201d, now U.S. Pat. No. 7,587,719; U.S. patent application Ser. No. 10\/848,473, filed May 19, 2004, and entitled, \u201cInterface Cool ICE OLEDB Consumer Interface\u201d, now U.S. Pat. No. 7,217,971; U.S. patent application Ser. No. 09\/188,629, filed Nov. 9, 1998, and entitled, \u201cCool ICE data Wizard\u201d, now U.S. Pat. No. 6,295,531; U.S. patent application Ser. No. 09\/188,649, filed Nov. 9, 1998, and entitled, \u201cCool ICE Column Profiling\u201d, now U.S. Pat. No. 6,496,821; U.S. patent application Ser. No. 10\/849,511, filed May 19, 2004, and entitled, \u201cStored Procedure\u201d, now U.S. Pat. No. 8,185,542; and U.S. patent application Ser. No. 09\/188,725, filed Nov. 9, 1998, and entitled, \u201cCool ICE State Management\u201d, now U.S. Pat. No. 6,324,639, are commonly assigned co-pending applications.","1. Field of the Invention","The present invention generally relates to diverse data base management systems and more particularly relates to enhanced message handling techniques which provide sequencing of multiple messages between client and server applications.","2. Description of the Prior Art","Data base management systems are well known in the data processing art. Such commercial systems have been in general use for more than 20 years. One of the most successful data base management systems is available from Unisys Corporation and is called the Classic MAPPER\u00ae data base management system. The Classic MAPPER system can be reviewed using the Classic MAPPER User's Guide which may be obtained from Unisys Corporation.","The Classic MAPPER system, which runs on proprietary hardware also available from Unisys Corporation, provides a way for clients to partition data bases into structures called filing cabinets and drawers, as a way to offer a more tangible format. The MAPPER data base manager utilizes various predefined high-level instructions whereby the data base user may manipulate the data base to generate human-readable data presentations called \u201creports\u201d. The user is permitted to prepare lists of the various predefined high-level instructions into data base manager programs called \u201cMAPPER Script\u201d. Thus, users of the Classic MAPPER system may create, modify, and add to a given data base and also generate periodic and aperiodic reports using various MAPPER Script.","However, with the Classic MAPPER system, as well as with similar proprietary data base management systems, the user must interface with the data base using a terminal coupled directly to the proprietary system and must access and manipulate the data using the MAPPER Script command language of Classic MAPPER. Ordinarily, that means that the user must either be co-located with the hardware which hosts the data base management system or must be coupled to that hardware through dedicated telephone, satellite, or other data links. Furthermore, the user usually needs to be schooled in the command language of Classic MAPPER (or other proprietary data base management system) to be capable of generating MAPPER Script.","This communication tends to be \u201cinteractive\u201d over a session which involves a number of separate and individual transactions. That means that a sequence of messages is transferred between client and server applications. This communication requirement is completely inconsistent with the protocol of publically accessible digital data communication networks, such as the Internet, and is particularly problematic when implementing an interface between otherwise incompatible legacy data base management systems. As a result, prior approaches have tended to force users to individually transfer each of the sequential messages required for a given session.","The present invention overcomes the disadvantages of the prior art by providing a method of and apparatus for simplifying sequential message traffic between client and server applications involving legacy data base management systems. This technique provides for individually transferring the required messages between client and server applications under control of an Action Control List.","The preferred mode of the present invention provides a generic messaging protocol that can be used by client\/server applications. The properties can be transmitted in different data types such as integer, boolean, BSTR, and VARIANT. The message object also provides the capability to transmit XML, as either a document included in the message, or as XML contained in individual properties. An object API (Applications Programming Interface) is provided to set and retrieve message properties and document information.","The object API also provides the capability for the message to render itself into a byte stream for transmission across a communications protocol, as well as the ability to reconstitute state from a byte stream received.","The protocol consists of two primary classes used by the consumer application: the CDACSMesage class and the CDACSMsgProplterator class. The CDACSMessage class provides the primary interface to the message processing with the ability to construct, set and get attributes, or read\/write out message content. The CDACSMsgPropIterator class provides an iterator object interface to move through a sequence of properties in the message, so that the keys and value of message properties can be accessed. The message body is a set of CComVariant properties, and a CComBSTR buffer. The CDACSMessage class provides methods for the consumer to manage the properties and document buffer.","A BSTR is a pointer to a buffer of Unicode characters. The length of the buffer is offset four bytes before the characters begin. The entire buffer is null-terminated, but there can also be null characters embedded in the buffer. The length of the BSTR is one less than the number of characters in the buffer (the buffer includes a final null character), not the length to the first null, in reality, a Unicode \u201ccharacter\u201d is type defined as an unsigned short integer, so a BSTR can point to generic binary information as well as text.","A BSTR can be utilized as though it were a simple pointer to WCHAR, except for finding length or managing the attached buffer to which it points. For memory management, the Windows libraries provide \u201csystem\u201d procedures (SysAllocString, SysFreeString, SysStringLen, etc.), which are packaged conveniently into the CComBSTR class methods.","To the CDACSMessage consumer, the properties and the attached document buffer constitute the message data. A message need not have both properties and document. It can consist entirely of properties with no document, or have no properties and consist solely of the attached document.","Properties are indexed by unique integer keys. The consumers define meaning of these keys and the associated CComVariant values. As noted above, the contents of the document can be non-textual binary data.","The preferred embodiment of the present invention provides an Action Control List object that defines message sequencing and encapsulates the message content that can be exchanged between an event handler and an administrative object. The Action Control List provides a lightweight object to process a series of messages, maintaining state relative to the current action.","To efficiently sequence the series of messages, the communication is decoupled from the event processing using the Action Control List. This allows the event handler to perform communications with the server application that are independent of administrative object event processing. For example, the need for the client and server applications to initialize requires messaging independent of any specific administrative operation.","Another aspect is that the Action Control List is in effect a message object itself, extended by the concept of a control list. The action control list derives from a message object, and the message contains the request or response information pertaining to the current action in the list. Hence the administrative object can directly access the request\/response information pertaining to the current action in the list.","Using the command class model requires that a series of concrete command subclasses be constructed that are tightly bound to each administrative object that requires communications in response to an event. The advantage of using the Action Control List is that it provides a lightweight class that is not tightly coupled to the administrative object. Administrative objects encapsulate the action processing and message content relative to the specific event. The Action Control List provides a single class to use for message sequencing and exchange. This allows for better maintainability in terms of administrative object event handling, because the model requires fewer classes be built in order to handle events.","The present invention is described in accordance with several preferred embodiments which are to be viewed as illustrative without being limiting. These several preferred embodiments are based upon Series 2200 hardware and operating systems, the Classic MAPPER data base management system, and the BIS software components, all available from Unisys Corporation. When used herein, OLEDB refers to a COM-based Application Programming Interface (API) designed to provide access to a wide range of data sources. OLEDB includes SQL functionality but also defines interfaces suitable for gaining access to data other than SQL data. COM facilitates application integration by defining a set of standard interfaces. Each interface contains a set of functions that define a contract between the object implementing the interface and the client using it. A UDL file contains the complete connection string information, including the data source, userid, password, and any other information needed to logon to and fetch data.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 1","b":["290","286","292","290","288","294"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 2"},"In accordance with the table of , the leftmost column lists the basic functions. The corresponding entry within the rightmost column defines the operation associated therewith.","The CDACSMessage class does not provide methods corresponding to the CComBSTR methods ReadFromStream and WriteFromStream, to write the document to an IStream. Instead, it provides the Save and Load methods for converting between the entire object and a simple memory buffer. Furthermore, the CDACSMessage class does not provide methods corresponding to the CComBSTR method LoadString for loading a string from a resource.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 4","b":["1","5","290","300","298","5","1","300"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 5","b":["1","6","302","304","306","6","1","302","7","302","306"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 6","b":["308","324","318","326","324","328"]},"The operation of client user interface application  is provided by event handler . It notifies administrative object  as shown. In response thereto, administrative object  calls command object subclasses , , , and  in that sequence. Each of these command object subclasses sequentially requests service from server application  via communication . To perform the desired compound function, services must be sequentially requested from server application  in the order shown.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 7","FIG. 6"],"b":["330","332","332","334","332","342"]},"However, in this preferred embodiment, event handler  and administrative object  are linked by Action Control List . All of the required messages are defined by Action Control List  in the needed sequence. As a result, Action Control List  only needs to be initialized for a given compound service and thereafter, each of the required messages is defined in order.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 8","FIG. 7"],"b":["352","352","346","346","348"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 9","FIG. 7"],"b":"338"},"Having thus described the preferred embodiments of the present invention, those of skill in the art will be readily able to adapt the teachings found herein to yet other embodiments within the scope of the claims hereto attached."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Other objects of the present invention and many of the attendant advantages of the present invention will be readily appreciated as the same becomes better understood by reference to the following detailed description when considered in connection with the accompanying drawings, in which like reference numerals designate like parts throughout the figures thereof and wherein:",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 7","FIG. 13"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
