---
title: Media forking
abstract: In an example embodiment, a Voice over IP (VoIP) system that provides for media forking at the caller's (ingress) gateway. The gateway receives data with a first address on a recording server for sending forked caller stream media and a second address on the recording server for sending forked called party stream media. The gateway sends forked media from the caller stream to the first address and forked media from the called party media to the second address. This provides a recording from the caller's perspective. By using this technique, the recording can include for example call transfer data and interactive voice response (IVR) data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09071684&OS=09071684&RS=09071684
owner: Cisco Technology, Inc.
number: 09071684
owner_city: San Jose
owner_country: US
publication_date: 20091117
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","OVERVIEW OF EXAMPLE EMBODIMENTS","DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["The present disclosure relates generally to streaming communications.","Telephone call recording may be desirable for several reasons. For example call recording may enable voice quality analysis to troubleshoot a network. Call recording may also be required for legal reasons such as lawful intercept. Two types of call recording may be employed, call data recording and call content recording. Call data recording includes recording call events, for example, recording when the call originated, when and by who a call is terminated, or if a call is forwarded elsewhere. This type of recording, also known as pen register, provides the phone number of both the person called and the person calling, along with call events and time-date stamps of when the events occurred. In contrast, call content includes the actual content of the call, i.e., the conversation that takes place, and may also include call data.","The following presents a simplified overview of the example embodiments in order to provide a basic understanding of some aspects of the example embodiments. This overview is not an extensive overview of the example embodiments. It is intended to neither identify key or critical elements of the example embodiments nor delineate the scope of the appended claims. Its sole purpose is to present some concepts of the example embodiments in a simplified form as a prelude to the more detailed description that is presented later.","In accordance with an example embodiment, there is disclosed herein an apparatus, comprising an interface configured to send and receive data, and logic coupled to the interface. The logic is responsive to receiving data on the interface indicating a source is attempting to establish communications with a destination to send data to establish communications to a customer voice portal, wherein the data to establish communications comprises data indicating a media forking capability. The logic is responsive to receiving via the interface data requesting to enable media forking to reserve resources for media forking. The logic is responsive to receiving via the interface data representative of a first destination address for a recording server for a source media stream to fork the source media stream and send replicated packets of the source media stream to the first destination address. The logic is responsive to receiving via the interface data representative of a second destination address for a recording server for a destination media stream to fork the destination media stream and send replicated packets of the destination media stream to the second destination address","In accordance with an example embodiment, there is disclosed herein an apparatus comprising an interface configured to send and receive data, and logic coupled to the interface. The logic is configured to receive a Session Initiation Protocol INVITE message via the interface from an ingress gateway to establish a call between a caller coupled to the ingress gateway and a called party. The logic forwards a new call request to intelligent contact management logic. The logic receives data from the intelligent contact management logic to connect a call between the caller and called party, the data from the intelligent contact management logic further comprising data with instructions to record the call. The logic is responsive to the data with instructions to record the call to select a recording server. The logic is responsive to selecting a selected recording server to send two Session Initiation Protocol (SIP INVITE messages to the selected recording server via the interface, the first SIP INVITE message requesting a first address for sending a caller stream for recording and the second SIP INVITE message requesting a second address for sending a called party stream for recording. The logic is responsive to receiving the first and second address for the caller and called party stream respectively to send a SIP RE-INVITE message via the interface to the ingress gateway, wherein the RE-INVITE message comprises three Session Description Protocol (SDP) m-lines, the first m-line comprising data representative of the called party SDP data, the second m-line comprising an Internet Protocol (IP) address, port and codec for the caller stream and the third m-line comprises an IP address, port and codec for the called party stream.","In accordance with an example embodiment, there is disclosed herein a method comprising receiving a call request from a caller attempting to establish a call with a called party. A Session Initiation Protocol (SIP) INVITE message to a Customer Voice Portal, the INVITE comprising data indicating a media forking capability is sent in response to receiving the call request. A SIP RE-INVITE message comprising Session Data Protocol (SDP) data comprising a first m-line with data representative of a first address on a recording server to receive a caller stream and a second m-line with data representative of a second address on the recording server to receive a called party stream is received. A caller media stream is forked and a replicated copy of packets for the caller media stream is sent to the first address on the recording server responsive to the SIP RE-INVITE message. A called party media stream is forked and a replicated copy of packets for the called party media stream is sent to the second address on the recording server responsive to the SIP RE-INVITE message.","This description provides examples not intended to limit the scope of the appended claims. The figures generally indicate the features of the examples, where it is understood and appreciated that like reference numerals are used to refer to like elements. Reference in the specification to \u201cone embodiment\u201d or \u201can embodiment\u201d or \u201can example embodiment\u201d means that a particular feature, structure, or characteristic described is included in at least one embodiment described herein and does not imply that the feature, structure, or characteristic is present in all embodiments described herein.","In an example embodiment described herein is a Customer Voice Portal (CVP) recording feature (also referred to herein as \u201cMedia Forking\u201d) that provides an end-to-end Session Initiation Protocol (SIP) Voice over Internet Protocol (VoIP) recording mechanism for Interactive Voice Response (IVR) in a contact center environment. This feature allows calls to be recorded at the ingress gateway in the contact center environment. For example, the ingress tap point can be a TDM (Time division multiplexing) call from a caller arriving at a TDM gateway. The recording mechanism can record both the caller and called party audio streams (e.g. call agent, IVR, conferencing bridge, etc). The recording will reflect how the call was perceived by the caller, e.g., the recording reflects everything that the caller experienced during the call. Recording of the call can continue even during agent transfers and while processing interactive voice response signals. Recording may be controlled via a scripting environment and\/or via an Agent Desktop using web services. Although the example embodiments herein are directed to a CVP environment, those skilled in the art should readily appreciate that the principles described herein are applicable to any Back-To-Back User Agent (B2BUA).",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1","b":["100","102","104","100"]},"Gateway  receives a call from a caller  represented by . As used herein, gateway  is an ingress gateway.","In response to the call, gateway  sends an SIP Invite  to Customer Voice Portal (\u201cCVP\u201d or call server) . In an example embodiment, the invite message comprises data indicating that gateway  has forking capabilities. In accordance with example embodiments, the following SIP headers may be employed to communicate forking capabilities:\n\n","CVP  notifies ICM (Intelligent Contact Management)  of the call as indicated by . In an example embodiment, ICM  suitably comprises logic that enables call agent management and call routing in a contact center environment. \u201cLogic\u201d, as used herein, includes but is not limited to hardware, firmware, software and\/or combinations of each to perform a function(s) or an action(s), and\/or to cause a function or action from another component. For example, based on a desired application or need, logic may include a software controlled microprocessor, discrete logic such as an application specific integrated circuit (ASIC), a programmable\/programmed logic device, memory device containing instructions, or the like, or combinational logic embodied in hardware. Logic may also be fully embodied as software, which performs the functionality described herein when executed by a processor.","ICM  responds with a script that informs CVP  that the caller should be transferred to a (Voice Extensible Markup Language or Voice XML) VXML gateway  for Interactive Voice Response (IVR) treatment. IVR is a phone technology that allows a computer to detect voice and touch tones using a normal phone call. In addition, the script informs CVP  that recording will be used at some point in the call so that the IOS reserves sufficient DSP resources (the IOS needs to reserve DSP resources at the start of the call). In this example, the script further informs CVP  that recording is to begin immediately.","CVP  sends an INVITE to VXML gateway  as represented by . VXML gateway  responds with a SIP success \u201c200 OK\u201d message as represented by . In an example embodiment, the response from VXML gateway  may further comprise IP and port addresses. CVP  proxies the \u201c200 OK\u201d message from VXML gateway  to gateway . This establishes Real Time Protocol (RTP) streams between the caller , via gateway  and VXML gateway  as represented by .","CVP  selects a recording server  (or recording server proxy). The recording server selection will be based on the location of recording server  and gateway . The codec (not shown) configured on the selected recording server (recording server  in this example) will drive the codec selection. CVP  will send two separate SIP INVITE's represented by  to recording server  providing tagging data that would prove useful in helping the customer locate and process recordings at a later time. The following tagging data will be sent to the recording server. The tagging data may suitably comprise a call identifier (call id), codec, and possibly other data. Recording server  responds with two \u201c200 OK\u201d messages, the first message comprising data identifying an IP address and port for the near-end stream and the second message comprising data identifying the IP address and port for the far-end stream. As used in this example, because gateway  is the ingress gateway and recording is being performed at the ingress gateway, the near-end stream is the stream that is sent from gateway  (for example the stream sent from the caller to the called party) and the far-end stream is the stream that is received at the gateway (for example the stream from the called party to the caller).","CVP  sends a RE-INVITE, represented by  to gateway  comprising data representative of the IP address, port and codec on the recording server that is expecting to receive the caller's voice, and data representative of the IP address, port and codec on the recording server that is expecting to receive the called party's voice. The RE-INVITE may suitably incorporate one or more of the following SDP (Session Description Protocol) headers:\n\n","For this example, the RE-INVITE CVP  sends to gateway  may suitably comprise the following 3 m-lines:\n\n","In response to the RE-INVITE, gateway  forks two separate streams (such as RTP streams) to recording server . One stream  is the caller voice, one stream  is the called party's voice. Whenever the caller needs to be re-directed to a new transfer destination by CVP  (for example a new agent phone, VXML gateway, Music On Hold (MOH) server because of call transfer, conferencing, bridging, etc.), CVP  will send a SIP INFO message to recording server  with the following tagging data to enable recording server  to \u201cbookmark\u201d the recording with information pertaining to the life cycle of the call.",{"@attributes":{"id":"p-0037","num":"0048"},"figref":"FIG. 2","b":["200","102","102","202","106","202","102","102"]},"CPV  sends signal  to ICM  indicating a new call is being setup. ICM  responds with signal  to gateway  indicating gateway  should transfer the call to VXML gateway (VXML GW) , enable recording, and start recording.","CVP  sends an INVITE SDP-OGW  to VXML gateway . VXML gateway  responds with \u201c200 OK\u201d SDP-VXMLGW . This sets up RTP streams between gateway  and VXML gateway .","Two INVITE's ,  are sent to recording server , one  for the caller stream and one  for the called party stream. For each INVITE, the recording server returns a \u201c200 OK\u201d with the IP address, port and codec (g729) on which the server will listen for the media represented by ,  respectively. The caller's voice is received on the channel opened for the caller and the called party's voice on the channel opened for the called party. It is CVP's  responsibility to map those channels into the SDP that is sent to the OGW (originating) gateway  on the RE-INVITE. The codec selection is determined by the order of codec(s) configured on recording server . CVP  simply proxies the codec(s) to the ingress gateway  and the codec selected for the recording is negotiated between gateway  and recording server . CVP  sends an acknowledgement (ACK)  to indicate it received the IP address, port and codec for both streams (note that there may be more than one called party stream, e.g. a conference call, but for simplicity this example shows only one called party stream).","CVP  sends a \u201c200 OK\u201d signal  with the SDP of VXML gateway  to the gateway . X-cisco-enableforking is added as a SIP session header to signify that DSP resources need to be reserved for potential media forking in this call. Gateway  confirms receipt of signal  with ACK . CVP  sends ACK  to VXML gateway  responsive to receiving ACK .","CVP  sends a RE-INVITE  to gateway  (the originating gateway or OGW) containing the SDP of the VXML GW  plus two extra m-lines. In an example embodiment, A SIP session header of X-cisco-nopassthrough is also included to indicate to gateway  that this RE-INVITE should not be passed through (to the caller). A nopassthrough may be employed for signaling specific types of gateways. In this example, RE-INVITE  contains two extra m-lines (an example format of these m-lines is described herein supra) to convey the IP address, port and codec (g729 in this example) of the recording server listening ports. Gateway  responds with \u201c200 OK\u201d signal  and CVP  responds with ACK .",{"@attributes":{"id":"p-0043","num":"0054"},"figref":"FIG. 3","b":["300","102","102","302","106","302","102","102"]},"CPV  sends signal  to ICM  indicating a new call is being setup. ICM  responds with signal  to gateway  indicating gateway  should transfer the call to VXML gateway (VXML GW) , enable recording, and start recording.","VCP  sends an INVITE SDP-OGW  to VXML gateway . VXML gateway  responds with \u201c200 OK\u201d SDP-VXMLGW . This sets up RTP streams between gateway  and VXML gateway .","CVP  then sends an INVITE SDP-OGW  to VXML gateway . VXML gateway  responds with \u201c200 OK\u201d DSP-VXMLGW signal . CVP  sends a \u201c200 OK\u201d signal  with the SDP of VXML gateway  to the gateway . X-cisco-enableforking is added as a SIP session header to signify that DSP resources need to be reserved for potential media forking in this call.","ICM  then sends signal  to CVP  to start recording. In response to signal , two INVITE's ,  are sent to recording server , one invite  for the caller stream and one invite  for the called party stream. For each INVITE, the recording server returns a \u201c200 OK\u201d with the IP address, port and codec (g711) on which the server will listen for the media represented by ,  respectively. The caller's voice is received on the channel opened for the caller and the called party's voice on the channel opened for the called party.","CVP  sends a RE-INVITE  to gateway  (the originating gateway or OGW) containing the SDP of the VXML GW  plus two extra m-lines. In this example, RE-INVITE  contains two extra m-lines (an example format of these m-lines is described herein supra) to convey the IP address, port and codec (g711 in this example) of the recording server listening ports.",{"@attributes":{"id":"p-0049","num":"0060"},"figref":["FIG. 4","FIG. 3","FIG. 4"],"b":"400"},"ICM  signals  CVP  to stop recording. CVP  then sends a RE-INVITE  to gateway . Re-INVITE  contains 3 m-lines. The first m-line for the original media stream to the VXML GW (VXML gateway  in this example) will remain unchanged. The next 2 m-lines for the recording server media streams will both be marked as a=inactive. Gateway  responds with \u201c200 OK\u201d signal . CVP  sends SIP BYE messages ,  (one for each call leg) to recording server . The BYE messages instruct recording server  to stop recording. In an example embodiment, recording server  closes the recording file (for example a way file) and opens a new file when recording is restarted.","ICM  signals  CVP  to begin recording. In response to signal , two INVITE's ,  are sent to recording server , one invite  for the caller stream and one invite  for the called party stream. For each INVITE, the recording server returns a \u201c200 OK\u201d with the IP address, port and codec (g711) on which recording server  will listen for the media represented by ,  respectively. The caller's voice is received on the channel opened for the caller and the called party's voice on the channel opened for the called party. CVP  sends RE-INVITE  to gateway  with three m-lines. The first m-line for the original media stream to VXML gateway  is unchanged from the original call setup, the other two m-lines containing data with the IP address, port and codec to send each stream to recording server .",{"@attributes":{"id":"p-0052","num":"0063"},"figref":["FIG. 5","FIG. 3","FIG. 4"],"b":["500","108"]},"ICM  sends signal  to instruct CVP  to mask recording. In response, CVP  sends to SIP INFO-MASK-RECORDING signals ,  to recording server . One signal is sent for each stream being recorded (near-end and far-end in this example but in conference calls a signal may be sent for the near-end and each far-end). During this time, recording server  inserts a tone into the recording file.","ICM  sends signal  to instruct CVP  to unmask recording. In response, CVP  sends SIP UNMASK-RECORDING signals ,  to recording server . One signal is sent for each stream being recorded (for example one for near-end and one for far-end). Recording server  resumes recording responsive to receiving signals , .",{"@attributes":{"id":"p-0055","num":"0066"},"figref":"FIG. 6","b":["600","108"]},"ICM  sends signal  to instruct CVP  to mute recording. In response, CVP  sends to SIP INFO-STOP-RECORDING signals ,  to recording server . One signal is sent for each stream being recorded (near-end and far-end in this example but in conference calls a signal may be sent for the near-end and each far-end). In an example embodiment, recording server closes the recording file and will open a new file responsive to receiving a SIP INFO-START-RECORDING message.","ICM  sends signal  to instruct CVP  to un-mute recording. In response, CVP  sends SIP START-RECORDING signals ,  to recording server . One signal is sent for each stream being recorded (for example one for near-end and one for far-end). Recording server  resumes recording responsive to receiving signals , .",{"@attributes":{"id":"p-0058","num":"0069"},"figref":["FIG. 7","FIG. 3","FIG. 3"],"b":["700","300"]},"ICM  signals CVP  to connect to agent ( in this example) via signal . In response, CVP  sends RE-INVITE signal  to gateway . RE-INVITE signal  contains data informing gateway  that recording is inactive (for example by inserting m-lines a=inactive). Gateway  responds with \u201c200 OK\u201d . CVP  sends SIP BYE messages ,  (one for each recording) to recording server . These tell recording server  to stop recording. In this example, recording will start after the caller has been connected to the agent. In an example embodiment, CVP  will record a ringtone (e.g. ringtone.wav).","Because SIP currently provides no inherent method of playing a mid-call ringtone to the caller after the initial \u201c200 OK\u201d, in an example embodiment, CVP  invites VXML gateway  to play the wave file (ringtone.wav). CVP  sends INVITE  to VXML gateway . INVITE  contains the wave file (ringtone.wav) to play and informs VXML gateway  that the originating gateway (SDP-OGW) is gateway . VXML gateway  responds with \u201c200 OK\u201d  and the SDP ringtone.wav. CVP  sends RE-INVITE  to gateway  with the ringtone file (ringtone.wav) and data informing gateway  to reserve capacity for media forking and that recording is inactive. Gateway  responds with \u201c200 OK\u201d .","CVP  sends INVITE  to the Unified Call Manager (UCM)  to invite the new agent. UCM  may be any suitable call manager (or other IP-PBX gateway), such as for example a Cisco Unified Call Manager (CUCM) available from Cisco Systems, Inc. 170 West Tasman Dr., San Jose, Calif. 95134. UCM  responds with \u201c200 OK\u201d  along with data about the agent (SDP-agent) when the answers the call.","CVP  sends RE-INVITE  (SDP-Agent) to gateway  responsive to the new agent answering. RE-INVITE  also contains data indicating that recording is still inactive (for example forked m-lines inactive). Gateway  responds with \u201c200 OK\u201d . CVP  then sends SIP BYE  to VXML gateway  to turn off the mid-call ringtone.","CVP  sends two INVITE's ,  to recording server , one invite  for the caller stream and one invite  for the called party stream. For each INVITE, the recording server returns a \u201c200 OK\u201d, ,  respectively, with the codec (g711) for the call.","CVP  sends a RE-INVITE  to gateway  (the originating gateway or OGW) containing the SDP of the VXML GW  plus two extra m-lines. In this example, RE-INVITE  contains two extra m-lines (an example format of these m-lines is described herein supra) to convey the IP address, port and codec (g711 in this example) of the recording server listening ports. Note in this example that when the new agent answers, CVP  sends a RE-INVITE  to gateway  with the SDP for the new agent and then separately sends a RE-INVITE  with the SDP for the recording server. Although gateway  could process all the SDP changes at one time (adjusting the main stream before creating the forked streams), it is cleaner if CVP  sends two separate Re-invites , . If only one re-invite had been sent and gateway returns an error code, CVP  would not know whether the error code was for the main voice channel or the recording. Two separate re-invites allows CVP  to treat the main channel RE-INVITE  separately from the recording RE-INVITE .",{"@attributes":{"id":"p-0065","num":"0076"},"figref":["FIG. 8","FIG. 3","FIG. 3"],"b":["800","300"]},"ICM  signals CVP  to connect to agent ( in this example) and stop recording via signal . CVP  responds by sending BYE .","Because SIP currently provides no inherent method of playing a mid-call ringtone to the caller after the initial \u201c200 OK\u201d, in an example embodiment, CVP  invites VXML gateway  to play the wave file (ringtone.wav). CVP  sends INVITE  to VXML gateway . INVITE  contains the wave file (ringtone.wav) to play and informs VXML gateway  that the originating gateway (SDP-OGW) is gateway . VXML gateway  responds with \u201c200 OK\u201d  with SDP ringtone.wav. CVP  sends RE-INVITE  to gateway  with the ringtone file (ringtone.wav). In addition, RE-INVITE  contains data instructing gateway  that recording is inactive (e.g. two SDP m-lines with a=inactive) Gateway  responds with \u201c200 OK\u201d .","CVP  sends SIP BYE messages ,  (one for each recording) to recording server . These tell recording server  to stop recording.","CVP  sends INVITE  to the Unified Call Manager (UCM)  to invite the new agent. UCM  may be any suitable call manager (or other IP-PBX gateway), such as for example a Cisco Unified Call Manager (CUCM) described herein supra. UCM  responds with \u201c200 OK\u201d  along with data about the agent (SDP-agent) when the answers the call. CVP  sends BYE  to VXML gateway  to terminate the ringtone.","CVP  sends RE-INVITE  (SDP-Agent) to gateway  responsive to the new agent answering. RE-INVITE  contains data indicating that recording is still inactive (for example forked m-lines inactive). Gateway  responds with \u201c200 OK\u201d .",{"@attributes":{"id":"p-0071","num":"0082"},"figref":["FIG. 9","FIG. 1"],"b":["900","104","102","902","106","902","102","904","112","112","906","106","110"]},"CVP  sends INVITE  to VXML gateway . INVITE  contains data indicating the originating gateway (gateway  in this example\u2014SDP-OGW). VXML gateway  signals \u201c200 OK\u201d  to CVP . Signal  may suitably comprise data identifying VXML gateway  (SDP-VXML GW). CVP  completes the call by sending signal  \u201c200 OK\u201d to gateway . Signal  may contain data (SDP-XMLGW, X-enableforking) to setup a stream (such as an RTP stream) between gateway  and VXML gateway  as well as data instructing gateway  to reserve resources for media forking.","Transfer of the call is initiated by ICM  sending a CONNECT signal  to CVP . CVP  initiates a mid-call ringtone being sent to the caller by inviting VXML gateway  to play the wave file (ringtone.wav). CVP  sends INVITE  to VXML gateway . INVITE  contains the wave file (ringtone.wav) to play and informs VXML gateway  that the originating gateway (SDP-OGW) is gateway . VXML gateway  responds with \u201c200 OK\u201d  with SDP ringtone.wav. CVP  sends RE-INVITE  to gateway  with the ringtone file (ringtone.wav) so that gateway  can receive the ringtone. Gateway  responds with \u201c200 OK\u201d .","CVP  sends INVITE  to the Unified Call Manager (UCM)  to invite the new agent. UCM  may be any suitable call manager (or other IP-PBX gateway), such as for example a Cisco Unified Call Manager (CUCM) described herein supra. UCM  responds with \u201c200 OK\u201d  along with data about the agent (SDP-agent) when the answers the call.","CVP  sends RE-INVITE  (SDP-Agent) to gateway  responsive to the new agent answering. Gateway  responds with \u201c200 OK\u201d . CVP  then sends SIP BYE  to VXML gateway  to turn off the mid-call ringtone.","CVP  sends two INVITE's ,  to recording server , one invite  for the caller stream and one invite  for the called party stream. For each INVITE, the recording server returns a \u201c200 OK\u201d, ,  respectively, with the codec (g711) for the call.","CVP  sends a RE-INVITE  to gateway  (the originating gateway or OGW) containing the SDP of the new agent and data representative of the IP address, port and codec of the recording server (server ) to send the forked streams. Note in this example that when the new agent answers, CVP  sends a RE-INVITE  to gateway  with the SDP for the new agent and then separately sends a RE-INVITE  with the SDP for the recording server. Although gateway  could process all the SDP changes at one time (adjusting the main stream before creating the forked streams), it is cleaner if CVP  sends two separate Re-invites , . If only one RE-INVITE had been sent and gateway returns an error code, CVP  would not know whether the error code was for the main voice channel or the recording. Two separate re-invites allows CVP  to treat the main channel RE-INVITE  separately from the recording RE-INVITE . Gateway server responds with \u201c200 OK\u201d signal .",{"@attributes":{"id":"p-0078","num":"0089"},"figref":"FIG. 10","b":"1000"},"UCM  signals CVP  that the call has been placed on hold by sending RE-INVITE . RE-INVITE  also contains data (a=inactive) indicating that recording should stop. CVP  sends RE-INVITE  to gateway . RE-INVITE  sends data (for example a=inactive for all m-lines) indicating that the media is inactive and to close the caller channel to the agent. CVP  will tell the recording server to stop (SIP BYE signals , ) since there is no media to be recorded. Gateway  responds to RE-INVITE  with \u201c200 OK\u201d signal . CVP  sends \u201c200 OK\u201d signal  to UCM .","UCM  sends RE-INVITE signal  to CVP  (no SDP\u2014delayed offer). In order for the gateway to respond with SDP, CVP  has to proxy through the delayed offer as is with no m-lines, even though this technically this violates the m-line rule. Thus, CVP  sends RE-INVITE  (no SDP\u2014delayed offer) to gateway . Gateway  responds with \u201c200 OK\u201d signal  with SDP-OGW (originating gateway). CVP  sends \u201c200 OK\u201d signal  with SDP-OGW to UCM . UCM  responds with an acknowledgement (ACK) signal  with SDP-MOH (Session Description Protocol data for Music On Hold server). CVP  sends ACK  with SDP-MOH to gateway . At this point, recording stops and the caller hears Music on Hold.","When the called party resumes the call, RE-INVITE  to CVP . CVP is responsive to send RE-INVITE (a=inactive for all m-lines because recording is currently inactive)  to gateway . Gateway  responds with \u201c200 OK\u201d signal  to CVP , which sends \u201c200 OK\u201d signal  to UCM .","UCM  sends RE-INVITE  (with no SDP\u2014or a delayed offer) to CVP . CVP  is responsive to RE-INVITE  to send RE-INVITE  (with no SDP\u2014or a delayed offer) to gateway . Gateway  responds with \u201c200 OK\u201d signal  with SDP data for gateway . CVP  sends \u201c200 OK\u201d signal  with SDP data for gateway  to UCM . UCM  responds by sending ACK signal  with SDP-agent data to CVP . CVP  responds to ACK signal  by sending ACK signal  to gateway  with SDP-agent data. At this point the call between the caller and agent has resumed.","CVP  sends INVITE  to recording server  to obtain an address on the recording server to receive the caller (near-end) stream along with data indicating in this example the near-end codec is a g711 codec. Recording server responds with \u201c200 OK\u201d message  that comprises data representative of the IP address, port and codec for the caller stream.","CVP  sends INVITE  to recording server  to obtain an address on the recording server to receive the called party (far-end) stream along with data indicating in this example the far-end codec is a g711 codec. Recording server responds with \u201c200 OK\u201d message  that comprises data representative of the IP address, port and codec for the called party stream.","CVP  sends RE-INVITE  to gateway  with the address on the recording server that is to receive the caller (near-end) stream and the address on the recording server that is to receive the called party (far-end) stream. Gateway  resumes sending a replicated copy of the streams to recording server  responsive to receiving RE-INVITE . At this point recording of the call resumes.",{"@attributes":{"id":"p-0086","num":"0097"},"figref":"FIG. 11","b":"1100"},"ICM  signals CVP  to connect to the second agent (agent  in this example) via signal . CVP  responds with a BYE to the first agent (agent  in this example) to UCM .","CVP  invites VXML gateway  to play the wave file (ringtone.wav) so that the caller hears a ring tone. CVP  sends INVITE  to VXML gateway . INVITE  contains the wave file (ringtone.wav) to play and informs VXML gateway  that the originating gateway (SDP-OGW) is gateway . VXML gateway  responds with \u201c200 OK\u201d  and the SDP ringtone.wav. CVP  sends RE-INVITE  to gateway  with the ringtone file (ringtone.wav) and data informing gateway  that the forked media is inactive (for example by including 2 inactive m-lines in SDP data, e.g. a=inactive). Gateway  responds with \u201c200 OK\u201d signal . CVP  sends to BYE signals ,  to recording server  to turn off recording while the call is transferred.","CVP  sends INVITE  to the Unified Call Manager (UCM)  to invite the second agent. UCM  responds with \u201c200 OK\u201d  along with data about the agent (SDP-agent2) when the second agent answers the call.","CVP  sends RE-INVITE  (SDP-Agent) to gateway  responsive to the new agent answering. In this example, RE-INVITE  also contains data indicating that recording is still inactive (for example forked m-lines inactive). Gateway  responds with \u201c200 OK\u201d . CVP  then sends SIP BYE  to VXML gateway  to turn off the mid-call ringtone.","CVP  sends two INVITE's ,  to recording server , one invite  for the caller stream and one invite  for the called party stream. For each INVITE, the recording server returns a \u201c200 OK\u201d, ,  respectively. In addition, signals ,  may include data indicating the IP address, port and codec for the call (SDP-REC).","CVP  sends a RE-INVITE  to gateway  (the originating gateway or OGW) containing data (for example SDP-agent2, SDP-REC, 3 active m-lines) to instruct gateway  to commence media forking. Gateway  acknowledges the RE-INVITE by sending \u201c200 OK\u201d .",{"@attributes":{"id":"p-0093","num":"0104"},"figref":["FIG. 12","FIG. 3"],"b":"1200"},"ICM  signals CVP  to connect to the second agent (agent  in this example) via signal . CVP  responds with a BYE to the first agent (agent  in this example) to UCM .","CVP  invites VXML gateway  to play the wave file (ringtone.wav) so that the caller hears a ring tone. CVP  sends INVITE  to VXML gateway . INVITE  contains the wave file (ringtone.wav) to play and informs VXML gateway  that the originating gateway (SDP-OGW) is gateway . VXML gateway  responds with \u201c200 OK\u201d  and the SDP ringtone.wav. CVP  sends RE-INVITE  to gateway  with the ringtone file (ringtone.wav) and data informing gateway  that the forked media is inactive (for example by including 2 inactive m-lines in SDP data, e.g. a=inactive). Gateway  responds with \u201c200 OK\u201d signal . CVP  sends to BYE signals ,  to recording server  to turn off recording while the call is transferred.","CVP  sends INVITE  to the Unified Call Manager (UCM)  to invite the second agent. UCM  responds with \u201c200 OK\u201d  along with data about the agent (SDP-agent2) when the second agent answers the call. INVITE  also comprises data indicating that agent2 uses a different codec (g729).","CVP  sends RE-INVITE  (SDP-Agent) to gateway  responsive to the new agent answering. In this example, RE-INVITE  also contains data indicating that recording is still inactive (for example forked m-lines inactive), and data indicating that the second agent is using a g729 codec. Gateway  responds with \u201c200 OK\u201d . CVP  then sends SIP BYE  to VXML gateway  to turn off the mid-call ringtone.","CVP  sends two INVITE's ,  to recording server , one invite  for the caller stream and one invite  for the called party stream. For each INVITE, the recording server returns a \u201c200 OK\u201d, ,  respectively. In addition, signals ,  may include data indicating the IP address, port and codec for the call (SDP-REC). In this example, INVITEs ,  also indicate to use the g711 codec for the forked media streams. This is because the caller is using a g711 codec.","CVP  sends a RE-INVITE  to gateway  (the originating gateway or OGW) containing data (for example SDP-agent2, SDP-REC, 3 active m-lines) to instruct gateway  to commence media forking. In an example embodiment, the first m-line would comprise data indicating a g729 codec and the next two m-lines are for the forked media streams (g711 codec). Gateway  acknowledges the RE-INVITE by sending \u201c200 OK\u201d .",{"@attributes":{"id":"p-0100","num":"0111"},"figref":["FIG. 13","FIGS. 1-12"],"b":["1300","1300","102","106","108","110","112","1300","1302","1304"]},"Interface  is used for communicating with external devices. For example if apparatus  is being employed to implement gateway , interface  would be coupled to the network enabling gateway  to communicate with CVP , Recording Server  and\/or VXML gateway . In an example embodiment, interface  is a wired interface, whereas in another example embodiment interface  may be a wireless interface. In an example embodiment, interface  may suitably comprise a plurality of interfaces. For example, for implementing gateway , interface  may comprise a first interface for communicating with the caller on a packet switched telephone network (PSTN) and a second interface for communicating with CVP , recording server , and\/or VXML gateway . Interface  may be configured to support any protocol such as Ethernet, IP, 802.11, etc.)","Logic  implements the functionality of the device. For example, if apparatus  is used for implementing gateway server  (), logic  performs the functionality for gateway server  described herein (). As another example, if apparatus  is used for implementing Customer Voice Portal (CV)  (), logic  performs the functionality for CVP  described herein (). \u201cLogic\u201d, as used herein, includes but is not limited to hardware, firmware, software and\/or combinations of each to perform a function(s) or an action(s), and\/or to cause a function or action from another component. For example, based on a desired application or need, logic may include a software controlled microprocessor, discrete logic such as an application specific integrated circuit (ASIC), a programmable\/programmed logic device, memory device containing instructions, or the like, or combinational logic embodied in hardware. Logic may also be fully embodied as software, which performs the functionality when executed by a processor.",{"@attributes":{"id":"p-0103","num":"0114"},"figref":["FIG. 14","FIG. 13","FIGS. 1-12"],"b":["1400","1400","1300","102","106","108","110","112"]},"Computer system  includes a bus  or other communication mechanism for communicating information and a processor  coupled with bus  for processing information. Computer system  also includes a main memory , such as random access memory (RAM) or other dynamic storage device coupled to bus  for storing information and instructions to be executed by processor . Main memory  also may be used for storing a temporary variable or other intermediate information during execution of instructions to be executed by processor . Computer system  further includes a read only memory (ROM)  or other static storage device coupled to bus  for storing static information and instructions for processor . A storage device , such as a magnetic disk or optical disk, is provided and coupled to bus  for storing information and instructions.","An aspect of the example embodiment is related to the use of computer system  for media forking. According to an example embodiment, media forking is provided by computer system  in response to processor  executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory  from another computer-readable medium, such as storage device . Execution of the sequence of instructions contained in main memory  causes processor  to perform the process steps described herein. One or more processors in a multi-processing arrangement may also be employed to execute the sequences of instructions contained in main memory . In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement an example embodiment. Thus, embodiments described herein are not limited to any specific combination of hardware circuitry and software.","The term \u201ccomputer-readable medium\u201d as used herein refers to any medium that participates in providing instructions to processor  for execution. Such a medium may take many forms, including but not limited to non-volatile media and volatile media. Non-volatile media include for example optical or magnetic disks, such as storage device . Volatile media include dynamic memory such as main memory . Common forms of computer-readable media include for example floppy disk, a flexible disk, hard disk, magnetic cards, paper tape, any other physical medium with patterns of holes, a RAM, a PROM, an EPROM, a FLASHPROM, CD, DVD or any other memory chip or cartridge, or any other medium from which a computer can read.","Various forms of computer-readable media may be involved in carrying one or more sequences of one or more instructions to processor  for execution. For example, the instructions may initially be borne on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions using a modem. A modem local to computer system  can receive the data and use an infrared transmitter to convert the data to an infrared signal. An infrared detector coupled to bus  can receive the data carried in the infrared signal and place the data on bus . Bus  carries the data to main memory  from which processor  retrieves and executes the instructions. The instructions received by main memory  may optionally be stored on storage device  either before or after execution by processor .","Computer system  also includes a communication interface  coupled to bus . Communication interface  provides a two-way data communication coupling computer system  to a network link  that is connected to a network . For example, communication interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. As another example, communication interface  may be an integrated services digital network (ISDN) card or a modem to provide a data communication connection to a corresponding type of telephone line. Wireless links may also be implemented. In any such implementation, communication interface  sends and receives electrical, electromagnetic, or optical signals that carry digital data streams representing various types of information.","In view of the foregoing structural and functional features described above, methodologies in accordance with example embodiments will be better appreciated with reference to . While, for purposes of simplicity of explanation, the methodologies of  are shown and described as executing serially, it is to be understood and appreciated that the example embodiments are not limited by the illustrated order, as some aspects could occur in different orders and\/or concurrently with other aspects from that shown and described herein. Moreover, not all illustrated features may be required to implement the methodologies in accordance with an aspect an example embodiment. The methodologies described herein are suitably adapted to be implemented in hardware, software, or a combination thereof.",{"@attributes":{"id":"p-0110","num":"0121"},"figref":["FIG. 15","FIG. 1"],"b":["1500","1500","102"]},"At , a call arrives at the ingress gateway. The call may be initiated by a caller dialing a telephone number. The call may have originated on a packet switched telephone network (PSTN) or on an Internet Protocol (IP) network.","At , the gateway sends a SIP INVITE message to the Customer Voice Portal. At , the gateway receives a \u201c200 OK\u201d message from CVP. The CVP proxies for the Voice XML gateway (VXML gateway). In an example embodiment, the \u201c200 OK\u201d message further comprises data representative of an IP address and port for the VXML gateway.","At , a stream is established between the caller and the VXML gateway through the originating gateway (OGW). In an example embodiment, the stream is a Real Time Protocol or \u201cRTP\u201d stream.","At , the gateway receives a RE-INVITE message with data that enables the gateway to fork media streams to a recording server. In an example embodiment, the RE-INVITE comprises 3 SDP m-lines. The first m-line is the original m-line for the called party SDP. The second m-line comprises an IP address, port and codec on the recording server expecting to receive the caller's voice (audio data). The third m-line comprises an IP address, port and codec on the recording server expecting to receive the called party's voice (audio data).","At  the gateway begins forking the media to the recording server. In an example embodiment, the gateway forks two separate RTP streams to the recording server. One stream is the caller's voice, and one stream is the called party's voice.",{"@attributes":{"id":"p-0116","num":"0127"},"figref":"FIG. 16","b":"1600"},"At , the CVP receives an INVITE from the originating gateway (which may also be referred to as the ingress gateway). The INVITE informs the CVP that a new call is being requested by a caller coupled to the originating (ingress) gateway.","At , the CVP notifies the ICM of the new call. In an example embodiment the CVP sends a GED (GeoTel Engineering Document. An API (Application Programming Interface) for integrating ACDs (Automatic Call Distributors), IVRs, (Interactive Voice Responses) and agents into the ICM.) formatted new call message to the ICM.","At , the CVP receives an ICM script indicating that recording may be used at some point in the call. This will insure that Digital Signal Processor (DSP) resources are reserved for recording. In particular embodiments, the ICM script may indicate to start recording as well.","At , the CVP sends an INVITE to a Voice Extensible Markup Language (VXML) gateway to setup a stream (such as a RTP stream) between the gateway and the VXML gateway. At , the CVP receives a reply from the VXML gateway. In an example embodiment, the reply includes an IP address and port for the VXML gateway. At , the CVP proxies for the VXML gateway by sending a success \u201c200 OK\u201d message to the originating gateway. In an example embodiment, the success message further comprises the IP address and port of the VXML gateway. Note that ,  and  may be skipped in embodiments where the VXML gateway is co-located with the ingress gateway.","At , the CVP selects a recording server (or recording server proxy). In an example embodiment, the recording server selection will be based on finding a recording server in its OAMP (Operations, Administration, Maintenance and Provisioning) configured list of servers which has the same location as the ingress gateway. The codec configured on the selected recording server will drive the codec selection. In an example embodiment, the recording server and codec are selected based on locations of the ingress gateway and recording server.","At , the CVP sends invites to the recording server. In an example embodiment, the CVP sends two INVITE messages to the recording server, one INVITE the for the caller and one INVITE for the called party (additional INVITEs may be sent for additional parties belonging to a conference call). The INVITE messages suitably comprise data (tagging data) for locating and processing the call at a later time. For example a call id, codec, and other pertinent data for the call may be provided. As another example, tagging data may include, but is not limited to call GUID (Globally Unique Identifier), codec, whether stream is near-end (caller voice) or far-end (called party voice), ANI (Automatic Number ID), DNIS (Dialed Number Identification Service) and\/or ICM router call key.","At , the recording server replies. In an example embodiment, the recording server replies with \u201c200 OK\u201d success messages. In particular embodiments, the replies include the IP address, port listening port for each stream.","At , the CVP sends data to the ingress gateway indicating the IP address, port and codec for the recording server. In an example embodiment, separate IP addresses, ports, and codecs are sent for each stream. In an example embodiment, the CVP sends a RE-INVITE message. The RE-INVITE message comprises three SDP m-lines where the first m-line comprises the original m-line for the called party SDP, the second m-line comprises the IP address, port and coded on the recording server that is expecting to receive the caller's voice (near-end), and the third m-line comprising the IP address, port, and codec on the recording server that is expecting to receive the called party's voice (far-end).","From the foregoing, one skilled in the art can appreciate that at least one of the example embodiments herein will record both the caller and called party streams and include other call data such as interactive voice response (IVR), conferencing, bridging etc. The recording will reflect the call from the caller's perspective, e.g., the recording reflects everything that the caller experiences during the call. The example embodiments described herein may be used in any environment including third party ACDs (Automatic Call Distributors). An aspect of an example embodiment described herein is that it provides SIP based recording integration with (any such as third party) recording server.","Although the example embodiments described herein are illustrated in the context of an IP telephone system, those skilled in the art should readily appreciate that these illustrations were selected merely for ease of illustration. Those skilled in the art should readily appreciate that the principles described herein are equally applicable to any type of streaming communications such as video, audiovisual, etc. Thus, this disclosure should not be construed as limited to Voice over Internet Protocol (VoIP) applications but should be broadly construed to cover any type of streaming media.","Described above are example embodiments. It is, of course, not possible to describe every conceivable combination of components or methodologies, but one of ordinary skill in the art will recognize that many further combinations and permutations of the example embodiments are possible. Accordingly, this application is intended to embrace all such alterations, modifications and variations that fall within the spirit and scope of the appended claims interpreted in accordance with the breadth to which they are fairly, legally and equitably entitled."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings incorporated herein and forming a part of the specification illustrate the examples embodiments.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 16"}]},"DETDESC":[{},{}]}
