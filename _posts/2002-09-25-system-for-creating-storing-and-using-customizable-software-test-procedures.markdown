---
title: System for creating, storing, and using customizable software test procedures
abstract: A system and method for software test is disclosed that allows user management and adaptation of test procedures and the resulting test data. In an embodiment, the system and method provide a cross-platform user interface which allows testing to be conducted on a plurality of platforms, i.e. it is not integrated with a single platform or language (e.g., C++, Visual Basic, Java, or the like). The method further allows a user to customize a predetermined set of system characteristics relating to the stored test procedure. It is emphasized that this abstract is provided to comply with the rules requiring an abstract which will allow a searcher or other reader to quickly ascertain the subject matter of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope of meaning of the claims.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07055067&OS=07055067&RS=07055067
owner: Siemens Medical Solutions Health Services Corporation
number: 07055067
owner_city: Malvern
owner_country: US
publication_date: 20020925
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATION TO OTHER APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["The present invention claims priority through U.S. Provisional Application 60\/358,993 filed on Feb. 21, 2002 for \u201cA Software Test Creation, Validation, And Management System.\u201d","The present invention relates to automated software application testing.","Automated testing comprises automating a previously manual testing process. Typically, automated testing tools require that a formalized manual testing process currently exists, e.g. a set of detailed test cases and test scripts, including a set of results expected for a given test case and test environment which provides an initial, known test bed that allows the test cases to be repeated from a known starting place. Test cases are most often derived from a set of system requirements to be verified as being satisfied by the system under test.","Commercially developed software testing tools have design constraints, e.g. they are specifically designed to be Internet web testers, performance testers, regression testers, script generators, test data generators, and the like. These tools have limited customization capabilities. Moreover, these tools are often static with respect to tailorability to a given test bed.","However, application systems and environments differ, e.g. in platform, application requirements, and user tastes and desires. Testing methodologies and procedures also vary greatly and often require adaptability to meet the user's quality needs and certification goals.","A need exists for a standardizable format and\/or process that allows integration of software application testing tools and the software application testing process with other applications such as office applications, e.g. word processors, spreadsheets, and the like. Test results need to be stored in a manner that supports integration with office tools such as word processors. Such integration would further allow sharing and using test systems and their data by a group of people. Sharing is often needed when a group collaborates in a testing effort.","There is also a need for flexible reporting, e.g. user tailorable, ad hoc result reports.","System test tools also need to be able to gather and\/or generate test metrics and make these metrics available for post testing analysis, e.g. metrics comprising comparisons of test data results between two iterations of project versions, integration into the test system of defects found later by users or technical support, reliability calculations, and the like.","Accordingly, a test system which provides for testing to a desired test level and thoroughness but which is adaptable to the system under test is desirable. As opposed to current test systems which most often require the system under test to be architected or otherwise modified to work with a test tool, a test tool should itself be able to be modified and adapted to work with the system under test. Such adaptation should provide for management and customization of the test system, including management and customization of test procedures, resulting test data, and presentation of the resulting test data. Ideally, the user interface that allows access to the test system's functions should be customizable as well to adapt to the system under test.","A system and method for software test are described which allow a user to manage and customize a test system comprising test procedures and resulting test data. Customization of the system facilitates a user's ability to add and\/or modify fields, tables, and reports to the system as well as change the look and operation of the user interface and its menus.","In an embodiment of a method, a first test procedure is stored for later use in user assisted testing of a set of functions of an executable application. A test system user may be allowed to customize a predetermined set of system characteristics relating to the stored test procedure. Test data may be acquired and task steps to be performed by the first test procedure may be identified. An executable second test procedure, corresponding to the first test procedure, may be created to automatically exercise a set of functions selected for the executable application. Result data may also be acquired.","Given its adaptability, the present invention is adaptable to a business' testing needs and development standards.","The scope of protection is not limited by the summary of an exemplary embodiment set out above, but is only limited by the claims","In general, throughout this description, if an item is described as implemented in software, it can equally well be implemented as hardware. It is also understood that \u201cdata,\u201d as used herein, is either singular or plural as the context requires. As further used herein, \u201ccertification\u201d comprises processes used to verify and validate that a desired feature or function of a system under test is present and performs according to a predetermined set of performance criteria, e.g. produces a correct result in the presence of data.","As used herein, the following terms have the following meanings, as will be understood by those of ordinary skill in the software application testing arts. A \u201ctest case\u201d is a set of test inputs, execution conditions, and expected results developed to validate or otherwise verify obtaining a given set of results for a predetermined set of input data and conditions. A \u201ctest procedure\u201d is a set of detailed instructions for setting up, executing, and evaluating results obtained from executing one or more test cases. A \u201ctest script\u201d is a human or computer readable set of directives and instructions that describe execution of all or a portion of a test procedure. An \u201cautomated test script\u201d is a test script that is executable by a computer with little or no manual input required. A \u201ctest requirement\u201d is a condition or capability needed by a user, system, or portion of a system to solve a problem or achieve an objective. Test requirements may include a condition or capability to be met or possessed by a system or system component to satisfy a contract, standard, specification, or other formally imposed documents.","Referring now to , in an exemplary embodiment, system  for creating and maintaining test procedures comprises user customizable certification database  and user interface . System  is adapted to allow a user to customize a predetermined set of system characteristics  relating to certification database . Executable application  is the software and\/or system to be tested.","Certification database  further comprises requirement repository  which contains requirements to be tested for executable application ; test procedure repository , which, in a preferred embodiment, may be linked to requirements repository ; and test results repository . Database  may be used to import and export data from other software systems such as a third party's computer aided software engineering tool or performance testing tool.","A user may customize system  by manipulating fields , tables , reports , and even the look and feel of user interface  and its menus , thus adapting system  to a business' or application system's requirements. As used herein, software application requirement repository , test procedure repository , and test results repository  may be tables  within database . Accordingly, software application requirement repository , test procedure repository , and test results repository  may be manipulated as tables, e.g. by modifications of one or more field in a record in software application requirement repository , test procedure repository , and test results repository .","Manipulatable system characteristics  may include user customizable characteristics relating to stored test procedures . For example, a user may manipulate field in table  such as by changing its type or other characteristics, manipulate table  as a component of customizable database  such as by adding new fields to existing fields in table , manipulate report  such as by adding detail or formatting, manipulate user interface  such as by altering the appearance of user interface , and the like, or a combination thereof. As used herein, manipulate comprises adding, deleting, modifying, or the like, or combinations thereof.","Referring now to , as illustrated in an exemplary user interface to test requirement repository  (), test requirement repository  () contains brief statements that may be accessed and used to describe what is to be accomplished in a predetermined phase of testing such as unit testing, integration testing or system testing as well as supporting data for that phase.","Referring back to , test requirements may be stored in tables  in database . For example, a test requirement might be to verify that the software or system may be installed, to ensure that executable application  is operational after it has been installed, or to determine that concurrent users may access and update data without causing conflicts or corrupting data. Supporting data may include, but is not limited to, dates on which testing is to occur, priority of each requirement, owner, instructions as to how to accomplish testing, and the like, or combinations thereof.","Test procedure repository  comprises elements , where elements  may comprise pointers to test requirements , test procedures , test references , or the like, or a combination thereof. Test procedures are typically step-by-step instructions which may be manual, automated, or partially manual and partially automated. Test procedures define or otherwise describe how to perform a specific test, e.g. test procedures may comprise one or more steps that describe a specific action to take as well as define the expected result that should occur after the action is taken. Test references comprise information that may be used to associate test procedures with one or more system objects such as screen names, executable programs, and databases. These references may be used to create a traceability report to show the relationship of various system components to test procedures . For example, if a programmer changes a screen displayable form called \u201cMain Menu,\u201d a report may be used to show which test procedures reference that form. Those test procedures may be rerun (or modified) to regression test the changes to the \u201cMain Menu\u201d form.","In a preferred embodiment, test results repository  may be present to contain retrievable test results , and each element  in test procedure repository  may be linked to at least one requirement in software application requirements repository . A form , an example of which is shown in , may be used to define and\/or otherwise maintain test scenarios, e.g. actions undertaken in test procedure and a test result expected in response to that action.","User interface  is adaptable to allow the user to customize a predetermined set of system characteristics  relating to system  and its certification database . For example, user interface  may comprise user customizable appearance characteristics of graphical interface , e.g. colors, content  of graphical interface , appearance characteristics of menu , and content  of menu .","User interface  may comprise menus , sub-menus, and various controls that are used to value each of the data elements of the system and to initiate execution of processing options such as report generation. Any of the objects of user interface  may be modified to accommodate the capture of different data and\/or the exercising of new processing features. This allows system  to be adapted to a predetermined look and feel and operation required to integrate smoothly with internal testing procedures and standards of the enterprise.","In a currently preferred embodiment, system  employs the ACCESS\u2122 database management system manufactured by Microsoft\u00ae Corp. of Redmond, Wash. In this currently preferred embodiment, system  may be integrated into a general office system, e.g. it may import items from and export items into general office applications such as word processors. \u201cItems,\u201d as used herein, include descriptions of application and function test requirements, test results , and the like.","However, other equivalent database management systems may be used, e.g. those which support the Open Database Connectivity (ODBC) and\/or an application programming interface (API) for database access such as to SQL Server\u2122 marketed by Microsoft Corp.","In the operation of an exemplary embodiment, in general, in a preferred embodiment, prior to using system , a user may elect to review internal testing policies, test requirements , test procedures , and test metrics to be captured to substantiate the testing efforts. As used herein, a \u201ctest metric\u201d is a data or statistic that measures some event. For example, test metrics may comprise a measure of hours spent testing, defects encountered by root cause (program error, documentation error, user confusion, etc.), defects encountered by module or application under test, defects encountered by test procedure, defects encountered by their severity (critical, major, minor, etc.), percent of test procedure steps that passed versus failed, pass\/fail counts by test procedure or test procedure step at the requirement level (e.g. 98% of test procedure steps for procedures linked to requirement \u201cx\u201d passed), defects encountered by hours or days of testing, defects encountered by tester, and the like, or combinations thereof. Test metrics may also be combined with other metrics gathered outside of a testing effort to arrive at additional metrics such as defects by lines of code (KLOC) or changed lines of code, defects by programming organization\/group, defects for this version of the product versus the prior version, defects for this testing effort compared to other testing efforts, or the like, or combinations thereof.","After review, a user may elect to modify desired elements of system  to comply with the desired testing policies and test procedures , e.g. a data element, user interface , report , and the like. Further modifications may be made as well such as to import\/export desired elements using one or more additional supported tools, e.g. requirements repository and automated testing tools.","If necessary, a user may further assess external testing standardization requirements needed for testing, e.g. the International Standards Organization's ISO 9000, and make such other modifications to elements of system  to ensure that test results will satisfy those external testing standardization requirements.","For a particular testing engagement, a user, having modified system  as described above, initializes database tables as needed, e.g. creates new tables , reuse tables from prior tests, and the like. Test requirements are input and\/or imported, as are test procedures , which may be linked to test requirements using data entry form  (). A predetermined number of linked test procedures may be linked to application specific data elements to be tested, e.g. screens, modules, and the like such as by using the form shown in .","Once initialized and linked, execution of test procedures may be initiated to conduct manual testing. Test results and timing data may be captured, e.g. input and\/or imported into one or more test result tables . If required, one or more reports  may be created to substantiate the testing efforts.","If further desired, automated test script shells may be created from the validated and tested manual test procedures , where \u201cshell,\u201d as will be familiar to those of ordinary skill in the software arts, is a rudimentary prototype of a test script which may be completed at a later time. An exemplary interface used to control the generation of automated test scripts is shown in , including specifying and\/or otherwise manipulating test script generation options. Automated scripts may be used at a later time, e.g. for stress, regression, or performance related tests.","Metrics from manual and automated testing may be used by a quality control system, e.g. data from system  may be exported into other systems and analyzed as needed.","Referring now to  is a flowchart of an exemplary software test method for managing user adaptable test procedures and resulting test data according to system . A user stores, step , first test procedure () for use in user assisted and\/or automated testing of a set of components of executable application  (). Individual components of executable application  () may comprise an executable procedure used by executable application , a function implemented by executable application , a user interface form used by executable application , a software object employed by executable application , or the like, or a combination thereof. As used herein, \u201cexecutable application \u201d is understood to include software, hardware, and systems comprising hardware and software.","Prior to storing first test procedure (), an entry in database  () may be created for a pre-existing requirement () for executable application  () describing or otherwise defining what to test. Test procedure () may be created for test requirement () which describes or otherwise defines how to test the corresponding test requirement ","Additionally, first test procedure () may be associated with documentary and other data describing test requirement () of executable application  (). Functions of executable application  to be exercised may also be associated with, e.g. linked to, one or more corresponding individual test procedures of test procedure repository  (), e.g. in database  ().","The user may elect to customize, step , one or more predetermined system characteristics  () relating to test procedure (), e.g. test procedure stored in database  (). Using system characteristics  (), system  may be modified and adapted to meet requirements () of executable application  under test (), e.g. operating system and\/or target language platform requirements, as well as a business' requirements, e.g. level of testing, level of reporting detail, and the like.","Task data identifying task steps performed by first test procedure () and the user in user assisted testing of executable application  () are acquired, step , such as by observing and collating user initiated keyboard key strokes and by reviewing detailed functional specifications. Task data may include instructions for acquiring test related timing data, memory usage related data, command sequence data, and the like, or combinations thereof. Data may be entered via user interface  () and stored in various tables  () of database  ().","Execution of first test procedure () may be initiated. Result data () which may result from executing first test procedure may also be acquired. Results (), e.g. test outcome related information based on the acquired test data, may be recorded such as in database  by exercising the appropriate controls on user interface .","In an alternative embodiment, an executable second test procedure () may be generated, step , corresponding to first test procedure , for automatically exercising the set of functions of the executable application  without user assistance. System  may generate an automated test procedure template or shell that may be annotated, e.g. with comments. The automated test procedure template may be supplied and augmented with directives and\/or data at a later time with keystrokes and commands from a host automated testing tool to create fully automated scripts which may be executed in an unattended manner.","As used herein, a host automated testing tool may comprise a host automation language, e.g. a proprietary scripting language used by an automated testing tool such as SILKTEST\u2122 from Segue Software, Inc. of Lexington, Mass. or WinRunner\u00ae from Mercury Interactive Corporation of Sunnyvale, Calif. Such automated testing tools comprise systems that automate manual test procedures by providing script programming languages, record and playback capabilities, test data repositories and\/or other features that can be used to mimic user interactions and system behavior to drive applications in an unattended manner without human interaction. Such systems are typically used for tasks such as regression, stress, and performance testing.","Result data () derived from exercising executable application  () by executing second test procedure may be acquired, e.g. as shown in step .","Referring now to , an executable test application may be created for managing user adaptable test procedures () and reporting on user adaptable resulting test data (). At step , a cross-platform capable user interface  () to database  () may be provided. User interface  may be used when customizing a predetermined set of characteristics  () of database  relating to test procedure , e.g. stored in database , and report  () of test results (). Such a cross-platform user interface  may include testing abilities which may be conducted on a plurality of platforms, e.g. it is not integrated with a single platform, such as UNIX or Microsoft\u00ae Windows\u00ae, or language such as C++, Visual Basic, Java, or the like.","Test procedure () may be stored, step , in test procedure repository  () of database  (). Stored manual test procedures may be used as a basis for generation of test primers, e.g. written or displayable guidelines and\/or test scripts, as well as for detailed elements of such test primers.","One or more requirements () associatable with test procedure () may be imported, step , from a predetermined source of requirements , e.g. an application design document or functional requirements document.","One or more automated procedure stubs, which are placeholders for finalized test procedures, may be created, step , and test procedure () executed, step . The placeholders comprise syntactically correct comment statements that are output for each step of a test procedure . A host automated testing tool, e.g. SILKTEST\u2122 or WINRUNNER\u00ae, may be executed and commented instructions provided to the user who may follow the commented instructions to record and capture application interactions that are detailed in the underlying test procedure ","For example, system  () may create an automated test script derived from a manual test script. The automated script may contain program code to capture timing data and to control desired features of system , e.g. record\/playback features. As used herein, the generated script is an automated procedure placeholder or stub in that it contains comment lines corresponding to one or more steps of the manual procedure from which the generated script was derived. A user may use an automated testing tool such as SILKTEST\u2122 by opening the automated procedure placeholder and record actual keystrokes and mouse interactions necessary to drive the application under test in the manner specified by each manual test procedure step. This process augments the automated procedure placeholder by creating a fully functioning automated test script that may be used in unattended playback to perform regression, performance, load and other forms of testing.","Test result () obtained from executing test procedure () may be stored, step , into test results repository  () in database  (). Test success and\/or failure results at the test procedure and\/or test procedure step level may be collated and stored. Associated test step timing information, along with other key metrics such as defect ticket numbers, may also be stored.","If the user so elects, report  () may be created, step , that reflects test result (). As part of test procedure execution, data related to a time of executing test procedure () may be entered and optionally reflected in test report  (), e.g. data related to the time of execution and length of test execution. As used herein, report  may comprise a collection of reports  that are derived from test procedures and test requirements as well as test results repository  (). Information in report  may be suitable to support certification by a standards associated organization, e.g. International Standards Organization (ISO), Capability Maturity Model (CMM), the United States of America Food and Drug Administration (FDA), and American National Standards Institute (ANSI). Additionally, users may be provided with options that allow user customization of information in report , e.g. custom reports based on the recorded test outcome related information which may include customer indicators as to whether individual requirements of test requirements () were met.","Because system  () is customizable, tables  () in database  () may be used to link test requirements () with test procedures () and their results (). Test metrics may also be generated, e.g. descriptions of test coverage or test result regression progress.","Additionally, customization of system  () may include allowing a user to add new test procedures () and new database components that support different types of testing, e.g. unit test, integration test, system test, beta test, and the like, or combinations thereof. Customization of system  () may further include allowing a user to define and implement additional metrics as needed. Additionally, steps in test procedure () and requirements () may be exported to other, more specialized tools such as specialized automated test tools or office applications.","Further, as system  () is customizable, system  may be used to gather disparate testing functionality into a single package with a unified user interface  (), e.g. defect tracking, test case drivers, and the like.","By way of example and not limitation, referring now to , in a preferred embodiment system  () comprises an application written in Microsoft\u00ae Access\u00ae and is customizable, e.g. a user with appropriate rights may change characteristics of system  such as by changing a selected Microsoft object such as a screen, report, table, query, module, or the like. Using a front end such as is provided by a database system such as Microsoft\u00ae ACCESS\u00ae, a user may customize system  by changing various programmatic settings such that key data values and options are not \u201chard coded,\u201d minimizing the need to make external programming changes by using properties exposed by the database system.","By way of further example, a user changeable feature of user interface  () may include a user selectable portion, e.g. content  (), of a displayable menu  () where selection of that user selectable portion retrieves a utility functions menu  or form , an exemplar of which is illustrated in . Buttons , , , , , and may be present at form  to invoke predetermined functionality.","Referring now to  and , forms  ( () may be used to define properties related to system  () as a whole or actions to be undertaken. For example, forms  and  may be used to establish data values based on installation specific naming conventions which may be used to create standard names for each test procedure and test requirement ","As illustrated in , one or more testing phases may be customized using form , allowing a user to define various phases of testing to be performed that may be associated with one or more test procedures (). As further illustrated in , form  may be used to allow a user to define one or more objects that may be later associated with test procedures ","Referring now to , defined objects, e.g. those defined using forms  as illustrated in , may be used to relate a test procedure () being worked on to a desired object, e.g. executable module shown at . This information may later be viewed in a report, enabling users who make changes to a desired module such as at to identify and execute test procedures related to that module ","Customize button and region of form  () may be used to provide access to tables  () used by system  (). Additionally, customize button and region of form  may be used to allow a user to dynamically change characteristics of a desired table , e.g. to tailor those characteristics to an individual user's need. For example, as new tables  are added, access to new forms  () that provide a user interface to the new tables  may be provided such as in a list box at region (). For example, users of system  may be defined such as illustrated at and explanatory codes for testing results defined such as illustrated at ","Control of automated test script generation including access to test script generation options may be accessed such as illustrated at . Form  may be used to allow a user to customize the manner in which test script shells are generated. For example, the checkbox entitled \u201cGenerate timing and memory usage statistics\u201d on form , when checked, will cause the application to insert code into generated test scripts to record timing and memory usage data.","It will be understood that various changes in the details, materials, and arrangements of the parts which have been described and illustrated above in order to explain the nature of this invention may be made by those skilled in the art without departing from the principle and scope of the invention as recited in the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The features, aspects, and advantages of the present invention will become more fully apparent from the following description, appended claims, and accompanying drawings in which:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","i":"a "},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","i":"b "},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIGS. 7","i":["a ","b "],"b":"7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIGS. 9","i":["a ","b "],"b":"9"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
