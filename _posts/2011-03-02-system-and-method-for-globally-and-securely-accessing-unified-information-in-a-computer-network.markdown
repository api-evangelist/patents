---
title: System and method for globally and securely accessing unified information in a computer network
abstract: A smartphone that includes a communications interface to communicate via one or more Internet communications channels is provided. The smartphone also includes a service engine that communicates with a global server via an Internet channel using the communications interface to provide identification data to the global server. In response to providing the identification data, the service engine receives configuration data to configure the service engine with a selectable set of downloadable executables. The selectable set of downloadable executables include a selection of downloadable executables that is made at least in part by the global server using the identification data. A display presents at least some of the selectable set of downloadable executables on the smartphone, and an input device selects a downloadable executable from the selectable set. The service engine initiates a download of the selected downloadable executable using the communications interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09361603&OS=09361603&RS=09361603
owner: Good Technology Corporation
number: 09361603
owner_city: Sunnyvale
owner_country: US
publication_date: 20110302
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This application is a continuation of and claims the benefit of priority under 35 U.S.C. \u00a7120 from U.S. application Ser. No. 12\/575,387 filed Oct. 7, 2009, which is a continuation of U.S. application Ser. No. 12\/480,500, filed Jun. 8, 2009, which is a continuation of U.S. application Ser. No. 11\/340,083, filed Jan. 25, 2006, which is a continuation of U.S. application Ser. No. 10\/741,113, filed Dec. 19, 2003, which is a continuation of U.S. application Ser. No. 09\/666,877 filed Sep. 20, 2000, which is a continuation of U.S. application Ser. No. 08\/903,118 filed Jul. 30, 1997, which is a continuation-in-part of co-pending U.S. application Ser. No. 08\/766,307, filed on Dec. 13, 1996, and of co-pending U.S. application Ser. No. 08\/841,950, filed on Apr. 8, 1997 and of co-pending U.S. application Ser. No. 08\/835,997, filed on Apr. 11, 1997, and of co-pending U.S. application Ser. No. 08\/865,075, filed on May 29, 1997. The entire contents of these applications are incorporated herein by reference.","1. Field of the Invention","This invention relates generally to computer networks, and more particularly provides a system and method for globally and securely accessing unified information in a computer network.","2. Description of the Background Art","The internet currently interconnects about 100,000 computer networks and several million computers. Each of these computers stores numerous application programs for providing numerous services, such as generating, sending and receiving e-mail, accessing World Wide Web sites, generating and receiving facsimile documents, storing and retrieving data, etc.","A roaming user, i.e., a user who travels and accesses a workstation remotely, is faced with several problems. Program designers have developed communication techniques for enabling the roaming user to establish a communications link and to download needed information and needed service application programs from the remote workstation to a local computer. Using these techniques, the roaming user can manipulate the data on the remote workstation and, when finished, can upload the manipulated data back from the remote workstation to the local computer. However, slow computers and slow communication channels make downloading large files and programs a time-consuming process. Further, downloading files and programs across insecure channels severely threatens the integrity and confidentiality of the downloaded data.","Data consistency is also a significant concern for the roaming user. For example, when maintaining multiple independently modifiable copies of a document, a user risks using an outdated version. By the time the user notices an inconsistency, interparty miscommunication or data loss may have already resulted. The user must then spend more time attempting to reconcile the inconsistent versions and addressing any miscommunications.","The problem of data inconsistency is exacerbated when multiple copies of a document are maintained at different network locations. For example, due to network security systems such as conventional firewall technology, a user may have access only to a particular one of these network locations. Without access to the other sites, the user cannot confirm that the version on the accessible site is the most recent draft.","Data consistency problems may also arise when using application programs from different vendors. For example, the Netscape Navigatorm web engine and the Internet Explorerm web engine each store bookmarks for quick reference to interesting web sites. However, since each web engine uses different formats and stores bookmarks in different files, the bookmarks are not interchangeable. In addition, one web engine may store a needed bookmark, and the other may not. A user who, for example, runs the Internet Explorer\u2122 web engine at home and runs the Netscape Navigator\u2122 web engine at work risks having inconsistent bookmarks at each location.","Therefore, a system and method are needed to enable multiple users to access computer services remotely without consuming excessive user time, without severely threatening the integrity and confidentiality of the data, and without compromising data consistency.","The present invention provides a system and methods for providing global and secure access to services and to unified (synchronized) workspace elements in a computer network. A user can gain access to a global server using any terminal, which is connected via a computer network such as the Internet to the global server and which is enabled with a web engine.","A client stores a first set of workspace data, and is coupled via a computer network to a global server. The client is configured to synchronize selected portions of the first set of workspace data (comprising workspace elements) with the global server, which stores independently modifiable copies of the selected portions. The global server may also store workspace data not received from the client, such as e-mail sent directly to the global server. Accordingly, the global server stores a second set of workspace data. The global server is configured to identify and authenticate a user attempting to access it from a remote terminal, and is configured to provide access based on the client configuration either to the first set of workspace data stored on the client or to the second set of workspace data stored on the global server. It will be appreciated that the global server can manage multiple clients and can synchronize workspace data between clients.","Service engines for managing services such as e-mail management, accessing bookmarks, calendaring, network access, etc. may be stored anywhere in the computer network, including on the client, on the global server or on any other computer. The global server is configured to provide the user with access to services, which based on level of authentication management or user preferences may include only a subset of available services. Upon receiving a service request from the client, the global server sends configuration information to enable access to the service.","Each client includes a base system and the global server includes a synchronization agent. The base system and synchronization agent automatically establish a secure connection therebetween and synchronize the selected portions of the first set of workspace data stored on the client and the second set of workspace data stored on the global server. The base system operates on the client and examines the selected portions to determine whether any workspace elements have been modified since last synchronization. The synchronization agent operates on the global server and informs the base system whether any of the workspace elements in the second set have been modified. Modified version may then be exchanged so that an updated set of workspace elements may be stored at both locations, and so that the remote user can access an updated database. If a conflict exists between two versions, the base system then performs a responsive action such as examining content and generating a preferred version, which may be stored at both locations. The system may further include a synchronization-start module at the client site (which may be protected by a firewall) that initiates interconnection and synchronization when predetermined criteria have been satisfied.","A method of the present invention includes establishing a communications link between the client and the global server. The method includes establishing a communications link between the client and a service based upon user requests. The method receives configuration data and uses the configuration data to configure the client components such as the operating system, the web engine and other components. Configuring client components enables the client to communicate with the service and provides a user-and-service-specific user interface on the client. Establishing a communications link may also include confirming access privileges.","Another method uses a global translator to synchronize workspace elements. The method includes the steps of selecting workspace elements for synchronization, establishing a communications link between a client and a global server, examining version information for each of the workspace elements on the client and on the global server to determine workspace elements which have been modified since last synchronization. The method continues by comparing the corresponding versions and performing a responsive action. Responsive actions may include storing the preferred version at both stores or reconciling the versions using content-based analysis.","The system and methods of the present invention advantageously provide a secure globally accessible third party, i.e. the global server. The system and methods provide a secure technique for enabling a user to access the global server and thus workspace data remotely and securely. Because of the global firewall and the identification and security services performed by the global server, corporations can store relatively secret information on the global server for use by authorized clients. Yet, the present invention also enables corporations to maintain only a portion of their secret information on the global server, so that there would be only limited loss should the global server be compromised. Further, the global server may advantageously act as a client proxy for controlling access to services, logging use of keys and logging access of resources.","A client user who maintains a work site, a home site, an off-site and the global server site can securely synchronize the workspace data or portions thereof among all four sites. Further, the predetermined criteria (which control when the synchronization-start module initiates synchronization) may be set so that the general synchronization module synchronizes the workspace data upon user request, at predetermined times during the day such as while the user is commuting, or after a predetermined user action such as user log-off or user log-on. Because the system and method operate over the Internet, the system is accessible using any connected terminal having a web engine such as an internet-enabled smart phone, television settop (e.g., web TV), etc. and is accessible over any distance. Since the system and method include format translation, merging of workspace elements between different application programs and different platforms is possible. Further, because synchronization is initiated from within the firewall, the typical firewall, which prevents in-bound communications and only some protocols of out-bound communications, does not act as an impediment to workspace element synchronization.","Further, a roaming user may be enabled to access workspace data from the global server or may be enabled to access a service for accessing workspace data from a client. For example, a user may prefer not to store personal information on the global server but may prefer to have remote access to the information. Further, the user may prefer to store highly confidential workspace elements on the client at work as added security should the global server be compromised.","The present invention may further benefit the roaming user who needs emergency access to information. The roaming user may request a Management Information Systems (MIS) director controlling the client to provide the global server with the proper keys to enable access to the information on the client. If only temporary access is desired, the keys can then be later destroyed either automatically or upon request. Alternatively, the MIS director may select the needed information as workspace elements to be synchronized and may request immediate synchronization with the global server. Accordingly, the global server and the client can synchronize the needed information, and the user can access the information from the global server after it has completed synchronization.","The present invention also enables the system and methods to synchronize keys, available services and corresponding service addresses to update accessibility of workspace data and services. For example, if the user of a client accesses a site on the Internet which requires a digital certificate and the user obtains the certificate, the system and methods of the present invention may synchronize this newly obtained certificate with the keys stored on the global server. Thus, the user need not contact the global server to provide it with the information. The synchronization means will synchronize the information automatically.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 1","b":["100","105","110","115","115","120","125","122","167","110","120","122","115","130","125","135"]},"The LAN  comprises a client , which includes a base system  for synchronizing workspace data  (e-mail data, file data, calendar data, user data, etc.) with the global server  and may include a service engine  for providing computer services such as scheduling, e-mail, paging, word-processing or the like. Those skilled in the art will recognize that workspace data  may include other types of data such as application programs. It will be further appreciated that workspace data  may each be divided into workspace elements, wherein each workspace element may be identified by particular version information  (). For example, each e-mail, file, calendar, etc. may be referred to as \u201ca workspace element in workspace data.\u201d For simplicity, each workspace element on the client  is referred to herein as being stored in format A. It will be further appreciated that the workspace data  or portions thereof may be stored at different locations such as locally on the client , on other systems in the LAN  or on other systems (not shown) connected to the global server .","The client  is similar to the client . However, workspace data stored on the client  is referred to as being stored in format B, which may be the same as or different than format A. All aspects described above and below with reference to the client  are also possible with respect to the client . For example, client  may include services (not shown) accessible from remote terminal , may include a base system (not shown) for synchronizing workspace elements with the global server , etc.","The global server  includes a security system  for providing only an authorized user with secure access through firewalls to services. The security system  may perform identification and authentication services and may accordingly enable multiple levels of access based on the level of identification and authentication. The global server  further includes a configuration system  that downloads configuration data  () to the remote terminal  to configure remote terminal  components such as the operating system  (), the web engine  (), the applet engine  (), etc. The configuration system  uses the configuration data  to enable the remote terminal  to access the services provided by the service engine  and to provide a user-and-service-specific user interface.","The global server  stores workspace data , which includes an independently modifiable copy of each selected workspace element in the selected portions of the workspace data . Accordingly, the workspace data  includes an independently modifiable copy of each corresponding version information  (). The workspace data  may also include workspace elements which originate on the global server  such as e-mails sent directly to the global server  or workspace elements which are downloaded from another client (not shown). The global server  maintains the workspace data  in a format, referred to as a \u201cglobal format,\u201d which is selected to be easily translatable by the global translator  to and from format A and to and from format B. As with format A and format B, one skilled in the art knows that the global format actually includes a global format for each information type. For example, there may be a global format for bookmarks (), a global format for files, a global format for calendar data, a global format for e-mails, etc.","The global server  also includes a synchronization agent  for examining the workspace elements of workspace data . More particularly, the base system  and the synchronization agent , collectively referred to herein as \u201csynchronization means,\u201d cooperate to synchronize the workspace data  with the selected portions of the workspace data . The synchronization means may individually synchronize workspace elements (e.g., specific word processor documents) or may synchronize workspace element folders (e.g., a bookmark folder). Generally, the base system  manages the selected portions of the workspace data  within the LAN  and the synchronization agent  manages the selected portions of workspace data  within the global server . It will be appreciated that the global translator  cooperates with the synchronization means to translate between format A (or format B) and the global format. It will be further appreciated that the global server  may synchronize the workspace data  with workspace data  and with the workspace data (not shown) on the client . Accordingly, the workspace data  can be easily synchronized with the workspace data (not shown) on the client .","The remote terminal  includes a web engine , which sends requests to the global server  and receives information to display from the global server . The web engine  may use HyperText Transfer Protocol (HTTP) and HyperText Markup Language (HTML) to interface with the global server . The web engine  may be enabled to run applets, which when executed operate as the security interface for providing access to the global server  and which operate as the application interface with the requested service. Using the present invention, a user can operate any remote client  connected to the Internet to access the global server , and thus to access the services and the workspace data on or accessible by the global server .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 2","FIG. 1"],"b":["105","210","220","230","235","210","240","250","260","235","210","240","110"]},"An operating system  includes a program for controlling processing by CPU , and is typically stored in data storage device  and loaded into RAM  (as shown) for execution. Operating system  further includes a communications engine  for generating and transferring message packets via the communications interface  to and from the communications channel . Operating system  further includes an Operating System (OS) configuration module , which configures the operating system  based on OS configuration data  () such as Transmission Control Protocol (TCP) data, Domain Name Server (DNS) addresses, etc. received from the global server .","Operating system  further includes the web engine  for communicating with the global-server . The web engine  may include a web engine (WE) configuration module  for configuring elements of the webengine  such as home page addresses, bookmarks, caching data, user preferences, etc. based on the configuration data  received from the global server . The web engine  may also include an encryption engine  for using encryption techniques to communicate with the global server . The web engine  further may include an applet engine  for handling the execution of downloaded applets including applets for providing security. The applet engine  may include an Applet Engine (AE) configuration module  for configuring the elements of the applet engine  based on configuration data  received from the global server .",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 3","FIG. 1"],"b":["115","310","320","330","335","310","340","350","370","335","310","340","110","120"]},"An operating system  includes a program for controlling processing by CPU , and is typically stored in data storage device  and loaded into RAM  (as illustrated) for execution. The operating system  further includes a communications engine  for generating and transferring message packets via the communications interface  to and from the communications channel . The operating system  also includes a web page engine  for transmitting web page data  to the remote terminal , so that the remote terminal  can display a web page  () listing functionality offered by the global server . Other web page data  may include information for displaying security method selections.","The operating system  may include an applet host engine  for transmitting applets to the remote terminal . A configuration engine  operates in conjunction with the applet host engine  for transmitting configuration applets  and configuration and user data  to the remote terminal . The remote terminal  executes the configuration applets  and uses the configuration and user data  to configure the elements (e.g., the operating system , the web engine  and the applet engine ) of the remote terminal . Configuration and user data  is described in greater detail with reference to .","The operating system  also includes the synchronization agent  described with reference to . The synchronization agent  synchronizes the workspace data  on the global server  with the workspace data  on the client . As stated above with reference to , the global translator  translates between format A used by the client  and the global format used by the global server .","The operating system  may also includes a security engine  for determining whether to instruct a communications engine  to create a secure communications link with a client  or terminal , and for determining the access rights of the user. For example, the security engine  forwards to the client  or remote terminal  security applets , which when executed by the receiver poll the user and respond back to the global server . The global server  can examine the response to identify and authenticate the user.","For example when a client  attempts to access the global server  the security engine  determines whether the global server  accepts in-bound communications from a particular port. If so, the security engine  allows the communications engine  to open a communications channel  to the client . Otherwise, no channel will be opened. After a channel is opened, the security engine  forwards an authentication security applet  to the remote terminal  to poll the user for identification and authentication information such as for a user ID and a password. The authentication security applet  will generate and forward a response back to the global server , which will use the information to verify the identity of the user and provide access accordingly.","It will be appreciated that a \u201crequest-servicing engine\u201d may be the configuration engine  and the applet host engine  when providing services to a remote terminal  or client . The request-servicing engine may be the web page engine  when performing workspace data  retrieval operations directly from the global server . The request-servicing engine may be the configuration engine  and the applet host engine  when performing workspace data  retrieval operations from the client  or from any other site connected, to the global server . The request-servicing engine may be security engine  when performing security services such as user identification and authentication. The request-servicing engine may be the synchronization agent when the performing synchronization with the client . Further, the request-servicing engine may be any combination of these components.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 4","b":["145","405","410","405","120","170","405","130","125"]},"The general synchronization module  includes routines for determining whether workspace elements have been synchronized and routines for forwarding to the base system  version information (not shown) of elements determined to be modified after last synchronization. The general synchronization module  may either maintain its own last synchronization signature (not shown), receive a copy of the last synchronization signature with the request to synchronize from the base system , or any other means for insuring that the workspace data has been synchronized. The general synchronization module  further includes routines for receiving preferred versions of workspace data  workspace elements from the base system , and routines for forwarding preferred versions of workspace data  workspace elements to the base system .",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 5","FIG. 4"],"b":["150","150","150","505","510","515","520","525","530","535","540","545","550","555","560"]},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 6","b":["356","356","605","356","165","356","610"]},"Configuration data  further includes the set of services , which will be provided to the user. Services  include a list of registered users and each user's list of user-preferred available services . Services may also include a list of authentication levels needed to access the services . Configuration and user data  further includes service addresses  specifying the location of each of the services  accessible via the global server .",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 7","b":["165","705","710","725","710","720","730","740"]},"An operating system  includes a program for controlling processing by the CPU , and is typically stored in the data storage device  and loaded into the RAM  (as illustrated) for execution. A service engine  includes a service program for managing workspace data  that includes version information (not shown). The service engine  maybe also stored in the data storage device  and loaded into the RAM  (as illustrated) for execution. The workspace data  may be stored in the data storage device . As stated above with reference to , the base system  operates to synchronize the workspace data  on the client  with the workspace data  on the global server . The base system  may be also stored in the data storage device  and loaded into the RAM  (as shown) for execution. The base system  is described in greater detail with reference to .",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 8","b":["170","805","810","815","820","825","830","840","170","145"]},"The communications module  includes routines for compressing data, and routines for communicating via the communications interface  () with the synchronization agent  (). The communications module  may include routines for applying Secure Socket Layer (SSL) technology and user identification and authentication techniques (i.e., digital certificates) to establish a secure communication channel through the LAN firewall  and through the global firewall . Because synchronization is initiated from within the LAN firewall  and uses commonly enabled protocols such as HyperText Transfer Protocol (HTTP), the typical firewall  which prevents in-bound communications in general and some outbound protocols does not act as an impediment to e-mail synchronization. Examples of communications modules  may include TCP\/IP stacks or the AppleTalk\u2122 protocol.","The user interface  includes routines for communicating with a user, and may include a conventional Graphical User Interface (GUI). The user interface  operates in coordination with the client  components as described herein.","The locator modules  include routines for identifying the memory locations of the workspace elements in the workspace data  and the memory locations of the workspace elements in the workspace data . Workspace element memory location identification may be implemented using intelligent software, i.e., preset memory addresses or the system's registry, or using dialogue boxes to query a user. It will be appreciated that the locator modules  may perform workspace element memory location identification upon system boot-up or after each communication with the global server  to maintain updated memory locations of workspace elements.","The synchronization-start module  includes routines for determining when to initiate synchronization of workspace data  and workspace data . For example, the synchronization-start module  may initiate data synchronization upon user request, at a particular time of day, after a predetermined time period passes, after a predetermined number of changes, after a user action such as user log-off or upon like criteria. The synchronization-start module  initiates data synchronization by instructing the general synchronization module  to begin execution of its routines. It will be appreciated that communications with synchronization agent  preferably initiate from within the LAN , because the typical LAN firewall  prevents in-bound communications and allows out-bound communications.","The general synchronization module  includes routines for requesting version information from the synchronization agent  () and routines for comparing the version information against a last synchronization signature  such as a last synchronization date and time to determine which versions have been modified. The general synchronization module  further includes routines for comparing the local and remote versions to determine if only one or both versions of a particular workspace element have been modified and routines for performing an appropriate synchronizing responsive action. Appropriate synchronizing responsive actions may include forwarding the modified version (as the preferred version) of a workspace element in workspace data  or forwarding just a compilation of the changes to the other store(s). Other appropriate synchronizing responsive actions may include, if reconciliation between two modified versions is needed, then instructing the content-based synchronization module  to execute its routines (described below).","It will be appreciated that the synchronization agent  preferably examines the local version information  and forwards only the elements that have been modified since the last synchronization signature . This technique makes efficient use of processor power and avoids transferring unnecessary data across the communications channel . The general synchronization module  in the LAN  accordingly compares the data elements to determine if reconciliation is needed. Upon completion of the data synchronization, the general synchronization module  updates the last synchronization signature .","The content-based synchronization module  includes routines for reconciling two or more modified versions of workspace data ,  in the same workspace element. For example, if the original and the copy of a user workspace element have both been modified independently since the last synchronization, the content-based synchronization module  determines the appropriate responsive action. The content-based synchronization module  may request a user to select the preferred one of the modified versions or, may respond based on preset preferences, i.e., by storing both versions in both stores or by integrating the changes into a single preferred version which replaces each modified version at both stores. When both versions are stored at both stores, each version may include a link to the other version so that the user may be advised to select the preferred version.","It will be appreciated that any client  that wants synchronization may have a base system . Alternatively, one base system  can manage multiple clients . It will be further appreciated that for a thin client  of limited computing power such as a smart telephone, all synchronization may be performed by the global server . Accordingly, components of the base system  such as the user interface module , the locator modules , the general synchronization module  and the content-based synchronization module  may be located on the global server . To initiate synchronization from the client , the client  includes the communications module  and the synch-start module .",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 9","b":["900","398","115","900","910","615","970","615","920","930","940","950","960","963","967","615","900","615","900"]},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 10","b":["1000","615","100","1000","105","1005","115","115","1010","115","392","395","345","105","362","115"]},"After user access privileges are confirmed, the web page engine  of the global server  in step  transmits web page data  and configuration and user data  to the remote terminal . The web engine  of the remote terminal  in step  uses the web page data  and the configuration and user data  to display a web page service list  () on the output device , and to enable access to the services  which the global server  offers. An example service list  is shown and described with reference to . Configuration of the remote terminal  and of the web page  is described in detail in the cross-referenced patent applications.","From the options listed on the web page , the user in step  selects a service  via input device . In response, the request-servicing engine (described with reference to ) provides the selected service . For example, the applet host engine  of the global server  in step  may download to the remote terminal  a corresponding applet  and configuration and user data  for executing the requested service . Alternatively, the web page engine  may use, for example, HTTP and HTML to provide the selected service . As described above with reference to , the configuration and user data  may include user-specific preferences such as user-preferred fonts for configuring the selected service . Configuration and user data  may also include user-specific and service-specific information such as stored bookmarks, calendar data, pager numbers, etc. Alternatively, the corresponding applet  and the configuration and user data  could have been downloaded instep . Providing access to the service by an applet  is described in greater detail below with reference to .","The applet engine  of the remote terminal  in step  initiates execution of the corresponding downloaded applet. The global server  in step  initiates the selected service  and in step  selects one of three modes described with reference to  for accessing the service . For example, if the user selects a service  on a service server (e.g., the client ) that is not protected by a separate firewall, then the global server  may provide the user with direct access. If the user selects a service  provided by a service server within the LAN , then the global server  may access the service  as a proxy for the user. It will be appreciated that each firewall  and  may store policies establishing the proper mode of access the global server  should select. Other factors for selecting mode of access may include user preference, availability and feasibility. The global server  in step  uses the selected mode to provide the remote terminal  user with access to the selected service .",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 11","b":["1005","105","1105","115","115","105","1107","392","115","1110","105","140","105","392","115","11","15","1115","115","105","283","105","392","115","1120","505"]},{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 12","b":["1050","1050","115","105","615","1050","290","1205","359","615","620","380","365","340","1210","340","115","620","1215","615","1050"],"i":["a","a ","a "]},{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 13","b":["1050","1050","115","105","615","1050","359","1305","620","615","620","359","115","359","1310","340","115","115","1315","620","615","615","365","340","115","1320","1014","340","1320"],"i":["b","b "]},"Thereafter, the applet  in step  acts as the I\/O interface with the communications interface  of the global server . If the global server  in step  determines that it is unauthorized to perform a remote terminal  user's request, then the global server  in step  determines whether the method ends, e.g., whether the user has quit. If so, then method ends. Otherwise, method returns to step  to obtain another request. If the global server  in step  determines that it is authorized to perform the remote terminal  user's request, then the global server  in step  acts as the proxy for the remote terminal  to the service . As proxy, the global server  forwards the service request to the selected service  and forwards responses to the requesting applet  currently executing on the remote terminal . Method then jumps to step .",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 14","FIG. 10"],"b":["1050","1050","615","115","1050","1405","620","615","359","620","615","115","1410","115","105","115","1010"],"i":"c"},"In step , a determination is made whether the service  is currently running. If so, then in step  a determination is made whether the service  can handle multiple users. If so, then the global server  in step  creates an instance for the user, and the applet in step  acts as the I\/O interface with the service  on the global server . Method c then ends. Otherwise, if the service  in, step  determines that it cannot handle multiple users, then method c proceeds to step . Further, if in step  the global server  determines that the service  is not currently running, then the global server  in step  initializes the service  and proceeds to step .",{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 15","b":["1500","150","163","180","100","1500","900","1505","163","180","815","1510","163","180","115","825","1515"]},"The synchronization-start module  in step  determines whether predetermined criteria have been met which indicate that synchronization of the workspace elements selected in step  should start. If not, then the synchronization-start module  in step  waits and loops back to step . Otherwise, the communications module  and the communications module  in step  establish a secure communications channel therebetween.","The general synchronization module  in step  determines whether any workspace elements have been modified. That is, the general synchronization module  in step  examines the version information of each selected workspace element in the workspace data  against the last synchronization signature  to locate modified workspace elements. This comparison may include comparing the date of last modification with the date of last synchronization, or may include a comparison between the current status and the previous status as of the last interaction. Similarly, the general synchronization module  examines the version information of each corresponding workspace element in workspace data  and the last synchronization signature  to locate modified workspace elements.","If in step  no modified workspace elements or folders are located, then the general synchronization module  in step  updates the last synchronization signature  and method  ends. Otherwise, the general synchronization module  in step  determines whether more than one version of a workspace element has been modified since the last synchronization.","If only one version has been modified, then the corresponding general synchronization module  in step  determines the changes made. As stated above, determining the changes made may be implemented by comparing the current status of the workspace element against the previous status of the workspace element as of the last interaction therebetween. If the changes were made only to the version in the workspace data , then the global translator  in step  translates the changes to the format used by the other store, and the general synchronization module  in step  forwards the translated changes to the general synchronization module  for updating the outdated workspace element in the workspace data . If the updated version is a workspace element in the workspace data , then the general synchronization module  sends the changes to the updated version to the global translator  for translation and then to the general synchronization module  for updating the outdated workspace element in the workspace data . The general synchronization module  and the general synchronization module  in step  update the previous state of the workspace element to reflect the current state as of this interaction. Method  then returns to step .","If the general synchronization module  in step  determines that multiple versions have been modified, then the general synchronization module  in step  computes the changes to each version and in step  instructs the content-based synchronization module  to examine content to determine if any conflicts exist. For example, the content-based synchronization module  may determine that a conflict exists if a user deletes a paragraph in one version and modified the same paragraph in another version. The content-based synchronization module  may determine that a conflict does not exist if a user deletes different paragraphs in each version. If no conflict is found, then method  jumps to step  for translating and forwarding the changes in each version to the other store. However, if a conflict is found, then the content-based synchronization module  in step  reconciles the modified versions. As stated above, reconciliation may include requesting instructions from the user or based on previously selected preferences performing responsive actions such as storing both versions at both stores. It will be appreciated that a link between two versions may be placed in each of the two versions, so that the user will recognize to examine both versions to select the preferred version. Method  then proceeds to step .","It will be further appreciated that in step  new workspace elements and preexisting workspace elements to which new workspace elements will be merged are set to \u201cmodified\u201d and the previous status is set to the null set. Thus, the general synchronization module  in step  will determine that more that one version has been modified and the content-based synchronization module  in step  will determine that no conflict exists. The changes in each will be translated and forwarded to the other store. Accordingly, the two versions will be effectively merged and stored at each store.","For example, if a first bookmark folder was created by the web engine  on the client , a second folder was created by a web engine  on the remote terminal , no preexisting folder existed on the global server  and the user selected each of these folders for synchronization, then the synchronization means will effectively merge the first and second folders. That is, the general synchronization module  on the client  will determine that the first folder has been modified and the previous status is equal to the null set. The general synchronization module  will determine and send the changes, i.e., all the workspace elements in the first folder, to a new global folder on the global server . Similarly, the general synchronization module (not shown) on the remote terminal  will determine that, as of its last interaction, the previous status of each of the second and the global folders is the null set. The general synchronization module  will instruct the content-based synchronization module  to examine the changes made to each folder to determine whether a conflict exists. Since no conflicts will exist, the general synchronization module  will forward the changes to the global folder and the general synchronization module  will forward its changes to the second store, thereby merging the workspace elements of the first and second folders in the global and second folders. The general synchronization module  will inform the general synchronization module  that the global folder has been modified relative to the last interaction, and will forward the new changes to the first folder. Thus, the first and second folders will be merged and stored at each store.","The foregoing description of the preferred embodiments of the invention is by way of example only, and other variations of the above-described embodiments and methods are provided by the present invention. For example, a server can be any computer which is polled by a client. Thus, the remote terminal  may be referred to as a type of client. Although the system and method have been described with reference to applets, other downloadable executables such as Java\u2122 applets, Java\u2122 applications or ActiveX\u2122 control developed by the Microsoft Corporation can alternatively be used. Components of this invention may be implemented using a programmed general-purpose digital computer, using application specific integrated circuits, or using a network of interconnected conventional components and circuits. The embodiments described herein have been presented for purposes of illustration and are not intended to be exhaustive or limiting. Many variations and modifications are possible in light of the foregoing teaching. The invention is limited only by the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 6","FIG. 3"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 7","FIG. 1"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 8","FIG. 1"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 11","FIG. 10"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 12","FIG. 10"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 13","FIG. 10"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 14","FIG. 10"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 15"}]},"DETDESC":[{},{}]}
