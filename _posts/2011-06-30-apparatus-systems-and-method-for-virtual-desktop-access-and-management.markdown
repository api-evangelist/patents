---
title: Apparatus, systems and method for virtual desktop access and management
abstract: Systems and methods are provided for accessing and managing a virtual desktop. In some examples a desktop access manager may be provided to enable and communicatively link a virtual desktop key such that a user may access a linked desktop virtually over a second computing device. The systems and methods provide increased security when accessing a virtual desktop and enable customization of access to the virtual desktop.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09306954&OS=09306954&RS=09306954
owner: Cloud Security Corporation
number: 09306954
owner_city: Mission Viejo
owner_country: US
publication_date: 20110630
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND AND SUMMARY","DETAILED DESCRIPTION"],"p":["The present disclosure relates generally to apparatus, systems and methods for virtual desktop access and management.","With the development of the computer as both a business tool and a personal communication device, users have grown accustomed to use of select features on their desktop computer. Further, users have become accustomed to the graphic display and customized organization of programs as available on their desktop. Difficulty in accessing a user's desktop from a remote computer or system can cause confusion and frustration. Further, in some examples, it is not possible to provide a secure interface to a user's desktop computing device and thus access is limited or not possible. In addition, user's experiences when attempting to access their desktop, such as when they are traveling, provides additional frustrations.","Solutions to the need for remote access to a user's desktop have been addressed in numerous ways. For example, some users carry laptops or other computing devices which have been preset to communicatively link with their home or business server. Carrying the laptops or other computing devices can be difficult and have been a frustrating solution for some. In other solutions, users must access their system though a complicated series of remote links. Security with these remote links remains a significant concern.","The inventor herein has recognized difficulties with the current remote system solutions and applications which enable remote access to a user's desktop. To address these difficulties and as described in more detail below, the inventor herein provides an apparatus, systems and methods for access and management of a user's virtual desktop. In one example, a desktop access manager may be configured to communicatively link a remote computing device when a virtual desktop key is coupled to the remote computing device. The virtual desktop key, after authentication, may provide immediate access to a user's desktop. It should be appreciated that these apparatus, systems and methods provide increased security, enable ease of use and reduce user frustration with current application systems. Further, the disclosed systems and methods enable customization to further enhance the experience of accessing and managing a user's system or desktop remotely.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":"10"},"As depicted in , virtual desktop access and management system  may include a first computing device , a second computing device , a network , and a virtual desktop key . The first and second computing device may be any suitable computing devices, such as a computing device that enables a user to store and maintain images and\/or data. For example, the first and\/or second computing device may be a smart phone, a hand-held computing device, a mobile device, a laptop computer, a portable media player, a desktop computer, etc. In some embodiments, the computing devices may run an identifiable operating system's software, such as a WINDOWS operating system or other system, and may provide a standardized interface and platform for applications. The computing devices may be networked to one or more networks , such as a public network (e.g. the Internet), to enable communication between the computing devices and other elements included in the virtual desktop access and management system.","The first computing device  may include a display  configured to present images and\/or graphics on the device. The first computing device may also include a communication apparatus facilitating wired and\/or wireless communication between the computing device and external systems and devices such as through network . Computing device  may be configured to provide a user a customized display, indicated as Desktop A at . As depicted the first computing device may include various software applications stored on mass storage  (e.g., a hard drive, solid state memory, a rewritable disc, etc.) and executable via a processor  using portions of memory . Similarly, second computing device  may include a display , mass storage , a processor , and memory . It should be appreciated that second computing device, as a remote computing device, includes any device that is not coupled directly to the local network. Thus, a remote computing device may be a computing device in a hotel business center, a lobby, airport, client sites, etc. In addition, a remote computing device may be a third party computer or other computer in the same room or facility as first computing device, where such computer is not locally connected to the first computing device.","In one example, second computing device  may further include a communication port , such as a USB port or connector. Virtual desktop key  may be adapted to be received within port  and provides access to virtual Desktop A as indicated at . Virtual Desktop A includes the personalized environment that includes user-specific applications and displays from Desktop A, including, but not limited to user email accounts, user stored files, user documents, etc. Further, in some embodiments, Desktop A may include a server environment, such that Desktop A is coupled or linked to one or more servers which can be accessed through Desktop A. Thus, a user may be able to use any second computing device (e.g. computing device ) and virtual desktop key  enables virtual instant or substantially instant access to a user's customized desktop (Desktop A) from first computing device .","In some examples, virtual desktop key  acts as a USB memory card specially programmed to connect via the network  (such as the Internet) to user's desktop environment automatically. By providing the virtual desktop key, the complexity of a user attempting to access their desktops from a remote computer is eliminated. As such, in one example, a user may carry the key in their wallet or on their key chain and without the need to carry a lap top or other system, the user may plug the key into a remote networked computing system, such as through the USB port. It should be appreciated that once the virtual desktop key is set-up, the virtual access key is configured to enable a user, after identification, to automatically connect to a user's desktop. As such, users can utilize existing desktop or server environments.","In some systems, once a virtual desktop key is plugged into a second computing device, a user may need to validate or provide identification to enable the functionality of the key and provide access to a user's desktop. For example, one or more user passwords may need to be inputted to enable the key to provide access to the user's desktop. The security of the virtual desktop key may be built in. For example, there may be support for HTTPS, certificate or token: for example, 256 DES security.","Once the validation of the virtual desktop key has occurred, a user may have secured access to their virtual desktop. The virtual desktop key may provide support to any number of operating system environments, including but not limited to a MICROSOFT WINDOWS environment, an APPLE environment, an open source environment, etc. The user may be able to modify documents, browse the Internet, enter data, store information, check or receive email, etc. Changes may be saved such that the changes (such as data additions or deletions) are available on Desktop A, when Desktop A is again accessed through first computing device and\/or another remote computing device. For example, changes made to Virtual Desktop A may be stored on virtual desktop key  so that Desktop A is updated when virtual desktop key  is coupled to first computing device . As another example, changes made to Virtual Desktop A may be stored by desktop access manager  which may update first computing device  via network . In yet another example, changes made to Virtual Desktop A may be automatically updated on first computing device  without desktop access manager . Changes to Desktop A may be updated in real-time, at predetermined intervals during a session, and\/or at the end of a session. Saving changes prevent interruption and redundancy by the user.","In some examples, and as briefly described above, a desktop access manager  may be communicatively linked with one or more of the virtual desktop key , the first computing device , and\/or the second computing device  through network . The desktop access manager  may be a remote computing device or server and the desktop access manager may be configured to manage virtual access to user's desktops. Management of the virtual access may include tracking use and validating a user's identification or password. Further, management may include enabling security between the first computing device and the second computing device. In some examples, desktop access manager  enables saving of changes which occur when changes are made through a second computing device to Desktop A, as described above.","It will be appreciated that desktop access manager  may be configured to manage a plurality of desktops. Therefore, a storage device associated with desktop access manager  may be configured to store data for a plurality of virtual desktops. In this way, desktop access manager  manages a plurality of users such that each user may access their personal virtual desktop through any computing device using a virtual desktop key, as described above.","It is noted that in some examples, the desktop access manager may provide a back-up for disaster recovery. Further, in some systems, the desktop access manager may provide virus protection, including one or more of scans, continuous snakes, monitoring and virus protection applications, reporting systems and protections from malware and virus attacks.","The desktop access manager and virtual desktop key may work independently of the host computing device that it is connected. For example, users can access their desktop from the virtual desktop key and bypass the host computing device's software and gain access to the software from their desktop.","The use of the virtual desktop key with the desktop access manager in the system described above provides instant and automatic user access to a user's desktop. Further, such a system minimizes administration intervention while providing a private, secure cloud based computing resource. The single point of administration reduces costs making an efficient, highly secure system. Moreover, the single management point reduces complexities of application distribution and management and IT staff requirements for enabling current systems. Moreover, users are familiar with the use of physical keys such that the systems enable ease-of-use.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2","b":["200","202","204","202","206","200","206"]},"It is further noted that that virtual desktop key  may further include a key ring connector, such as a loop  or hole (not shown) to enable a user to couple the virtual desktop key to a key chain or other location.","In addition, virtual desktop key  may also include indicia . The indicia may enable a user to easily identify the key and\/or may provide promotional opportunities to a related business, etc.","Although shown in  in the shape of a key, it should be appreciated that other configurations are possible. Further, other configurations of the key shape are also possible, where the handle and\/or blade is extended or shortened, where the cut-outs are more extensive or are on both sides of the blade, etc. The illustration is provided for example only and is not intended as a limitation.","In some embodiments, virtual desktop key  may have radio frequency (RF) capability. For example, virtual desktop key  may include a RF transceiver and\/or receiver, indicated at . As such, virtual desktop key  may communicate with any device with RF capability via radio waves.","Further, in some embodiments, virtual desktop key  may be configured to verify a user via biometrics. As one non-limiting example, virtual desktop key  may include a scanning device to read a fingerprint or thumbprint of a user. Such a scanning device may be included on a portion of virtual desktop key , for example on bow . In this way, virtual desktop key  may be configured to biometrically identify a user. It will be appreciated that the virtual desktop key  may be configured to grant access to a user's desktop using virtually any type of verification technique. Further, virtual desktop key  may be customizable by a user to impart various levels of security.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 3","FIG. 1","FIGS. 1 and 2","FIG. 1"],"b":["300","302","304","302","304","50"]},"As shown in , various security levels may be included to validate a token associated with key , and may optionally include one or more methods to authenticate a user of key . Each security level may be associated with data being transferred between key  and server .","For example, as shown at , security level  may be associated with token validation. When key  is in coupled to server  via a network as described above, key  may be validated via a token. For example, key  may send a message to server  requesting token validation. In response, server  may send a message to key  that indicates the token has been validated. Alternatively, the token request may be not be validated, if the token validation code is not satisfied. The following represents example code that may be executed for token validation; however it will be appreciated that other code may be executed without departing from the scope of this disclosure.",{"@attributes":{"id":"p-0038","num":"0037"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"private void Form1_Load(object sender, EventArgs e)"},{"entry":"{"},{"entry":"Cursor = Cursors.WaitCursor;"},{"entry":"\/\/GetUSBStatus( );"},{"entry":"\/\/710:Encrypted Token file is sent from key to server over network"},{"entry":"CrypticInfo myToken=null;"},{"entry":"FileHelper fh = new FileHelper( );"},{"entry":"bool goodToken = false;"},{"entry":"if (fh.TokenFileExists( ))"},{"entry":"{"},{"entry":"myToken = fh.GetTokenFromFile( );"},{"entry":"goodToken = TestToken(myToken.GetToken( ));"},{"entry":"\/\/If the file exists but the token is invalid, the status"},{"entry":"\/\/can be reset making the key usable again."},{"entry":"}"},{"entry":"else"},{"entry":"{"},{"entry":"myToken = new CrypticInfo(\u201cBad Key\u201d, DateTime.Now);"},{"entry":"\/\/\u201cBad Key\u201d will need to be changed to something more random\u201d"},{"entry":"goodToken = false; \/\/Just to make sure."},{"entry":"\/\/This condition will render the key completely inoperable."},{"entry":"}"},{"entry":"\/\/712:Does Token Validate?"},{"entry":"if (goodToken)"},{"entry":"{"},{"entry":"MessageBox.Show(myToken.GetToken( )+\u201c-is a valid token\u201d);"},{"entry":"\/\/716:Server transmits validation response back to key"},{"entry":"fh.DecryptFiles(myToken.GetToken( ));"},{"entry":"\/\/718:Protected data is available to run"},{"entry":"}"},{"entry":"else"},{"entry":"{"},{"entry":"MessageBox.Show(myToken.GetToken( )+\u201c-is an invalid token\u201d);"},{"entry":"\/\/714:End"},{"entry":"fh.EncryptFiles(myToken.GetToken( ));"},{"entry":"}"},{"entry":"Cursor = Cursors.Default;"},{"entry":"this.Close( );"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Turning back to , virtual desktop access may optionally include security level  which may be associated with user authentication, as shown at . As discussed in more detail with respect to , a user may be authenticated via one or more of a username, password, biometric data, etc. Briefly, as shown in , user authentication may include communication between key  and server . For example, server  may send an encrypted file to key . The encrypted file may include one or more templates associated with a user of key . In this way, templates may be used to perform a matching operation to determine if a particular user is permitted to access a virtual desktop associated with key . It will be appreciated that one or more templates may be stored on server  and the encrypted file may include instructions that when executed, prompt a user to enter authentication data. In this way, authentication data may be exchanged back and forth between key  and server  in order to authenticate the user.","At , a user accesses a virtual desktop via any suitable virtual desktop infrastructure. As such, server  may send data to key  pertaining to the particular virtual desktop. Additionally, key  may send data to server  that indicates a change, addition and\/or deletion associated with the virtual desktop. In this way, a record associated with the virtual desktop is updated on server . It will be appreciated that the record may be updated in real-time, in predetermined intervals, and\/or when a user prompts an update during a virtual desktop session.","In this way, the security associated with a virtual desktop key is customizable. For example, the virtual desktop key may be configured for token validation without user authentication, thus providing a lower security option. Such an option may be desirable for multi-user access to a virtual desktop through a single virtual desktop key. For example, multiple employees may have access to a common workstation desktop when traveling. Alternatively, multiple users may remotely access the common workstation desktop after being authenticated. In this way, each user accessing the common workstation desktop may be identified and potentially tracked to create a manifest including information pertaining to each user's virtual desktop access session.","As another example, the virtual desktop key may be configured for token validation and user authentication, thus providing a higher security option. Such an option may be desirable for single-user access to a virtual desktop. For example, a user with confidential data may wish to remotely access their personal desktop and therefore may desire a higher level of security when launching a virtual desktop protocol.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 4","FIG. 1"],"b":["10","400","400","400"]},"Section A may include core code  and token . Core code  may be a fixed code, and may not be altered. For example, core code  may be stored in a ROM area of key ; therefore core code  may be permanent. Core code  may contain instructions to be executed by a processor (e.g. processor  of ). Such instructions may include executables to autorun a program connecting a remote computing device to a server, such as desktop access manager . An autorun may trigger validation of key  by validating token . Token  may be generated when the key is provisioned. Therefore, token  may be configured as a local identifier that is unique to key . As such, the local identifier may be stored in a ROM area of key , thus the local identifier may be permanent.","Section B may include core code  and encrypted file , such as an encrypted security file. Core code  may be a fixed code, and may or may not be altered. For example, core code  may be stored in a ROM\/RAM area of key . Therefore, core code  may be permanent, writable, or may contain portions that are permanent while other portions may be writable. Core code  may contain instructions to be executed by a processor (e.g. processor  of ). Such instructions may include executables that authenticate a user of key . Authentication may include more than one factor to identify a user. For example, a first factor may include authenticating a user via an account ID and\/or password. A second factor may include a request for user identification information, such as biometric identification, including but not limited to fingerprint recognition, retina recognition and\/or voice recognition. Authentication data  may be received as a component of encrypted file . For example, desktop access manager  may send encrypted data  to key  following validation of token .","Encrypted data  may include authentication data  as described above, and may also optionally include a digital signature such as DRM signature . The digital signature may include virtually any algorithm that enables key generation, encryption, and decryption. One or more key generation algorithms may select a private key at random from a set of possible private keys. The key generation algorithm may output the selected private key and a corresponding public key. Given a message and the selected private key, one or more encryption algorithms may generate a signature. The signature may be verified by one or more decryption algorithms, which may accept or reject the message's claim to authenticity based on the message, the public key and the signature.","Section C may include a virtual desktop protocol such as virtual desktop infrastructure (VDI) . VDI  may hold instructions that when executed by a processor (e.g. processor  of ) enable a user to access Desktop A. VDI  may contain fixed or programmable instructions. It will be appreciated that virtual desktop key  may be configured for virtually any virtual desktop infrastructure software. In this way, virtual desktop key  is customizable for virtually any VDI client.","Section C may include an open payload  portion of key . As such, Section C may contain data of any type. As non-limiting examples, open payload  may include audio data, video data, application data, widget data, and\/or other digital payloads. Data included in open payload  may be in any suitable format. For example, audio data may include data formatted as an mp3, mp4, wav or aiff file. Key  may be configured such that trace markers, such as temp files are not retained in open payload . Thus, key  may be configured so as to leave no trace and thereby increase the anonymity of key .","It will be appreciated that the above example key  is non-limiting and that other configurations are possible without departing from the spirit of the disclosure. For example, key  may be configured as one section rather than more than one section. Alternatively, key  may be configured such that there are more than three sections.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 5","FIG. 1","FIG. 4"],"b":["10","500","400"]},"Section A of key  may further include bare metal operating system (O\/S)  and temp files . O\/S  may be provided on key  and may drive virtual desktop access rather than, or in addition to, the operating system of the computing device (e.g. second computing device  of ). For example, core code  may trigger O\/S  to load during an autorun. Once O\/S  has loaded, temp files  may be temporarily stored within Section A. For example, temp files  may be provisioned each time O\/S  loads, and temp files  may be deleted when a virtual desktop access session ends and key  is removed from a computing device. In this way, key  may optionally drive virtual desktop access without utilizing the operating system of the computing device.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 6","FIG. 1","FIG. 1","FIG. 1"],"b":["600","600","602","18","14","604","606","600","608"]},"At , method  includes determining if an encrypted file exists on the key. If the answer is no, method  proceeds to . If the answer is yes, method  proceeds to .","At , an operating system or API executes instructions (e.g. core code ) to delete the pre-existing encrypted file. When the virtual desktop key does not include a pre-existing encrypted file, method  includes at , transmitting an encrypted file from the server to the virtual desktop key via a network, as described above.","The encrypted file may include one or more templates that may be used to verify a user of the virtual desktop key. For example, the encrypted file may include one or more usernames and passwords to grant access to the virtual desktop key and\/or the user's personal desktop. Further, the encrypted file may include one or more biometric templates that may be used to verify a user's biometric data.","At , method  may optionally include a user inputting biometric data for verification. For example, a user may place a thumb on a fingerprint scanner, which is provided as one non-limiting example. At , method  decides if the user biometric data input matches a stored user biometric template. For example, a stored user biometric template may be received as part of encrypted file  as described above. A match may be considered a match within a predetermined threshold value. For example, a match may be determined if the user input matches with at least 99% accuracy. If the answer to  is no, method  ends at . If the answer to  is yes, method  proceeds to .","At , a user is prompted to enter a username and a password. The username and password may be associated with granting access to the virtual desktop key and\/or the user's personal desktop (e.g. Desktop A of ). At , method  decides if the username and password validates the user. For example, the username and password may validate the user if the username and password matches a template. Such a template may be received as part of encrypted file  as described above. If the answer to  is no, method  ends at . If the answer to  is yes, method  proceeds to .","At , method  includes the operating system or API executing instructions (e.g. core code ) to launch a virtual desktop protocol (e.g. VDI client software ) thus granting access to the virtual desktop.","It will be appreciated that method  may include additional or alternative steps to validate a user and grant virtual desktop access. As such, method  is provided by way of example and is not meant to be limiting. Further, it will be appreciated that the example steps shown may be performed in any suitable order. For example, a user may be prompted to enter a username and password prior to inputting biometric data for verification.","In some embodiments, as briefly introduced above, method  may include more than one user name and password. For example, a first username and first password may be associated with the virtual desktop key and may grant access to the key when the user is verified. Method  may optionally include a second username and a second password that may be associated with a remote desktop and may grant access to the remote desktop when the user is verified. It will be appreciated that such a second username and password may be implemented before or after the API call to launch the virtual desktop protocol.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 7","FIG. 1"],"b":["700","700","702","704","502","402"]},"When included, at  method  determines if autorun is executed. If the answer to  is no, method  proceeds to  and the user receives an indication to manually run the executable, and method  advances to .","If the answer to  is yes, method  proceeds to  where an encrypted token file is sent from the key to a server (e.g., desktop access manager ) via a network. From , method  proceeds to .","At , method  determines if the token is validated. If the answer to  is no, method  ends at . If the answer to  is yes, method  proceeds to .","At , method  includes sending a validation response from the server (desktop access manager) to the key. From , the method continues to .","From , method  continues to  of  which shows a continuation of the example method  of . At  the operating system (or API) executes instructions to search for a pre-existing encrypted file on the key. For example, such instructions may be included in core code  of a virtual desktop key. From , method  proceeds to .","At , method  determines if an encrypted file exists on the key. For example, an encrypted file may exist if the key had been previously used for a virtual desktop access session. In another example, the key may not contain an encrypted file which may indicate that they key is being used for a first virtual desktop access session. If the answer to  is yes, method  proceeds to  and the operating system (or API) executes instructions (e.g. core code ) to delete the pre-existing encrypted file. From , the method proceeds to .","If the answer to  is no, method  proceeds to  where the desktop access manager sends a new encrypted file to the key. The encrypted file may include one or more authentication data templates and a DRM signature, as discussed above. In this way, an encrypted file is deleted each time the key is removed from a computing device and a new encrypted file is received at the beginning of each session. While the authentication data may not change with each encrypted file, portions of the DRM signature may change. For example, the encrypted file may include a new private key selected from a set of possible private keys for each virtual desktop access session. Therefore, a user experiences greater feeling of security when remotely accessing a desktop. From , method  proceeds to .","At , the operating system or API executes instructions (e.g. core code ) that call to the encrypted file to trigger login credentials. For example, login credentials may include authentication data such as one or more usernames, one or more passwords and\/or one or more biometric inputs as discussed above. From , method  proceeds to .","At , method  determines if the login credentials entered by the user match the authentication data templates in the encrypted file. If the answer to  is no, method  ends at . If the answer to  is yes, method  proceeds to .","At , the operating system (or API) executes instructions (e.g. core code ) that call to a virtual desktop protocol. For example, the virtual desktop protocol may be a VDI based protocol such as VDI , a remote desktop protocol (RDP), a HTML based protocol, a DRM signature, or virtually any custom code. From , method  proceeds to .","At , method  includes the execution of the virtual desktop protocol on the computing device (e.g. second computing device  of ). Thus, a user may remotely access a computing device and view the desktop of that particular computing device.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 9","FIG. 1"],"b":["900","900","902","902","900","904"]},"At , method  includes maintaining the key in the computing device during the virtual desktop access session. From , method  proceeds to .","At , method  includes the server (desktop access manager) pinging the key, and the operating system (or API) performs a random session status check. From , method  proceeds to .","At , method  determines if the key responds to the session status check. If the answer to  is yes, method  proceeds to  and the virtual desktop access session continues. If the answer to  is no, method  proceeds to .","At , method  includes sending a kill session command from the server (desktop access manager) to the operating system (or API) to terminate the virtual desktop access session. From , method  proceeds to .","At , the server (desktop access manager) invalidates a hash code of the encrypted file. In this way, a key generated by a DRM signature is inhibited from granting access to a remote desktop when the virtual desktop key is inserted into a computing device again. Instead, the virtual desktop key receives a new encrypted file including a new DRM signature with each use as described above with respect to . From , method  ends at .",{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 10","FIG. 1"],"b":["1000","1000","14","16","50","1000"]},"Turning now to method , at , a user connects a virtual desktop key in a remote computing device with network access, such as Internet access. As an example, the virtual desktop key may be inserted through a USB connector of the computing device. The remote computing device recognizes the connection of the virtual desktop key and requests user identification.","At , the user credential is verified for the virtual desktop key. If the virtual desktop key cannot be verified then the method ends at . If the virtual desktop key is verified then the method continues at . In some examples, the virtual desktop key is authenticated and validated by a server (such as the desktop access manager described above) and an SSL connection is made to the server. It should be appreciated that the virtual desktop key authentication may require user input of a password or other identifier. In other systems, the virtual desktop key authentication may occur automatically, without user input. Examples of virtual desktop key authentication are discussed above with respect to .","If the verification of the virtual desktop key has been successful, at , then an application may be launched to connect the remote computing device with the desktop manager. In some examples, the connection may be made through use of a public network, such as the Internet, and a private tunnel with SSL.","Additional security may be provided in some systems. For example, although not required, in some examples, a user identification code may be inputted at . In some systems, input of the proper user identification code may enable access to the user's desktop at . The user identification code may include a user name and password or other user identification information.","In some systems, additional security layers may be provided in addition or instead of the user identification input. For example, at , in some systems, a security code such as an RSA code may be required. Upon successful entry of the user identification code and the RSA code, access to the user desktop may be enabled, at . Failure to provide the proper identification code or RSA code may end the process, at . Examples of virtual desktop key security are discussed above with respect to .","Upon access to the user desktop, the user's graphical display is provided on the remote computing device. Depending on the preset configuration, components of the user's desktop are mapped to the virtual desktop displayed on the remote computing device. In some examples, substantially all or all of the components of the user's desktop are mapped to the virtual desktop displayed on the remote computing device. For example, a USB, clipboard and printers, scanners, etc. may be remapped to the remote computing virtual desktop.","At , removal of the virtual desktop key terminates the remote computing virtual desktop. In some examples, removal of the virtual desktop key may trigger a time count-down, where after a set time of being disconnected, the active virtual desktop session will be closed. In other examples, removal of the virtual desktop key may automatically trigger immediate termination of the virtual desktop session. The user may be automatically logged out upon such termination such that verification and reentry of user identification codes are necessary for restarting access to the virtual desktop. It should be appreciated that in some examples, a user may selectively log off, as indicated at , effectively terminating the access to the virtual user desktop. In some examples, the desktop access manager may periodically check the status of a virtual desktop access session, as discussed above with respect to .","The above method  provides a connection between the desktop access manager (and the user's desktop) and the virtual desktop key through the USB software where the connection is secure and encrypted. It is noted that the virtual desktop key may be locked preventing alteration once configured for use with the desktop access manager to enable access to a specific desktop.","In some systems, securities may further be provided to reduce potential concerns regarding loss or fraudulent attempts to access a user's virtual desktop key through a misplaced or lost key. For example, in some systems, after a preset number of access attempts to authenticate and provide identification data, the virtual desktop key may be locked or erased to provide user protection.","It should be appreciated that the above system and method may be used in a wide variety of environments. For example, in small businesses, users may struggle with finding easy to employ solutions which provide for remote access to their systems.","In one example, such as for small and medium sized businesses, the concept of hosting carries ambiguity and uncertainty due to costs and complexities with current systems. The virtual desktop key makes hosting simplified and virtual. In combination with the desktop access manager, the virtual desktop key reduces a business' physical infrastructure and administrative costs. Specifically, the use of the desktop access manager results in use of fewer onsite servers and related hardware, real estate, power and cooling requirements which enable easier management of the business solution and may reduce the environmental impact. Such reduction in resources supports environmental concerns of current systems. For example, in some systems, administrative tasks including maintenance, software upgrades and patch deployment are managed by the desktop access manager in a secure and private cloud with the same quality as the enterprise cloud offerings.","From the usability perspective, the virtual desktop key may be provided to employees in the same way that parking cards or access cards for entry to company properties are given. The virtual desktop key may be a dedicated key to a single employee or group of employees. The subsequent virtual hosting services provided by the desktop access manager empowers the small and medium size businesses to focus on their business priorities that impact their performance and bottom line rather than keeping track of hardware and software infrastructure and dependencies which produces administration nightmare.","Further, it is noted that in some systems, specific types of access features may be provided on the virtual desktop key. Thus, features may be selectively preset for access depending on the user receiving a specific virtual desktop key. Thus, a business provide access levels to only certain features of a user's desktop depending on the employee or group of employees. The virtual desktop key can be configured to correspond with the access levels selected for the user.","In addition to ease of IT administration, the desktop access management system provides a higher level of efficiency and consistency of desktop environments within a business. In some current systems, an IT department may set up and deploy applications and resources such as accounting CRM, ERP or portals for the on-site business, but offering the same systems outside of the business site may be expensive and difficult. For example, such systems are limited when employees are at a client site in front of a system and need immediate access to information on their desktop.","In contrast, the present system and method provides access through the virtual desktop key and the desktop access manager access to a user's entire virtual desktop including applications, configurations and files increasing user efficiency and improving user experience. The system and method provide users with manageability and security for local or remote access through network connection on all standard desktops or laptops. Connecting the virtual access key in a networked system and logging in enables substantially instant access directly to a user's desktop, where the user's desktop is familiar and pre-configured to the user's business needs.","The systems and methods described herein allow a user to easily and securely access a user desktop from a remote computing device. The desktop access manager provides a management system which enables ease of administration and deployment of the associated virtual desktop keys. The use of the virtual desktop keys prevents a user from the necessity of carrying a laptop or having to navigate the complicated access systems currently available. Further, by providing a single desktop access manger, a plurality of businesses can share the IT costs without compromising security.","It should be appreciated that a use example has been provided above in regards to use of a virtual desktop key with small and medium sized businesses. As such, in the described example, a virtual desktop key may be provided to employees to enable the employee to have access to their desktop and workstation. However, it should be appreciated, that the virtual desktop key may also be used for personal connections or in other environments. For example, the virtual desktop key may provide secure access to a desktop available only to a selected group of users. For example, a virtual desktop key may be provided to students at a university or school enabling access to certain applications or programs which are available only to students. In other systems, a virtual desktop key may be provided to teachers enabling a second level of access to a desktop system and related applications. Further, in other examples, businesses may use the virtual desktop keys as promotional items where access provides access to a customized desktop or application. In even other examples, the virtual desktop key may provide access to a gaming platform or user's customized position in a gaming platform.","As another example, the virtual desktop key may provide access to authorized users of a service site. For example, the virtual desktop key may provide access to a remote desktop that allows viewing of movies or television shows. A virtual desktop key may be customized to the user allowing specific levels of access depending on membership or other criteria. As such, a user can have a subscription to a service site and then use the key which can verify the user's subscription and provide access to the service (such as playing movies or enabling selection of movies for viewing).","It is believed that the disclosure set forth above encompasses multiple distinct inventions with independent utility. While each of these inventions has been disclosed in its preferred form, the specific embodiments thereof as disclosed and illustrated herein are not to be considered in a limiting sense as numerous variations are possible. The subject matter of the inventions includes all novel and non-obvious combinations and subcombinations of the various elements, features, functions and\/or properties disclosed herein.","Inventions embodied in various combinations and subcombinations of features, functions, elements, and\/or properties may be claimed in a related application. Such claims, whether they are directed to a different invention or directed to the same invention, whether different, broader, narrower or equal in scope to any original claims, are also regarded as included within the subject matter of the inventions of the present disclosure."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["The disclosure is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings, in which the like references indicate similar elements and in which:",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 5","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 6","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 7","FIG. 1"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 9","FIG. 1"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
