---
title: Automatic discovery and configuration of external network devices
abstract: An improved system and method for discovering and configuring secure network topologies responds to existing networking environments and encompasses the dynamic detection and configuration of an appropriate hardware or software solution. In an embodiment of the invention, a broadcast mechanism is used to provide hardware device discovery while application programming interfaces provide discovery of software firewalls. In a further embodiment, a polling technique is used to ensure that the configuration of a gateway device does not change, endangering the protected network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07418486&OS=07418486&RS=07418486
owner: Microsoft Corporation
number: 07418486
owner_city: Redmond
owner_country: US
publication_date: 20030606
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This invention relates generally to a system and method for automatically discovering and configuring network security facilities, and more particularly relates to a system and method for dynamically combining the capability to discover both hardware and software firewall facilities available to a networked gateway server and automatically configuring external network gateway devices or server software to secure a network.","As computer networks become more common in private, commercial, institutional, and governmental settings, as well as other settings, the need to secure local networks against infiltration or attack from external entities has become increasingly important. For example, local networks often have a gateway or other entity through which clients on the local network may access a wide area network (WAN) such as the Internet. This arrangement is beneficial for many reasons. In a commercial setting, for example, a commercial enterprise may wish its employees to have access to the Internet for business reasons, but may want to control or monitor that access. The gateway can perform such controlling or monitoring functions. In addition, with all computers on the local network being exposed to the Internet via only one or a few portals, network administrators can more easily monitor threats or suspicious activity impinging on the local area network from the Internet.","Increasingly, hardware gateway devices, such as Internet Gateway Devices (IGDs) are being preferred over software gateways, such as are sometimes deployed on servers that serve as gateways. The reasons for the current prevalence of hardware devices in this role are many, but some of the primary advantages of hardware gateway devices include acquisition cost and cost of deployment.","Nonetheless, such hardware gateways or other hardware points of egress and entry cannot perform properly to safeguard or monitor the local network unless they are first identified and properly configured. In particular, network environments vary greatly in terms of structure and layout, and the type of communications that may be considered to be suspect varies from one network environment to another as well. For this reason, hardware network gateways and other hardware access points to the local network are typically configured upon installation prior to being pressed into service. Currently, discovery and configuration of hardware gateways, as well as reconfiguration of such devices, has been performed manually. For example, a network administrator may be aware of a newly installed device and will specifically communicate with and configure that device, such as via a configuration application over the local network. Not only does this require the administrator to be aware of the deployed hardware gateways, but in addition the administrator must be knowledgeable regarding the particular configuration routine and requirements of each device.","In embodiments of the invention, a configuration system and method allow for dynamic selection between software or hardware firewall solutions, and automatic configuration of either solution in a seamless manner. In particular, the UPnP architecture is leveraged to provide discovery of external devices while public Application Programming Interfaces (APIs) are used in the case of software solutions. In both cases, configuration information can be exchanged via the same two techniques (UPnP or public APIs). A configuration system and method allow for simple discovery and configuration of Internet Gateway Devices. In particular, the Universal Plug and Play (UPNP) architecture is exploited to provide discovery of external devices, and to exchange configuration information for such devices. In addition, if the Dynamic Host Configuration Protocol (DHCP) is implemented on the target device, this protocol can be used during configuration within embodiments of the invention.","The selection of services to secure the network involves using UPnP to search beyond local devices to discover other networked devices as well, and using API's to discover software capabilities available to the host machine. In an embodiment of the invention, a broadcast mechanism is used to facilitate device discovery, while API's are used to perform the corresponding discovery of software capabilities. The discovery and configuration process comprises three general steps in an embodiment of the invention. First the device and software are discovered using UPnP, for the hardware solutions, and public API's for the software solutions. Second, in the hardware case the device transmits its identification, capabilities, etc. to the discovered unit, whereas in the software case there may be additional API calls to determine the capabilities and current configuration of the software firewall. Finally the hardware or software solution is configured. In the hardware case, the transmitted device information is used to configure the device, whereas in the software case, APIs are used to configure the software based on the collected configuration information. In an embodiment of the invention, a polling mechanism is used to ensure that the configuration of the device or software does not change, or that if it changes it can be quickly reset to its prior state.","Additional features and advantages of the invention will be made apparent from the following detailed description of illustrative embodiments which proceeds with reference to the accompanying figures.","Turning to the drawings, wherein like reference numerals refer to like elements, the invention is illustrated as being implemented in a suitable computing environment. Although not required, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multi-processor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","This description begins with a description of a general-purpose computing device that may be used in an exemplary system for implementing the invention, after which the invention will be described in greater detail with reference to subsequent figures. Turning now to , a general purpose computing device is shown in the form of a conventional computer , including a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within the computer , such as during start-up, is stored in ROM . The computer  further includes a hard disk drive  for reading from and writing to a hard disk , a magnetic disk drive  for reading from or writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media.","The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical disk drive interface , respectively. The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the computer . Although the exemplary environment described herein employs a hard disk , a removable magnetic disk , and a removable optical disk , it will be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, random access memories, read only memories, storage area networks, and the like may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk , magnetic disk , optical disk , ROM  or RAM , including an operating system , one or more application programs , other program modules , and program data . A user may enter commands and information into the computer  through input devices such as a keyboard  and a pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, game port or a universal serial bus (USB) or a network interface card. A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor, many computers also include other peripheral output devices, not shown, such as speakers and printers.","The computer  preferably operates in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . In an embodiment of the invention, the remote computer  is a UPNP enabled Internet Gateway Device (IGD) and has the features typically associated with such a device, as will be appreciated by those of skill in the art. The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the local network  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN . The modem , which may be internal or external, is connected to the system bus  via the serial port interface . Program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device if such is present. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","In the description that follows, the invention will be described with reference to acts and symbolic representations of operations that are performed by one or more computers, unless indicated otherwise. As such, it will be understood that such acts and operations, which are at times referred to as being computer-executed, include the manipulation by the processing unit of the computer of electrical signals representing data in a structured form. This manipulation transforms the data or maintains it at locations in the memory system of the computer, which reconfigures or otherwise alters the operation of the computer in a manner well understood by those skilled in the art. The data structures where data is maintained are physical locations of the memory that have particular properties defined by the format of the data. However, while the invention is being described in the foregoing context, it is not meant to be limiting as those of skill in the art will appreciate that many of the acts and operations described hereinafter may also be implemented in hardware.","Turning to , an exemplary operating environment  in which embodiments of the invention may be implemented is shown. In particular, an IGD or other hardware gateway  and\/or the firewall software capabilities available on a gateway computer  secures a local network  against improper access from a computer such as a remote computer  that may access the network  via a wide area network (WAN) . The WAN  may be any type of wide area network, and will typically, although not necessarily, comprise the Internet. The local network  may comprise any number and type of computers and\/or devices, but a single computer  is shown for the sake of illustration. In an embodiment of the invention, the computer  is a small business server. Examples of such servers include email servers, web servers, and so on. The local network  may comprise additional resources such as directories, databases, etc.","In a typical usage scenario wherein the computer  is an email server, the server  transmits email from clients on the local network  to recipients, such as remote computer , via the WAN . The server  also forwards email received from the WAN , such as from remote computer , to intended recipients on the local network . The email server may have many of the features discussed with respect to computer  of . In a typical usage scenario wherein the computer  is a web server, the server  hosts one or more web sites accessible, such as to remote computer  over the WAN . Such sites may be commercial, educational, etc. In addition to the gateway  illustrated in , there may also be any number of other gateways present in the operating environment . The discovery and configuration of a hardware gateway device, such as device , and a software firewall, such as may reside on the gateway computer , will be described in greater detail with reference to .",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIGS. 3A and 3B","FIGS. 3A and 3B","FIG. 2"],"b":["301","207","205","207","205","205","207"]},"In steps  through , to be discussed separately in greater detail below, a connection facilitation application, referred to herein as a connection \u201cwizard,\u201d discovers the newly installed device  and\/or software firewall facilities and configures the device and\/or software firewall according to selections made by a user via the wizard. An exemplary arrangement of the connection wizard within the architecture of a discovering machine is shown schematically in . In particular, the connection wizard  is an application that accesses the operating system  of the host computer  to execute UPNP operations. The connection wizard  preferably is also able to send and receive transmissions using the networking connection facilities  of the host computer . The host computer  for the connection wizard  may be located anywhere on the local network , and may be, for example, the computer .","Referring again to the flow chart of , the connection wizard  multicasts a search message to the Simple Search and Discovery Protocol (SSDP) multicast address via all of the network adapters (i.e. the connection facilities ) of the host computer  at step . The multicast may be automatically initiated periodically at a predetermined interval or may be automatically triggered after a command or request from a user. At step  it is determined whether any hardware gateway devices were detected. If not, the process transitions to junction A of . Otherwise, the process flows to step , whereat the user is prompted to indicate whether the detected hardware gateway device(s) should be used. If it is determined at step  that no detected gateway device should be used, the process transitions to junction A of . Otherwise, the process moves to step , with only those gateway devices that should be used participating in this and subsequent steps. Assuming that the newly installed gateway device  is associated with a valid IP address, then it will respond in step  by transmitting a URL to the connection wizard  at the host computer  for use in obtaining device description information. It will be appreciated that URLs for more than one device may be received at the connection wizard .","At step , the connection wizard  presents a list of discovered devices to the user of the host computer . After the user selects a device to configure in step , such as device  in this example, then at step  the connection wizard  transmits an HTTP GET request to the URL that was sent by the device in step . Note that if no device is selected by the user in step , the process moves directly to junction A of . At step , the device  responds by transmitting an XML document containing sub-devices and services contained in the root device as well as URLs usable to configure the sub-devices and services. At step , the connection wizard  presents configuration options for the sub-devices and services to the user and receives user configuration selections for the sub-devices and services. Typically the configuration thus specified will comprise a set of specified port mappings.","In step , the connection wizard  locates a configuration service such as a WANIpConnection service supported by the discovered device  as well as the configuration URL associated with the WANIpConnection service. Both the WANIpConnection service and the associated URL can be located in the list received from the device in step . Finally, at step , the connection wizard  sends Simple Object Access Protocol (SOAP) requests to the configuration URL to implement the port mappings according to the user-selected configuration. Thus, the newly installed device  has been automatically discovered and easily configured by the user, and the network is now secured by the device  as per the user-selected configuration. After step , the process flows to junction A of  for discovery and configuration of any software firewall or firewalls that are to be used. In an embodiment of the invention, if a hardware firewall has been configured as discussed above, then the process terminates after step  without configuring a software firewall.","At step , the process determines whether a server such as represented by gateway computer  is configured to act as a gateway computer, as opposed to simply being a client on the local network . If it is determined that the server is configured to act as a gateway computer, then at step , the connection wizard  calls the known APIs to discover software firewall capabilities available on the server. In an embodiment of the invention, two software firewall solutions are supported. In this embodiment of the invention, first the Microsoft\u00ae Internet Security and Acceleration Server (ISA) API's by Microsoft\u00ae Corporation of Redmond Wash. are called to determine if ISA is installed. If ISA is not installed then the Microsoft Windows Server Routing and Remote Access Service API's are called. If it is determined that the server is not configured to act as a gateway computer, the process terminates from step .","At step , the process determines whether any software firewall capabilities were discovered on the relevant machine. If none were, then the process terminates. Otherwise, the process flows to step , whereat the user is prompted to indicate whether the discovered software firewall capabilities should be used. If it is determined that the discovered software firewall capabilities should not be used, then the process terminates. Otherwise the process flows to step , whereat the connection wizard  uses known APIs as discussed above to gather descriptive information regarding the discovered software firewall capabilities.","At step , the connection wizard  presents a list of discovered software firewalls to the user of the host computer. At step , the user selects a software firewall for configuration. Subsequently, the connection wizard  calls known APIs to gather information regarding sub-devices and services of the selected firewall at step . At step , the connection wizard  presents configuration options to the user and receives user configuration selections for sub-devices and services of the selected firewall. Finally at step , the connection wizard  calls APIs to configure software firewall sub-devices and services according to user selections.","In an embodiment of the invention, one of the services supported by the newly installed device  is the Dynamic Host Configuration Protocol (DHCP). DHCP is an Internet protocol typically used for configuring computers that are using TCP\/IP. DHCP can be used to assign IP addresses, provide stack configuration information, as well as to provide other configuration information. If the device  supports DHCP, then this behavior can be configured as well.","In an embodiment of the invention, the connection wizard  periodically polls the local network  to determine whether any new external hardware network devices have been added. Typically, even when such devices are UPNP enabled, there is no notice given when a new device is installed. In a further embodiment of the invention, the connection wizard  periodically assesses the configuration information of known devices to detect any change in configuration that could endanger security of the network . If a change in configuration is detected, the connection wizard  reconfigures the relevant device to its user-selected configuration.","Although those of skill in the art will appreciate that the APIs referenced above may be replaced by any suitable APIs, the following is a listing of exemplary known Microsoft\u00ae Routing and Remote Access Service APIs that are useful in implementing embodiments of the invention.","MprAdminBufferFree","MprAdminDeregisterConnectionNotification","MprAdminGetErrorString","MprAdminInterfaceConnect","MprAdminInterfaceCreate","MprAdminInterfaceDelete","MprAdminInterfaceDeviceGetInfo","MprAdminInterfaceDeviceSetInfo","MprAdminInterfaceDisconnect","MprAdminInterfaceEnum","MprAdminInterfaceGetCredentials","MprAdminInterfaceGetCredentialsEx","MprAdminInterfaceGetHandle","MprAdminInterfaceGetInfo","MprAdminInterfaceQueryUpdateResult","MprAdmnInterfaceSetCredentials","MprAdminInterfaceSetCredentialsEx","MprAdminInterfaceSetInfo","MprAdminInterfaceTransportAdd","MprAdminInterfaceTransportGetInfo","MprAdminInterfaceTransportRemove","MprAdminInterfaceTransportSetInfo","MprAdminInterfaceUpdatePhonebookInfo","MprAdminInterfaceUpdateRoutes","MprAdminIsServiceRunning","MprAdminRegisterConnectionNotification","MprAdminServerConnect","MprAdminServerDisconnect","MprAdminServerGetCredentials","MprAdminServerGetInfo","MprAdminServerSetCredentials","MprAdminTransportCreate","MprAdminTransportGetInfo","MprAdminTransportSetInfo","MprConfigBufferFree","MprConfigGetFriendlyName","MprConfigGetGuidName","MprConfigInterfaceCreate","MprConfigInterfaceDelete","MprConfigInterfaceEnum","MprConfigInterfaceGetHandle","MprConfigInterfaceGetInfo","MprConfigInterfaceSetInfo","MprConfigInterfaceTransportAdd","MprConfigInterfaceTransportEnum","MprConfigInterfaceTransportGetHandle","MprConfigInterfaceTransportGetInfo","MprConfigInterfaceTransportRemove","MprConfigInterfaceTransportSetInfo","MprConfigServerBackup","MprConfigServerConnect","MprConfigServerDisconnect","MprConfigServerGetInfo","MprConfigServerInstall","MprConfigServerRestore","MprConfigTransportCreate","MprConfigTransportDelete","MprConfigTransportEnum","MprConfigTransportGetHandle","MprConfigTransportGetInfo","MprConfigTransportSetInfo","Although those of skill in the art will appreciate that the APIs referenced above may be replaced by any suitable APIs, the following is a listing of exemplary known Microsoft\u00ae Internet Security and Acceleration COM interfaces, each comprising one or more APIs, that are useful in implementing embodiments of the invention.","FPC Object","FPCAccessControlEntry Object","FPCAccessControlList Collection","FPCAccount Object","FPCAccounts Collection","FPCActiveCacheConfiguration Object","FPCAdapter Object","FPCAdapters Collection","FPCAlert Object","FPCAlerts Collection","FPCAlertAction Object","FPCAlertActions Collection","FPCAlertInfo Object","FPCAlertNotification Object","FPCApplicationFilter Object","FPCApplicationFilters Collection","FPCArray Object","FPCArrays Collection","FPCArrayPolicyConfig Object","FPCArrayPolicyConfigs Collection","FPCAutoDial Object","FPCBackupRoute Object","FPCBandwidthPriority Object","FPCBandwidthPriorities Collection","FPCBandwidthRule Object","FPCBandwidthRules Collection","FPCCache Object","FPCCacheConfiguration Object","FPCCacheContents Object","FPCCacheDrive Object","FPCCacheDrives Collection","FPCClientAddressSet Object","FPCClientAddressSets Collection","FPCClientAutoScript Object","FPCClientBackupRoute Object","FPCClientConfig Object","FPCClientConfigSettings Collection","FPCClientSettingsSection Object","FPCContentGroup Object","FPCContentGroups Collection","FPCCredentials Object","FPCDeniedMethod Object","FPCDeniedMethods Collection","FPCDestination Object","FPCDestinationSet Collection","FPCDestinationSets Collection","FPCDialupEntry Object","FPCDialupEntries Collection","FPCDialupNetworkConnections Collection","FPCDirectAddressDestination Object","FPCDirectAddressDestinations Collection","FPCDirectIpDestination Object","FPCDirectIpDestinations Collection","FPCDiskDrive Object","FPCDiskDrives Collection","FPCEnterprise Object","FPCEnterprisePolicy Object","FPCEnterprisePolicies Collection","FPCEventDefinition Object","FPCEventDefinitions Collection","FPCExtensions Object","FPCFilterProtocol Object","FPCFilterProtocols Collection","FPCFirewallClientConfig Object","FPCFirewallChaining Object","FPCFirewallSession Object","FPCFirewallSessions Collection","FPCFirewallSessionConnection Object","FPCFirewallSessionConnections Collection","FPCFTPCacheConfiguration Object","FPCHTTPCacheConfiguration Object","FPCIpPacketFilter Object","FPCIpPacketFilters Collection","FPCIpRange Object","FPCLAT Collection","FPCLATEntry Object","FPCLDT Collection","FPCLDTEntry Object","FPCListenEntry Object","FPCListenEntries Collection","FPCLog Object","FPCLogs Collection","FPCNetworkConfiguration Object","FPCPolicyElements Object","FPCPrimaryRoute Object","FPCProtocolConnection Object","FPCProtocolConnections Collection","FPCProtocolDefinition Object","FPCProtocolDefinitions Collection","FPCProtocolRule Object","FPCProtocolRules Collection","FPCServerPublishingRule Object","FPCServerPublishingRules Collection","FPCPublishing Object","FPCRef Object","FPCRefs Collection","FPCRoutingRule Object","FPCRoutingRules Collection","FPCSchedule Object","FPCSchedules Collection","FPCScheduledContentDownload Collection","FPCScheduledContentDownloadConfig Object","FPCSecurityDescriptor Object","FPCServer Object","FPCServers Collection","FPCSignaledAlert Object","FPCSignaledAlerts Collection","FPCSiteAndContentRule Object","FPCSiteAndContentRules Collection","FPCSnapinNode Object","FPCSSLCertificate Object","FPCSSLCertificates Collection","FPCTunnelPortRange Object","FPCTunnelPortRanges Collection","FPCVendorParametersSet Object","FPCVendorParametersSets Collection","FPCWebBrowserClientConfig Object","FPCWebFilter Object","FPCWebFilters Collection","FPCWebProxy Object","FPCWebPublishingRule Object","FPCWebPublishingRules Collection","FPCWebRequestConfiguration Object","FPCWebSession Object","FPCWebSessions Collection","FPCWebSessionAdditionalInfo Object","It will be appreciated that an improved system and method for discovering and configuring secure network topologies that responds to existing networking environments and encompasses the dynamic detection and configuration of an appropriate hardware or software solution has been described. In view of the many possible embodiments to which the principles of this invention may be applied, it should be recognized that the embodiments described herein with respect to the drawing figures are meant to be illustrative only and should not be taken as limiting the scope of invention. For example, those of skill in the art will recognize that some elements of the illustrated embodiments shown in software may be implemented in hardware and vice versa or that the illustrated embodiments can be modified in arrangement and detail without departing from the spirit of the invention. Therefore, the invention as described herein contemplates all such embodiments as may come within the scope of the following claims and equivalents thereof."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["While the appended claims set forth the features of the present invention with particularity, the invention, together with its objects and advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings of which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
