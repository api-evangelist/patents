---
title: Rendering map images using modifications of non-raster map data
abstract: A map server generates vector descriptors in a non-raster format, each indicating a geometry of a respective map element, to render a first map image of a selected geographic region at a client device. The map server then provides the vector descriptors to the client device. Upon receiving an indication that a second map image for the selected geographic region is to be rendered at the client device, the map server generates a modification indication that indicates a set of one or more vector descriptors, each of which corresponds to a respective map element that is rendered in one but not both of the first map image and the second map image, and provides the modification indication to the client device, so that the client device can render the second map image using at least some of the vector descriptors and the modification indication.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08928691&OS=08928691&RS=08928691
owner: Google Inc.
number: 08928691
owner_city: Mountain View
owner_country: US
publication_date: 20110926
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE DISCLOSURE","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present disclosure relates to map rendering systems, such as electronic map display systems, and more specifically to a map rendering system in which map images are rendered using map data provided in a non-raster format.","The background description provided herein is for the purpose of generally presenting the context of the disclosure. Work of the presently named inventors, to the extent it is described in this background section, as well as aspects of the description that may not otherwise qualify as prior art at the time of filing, are neither expressly nor impliedly admitted as prior art against the present disclosure.","Today, maps of geographic regions may be displayed by software applications running on a wide variety of devices, including mobile phones, car navigation systems, hand-held global positioning system (GPS) units, and computers. Depending on the application and\/or user preferences, maps may display topographical data, street data, urban transit information, traffic data, etc. Further, some applications display maps in an interactive mode, so that a user may operate various controls (radio buttons, scrollbars, etc.) to change the zoom level or pan the \u201ccamera\u201d to a new location, for example. A user in some cases also may select or unselect the display of certain information. For example, the user may operate the appropriate control to turn on the display of bicycle trails.","To render a map image, a device typically receives raster images from a dedicated server. For example, a map server may operate on the Internet and provide images in a Portable Network Graphics (PNG) format to various client devices for the specified geographic regions. While raster images are relatively easy to render at a client device, raster image data typically requires a large amount of storage space for a comprehensive map. Also, it is difficult to efficiently manipulate raster images at a client device. For example, to zoom in on a selected region, either new raster image data is retrieved from the server, or the available raster image data is enlarged with a noticeable loss in quality.","In an embodiment, a computer-implemented method for providing map data to a client device includes generating several vector descriptors for rendering, at the client device, a first map image for a selected geographic region, where each vector descriptor indicates a geometry of a respective map element in accordance with a vector graphics format. The method further includes causing the vector descriptors to be transmitted to the client device via the communication network, receiving an indication that a second map image for the selected geographic region is to be rendered at the client device, such that the second map image is different from the first map image, generating a modification indication that indicates a set of one or more vector descriptors, each of which corresponds to a respective map element that is rendered in one but not both of the first map image and the second map image, and causing the modification indication to be transmitted to the client device via the communication network for rendering the second map image using at least some of the vector descriptors and the modification indication.","In another embodiment, a tangible non-transitory computer-readable medium stores instructions that, when executed by one or more processors, cause the one or more processors to generate map data in a non-raster format for a selected geographic region, where the map data is interpretable at a client device to generate a first map image in a raster format and cause the map data to be transmitted to the client device via a communication network. Further, the instructions, when executed by one or more processors, cause the one or more processors to receive, from the client device, an indication that a second map image for the selected geographic region is to be rendered at the client device, generate a modification indication descriptive of one or more modifications to the map data for transforming the first map image into the second map image, and cause the modification indication to be transmitted to the client device via a communication network for rendering the second map image in the raster format at the client device using at least a portion of the map data and the modification indication.","In another embodiment, a method in a computing device for generating map images includes receiving, via a communication network, several vector descriptors for rendering a first map image for a selected geographic region, where each vector descriptor indicates a geometry of a respective map element in accordance with a vector graphics format and rendering the first map image using the plurality of vector descriptors. The method also includes receiving, via the communication network, a modification indication that indicates a modification of the several vector descriptors for rendering a second map image for the selected geographic region and rendering the second map image for the selected geographic region using at least some of the vector descriptors and the modification indication.","In yet another embodiment, a computing device operating in a communication network includes a processor, a memory coupled to the processor, a network interface for communicating via the communication network, and several routines stored in the memory. A first routine executes on the processor to cause a request for map data corresponding to a selected geographic region to be transmitted via the network interface. A second routine executes on the processor to render a first map image using a plurality of vector descriptors received via the network interface in response to the request, where the plurality of vector descriptors is in a non-raster format. A third routine executes on the processor to cause a request for modification data corresponding to the selected geographic region to be transmitted via the network interface. A fourth routine executes on the processor to render a second map image using at least some of the plurality of vector descriptors and the modification data.","In embodiments of systems and methods discussed below, a map server efficiently provides map data for rendering map images to a client device. According to some embodiments, after the map server provides map data to a client device for rendering a first map image (e.g., a basic map image) corresponding to a certain area or geographic region, the map server provides modification data to the client device for rendering a second, different map image (e.g., a traffic map image) corresponding to the same area. The client device then may render the second map image using the map data previously provided for rendering the first map image and the modification data, and the map server need not necessarily provide map data used in rendering both the first map image and the second image to the client device more than once. Depending on the scenario, the modification data may include one or more additions to the previously provided map data, deletions of one or several portions of the previously provided map data, or modifications of one or several portions of the previously provided map data.","In an embodiment, the map server provides map data in a non-raster format, and the client interprets some or all of the map data to generate the first map image and the second map image as a respective raster images. The map data additionally may include text data to specify map labels to be displayed with individual or aggregate map elements. To render the first map image, the client device may request map data from the map server via a communication network, and the map server in response may provide map data that describes map content according to a vector graphics format. The map data may specify various geometric shapes (e.g., using mathematical descriptions of points and paths connecting the points) and indicate how these shapes should be positioned for rendering various map elements such as roads, buildings, parks, bodies of water, etc. For example, rather than specifying each pixel that makes up a raster image of a line segment, a vector-based description of the line segment may specify the two endpoints of the line segment and indicate that the two endpoints are connected by a straight line. Vector-based descriptions of map elements may be referred to herein as vector descriptors or simply vectors, and a set of one or several vector descriptors may be referred to as vector data. Further, an individual map element (e.g., a building) or an aggregation of several map elements (e.g., buildings, parks, bicycle paths, and pedestrian paths of a college campus) in some scenarios may define a map feature (or simply feature). In an embodiment, a map feature is assigned a unique identifier which the map server and the map client may utilize for identification. In general, a map feature may be described using one or more vector descriptors.","The client device may request map data for rendering the first map image and the second map image in response to respective user commands, for example. The user commands may indicate a selection of a different map type, a different zoom level, etc. According to an example scenario, a user selects a geographic region and a basic map type, e.g., the type of a map that illustrates roads, streets, major landmarks, etc. The client device generates a request for rendering a map image and transmits the request to the map server, which in response provides map data in a vector graphics format (or other non-raster format suitable for rendering a raster image at the client device). The map data may include several vector descriptors and, in some cases, additional data such as style data, label data, etc. More specifically, label data may include characters in the American Standard Code for Information Interchange (ASCII) format, a Unicode format, or any other suitable character format. The client device then interprets the map data to render the map image and display the map image on a display device. To continue with the scenario above, the user then may select a transit map for the same geographic region, and the client device in response may generate an indication that a new map image corresponding to a transit map is to be generated and transmit the indication to the map server. According to one implementation, the client device generates a request for map data of the new type (e.g., \u201cprovide map data for a transit map of region R\u201d), and the map server checks previous communications with the client device to determine what kind of map data was previously sent to, and therefore is already available at, the client device. In another implementation, the client device specifies what kind of map data for the selected region is already available at the client device in addition to requesting map data of the new type (e.g., \u201cprovide map data for a transit map of region R, given that I already have map data for a basic map of region R at the same zoom level\u201d). The map server in this case does not need to know what map data, if any, was previously sent to the client device. More generally, a history of transactions between a map server and a client device may be maintained by the map server and\/or the client device.","The map server then may determine which map elements and labels must be added to, removed from, or modified in the map data already available at the client device. For example, the map server may determine how a basic map for a certain region and a certain zoom level differs from a transit map for the same region and the same zoom level, and generate an appropriate modification indication. For example, the modification indication may include vector descriptors for rendering subway lines not included in the basic map image. The map server then provides the modification indication to the client device for rendering the transit map image using, at least partially, the map data provided for rendering the basic map image as well as the modification indication.","These and other example scenarios in which map data for rendering map images is efficiently provided to a client device are further discussed with reference to the accompanying drawings. Some of the figures may have been simplified by the omission of certain elements for the purpose of more clearly showing other elements. Such omissions of elements in some figures are not necessarily indicative of the presence or absence of particular elements in any of the exemplary embodiments, except as may be explicitly delineated in the corresponding written description.","First referring to , techniques for transferring map data may be implemented in a system . In an embodiment, the system  includes a map server , a client device  communicatively coupled to the map server  via a network , and a map database  communicatively coupled to the map server . The network  may be a wide area network (WAN) such as the Internet, a local area network (LAN), or any other suitable type of a network. Depending on the embodiment, the map database  may be coupled to the map server  via the network  or via another communication link as illustrated in . For simplicity, only one instance of the map server , the client device , and the map database  is illustrated in . However, in other embodiments, the system  may include more than one map server , more than one client device , and\/or more than one map database .","The map server  may include a processor  and a computer-readable memory  that stores a map controller  in the form of computer instructions, for example, that may be executable on the processor  directly (e.g., as compiled code) or indirectly (e.g., as a script interpreted by another application executing on the processor ). The computer-readable memory  may include volatile memory to store computer instructions and data on which the computer instructions operate at runtime (e.g., Random Access Memory or RAM) and, in an embodiment, persistent memory such as a hard disk, for example. In an embodiment, the map controller  includes a dynamic feature controller  that generates vector data for various map elements and\/or map features including one or more map elements that are provided as map content to the client device . The dynamic feature controller  also may be configured to determine the difference in a vector-based description of a map image relative to another map image corresponding to the same geographic area, generate an appropriate modification indication, and provide the modification indication to the client device . In other words, rather than providing a complete vector-based description of a map image, the dynamic feature controller  can efficiently provides a description of modifications of a previously provided vector-based description of another map image.","To generate a modification indication, the dynamic feature controller  compares a serialized representation of vector data corresponding to a certain map image to a serialized representation of vector data corresponding to another map image, according to an embodiment. For example, the dynamic feature controller  may request vector data for a basic map for a region R at zoom level Z, and, in response, the map server  may provide a series of vector descriptors V, V, V, . . . V. At another time, the dynamic feature controller  may request vector data for a transit map for the region R at zoom level Z, and the map server  in response may provide a series of vector descriptors V, V, . . . V. Based on the two sets of vector descriptors, the dynamic feature controller  may determine that, for the region R at zoom level Z, (i) both the basic map and the transit map include a map element corresponding to vector descriptor V, (ii) the basic map but not the transit map includes map elements corresponding to vector descriptors Vand V, and (iii) the transit map but not the basic map includes a map element corresponding to vector descriptor V. The dynamic feature controller  may generate a modification indication to indicate that in order to generate a transit map image using the vector data previously provided for rendering a basic map image, vector modifier Vis added to the previously provided vector data, while vector descriptors Vand Vare removed from the previously provided vector data. More specifically, the dynamic feature controller  may generate a modification indication that includes one or more add indications and one or more remove indications, each of which may identify an operation (e.g., add, remove) and an operand (e.g., a vector descriptor, a map feature or map element).","Further, in some embodiments, the dynamic feature controller  may determine that although a certain map element is rendered when generating both the first map image and the second map image, one or more properties of the map element must be modified to reuse the map element in rendering the second map image. For example, some or all map elements may be associated with respective depth values indicative of positioning of these map elements relative to other, partially or fully overlapping, map elements in the same area. As a more specific example, a map element that depicts a road segment and corresponds to a vector descriptor Vmay be rendered at a depth Din a basic map image but rendered at a depth Din a transit map image. In this scenario, dynamic feature controller  may generate a modification indication that indicates that the depth associated with vector descriptor V, previously provided to the client device , should be updated to depth D.","Still further, in addition to vector data, the dynamic feature controller  may provide label data for the added or modified map features as a part of the modification indication or, alternatively, as a separate indication. The label data may include characters in any suitable format and, in some implementations, identifiers of map features or groups of map features to which the corresponding labels belong.","In some embodiments, in addition to vector data, the map controller  may provide style data that indicates how vector data should be rendered. More particularly, style data may describe such visual characteristics or properties as line thickness (e.g., width in pixels), line color, one or more fill colors, etc. In an embodiment, style data is provided for various visual styles that may be applied to the vector data. The map server also may specify which visual styles the client device should apply to various vector-based descriptions of map elements (also referred to herein as vector descriptors or simply vectors). Further, in some embodiments, the map server indicates which visual style applies to a vector-based description of a map element for a particular map type, such as terrain, transit, traffic, bicycle trail, etc. To this end, several styles, each identified by a respective unique style identifier, may be defined.","The map controller  may provide map data for a certain geographic region and zoom level in a non-raster format, such as vector data, to the client device  in a single electronic message or a series of electronic messages, depending on the embodiment. Further, in an embodiment, the map controller  generates map data as a set of map tile descriptors, such that each map tile descriptor describes a map tile, i.e., a portion of a map image of a certain size (e.g., 256 by 256 pixels). The size of a geographic region represented by an individual map tile may depend on the zoom level with which the map tile is associated, so that a single map tile at a lower zoom level illustrates a larger geographic area than a single map tile at a higher zoom level. The map controller  may generate each map tile descriptor according to a vector graphics format, and a client device, such as the client device  of , may locally generate a raster image for each tile.","With continued reference to , the client device  may include a processor  to execute instructions and a memory  to store instructions and data. The client device  also may include an input device  and an output device  to receive input from a user and provide output to the user, respectively. The input device  may include one or more of a keyboard, a mouse, and a touchscreen, and the output device  may include a display or monitor device such as a touchscreen or a \u201cregular\u201d (output-only) screen, for example. The client device  may include various software components, such as device drivers, operating system (OS) event handlers, etc. to control the input device  and the output device  so as to implement an interactive user interface. Further, software applications executing on the processor  may utilize these software components to provide an application-specific user interface.","Depending on the embodiment, the client device  may be a personal computer, such as a desktop computer, a laptop computer, or a tablet PC, a workstation, a portable communication device such as smartphone, or any other suitable computing device. In an embodiment, the client device  is a so-called thin client that depends on another computing device for certain computing and\/or storage functions. For example, in one such embodiment, the memory  includes only volatile memory such as RAM, and a program and\/or storage unit having persistent memory is external to the client device . In another embodiment, the memory  includes both volatile and persistent memory components.","A browser application  may include a set of computer-readable instructions that execute on the processor . In general, the browser application  accesses web pages that include content such as text, images, embedded video, etc. and instructions in a mark-up language such as Hypertext Markup Language (HTML), and renders the content on the output device  according to the instructions in the mark-up language. To this end, the browser application  may implement functions for generating and processing data packets that conform to the Hypertext Transfer Protocol (HTTP), parse HTML content, encode data according to the Secure Socket Layer (SSL) protocol, request and verify digital certificates, etc., as well as user interface functions for receiving various user commands related to navigation, rendering, and managing web page data. In some embodiments, the browser application  is configured to interpret instructions in a scripting language (e.g., Javascript) provided in a web page.","A dynamic map rendering engine  may execute as a component of the browser application . However, in other embodiments, a software module similar to the map rendering engine  may execute as a standalone application or as a component of another application. Depending on the embodiment, the dynamic map rendering engine  may be a plugin (e.g., a set of compiled instructions that extends the functionality of the browser application  and executes on the processor ), a script (e.g., a set of instructions in a scripting language interpreted by the browser application  at runtime), or another suitable software component. According to one example scenario, the dynamic map rendering engine  is downloaded when a user operating the client device  visits a web page that includes an embedded interactive map. More specifically, the web page may include a first hyperlink to an online map server and a certain geographic location as well as a second hyperlink to a copy of the dynamic map rendering engine , which is required for rendering map data received from the online map server according to the first hyperlink.","The dynamic map rendering engine  may provide interactive controls via the user interface of the browser application , for example. The interactive controls may allow a user to select a geographic region or area, a map type (e.g., basic, traffic, transit), a zoom level, etc. According to an example scenario, user first requests a basic map of a geographic region and then requests another type of a map for the same region. The dynamic map rendering engine  may request and receive map data in a vector graphics format in response to user commands.","During operation, the dynamic map rendering engine  may receive vector data (and, in some embodiments, style data) from the map server , render the corresponding map image using the received vector data, and cause the map image to be displayed within a certain region allocated by the browser application . For example, the browser application  may create an HTML5 Canvas element for displaying map images. The dynamic map rendering engine  also may receive, from the map server , a modification indication that indicates one or more modifications to the received vector data for rendering another map image.","For simplicity, the client device  is illustrated with a single processor . However, the client device  in other embodiments may include additional processing units (not shown) such as a graphics processing unit (GPU) configured to facilitate image rendering on the output device , for example. Further, in an embodiment, the browser application  may utilize a library of graphics functions for efficiently generating a map image. For example, the memory  may store a plugin, such as an OpenGL\u00ae or Direct3D\u00ae library, having functions for rendering graphics which various applications executing on the client , including the browser application , may access via an application programming interface (API). In another embodiment, the memory  stores a plugin particularly suitable for browser applications, such as WebGL, for example. Also, in some embodiments, the memory  stores additional software components that facilitate efficient rendering of images via the output device . For example, the memory  may store an Adobe\u00ae Flash\u00ae plugin or an O3D plugin.","It is noted that in general, the dynamic map rendering engine  can operate in any suitable application. For example, a client device  may be a portable device such as a smartphone, for example, in which the dynamic map rendering engine  operates in a mapping application . Similar to the browser application , the mapping application  may include a set of instructions stored in a memory  and executable on one or more processors of the client device  (not shown). In some implementations, the mapping application  utilizes networking functions provided by a browser application executing on the client device  (via a corresponding browser API, for example). In another implementation, the mapping application  includes at least partial browser functionality, such as the communication stack that supports TCP, IP, HTTP, etc. to access the map server .","Next, to better illustrate operation of a map server and a client device in the system of  or a similar environment, several scenarios are considered with reference to the interaction diagrams illustrated in . In particular, an example exchange of information between a map server and a client device for rendering two map images for a certain region is discussed with reference to , followed by a discussion of several specific scenarios: providing a modification indication for rendering additional map elements (), providing a modification indication for modifying the depth at which a map feature or element is rendered (), providing a modification indication for removing a map feature or element included in previously provided map data (), and providing a modification indication for modifying a composite map feature associated with several map elements ().","Referring to , an example message exchange  involves a user interface , included in or otherwise associated with a client device (such as the client  of ), a dynamic map rendering engine  operating in the client device, and a server  (such as the map server  of ). Referring back to , the user interface may be provided by the browser , while the dynamic map rendering engine  and the server  may be implemented in the components  and , respectively.","In response to a user command, the user interface  may generate a request  for basic map data for a certain region Rand provide the request to the dynamic map rendering engine . The request  may be transmitted as an electronic message internal to the client device in which the components  and  are implemented, for example. The dynamic map rendering engine  in turn may generate a request  for basic map data, to be transmitted via a communication network to the server . The request  may specify the region Rusing Global Positioning Service (GPS) coordinates or in any other suitable manner. Further, the request  may include a map type indication to specify that map data is being requested for rendering a basic map. Still further, in some embodiments, the request  indicates whether any vector-based map data for the region Ris already available at the client device that implements the components  and .","In response to the request , the server  may generate a response  that includes map data in a non-raster format, such as in a vector graphics format, for rendering a basic map image. According to an example scenario, the response  includes a vector-based description of the basic map image for the region Rthat does not rely on any previously provided vector data. In other words, the response  includes a complete description of the basic map image for the region R. The response  may include map data that is organized in any suitable manner, such as in a one or several tile descriptors T, T, . . . T. In general, map data may be provided for any number of tiles, including a single tile. For each tile, the response  may describe various features F, F, etc., each of which may be specified using one or several vector descriptors in accordance with a suitable vector graphics format (as indicated above, a feature may be associated with a single map element or a group of map elements). Features may correspond to simple map elements such as buildings or more complex groupings of map elements. In some embodiments, the response  may provide unique identifiers for the map features for use in future identification. The response  in some embodiments additionally includes style data that specifies various visual attributes of the map elements.","The dynamic map rendering engine  may render the basic map image, provide the basic map image to the user interface  and generate a corresponding event , and store the received map data (and, when available, style data) in a memory for future use. In an embodiment, the dynamic map rendering engine  additionally stores an indication that the map data is associated with a basic map.","In the scenario of , the user later decides to change the map type from basic to transit without changing the geographic coordinates and activates the appropriate control via the user interface . In response, the user interface  generates a request  for transit map data and forwards the request  to the dynamic map rendering engine , which in turn provides an indication  to the server  that a different map image is to be rendered at the client device. In an embodiment, the indication  is a request for transit map data similar to the request . In another embodiment, the indication  specifically requests modification data for modifying the previously provided map data so as to render a transit map image.","In an embodiment, the server  provides a modification indication to the client device as a series of electronic messages . . . . In another embodiment, however, the modification indication is provided as a single message. Each of the messages . . . may include an indication of how vector data for the corresponding tile T. . . Tis to be modified. In some scenarios, however, only some of the tiles T. . . Tdescribed in the response  are modified. For example, a map tile that depicts a body of water may have the same appearance when displayed as a portion of a basic map or as a portion of a transit map.","For each tile being modified, the message may provide one or more modification descriptors M, M, . . . M. In general, a modification descriptor may specify a vector descriptor for a map elements to be added to previously provided map data, identify a map element in the previously provided map data to be removed, specify a new value for a property of a map element in the previously provided map data, etc. In an embodiment, each of the modification descriptors M, M, . . . Midentifies the operation to be performed, such as add, delete, modify, modify depth, etc., and also includes one or more operands or parameters such as a vector descriptor for a map feature or map element being added, an identifier of a map feature or map element being removed, etc.","Upon receiving the messages . . . , the dynamic map rendering engine  map render the tiles for the requested transit map image using some or all of the vector data provided in the response  and the modification indication provided in the messages . . . . More specifically, the dynamic map rendering engine  may interpret the previously provided vector descriptors, modified according to the messages . . . , to render a raster transit map image, and generate an event  to cause the transit map image to be rendered via the user interface . The dynamic map rendering engine  may also store the modified map data in the memory. In an embodiment, the dynamic map rendering engine  stores both the originally provided map data and the modified map data as different versions of map data.","During an example message exchange  illustrated in , the map server  provides vector descriptors of additional map features to the dynamic map rendering engine  via respective messages . . . . The additional map features are used with some or all of previously provided map data to render a new map image at the client device that implements the user interface  and the dynamic map rendering engine . In an embodiment, the messages . . . describe additions to a certain map tile. In other embodiments, the messages . . . are not associated with any particular tile.","Each of the messages . . . may include a description, in a vector graphics format or other suitable non-raster format, of a map feature having one or more map elements. A message  also may include a depth indication that specifies how the corresponding map feature is rendered relative to another map feature or element disposed at approximately the same location. For example, a new map feature added via one of the messages . . . may be a segment of railroad tracks, and the previously provided may include a map feature that is a segment of a road. Depending on the respective depth indications of the new map feature and the previously provided map feature, the segment of the railroad tracks may be rendered over or under the segment of the road at the point where the railroad tracks and road intersect.","Upon receiving the messages . . . , the dynamic map rendering engine  may render a new map image and generate an event  so as to cause the new map image to be displayed at the user interface . In an embodiment, the dynamic map rendering engine  also stores the augmented map data in a memory as a new version of map data.","Referring to , an example message exchange  may occur when the server  determines that a certain map feature included in previously provided map data is rendered in a new map image at a new depth. The server  may generate and transmit to the dynamic map rendering engine  a modification indication  which indicates, for a map feature identified by a unique feature identifier, a new depth at which the map feature is to be rendered. In another embodiment, the modification indication  indicates new depth values for several map features or elements. Upon receiving the modification indication , the dynamic map rendering engine  may render a new map image in view of the modification indication  and generate an event  so as to cause the new map image to be displayed at the user interface .","Further, an example message exchange  of  may occur when the server  determines that a certain map feature included in previously provided map data is not rendered in a new map image. The server  may generate and transmit to the dynamic map rendering engine  a modification indication  which identifies a map feature using a unique feature identifier, for example. In another embodiment, modification indication  identifies an individual map element using an appropriate identifier of the map element. Further, in some embodiments, the modification indication  identifies several map features or elements to be removed. Upon receiving the modification indication , the dynamic map rendering engine  may render a new map image in view of the modification indication  and generate an event  so as to cause the new map image to be displayed at the user interface .",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 6","FIG. 5","FIG. 3"],"b":["300","106","104","106","302","302","106","304","306","304","306","302","304","306","104","310","102"],"sub":["1 ","1-1","1-2","1-3","1-4","1-5","1 ","1-1","1-2","1-3","1-4","1-5 ","1 ","1 ","1-1 ","1-2","1 ","1","1-1 ","1-5","1 "]},"Next, several example methods that may be implemented in computing devices operating in the system of  or a similar environment are discussed with reference to . These methods may be implemented as computer programs developed in any suitable programming language and stored on the tangible, non-transitory computer-readable medium (such as one or several hard disk drives) and executable on one or several processors. For example, the methods of  may be implemented in the map server , and the method of  may be implemented in the client device . Although the methods of  can be executed on individual computers, such as servers or personal computers (PCs), it is also possible to implement at least some of these methods in a distributed manner using several computers, e.g., in a cloud computing environment.","Referring first to , an example method  for generating map data for several map images may be implemented in the map controller  of the map server  or a similar component of the server , for example. According to an embodiment, vector descriptors for rendering a first map image for a certain region are generated at block . The vector descriptors may conform to a vector graphics format and describe respective map elements. In some embodiments, the vector descriptors may be grouped according to map features, each including one or more map elements. Further, in some embodiments, the vector descriptors may be provided as a part of non-raster map data that also includes style data for efficiently rendering and re-rendering vector data, text-based label data, icons or symbols such as road shields, etc.","Next, at block , the vector descriptors are provided to a client device. For example, the vector descriptors may be transmitted as one or several electronic messages via a communication network such as the network  of , for example.","At block , a request for data for rendering a second map image for the same region is received. In some scenarios, the request is transmitted in response to the user selecting a different map type at the client device, as illustrated in the interaction diagram in , for example. A modification indication that includes a description of one or several modifications to the previously provided vector descriptors is generated at block  and provided to the client device at block .","In another scenario, the request received at block  is transmitted in response to the user selecting a new zoom level at which the map image corresponding to the same region and the same map type is to be rendered. For example, the vector descriptors generated at block  may describe several tiles at zoom level Zof a basic map type for a geographic region R. After the user selects the zoom level Zand an appropriate request for data is issued at block , a modification indication may be generated and provided to the client device at blocks  and , respectively. The client device may add, remove, or modify the previously provided vector descriptors in accordance with the modification indication, as well as re-scale some or all of the vector descriptors to render the corresponding map elements at the zoom level Z. As a more specific example, the vector descriptors provided at block  may include a vector-based description of a park at zoom level Z, and the same vector-based description of the park may be used to re-render the park at zoom level Zas a part of the modified map image.","Referring to , an example method  for generating a description of a modification of previously provided map data that may be implemented in the map controller  of the map server  or a similar component of the server , for example. In an embodiment, at least some of the steps of method  are executed at blocks - of the method  discussed above.","At block , an indication is received that a map image is to be updated at the client device. Additions to the previously provided vector descriptors are identified, and the corresponding descriptions are generated, at block . At block , deletions of some of the previously provided vector descriptors are identified, and the corresponding descriptions of modifications are generated. As discussed above, modifications of certain map features in some scenarios are represented as deletions and additions of some of the sub-features. A modification indication, such as a description of modifications to the vector data, is transmitted to the client device  at a single electronic message or several electronic messages.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 9","b":["450","62","104","452","454"]},"Next, at block , a request to render a second map image is received from the user interface such as the interface of a browser application, for example. The second map image may be for the same region but may correspond to a different map type or zoom level, as discussed above. A modification indication, such as a description of one or more modifications to the vector descriptors received at block , is received at block . The second map image is then rendered using some or all of the vector descriptors received at block  and the description of modifications received at block . As discussed above, modifications to vector data in general may include additions, deletions, modifications, changes in depth, etc.","To further illustrate an example application of the techniques discussed above,  maps that correspond to the same geographic region and are displayed according to the basic map type and the transit map type, respectively. A map image  of a basic map, depicted in , may include a rendering  of multiple map elements such as roads and parks. As illustrated in , the map image of a transit map may include the map elements of the map image  as well as a subway line  superimposed on the corresponding portions of the map image . Depending on the embodiment, the subway line  may be defined as a single map feature or several map features, each corresponding to a respective section of the tracks. Further, a subway symbol  may be rendered over a portion of the map image . Depending on the embodiment, the subway symbol  may be provided as an added map feature or element, as a label, or as an icon, for example. In an embodiment, the subway symbol  is specified as a universal resource locator (URL) that can be used to retrieved a standard subway symbol in a raster format from a server that generates standard icons.","To generate the map image of  at a client device after the map image of  has been rendered at the client device, a map server may provide only a modification indication that describes, in a vector format, the one or more map features corresponding to the subway line . In an embodiment, the modification indication also provide a depth indication to cause the subway line  to appear over the roads depicted in the map image of . Further, in an embodiment, the modification indication additionally includes a description of the subway symbol  as a label or an icon.","The following additional considerations apply to the foregoing discussion. Throughout this specification, plural instances may implement components, operations, or structures described as a single instance. Although individual operations of one or more methods are illustrated and described as separate operations, one or more of the individual operations may be performed concurrently, and nothing requires that the operations be performed in the order illustrated. Structures and functionality presented as separate components in example configurations may be implemented as a combined structure or component. Similarly, structures and functionality presented as a single component may be implemented as separate components. These and other variations, modifications, additions, and improvements fall within the scope of the subject matter herein.","Certain embodiments are described herein as including logic or a number of components, modules, or mechanisms. Modules may constitute either software modules (e.g., code embodied on a machine-readable medium or in a transmission signal) or hardware modules. A hardware module is tangible unit capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments, one or more computer systems (e.g., a standalone, client or server computer system) or one or more hardware modules of a computer system (e.g., a processor or a group of processors) may be configured by software (e.g., an application or application portion) as a hardware module that operates to perform certain operations as described herein.","Unless specifically stated otherwise, discussions herein using words such as \u201cprocessing,\u201d \u201ccomputing,\u201d \u201ccalculating,\u201d \u201cdetermining,\u201d \u201cpresenting,\u201d \u201cdisplaying,\u201d or the like may refer to actions or processes of a machine (e.g., a computer) that manipulates or transforms data represented as physical (e.g., electronic, magnetic, or optical) quantities within one or more memories (e.g., volatile memory, non-volatile memory, or a combination thereof), registers, or other machine components that receive, store, transmit, or display information.","As used herein any reference to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular element, feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment.","Some embodiments may be described using the expression \u201ccoupled\u201d and \u201cconnected\u201d along with their derivatives. For example, some embodiments may be described using the term \u201ccoupled\u201d to indicate that two or more elements are in direct physical or electrical contact. The term \u201ccoupled,\u201d however, may also mean that two or more elements are not in direct contact with each other, but yet still co-operate or interact with each other. The embodiments are not limited in this context.","As used herein, the terms \u201ccomprises,\u201d \u201ccomprising,\u201d \u201cincludes,\u201d \u201cincluding,\u201d \u201chas,\u201d \u201chaving\u201d or any other variation thereof, are intended to cover a non-exclusive inclusion. For example, a process, method, article, or apparatus that comprises a list of elements is not necessarily limited to only those elements but may include other elements not expressly listed or inherent to such process, method, article, or apparatus. Further, unless expressly stated to the contrary, \u201cor\u201d refers to an inclusive or and not to an exclusive or. For example, a condition A or B is satisfied by any one of the following: A is true (or present) and B is false (or not present), A is false (or not present) and B is true (or present), and both A and B are true (or present).","In addition, use of the \u201ca\u201d or \u201can\u201d are employed to describe elements and components of the embodiments herein. This is done merely for convenience and to give a general sense of the invention. This description should be read to include one or at least one and the singular also includes the plural unless it is obvious that it is meant otherwise.","Upon reading this disclosure, those of skill in the art will appreciate still additional alternative structural and functional designs for a system and a process for generating map data through the disclosed principles herein. Thus, while particular embodiments and applications have been illustrated and described, it is to be understood that the disclosed embodiments are not limited to the precise construction and components disclosed herein. Various modifications, changes and variations, which will be apparent to those skilled in the art, may be made in the arrangement, operation and details of the method and apparatus disclosed herein without departing from the spirit and scope defined in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 5","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 6","FIG. 1"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 7","FIG. 1"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 8","FIG. 1"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 9","FIG. 1"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 10A","FIG. 1"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 10B","FIG. 10A"]}]},"DETDESC":[{},{}]}
