---
title: Method and system of using a non-native operating system for scanning and modifying system configuration data of a native operating system
abstract: Modifying system configuration data. At least some of the illustrative embodiments are methods including changing operation of a program on a computer system that comprises a native operating system stored on a long term storage device. In some cases, the changing by: reading system configuration data of the native operating system, the reading by a scan program executed under a non-native operating system booted on the computer system; identifying, by the scan program, the program on the long term storage device; and modifying, by the scan program, the system configuration data of the native operating system such that the change in operating of the program is implemented on a subsequent boot of the computer system under the native operating system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08812832&OS=08812832&RS=08812832
owner: Avast Software A.S.
number: 08812832
owner_city: Prague
owner_country: CZ
publication_date: 20110218
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","NOTATION AND NOMENCLATURE","DETAILED DESCRIPTION"],"p":["This application shares a specification, and is related to, the following concurrently filed applications, all of which are incorporated by reference herein as if reproduced in full below: U.S. application Ser. No. 13\/030,669 Titled \u201cMethod and system for disabling malware programs\u201d; and U.S. application Ser. No. 13\/030,715 Titled \u201cMethod and system of posting achievements regarding scans for malware programs\u201d.","Computer systems operate based on software, such as operating systems and user programs. However, computer systems are subject to being \u201cinfected\u201d by unwanted programs such as viruses, worms, spyware, adware, and crimeware. Such unwanted programs may have minor effects, such as degrading computer system performance, or major effects such as gathering private information regarding the user. Computer systems are also subject to performance degradation due to one or many legitimate programs being installed or user initiated configuration changes for instance. The cumulative effect of one or more intentionally installed programs or user changes may also slow computer boot time and degrade overall performance.","Many companies produce \u201canti-virus\u201d software designed to detect and remove unwanted programs, the removal either from the computer system directly, or from peripheral devices such as removable hard drives. However, unwanted programs are in many cases sophisticated pieces of code, capable of concealing themselves, and also thwarting efforts to detect and remove them. The battle between anti-virus software manufacturers and those who write such programs is continually evolving. Many companies also produce \u201ctune-up\u201d software designed to optimize the performance, boot time, and overall user experience on a computer system. Making some performance enhancing changes to a running computer system can be challenging and risky, and many times requires one or more reboots which may not be available to all users. Also, certain application and operating system modifications may require the user to inconveniently close one or many running applications","Thus, any technique which assists anti-virus and tune-up software makers in detecting and removing unwanted programs, and tune-up software makers in performing safe changes, would provide a competitive advantage in the market place.","Certain terms are used throughout the following description and claims to refer to particular system components. As one skilled in the art will appreciate, different companies may refer to a component by different names. This document does not intend to distinguish between components that differ in name but not function.","In the following discussion and in the claims, the terms \u201cincluding\u201d and \u201ccomprising\u201d are used in an open-ended fashion, and thus should be interpreted to mean \u201cincluding, but not limited to . . . \u201d Also, the terms \u201ccouple\u201d and \u201ccoupled\u201d and \u201ccouples\u201d are intended to mean either an indirect or direct connection. Thus, if a first device couples to a second device, that connection may be through a direct connection or through an indirect connection via other devices and connections.","\u201cNative operating system\u201d shall mean an operating system stored on a long term storage device coupled to a computer system, and on which the computer system boots in the absence of instructions to the contrary received from a user of the computer system.","\u201cNon-native operating system\u201d shall mean an operating system that is distinct from the native operating system.","\u201cMalware program\u201d shall mean any malicious program such as, but not limited to, computer viruses, worms, Trojan horses, spyware, adware, crimeware, and rootkits. The terms \u201cmalware program\u201d shall also mean a legitimate program installed in a way that executable code of the legitimate program is scheduled to utilize or utilizes processor cycles during periods of time when the legitimate program is not being directly or indirectly used.","\u201cSystem configuration data\u201d shall mean configuration settings for an operating system and applications that run under the operating system. The fact that system configuration data may be spread across multiple files on a long term storage device shall not obviate the status as system configuration data. Non-limiting examples of system configuration data include data within the registry of Microsoft\u00ae Windows\u00ae-based operating systems, \u201c.INI\u201d files for Microsoft\u00ae Windows\u00ae-based operating systems, system wide configuration files for Linux\u00ae-based operating systems, and property list files in the Mac OS X operating system.","\u201cSocial network\u201d shall mean a service that allows a group of individuals to communicate with each other. Each individual associates with the \u201csocial network\u201d as a member with a member profile, and at least a portion of the member profile is viewable by other members. The members of the \u201csocial network\u201d communicate information either with all of the members or a select sub-set of the members.","\u201cManaged by\u201d with reference to a social network shall refer to a legal entity responsible for control and operation. The fact that the social network may be hosted on computers not owned by the legal entity, and that third parties may post items to the social network, shall not obviate the fact a social network is managed by the legal entity.","The following discussion is directed to various embodiments of the invention. Although one or more of these embodiments may be preferred, the embodiments disclosed should not be interpreted, or otherwise used, as limiting the scope of the disclosure, including the claims. In addition, one skilled in the art will understand that the following description has broad application, and the discussion of any embodiment is meant only to be exemplary of that embodiment, and not intended to intimate that the scope of the disclosure, including the claims, is limited to that embodiment.","Particular embodiments discussed herein are directed to the detection of malware programs on computer systems. More particularly, at least some embodiments discussed herein are directed to detection and removal of malware programs during periods of time when the native operating system of a computer system is not in operation, and thus the malware program is unable to exercise defensive capabilities to avoid detection and removal. In order to be user friendly, however, the inventors of the present specification have created automated mechanisms to enable a non-technical computer system user to boot a non-native operating system on their computer system, perform the scanning and removal of the malware programs as needed, increase performance under the native operating system and installed applications, and then configure the computer system to once again boot on the native operating system.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","102","104","106","108","100"]},"Detecting and disabling (e.g., by modifying and\/or removing) a malware program in accordance with the various embodiments may begin by coupling a portable media to the computer system during periods of time when the computer system  is running under or controlled by the native operating system.  shows a portable media  illustratively coupling to the computer system by way of an interface or communication port . The portable media  may take a variety of forms. For example, the portable media  may be a flash memory device that directly couples to the port , or the portable media  may be a flash memory device used in conjunction with a Universal Serial Bus (USB) interface. In the illustrative case of the flash memory in combination with the USB interface, the portable media  may be a \u201cUSB memory stick\u201d that couples to the computer system  by way of a USB interface. In other cases, the portable media  may be a secure digital (SD) card, often used as the memory for video capture devices such as still and motion video cameras. In the illustrative case of the portable media  being an SD card, the port  may be a SD card reader. In yet still other cases, the portable memory device  may be an optical disk (e.g. a compact disk (CD), or a digital versatile disk (DVD)). In the illustrative case of the portable media  being an optical disk, the coupling of the optical disk may be by way of a CD or DVD read\/write mechanism. In yet still other cases, the portable media  may be any device capable of storing data and programs, such as a memory area of a cellular telephone. In the illustrative case of the portable media  being a memory area of a cellular telephone, the cellular telephone may couple to the computer system  by any suitable mechanism, such as a USB interface, a Bluetooth\u00ae brand wireless interface, or an Institute of Electrical and Electronic Engineers (IEEE)  \u201cfire-wire\u201d interface. So as not to unduly complicate the remaining discussion, the balance of the discussion assumes that the portable media device  is a USB memory stick; however, the assumption of the balance of the discussion regarding the USB memory stick shall not be read as a limitation as to the applicability of the various embodiments.","In accordance with a particular embodiment, the portable media  stores several programs, one of which is a program that interfaces with the user and configures the computer system  to automatically reboot into a non-native operating system, hereafter referred to as the boot configuration program . In particular, during periods of time when the computer system  is controlled by the native operating system, the boot configuration program  is read from a portable media  and executed by the computer system . In addition to performing one or more precursor activities, such as verifying that the user has administrative privileges and\/or verifying the user wants to reboot the computer system, the boot configuration program configures the computer system  to automatically reboot to a non-native operating system. In some cases, the entire set of programs and\/or code to perform the configuration to automatically reboot the computer system to the non-native operating system may be contained on the illustrative portable media . In other cases, the program on the portable media  may be configured to perform some or all the precursor activities, and then download an additional program from any available source, such as the Internet, which additional program configures the computer system to automatically reboot to the non-native operating system. In yet still further cases, the program on the portable media  may be configured merely download the additional program from another source, again such as the Internet, which additional program configures the computer system to automatically reboot to the non-native operating system. The balance of the discussion will be based on the developmental context of having the boot configuration program  stored completely on the portable media , but the alternate cases may be equivalently used.","The boot configuration program  configures the computer system  to boot to a non-native operating system stored on the portable media , even in cases where the port  by which the portable media  couples to the computer system is not designated as a boot source in the basic input\/output system (BIOS) of the computer system. Stated otherwise, during periods of time when the computer system  is under normal control of the BIOS, the BIOS searches for bootable devices and loads the bootable devices in a particular order, and the port  in a particular embodiment may not be designated as a potential boot source, or the highest priority boot source, for the computer system  as far as the BIOS is concerned.","In order to describe how a particular embodiment modifies the computer system  to boot the non-native operating system, attention is directed to . In particular,  shows steps to boot the native operating system on the computer system  on the left, as well as modifications made by way of a boot configuration program to have the computer system  boot the non-native operating system on the right. In particular, just after the power-on self-test (POST) procedures, control of the computer system is handed over to the BIOS . The BIOS  is hard-coded to look at a predetermined location of a bootable device (e.g. hard drive) as part of the boot process. More particularly still, the BIOS  is hard-coded to read the master boot record (MBR) . Thus, once the BIOS inspects and\/or applies the various pieces of data found in the MBR , the BIOS then enables the processor to execute the boot loader . The boot loader , in turn, begins the process of copying the native operating system  into main memory and then enabling the processor of the computer system  to execute the native operating system, thus booting the native operating system on computer system .","The boot configuration program  modifies the boot sequence such that the computer system boots a non-native operating system. In particular, in the modified sequence (the right side of ) the BIOS again  reads the master boot record  and then passes control to the boot loader . However, the boot configuration program  modifies operation of the boot loader  such that the boot loader now points to or loads a custom boot loader . The custom boot loader , in turn, points to or loads the non-native operating system . The specification turns first to illustrative embodiments of modifying operation of the boot loader , and then the specification discusses illustrative aspects of both the custom boot loader  and the non-native operating system .","Modifying operation of the boot loader  to point to or load the custom boot loader  may take many forms. For example, some embodiments modify the executable code of the boot loader  such that the code knows the location of the custom boot loader . In the illustrative case of Windows\u00ae XP operating systems, the boot loader  need not be changed, and instead the programs that the boot loader  loads may be changed by making modifications to a file on the long term storage device having a file name \u201cboot.ini\u201d. In these embodiments, the boot configuration program  executed when the computer system  is operating under control of the native operating system changes the \u201cboot.ini\u201d file to point the boot loader  to the location of the custom boot loader . In the illustrative case of Windows\u00ae 7 or Windows\u00ae Vista, modifying operation of the boot loader  to point to the custom boot loader  may involve modifying the Boot Configuration Data (BCD). For computer systems that utilize an Extensible Firmware Interface (EFI), the BCD may be located on the EFI system partition. In computer systems that use IBM PC compatible firmware, the BCD may be located on the system volume at \u201c\\Boot\\BCD\u201d. Other operating systems may require different changes to point the boot loader  to the custom boot loader ; however, one having ordinary skill in the art, now understanding modifications used to change the behavior of the boot loader  based on this specification, could implement the changes without undue experimentation, regardless of the type of the native operating system. The specification now turns to various characteristics of the custom boot loader .","Still referring to , in a particular embodiment the boot configuration program copies the custom boot loader  from the portable media  to a location on the long term storage device of the computer system . During the illustrative modified sequence, the boot loader  thus loads the custom boot loader  from a location on the long term storage device of the computer system . Once the custom boot loader  is in control of the computer system , the custom boot loader  then loads the non-native operating system .","Loading of the non-native operating system  likewise may take many forms. In some cases, the non-native operating system  may have been downloaded to a location on the long term storage device of the computer system prior to the reboot, and where the custom boot loader  knows or is otherwise informed of the location of the non-native operating system . In other cases, the non-native operating system  may already be resident within the computer system, such as on a read only memory (ROM) device accessible to the custom boot loader. In yet still other cases, the custom boot loader  copies the non-native operating system  from the portable media . In embodiments where the custom boot loader  copies the non-native operating system  from the portable media , the custom boot loader  may comprise a driver configured to communicate with the portable media device  across the port . In accordance with yet still further embodiments, the custom boot loader  may comprise a plurality of drivers configured to communicate with a portable media across the respective plurality of ports. More particularly still, the custom boot loader  may not inherently know to which port the portable media , storing the non-native operating system, is coupled. Thus, the custom boot loader , using individual drivers, may search the various ports for the portable media device .",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 3","b":["208","300","208","208","110","302","306","100","308","110","310"]},"Still referring to , if the custom boot loader  is unable to communicate with the portable media (again block ), then the illustrative custom boot loader may reboot the computer system (block ), and the method effectively ends (block ). The subsequent reboot in the particular situation will be to the native operating system. The specification now turns to further details regarding the custom boot loader .","The custom boot loader  may take many forms. In a particular embodiment, the custom boot loader  may be the Grand Unified Boot loader (GRUB) available as free software from the GNU project, modified to include at least one device driver to enable the boot loader to communicate with the portable media device . In other cases, the custom boot loader  may be a custom program configured to operate as described herein. One having ordinary skill in the art, now understanding operation of the custom boot loader  based on this description, could modify the GNU GRUB program, or create a custom boot loader anew, without undue experimentation.","Before continuing to a discussion of detecting and disabling malware programs, a few additional points regarding booting the non-native operating system to computer system  are in order. In many cases the end-users (as opposed to one of ordinary skill in the art) of a malware detection program operated in conformance with this specification may not fully understand the operational characteristics of a computer system. Thus, in accordance with at least some embodiments, the amount of technical input received from a user in order to reboot the computer system to the non-native operating system is reduced or eliminated. In at least one embodiment, after the precursor steps, the various steps implemented to boot the computer system  under the non-native operating system are taken autonomously. That is, the modifications to the appropriate locations in the native operating system, the copying of the custom boot loader, initiating reboot of the computer system, and booting the non-native operating system are done without requiring the user to provide any additional information. Further still, after the precursor activities, a user may only be presented with an option of whether to proceed, and upon receiving an affirmative response all the technical aspects implemented to boot the non-native operating system to the computer system may be implemented without further user input.","Returning to , the non-native operating system  may take any suitable form. In a particular embodiment, the non-native operating system  is a Linux-based operating system utilizing Linux Kernel. Thus, the native operating system may be a Windows\u00ae-based system while the non-native operating system may be a Linux-based system. However, the native and non-native operating systems need not be different, and thus the illustrative embodiments may be equivalently implemented with the native and non-native operating systems being the same, or being from the same operating system manufacturer. Again, so as not to unduly complicate the description, the specification will continue with respect to the native operating system being a Windows\u00ae-based system and the non-native system being a Linux-based system, but such shall not be read as limitation as to the breadth or applicability of the various embodiments.","As alluded to above, part of the advantage in detecting and disabling (e.g., modifying and\/or removing) malware programs in accordance with the various embodiments is that the native operating system is not operational. Because the native operating system is not operational, the various malware programs will be unable to implement procedures used to hide or mask their presence. Also, by making performance enhancing changes while the native operating system is non-operational, inconvenience is reduced for the user as the user do not have to close programs or perform multiple reboot procedures. However, changing the operation of any program configured to run under the native operating system when the native operating system is not operational may need to be carefully implemented. Operating systems perform their various tasks based on a set of system configuration data, which system configuration data may reside in a single file within the file system or may be spread about multiple files in the file system. In the illustrative case of the Windows\u00ae-based operating systems, possibly starting with the Windows\u00ae 95 version, information that the operating system uses for correct operation is stored in a proprietary file format called registries, also known as registry hives. The registry hives may be multiple individual files spread about the file system. Considered as a whole, the illustrative registry hives contain keys and values. The term \u201ckeys\u201d comprises not only values, but also sub keys, which sub keys may contain further sub keys. The term values are name\/data pairs stored with the keys. The encoding mechanism for data within the files is not published by Microsoft Corporation. However, various third party sources have uncovered and\/or discovered parts of the encoding mechanisms.","Regardless of the precise locations and encoding mechanisms, the registry hives store data about the system, and more particularly store data about the various programs that execute on the system. For example, by inspection of the registry hives one may be able to determine information such as: operating system versions; architecture; directory structure; users installed on the computer system; executable files installed on the computer system; libraries installed on the computer system; programs that are automatically launched at boot time; installed applications and their versions; web browser plug-ins installed in the system; toolbars installed in the system; and add-ons installed in the system. Malware programs also resident on the computer system will, in many cases, be reflected in the data within the registry hives.","When the computer system is operating under the control of the native operating system, the operating system provides application programming interfaces (APIs) that enable viewing and editing of the information in the registry hives. For example, in the illustrative case of Windows\u00ae XP the information in the registry hives may be accessed by execution of the \u201cregedit.exe\u201d executable program. However, when the native operating system is not operational, such application programming interfaces are not available in cases where the native and non-native operating systems are different. In cases where the native and non-native operating systems are the same, some application program interfaces may be available. Again, the specification continues under the assumption that the native and non-native operating systems are produced by different manufacturers.","In order to implement the detection and disabling of malware programs, a scan program or scan routine (executed by the computer system during periods of time when the non-native operating system is operational), accesses the system configuration data of the native operating system to make an initial determination as to the various installed users and installed programs on the computer system.  visually depicts such a situation. In particular,  illustrates computer system , except in this case computer system  has been booted under the non-native operating system, as illustrated on the display device . During periods of time when the computer system is controlled by the non-native operating system, scan program  performs operations regarding the system configuration data, and possibly other files, of the native operating system to implement the various embodiments.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 5","FIG. 5"],"b":["400","210","500","502","400","400"]},"However, the extent of the enumeration will depend on the goals implemented by way of the scan program . For example, in the case of identification and disabling of malware programs, the name of the manufacturer of an attached display device may not be of particular concern. On the other hand, when the goal of the scan program  is to change operation of a program that is not necessarily a malware program (e.g., upgrading a program to a new version, as discussed more below), some or all of the illustrative information above may be of concern.","Still referring to , the next step in the illustrative method is identifying programs on the long term storage device (block ) (e.g., identifying a program as a malware program, identifying a program as needing an update or patch). In some cases, the effective result of the enumeration discussed with respect to block  may be sufficient identification. However, in other cases, merely knowing a program or a registry entry exists may be insufficient, and the further identification may involve multiple pieces of information, some of which may be supplied by remote computer systems. In a particular embodiment, the scan program  does not inherently know or contain a list of programs of interest (such as a list of known virus programs). In these embodiments, the scan program  communicates with a remote server  over the network  (). More particularly still, in a particular embodiment the method may involve calculating a cryptographic hash value regarding a program or executable file, and sending the cryptographic hash value, possibly along with further information, to a remote server  over the network .","A cryptographic hash function is a mathematical function or procedure that takes as input a block of data and returns a fixed size value or bit string that is unique to the block of data, but in most cases is also of significantly smaller size. Thus, the scan program  may send the cryptographic hash value, along with additional information determined during the enumeration process, to a remote server  by way of the network . The remote server , in turn, analyzes the data supplied by the scan program and returns an indication to the scan program (over the network ) as to the status of the program or executable file. In a particular embodiment, the remote server sends an indication as to whether the program or executable file should be considered a malware program for purposes of disabling (e.g., by modifying and\/or removing) malware programs from the computer system . The remote server  may be a single server communicatively coupled to the computer system  over the network . In other embodiments the remote server  may be family of servers operated by way of a \u201ccloud\u201d functionality, such that work may be shared and\/or exchanged among the servers depending on their loading and assigned tasks. Thus, the remote server  may perform the bulk of the determination process as to the status of any particular program or file on the computer system , with the determination made based on the information sent by the scan program . The remote server  in many cases will have greater computing functionality than the computer system , thus in some cases decreasing the overall amount of time needed to scan computer system  (dependent upon the speed\/bandwidth of the connection).","Still referring to , the next step in the illustrative method may be a modification of system configuration data to change operation of a program on the computer system  (block ), and the illustrative method ends (block ). Modifying the system configuration data likewise may take many forms depending on the type of program and the end goal of the scan program . For example, if the program is identified as a malware program (as that term is defined in the specification), but where the user desires to have the program on the computer system (e.g., a program that automatically loads to the system tray, where such loading is not required for proper operation of the program), the change may be a modification to the system configuration data such that the program does not automatically start as part of the booting of the native operating system. In cases where the program is identified as a malware program with malicious intent, the change to the system configuration data may include not only modifying the system configuration data to implement removal of the malware program from operational status within the computer system , but also the scan program  may delete the program from the long term storage device.","The techniques discussed with respect to the scan program  reading and modifying the system configuration data of the native operating system may expand beyond addressing situations associated with malware programs. Stated otherwise, in addition to identifying and disabling malware programs, the scan program  operating with respect to the system configuration data of the native operating system may perform other beneficial tasks such as upgrading programs to a newer version, installing patches to existing programs (including patches to the native operating system), and\/or uninstalling programs from the computer system. For example, installing patches may involve replacing existing files (such as \u201c.DLL\u201d files) at various places on the computer system. Upgrading a program may involve not only replacing various executable files, but likewise making respective changes in the system configuration data of the native operating system. In such cases, prior to installing a newer version of a program, the installation program (normally executed under the native operating system) can be analyzed to determine the locations for data and executable files, as well as the respective changes to the system configuration data to implement the installation. Likewise with respect to uninstalling programs from the computer system, uninstalling the programs may involve an analysis of the uninstall programs (normally executed under the native operating system) designed to perform the uninstallation-process such that the location of the data and executable files, as well as locations in the system configuration data, may be identified. Once these various locations and changes are identified, the scan program  may make the changes to uninstall the program, all while the computer system is controlled by the non-native operating system.","The various embodiments discussed to this point are based on operations to boot a computer system to a non-native operating system, and operations performed during periods of time when the computer system is operating under control of the non-native operating system. In a particular embodiment, a scan program searches for malware programs during periods of time the computer system is operating under the control of the non-native operating system. However, in the related-art scanning for malware programs on one's computer system has not been exposed to the world at large. That is, the fact one initiates a scan for malware, and the results of the scanning, have not traditionally been the subject of group discussion by way of an online social network. However, in accordance with at least some embodiments, scanning for and disabling of malware programs has a social aspect to encourage competition and sharing between friends, which may have beneficial results such as more frequent scanning for malware programs, earlier identification of new malware programs, and earlier eradication of certain malware programs.","Thus, in accordance with particular embodiments, in addition to identifying and possibly disabling of malware programs by a scan program  as discussed above, the scan program  further provides a social aspect. For example, the scan program  may post or display on the display device  one or more indications of meeting a predefined or predetermined achievement. For example, the scan program  may post a \u201cbadge\u201d or points attainment indicating that the user has met an achievement with respect to searching for and disabling malware programs (e.g., run a predetermined number of scans in a predetermined period of time). Further still, the scan program  may display on the display device  indications regarding achievements of other users of similar scan programs on different computer systems, such that friendly competitions are created. For example, the scan program  may read achievements of other users from the server  across the network  (e.g., the other users being friends of the user of computer system ), and post indications of the achievements of the other users on the display device  during periods of time when scan program  is in operation. Likewise, the scan program  may report the achievements related to the user of the computer system  to the server  for display on other computer systems. It is noted, however, that the achievements need not be concurrently achieved. The posting of achievements of other users may be achievements previously met, such that users need not be concurrently operating respective scan programs.","It follows that, in a particular embodiment, the manufacturer of the scan program  may operate and\/or manage (directly or indirectly) a social network by way of the server , in addition to the aspects related to the identifying and disabling (e.g., by modifying and\/or removing) malware programs as discussed above. In addition to, or in place of, the social network operated and\/or managed by the manufacturer of the scan program, the posting of achievements may be to one or more social networks controlled by legal entities different than the legal entity that manufactures the scan program . As of the time of the writing of this specification, several online social networks exist (e.g., Facebook\u00ae brand social network provided by Facebook, Inc. of Palo Alto, Calif.; LINKEDIN.COM\u00ae brand social network provided by LinkedIn Corporation of Mountain View, Calif.: and TWITTER\u00ae brand social network provided by Twitter, Inc. of San Francisco, Calif.). Thus, in addition to, or in place of, a social network operated and\/or managed by the manufacturer of the scan program , the scan program  may post to a social network operated and\/or managed by a different legal entity, such as Facebook\u00ae or LINKEDIN.COM\u00ae brand social networks. For example, the scan program  may post a \u201cbadge\u201d or achievement to the account of the user of the computer system  that indicates meeting the predetermined achievement, or the scan program may make a text \u201cwall\u201d posting indicating a scan for malware programs was performed and a result of the scan. Other users, for example friends of the user of computer system , may see the \u201cbadge\u201d or achievement by way of their respective portals to the social network. Likewise, when the user of the computer system  access the user's respective portal for the social network, the user will be able to view the \u201cbadges\u201d posted by respective scan programs of respective users in the group of friends.","The software mechanisms by which the scan program posts indication of achievements may be slightly different for each particular social network. In the illustrative case of the Facebook\u00ae brand social network, a set of application programming interfaces are provided which enable third party software to interact with the social network, at varying levels of integration. The integration levels may range from mere posting of comments to a user's \u201cwall\u201d, to gleaning their relationships and\/or \u201cfriends\u201d, to integration of the social network into the website and\/or other third party application. For further information regarding interfacing with the illustrative Facebook\u00ae brand social network, attention is directed to the information available at the website www.developers.facebook.com. In an illustrative embodiment, the scan program  posts to multiple social networks, including the social network operated and\/or managed by the manufacturer of the scan program .","The precise type of achievement may likewise take many forms. Examples of achievements comprise: performing a predetermined number (e.g., 10 or more) of scans for malware programs in a predetermined period of time (e.g., a month); performing the greatest number of scans on distinct computer system; identifying by way of a scan a previously unidentified malware program (e.g., new virus, new worm); performing a scan on a computer system where a record number of malware programs are resident; performing a scan on a computer system where the fewest number of malware programs are identified; performing a scan in a particular geolocation; the user's friend network reaching a certain depth; a cumulative number of malware programs that have been disabled by a user; a cumulative number of malware programs that have been disabled by a user and his friend network; initiation of a scan on a computer whose hardware was unique to the social network (e.g., fastest, largest); an indication of winning a contest or competition amongst a friend network, a geographic network (e.g., everyone in Austin, Tex.), or the global network; performing a scan that can be construed as a referral request for the product; using the product for the first time or during a unique time (e.g., Valentines day use); and identifying a specific piece of an already identified malware program. Moreover, the competitions fostered by sharing information through a social network may be future looking. For example \u201cbadges\u201d may be awarded and posted for the greater number of computer system scans in a future time certain (e.g., the next month), or finding the most number of viruses in a future time certain.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 6","b":["600","602","604","606","608","404"]},"The specification discusses several computer systems. For example, the various operations to achieve the non-native boot and scanning for malware programs are discussed with respect to computer system . Aspects of identifying malware programs may involve communication with server . Likewise, aspects of implementing social aspects may involve communication between the computer system , server  and other computer systems that implement and\/or host the social network.  illustrates a computer system  in accordance with at least some embodiments, and upon which at least some of the various embodiments may be implemented. Thus, computer system  may be computer system , server , or any other computer system upon which aspects of the various embodiments are implemented.","In particular, computer system  comprises a main processor  coupled to a main memory array , and various other peripheral computer system components, through integrated host bridge . The main processor  may be a single processor core device, or a processor implementing multiple processor cores. Furthermore, computer system  may implement multiple main processors . The main processor  couples to the host bridge  by way of a host bus  or the host bridge  may be integrated into the main processor . Thus, the computer system  may implement other bus configurations or bus-bridges in addition to, or in place of, those shown in .","The main memory  couples to the host bridge  through a memory bus . Thus, the host bridge  comprises a memory control unit that controls transactions to the main memory  by asserting control signals for memory accesses. In other embodiments, the main processor  directly implements a memory control unit, and the main memory  may couple directly to the main processor . The main memory  functions as the working memory for the main processor  and comprises a memory device or array of memory devices in which programs, instructions and data are stored. The main memory  may comprise any suitable type of memory such as dynamic random access memory (DRAM) or any of the various types of DRAM devices such as synchronous DRAM (SDRAM) (including double data rate (DDR) SDRAM, double-data-rate two (DDR2) SDRAM, double-data-rate three (DDR3) SDRAM), extended data output DRAM (EDODRAM), or Rambus DRAM (RDRAM). The main memory  is an example of a non-transitory computer-readable medium storing programs and instructions, and other examples are disk drives and flash memory devices.","The illustrative computer system  also comprises a second bridge  that bridges the primary expansion bus  to various secondary expansion buses, such as a low pin count (LPC) bus  and peripheral components interconnect (PCI) bus . Various other secondary expansion buses may be supported by the bridge device . In accordance with some embodiments, the bridge device  comprises an Input\/Output Controller Hub (ICH) manufactured by Intel Corporation, and thus the primary expansion bus  comprises a Hub-link bus, which is a proprietary bus of the Intel Corporation. However, computer system  is not limited to any particular chip set manufacturer, and thus bridge devices and expansion bus protocols from other manufacturers may be equivalently used.","Firmware hub  couples to the bridge device  by way of the LPC bus . The firmware hub  comprises read-only memory (ROM) which contains software programs executable by the main processor . The software programs comprise programs executed during and just after POST procedures, memory reference code, and the BIOS. The POST procedures and memory reference code perform various functions within the computer system before control of the computer system is turned over to the boot loader.","The computer system  further comprises a network interface card (NIC)  illustratively coupled to the PCI bus . The NIC  acts as to couple the computer system  to a network, such the Internet.","Still referring to , computer system  may further comprise a super input\/output (I\/O) controller  coupled to the bridge  by way of the LPC bus . The Super I\/O controller  controls many computer system functions, for example interfacing with various input and output devices such as a keyboard , a pointing device  (e.g., mouse), game controller , various serial ports, floppy drives and hard disk drives (HD) . The hard disk drive  is an example of a long term storage device upon which a native operating system and related system configuration data may reside. In other cases, the hard disk drive  may couple to a separate drive controller coupled to a more powerful expansion bus, such as the PCI bus , particularly in cases where the hard disk drive is implemented as an array of drives (e.g., redundant array of independent (or inexpensive) disks (RAID))","The computer system  further comprises a graphics processing unit (GPU)  coupled to the host bridge  by way of bus , such as a PCI Express (PCI-E) bus or Advanced Graphics Processing (AGP) bus. Other bus systems, including after-developed bus systems, may be equivalently used. Moreover, the graphics processing unit  may alternatively couple to the primary expansion bus , or one of the secondary expansion buses (e.g., PCI bus ). The graphics processing unit  couples to a display system  which may comprise any suitable electronic display device or multiple distinct display devices, upon which any image or text can be displayed. The graphics processing unit  comprises an onboard processor , as well as onboard memory . The processor  may thus perform graphics processing, as commanded by the main processor . Moreover, the memory  may be significant, on the order of several hundred gigabytes or more. Thus, once commanded by the main processor , the graphics processing unit  may perform significant calculations regarding graphics to be displayed on the display system, and ultimately display such graphics, without further input or assistance of the main processor . In some case, such as the computer system  operated as server , the graphics processing unit  and display system  may be omitted.","From the description provided herein, those skilled in the art are readily able to combine software created as described with appropriate general-purpose or special-purpose computer hardware to create a computer system and\/or computer sub-components in accordance with the various embodiments, to create a computer system and\/or computer sub-components for carrying out the methods of the various embodiments, and\/or to create a non-transitory computer-readable storage medium (i.e., other than a signal traveling along a conductor or carrier wave) for storing a software program to implement the method aspects of the various embodiments.","The above discussion is meant to be illustrative of the principles and various embodiments of the present invention. Numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. For example, the functionality described could be part or portion of a larger overall application. Furthermore, while the enumeration discussed with respect to the native operating system provides much information that may be useful for identifying and disabling malware programs, additional useful information may also found by inspecting files in locations not derived from the enumeration, such as files in the start-up directories of the operating system. It is intended that the following claims be interpreted to embrace all such variations and modifications."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a detailed description of exemplary embodiments, reference will now be made to the accompanying drawings in which:",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
