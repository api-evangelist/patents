---
title: System and method for cloud computing
abstract: A system and method for creating, deploying, selecting and associating cloud computing services from many cloud vendors to effectuate a large-scale information technology data processing center implemented in a software only form. Services may be employed from any number of different service providers and user define policies provides for switching to or aggregating different service providers when necessary. Configurations can be created that allow for service provider selection based on user-selectable parameters such as cost, availability, performance and service level agreement terms. The system employs measurement, aggregation, reporting and decision support of system usage and costing, performance, Service level, feature set, to automate the construction, operation and ongoing management of software based cloud. Drag and drop, non list based UI for the construction and modification of clouds implemented and modeled in software.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08238256&OS=08238256&RS=08238256
owner: 
number: 08238256
owner_city: 
owner_country: 
publication_date: 20090908
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims the benefit of U.S. provisional patent application 61\/095,240, titled \u201cData Center\u201d, filed Sep. 8, 2008 by the same inventor.","The present invention relates generally to cloud computing, and more particularly to a system and method for creating and managing virtual data centers using online cloud computer services from multiple vendors.","A data center is a facility used to house computer systems and associated components, such as telecommunications and storage systems. It generally includes redundant or backup power supplies, redundant data communications connections, environmental controls (e.g., air conditioning, fire suppression), and special security devices. Developing and maintaining these large data centers require both an initial capital expenditure and a regular operating budget. The cost of creating a data center is one of the major expenses involved in starting a new business\u2014especially on online or Internet business.","Many firms have created data centers coupled to the Internet. Depending on the nature of the industry, these firms may also have surplus capacity. Firms have developed ways to sell this surplus capacity so that other enterprises can access this computing power. This Large-scale computing operation is often referred to as cloud computing. Cloud computing generally means Internet based development and use of computer technology. It is a style of computing where information technology (IT) related capabilities are provided as a service allowing users to access technology-enabled services over the Internet without knowledge of, expertise with, or control over the technology infrastructure that supports them.","Conventionally, cloud computing is a general concept that incorporates software as a service where the common theme is reliance on the Internet for satisfying the computing needs of the users. For example, suppliers of cloud computing services provide common business applications online that are accessed from a web browser, while the software and data is stored on the servers. The cloud computing infrastructure generally consists of services delivered through next-generation data centers that are built on computers and storage virtualization technologies. The services are accessible anywhere in the world, using the network as a single point of access for all the computing needs of clients.","Since clients do not own the infrastructure and are merely accessing or renting, they can avoid the initial capital expenditure and instead consume computing resources as a service. This allows them to only pay for the computing time and resources they actually use. Many cloud computing offerings have adopted the utility computing model which is analogous to how traditional utilities (like electricity) are consumed. By sharing computing power between multiple tenants, utilization rates can be improved because computers are not left idle. In turn, costs can be significantly reduced while increasing the speed of application development. An additional benefit of this approach is that computer capacity rises dramatically as customers do not have to engineer for peak loads.","The drawback to cloud computing is the absence of a uniform protocol for structuring operations. Also different vendors provide different means to access their services. Thus users lack portability when designing for cloud computing.","Disclosed herein is a system and method for creating, deploying, selecting and associating cloud computing services from many cloud vendors to effectuate a large-scale information technology data processing center implemented in a software only form. Services may be employed from any number of different service providers and user-defined policies provides for switching to or aggregating different service providers when necessary. The user-defined policies may be implemented using a cloud description language (CDL) together with one or more domain specific languages (DSL) which together provide for high level operation and control.","Configurations can be created that allow for service provider selection based on user-selectable parameters such as cost, availability, performance and service level agreement terms. The system employs measurement, aggregation, reporting and decision support of system usage and costing, to automate the construction, operation and ongoing management of software based cloud. Configurations are standardized to allow for vendor neutral operations with the affect that a change in a service provider will not impair operation of a data center. This allows for standardization and portability.","Also disclosed is a drag and drop, non list-based user interface (UI) for the construction, maintenance, operation and modification of cloud-based data centers implemented and modeled according to the disclosure herein.","The construction and method of operation of the invention, however, together with additional objectives and advantages thereof will be best understood from the following description of specific embodiments when read in connection with the accompanying drawings.","Generality of Invention","This application should be read in the most general possible form. This includes, without limitation, the following:","References to specific techniques include alternative and more general techniques, especially when discussing aspects of the invention, or how the invention might be made or used.","References to \u201cpreferred\u201d techniques generally mean that the inventor contemplates using those techniques, and thinks they are best for the intended application. This does not exclude other techniques for the invention, and does not mean that those techniques are necessarily essential or would be preferred in all circumstances.","References to contemplated causes and effects for some implementations do not preclude other causes or effects that might occur in other implementations.","References to reasons for using particular techniques do not preclude other reasons or techniques, even if completely contrary, where circumstances would indicate that the stated reasons or techniques are not as applicable.","Furthermore, the invention is in no way limited to the specifics of any particular embodiments and examples disclosed herein. Many other variations are possible which remain within the content, scope and spirit of the invention, and these variations would become clear to those skilled in the art after perusal of this application.","Lexicography","The term \u201cdeclarative language\u201d generally refers to a programming language that allows programming by defining the boundary conditions and constraints and letting the computer determine a solution that meets these requirements. Many languages applying this style attempt to minimize or eliminate side effects by describing what the program should accomplish, rather than describing how to go about accomplishing it. This is in contrast with imperative programming, which requires an explicitly provided algorithm.","The term \u201cservice level agreement\u201d (SLA) generally means an agreement between providers for Internet based computing resources such as servers, databases, and data storage systems and clients. SLAs generally contain details about what services are available, pricing for those services and availability for those resources. SLAs may also include workload, queue size, disk space availability, CPU load, network latency, or business metrics such as cost or location.","The word \u201cstack\u201d or \u201clogical stack\u201d generally refers to a set of software subsystems or components needed to deliver a fully functional solution, e.g. a product or service. Often a stack may include an operating system, a server, a data management system and a scripting or other form of programming language. Stacks may be configured in a variety of ways depending on the desire function of the system. Stacks may be collections of elements or they may be represented by pointers (or links) the elements themselves.","The terms \u201cfabric\u201d or \u201cswitched fabric\u201d generally refers to a network topology where network nodes connect with each other via one or more network switches and abstracted by one or more layers of software including virtualization at the server level and a hierarchical grouping level.","The term \u201cfault diagnosis,\u201d generally refers to software containing methods that can isolate the stack, rack, cluster or module causing the error. Fault isolation may be accomplished by building in test circuits and\/or by dividing operations into multiple regions or components that can be monitored separately. After fault isolation is accomplished, services can be replaced. Fault detection differs from fault isolation because fault detection generally means determining that a problem has occurred, whereas fault isolation pinpoints the exact cause or location of the error.","The word \u201cMiddleware\u201d generally means computer software that connects software components or applications. The software consists of a set of enabling services that allow multiple processes running on one or more machines to interact across a network. Middleware conventionally provides for interoperability in support of complex, distributed applications. It often includes web servers, application servers, and similar tools that support application development and delivery such as XML, SOAP, and service-oriented architecture.","The term \u201cvirtual machine\u201d or \u201cVM\u201d generally refers to a self-contained operating environment that behaves as if it is a separate computer even though is is part of a separate computer or may be virtualized using resources form multiple computers.","The acronym \u201cXML\u201d generally refers to the Extensible Markup Language. It is a general-purpose specification for creating custom markup languages. It is classified as an extensible language because it allows its users to define their own elements. Its primary purpose is to help information systems share structured data, particularly via the Internet, and it is used both to encode documents and to serialize data.","Detailed Description","Specific examples of components and arrangements are described below to simplify the present disclosure. These are, of course, merely examples and are not intended to be limiting. In addition, the present disclosure may repeat reference numerals and\/or letters in the various examples. This repetition is for the purpose of simplicity and clarity and does not in itself dictate a relationship between the various embodiments and\/or configurations discussed.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 1","FIG. 1"],"b":["110","112","112"]},"The user , in communication with the rule base, selects the desired components. These components include, but are not limited to an operating system (OS), a database (DB) system, any required middleware and any desired applications. Once the selections are made the logical stack  is formed. The logical stack is the set of instructions required for accessing and operating the components. It may include all the necessary information for operation, or alternatively, link to pre-stored information for operating the stack. The logical stack may be stored as a data file, as part of a database or in XML among other possibilities. The logical stacks may be stored in a stack library for reuse at a later time. Alternatively the stacks may be dynamically reconfigurable depending on system needs and resource availability. In addition, a software agent may be employed to locate and present information on the components. This provides for easier operations when cloud resources are not yet fully characterized.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 2","FIG. 2"],"b":["210","212"]},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 3"},"In operation a data center provides for a means to manage the various data services. Organizing racks into clusters allows for large scale deployment, similar to a physical data center. Conventional management tools may be employed for operations management such as fault determination and automatic failover. These objects can then be operated on by applications governing policy, monitoring, billing or provisioning. Additionally a cloud configuration language as define herein may be employed in lieu of or in conjunction with conventional management tools.","In view of the foregoing, one aspect of the current disclosure is the organization of online processing services into an operational hierarchy. As used above racks, stacks and clusters are hierarchical structures, but this disclosure should not be read to limit the invention to only those structures. The inventor contemplates various structures, but racks, stacks and clusters are shown by way of example because of their common usage and relation to physical constructs.","References in the specification to \u201cone embodiment\u201d, \u201can embodiment\u201d, \u201can example embodiment\u201d, etc., indicate that the embodiment described may include a particular feature, structure or characteristic, but every embodiment may not necessarily include the particular feature, structure or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Further, when a particular feature, structure or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one of ordinary skill in the art to effectuate such feature, structure or characteristic in connection with other embodiments whether or not explicitly described. Parts of the description are presented using terminology commonly employed by those of ordinary skill in the art to convey the substance of their work to others of ordinary skill in the art.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 4","b":"410"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 5","FIG. 5"],"b":["512","510","518","512","519","512","530","514","516","524","526","528"]},"The system  provides an interface  for a user to manipulate the system . The user selects options from the rule base  using the interface  to create stacks, racks, clusters and other constructs for operating a data center. Constructs are defined by associating rules defined in a domain specific language and associated to cloud vendors via their application programming interface in a logical manner to produce a processing effect. Constructs may also be defined as a service without specifying a particular vendor such that vendor selection is accomplished through later processing stages in accordance with a cloud definition language define below. Once the constructs are defined, they are stored in configuration memory using the configuration module  for later deployment. The library  provides for creation, storage and maintenance of collections of stacks created by a user. Likewise, racks and clusters are created and stored in the library for later editing or deployment. The configuration memory contains instructions for one or more data centers , . An agent  provides for monitoring of operations and is in communication with a policy engine  for deploying one or more agents  and processing in accordance with the rule base , library  and other system resources.","In operation the data centers  and  are deployed by linking the associated configurations to the cloud vendors ,  and  and then initiating operations specified in the configuration data base. The configurations may specify cloud vendors or the system  may select a cloud vendor in response to parameters in the configuration language. Cloud vendors may also be selected in response to operational requirements such as lowest price or availability. Other requirements may include geographic preferences, higher performance of computer resources including bandwidths for traffic into and out of the cloud. The system  provides for failure detection wherein if a service is not responsive as part of the data center operation an alternative service is brought on line thus providing a failover function.","The interconnection between various cloud vendors ,  and  for one or more information technology applications provides a processing fabric because the interconnections may be established dynamically and in parallel during certain operations. In a similar fashion, the creation of configurations is used to shape the fabric to create the desire information technology function.","The interface  provides usage and performance statistics of the cloud vendors ,  and  allowing a user to create new parameters in response to historical performance characteristics of different cloud vendors. The operation of the system and method for cloud computing allows users to be independent from any particular cloud vendor and also provides an effective tool for cost-effective data processing operations as detailed in the following description.","Cloud Definition Language","A system and method for cloud computing as described herein may be effectuated to include the use of a cloud definition language (CDL). A CDL facilitates operations by providing for implementation of rules bases (described above) and for modeling a datacenter or cloud in software. A CDL would be comprised of code descriptors to implement the functionality of cloud computing. The functionality includes, but is not limited to:\n\n","The CDL could be a declarative language comprising the following type of expressions:",{"@attributes":{"id":"p-0050","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Type - Resource types (i.e. Cloud, Datacenter, Cluster, Rack, Stack,"},{"entry":"\u2003\u2003Computer, Resource)"},{"entry":"Identifier - Identifies a type instance uniquely (i.e. Cluster:New York,"},{"entry":"\u2003\u2003Rack:MySQLNY)"},{"entry":"Members - the unique configuration of the instance of this Type (i.e."},{"entry":"\u2003\u2003Cloud:AWS, Cluster1, Cluster2, Cluster3, Cloud)"},{"entry":"Operational configurations - specific commands unique to the instance"},{"entry":"\u2003\u2003(i.e. AWS:API,"},{"entry":"\u2003\u2003\u2003\u2003AllocateAddressResponseType"},{"entry":"\u2003\u2003\u2003\u2003AssociateAddressTyp"},{"entry":"\u2003\u2003\u2003\u2003AttachVolumeType"},{"entry":"\u2003\u2003\u2003\u2003."},{"entry":"\u2003\u2003\u2003\u2003API;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Examples of a formulaic description of a cloud include but are not limited to:",{"@attributes":{"id":"p-0052","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Type: Cloud:Cloud1"]},{"entry":[{},"Cloud1:AWS"]},{"entry":[{},"\u2003\u2003Cluster1:NewYork"]},{"entry":[{},"\u2003\u2003\u2003\u2003Rack1"]},{"entry":[{},"\u2003\u2003\u2003\u2003Rack2"]},{"entry":[{},"\u2003\u2003\u2003\u2003Rack3"]},{"entry":[{},"Cluster1;"]},{"entry":[{},"\u2003\u2003Rack1:MySQLNY"]},{"entry":[{},"\u2003\u2003\u2003\u2003Stack1"]},{"entry":[{},"\u2003\u2003\u2003\u2003Stack2"]},{"entry":[{},"\u2003\u2003\u2003\u2003Stack3"]},{"entry":[{},"\u2003\u2003Rack1;"]},{"entry":[{},"\u2003\u2003Stack1;DB"]},{"entry":[{},"\u2003\u2003\u2003\u2003MySQL"]},{"entry":[{},"\u2003\u2003\u2003\u2003Linux-Ubuntu"]},{"entry":[{},"\u2003\u2003\u2003\u2003Collectd"]},{"entry":[{},"\u2003\u2003Stack1;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The formulaic description of a cloud computing data center may be comprised in part using collections of descriptions of existing hardware components coupled to the Internet. Conventional auto-discovery packages may be employed to locate these resources. These packages use search agents to locate and identify computers, databases and other IT resources. Once located an agent using the constructs described herein translates the resources found in the physical datacenter into one modeled in software. The modeling may take the form of a cloud configuration language, a domain specific language or a combination of the two.","Domain Specific Language","A domain specific language provides for instruction for each domain that may be employed in a data center. These instructions would be unique for each provider of resources. Resource A would use a language specific to it, whereas Resource B would use a language specific to it. By way of example only, if a portion of the data center resources was provided by Amazon computing, those resources would be addressed in an \u201cAmazonese\u201d language. If another portion of resources was provided by Google computing those resources would be addressed in a \u201cGoogleese\u201d language. Each provider would have a specific language to effectuate control over resources provided. This allows for a DSL to be adopted dynamically when required by the CDL because a change in service provider could be easily accomplished by a change in the DSL.","One having skill in the art will appreciate that although the resources may provide the same function, they are addressed in a different language. A DSL provides for quickly changing resources by changing the language (for example from Googleese to Amazonese) without requiring changes to instructions higher in a cloud definition language. Each resource provider would have its instruction set, and the CDL would select the appropriate instruction set as conditions require. For example, in the event a fault in a data center is discovered, the CDL would remain the same, but could change resources completely and effectuate the same result using a different DSL.","Policy Operations","The current disclosure also provides for real-time or near real-time policy operations. These policy operations may be implemented dynamically in response to current conditions of the data center. The conditions could be fault detection, pricing information, throughput or other system states. As one example, a policy for fault detection is shown and described herein. Fault detection can automatically switch to an alternative service provider if one is specified, or in the event no specification is provided, the rule base may provide optional service providers for like or similar services. (Changing services providers may be as described above by changing the DSL.) Multiple techniques may be employed to effectuate fault detection and isolation. These include, but are not limited to generating intermediate output that can be examined as well as recording operational steps in a log to assist the troubleshooter to determine which service caused the fault. Intelligent agents may be placed in various nodes or stacks that continuously collect traffic statistics for analysis for detecting and pinpointing the fault. Fault detection methods, such as built-in tests, typically log the time that the error occurred and either trigger alarms for manual intervention or initiate automatic recovery. A fault detection scheme may use programmatic definitions of fault, software modeling of fault scenarios and formulaic actions to be taken in the case of a particular fault. An example of code to implement fault operations is:",{"@attributes":{"id":"p-0057","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"If cloud1:diskerrs exceeds 100"]},{"entry":[{},"\u2003Cloudsync:clouda"]},{"entry":[{},"\u2003\u2009Switch: resource:clouda"]},{"entry":[{},"Cloud1;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In the example above, when errors on a disk exceed a predetermined amount (i.e. 100) then a replacement cloud would be switch into the network using a \u201cswitch Resource\u201d command of a CDL.",{"@attributes":{"id":"p-0059","num":"0066"},"figref":"FIG. 6","b":["600","610","612","614","616","618","620","622","624","626","628","630","630","634"]},"Streaming Data","The system may use streaming fault data from each computer resource to build a list of fault data for each object in a grouping hierarchy. This list is processed in real time using a map\/reduce algorithm which results in a small amount of data that is compared to a rule set expressed in a cloud description language (CDL) and loaded into a policy engine. The policy engine, reading the rules set forth by the CDL, takes action accordingly and invokes a compare function such as a \u201cCMP\u201d to compare the state of cloud A with cloud B. In response to this comparison, and depending on the directives expressed in the rules, the engine takes action to migrate computer resources or other actions (including nothing).","Streaming data is generated from agents within a VM and aggregated into a group hierarchy table to represent the status of the group. Conventionally a \u201cproc\u201d directory contains a hierarchy of special files which represent the current state of the kernel. In one operation the agent reads a kernel state from the \/proc\/ (or equivalent) directory of a file system to obtain the state of each individual VM.","Using the example for fault detection and isolation, one having skill in the art will appreciate that streaming data may provide for other parameters with which to effectuate a change in the data center, for example billing or throughout.",{"@attributes":{"id":"p-0063","num":"0070"},"figref":["FIG. 7","FIG. 1"],"b":["700","712","714","714"]},"At a step  those processing services are described as a formulaic structure which may be similar to that described herein in the section labeled Cloud Definition Language. For example and without limitation, the describing may include creating a structured data file, said file including a declarative language representing the nature and operation of the processing service.","At a step  those formulaic structures are federated to effectuate a data center. The federating may include aggregating each processing service into a hierarchical structure. One having skill in the art will recognize that the data center of step , while a virtual data center, may function similar to a physical data center because it includes a plurality of processing services that can be operated according to the formulaic structure.","At a step  the method ends.","The above illustration provides many different embodiments or embodiments for implementing different features of the invention. Specific embodiments of components and processes are described to help clarify the invention. These are, of course, merely embodiments and are not intended to limit the invention from that described in the claims.","Although the invention is illustrated and described herein as embodied in one or more specific examples, it is nevertheless not intended to be limited to the details shown, since various modifications and structural changes may be made therein without departing from the spirit of the invention and within the scope and range of equivalents of the claims. Accordingly, it is appropriate that the appended claims be construed broadly and in a manner consistent with the scope of the invention, as set forth in the following claims."],"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DESCRIPTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
