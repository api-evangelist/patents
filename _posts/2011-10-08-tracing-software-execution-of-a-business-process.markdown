---
title: Tracing software execution of a business process
abstract: Various embodiments of systems and methods to trace an execution of a business process are disclosed. Business rules and corresponding business objects required to execute the business process are identified and rendered to receive an input. Based upon detecting a trigger to execute the business process, the business rules and the corresponding business objects are processed to compute a process-resultant for the business process. A process-path of the computed process-resultant is traced by tracing key-strings corresponding to the business objects involved in computing the process-resultant, to generate a trace-resultant. The trace-resultant is parsed by determining versioned business objects and business information of the key-strings, to derive a business definition for the traced business objects involved in computing the process-resultant. Based upon the business definition, a comprehensive trace-map comprising a compilation of the process-resultant to execute the business process is generated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08626543&OS=08626543&RS=08626543
owner: SAP AG
number: 08626543
owner_city: Walldorf
owner_country: DE
publication_date: 20111008
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The field generally relates to computer systems and software, and more particularly to software methods and systems to trace software execution of business processes.","Content management relates to managing the content involving digital data of a group of business enterprises. This promotes effectiveness and efficiency of business processes that are carried out using the digital data. Business process management may be described as a part of content management that is responsible for aligning the business data of the enterprise with a business requirement. The activities of business process management generally include designing, modeling, executing, monitoring and optimizing the business process.","Monitoring the business process includes tracking of individual processes that are involved in achieving an end result. Tracking of business process is useful to understand business logics involved in executing the process and to make corresponding business decisions. For instance, a business process executed in an enterprise may include a field work, an intellectual work, an oversight carried out to complete a task and the like. Each individual process may further include certain specifications that are useful in determining daily wages of employees executing the business process. Such statistical information may be derived by tracing the business process and analyzing events that have occurred during the process. However, the process of tracing involves analyzing enormous amount of business data, thereby creating an overload for an associated business processor. Hence, providing a tracing mechanism that can act upon the massive business data and comprehend the business logics involved in the business process is useful.","Various embodiments of systems and methods to trace a software execution of a business process are disclosed. In an embodiment, business rules and corresponding business objects required to execute the business process are identified and rendered to receive an input. Based upon an instruction to trigger a software execution of the business process, the business rules and the corresponding business objects are processed to compute a process-resultant for the business process. A process path of the computed process-resultant is traced by tracing a key-string of the business objects involved in computing the process-resultant, to generate a trace-resultant. In an embodiment, tracing the key-string includes tracing a key-identifier and a key-value of the business objects involved in computing the process-resultant. In an embodiment, tracing the key-string also includes tracing a time-stamp of the business objects. The trace-resultant is parsed by determining versioned business objects and business information of the key-strings, to derive a business definition for the traced business objects involved in computing the process-resultant. Based upon the business definition, a comprehensive trace-map comprising a compilation of the process-resultant to execute the business process is generated.","These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings.","Embodiments of techniques for systems and methods to trace an execution of a business process are disclosed herein. Business process may include business rules and business objects involved in executing the business process. These business rules may define a manner in which the business objects have to be applied to execute the business process. In an embodiment, the business objects are configured to receive an input from a user, and based upon the received input, business logic associated with the business rules may define the application of the received inputs to the business objects corresponding to the business rules. Based upon an instruction to trigger the execution of the business process, the business rules are processed by processing the business objects, and a process-resultant of the business process is computed. The process-resultant may be a business result desired for the business process. For instance, for a business process of calculating daily wages for fifty employees of an organization, the process-resultant may be the amount of the daily wages paid to each employee; and to calculate the amount to be paid, business objects such as number of hours worked, and type of work done may be considered. Based upon the input received for the business objects, the business rules (e.g., formulae to calculate the daily wages) are processed by applying the business logic to the business rules to compute the process-resultant (e.g., daily wages).","In a business environment, business logic involved in computing a process-resultant may need to be understood may be analyzed to make various business decisions. For instance, a type of work done may include type of field work, type of intellectual work, type of oversight carried out to complete a task, and the like. Each type of work may further include certain specifications required to determine an employee's daily wages. Thus, comprehending the procedures followed to execute a business process and generate a process-resultant may be helpful. To create a comprehensive map describing a compilation of the process-resultant, a tracing mechanism is applied to trace the business rules, the corresponding business objects and the other parameters that are involved in computing the process-resultant. The tracing mechanism thus applied creates a trace-resultant by tracing a process-path of the computed process-resultant. Furthermore, the trace-resultant is parsed to derive a business definition for the traced business processes involved in computing the process-resultant. Based upon the business definition, a comprehensive trace-map is generated, that describes the compilation of the process-resultant to execute the business process.","In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},"Business processes may include a set of business rules that define certain aspects of the business process. The business rules may be associated with the business process for purposes of making the business process\u2014effective to an extent of arriving at desirable outputs, efficient with reference to time taken to execute the business process and performance of the business process, and for controlling the flow of business data involved in executing the business process. Thus, depending upon factors such as the output desired, the time and performance, and the manner of flow of business data, a specific set of business rules may be associated with each business process. Business rules may also be defined as formulae applied to a region of data to execute an associated business process. Examples of business rules include currency translations, allocations, and simple mathematical calculations.","The business rules include business objects that are business entities describing definitions, criteria and operations of the business process. Business objects describe a structure and behavior of a real-world object. A business object includes a hierarchy of business object nodes, which represent the data, and bundles functions along with the data. Business objects may accept business input from a user, and based upon the business rules associated with corresponding business processes, the business input is processed to execute the business process and a business resultant is generated as a result of the execution. The data comprised in the business object may be referred to as business information. In an embodiment, business logic describes a principle or a functional algorithm to handle the business rules, the business objects and any business information required to execute the business process. The business logic may comprise the business rules and may define the manner of interaction of business objects with one another, within the business rules, and the like.","For instance, a business process DETERMINATION OF PROFIT OF ITEM \u2018A\u2019 may include two business rules CALCULATE A TOTAL INCOME FOR ITEM \u2018A\u2019 and CALCULATE A TOTAL EXPENSE FOR ITEM \u2018A\u2019. The two business rules may further include business objects SELLING PRICE, COST PRICE and DISCOUNT that accept business input from a user. Based upon receiving an instruction to trigger an execution of the business process, the business rules and the business objects are processed. In an embodiment, a business rule may further include one or more business rules and corresponding business objects to describe a formula to execute the business process.","In a business environment, the functional algorithms involved in handling business information of the business process have to be analyzed to make various business decisions. This analysis may be implemented to consider the entities involved in the business process, to perform a detailed study of parts of the entities and their relationships in generating the entity, and to obtain a comprehensive explanation of the procedure followed to arrive at a resultant of the business process. To accomplish this analysis, a mechanism of tracing the business process may be followed. Tracing the execution of a business process includes analyzing a development of the business input into a business resultant. Tracing involves analyzing the procedural steps of the business process by analyzing business data present in the business objects at regular intervals of the business process. Tracing a business process enables tracing the enormous business data present in the business process. Tracing also enables providing a comprehensive explanation of the process followed to arrive at the business resultant. Hence, tracing business data that is sufficient to provide the comprehensive explanation causes efficient utilization of a business processor operable to execute the business process.","Block  illustrates an overview of a system to trace an execution of a business process, according to an embodiment. Block  comprises a computer generated user interface (UI)  including an UI element representing the associated business object , an UI element representing the process-resultant  and an UI element representing the trace map ; business processing unit  including business processor , input reader , memory element , path tracing engine , trace-parser  and compiler ; business repository  including business object repository , business rules repository , business logic , key-string table  and database .","User interface (UI)  is utilized for establishing interactions between a user and the backend of a system to trace the execution of a business process. In an embodiment, UI  includes UI element  representing a set of one or more business objects, UI element  representing a process resultant and UI element  representing a trace map. Business object associated with the selected business process may be residing in business object repository , and business rules associated with the selected business process may be residing in business rules repository . Business logic  includes the functional algorithm to handle the business rules and the business objects involved in executing the business process.","In an embodiment, a user selects a business process from a group of business processes available on UI . Based upon a selected business process, business rules and their corresponding business objects involved in executing the business process are identified. In an embodiment, the business objects that are operable to receive an input are rendered on UI  as UI elements (for e.g., ). For instance, a first business rule may include a first business object and a second business object; a second business rule may include a third business object and a fourth business object. The execution of the selected business process may require processing of both the business rules (i.e. first business rule and second business rule). The first business object and the fourth business object may be operable to receive an input. However, the second business object and the third business object may not be operable to receive an input. In such cases, only the first business object and the fourth business object are rendered as UI elements  on UI . In another embodiment, only one of the two business rules may be required for execution of the business process. In such cases, only the business objects corresponding to the required business rule may be rendered on UI .","In an embodiment, UI  includes an option to execute the selected business process, and the user is provided with an option to trigger the execution. The business processor  recognizes an instruction to trigger the execution the business process, and executes the business process by processing the business rules and their corresponding business objects associated with the business process. According to one embodiment, input reader  included in business processor  is responsible for assigning a received input for a corresponding business object, and storing the received input along with an identification of the corresponding business object in memory element . In an embodiment, the business object is stored in the memory element  along with the received input. Based upon the received input, business processor  processes the business rules and their corresponding business objects associated with the business process. In an embodiment, the business rules and their corresponding business objects associated with the business process include dependant business rules and dependant business objects. A dependant business rule may be described as a child business rule that depends on a parent business rule in a hierarchy of business rules involved in executing the business process. Similarly, a dependant business object may be described as a child business object that depends on a parent business object in a hierarchy of business objects involved in executing the business process. For instance, a first business rule BR may include business objects BO and BO, and the first business rule may be described as BR=BO+BO. Further, BO and BO may be dependent on BO, described as BO=BO*(BO\/2). According to the above relation, BO and BO may be necessary to calculate BO; or BO and BO may need to be processed to process BO. Although they are not directly involved in executing a business process, the dependant business rules and dependant business objects may be required to process the business rules and the corresponding business objects associated with the business process. Hence, during processing of the business rules, business processor  identifies one or more such dependant business rules and\/or dependant business objects involved in executing the business process.","Processing the business rules and the corresponding business objects includes preparing the business rules and the corresponding business objects to undergo a prescribed set of logical operations on the data present in the business rules and the corresponding business objects, to obtain a required process-resultant. Preparing the business rules and the corresponding business objects may further include:\n\n","For instance, for a business process of calculating daily wages for the employees of an organization, a desired outcome may be the amount of the daily wages paid to each employee. To calculate the amount to be paid, business objects such as number of hours worked and type of work done may be considered. Based upon the input received for the business objects, the business rules (e.g., the formulae to calculate the daily wages) are processed.","Based upon the processing of the business rules and corresponding business objects, business processor  computes a process-resultant for the business process. The process-resultant may be described as a business result that is desired for the business process. The process-resultant is an outcome of the processing of business rules and their corresponding business objects associated with the business process. For instance, for a business process of calculating daily wages for the employees of an organization, the process-resultant may be the amount of the daily wages paid to each employee. In an embodiment, the process-resultant is stored in memory element . Business processor  may display the process-resultant as a UI element  on UI . In an embodiment, business processor  stores the process-resultant in database .","To provide an understanding of the logic involved in computing the process-resultant, a tracing mechanism is applied to trace the business rules and corresponding business objects and other parameters involved in computing the process-resultant. Tracing may be described as a process of detecting the steps followed while executing the business process, to arrive at the process-resultant. Path tracing engine  traces a process-path of the computed process-resultant by detecting the steps followed to compute the process-resultant. Tracing the process-path includes tracing a key-string of the business objects involved in computing the process-resultant.","A key-string may be described as a fundamental identification sequence of business object information that includes comprehensive information about the business object. The key-strings include key-identifiers and key-values of business objects, wherein the key-identifiers are unique expressions identifying corresponding business objects. The key-value may be a system generated value based upon a corresponding business rule or a user input received from the computer-generated user interface or may be a constant for a corresponding business process, or a resultant of a related business process, or the like. The key-string may also include a time-stamp denoting a date and time associated with the business object, for instance, a time and date at which the business object was created, modified, moved from one destination to another and the like. In an embodiment, key-string table  may be generated for the business rules and their corresponding business objects residing in business rule repository  and business object repository . The key-string generated for each business object is typically unique. For example, a business object BO is associated with a key-string KS=BO\u2212123\/344\/20:05-10-22-2009, where BO\u2212123 denotes the key-identifier, 344 denotes the key-value and 20:05-10-22-2009 denotes the time-stamp of the business object.","Business information or a business definition associated with the business rules and their corresponding business objects are subject to modifications during a lifecycle of a business process. With reference to the above example of the key-string, for a modified business object BO\u2032, the key-string KS\u2032=BO\u2032\u22121234\/345\/20:05\u2014Oct. 22, 2010, where BO\u2032\u22121234 denotes the key-identifier of the modified BO\u2032, 345 denotes a modified key-value and 20:05\u2014Oct. 22, 2010 denotes a time-stamp at which the business object was modified.","The definition of the business rule may include a name, description, content of the business rule, and the like. The definition of a business object may include a name, a description, a data structure, a business value, content of the business object and the like. In an embodiment, the business rules and\/or the business objects may be modified to accommodate new parameters, or to revise a desired output of the business process, or the like. The business objects of a previous instance may be revised to match with a current instance. In such instances, a modified business object may be created based upon a modification applied to a related business object. Such modified business objects are versioned and the versioned business objects are stored in business object repository . For instance, the versions of a business object BO having a key-value  generated at (timestamp) 04:00 Dec. 25, 2011 may include\u2014a first modified version BO\u2032 having a key-value  generated at 05:00 Dec. 26, 2011; a second modified version BO\u2033 having a key-value  generated at 18:00 Dec. 26, 2011; and a third modified version BO\u2033 having a key-value  generated at 19:00 Dec. 27, 2011. Versioning of business objects includes a process of assigning a unique key-string to the modified business objects. For instance, a unique key-string is assigned to BO\u2032, BO\u2033 and BO\u2032\u2033 due to the unique key-value and the unique time-stamp associated with them.","Versioning of modified business objects helps in retaining the original business object along with its modified versions. Thus, the original business object and its modified versions are associated with their own unique key-strings. With reference to the above example, BO\u2032 is a first version of BO. Hence, BO\u2032 is associated with a unique key-string KS\u2032; BO\u2033 is a second version of BO. Hence, BO\u2033 is associated with a unique key-string KS\u2033; and BO\u2033 is a third version of BO. Hence, BO\u2033 is associated with a unique key-string KS\u2032. The key-identifier and the time-stamp associated with the unique key-string helps in determining the version of the business object. The unique key-string associated with the versioned business objects are updated in a key-string table . The unique key-strings of the business objects (the original and its modified versions) includes unique key-identifier to identify the versions of the business object, the key-value and a unique time-stamp to determine a time at which the modification was performed on the business object. This time-stamp helps distinguishing between a latest modification of the business object, an original version of the business object, an intermediate version, and so on.","In an embodiment, path tracing engine  traces all the parameters of the business object including an input, a value, an identifier, a resultant, and the like, and this information may differ for different business objects. For instance, an input received for a first business object may be in a table format, and an input received for a second business object may be in a graphical format. To trace the business objects, a universal format may be required. Hence, path tracing engine  may convert the parameters of the business object into a universal format, for instance a key-string having a key-identifier and a key-value along with a time-stamp. This method of conversion makes the parameter storage format independent from the business object definition, and facilitates tracing one or more values of each parameter associated with the business objects.","Path tracing engine  traces the process-path of the computed process-resultant by tracing the key-strings of all the business objects involved in computing the process-resultant. Path tracing engine  generates a trace-resultant describing the path followed to compute the process-resultant. For instance, to execute a business process BP, business rules BR and BR are identified. To execute BP, BR and BR have to be processed as: BP\u2212BR+BR. The business rules may be described as: BR=(BO+BO)*BO and BR\u2212BO+BO, where BO, BO, BO, BO and BO denote the business objects. A process-resultant may be computed as 15435 for BP based upon processing the BR and BR.","Path tracing engine  traces the process-path of process-resultant 15435 to generate the trace resultant illustrated in table .",{"@attributes":{"id":"p-0036","num":"0039"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"TRACE RESULTANT"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["BUSINESS","BUSINESS",{},{}]},{"entry":["OBJECT","OBJECT","TIME-",{}]},{"entry":["IDENTIFIER","VALUE","STAMP","BUSINESS DEFINITION"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["BO1-1234","344","00:00 ","BO1 = Number of item \u2018A\u2019 "]},{"entry":[{},{},"Oct. 22, 2010","sold"]},{"entry":[{},{},{},"This includes the sales of item"]},{"entry":[{},{},{},"\u2018A\u2019 at three locations"]},{"entry":["BO2-2356","255","07:05 ","BO2 = Number of item \u2018B\u2019 "]},{"entry":[{},{},"Oct. 22, 2010","sold"]},{"entry":[{},{},{},"This includes the sales of item"]},{"entry":[{},{},{},"\u2018B\u2019 at three locations"]},{"entry":["BO3-3467","25","14:15 ","BO3 = Cost Price"]},{"entry":[{},{},"Oct. 22, 2010","This defines the cost incurred "]},{"entry":[{},{},{},"in producing the items \u2018A\u2019 "]},{"entry":[{},{},{},"and \u2018B\u2019"]},{"entry":["BO4-2336","360","18:30 ","BO4 = Time taken to see the"]},{"entry":[{},{},"Oct. 22, 2010","product \u2018A\u2019"]},{"entry":["BO5-6650","100","20:05-","BO5 = Time taken to see the"]},{"entry":[{},{},"Oct. 22, 2010","product \u2018B\u2019"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"In an embodiment, there exists a possibility of tracing the business data that are not essential to explain the execution of the business process. This may occur when the processor traces the business definition of the business rules and the business objects involved in executing the business process. The business definition may not be essential in explaining the execution of the business process, since the business definition may be derived from the key-string of the associated business object. According to an embodiment, a lean-tracing mechanism may be used to trace the process-path of the computed process-resultant. The lean-tracing mechanism may be described as a tracing mechanism that traces a minimum set of information that is sufficient to detect the steps followed while computing the process-resultant. For instance, a lean-tracing mechanism may trace only a key-string of a business object rather than tracing the business definition of the business object. For example, with reference to Table 1, the first three columns representing the business object identifier, business object value and timestamp are sufficient to detect the steps followed while computing the process-resultant. The fourth column representing the business definition is not essential in determining the process-resultant. In an embodiment, the path tracing engine  traces a minimum information including a key-identifier, a key-value and a time-stamp of the business objects involved in computing the process-resultant. In an embodiment, the minimum information will at least include the key-identifier, the key-value and the time-stamp of the business object.","Path tracing engine  does not trace any other business information that may be associated with the business object. By excluding all other business information, path tracing engine  traces comparatively a small amount of data instead of tracing the enormous data present in the business environment. By utilizing the versioned business objects, lean trace may be performed to evaluate and demonstrate the steps followed to compute the process-resultant. For instance, by performing lean-tracing, a key-identifier, a key-value, a time-stamp of each business object and\/or each versioned business object involved in computing the process-resultant is traced by path tracing engine . Thus, the lean-tracing mechanism reduces the workload of tracing an entire business definition of each business object involved in computing the process-resultant. Also, a complete set of original business objects and versioned business objects are identified and available for evaluating and demonstrating purposes.","According to another embodiment, strategic-tracing mechanism may be used to trace the process-path of the computed process-resultant. The strategic-tracing mechanism may be described as a tracing mechanism that traces relevant information required to evaluate and demonstrate the steps followed while computing the process-resultant. For instance, a business object \u2018PRODUCT RATING\u2019 involved in computing a process-resultant \u2018MARKETING STRATEGY\u2019 may include business information such as \u2018SALES INFORMATION\u2019, \u2018GEOGRAPHIC INFORMATION\u2019, \u2018QUALITY INFORMATION\u2019, \u2018PURCHASE ORDERS RECEIVED\u2019, \u2018DURATION FOR PRODUCTION\u2019, \u2018LOGISTICS FOR SALES\u2019, \u2018DEMOGRAPHY OF WORKMEN\u2019, and \u2018BANK INFORMATION\u2019. While processing the business objects to compute the process-resultant, business processor  considers the business information, and utilizes the business information required to compute the process-resultant. However, while performing strategic-tracing, business information like \u2018DEMOGRAPHY OF WORKMEN\u2019 and \u2018BANK INFORMATION\u2019 that do not contribute to the computation of the process-resultant may be excluded from being traced. Path tracing engine  may consider only the business information required to evaluate the computation of the process-resultant.","Here, the relevant information may be described as that business information associated with the business object that is directly related to the business rules and the business object that are necessary to execute the business process. Any business information that has no relevance with the computed process-resultant may be skipped while tracing the process-path. For instance, business processor may evaluate many steps during the executing of the business process to arrive at the desired result. These steps may include business rules and business objects that are directly not required to execute the business process. Though this information is required to compute the process-resultant, the information may be irrelevant with reference to the computed process-resultant. Such information, for instance, dependant business rules or the dependant business objects that exist in a hierarchy of the business rules involved in executing the business process and the like, may be excluded during the process of strategic-tracing.","For example, consider a business case where a computation of a process-resultant may include several mathematical formulae containing multiple condition branches. To compute the process-resultant for this business case, each branch is processed, until a branch that meets all the conditions is found. However, while carrying out strategic-tracing, path tracing engine  traces only the condition branch that meets the condition, since that is the only true-branch that leads to the process-resultant. The one or more false-branches that do not meet the conditions are not traced.","In another embodiment, path tracing engine  excludes unnecessary values of the process-resultant while strategically tracing the process-path. For instance, when a business object has a constant value, the value can be derived from the business definition of the business object. In such cases, path tracing engine  does not trace the value unnecessary for computing the process-resultant. For example, a business object BO may have a value BO=47. Here, path tracing engine  need not trace the value \u201847\u2019 to determine any information that is unknown by the expression of the business object.","In another example where a decision table is being traced, business processor  may process one or more condition cells present in the decision table to compute a resultant in a result cell. When the result of such a decision table is traced, path tracing engine  may exclude tracing the condition cells, since the condition cells should have already been satisfied for the result cell to be generated.","In an embodiment, the tracing mechanism includes a tracing buffer. The tracing buffer may be described as a persistent storage medium that stores business data that may have resulted from tracing, at regular instances of the business process. While tracing multiple business rules, multiple sets of process-path may need to be traced. Instead of establishing a connection with database  for each process-path traced, a tracing buffer may be used to temporarily store the traced data, and based upon a completion of tracing of all the business rules associated with the business process, the tracing buffer may establish a communication with database  to persist the entire collection of data in database . The method of using the tracing buffer may reduce the utilization of business processing unit  for transferring the data during mass processing.","The tracing mechanism thus applied generates a trace-resultant by tracing the process-path of the computed process-resultant. The trace-resultant is persisted into database  by path tracing engine . In an embodiment, the trace-resultant is regarded as encoded business information, since the traced business data is not directly available for analysis. In other words, the mechanism of tracing involves tracing the key-string of business objects and\/or business rules, rather than tracing the enormous business information that is persisted in the business object and\/or business rule involved in computing a process-resultant for the business process.","Further, trace parser  retrieves the persisted trace-resultant, which is a minimal amount of data compared to the enormous business data involved in computing the process-resultant, and parses the trace-resultant to derive a business definition for the traced business objects and business rules involved in computing the process-resultant. Parsing generally involves detecting, evaluating and explaining or demonstrating the traces involved in the process-path. During parsing, all the business logic involved during tracing is applied again to decode the encoded business data. For instance, while performing tracing, minimal amount of data is considered to provide an understanding of the business logic involved in computing the process-resultant. To execute the process of parsing, the encoded business information needs to be decoded to derive a complete set of business information of the process-path followed to compute the process-resultant.","While parsing, trace parser  determines the versioned business objects and business information of the key-strings traced by path-tracing engine, to derive a business definition for the traced business objects and\/or business rules involved in computing the process-resultant. To derive the business definition, trace parser  determines the key-identifier and the key-value included in the key-string of each traced business object. Based upon the key-identifier, trace parser  determines the business information corresponding to the traced business object. Based upon the key-value, trace parser  determines a business input received for the corresponding traced business object. Further, trace parser  determines one or more versioned business objects that are associated with the key-string of the corresponding traced business object.","Compiler  compiles the versioned business objects, the key-identifier and the key-value of each traced business object, and the business information comprised in each traced business object to derive a business definition for the corresponding traced business object. Compiler  may be responsible for translating the encoded business data into computer readable information that can be executed to derive the business definition. Further, compiler  evaluates the business definition to identify the business objects involved in computing the process-resultant, and maps the business information present in the business definition to the corresponding business objects and business rules. Complier  also maps the versioned business objects to the original business objects and the corresponding business rules. Compiler  generates a comprehensive trace-map including the business definition, the business information, the versioned business objects and the business objects and business rules involved in computing the process-resultant. The comprehensive trace-map may be described as a resultant of the evaluation of the process-resultant and demonstration of the trace-resultant. The comprehensive trace-map thus provides an explanation of the process of computing the process-resultant of an executed business process. The comprehensive trace-map describes the processing of the business rules, including the inputs, the processing steps and the output of the business rules, along with the business objects involved in the computation, their relationships with each other, and their dependencies. Business processor  may display the comprehensive trace-map as a UI element  on UI . This trace-map may be utilized for further business analysis to make business decisions.","A business case example for illustrating a method to trace an execution of a business process, according to an embodiment, is explained herein. A business process of ANNUAL BONUS DETERMINATION for year 2011 or an extra pay for good performance is considered. For ANNUAL BONUS DETERMINATION of an employee ROBERT, business processor  included in business processing unit  identifies business rules and business objects from business rule repository  and business object repository  respectively. Business rules include one or more formulae to calculate the annual bonus for ROBERT, and business objects include parameters of the formula. In this business case example, the formula to determine the annual bonus is:",{"@attributes":{"id":"p-0050","num":"0053"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":"Bonus","mn":"2011"},"mo":"=","mrow":{"mrow":[{"mo":["(",")"],"mrow":{"mi":["AS","PR"],"mo":"\u00d7"}},{"mo":["(",")"],"mrow":{"mi":"H","mo":"\u00d7","mfrac":{"mi":["AS","D"]}}}],"mo":"+"}}}}},"Where AS denotes the ANNUAL SALARY of ROBERT for ; PR denotes a PERFORMANCE RATING of ROBERT, which may be described as a parameter based upon which ROBERT's performance is measured; H denotes a NUMBER OF EXTRA HOURS OF WORK done by ROBERT; and D denotes NUMBER OF DAYS in the year 2011. Business rules may be identified with identifiers BR and BR representing a first business rule and a second business rule. Similarly business objects may be identified with represented by BO, BO, BO, and BO for a first business object, a second business object, a third business object, and a fourth business object.","Accordingly, BR and BR are expressed as:",{"@attributes":{"id":"p-0053","num":"0056"},"maths":[{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"BR","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"1"},{"mo":["(",")"],"mrow":{"mi":["AS","PR"],"mo":"\u00d7"}}],"mo":"="}}},{"@attributes":{"id":"MATH-US-00002-2","num":"00002.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"BR","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"2"},{"mo":["(",")"],"mrow":{"mi":"H","mo":"\u00d7","mfrac":{"mi":["AS","D"]}}}],"mo":"="}}}]},"The first business rule BR includes two business objects namely BO and BO denoted as AS and PR respectively. The second business rule BR includes three business objects namely BO, BO and BO denoted as H, AS and D respectively. Business processor  determines the business objects included in the business rules, and renders the business objects operable to receive an input to execute the business process. Accordingly, business processor  renders BO, BO, and BO as UI element  on UI  to receive user inputs. Business processor  did not render BO since BO is a constant for the year 2011.","The below table\u2014Table 2\u2014illustrates the UI element  that includes BO, BO, and BO along with their business object field describing the business object and business object value describing the input received.",{"@attributes":{"id":"p-0056","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"BUSINESS OBJECTS"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["BUSINESS ","BUSINESS","BUSINESS OBJECT"]},{"entry":["OBJECT","OBJECT","VALUE ="]},{"entry":["IDENTIFIER","FIELD","INPUT RECEIVED"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["BO1","Annual Salary","3000 USD"]},{"entry":["BO2","Performance Rating","="]},{"entry":["BO3","Extra Hours of Work","38"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Based upon an instruction to trigger the execution of the business process, business processor  processes the business rules BR and BR along with the business objects BO, BO, BO, and BO to compute a process resultant BONUS. According to the business rule for determining annual bonus, a process resultant BONUS=3912 is computed. In an embodiment, a decimal numeric value computed as a process-resultant is rounded off to the nearest integer.","Path tracing engine  traces a process-path followed to compute the process-resultant. The process-path is traced by tracing the key-strings corresponding to the business objects involved in computing the process-resultant. Path tracing engine  may generate the following table\u2014Table 3\u2014including the key-strings corresponding to the traced business objects as a trace-resultant.",{"@attributes":{"id":"p-0059","num":"0062"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"TRACE RESULTANT"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"KEY-STRING"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["BUSINESS",{},{},"TIMESTAMP"]},{"entry":["OBJECT","KEY-","KEY-","(DD\/MM\/YYYY; "]},{"entry":["IDENTIFIER","IDENTIFIER","VALUE","HH:MIN)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["BO1","1111","3000","Jul. 25, 2011; 21:45"]},{"entry":["BO2","2222","0.12","Dec. 1, 2010; 23:00"]},{"entry":["BO3","3333","38","Dec. 29, 2010; 23:00"]},{"entry":["BO4","4444","365","Jul. 25, 2010; 21:45"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"The trace-resultant is parsed by trace parser , by determining the versioned business objects and the business information of the key-strings, to derive a business definition for the traced business objects involved in computing the process-resultant. Trace parser  parses trace resultant by determining versioned business objects, if any, and business information of the key-strings, to derive a business definition for the traced business objects. The determined version business objects and the business information of the key-strings may be rendered as Table 4.",{"@attributes":{"id":"p-0061","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"VERSIONED","BUSINESS DEFINITION OF"]},{"entry":[{},"BUSINESS","BUSINESS OBJECT-INCLUDING "]},{"entry":["BUSINESS","OBJECT WITH","TIMESTAMP, INPUT RECEIVED, "]},{"entry":["OBJECT","TIMESTAMP","DEPENDENCIES, ETC"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["BO1","BO1","Role of ROBERT as on Jan. 1, 2010; "]},{"entry":[{},"Jan. 1, 2010; ","00:00 = Engineer"]},{"entry":[{},"00:00","Annual Salary as on Jan. 1, 2010; 00:00 ="]},{"entry":[{},{},"2500USD"]},{"entry":[{},"BO1\u2019","Role of ROBERT as on Jan. 1, 2011; "]},{"entry":[{},"Jan. 1, 2011;","00:00 = Senior Engineer"]},{"entry":[{},"00:00","Annual Salary as on Jan. 1, 2011; 00:00 ="]},{"entry":[{},{},"3000USD"]},{"entry":["BO2","BO2","Performance Rating:"]},{"entry":[{},"Jan. 1, 2010; ","10% of BO1 for \u2018-\u2019 rating"]},{"entry":[{},"00:00","12% of BO1 for \u2018=\u2019 rating"]},{"entry":[{},{},"14% of BO1 for \u2018+\u2019 rating"]},{"entry":[{},"BO2\u2019","Performance Rating:"]},{"entry":[{},"Jan. 6, 2010; ","9% of BO1 for \u2018-\u2019 rating"]},{"entry":[{},"23:00","12% of BO1 for \u2018=\u2019 rating"]},{"entry":[{},{},"15% of BO1 for \u2018+\u2019 rating"]},{"entry":[{},"BO2\u201d","Performance Rating:"]},{"entry":[{},"Jan. 1, 2011; ","9% of BO1 for \u2018-\u2019 rating"]},{"entry":[{},"00:00","12% of BO1 for \u2018=\u2019 rating"]},{"entry":[{},{},"15% of BO1 for \u2018+\u2019 rating"]},{"entry":["BO3","BO3","Extra Hours of Worked in"]},{"entry":[{},"Jan. 1, 2010; ","Q1 = 2 Hours"]},{"entry":[{},"00:00","Q2 = 6 Hours"]},{"entry":[{},{},"Q3 = 10 Hours"]},{"entry":[{},{},"Q4 = 20 Hours"]},{"entry":["BO4","BO4","Number of days in 2011 = 365"]},{"entry":[{},"Jan. 1, 2010; ",{}]},{"entry":[{},"00:00",{}]},{"entry":[{},"BO4\u2019","Number of days in 2012 = 366"]},{"entry":[{},"Jan. 1, 2012; ",{}]},{"entry":[{},"00:00"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Based upon the business definition in Table 4, compiler  compiles all the information of the above business case to generate a comprehensive trace map rendered in Table 5.",{"@attributes":{"id":"p-0063","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 5"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"ANNUAL BONUS DETERMINATION OF ROBERT FOR YEAR 2011"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"BUSI-",{},"PROCESS"]},{"entry":["BUSINESS","NESS","BUSINESS","RESUL-"]},{"entry":["RULE","OBJECT","DEFINITION","TANT"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["BR1 = (AS \u00d7 PR)","AS","3000 USD;","Bonus= "]},{"entry":[{},{},{},"3912"]},{"entry":[{},"PR","\u201c=\u201d \u2192 12% of 3000 USD",{}]},{"entry":{}},{"entry":[{"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"BR","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"2"},{"mo":["(",")"],"mrow":{"mi":"H","mo":"\u00d7","mfrac":{"mi":["AS","D"]}}}],"mo":"="}}}},"H AS D","38 Extra hours worked 3000 USD 365 days in 2011"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0064","num":"0067"},"figref":"FIG. 2","b":["205","210"]},"In process block , a process-path of the computed process-resultant is traced by tracing key-strings corresponding to the business objects involved in computing the process-resultant, to generate a trace-resultant. A processor or a business processor may be employed to trace the process-path of the computed process-resultant and to generate a trace-resultant. In an embodiment, tracing the key-string includes tracing a key-identifier, a key-value and a time-stamp for each traced business object corresponding to the business rules involved in executing the business process. In another embodiment, generating a trace-resultant includes tracing the key-string of the business objects involved in computing the process-resultant and encoding the traced key-string to generate the trace resultant.","In block , the trace-resultant is parsed by determining versioned business objects and business information of the key-strings, to derive a business definition for the traced business objects involved in computing the process-resultant. The processor may be employed to parse the trace-resultant. In an embodiment, the business definition is stored in a universal format for further utilization. In process block , based upon the derived business definition, a comprehensive trace-map is generated, comprising a compilation of the process-resultant of the executed business process. In an embodiment, generating the comprehensive trace-map includes decoding the traced key-strings of the business objects involved in computing the process-resultant, determining the object versions of the corresponding business objects and determining dependant objects involved in computing the process-resultant.",{"@attributes":{"id":"p-0067","num":"0070"},"figref":"FIG. 3","b":["300","305","310","315","320","325","330","335","305","310","335","310","315","325","325","330","330","335","315","320"]},"Business rules involved in executing the business process and business objects corresponding to the business rules are identified for executing the business process. The identified business objects are rendered on UI engine  to receive the input. In an embodiment, UI engine  is responsible to receive an input to the business objects corresponding to the business rules that are associated with the business process, from a user interface. UI engine  is responsible to receive the input to the business objects and communicate the received input to business processor . In an embodiment, UI element  may also receive an instruction to trigger the execution the business process and communicate the trigger to business processor . Based upon the trigger, business processor  processes the business rules and corresponding business objects associated with the business process to compute a process-resultant for the business process.","Business processor  notifies path tracing engine  and user interface engine  regarding the computed process-resultant. UI engine  may render the computed process-resultant on the user interface. Path tracing engine  traces a process-path of the computed process-resultant by tracing key-strings corresponding to the business objects involved in computing the process-resultant. Path tracing engine  may also determine one or more associated dependant business objects or dependant business rules involved in computing the process-resultant. Based upon the process-path, path tracing engine  generates a trace-resultant, describing the process-path of the processed business rules and the business object to compute the process-resultant.","Trace parser  parses the trace-resultant by determining versioned business objects and business information of the key-string, to derive a business definition for the traced business objects involved in computing the process-resultant. Based upon the derived business definition, compiler  decodes the traced key-string of the business objects involved in computing the process-resultant. Compiler  also determines versioned business objects and dependant business objects that were involved in computing the process-resultant. Compiler  generates a comprehensive trace-map describing a compilation of the process-resultant of the executed business process.","Some embodiments of the invention may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components maybe implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer readable storage media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include machine code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment of the invention may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment of the invention may be implemented in hard-wired circuitry in place of, or in combination with machine readable software instructions.",{"@attributes":{"id":"p-0073","num":"0076"},"figref":"FIG. 4","b":["400","400","405","455","400","440","455","410","415","410","415","405","415","400","425","430","400","425","430","400","435","400","450","450","400","445","400","420","460","460","460","450","460"]},"A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transaction, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transaction data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system (e.g., ERP system), and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","In the above description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however that the invention can be practiced without one or more of the specific details or with other methods, components, techniques, etc. In other instances, well-known operations or structures are not shown or described in details to avoid obscuring aspects of the invention.","Although the processes illustrated and described herein include series of steps, it will be appreciated that the different embodiments of the present invention are not limited by the illustrated ordering of steps, as some steps may occur in different orders, some concurrently with other steps apart from that shown and described herein. In addition, not all illustrated steps may be required to implement a methodology in accordance with the present invention. Moreover, it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.","The above descriptions and illustrations of embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather, the scope of the invention is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The claims set forth the embodiments of the invention with particularity. The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments of the invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
