---
title: Automated grid compute node cleaning
abstract: A method includes, in a network of interconnected grid compute nodes, storing system criteria for a first grid compute node, storing an initial snapshot of the first grid compute node, comparing a current snapshot of the first grid compute node with the initial snapshoot to identify parts of the current snapshot that do not meet the criteria, and adjusting the first compute node to meet the criteria.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07587480&OS=07587480&RS=07587480
owner: SAP AG
number: 07587480
owner_city: Walldorf
owner_country: DE
publication_date: 20041220
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention relates to data processing by digital computer, and more particularly to automated grid compute node cleaning.","Grid computing is a form of distributed system wherein computing resources are shared across networks. Grid computing enables the selection, aggregation, and sharing of information resources resident in multiple administrative domains and across geographic areas. These information resources are shared, for example, based upon their availability, capability, and cost, as well as a user's quality of service (QoS) requirements. Grid computing can mean reduced cost of ownership, aggregated and improved efficiency of computing, data, and storage resources, and enablement of the creation of virtual organizations for applications and data sharing.","Grid-enabled software applications can be deployed (e.g., installed, customized) to grid compute nodes within a grid network. After usage, the deployed grid-enabled software applications are removed. However, there is always a chance that some parts of the grid-enabled software applications remain on the grid compute nodes after usage. For example, in some cases there is no clean deployed grid-enabled application removal without restarting the grid compute node after usage. Another example is that application developers sometimes forget to remove all parts of the grid-enabled application after usage. With the complete removal of grid-enabled applications this results in grid compute nodes that become slow performers and more unusable over time.","The present invention provides methods and apparatus, including computer program products, for automated grid compute node cleaning.","In one aspect, the invention features a method including, in a network of interconnected grid compute nodes, storing system criteria for a first grid compute node, storing an initial snapshot of the first grid compute node, comparing a current snapshot of the first grid compute node with the initial snapshoot to identify parts of the current snapshot that do not meet the criteria, and adjusting the first compute node to meet the criteria.","In embodiments, the system criteria can include a listing of all files and directories, a total disk space usage, a list of Transmission Control Protocol\/Internet Protocol (TCP\/IP) ports, memory usage, processor usage, and\/or network usage. The system criteria are customizable.","Adjusting can include rebooting the first grid compute node, and starting a grid container in the first compute node. Adjusting can also include comparing another current snapshot of the first grid compute node with the initial snapshoot to identify parts of the current snapshot that do not meet the criteria, and adjusting the first compute node to meet the criteria.","Adjusting can also include installing a new disk image on the first grid computer node. Installing can include placing the new disk image on a bootable local storage medium of the first grid compute node. Installing can include booting the first grid compute node with the new image located on a network device in the grid network.","The system criteria can be weighted. The new image can include the initial snapshoot.","The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features, objects, and advantages of the invention will be apparent from the description and drawings, and from the claims.","Like reference symbols in the various drawings indicate like elements.","As shown in , a grid network  in accordance with one embodiment of the invention includes a number of interconnected grid compute nodes , , , . In an example, the grid network  is implemented as a client-server network. Client\/server describes a relationship between two computer programs in which one program, the client, makes a service request from another program, the server, which fulfills the request. Although the client\/server idea can be used by programs within a single computer, it is a more important idea in a network, such at network . In a network, the client\/server model provides a convenient way to interconnect programs that are distributed efficiently across different locations.","In the client\/server model, one server, sometimes called a daemon, is activated and awaits client requests. Typically, multiple client programs share the services of a common server program. Both client programs and server programs are often part of a larger program or application. Relative to the Internet, a Web browser is a client program that requests services from a Web server in another computer somewhere on the Internet.","Each of the grid compute nodes, grid compute node  for example, can include a processor  and a memory . Memory  includes a grid manager , an operating system (OS) , such as Unix, Linux or Windows, and grid application cleaning service , which executes a grid application cleaning process . As grid-enabled software applications are deployed, executed, and terminated, the grid application cleaning process  handles removal of grid-enabled applications.","In one particular example, the grid application cleaning process  takes an initial snapshot of a target grid compute node in which a grid-enabled application is currently running on at grid startup. In another particular example, the grid application cleaning process  takes a snapshot of a target grid compute node in which a grid-enabled application is currently running on at first usage of the grid computer node.","The initial snapshot, which is stored in memory or other storage medium, includes all resources that are managed by the target grid compute node, such as a listing of all files and directories, a total used disk space, a list of all used and free Transmission Control Protocol\/Internet Protocol (TCP\/IP) ports, memory usage, processor and network usage, and so forth. Once the initial snapshot is in place, the target grid compute node becomes part of the grid network  and is used.","After a predetermined period of time that is customizable (e.g., once in a week) and\/or if a certain condition is met (e.g., no application is currently deployed and running on the target grid compute node), the grid application cleaning service  takes a snapshot of a current state of the target grid compute node and compares it to the snapshot of the initial state of the target grid compute node. When the current snapshot is taken no grid-enabled applications are running on the target grid compute node. To ensure that no grid-enabled applications are running on the target grid compute node, the grid application cleaning process  can stop usage of the target grid compute node for a period of time. In a particular example, process  notifies a grid manager service residing in the target grid compute node to accept no queries from other grid compute nodes. In another particular example, process  waits until no applications are running on the target grid compute node and at that time temporarily blocks further usage of the target grid computer node.","The process  analyzes certain customizable criteria. For example, the criteria can include determination of an increase of used disk space that is beyond some percentage, such as 5%. The criteria can include determining whether an increase of used ports is beyond some percentage, such as 10%.","If, using the criteria, it is determined that the target grid compute node needs cleaning (i.e., system data representing the target grid compute node exceed system data specified in the initial snapshot), the process  cleans the target grid compute node.","As shown in , process  includes storing () cleaning criteria. The cleaning criteria can be stored locally in memory or using some other appropriate storage medium, such as a disk drive. Process  stores () an initial snapshot of a target grid compute node before deployment of a grid-enabled software application to the target grid compute node.","Process  identifies () parts of a current snapshot that do not meet the criteria associated with the target grid compute node. For the parts not meeting the criteria, process  attempts to correct () a current state of the target grid compute node to bring it into compliance with the criteria. For example, if process  determines that the target grid compute node contains too many files, process  will attempt to delete the files. In another example, if the process  determines that main memory usage in the target grid compute node is too high, process  can detect running processes that should not run and attempt to stop them. Process  can also be used to free used TCP\/IP ports.","If process  fails to correct () the target grid compute node, process  initiates a reboot () of the target grid compute node. After rebooting, process  restarts () a grid container on the target grid compute node. In Sun Microsystems' JavaBeans component architecture and in Microsoft's Component Object Model (COM), a container is an application program or subsystem in which the program building block known as a component is run.","If the target grid compute node is running the Windows operating system, the grid container service is started automatically. If the target grid compute node is running the UNIX operating system the grid container service is started via an entry in a UNIX profile file.","After restart, process  compares () the initial snapshot to the current state. If the criteria are met, the process  connects () the target grid compute node to the grid network . In a particular example, connecting () is performed as follows. After reboot, process  listens to a certain communication channel (e.g., a TCP\/IP port). Prior to initiating the reboot, process  residing on grid compute node M communicates to grid compute node M in the grid network  that a restart is taking place, and is passing necessary configuration data (e.g., superior\/inferior information). Process  residing on grid compute node M has the task to poll at certain intervals for grid compute node M until it has rebooted. After that, the process  residing on grid compute node M provides configuration information to process  residing on grid compute node M, which is used to link the grid compute node to the grid network.","In another particular example, a special grid service or application that takes care of attaching rebooted grid compute nodes to the grid network  centrally.","If the comparison () determines that the criteria are not met, process  identifies (), attempts to correct (), initiates a reboot (), restarts (), compares (), and connects (), as described above. If repeating these steps fails, process  installs () a new disk image on the target grid compute node. In a particular example, a disk image is placed on a bootable local hard disk. In another example, the installation () occurs over the grid network  with a clean network boot image. In some implementations, the installation () uses, for example, a blade management system or a mainframe management system.","To perform the installation (), the grid application cleaning service  includes an application programming interface (API) or other communication mechanism to initiate installing () a new image to the target grid compute node. The new image contains a software grid manager (e.g., a software grid manager service residing inside a grid container). At startup of a clean target grid compute node, the grid container is started automatically. The process  connects the grid compute node to the grid network .","In other embodiments, a single central grid service or application monitors a group or all grid compute nodes. In still other embodiments, the components of the snapshot (e.g., files, ports) are weighted. This is helpful when certain components are more crucial for continuous operation that others.","The invention can be implemented in digital electronic circuitry, or in computer hardware, firmware, software, or in combinations of them. The invention can be implemented as a computer program product, i.e., a computer program tangibly embodied in an information carrier, e.g., in a machine-readable storage device or in a propagated signal, for execution by, or to control the operation of, data processing apparatus, e.g., a programmable processor, a computer, or multiple computers. A computer program can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.","Method steps of the invention can be performed by one or more programmable processors executing a computer program to perform functions of the invention by operating on input data and generating output. Method steps can also be performed by, and apparatus of the invention can be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).","Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. Information carriers suitable for embodying computer program instructions and data include all forms of non-volatile memory, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in special purpose logic circuitry.","It is to be understood that the foregoing description is intended to illustrate and not to limit the scope of the invention, which is defined by the scope of the appended claims. Other embodiments are within the scope of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
