---
title: Admission control in networked services
abstract: Prediction-based online admission control for incoming jobs has an explicit objective of optimizing a utility function. The input to an algorithmic procedure is a set of requests made in respect of a network service. Each request has information about the length of the request. An output of the algorithmic procedure is a selected subset of requests that can be served within the capacity constraints of the network service, such that the utility function is approximately optimized (for example, minimized or maximized) depending on the context of the particular application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07289527&OS=07289527&RS=07289527
owner: International Business Machines Corporation
number: 07289527
owner_city: Armonk
owner_country: US
publication_date: 20021212
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","EXAMPLE"],"p":["The present invention relates generally to networked services, and relates more particularly to admission control decisions made in respect of the provision of networked application services.","An existing admission control strategy used in the provision of web-hosting services is a \u201ctail-dropping\u201d strategy, which rejects a job when the queue length exceeds a specified bound. Chen et al (An Admission Control Scheme for Predictable Server Response Time for Web Accesses, 10, May 2001, Hong Kong) present a prediction-based admission control scheme that decides to accept or reject jobs based on the predicted workload.","This prediction-based strategy described by Chen et al is an improvement over the existing tail-dropping strategy. Using such a prediction-based strategy incorporates variable workload, rather than simply specifying conditions in which jobs are dropped, per the existing tail-dropping strategy.","The approach described by Chen et al is certainly an improvement over existing techniques. This approach, however, is still relatively unsophisticated. Issues relating to commercial provision of networked services are unaddressed by the control strategy proposed by Chen et al. Thus, a need clearly exists for an improved manner of admission control for networked services.","A prediction-based online admission control scheme for incoming jobs is described herein. This scheme has an explicit objective of optimizing a predetermined utility function. An algorithmic procedural approach is used. The input to the algorithmic procedure is a set of jobs to a network service. Each job carries information about the length of the job. The job, in this context, can either be a request or a connection depending on the granularity of the service. An output of the algorithmic procedure is a selected subset of jobs that can be served within the capacity constraints of the network service, such that the predetermined utility function is approximately optimized (for example, minimized or maximized) depending on the context of the particular application.","An algorithmic methodology is presented for admission control, for jobs characterized by (i) the reward such jobs generate when admitted, (ii) the penalty such jobs incur if rejected (or not served), and (iii) the service time required to perform the job, for a single resource. Information concerning incoming jobs is, of course, not available a priori. Rather, admission control decisions are made as jobs arrive. The described methodology is readily extended, as also described herein, for admission-controlled jobs that are serviced using multiple resources.","The interposition of a service proxy that provides admission control functionality has various associated advantages. The service can be operated remotely, and different services can be provided on different networked computers, while retaining a single contact point for clients. A balanced strategy is implemented, which takes into account the length of the job, the reward\/penalty of the job and the estimated system utilization into account. Short-term prediction is used to adapt an offline strategy to appropriately work in an online context.","Criteria can be specified upon which to select jobs that are to be dropped. Hence, profits can be increased by servicing an \u201coptimal\u201d request set, which is advantageous in a variable workload environment typical of network-services.","An extension can be made to jobs that require multiple resources, either simultaneously or sequentially. An extension can also be made to service level agreements (SLAs) that have multiple gradations, instead of a binary follow\/do not follow QoS condition.","A network service is a remotely-accessible software program that offers a well-defined interface to its clients. Such an interface is typically referred to as an application programming interface (API).  schematically represents an architecture of a network service. Typically, a client  accesses a service  by sending requests  that conform to the service's API , using a library  provided to the client  by the service provider. The service  in turn processes the request  and returns a response .","In the present case, this existing arrangement is modified by introducing a proxy between the client  and service , as schematically represented in . The proxy  offers the same interface (API ) as the service  the proxy  represents. The client  therefore remains unaware of the interposition of the proxy . The proxy  interacts with the service  (which may be operated on a remote computer), and makes admission control decisions on behalf of the service .",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3","b":["150","310","320","330","310","320","330"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4","b":["1","2"]},"A client  typically sends requests  to the network service encoded using the SOAP protocol, with HTTP as the communication mechanism. These requests  are directed to a SOAP server , at a particular location on the Internet specified using a uniform resource locator (URL).","A SOAP server  has a Servlet Container  (which is a web server capable of running servlets) that receives the request and usually directs the request to the appropriate service  pre-registered with the Servlet Container . In the present case, a proxy  is substituted for each web service . That is, instead of registering a web service  with the SOAP server , its corresponding proxy  is instead registered. As before, the proxy  offers the same API as the service , and thus the client  and the SOAP server  remain unaware of this substitution.","The Refresh criterion is satisfied if the proxy has not fetched the estimated capacity utilization for the future from the service for the last n jobs or if a predetermined time T has elapsed, since the previous refresh.","Control Flow",{"@attributes":{"id":"p-0026","num":"0000"},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":["Step  A client  sends a request to the SOAP server .","Step  The SOAP server  unmarshalls the request parameters of the request sent in step , and calls the appropriate proxy .","Step  The proxy  decides whether the proxy  needs to update its capacity information based on the Refresh criterion, outlined below. If so, the proxy  requests the service  to send the currently available capacity.","Step  The admission controller  decides whether to service the request using the techniques described below, which use the resource requirements provided by RRM , and the predictor  and the estimated capacity utilization of the service resources to arrive at a decision.","Step  If the admission controller  decides to service the request, the admission controller  forwards the request to the service  and awaits response. Otherwise, the admission controller  sends a \u201cbusy\u201d response to the client .\n\nAdmission Control Methodology\n"]}},"More requests can be serviced if requests that collide with a only small number of other requests are scheduled. In this context, request Ris said to be colliding with another request Rif only one of the two requests Rand Rcan be scheduled, while satisfying a resource capacity constraint determined by the capacity of the hardware that is used to service the requests.","If a request Rhas an ending time greater than the ending time of request R, and Rand Rcan both be started without violating the capacity constraint, then the conflict set of R(that is, the set of all requests that collide with R) is a superset of the conflict set of R. Hence, if only one of Rand Rcan be serviced, then Ris desirably serviced in preference to R.","A schedule of arriving requests is not known a priori when decisions are made to accept or reject requests. One recognizes, however, that requests have rewards and penalties associated with these requests. An objective then is to maximize the sum of available rewards taking into account incurred penalties.","As foreknowledge does not exist of when requests will arrive in future, admission control decisions are made based upon a prediction of the short-term future arrival of requests. A measure of profit per unit capacity is used as a criterion for making an admission control decision. A strategy is adopted that takes into account both the profit (rewards and penalties), and the length of the remaining job.","To further elaborate, when a request R(having reward rand an end time d) arrives, a decision horizon is defined as the time between the start and the end of the request R. A spare capacity array, called the available array, is computed for the decision horizon, based on the requests that are already scheduled. The available array is indexed against time. Each entry t in the array represents the amount of resource that is available at time t, if no further requests are admitted. Then capacity is pre-reserved for some of the jobs that are expected to arrive (based on the results of a short-term prediction over the decision horizon). The strategy is to pre-reserve capacity for an expected job R(having reward rand end time d), if the criteria of Equation (1) below is satisfied.\n\n()\u00b7()\u2003\u2003(1)\n","In Equation (1) above, p(d\u2212d) represents the probability of a new job being serviced within (d\u2212d) duration; rrepresents the expected reward of the job; and prepresents the expected penalty of the job.","If, after pre-reserving capacity for all such requests Rthat satisfy Equation (1) above, spare capacity remains to schedule request R, then request Ris accepted. A request with a high reward has a higher chance of selection, as the relative reward (r\u2212r) is greater in value, and is not likely to be displacing capacity for future requests that might generate greater rewards. If, however, ris relatively small then the inequality of Equation (1) above is satisfied. This is because if r<rthen rless ris less than zero. Consequently, space for expected requests may be reserved in preference to scheduling the current request. This increases the chance of Rbeing rejected. Also, if a request has a large duration its end-time dis later and, consequently, p(d\u2212d) is greater. Accordingly, capacity may be reserved for shorter jobs, thus causing Rto be rejected.","Table 1 below presents pseudo-code that describes the function of an admission control algorithm.",{"@attributes":{"id":"p-0035","num":"0038"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u20021","function schedule"]},{"entry":["\u20022","for every element j in the available capacity array"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u20023",{"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":["futureRequests","j"],"mo":["\u2062","[","]"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},{"mi":"L","mo":"*","mrow":{"munderover":{"mo":"\u2211","mrow":[{"mi":"i","mo":"=","mn":"1"},{"mi":["d","j"],"mo":"-"}]},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mi":"P","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["serviceTime","i"],"mo":"="}}},{"mo":["(",")"],"mrow":{"mi":["d","i","j"],"mo":[",",","]}}],"mo":["*","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":"f"}}}}],"mo":["=","\u2062"],"mstyle":{"mtext":{}}}}}}]},{"entry":{}},{"entry":["\u20024","backlog = 0"]},{"entry":["\u20025","for k = 1 to j"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u20026","backlog = backlog + futureRequests [k] *"]},{"entry":[{},"P(serviceTime = (j \u2212 k))"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u20027","end-for"]},{"entry":["\u20028","capacityLeft = available [j] \u2212 (backlog +"]},{"entry":[{},"futureRequests [j])"]},{"entry":["\u20029","if(capacityLeft \u2266 1)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["10","return false"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["11","end-if"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["12","end-for"]},{"entry":["13","return true"]},{"entry":["14","end function"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"In the pseudo-code of Table 1, f(d,i,j) is 1 if currentReward is less than or equal to the expectedReward and the probability of a new job arriving and finishing in (d\u2212j\u2212i) time, multiplied by penalty for rejecting a job. This is referred to as the High Profit Criteria.","The currentReward is the reward associated with the request under consideration, and","expectedReward is the sum of the rewards of the current expected request and the expected request in the remaining time in the decision horizon, namely length of the available array\u2014j.","The above-described methodology assumes that exact system capacity information is available when a request is received and an admission control decision is required. This, however, may not be the case, and two cases are outlined below. The above-described methodology extends to these two cases listed below.","Due to the refresh criterion, exact system information may not be available for the capacity utilized when the admission control decision is made (that is, when a request R arrives). The system information for requests that arrived until time tis available and a new request arrives at time twhich is later than t. However, the request R can be replaced by a request R\u2032, which starts at to and has all other properties identical to R.","Request R\u2032 is assumed to clear part of the horizon from tto t. That is, the algorithm is initialized with j=t\u2212t. If the request R\u2032 clears the remaining horizon after reserving space for requests satisfying the HighProfit criterion, the request R is serviced. Instead of checking whether R should be serviced, the admission control criterion (ACC) is checked for another request R\u2032, and if R\u2032 clears the ACC, R is serviced.","In cases in which the request can be queued and serviced later (that is, a service level agreement between a service provider and a client has a turnaround time greater than the service time of the request), the request is continually tried to service. Consider an example of a request R of duration D that arrives at time to and has a turnaround time D+E. An attempt is made to schedule R at time t. If, however, this attempt fails at some time tin the decision horizon, further attempt is made to schedule R at time t(using the extended methodology described above, which compensates for the lack of information of requests which arrived in time tto t). This procedure is repeated until either the request R is serviced or time t+E elapses, in which case, the request is rejected.","Extensions","The above-described methodology can be extended when multiple resources are present. Capacity is reserved for expected requests that satisfy the profit per unit capacity criterion in all dimensions (resources). That is, the admission controller module is run with reservation for only those future requests that satisfy the High Profit Criteria for all resources.","A conservative estimate is made of expected requests, as expected rewards in the future are appropriately discounted to reflect the possibility that such rewards may not occur. For example, while making the admission control decision for R, resources  and  are reserved only for Rand not Ror R, which satisfy the High Profit Criterion for only one of the resources. On the other hand, Rsatisfies the High Profit Criteria in all dimensions (resources). In this example, all requests are assumed to have the same reward and penalty.  schematically represents an example of this extension to multiple resources for requests rand r.","The above-described methodology can be extended to cases in which a request requires multiple resources in a sequential manner. That is, if a request may require rfirst and then r. In such a scenario, a check is made of whether all resources (that is, both rand r) can be given to the request at the time the request requires such resources, after reserving resource for requests satisfying the HighProfit Criteria for individual resources. To elaborate, if a request needs resource  from time tto tand then resource  from tto t, the request is serviced only if the request is able to access both resources  and . That is, the request is able to clear the AC algorithm for resource  at tand resource  at t.","This methodology can also be extended to multiple-grade SLAs in which a client request has different rewards for different values of SLA parameters instead of a single value, which meets or does not meet the requirements of the SLA. For this modification, the request is not rejected outright if the request fails the admission control criteria for the best grade of its SLA. Instead, a check is made of whether the request can be serviced in the next grade specified in the SLA and so on, until service level grades are exhausted or the request can be serviced.","Computer Hardware and Software",{"@attributes":{"id":"p-0046","num":"0049"},"figref":"FIG. 7","b":["700","700","700"]},"The computer software involves a set of programmed logic instructions that are able to be interpreted by the computer system  for instructing the computer system  to perform predetermined functions specified by those instructions. The computer software can be an expression recorded in any language, code or notation, comprising a set of instructions intended to cause a compatible information processing system to perform particular functions, either directly or after conversion to another language, code or notation.","The computer software is programmed by a computer program comprising statements in an appropriate computer language. The computer program is processed using a compiler into computer software that has a binary format suitable for execution by the operating system. The computer software is programmed in a manner that involves various software components, or code means, that perform particular steps in the process of the described techniques.","The components of the computer system  include: a computer , input devices ,  and video display . The computer  includes: processor , memory module , input\/output (I\/O) interfaces , , video interface , and storage device .","The processor  is a central processing unit (CPU) that executes the operating system and the computer software executing under the operating system. The memory module  includes random access memory (RAM) and read-only memory (ROM), and is used under direction of the processor .","The video interface  is connected to video display  and provides video signals for display on the video display . User input to operate the computer  is provided from input devices ,  consisting of keyboard  and mouse . The storage device  can include a disk drive or any other suitable non-volatile storage medium.","Each of the components of the computer  is connected to a bus  that includes data, address, and control buses, to allow these components to communicate with each other via the bus .","The computer system  can be connected to one or more other similar computers via a input\/output (I\/O) interface  using a communication channel  to a network , represented as the Internet.","The computer software program may be provided as a computer program product, and recorded on a portable storage medium. In this case, the computer software program is accessed by the computer system  from the storage device . Alternatively, the computer software can be accessed directly from the network  by the computer . In either case, a user can interact with the computer system  using the keyboard  and mouse  to operate the programmed computer software executing on the computer .","The computer system  is described for illustrative purposes: other configurations or types of computer systems can be equally well used to implement the described techniques. The foregoing is only an example of a particular type of computer system suitable for implementing the described techniques.","Overview","A method, a computer system and computer software are described herein in the context of admission control for network services. In overview, the methodology described herein relates to a prediction-based strategy for deciding whether a job is accepted or rejected, based on attributes of the job. Such attributes include, for example, reward, penalty, resource requirements, and current resource utilization. By contrast, existing techniques take current resource utililization into account in admission control schemes.",{"@attributes":{"id":"p-0057","num":"0060"},"figref":"FIG. 8","b":["810","820","830"]},"The techniques described herein can be implemented with relatively little computation complexity, which is desirable for real-time implementation. The described algorithm is probably optimal in an offline, uni-dimensional job setting. An offline algorithm is one that assumes that a priori information is available concerning all the requests (and their service times) that will arrive in future. A uni-dimensional job setting denotes that there is a single resource that is admission controlled. The described algorithm uses prediction to simulate the offline algorithm in an online setting.","Various alterations and modifications can be made to the techniques and arrangements described herein, as would be apparent to one skilled in the relevant art."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 4","FIG. 2"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
