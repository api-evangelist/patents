---
title: Communication terminal
abstract: A communication terminal includes: an update section that obtains software via a communication network from a predetermined provider so as to update the software; and a failure monitor section that monitors whether there is a failure to interfere with an update of the software by the update section. The communication terminal further includes an update record section that records, if there is the failure and the update becomes an incomplete update on an occasion of the update by the update section, the presence of the incomplete update; and an update prompting section that prompts, if a monitor result by the failure monitor section changes from that there is a failure to that there is no failure, performing by the update section the update whose presence is recorded by the update record section.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08392907&OS=08392907&RS=08392907
owner: Fujitsu Limited
number: 08392907
owner_city: Kawasaki
owner_country: JP
publication_date: 20100622
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","FIELD","BACKGROUND","SUMMARY","DESCRIPTION OF EMBODIMENTS"],"p":["This is a continuation application of PCT\/JP2007\/075005, filed on Dec. 26, 2007.","The embodiment discussed herein is directed to a communication terminal.","Conventionally, there is known a communication terminal referred to a mobile terminal. For example, a mobile personal computer, a mobile phone and the like are an example of the mobile terminal. Software (OS, application program) is installed in such mobile terminal to run to allow the mobile terminal to operate in various functions.","In addition, in the field of information process apparatus, a mode becomes common in which installed software is updated for use as appropriate. Also for software of the mobile terminal, demand grows to update software after a product shipment for a purpose such as a failure correction, a design change, a function addition and a revision of held information.","Various techniques which have been proposed in order to perform such software update will be described in the following.\n\n","Including the above-described techniques from (1) through (7), techniques for software update in a mobile terminal are classified into methods such as a method of updating manually by a user, a method of instantly updating by a server notification and a method of updating based on time designation by a server notification. Among these, the method of updating based on time designation by a server notification is more advantageous than other methods from the point of view of a load distribution of a server, because timing of software update performed in a number of mobile terminals are adjusted on a server side. However, in the following cases, it is impossible to perform a software update at a time designated by a server.\n\n","In addition, as software to be updated, there is software to be updated by servers of respective different parties such as OS family software and application family software. In such case, when update times in respective parties compete, it is required to make an update of OS family software a higher priority than an update of application family software. As a result, in the following cases, it is also impossible to automatically perform a software update at a time as designated by a server.\n\n","In the above-described cases 1 through 4, because it is impossible to perform an automatic software update at a time designated by a server, a resume of a failed software update has to be left to a software update operation by a manual operation of a user. Thus, a software update is performed by a manual operation when the update is available. However, there are following problems.\n\n","Of these problems, the problem 2 is specifically critical. In any of the above-described techniques from (1) through (7), once a software update is failed, a subsequent update may not be assured.","These problems may occur generally in a communication terminal not limited to a mobile terminal.","According to an aspect of the present invention, a communication terminal includes:","an update section that obtains software via a communication network from a predetermined provider so as to update the software;","a failure monitor section that monitors whether there is a failure to interfere with an update of the software by the update section;","an update record section that records, if there is the failure and the update becomes an incomplete update on an occasion of the update by the update section, the presence of the incomplete update; and","an update prompting section that prompts, if a monitor result by the failure monitor section changes from that there is a failure to that there is no failure, performing by the update section the update whose presence is recorded by the update record section.","The object and advantages of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the claims.","It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory and are not restrictive of the invention, as claimed.","An exemplary embodiment will be explained with reference to the drawings.",{"@attributes":{"id":"p-0027","num":"0039"},"figref":"FIG. 1"},"In , a mobile phone  is illustrated as an embodiment of the communication terminal according to the aspect of the present invention. In order to perform various processes internally, the mobile phone  requires updates of OS family software and application family software. In addition, the mobile phone  is incorporated in a software update system  to which an update method based on time designation by a server notification of the above-described methods of update is applied. In the software update system  illustrated in , a lot of mobile phones  that require a software update belong to one server  that provides an updated version of software and manages the software update. The server  illustrated in  is presented conceptually, and not distinguished as to whether a server which is responsible for OS family software or a server which is responsible for application family software. Actually, there exists a server of each party.","The server  classifies the mobile phones  into, for example, plural groups A, B, C such as \u201cA\u201d, \u201cB\u201d, \u201cC\u201d, allocates individual update start times for the respective groups A, B, C and sends update notifications in which the respective update start times are written to the respective mobile phones  belonging to the respective groups A, B, C. Each mobile phone  starts a software update when the time notified from the server  comes. As a result, for example, mobile phones  which belong to the group A called \u201cA\u201d perform software updates respectively at a same time, which is different from a time when mobile phones  which belong to the group B called \u201cB\u201d perform software update. As a result, the load for the server  is distributed so that an efficient update is obtained.",{"@attributes":{"id":"p-0030","num":"0042"},"figref":["FIG. 2","FIG. 1"]},"In , a functional block diagram of the mobile phone  is illustrated, and also two servers _, _ which provide an update version of software for the mobile phone  are illustrated. These servers _, _ are an example of the provider according to the aspect of the present invention and a specific example of the server  illustrated in , and are also servers which support a software update by the update method based on time designation by a server notification. One server (OS software update management server) _ of these servers _, _ manages an update of OS software and the other server (OEM application software update management server) _ manages an update of OEM application software which is already incorporated in the mobile phone  at the point of sale.","As an internal function of the mobile phone , there naturally exists a function as a phone and further there exist a function of electronic mail, a function as an internet terminal, a game function, a music replay function and the like. However, in the functional block diagram of , these functions are not specifically distinguished from one another, and illustrated as being carried collectively by OS software and OEM application software. In addition, regarding hardware to allow each function to work fully, hardware same as that provided in a conventional mobile phone is assumed to be provided. Regarding each function of the mobile phone  illustrated in , the functions including also a function which is newly introduced in the present invention may be performed on conventional hardware as it is, and so further explanation about the hardware will be omitted.","Here, an outline of each functional block of the mobile phone  will be explained. The mobile phone  includes an OS software update section , an application software update section , a state management DB (database) , a competition control section , a NW (network) state management section , a terminal state management section , a re-negotiation section  and a wireless communication control section .","The OS software update section  is a section which updates OS software of the mobile phone  and also is a section which executes the updated OS software to be allowed to work fully.","The application software update section  is a section which updates OEM application software of the mobile phone  and also is a section which executes the updated OEM application software to be allowed to work fully.","The OS software update section  and the application software update section  each corresponds to an example of the update section according to the aspect of the present invention. However, as described later, between the OS software update section  and the application software update section , there is a difference in competition of software update.","The state management DB  is database for managing various kinds of states inside and outside the mobile phone . The state management DB  corresponds to an example of the registration section in the failure monitor section according to the aspect of the present invention. A state to be managed by the state management DB  includes not only an internal state of the mobile phone  but also a state of communication environment in which this mobile phone  is placed and the like.","The competition control section  is a section which inquiries a current state of the state management DB , to determine competition as to software update. The competition control section  serves as an example of the failure determination section in the failure monitor section according to the aspect of the present invention, and also serves as an example of the update record section according to the aspect of the present invention. However, the \u201ccompetition\u201d referred to here has a broad meaning including such all factors as interfering software update, and, as a matter of course, includes a \u201ccompetition\u201d in a narrow meaning, i.e., an event in which another process impossible to be executed concurrently with an update process occurs, and further includes, for example, an event in which a communication state falls into a failure and it is impossible to perform a download for a software update, an event in which the hardware in the mobile phone  is in a state failure so that it is impossible to perform a software update, and the like.","The NW state management section  is a section which monitors a communication state in a communication network to which the mobile phone  is connected, via the wireless communication control section .","The terminal state management section  is a section which monitors a state inside the mobile phone .","Each of the NW state management section  and the terminal state management section  corresponds to an example of the state monitor section in the failure monitor section according to the aspect of the present invention.","The re-negotiation section  is a section which requires a re-issue of software update notification to the servers _, _. The re-negotiation section  corresponds to an example of the update prompting section.","The wireless communication control section  is a section which controls wireless communication by the mobile phone .","Next, these functional blocks and a flow of information and the like in the mobile phone  will be explained.","First, as described above, the OS software update management server _ and the OEM application software update management server _ allocate start times of software update for the mobile phone , and transmits update notifications including update start time data representing the respective start times. On the mobile phone  side, each of the OS software update section  and the application software update section  receives, via the wireless communication control section , the update notifications from a corresponding server and causes the state management DB  to register times represented by the update start time data included in the update notifications.","In addition, each of the NW state management section  and the terminal state management section  constantly monitors a communication state of the communication network and a state inside the mobile phone . In a case in which the NW state management section  detects a state in which it is impossible to communicate with the communication network, for example, such as a case in which the mobile phone  exists at a blind spot of the communication network and a case in which communication is restricted from the communication network, the NW state management section  causes the state management DB  to register the state. In a case in which the terminal state management section  detects a state of interfering a download inside the mobile phone , for example, such as a case in which a battery remaining amount of the mobile phone  is running short and a case in which a remaining amount of memory prepared for various kinds of processes in the mobile phone  is in shortage, the terminal state management section  registers such state in the state management DB .","Here, an example of the registration in the state management DB  will be explained.",{"@attributes":{"id":"p-0048","num":"0060"},"figref":"FIG. 3"},"In , a management table  prepared in the state management DB is illustrated. In the management table , an update time section  in which the update start time is registered and a state section  in which various kinds of states are registered are provided.","According to the example illustrated in , in the update time section , a start time  allocated from the OEM application software update management server _ and a start time  allocated from the OS software update management server _ are registered. These start times ,  are expressed in \u201cyear\u201d\/\u201cmonth\u201d\/\u201cday\u201d \u201co'clock\u201d:\u201cminute\u201d format. In addition, according to the example illustrated in , current states , , , , respectively as to four state kinds of \u201cIN UPDATING OS\u201d \u201cBLIND SPOT\u201d \u201cRESTRICTED\u201d \u201cBATTERY REMAINING AMOUNT\u201d are registered in two choices of \u201cYes\u201d and \u201cNo\u201d or in two choices of \u201cOK\u201d and \u201cNG\u201d in the state section . Incidentally, the example of the state illustrated in the state section  of  depicts concisely what is needed for the following explanation, and actually other kinds of states are further registered.","Returning to , the explanation will be continued.","After the start times allocated from the servers _, _ are registered in the state management DB , when the start time comes, the OS software update section  and the application software update section  inquire permissibility-impermissibility of a software update execution to the competition control section . The competition control section  which receives the inquiry asks the state management DB  of various kinds of registered states and update start times to confirm them. Then, the competition control section  determines, based on the various kinds of states and the update start time, whether or not it is in a state suitable for executing a software update and responds a determination result to the OS software update section  and the application software update section .","If the determination result by the competition control section  indicates permissibility of execution, the OS software update section  and the application software update section  download an update version of software via the wireless communication control section  from the OS software update management server _ or the OEM application software update management server _ so as to update the software. The OS software update management server _ or the OEM application software update management server _ which have updated the software request the state management DB  to remove the update start times and the state management DB  removes the update start times.","On the other hand, when the determination result by the competition control section  indicates impermissibility of execution, the OS software update section  and the application software update section  postpone the software update, and request the state management DB  to remove the update start times and also issue a re-negotiation reservation to the competition control section . This re-negotiation reservation is a flag representing that there exists an incomplete software update and is recorded in a memory (not illustrated in the drawing) by the competition control section .","Subsequently, when a change occurs in the registered states and the like, the state management DB  notifies, the competition control section  of the state change. When the competition control section  is notified of the state change in a case where the flag of the re-negotiation is set, the competition control section  again determines permissibility-impermissibility of the software update based on a state after the change. Then, if the competition control section  confirms resolution of competition ant determine permissibility of execution, a re-negotiation request of software update is issued from the competition control section  to the re-negotiation section . The re-negotiation section  which has received this re-negotiation request of software update requests a re-issue of the above-described update notification via the wireless communication control section  to the servers _, _ associated with the software to be updated.","The servers _, _ which are requested of the re-issue of the update notification performs again allocation of the start time for the mobile phone , and transmits a new update notification including update start time data representing a new start time. As a result, the above-described procedures are repeated so that the software update is performed. Since this software update is different from the first software update and is an software update after it is confirmed that a competition in the competition control section  is resolved, this update may be expected to be securely performed.","In the following, assuming various specific conditions, it will be confirmed that the software update by the mobile phone  according to the present embodiment may be securely performed under any conditions.","[First Condition]","Firstly, as a first condition, a condition is assumed that a state abnormality of a communication network mediating the mobile phone  and the OEM application software update management server  interferes with the software update.",{"@attributes":{"id":"p-0059","num":"0071"},"figref":"FIGS. 4A-4C"},"First, in step S, a start time of software update is allocated by the OEM application software update management server _ as described above. A notification of update including the start time is sent via the wireless communication control section  to the application software update section . Then, the application software update section  confirms the allocated start time and informs the state management DB  of it. In the state management DB , the start time is registered in the update time section  illustrated in . If a state of a communication network is normal at this time point and in a subsequent step S, a state abnormality (here, for example, \u201cBLIND SPOT\u201d) of the communication network is detected by the NW state management section , the NW state management section  requests the state management DB  to store \u201cYes\u201d as the \u201cBLIND SPOT\u201d state illustrated in . The state management DB  stores \u201cYes\u201d in the \u201cBLIND SPOT\u201d state.","Next, when the start time of software update comes, in step S , the application software update section  inquires permissibility-impermissibility as to update process execution of the competition control section . The competition control section  requires each data which is registered at the time point in the management table  in  of the state management DB . The state management DB  returns the each date registered. Then, the competition control section  determines permissibility-impermissibility of update process execution based on whether or not a state in the returned data is [IN UPDATING OS:BLIND SPOT:RESTRICTED:BATTERY REMAINING AMOUNT]=[No:No:No:OK], and returns a determination result to the application software update section . Here, based on that the \u201cBLIND SPOT\u201d is \u201cYes\u201d, it is determined to be impermissible. Incidentally, how to use the update start time in the data returned from the state management DB  will be explained later.","The application software update section  which receives the return of the determination result as to permissibility-impermissibility of execution, in step S, if the determination result is \u201cOK\u201d, downloads an update file from the OEM application software update management server _ and executes the update process. In addition, if the determination result is \u201cNG\u201d, a flag of re-negotiation reservation representing that a software update to be performed remains is sent from the application software update section  to the competition control section  to be stored in a memory.","Subsequently, in step S, if it is detected that the \u201cBLIND SPOT\u201d state is resolved and the state becomes the \u201cWITHIN RANGE\u201d, the NW state management section  requests the state management DB  to store \u201cNO\u201d as the \u201cBLIND SPOT\u201d state  illustrated in . The state management DB  stores \u201cNO\u201d in the \u201cBLIND SPOT\u201d state. Then, in step S, the state management DB  detects a change of the registered state and sends a Notification to the competition control section . This Notification is to give a notice that a change occurs in the state registered in the state management DB .","The competition control section  which receives the Notification confirms, in step S, whether or not there is a re-negotiation reservation. If there exists the re-negotiation reservation, the competition control section  requires each data which is registered at the time point in the management table  in  of the state management DB . The state management DB  returns the each registered data. The competition control section  confirms the state in the returned each data and as described above, determines permissibility-impermissibility of update process execution. Then, if the determination result is \u201cOK\u201d, the competition control section  instructs the re-negotiation section  to start a re-negotiation, The re-negotiation section  generates a software update re-notification request. This software update re-notification request is a request to use a function prepared for software initial setting and the like of functions conventionally provided in the OEM application software update management server _, and is for requesting an allocation and a notification of an update start time of the OEM application software update management server _. The software update re-notification request generated in the re-negotiation section  is sent via the wireless communication control section  to the OEM application software update management server _. Incidentally, in this step S, if there does not exist the re-negotiation reservation, or if the determination result as to permissibility-impermissibility of update process execution is \u201cNG\u201d, a state of waiting for the Notification from the state management DB  is brought about.","When the OEM application software update management server _ receives the software update notification request, the above-described processes from step S are repeated. This time, there is a high possibility that a detection of the BLIND SPOT in step S and does not occur when the allocated update time comes, the processes of step S, step S are performed, a download of an update file and the update process are preformed normally and thus it is expected that the software update is completed.","[Second Condition]","Next, as a second condition, a condition is assumed that an internal state of the mobile phone  becomes failed to interfere with the software update.",{"@attributes":{"id":"p-0067","num":"0079"},"figref":"FIGS. 5A-5C"},"Firstly, in step S, same as step S in , an allocation and a notification of an update start time by the OEM application software update management server _, a confirmation of the start time by the application software update section  and registration of the start time by the state management DB  are performed. If the internal state of the mobile phone  is normal at this time point, and however, in the following step S, an abnormality (here, for example, \u201cBATTERY REMAINING AMOUNT\u201d drop) of the internal state of the mobile phone  is detected by the terminal state management section , the terminal state management section  requires the state management DB  to store \u201cNG\u201d as the \u201cBATTERY REMAINING AMOUNT\u201d state  illustrated in  and the state management DB  stores \u201cNG\u201d in the \u201cBATTERY REMAINING AMOUNT\u201d state.","Next, when the start time of software update comes, in step S, same as step S in , a determination of permissibility-impermissibility and a return are performed by the competition control section . In step S, same as step S in , an update execution and an issue of re-negotiation reservation are performed by the application software update section . However, in this second condition, based on that the \u201cBATTERY REMAINING AMOUNT\u201d state is \u201cNG\u201d, a determination of impermissibility and the issue of a re-negotiation reservation are performed.","Subsequently, in step S, if the terminal state management section  detects a recovery of \u201cbattery remaining amount\u201d, the terminal state management section  requires the state management DB  to store \u201cOK\u201d as the \u201cBATTERY REMAINING AMOUNT\u201d state  illustrated in . The state management DB  stores \u201cOK\u201d in the \u201cBATTERY REMAINING AMOUNT\u201d state. Then, in step S, the state management DB  detects a change of the registered state and sends a Notification to the competition control section .","In step S, same as step S in , a confirmation as to whether or not there is the re-negotiation reservation by the competition control section , a determination of permissibility-impermissibility as to update execution by the competition control section  and generating and sending of the software update re-notification request by the re-negotiation section  are performed. When the OEM application software update management server _ receives the software update re-notification request, the above-described processes from step S are repeated.","This time, there is a high possibility that a detection of the battery remaining amount drop in step S does not occur. When the allocated update time comes, the processes of step S and step S are performed, a download of the update file and an update execution are normally performed and so it is expected that the software update is completed.","Incidentally, in the above explanation of step S, even though a method of determining battery remaining amount shortage is not specifically explained, a conventional method represented by a method of determination by setting a threshold in a battery remaining amount percent or the like may be arbitrarily employed. In addition, regarding the method of determination of the battery remaining amount recovery in step S, a conventional method represented by a determination method in which a threshold is similarly set, a determination method in which a 100% charge serves as a trigger or the like may be arbitrarily employed.","[Third Condition]","Next, as a third condition, a condition is assumed that while OS family software is in an update process, an update start time of OS application family software comes.",{"@attributes":{"id":"p-0075","num":"0087"},"figref":"FIGS. 6A-6C"},"First, in step S, start times of software update are allocated for the mobile phone  by the OS software update management server _ and the OEM application software update management server _, respectively. Update notifications including the start times are sent via the wireless communication control section  to the OS software update section  and the application software update section , respectively. Then, the OS software update section  and the application software update section  confirm the allocated start times and inform the state management DB  of them. In the state management DB , these start times are registered in the update time section  illustrated in .","Subsequently, when the start time of update for the OS family software comes, in step S, the OS software update section  requires the state management DB  to store \u201cYes\u201d as the \u201cIN UPDATING OS\u201d state . The state management DB  stores \u201cYes\u201d in the \u201cIN UPDATING OS\u201d state. Then, in step S, the OS software update section  downloads an update file from the OS software update management server _ and executes an update process. Incidentally, a determination of permissibility-impermissibility by the competition control section  is essentially performed prior to the update process, however it is omitted here for avoiding a complication of the explanation.","Next, when the update start time of the OEM application family software comes, in step S, same as step S in , a determination of permissibility-impermissibility and a return by the competition control section  are performed, and in step S, same as step S in , an update execution and an issue of a re-negotiation reservation by the application update section  are preformed. However, in this third condition, based on that the \u201cIN UPDATING OS\u201d state is \u201cYes\u201d, the determination of impermissibility and the issue of re-negotiation reservation are performed.","Subsequently, when the update process in the OS software update section  is completed, in step S, the OS software update section  requires the state management DB  to store \u201cNo\u201d as the \u201cIN UPDATING OS\u201d state. The state management DB  stores \u201cNo\u201d in the \u201cIN UPDATING OS\u201d state. Then, in step S, the state management DB  detects a change of the registered state and sends the Notification to the competition control section .","In step S, same as step S in , a confirmation as to whether or not there is a re-negotiation reservation by the competition control section , a determination as to permissibility-impermissibility of update execution by the competition control section , generating and sending of a software update re-notification request by the re-negotiation section  are performed. When the OEM application software update management server _ receives the software update re-notification request, the process relating to the OEM application family software of the above-described processes from step S are repeated. As a result, this time, an update process of the OS family software is not executed. When the allocated updated time of the OEM application family software comes and then the processes of step S and step S are performed, a download of an update file and an update process are normally performed so that the update of the OEM application family software is completed.","[Fourth Condition]","Next, as a fourth condition, a condition is assumed that while OEM application family software is in an update process, an update start time of OS family software comes.",{"@attributes":{"id":"p-0082","num":"0094"},"figref":"FIGS. 7A-7C"},"Firstly, in step S, same as step S in , allocations and notifications of update start times by the servers _, _, confirmations of the start times by the OS software update section  and the application software update section  and a registration of the start time by the state management DB  are performed.","Subsequently, when the update time of the OEM application family software comes, in step S, same as step S in , a determination of permissibility-impermissibility of execution and a return by the competition control section  are performed. In this fourth condition, a determination using the update start time whose explanation is omitted in the above description is performed and will be explained in the following. The competition control section  confirms the start times ,  registered in the update time section  in  of each of data returned from the state management DB . Then if a difference between those start times ,  is within a predetermined threshold, because there is a high possibility that an update time of OS family software comes while the OEM family software is in an update process, a determination of permissibility-impermissibility as to the update process of the OEM application family software is performed and the determination result is returned to the application software update section .","The application software update section  which receives the return of the determination result by the competition control section  performs, same as step S in , an update execution and an issue of a re-negotiation reservation. However, here, as a difference between the update start times is within a predetermined threshold, an issue of a re-negotiation reservation is performed.","Subsequently, when the update start time of the OS family software comes, in step S, same as step S, step S and step S in , storing \u201cYes\u201d as the \u201cIN UPDATING OS\u201d state, downloading an update file of the OS family software, updating and storing \u201cNo\u201d as the \u201cIN UPDATING OS\u201d state are sequentially performed. Incidentally, in the state management DB , removing the update start time of the OS family software as well as the storing \u201cNo\u201d as the \u201cIN UPDATING OS\u201d state are performed. Then, in step S, the state management DB  detects a change of the registered state and sends a Notification to the competition control section .","In step S, same as step S in , a confirmation as to whether or not there is a re-negotiation reservation by the competition control section , a determination of permissibility-impermissibility as to update execution by the competition control section , and generating and sending a software update re-notification request by the re-negotiation section  are performed. When the OEM application software update management server _ receives the software update re-notification request, the processes relating to the OEM application family software of the above-described processes from step S are repeated. This time, because the update start time of the OS family software is removed from the state management DB , when the update time of the OEM application family software comes and the processes of step S, step S are performed, a download of an update file and an update process are normally performed so that the update of the OEM application family software is completed.","As explained above, according to the mobile phone  of the present embodiment, the software update is reliable in any of the assumed conditions. In addition, because an unnecessary process due to attempting a useless update and an occurrence of unnecessary communication are avoided, a favorable efficiency is obtained.","Incidentally, in the above-described embodiment, as a preferable mode, the example is explained that the Notification is issued from the state management DB . However, according to the aspect of the invention, a mode is possible that the competition control section  periodically confirms registered data in the state management DB .","In addition, in the above-described embodiment, as a preferable mode, the example is explained that a re-allocation of update time is performed in the OEM application software update management server _ according to the software update re-notification request by the re-negotiation section . However, according to the aspect of the present invention, in a case where a resolve of competition is confirmed by the competition control section , a mode is possible that a download of an update file and an update process are immediately performed by the application software update section .","According to the aspect of the present invention, even in a case where a software update is failed due to a failure, because the update is prompted when the failure disappears, a secure update of software may be expected. In addition, according to the aspect of the present invention, because not only an update process is simply repeated but also a failure is monitored so as to prompt the update when the failure disappears, it is possible to prevent an occurrence of an useless process or unnecessary communication and a reliable and efficient update may be obtained.","All examples and conditional language recited herein are intended for pedagogical purposes to aid the reader in understanding the invention and the concepts contributed by the inventor to furthering the art, and are to be construed as being without limitation to such specifically recited examples and conditions, nor does the organization of such examples in the specification relate to a showing of the superiority and inferiority of the invention. Although the embodiments of the present inventions have been described in detail, it should be understood that the various changes, substitutions, and alterations could be made hereto without departing from the spirit and scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0019","num":"0031"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0032"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0021","num":"0033"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0034"},"figref":"FIGS. 4A-4C"},{"@attributes":{"id":"p-0023","num":"0035"},"figref":"FIGS. 5A-5C"},{"@attributes":{"id":"p-0024","num":"0036"},"figref":"FIGS. 6A-6C"},{"@attributes":{"id":"p-0025","num":"0037"},"figref":"FIGS. 7A-7C"}]},"DETDESC":[{},{}]}
