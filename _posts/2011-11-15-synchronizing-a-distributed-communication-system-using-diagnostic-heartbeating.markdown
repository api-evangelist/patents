---
title: Synchronizing a distributed communication system using diagnostic heartbeating
abstract: A first component, executing using a processor and a memory in a first data processing system, receives a diagnostic heartbeat packet from a second component executing in a second data processing system, wherein the diagnostic heartbeat packet is a packet comprising a header, a set of heartbeat parameters, and a set of diagnostic attributes. The first component determines, using a value of a diagnostic attribute in the diagnostic heartbeat packet, that a first communication link between the first and the second data processing systems is usable but includes a soft network error, wherein a soft network error condition is a network error condition that adversely affects transmission of packets having certain properties in the data communication network. The first component re-routes a synchronization message from the first component to the second component using a second communication link between the first and the second data processing systems.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08874974&OS=08874974&RS=08874974
owner: International Business Machines Corporation
number: 08874974
owner_city: Armonk
owner_country: US
publication_date: 20111115
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention relates generally to a method, system, and computer program product for a reliable data communication system. Particularly, the present invention relates to a method, system, and computer program product for synchronizing a distributed communication system using diagnostic heartbeating.","A reliable peer-to-peer communication system is a communication system in a distributed data processing environment that provides reliable data communication services. Distributed applications, such as instances of a distributable application executing on different nodes or machines of a data processing environment, utilize these data communication services for providing their functionality. Client systems, such as an application that is a client of a distributed application instance, also inherently depend on these data communication services to accomplish their desired functions with the distributed applications.","For example, reliable data communication services include functions commonly required by distributed applications, such as reliable message delivery to all members of a domain, global in-order delivery of messages or sequences of messages, and synchronization barriers. Such services are used by currently available distributed applications.","A domain is a collection or a set of data processing systems connected by a network, data bus and\/or shared memory or storage that participate in a given distributed data processing environment. For example, a data processing environment may include five computers, three of which may host instances of a distributed application. The three computers, also known as hosts or nodes, which host the distributed application instances, form a domain that has to provide the aforementioned reliable data communication services.","A barrier is a type of synchronization method. A barrier for a group of threads or processes is a stopping point where the threads or processes subject to the barrier must stop executing to allow other threads or processes to catch-up or synchronize at the barrier, before the threads or processes can resume executing. Various nodes in a domain, and distributed application instances executing thereon, have to remain synchronized with each other to provide their functions in a consistent manner. In some cases, additional functions, such as multi-phase protocols with global barriers, zoning (creation of sub-domains) and distributed locking may be offered by data communication services in a distributed data processing environment to satisfy the synchronization needs of the distributed applications.","Reliable peer-to-peer communication is a type of distributed data communication service in distributed data processing environment that seeks to provide a threshold level of reliability in message delivery between the peer nodes in the distributed data processing environment. Many distributed applications use reliable peer-to-peer communication to provide a particular level of performance, functionality, stability, or security.","For example, distributed transaction systems require reliable peer-to-peer communication to ensure transaction integrity. As another example, distributed databases and distributed file systems require reliable peer-to-peer communication to ensure data consistency across the various data instances or partitions. Clusters of data processing systems in high availability (HA) data processing environments rely on such peer-to-peer communications to maintain the desired level of system availability, load balancing and system performance. Logistics, telecommunication, and industrial control systems are some examples of types of distributed applications, which require reliable peer-to-peer communication services for ensuring a reliable delivery of their respective functionalities.","The illustrative embodiments provide a method, system, and computer program product for synchronizing distributed communication system using diagnostic heartbeating. In at least one embodiment, a method for synchronizing a distributed communication system using diagnostic heartbeating is provided. The method includes a first component, executing using a processor and a memory in a first data processing system, receiving a diagnostic heartbeat packet from a second component executing in a second data processing system, wherein the diagnostic heartbeat packet is a packet comprising a header, a set of heartbeat parameters, and a set of diagnostic attributes. The method further includes the first component determining, using a value of a diagnostic attribute in the diagnostic heartbeat packet, that a first communication link between the first and the second data processing systems is usable but includes a soft network error, wherein a soft network error condition is a network error condition that adversely affects transmission of packets having certain properties in a data communication network. The method further includes the first component re-routing a synchronization message from the first component to the second component using a second communication link between the first and the second data processing systems.","In at least one embodiment, a computer program product for synchronizing a distributed communication system using diagnostic heartbeating is provided. The computer program product includes one or more computer-readable tangible storage devices. The computer program product further includes program instructions, stored on at least one of the one or more storage devices, to receive at a first component executing in a first data processing system, a diagnostic heartbeat packet from a second component executing in a second data processing system, wherein the diagnostic heartbeat packet is a packet comprising a header, a set of heartbeat parameters, and a set of diagnostic attributes. The computer program product further includes program instructions, stored on at least one of the one or more storage devices, to determine, using a value of a diagnostic attribute in the diagnostic heartbeat packet, that a first communication link between the first and the second data processing systems is usable but includes a soft network error, wherein a soft network error condition is a network error condition that adversely affects transmission of packets having certain properties in a data communication network. The computer program product further includes program instructions, stored on at least one of the one or more storage devices, to re-route a synchronization message from the first component to the second component using a second communication link between the first and the second data processing systems.","In at least one embodiment, a computer system for synchronizing a distributed communication system using diagnostic heartbeating is provided. The computer system includes one or more processors, one or more computer-readable memories, and one or more computer-readable tangible storage devices. The computer system further includes program instructions, stored on at least one of the one or more storage devices for execution by at least one of the one or more processors via at least one of the one or more memories, to receive at a first component executing in a first data processing system, a diagnostic heartbeat packet from a second component executing in a second data processing system, wherein the diagnostic heartbeat packet is a packet comprising a header, a set of heartbeat parameters, and a set of diagnostic attributes. The computer system further includes program instructions, stored on at least one of the one or more storage devices for execution by at least one of the one or more processors via at least one of the one or more memories, to determine, using a value of a diagnostic attribute in the diagnostic heartbeat packet, that a first communication link between the first and the second data processing systems is usable but includes a soft network error, wherein a soft network error condition is a network error condition that adversely affects transmission of packets having certain properties in a data communication network. The computer system further includes program instructions, stored on at least one of the one or more storage devices for execution by at least one of the one or more processors via at least one of the one or more memories, to re-route a synchronization message from the first component to the second component using a second communication link between the first and the second data processing systems.","Many distributed applications include a proprietary built-in reliable communication layer, which provides reliable peer-to-peer communication services to the distributed instances of the application. Other distributed applications use reliable peer-to-peer communication services provided by standalone peer-to-peer communication systems via an application programming interface (API). Examples of the latter are Reliable Scalable Clustering Technology (RSCT) in conjunction with Cluster Aware AIX (CAA) by IBM Corporation; Oracle Coherence by Oracle Corporation; JGroups, which is an open-source product; and Windows Clustering by Microsoft Corporation (each manufacturer may have one or more trademarks and other rights in the United States and other countries in the product-names and marks associated with their respective products).","In presently available cloud computing environments, implementations of distributed databases are abound. Generally, distributed databases in cloud computing environments require a core set of above described functions of a peer-to-peer communication system. Some such distributed databases have a proprietary built-in reliable communication layer whereas others depend on services of a standalone peer-to-peer communication system.","In this disclosure, the proprietary built-in reliable communication layer and the standalone peer-to-peer communication system are collectively referred to as \u201cmessaging infrastructure.\u201d The messaging infrastructure of an embodiment provides the reliable peer-to-peer communication services to the client applications and distributed applications that communicate with the messaging infrastructure. An embodiment described with respect to a messaging infrastructure can be practiced to improve a proprietary built-in reliable communication layer or a standalone peer-to-peer communication system in the manner described, or a combination thereof.","Within the scope of this disclosure, members of a domain may be a heterogeneous collection of physical or virtual machines of different hardware types, architectures, or running different operating systems. For example, a domain according to an embodiment can include one personal computer using the Linux\u00ae operating system, a tablet computer based on the Android\u2122 operating system, and a gaming console operating using a version of the Windows\u00ae operating system. Linux is a registered trademark of Linus Torvalds in the United States, other countries, or both. Android is a trademark of Google Inc. in the United States, other countries, or both. Windows is a trademark of Microsoft Corporation in the United States, other countries, or both.","Each node in a given domain may communicate with another node in the domain using one or more network adapters (adapters). Generally, different nodes, or applications executing on the different nodes, can communicate with each other using other mechanisms, such as shared memory or data storage area. In describing an embodiment using an adapter, the embodiment is not limited to only the network adapter means of data communications. The embodiments contemplate applicability of the disclosed concepts to such other means of communication between nodes and applications in a distributed data processing environment. The embodiments are described using adapters only as examples for the clarity of the description and not as a limitation on the embodiments.","A reliable peer-to-peer communication system, such as the messaging infrastructure of an embodiment, maintains membership state information (state information). State information is information about the state of the nodes and network adapters in a given domain. Generally, the state information provides an indication of whether a node, a particular adapter, or a communication link between adapters in different nodes is alive and useable.","The embodiments recognize that the state information may be used in other ways in an implementation of reliable communication services. For example, in a standalone peer-to-peer communication system, the state information can be shared with the distributed applications, client applications, or both to improve their respective performances. Clients often need to be informed about the state of domain members, such as the nodes, and in particular about the connectivity to those members via one or more adapters, so that the clients can perform with a desired level of reliability.","Presently, the state of the members is obtained by sending keep-alive data packets, also known as heartbeats, between adapters of the various nodes. Various algorithms are used for identifying adapter neighborhoods, that is, an identification of adapter(s) to which a particular adapter sends heartbeats, and adapter(s) from which the particular adapter listens for heartbeats. The neighborhood identification process results in a messaging topology. For each adapter, a messaging topology entails an assignment of one or more adapters to which to send heartbeats and another assignment of one or more adapters from which to listen for heartbeats.","Such assignments can be fixed, random, static when defined, or dynamically changeable based on the changes in the domain. As an example, in some implementations of the Gossip protocol, which is a membership protocol with total ordering properties, heartbeat packets, or messages, are sent to a randomly selected set of members. Implementations of AIX CAA, JGroups, and Oracle Coherence use the Gossip protocol for heartbeat messaging to determine the state information.","Functionally, a reliable peer-to-peer communication system includes two components\u2014one that implements membership and another that implements reliable communication services as described above. The membership component provides state information in the form of an intra-domain routing table that is dynamically updated to represent network connectivity as detected by the heartbeating. This routing table is used by the reliable peer-to-peer communication system to route data traffic in the distributed domain. In some implementations, client data traffic can double as a rudimentary heartbeat, which can be utilized for similar purposes by the reliable peer-to-peer communication functionality.","The embodiments recognize that the state information maintained in a presently available peer-to-peer communication system is deficient in several respects. Consequently, presently maintained state information fails to identify and address certain types of problems in the distributed data communication.","For example, the embodiments recognize that for performance reasons, the presently used heartbeat implementation of a membership component sends heartbeats of a pre-determined packet size, which is relatively small compared to the packets carrying the data payload of the distributed applications. Furthermore, the embodiments recognize that the heartbeat packets use a fixed pre-determined protocol type. While the small heartbeat packets of a fixed protocol type are sufficient to establish if two adapters are communicating with each other and that the basic switch settings are correct, the ability to receive heartbeats of small size or a specific protocol type is not sufficient as a reliability criterion for a fully functional network connection. The embodiments recognize that the messaging infrastructure, and applications using the messaging infrastructure, typically generate network traffic of a varied pattern, packets of different sizes, and use several protocol types, reliable communication of which cannot be ensured by the presently used heartbeat packets.","The embodiments further recognize that many types of errors in network hardware or configuration are not detected by the presently used heartbeating with small fixed packet size. The embodiments recognize that such undetected errors impair the functionality of the messaging infrastructure, applications dependent thereon, or both.","For example, under certain circumstances, transmission of a small heartbeat packet may succeed where the transmission of larger packets may fail. In such circumstances, a frequently observed failure symptom is that the packets of smaller than a threshold size are processed through the data communication links, but packets of larger than the threshold size are not.","The embodiments recognize many reasons for such an error condition that results in the failure of large packet transmissions. For example, a defective or misconfigured port on a network switch in a link may cause the failure. As another example, mismatched impedance values of cable terminators may cause signal reflection. An effect of signal reflection is that packets of shorter than a threshold size pass through the link but the transmission of larger packets fails. For example, pulse reflection can have the effect that Cyclic Redundancy Check (CRC) errors are observed for larger than the threshold size of packets.","As another example, a mismatch in the maximum packet size configuration of the endpoints of a link, such as an adapter or a port on a switch, can also cause failures in transmitting packets of larger than a threshold size while allowing smaller packets to be successfully transmitted. Incompatible port settings at connection endpoints can have similar results. For example, if one adapter is configured for full duplex communication and the other adapter in the link is not, the likelihood that the transmission of packets above a certain size may fail increases.","The embodiments recognize another type of error condition that escapes detection with the presently used heartbeat packets is that packets containing certain bit patterns may fail transmission whereas other packets that do not include those bit patterns may succeed. Signal degradation on network cables, static or noise in the link, radio interference in the wireless links, frequency roll-off from a cable of wrong type or a cable defect may also cause certain bit patterns to not be transmitted correctly, causing a transmission failure for the packets that contain those bit patterns.","As an example, cable defects or the use of a cable type that is not according to the specification for a given type of data communication link may cause frequency roll-off in Ethernet cables. An effect of frequency roll-off is that packets with certain bit patterns will not be transmitted and that a high rate of CRC errors will be observed.","The embodiments recognize that mechanical damage to the cables, electro-magnetic frequency (EMF) interference from other sources, temperature, and many other similar factors can introduce these and other types of errors. Such other errors similarly escape detection by the presently used heartbeating technique.","As another example of errors that escape detection, remedy, or workaround due to the presently used heartbeating, the embodiments recognize that using the presently available heartbeating, packets of certain types may be transmitted successfully while packets of other types may not. For example, the presently used heartbeating technique is insufficient to detect such errors when caused by switches or firewalls that are configured to only handle packets of a certain type. For example, presently, AIX CAA will not detect a remote adapter to be alive if processing of multicast packets is disabled on a switch in the link. Failure to process certain packet types, as in this example, can have dire results. For example, multiple occurrences of such failures can cause cluster partition. A failure affecting a single adapter may render reliable peer-to-peer communication services non-functional.","The embodiments recognize errors in device drivers as another example of error conditions not detected, remedied, or circumvented by the presently used heartbeating. Errors in device drivers can cause failure in large data size user datagram protocol (UDP) packet processing, such as causing a failure to reassemble data packets or causing processor overload.","Error conditions such as those described above as examples are called soft network errors, or soft network failures. Generally, within the scope of this disclosure, a soft network error is a network error condition that adversely affects the transmission of packets having certain properties in a data communication network. Many other variants of soft network errors will be apparent from this disclosure to those of ordinary skill in the art and the same are contemplated within the scope of the illustrative embodiments. Soft network errors go undetected under the presently used heartbeating schemes, yet have a pervasive effect on the functionality of the reliable peer-to-peer communication system and applications that depend thereon. Soft network errors are expensive and difficult to debug, and require specialized expertise for identification and isolation.","For example, the diagnosis of soft network errors presently requires knowledge of the internals of the reliable peer-to-peer communication system, and of the distributed applications relying thereon, to localize the cause of failure to the networking layer. Subsequently, hardware diagnostics and traces have to be collected to identify the hardware component that caused the error. Debugging requires coordination of several groups that manage various components, such as applications, operating system, storage area networks (SAN) and networking. Detecting, remedying, and circumventing soft network errors are therefore presently tasks that require a variety of skills along with significant loss of system availability.","In distributed systems that employ certain clustering middleware, some common symptoms of soft network errors are \u201changs\u201d in the Group Services layer. In the presence of such a hang, client applications such as the cluster manager and the logical volume manager are rendered non-functional. In the presence of a hang of processing in Group Services, the cluster manager hangs and the logical volume manager forces volume groups off-line if no response is received within a specified time-out period.","The illustrative embodiments used to describe the invention generally address and solve the above-described problems and other problems related to soft network errors in reliable peer-to-peer communications in distributed data processing systems. The illustrative embodiments provide a method, system, and computer program product for synchronizing a distributed communication system using diagnostic heartbeating.","Generally, an embodiment of the invention provides an improved method of heartbeating across a peer-to-peer data communication system. An embodiment describes an improved heartbeat packet configuration to detect soft network errors. An improved heartbeat packet, called a diagnostic heartbeat packet, includes features that enable detection, remedying, and circumventing a variety of soft network errors.","Basic heartbeats are heartbeat packets configured to detect a state of a node\u2014whether the node is alive\/responsive\u2014with provisions to prevent erroneous declaration of a node as down\/non-responsive. A diagnostic heartbeat packet can be used for obtaining qualitative link information for consumption by higher layers, reliable messaging, or clients, to ensure correct functionality beyond the basic alive\/dead status of a node.","Typically, a basic heartbeat packet is configured with attribute values for which the likelihood of success of transmission is the largest in a given data processing environment. For this reason, a basic heartbeat packet has a small packet size relative to the data packets in the data traffic of the data processing environment.","The electrical errors resulting in soft network errors, as described earlier, are more likely to affect transmission of packets larger than a certain size. Consider an example to illustrate the undesirable effect of using only diagnostic heartbeats\u2014if a node does not receive any heartbeats from any adapter of a given remote node, the node may declare the remote node as non-responsive. Consequently, clients of the messaging layer might initiate takeover of resources. For example, a database previously executing on the remote node may be brought online at a different resource.","Reliable information about the alive\/dead status of a node is important because, for example, if the remote node is still alive but a link to the remote node is unreliable, bringing the database online at another node can lead to data corruption. Such undesirable effects of soft network errors, such as the database partition in the above example, can be prevented by sending basic heartbeats that are most likely to succeed in a data processing environment. Therefore, an embodiment sends basic heartbeats intermixed with diagnostic heartbeats for reliability reasons, such as to get the basic information about whether a remote node is alive, in a reliable manner.","Furthermore, various embodiments describe improvements to messaging infrastructure that utilize the diagnostic capabilities afforded by the use of diagnostic heartbeat packets (diagnostic heartbeating). Various embodiments further describe modifications to distributed application instances to improve the reliability of their data communications in the distributed data processing environment.","Some embodiments describe improvements to client applications that can improve the reliability, performance, or both, of the distributed applications' functionality. Some other embodiments describe modifications to the existing data processing system components, such as modifications to a TCP\/IP stack in the kernel space of a data processing system, to enable diagnostic heartbeating.","Some embodiments describe a method of detecting a soft network error using the diagnostic heartbeats. Some other embodiments describe a method of remedying a soft network error, circumventing a soft network error, or a combination thereof.","The illustrative embodiments are described with respect to certain data and data structures only as examples. Such descriptions are not intended to be limiting on the invention. For example, an illustrative embodiment described with respect to a particular data structure of a diagnostic heartbeat can be implemented with additional or different attributes, data payload, and other components within the scope of the illustrative embodiments. As another example, an illustrative embodiment described with respect to a state information record in the form of a table can be implemented using another suitable form of storing the state information in a messaging infrastructure component according to an embodiment.","Furthermore, the illustrative embodiments may be implemented with respect to any type of data, data source, or access to a data source over a data network. Any type of data application or storage device may provide the data, such as data for an application data packet or historical state information data, to an embodiment of the invention, either locally at a data processing system or over a data network, within the scope of the invention.","The illustrative embodiments are further described with respect to certain applications only as examples. Such descriptions are not intended to be limiting on the invention. An embodiment of the invention may be implemented with respect to any type of application, such as, for example, applications that are served, the instances of any type of server application, a platform application, a stand-alone application, an administration application, or a combination thereof.","An application, including an application implementing all or part of an embodiment, may further include data objects, code objects, encapsulated instructions, application fragments, services, and other types of resources available in a data processing environment. For example, a Java\u00ae object, an Enterprise Java Bean (EJB), a servlet, or an applet may be manifestations of an application with respect to which the invention may be implemented. (Java and all Java-based trademarks and logos are trademarks or registered trademarks of Oracle Corporation and\/or its affiliates).","An illustrative embodiment may be implemented in hardware, software, or a combination thereof. An illustrative embodiment may further be implemented with respect to any type of data storage resource, such as a physical or virtual data storage device, that may be available in a given data processing system configuration.","The examples in this disclosure are used only for the clarity of the description and are not limiting on the illustrative embodiments. Additional data, operations, actions, tasks, activities, and manipulations will be conceivable from this disclosure and the same are contemplated within the scope of the illustrative embodiments.","The illustrative embodiments are described using specific code, designs, architectures, layouts, schematics, and tools only as examples and are not limiting on the illustrative embodiments. Furthermore, the illustrative embodiments are described in some instances using particular software, tools, and data processing environments only as an example for the clarity of the description. The illustrative embodiments may be used in conjunction with other comparable or similarly purposed structures, systems, applications, or architectures.","Any advantages listed herein are only examples and are not intended to be limiting on the illustrative embodiments. Additional or different advantages may be realized by specific illustrative embodiments. Furthermore, a particular illustrative embodiment may have some, all, or none of the advantages listed above.","With reference to the figures and in particular with reference to , these figures are example diagrams of data processing environments in which illustrative embodiments may be implemented.  are only examples and are not intended to assert or imply any limitation with regard to the environments in which different embodiments may be implemented. A particular implementation may make many modifications to the depicted environments based on the following description.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 1","b":["100","100","102","102","100","102","104","106","102","108","100"]},"In addition, clients , , and  couple to network . A data processing system, such as server  or , or client , , or  may contain data and may have software applications or software tools executing thereon.","As an example, server  includes distributed application instance  that utilizes reliable peer-to-peer communication services from messaging infrastructure . Similarly, server  includes distributed application instance  that utilizes reliable peer-to-peer communication services from messaging infrastructure . Client application , which may be a client of distributed application instance , user of messaging infrastructure 's services, or both, may also execute on server . Similarly, client  includes client application , which may be a client of distributed application instance , user of messaging infrastructure 's services, or both. Administration application  may be an administration application for administrating distributed application instances  and . Application  is usable with an embodiment as described herein.","In one embodiment, client application  connects with messaging infrastructure  via inter-process communication, such as pipes, shared memory, semaphores, or sockets. In another embodiment, client  connects with messaging infrastructure  via network sockets or message passing infrastructures such as Java RMI or CORBA. Generally, a distributed application instance and a distributed messaging infrastructure need not necessarily execute on the same server. For example, distributed application instance  and messaging infrastructure  may not both execute on server , but on different data processing systems. For example, in a virtualized data processing environment, distributed application instance  and messaging infrastructure  may be on the same frame but in different logical partitions (LPARs) and the communication between distributed application instance  and messaging infrastructure  occurs via the hypervisor within the scope of the illustrative embodiments. Distributed application instance , messaging infrastructure , distributed application instance , messaging infrastructure , client application , and client application  may implement all or part of an embodiment.","As an example, components of distributed application instance , messaging infrastructure , distributed application instance , messaging infrastructure , client application , and client application  according to an embodiment may each be implemented as program instructions that can be stored on at least one of one or more data storage devices and executed by at least one of one or more processors via at least one of one or more memories.","Servers  and , storage unit , and clients , , and  may couple to network  using wired connections, wireless communication protocols, or other suitable data connectivity. For example, a cluster typically has multiple network types, such as IP networks, direct connections of machines via packets exchange implemented by storage protocols (Fibre Channel, SCSI), serial links, and message exchange via writing and reading packets to shared storage such as a hard disk drive. For performance reasons, in sending client traffic, an IP network is given precedence. Furthermore, a given network type may not connect to all nodes in a cluster. For instance, a cluster may span machines located at two geographically distant sites. For the long distance connection, Ethernet may be the preferred connection, and within a geographical location, a direct connection may be preferable. Additionally, within a geographical location, additional non-IP networks, such as Fibre channel or serial connections may be used within the scope of the illustrative embodiments.","Clients , , and  may be, for example, personal computers, network computers, thin clients, or industrial control systems. In the depicted example, server  may provide data, such as boot files, operating system images, and applications to clients , , and . Clients , , and  may be clients to server  in this example. Clients , , , or some combination thereof, may include their own data, boot files, operating system images, and applications. Data processing environment  may include additional servers, clients, and other devices that are not shown.","In the depicted example, data processing environment  may be the Internet. Network  may represent a collection of networks and gateways that use the Transmission Control Protocol\/Internet Protocol (TCP\/IP) and other protocols to communicate with one another, and encompasses components including but not limited to IP and SAN components. At the heart of the Internet is a backbone of data communication links between major nodes or host computers, including thousands of commercial, governmental, educational, and other computer systems that route data and messages. Of course, data processing environment  also may be implemented as a number of different types of networks, such as for example, an intranet, a local area network (LAN), or a wide area network (WAN).  is intended as an example, and not as an architectural limitation for the different illustrative embodiments.","Among other uses, data processing environment  may be used for implementing a client-server environment in which the illustrative embodiments may be implemented. A client-server environment enables software applications and data to be distributed across a network such that an application functions by using the interactivity between a client data processing system and a server data processing system. Data processing environment  may also employ a service oriented architecture where interoperable software components distributed across a network may be packaged together as coherent business applications.","With reference to , this figure depicts a block diagram of a data processing system in which illustrative embodiments may be implemented. Data processing system  is an example of a computer, such as server , server , or client  in , in which computer usable program code or instructions implementing the processes of the illustrative embodiments may be located for the illustrative embodiments.","In the depicted example, data processing system  employs a hub architecture including North Bridge and memory controller hub (NB\/MCH)  and south bridge and input\/output (I\/O) controller hub (SB\/ICH) . Processing unit , main memory , and graphics processor  are coupled to north bridge and memory controller hub (NB\/MCH) . Processing unit  may include one or more processors and may be implemented using one or more heterogeneous processor systems. Graphics processor  may be coupled to NB\/MCH  through an accelerated graphics port (AGP) in certain implementations.","In the depicted example, local area network (LAN) adapter  is coupled to south bridge and I\/O controller hub (SB\/ICH) . Audio adapter , keyboard and mouse adapter , modem , read only memory (ROM) , universal serial bus (USB) and other ports , and PCI\/PCIe devices  are coupled to south bridge and I\/O controller hub  through bus . Hard disk drive (HDD)  and CD-ROM  are coupled to south bridge and I\/O controller hub  through bus . PCI\/PCIe devices  may include, for example, Ethernet adapters, add-in cards, and PC cards for notebook computers. PCI uses a card bus controller, while PCIe does not. ROM  may be, for example, a flash binary input\/output system (BIOS). Hard disk drive  and CD-ROM  may use, for example, an integrated drive electronics (IDE) or serial advanced technology attachment (SATA) interface. A super I\/O (SIO) device  may be coupled to south bridge and I\/O controller hub (SB\/ICH)  through bus .","An operating system runs on processing unit . The operating system coordinates and provides control of various components within data processing system  in . The operating system may be a commercially available operating system such as Microsoft\u00ae Windows\u00ae (Microsoft and Windows are trademarks of Microsoft Corporation in the United States, other countries, or both), or Linux\u00ae (Linux is a trademark of Linus Torvalds in the United States, other countries, or both). An object oriented programming system, such as the Java\u2122 programming system, may run in conjunction with the operating system and provide calls to the operating system from Java\u2122 programs or applications executing on data processing system  (Java and all Java-based trademarks and logos are trademarks or registered trademarks of Oracle and\/or its affiliates).","Program instructions for the operating system, the object-oriented programming system, the processes of the illustrative embodiments, and applications or programs, including messaging infrastructures  and , distributed application instances  and , and client applications  and , are located on one or more storage devices, such as hard disk drive , and may be loaded into a memory, such as, for example, main memory , read only memory , or one or more peripheral devices, for execution by processing unit . Program instructions may also be stored permanently in non-volatile memory and either loaded from there or executed in place. For example, the synthesized program according to an embodiment can be stored in non-volatile memory and loaded from there into DRAM.","The hardware in  may vary depending on the implementation. Other internal hardware or peripheral devices, such as flash memory, equivalent non-volatile memory, or optical disk drives and the like, may be used in addition to or in place of the hardware depicted in . In addition, the processes of the illustrative embodiments may be applied to a multiprocessor data processing system.","In some illustrative examples, data processing system  may be a personal digital assistant (PDA), which is generally configured with flash memory to provide non-volatile memory for storing operating system files and\/or user-generated data. A bus system may comprise one or more buses, such as a system bus, an I\/O bus, and a PCI bus. Of course, the bus system may be implemented using any type of communications fabric or architecture that provides for a transfer of data between different components or devices attached to the fabric or architecture.","A communications unit may include one or more devices used to transmit and receive data, such as a modem or a network adapter. A memory may be, for example, main memory  or a cache, such as the cache found in north bridge and memory controller hub . A processing unit may include one or more processors or CPUs.","The depicted examples in  and above-described examples are not meant to imply architectural limitations. For example, data processing system  also may be a tablet computer, laptop computer, or telephone device in addition to taking the form of a PDA.","With reference to , this figure depicts a block diagram of a generalized reliable peer-to-peer communication configuration in a distributed data processing system with respect to which an illustrative embodiment may be implemented. Data processing system (node)  may be a node data processing system, such as server  in , in a given distributed data processing environment.","Distributed application instance  may be executing in data processing system  and using messaging infrastructure  for reliable peer-to-peer communication services. As described earlier, messaging infrastructure  may be a standalone peer-to-peer communication system in data processing system  or a built-in peer-to-peer communication component of distributed application instance .","Client application  may be an example client application that may utilize the peer-to-peer communication services of messaging infrastructure . As an example, client application  may be an administration application, such as administration application  in , for the various instances of a distributed application of which distributed application instance  may be one instance. Client application  may be another example client application that may be a client of distributed application instance . For example, if distributed application instance  were an instance of a distributed database, client application  could be a database client application, such as a transactional application that uses distributed application instance  for storing transaction data.","Messaging infrastructure  maintains state information  (membership information, membership state information). State information according to presently used peer-to-peer communication systems may include information indicating whether an adapter, a node, or a link is operational (alive). For example, adapters , , and  may be three network adapters in node . Adapters , , and  may be members of the domain whose state or status is stored in state information . The depicted configuration is only for the clarity of the description and not a limitation on the embodiments. An embodiment can be implemented in a cluster configuration that includes various combinations of network types. Furthermore, a particular network may not connect all nodes in the cluster. For example, nodes A and B in the cluster might be connected by shared storage or a SAN, and nodes C and D by a different SAN. All four nodes may be interconnected using one or more Internet Protocol (IP) networks, or at least a pair of nodes\u2014one from each pair, such as nodes A and C\u2014connected by a SAN.","Furthermore, an embodiment may be implemented using virtualized data processing systems. For example, all or some nodes belonging to the domain might be logical partitions (e.g., LPARs, Solaris LDom, or a SUN Dynamic System Domain (DSD)). In one embodiment, the virtual nodes of the domain are distributed across multiple frames. In another embodiment the virtual nodes may all reside on the same frame.","Additionally, the I\/O devices of LPARs may or may not be virtual. A node belonging to the domain may include some function as Virtual I\/O Server (VIOS). Communication between nodes on different frames may be across different types of networking media, such as Ethernet or shared storage. Communication between nodes that reside on the same frame can be virtualized such that the communication path includes Ethernet network and storage devices, but data exchange for such devices in the same frame is implemented using the hypervisor.","Continuing with the depicted example, network  may include any number or type of data communication methods, means, and protocols. For example, adapter  may be an Ethernet adapter with one IP address to connect to network  and adapter  may be another Ethernet adapter with a different IP address to connect to network . Adapter  may be an Internet Small Computer Cystem Interface (iSCSI) adapter usable for connecting to network . Alternatively, adapter  may be a Universal Serial Bus (USB) adapter connecting the network. Fibre Channel networks based on optical fibre or copper hardware, various serial architectures, for instance Serially Attached SCSI (SAS), Serially Advanced Technology Attachment (SATA), or Infiniband are other network architectures and hardware which network  may include.","For example, state information  may include an indication corresponding to each of the three example adapters , , and  for node  to indicate whether that particular adapter is operational (alive) at a given time. State information  may also include an indication of whether node  as a whole is available at a given time. For example, node  may be deemed available if at least one of adapters , , or  is indicated as alive in state information .","In the presently used heartbeating technology, availability information of the members is available but qualitative information of that availability is not available. For example, an adapter may be available, but only packets of a size below a threshold size may be sent or received using that available adapter, a connection there to, a cable connected there to, a switch port in communication therewith, or a combination of other components. Presently, the state information about the members of a domain is not parameterized to reflect conditions that may contribute to soft network errors.","With reference to , this figure depicts a block diagram of the various messaging that depends on the membership state information in a reliable peer-to-peer communication system, which can be improved using an illustrative embodiment. Node  may be a node configured in a manner similar to node  in .","Node  communicates with node  using network  to form a domain. Node  may also be a node configured in a manner similar to node  in , but not necessarily identically as node . Node  hosts distributed application instance  and node  hosts distributed application instance . Distributed application instances  and  are analogous to distributed application instance  in .","Messaging infrastructure  in node  is analogous to messaging infrastructure  in . Messaging infrastructure  in node  is also analogous to messaging infrastructure  in . Client applications  and  use peer-to-peer communication services of messaging infrastructure  as described with respect to client applications  and  in . Client applications  and  use peer-to-peer communication services of messaging infrastructure  in a similar manner. Any combination of client application instances may comprise a distributed domain, the distributed domain including those nodes, whether physical or virtual, and the adapters therein, on which participating messaging infrastructures  and  provide their services. For example, in one embodiment, a domain may include client applications  and . In another embodiment, a domain may include client applications , , and . In another embodiment, the domain may include client applications , , , and .","Adapters , , and  may be adapters in node  whose state information is maintained in a messaging infrastructure instance, as described with respect to adapters , , and  in . Adapters , , and  may be adapters in node  whose state information is similarly maintained in a messaging infrastructure instance. Each instance of messaging infrastructures  and  maintain state information for all adapters of the domain. For example, messaging infrastructures  and  each include state information of adapters , , , , , and .","Messages , , , and , all labeled \u201cH\u201d, are example heartbeat messages (heartbeat packets, or heartbeats) being transmitted between adapters. For example, adapter  sends and adapter  receives heartbeat . Similarly, adapter  sends and adapter  receives heartbeat ; adapter  sends and adapter  receives heartbeat ; and adapter  sends and adapter  receives heartbeat . Many other adapter pairs or neighborhoods may similarly be configured for exchanging heartbeats, but are not depicted in this figure for the clarity of the illustration. Heartbeats may also be multicast. For example, adapter  may send a heartbeat that is received by adapters  and  (not shown).","Message  labeled \u201cS\u201d is an example synchronization message. As described previously, messaging infrastructure  and messaging infrastructure  exchange message  to manage synchronization barriers. Additional synchronization messages may be transmitted in the depicted domain but are not shown in the figure for the clarity of the illustration. In the depicted example, message  is communicated using adapters  and , perhaps because the state information in messaging infrastructures  and  indicates that adapters  and  are available for communication.","Message  labeled \u201cA\u201d is an example message or packet that carries data payload for distributed application instances  and . In the depicted example, message  is communicated using adapters  and , perhaps because the state information in messaging infrastructures  and  indicates that adapters  and  are available for communication.","Message  may be of a size different from the size of any of heartbeat messages , , , and . As an example, it is not uncommon for the size of message  to exceed the size of message . Assume that one or both of adapters  and  include a reason for a soft network error condition. As the embodiments recognize, the state information presently utilized for selecting a path for transmitting message  will allow selecting the link established between adapters  and  for transmitting message , and will not be able to avoid a transmission failure of message  under these circumstances. An adapter is selected in the above example without implying a limitation on the illustrative embodiments. Any component of a network, such as a cable, a connector, or a port, can similarly contribute a soft network error condition.","With reference to , this figure depicts a block diagram of conceptual distinctions between a basic heartbeat and a diagnostic heartbeat in accordance with an illustrative embodiment. Basic heartbeat packet  may be useable as message , , , or  in .","Basic heartbeat packet  includes header  and heartbeat parameters . For example, header  may include a source IP address and port, a destination IP address and port, a timestamp by the sender, a checksum, and other commonly used basic heartbeat header information. Heartbeat parameters  may include for example, a heartbeat timeout period, packet size of basic heartbeat packet , and other commonly used basic heartbeat parameters. Some protocols, such as Ethernet and Fibre Channel, include a footer segment (not shown) in packets such as basic heartbeat packet . A footer segment is not depicted in the various heartbeat packets of  only for simplification of the depiction and not as a limitation on the protocols to which an embodiment applies. An implementation of an embodiment for a particular protocol can easily include a footer segment within the scope of the illustrative embodiments.","Diagnostic heartbeat packet  constructed according to an embodiment improves basic heartbeat packet . In one embodiment, diagnostic heartbeat packet  may include all the information found in basic heartbeat  and additional information. For example, in such an embodiment, header  would be similar in structure to header  and heartbeat parameters  would be similar in structure to heartbeat parameters . However, header , heartbeat parameters , or both, may have different values from header , heartbeat parameters , or both, to distinguish packet  as a diagnostic heartbeat packet as opposed to a basic heartbeat packet. In another embodiment, header , heartbeat parameters , or both, may also be structurally different from header , heartbeat parameters , or both, respectively.","In either of the above embodiments of diagnostic heartbeat packet , diagnostic heartbeat packet  further includes diagnostic attributes . In an embodiment, diagnostic heartbeat packet  further includes data .","Diagnostic attributes  include attributes that can be populated with information usable for qualitative measurements, which can be added to a member's state information. For example, one diagnostic attribute  may be used to specify a packet size that is different, perhaps larger, than the size of basic heartbeat packet .","In one embodiment, data  may be used to pad bits to diagnostic heartbeat packet  to make the size of diagnostic heartbeat packet  correspond to the packet size attribute in diagnostic attributes . In another embodiment, an adapter that receives diagnostic heartbeat packet  with a value stored in a packet size attribute in diagnostic attributes  may automatically inflate diagnostic heartbeat packet 's size to match that value, or regard diagnostic heartbeat packet  as being of that specified packet size value. Using such example diagnostic attribute , diagnostic heartbeat packet  is usable for testing soft network errors that manifest themselves when the packet size, such as the size of message  in , exceeds a particular threshold size.","Another example diagnostic attribute  may be a protocol type being used for transmitting diagnostic heartbeat packet . Using such example diagnostic attribute , diagnostic heartbeat packet  is usable for testing soft network errors that manifest themselves when a particular protocol is used.","Another example diagnostic attribute  may be used to place a specific bit pattern in diagnostic heartbeat packet . Using such example diagnostic attribute , diagnostic heartbeat packet  is usable for testing soft network errors that manifest themselves when a particular bit pattern appears in the packet being transmitted. In one embodiment, the bit pattern itself may be placed in the data  portion of diagnostic heartbeat packet . A diagnostic attribute in diagnostic attributes  may indicate that diagnostic heartbeat packet  contains a bit pattern in the payload, i.e., in the data  portion of diagnostic heartbeat packet .","These diagnostic attributes  and their manner of use are described only as examples for describing the operation of diagnostic heartbeat packet  in an easy to understand manner. Generally, a diagnostic attribute be configured to represent Boolean values, a range of alphanumeric values, or a data structure of other diagnostic attributes. Those of ordinary skill in the art will be able to conceive from this disclosure many other diagnostic attributes , contents of data , contents of header , contents of heartbeat parameters , or a combination thereof, to diagnose many other types of soft network errors. Such other conceptions are contemplated within the scope of the illustrative embodiments.","Using a combination of diagnostic attributes , data , header , and heartbeat parameters  in the described manner, diagnostic heartbeat packet  can be transmitted in a distributed domain to detect soft network errors, determine the conditions under which certain soft network errors occur, and identify possible solutions to at least some of those soft network errors. For example, Ethernet frames are either 1518 bytes (1500 payload bytes), or in the case of jumbo frames typically 9 KB (not standardized). A failure to transmit a packet smaller than 1518 bytes indicates a hardware error, a failure to transmit a packet larger than 1518 bytes is likely a soft network error in fragment handling for normal size frames or a hardware error for jumbo frames. The condition that causes such an example soft network error may be detected as a configuration of a receiving adapter. A possible solution that may be identified through this exercise may be to reconfigure the receiving adapter or cause the sending adapter to re-packetize data into smaller packets if transmitting on the link with that receiving adapter.","As another example, Fibre Channel Frames can carry up to 2112 bytes of payload, and an Infiniband frame up to 4 KB. A failure to transmit a large frame might indicate mechanical damage to cables, signal degradation due to temperature, cable length or imperfect connectors if optical fibre is the transport medium. A failure to transmit a large frame might be an effect of signal degradation or frequency roll-off if the transport medium is copper.","Diagnostic heartbeat packet  is described in a simplified manner to illustrate how a given heartbeat packet's structure can be modified to form diagnostic heartbeat packet . Neither basic heartbeat packet , nor diagnostic heartbeat packet  is limited to exactly the depiction in . Those of ordinary skill in the art will be able to identify many other possible structures of a basic heartbeat packet that is usable as basic heartbeat  within the scope of the illustrative embodiments. Those of ordinary skill in the art will be able to further recognize from this disclosure the various structures possible for diagnostic heartbeat packet  for such variations of basic heartbeat packet , and such structures of diagnostic heartbeat packet  are contemplated within the scope of the illustrative embodiments.","With reference to , this figure depicts a block diagram of an improved messaging infrastructure for reliable peer-to-peer communication services in accordance with an illustrative embodiment. Messaging infrastructure  may be messaging infrastructure  in  as improved by an embodiment described herein.","Messaging infrastructure  includes state information . State information  may include membership state information as available in presently used messaging infrastructures, such as adapter state (e.g., available or unavailable), node status (e.g., active or inactive), and intra-domain routing information (e.g., available routing paths from one adapter in one node to another adapter in another node).","Further, in accordance with an illustrative embodiment, state information  includes diagnostic information , such as link performance information and information about known issues related thereto (e.g., soft network errors). Diagnostic attributes  may be values of diagnostic attributes derived from diagnostic heartbeat packets received at an adapter, whose state the messaging infrastructure  tracks.","In one embodiment, information  includes the values of diagnostic attributes  or transformations thereof. For example, a diagnostic heartbeat packet may include an adapter identifier, such as a machine address, that is associated with a soft network error. The machine address may be converted or transformed to a corresponding IP address and a port and stored in information .","In another embodiment, information  may be derivative information derived from diagnostic attributes . For example, information  may include a throughput performance metric of a link between two adapters (e.g., a value for throughput with regards to a given set of attributes). The throughput metric of the link may be derived from a packet size limitation on that link that has to be used to work around a large packet transmission error detected on that link by using the diagnostic heartbeat packets.","Historical state information  may be any repository or data storage suitable for storing state information , including information  and diagnostic attributes , collected through diagnostic heartbeating in a given domain over a period of time. Historical information  is useable for detecting a trend in the performance of various member components, predicting certain soft network errors, isolating the cause of certain soft network errors, debugging soft network errors, improving the performance of peer-to-peer communication system, matching a quality of service requirement from a distributed application instance or client application to adapters and links, and many other such diagnostic and performance purposes.","With reference to , this figure depicts a block diagram of an improved messaging infrastructure in accordance with an illustrative embodiment. Messaging infrastructure  is usable as messaging infrastructure  in , and includes the features of messaging infrastructure  depicted in . For example, membership information  of messaging infrastructure  may include state information  of messaging infrastructure  in .","Heartbeating component  is a component of messaging infrastructure  that, as one of the functions, determines the type of heartbeat packet to send from a particular member adapter. As another function, heartbeating component  extracts the diagnostic information from received diagnostic heartbeat packets to populate membership information , e.g., to populate the state information in membership information .","For determining a type of heartbeat packet to send from an adapter, heartbeating component  may use information stored in membership information . For example, membership information  may additionally store data communication performance requirements of distributed application instances, client applications, or both. As an example, a distributed application instance may specify in membership information  that the distributed application instance uses a packet size of 4 KB. As another example, a client application may specify that UDP must be a supported protocol on a link used for the client application's data communications.","Using these and other similarly purposed information from membership information , heartbeating component  specifies the diagnostic attributes to use in a diagnostic heartbeat packet, the values of at least some of those diagnostic attributes, a data size or pattern in the payload of the diagnostic heartbeat packet, or a combination thereof.","Heartbeating component  communicates with another component for creation of the heartbeat packets. Some embodiments of such other component are described with respect to . Once a diagnostic heartbeat packet has been constructed to include the required diagnostic attributes and data, adapter  sends that diagnostic heartbeat packet to another adapter in adapter 's heartbeat neighborhood topology. When adapter  receives a diagnostic heartbeat packet, adapter  passes the diagnostic heartbeat packet or parts thereof to heartbeating component , which parses the diagnostic heartbeat packet or parts thereof for populating the member state information in membership information .","With reference to , this figure depicts a block diagram depicting several alternatives for creating and distributing diagnostic heartbeat packets in accordance with an illustrative embodiment. A diagnostic heartbeat packet constructed using one of these alternatives is usable for sending to an adapter, such as from heartbeating component  to adapter  in .","Data processing system  may be a node in a distributed domain, such as node  in  or a node (not shown) that includes messaging infrastructure  in . Data processing system  includes user space  that is used by applications executing on data processing system  for reading and writing their application data. Data processing system  also includes kernel space . Kernel space  is used by the operating system of data processing system  for running kernel processes, including TCP\/IP stack . In one embodiment, diagnostic heartbeat generation and analysis component  may execute in user space . For example, a daemon running in user space  to support reliable peer-to-peer communication services may be modified to include component . Alternatively, a new daemon can be added to provide the functionality of component .","Component  receives the diagnostic attributes to be used in a diagnostic heartbeat packet. Component  may further receive desired values of those diagnostic attributes. Component  may also receive data, such as specific bit patterns or size of data to include in a diagnostic heartbeat packet. Component  may receive such information from a heartbeating component of a messaging infrastructure, such as heartbeating component  in . Component  creates a diagnostic heartbeat packet based on the received information.","In another embodiment, diagnostic heartbeat generation and analysis component  may execute in kernel space . For example, pseudo device driver  (or other one or more device drivers) relative to TCP\/IP or network device driver stack  may be modified to include component . Alternatively, a new device driver can be added to kernel space  to provide the functionality of component . Component  operates in a manner similar to component , and receives and delivers similar information.","In one embodiment, the functionality of component  or  can be distributed between user space  and kernel space . For example, component 's diagnostic heartbeat generation functionality may execute in kernel space  and the diagnostic heartbeat analysis functionality may execute in user space , or vice versa. Of course the functionality of component  or  can be distributed in other ways as may be suitable in a given implementation within the scope of the illustrative embodiments.","In an embodiment, component  or  can send a mix of diagnostic heartbeat packets and basic heartbeat packets to a heartbeating component, such as to heartbeating component  in . Furthermore, component  or  can determine a ratio of a number of basic heartbeat packets and a number of diagnostic heartbeat packets to send within a given time period. Based on the ratio, component  or  can determine when to send a diagnostic heartbeat packet and when to send a basic heartbeat packet. For example, in one embodiment, when the diagnostic heartbeat packets and the basic heartbeat packets are to be sent in equal numbers, component  or  sends a diagnostic heartbeat packet and a basic heartbeat packet alternately. As another example, in another embodiment, when twice as many diagnostic heartbeat packets are to be sent as the number of basic heartbeat packets, component  or  sends a pattern of two diagnostic heartbeat packets followed by one basic heartbeat packet in a given period.","With reference to , this figure depicts a block diagram of a registration process for distributing diagnostic information and member state information in a domain in accordance with an illustrative embodiment. Client application  may be similar to any of client applications , , , or  in . Distributed application instance  may be analogous to any of distributed application instances  or  in . Messaging infrastructure  may be an embodiment of messaging infrastructure  in . Membership information  is similar to membership information  in  and includes state information  as described earlier with respect to . State information includes diagnostic attributes  or information derived there from as previously described with respect to other embodiments.","Client application  registers with messaging infrastructure  to receive state information . For example, client application  may register to receive the current status, performance metrics, and known soft error conditions across the domain, as obtained from diagnostic attributes of diagnostic heartbeat packets.","Client application  may alternatively subscribe to messaging infrastructure  to receive specific state information about members, state information about specific members, or a combination thereof. For example, client application  may subscribe to messaging infrastructure  to receive the current status, performance metrics, and known soft error conditions of only those links that can process UDP packets of size greater than 4 KB, as obtained from diagnostic attributes of diagnostic heartbeat packets.","In response to the registration or subscription, messaging infrastructure  sends client application  the information that client application  requested. Information sent to client application  in response to the registration or subscription may be only the current state information based on recently received diagnostic attributes, the historic state information, or a combination thereof.","Additionally, (not shown), client application  may, through the registration or subscription process, provide messaging infrastructure  client application 's quality of service (QoS) requirement. For example, client application  may specify in a registration (or subscription) that client application  uses UDP packets, which include a signature (bit pattern), the packets being of sizes 4 KB to 6 KB, or some combination thereof. As another example, client application  may specify in a registration (or subscription) that the data traffic of client application  should only be placed on a link that has not experienced a soft network error related to packet size limitation in the past thirty days. Of course, when a reason for a soft network error on a link has been remedied, such as when a faulty network cable has been replaced, the history of soft network errors on that link can be edited or reset so that the link is available sooner in response to such QoS specification.","Such QoS specification, performance demand, service restrictions, and other similarly purposed information in the registration (or subscription) process enables messaging infrastructure  to efficiently match data traffic to a link in the domain. For example, messaging infrastructure  may be able to use such information to preemptively transfer client application 's data traffic from one link to another when a previously used link experiences a soft network error and fails to meet client application 's specified requirements.","As another example, messaging infrastructure  may use such information to allocate client application 's data traffic to an adapter that meets client application 's requirements, the adapter not necessarily being the best performing adapter available. Thus, such information is useful in optimally utilizing the available member resources without over-burdening the resources with better than a threshold performance and under-utilizing resources with less than the threshold level of performance.","Distributed application instance  registers or subscribes in a manner similar to that described with respect to client application . Distributed application instance  provides QoS specification, performance demand, service restrictions, and other similarly purposed information in the registration (or subscription) to messaging infrastructure  in a similar manner as client application . Messaging infrastructure  processes and uses such information from distributed application instance  in a manner similar to the above description with respect to client application .","With respect to , this figure depicts a block diagram of an improved messaging infrastructure for reliable peer-to-peer communication in accordance with an illustrative embodiment. Messaging infrastructure  includes certain improvements over messaging infrastructure  in  as described herein, and is usable as messaging infrastructure  in . State information  including diagnostic attributes  is similar to state information  including diagnostic attributes  in .","Reliable messaging component  is a component to ensure that domain synchronization is accomplished with a higher priority and transparency over application data communication. Particularly, component  ensures that in the event of a hardware failure in a domain member component or a soft network error, synchronization messages are passed to the member nodes in the domain without additional impediment or delay.","As described herein, soft network errors can be detected using diagnostic heartbeat packets in combination with basic heartbeat packets. Diagnostic attributes  reveal the soft network error conditions to component . Component  utilizes this information about the soft network errors and re-routes the synchronization messages over other healthy adapters or links. Such re-routing can be automatic, proactive, responsive to additional policies or conditions, or a combination thereof.","With reference to , this figure depicts a block diagram of another improved messaging infrastructure for reliable peer-to-peer communication in accordance with an illustrative embodiment. Messaging infrastructure  includes certain improvements over messaging infrastructure  in  as described herein, and is usable as messaging infrastructure  in . State information  including diagnostic attributes  is similar to state information  including diagnostic attributes  in .","Adaptive component  is a component that ensures that diagnostic heartbeat packets do not cause congestion in the network or performance degradation of the distributed peer-to-peer communication services. To ensure that the peer-to-peer communication services perform at or above a specified service level, adaptive component  can throttle the frequency of diagnostic heartbeat packets in the general domain, or over a specific link. For example, if a distributed application instance registers with messaging infrastructure  and informs that the distributed application instance will use a particular IP address for the distributed application instance's data communications, messaging infrastructure  can determine from the membership information that adapter \u201cA\u201d, which is associated with the requested IP address, will be in use for the distributed application instance. Accordingly, adaptive component  can throttle back (reduce) the diagnostic heartbeating on the links involving adapter \u201cA\u201d to provide more bandwidth for the distributed application instance's use.","A change of heartbeating frequency by the sender, throttling or speed-up, implies a change of expected heartbeat frequency in the receivers. In one embodiment, this frequency change is communicated by a distributed protocol among the sender and all receivers. In another embodiment, the frequency change relies on the receivers changing the maximum timeout for which to tolerate not receiving a heartbeat of given type adaptively. For example, when the network is congested, and a sending thread cannot execute at the expected rate, adaptive change of maximum timeout is a gradual process such that a receiving adapter can observe the network conditions to automatically increase or decrease the timeout.","As another example, adaptive component  can combine several diagnostic heartbeat packets together to reduce the frequency of diagnostic heartbeating. As an example, several diagnostic heartbeat packets can be combined by combining the diagnostic attributes of the several diagnostic heartbeat packets into one diagnostic heartbeat packet, combining the data payload to ensure that the combined data payload of the one diagnostic heartbeat packet meets the diagnostic requirements of the combined diagnostic heartbeat packets.","Adaptive component  can implement frequency throttling and diagnostic heartbeat packet combining techniques together or in some combination to provide desired service levels from the member components. Furthermore, adaptive component  can employ logic to adapt the diagnostic heartbeating not only according to the registrations, subscriptions, and current state information, but also based on historical state information . For example, historical state information  may reveal that between 12 AM and 2 AM each night, a distributed instance of a database on a particular node in the domain sends a large volume of data traffic to adapter \u201cA\u201d, perhaps as the database performs a nightly backup. Adaptive component  can reduce the frequency of diagnostic heartbeating to or from adapter A during that period to minimize the degradation of adapter A's performance. As another example, in an embodiment, adaptive component  monitors a workload queue, such as a scheduler's job queue or a device driver's send queue, to anticipate a change in utilization of a member component. Adaptive component  can increase or decrease the frequency of diagnostic heartbeating according to the direction of the utilization change, if the change does occur.","The embodiments improve certain components of a reliable peer-to-peer communication system in different ways. For any given component, not all improvements are necessary to practice any particular embodiment. For example, an implementation of a messaging infrastructure may include any suitable combination of the different features of the different configurations of messaging infrastructure as described in different embodiments herein within the scope of the invention.","With reference to , this figure depicts a block diagram of an improved client application in accordance with an illustrative embodiment. Client application  may be usable as client application  in .","Client application  includes registration and subscription component . Component  sends the registration or subscription for receiving all or a subset of the state information about the domain members. As described elsewhere in this disclosure, component  may prepare and send a registration to an improved messaging infrastructure of an embodiment to receive the current or historic state information, including diagnostic information, about the domain members. As also described elsewhere in this disclosure, component  may prepare and send a subscription to an improved messaging infrastructure of an embodiment to receive specific current or historic state information, including diagnostic information, about specific domain members.","With reference to , this figure depicts a block diagram of an improved client application in accordance with an illustrative embodiment. Client application  may be usable as client application  in .","Client application  includes preemptive traffic re-routing component . Component  uses the state information and associated diagnostic information received in response to a registration or subscription to determine current or historical patterns of soft network errors. Using the information determined about the soft network errors, component  can send a revised QoS specification or performance demand to a messaging infrastructure to ensure that the domain components currently experiencing or likely to experience soft network errors are avoided. Alternatively, to achieve a similar result, component  can send a request to the messaging infrastructure to route client application 's data traffic to selected adapter, link, or path .","With reference to , this figure depicts a block diagram of an improved distributed application instance in accordance with an illustrative embodiment. Distributed application instance  may be usable as distributed application instance  in .","Distributed application instance  includes registration and subscription component . Component  sends the registration or subscription for receiving all or a subset of the state information about the domain members. As described elsewhere in this disclosure, component  may prepare and send a registration to an improved messaging infrastructure of an embodiment to receive the current or historic state information, including diagnostic information, about the domain members. As also described elsewhere in this disclosure, component  may prepare and send a subscription to an improved messaging infrastructure of an embodiment to receive specific current or historic state information, including diagnostic information, about specific domain members.","With reference to , this figure depicts a block diagram of an improved distributed application instance in accordance with an illustrative embodiment. Distributed application instance  may be usable as distributed application instance  in .","Distributed application instance  includes preemptive traffic re-routing component . Component  uses the state information and associated diagnostic information received in response to a registration or subscription to determine current or historical patterns of soft network errors. Using the information determined about the soft network errors, component  can send a revised QoS specification or performance demand to an improved messaging infrastructure of an embodiment to ensure that the domain components currently experiencing or likely to experience soft network errors are avoided. Alternatively, to achieve a similar result, component  can send a request to the messaging infrastructure to route distributed application instance 's data traffic to selected adapter, link, or path .","With reference to , this figure depicts a block diagram of an improved administration application for administrating distributed applications in accordance with an illustrative embodiment. Administration application , which is an example of administration application  in , may register with or subscribe to a messaging infrastructure in a manner similar to client application  in .","Administration application  includes registration and subscription component . Component  sends the registration or subscription for receiving all or a subset of the state information about the domain members. As described elsewhere in this disclosure, component  prepares and sends a registration to an improved messaging infrastructure of an embodiment to receive the current or historic state information, including diagnostic information, about the domain members. As also described elsewhere in this disclosure, component  prepares and sends a subscription to an improved messaging infrastructure of an embodiment to receive specific current or historic state information, including diagnostic information, about specific domain members.","With reference to , this figure depicts a block diagram of an improved administration application for administrating distributed applications in accordance with an illustrative embodiment. Administration application  uses an improved messaging infrastructure of an embodiment in a manner similar to client application  in . Administration application , which is an example of administration application  in , may be usable as administration application  in .","Administration application  includes preemptive node reallocation component . Component  uses the state information and associated diagnostic information received in response to a registration or subscription to determine current or historical patterns of soft network errors. Using the information determined about the soft network errors, component  can relocate a distributed application instance under its administration to another node  in the domain to ensure that the domain components currently experiencing or likely to experience soft network errors are avoided. Alternatively, to achieve a similar result, component  can send a request (not shown) to the messaging infrastructure to route an affected distributed application instance's data traffic to a selected adapter, link, or path.","With reference to , this figure depicts a flowchart of an example process of specifying a diagnostic heartbeat packet in accordance with an illustrative embodiment. Process  may be implemented in a component of an improved messaging infrastructure of an embodiment, such as in heartbeating component  in .","The component determines a packet size of a diagnostic heartbeat packet (block ). The component selects a set of diagnostic attributes to include in the diagnostic heartbeat packet (block ). The component selects a protocol to use for transmitting the diagnostic heartbeat packet (block ). The component specifies the diagnostic heartbeat packet to be constructed in a request (block ). Process  ends thereafter.","The determinations and selections of blocks , , and  can be used in any combination within the scope of an embodiment. For example, within the scope of the illustrative embodiments, a particular implementation may omit selecting a protocol, allowing a default protocol type to be used instead. Furthermore, an implementation may add an additional step of specifying the values of a subset of the set of diagnostic attributes and allowing a default value selection for the other remaining diagnostic attributes in the set. A set of diagnostic attributes is one or more diagnostic attributes.","With reference to , this figure depicts a flowchart of an example process of throttling diagnostic heartbeating in accordance with an illustrative embodiment. Process  may be implemented in a component of a messaging infrastructure, such as in adaptive component  in .","The component determines a frequency of diagnostic heartbeats for a given adapter or a link (block ). For example, the component may select the frequency to reduce the overhead caused by the diagnostic heartbeat packets on a link for which a client application has indicated a preference. The component sends the diagnostic heartbeat packets at the selected frequency on the given adapter or link (block ). Process  ends thereafter. The frequency change may be communicated by a distributed protocol among the sender and receivers, or a receiver may change the maximum timeout for which to tolerate not receiving a heartbeat of given type adaptively as described earlier.","With reference to , this figure depicts a flowchart of another example process of throttling diagnostic heartbeating in accordance with an illustrative embodiment. Process  may be implemented in a component of a messaging infrastructure, such as in adaptive component  in .","The component determines a reduced frequency of diagnostic heartbeats for a given adapter or a link (block ). The component combines several diagnostic heartbeat packets into a single diagnostic heartbeat packet (block ). The component sends the combined diagnostic heartbeat packet at the reduced frequency on the given adapter or link (block ). Process  ends thereafter. The frequency change may be communicated by a distributed protocol among the sender and receivers, or a receiver may change the maximum timeout for which to tolerate not receiving a heartbeat of given type adaptively as described earlier.","With reference to , this figure depicts a flowchart of an example process of detecting a soft network error condition in accordance with an illustrative embodiment. Process  may be implemented in a component of an improved messaging infrastructure of an embodiment, such as in heartbeating component  in .","The component receives a diagnostic heartbeat packet (block ). The component analyzes one or more diagnostic attributes in the diagnostic heartbeat packet to detect a soft network error (block ). Based on the analysis, the component updates a state information record using the diagnostic attribute values to indicate the soft network error condition (block ). Process  ends thereafter.","In one embodiment, the component analyzes the header information in the diagnostic heartbeat packet to determine a source, a target, and certain diagnostic attributes. The component then compares the diagnostic attributes with corresponding diagnostic attributes stored in the state information record for the link from adapter A to adapter B. Based on the analysis, block  may update the state information record, such as when the value for a particular diagnostic attribute reflects an improvement in a condition of the link between adapters A and B. Thus, the component can detect not only soft network error conditions, but also network condition improvements using the diagnostic heartbeats.","As another example, assume that a diagnostic heartbeat packet of size 4 KB was sent over UDP from adapter A to adapter B but the state information record contains a length of 2K as largest value for which there exists connectivity for UDP packets sent from adapter A to adapter B. The component can update the state information record with the new value of 4 KB for protocol type UDP and the link from adapter A to adapter B. As another example, the diagnostic attributes may indicate a bit pattern that is not yet stored in the state information record for the link from adapter A to adapter B. The component, at block , can update the state information record to add information indicating that there exists connectivity with regards to the bit pattern.","Alternatively, under certain circumstances, at the beginning of process , the component may detect a failure to receive, within an allowed time-out, diagnostic heartbeats having a given set of diagnostic attributes (block ). Generally, the maximum time-out value for which to tolerate a failure to send receive heartbeats before declaring a failure of connectivity is specific to the given set of attributes incorporated in the diagnostic heartbeat. For example, the component may detect that no diagnostic heartbeat of the set of attributes consisting of packet size and UDP protocol type has been received for a time period exceeding the maximum allowed time-out specific to that pair of attributes.","Following block , the component omits block  and proceeds to execute block . Process  ends thereafter. For the above example, the component may update the state information record for a link from adapter A to adapter B to reflect loss of connectivity with regards to the currently stored attribute value for packet size and protocol type UDP.","In an embodiment, process paths - and -- operate in conjunction to update the state information record, such as for the example link from adapter A to adapter B, to ensure that the record contains the maximum values of the diagnostic attributes for which diagnostic heartbeat transmission from adapter A to adapter B is successful. In the embodiment, the link is considered to be adversely affected by a soft network error, if at least one attribute in the state information record is not set at a corresponding maximum value. For example, if the embodiment tests the link from adapter A to adapter B for packet transmissions with a size up to 8 KB for packet type UDP, and the value stored in the state information record for attributes packet size and UDP is 4 KB, then the link from adapter A to adapter B is deemed to be adversely affected by a soft network error.","With reference to , this figure depicts a flowchart of an example process of historically tracking soft network error conditions in a distributed domain in accordance with an illustrative embodiment. Process  may be implemented in a component of a messaging infrastructure, such as in heartbeating component  in .","The component receives diagnostic heartbeat packets from the various member adapters and other domain member components (block ). The component updates the state information of the adapters and other member components based on the diagnostic attribute values found in the diagnostic heartbeat packets (block ). The component adds the updated state information to a historical record of the state information of those adapters and other member components (block ). Process  ends thereafter.","With reference to , this figure depicts a flowchart of an example process of registration or subscription in accordance with an illustrative embodiment. Process  may be implemented in an improved messaging infrastructure, such as in messaging infrastructure  in .","The improved messaging infrastructure receives from a client application or a distributed application instance a registration to receive state information available in the improved messaging infrastructure (block ). The improved messaging infrastructure may additionally or alternatively also receive from a client application or a distributed application instance a subscription to receive specific state information updates available in the improved messaging infrastructure (block ). A distributed application instance administration application may also send a registration or a subscription in a similar manner.","The improved messaging infrastructure provides the requested state information to the requesting entity (block ). The improved messaging infrastructure may additionally adjust a diagnostic heartbeating frequency according to the registration or subscription information (block ). For example, the improved messaging infrastructure may reduce the diagnostic heartbeating frequency on an adapter to which a distributed application instance has subscribed, as a preemptive move to reduce overhead on an adapter that is likely to be used in the near future. As another example, if a particular link or adapter is not subscribed to, the improved messaging infrastructure may opportunistically increase the diagnostic activity on such a link in anticipation of low utilization in the near future.","Conversely, under some circumstances, the reverse operation may be desirable. For example, the improved messaging infrastructure may increase the diagnostic activity on a link that is subscribed to detect any soft network errors that could adversely affect the busy link, and vice versa. The adjusted frequency may serve as an input to the adaptive component of the improved messaging infrastructure as described elsewhere in this disclosure. Process  ends thereafter.","With reference to , this figure depicts a flowchart of an example process of soft network error condition aware data routing in accordance with an illustrative embodiment. Process  may be implemented in an improved messaging infrastructure, such as in messaging infrastructure  in .","The improved messaging infrastructure receives a request selecting an adapter or a link on which to place the requestor's data traffic (block ). In one embodiment, the request in block  may be for selecting a node on which to locate or relocate a distributed application instance.","The improved messaging infrastructure configures the data routing information so that the traffic of the requestor may be routed to the desired adapter or link (block ). When the request is to relocate a distributed application instance to a node, the improved messaging infrastructure may configure the routing information so that the data traffic to and from the distributed application instance can be realized at the requested node.","The improved messaging infrastructure may additionally adjust a diagnostic heartbeating frequency according to the reallocation of data traffic to the specific adapter, link, or node (block ). For example, the improved messaging infrastructure may reduce the diagnostic heartbeating frequency on the selected adapter, link, or node so as to reduce the overhead on now busier adapter, link, or node. The reduced frequency may serve as an input to the adaptive component of the improved messaging infrastructure as described elsewhere in this disclosure. Process  ends thereafter.","With reference to , this figure depicts a flowchart of an example process of circumventing a soft network error condition in accordance with an illustrative embodiment. Process  may be implemented in a component of an improved messaging infrastructure of an embodiment, such as in reliable messaging component  in .","The component receives diagnostic information, such as from a state information record that stores performance metrics and soft network error condition indicators as described elsewhere in the disclosure (block ). The component determines, such as by analyzing the diagnostic attributes available from the state information record, that a soft network error condition exists in the domain (block ).","Note that what may not be a soft network error condition for one purpose may be a soft network error condition for another purpose. For example, if a distributed application instance never uses UDP, and never subscribes to protocol related diagnostics from an improved messaging infrastructure of an embodiment, as far as the distributed application instance is concerned, no soft network error condition exists in the domain. A different analysis, such as for process , which may utilize UDP, may reveal that a soft network error condition does exist because the second analysis utilizes the protocol diagnostics.","The component re-routes the synchronization messages from a link with the soft network error to another, more reliable, link (block ). Process  ends thereafter.","With reference to , this figure depicts a flowchart of another example process of circumventing a soft network error condition in accordance with an illustrative embodiment. Process  may be implemented in a client application, such as in preemptive traffic re-routing component  in . Process  may also be implemented in a distributed application instance, such as in preemptive traffic re-routing component  in .","The component receives all or part of the state information according to a registration or subscription (block ). The component detects a soft network error condition using the received state information and preemptively moves the network traffic of the associated client application or distributed application instance to a member component, such as a link, selected based on the received state information (block ). Process  ends thereafter.","With reference to , this figure depicts a flowchart of another example process of mitigating the effects of a soft network error condition in accordance with an illustrative embodiment. Process  may be implemented in an improved messaging infrastructure, such as in messaging infrastructure  in .","The improved messaging infrastructure receives performance requirements, such as QoS specifications, from a client application or a distributed application instance (block ). The improved messaging infrastructure selects a suitable member component of the domain, such as a suitable adapter or link, using a combination of the current and the historical state information, to meet the performance requirements (block ). The selection of block  need not necessarily select the best performing member component but a component of suitable performance and availability to satisfy the performance requirements received in block .","The improved messaging infrastructure allocates the requesting entity's traffic to the selected member component (block ). Process  ends thereafter.","With reference to , this figure depicts a flowchart of another example process of detecting a soft network error condition and mitigating the error's effects in accordance with an illustrative embodiment. Process  may be implemented in an improved messaging infrastructure, such as in messaging infrastructure  in .","In one embodiment, the improved messaging infrastructure receives a diagnostic heartbeat packet from an adapter (block ). In another embodiment, the improved messaging infrastructure detects a failure to receive diagnostic heartbeats having a given set of diagnostic attributes within an allowed time-out (block ). Several methods to detect a failure of a diagnostic heartbeat have been described with respect to block  in , and are similarly applicable for executing block .","Using the received diagnostic heartbeat packet of block , or based on the failure to receive the diagnostic heartbeat packet as in block , the improved messaging infrastructure determines that a previously stable value of a diagnostic attribute has changed (block ). The improved messaging infrastructure identifies a soft network error condition based on the changed value (block ). The improved messaging infrastructure adjusts a future diagnostic heartbeat packet to identify a new stable value of the diagnostic attribute (block ). The improved messaging infrastructure adjusts or updates a performance metric of the adapter, links associated with the adapter, or both, in the state information using the detected soft network error condition (block ). Process  ends thereafter.","The operation of process , , , , and , and other operations using diagnostic heartbeat packets as described herein are now described with respect to an example implementation. The details of the example implementation are not intended to be limiting on the illustrative embodiments. Those of ordinary skill in the art will be able to conceive other implementation details, variations, or additions thereto. Such modifications are contemplated within the scope of the illustrative embodiments.","1. Logical Subnet Partition of a Domain, Heartbeat Signature and Tunables","1.A) Adapters of a domain are divided into logical subnets that reflect physical network connectivity. All adapters of a logical subnet are of the same architecture, for instance Ethernet or Fibre Channel and part of the same physical network.","1.B) A heartbeat signature is a sequence of sets of heartbeat packets H1, . . . , Hn whereby each set Hi has a format specified by a set of attributes, including packet size, protocol type, bit pattern. For a given set Hi, multiple instances of heartbeat signatures may exist with varying attribute values. For example, Hi may be set of UDP packets with bit pattern 1010 . . . 1010 in a range of sizes. A basic heartbeat signature consists of basic heartbeats. As described, these are heartbeats that have invariable attribute values, for instance fixed size. A diagnostic heartbeat signature consists of heartbeats that may have variable attribute values, for instance variable size.","1.C) A heartbeat signature has heartbeat tunables associated with it, in particular:","Tunables for Basic Heartbeat Signature:","Heartbeat Frequency\n\n","Heartbeat Grace Period\n\n","Heartbeat Frequency for Auto Discovery of Connectivity for Failed Heartbeats\n\n","Tunables for Diagnostics Heartbeat Signature:","Heartbeat Frequency\n\n","Heartbeat Grace Period\n\n","Heartbeat Frequency for Auto Discovery of Connectivity with Optimal Value for Heartbeats of Degraded Attribute Value\n\n","1.D) Each logical subnet has multiple heartbeat signatures associated, that may change dynamically. That is, heartbeats on a given subnet are managed with tunables that are not uniform. In particular, heartbeats signatures of the following categories may be active on a subnet:","i.) basic_active\u2014basic signature heartbeats, sent while the path has not been declared as failed","ii.) basic_retry\u2014basic signature heartbeats, sent to retry the connection after detected failure","iii.) diag_active\u2014diagnostics signature heartbeats, sent with dynamic attributes while the path has not been declared as failed with regards to these attributes","iv.) diag_retry\u2014diagnostic heartbeats, retry of attributes after detected failure of connectivity with regards to these attributes","1.E) Heartbeat signatures and tunables may be dynamically changed, such as to react to client demands or increased network bandwidth usage by clients.","1.F) Clients may use different heartbeat signatures and tunables per logical subnet to monitor network properties specific to the intended use of a network connection by an application.","2. Presentation of Adapter State Information","2.A) The membership component of the peer-to-peer communication system implements monitoring for a given set of attributes, attr1, . . . , attr_n, as described elsewhere in the disclosure. Attributes represent characteristics of heartbeat packets, such as packet size, TCP\/IP protocol type or a bit pattern. As stated, multiple attributes may be associated with one heartbeat packet. The value of an attribute is an integer, according to a metric specific to attr_i, for instance packet size, or bit pattern encoded by a number.","2.B) The range of possible values for attributes is not the same for basic heartbeat signatures and diagnostic heartbeat signatures:\n\n","2.C) Each adapter, Ai, receives heartbeats from a subset of adapters of the same logical subnet, {Ail, . . . , Ain}. For each adapter Ail from which Ai receives heartbeats, it maintains a vector of attribute values,","attr(Ail)={attr1(1(Ail)), . . . , attr_k(Ail))}.","2.D) The attribute values attr_j(Ai) are updated according to receipt of heartbeats of the type represented by the attribute and externalized to clients.","3. Presentation of Attribute Specific Network State","State of heartbeat connectivity is broadcast by all listeners and results are stored by each member in the attribute enriched routing table. Routing information can be derived from the connectivity matrix and queries like the below are supported by the API:","3.A) Find adapters in any or a given logical subnet that have connectivity with relation to a given set of attribute values attr1, . . . , attr_n. For instance, find a set of adapters that are able to exchange packets of minimum size x.","3.B) For a given logical subnet, display attribute values with regards to which connectivity of adapters exists.","4. Embodiment of a Heartbeating Component of Fixed Heartbeating Topology","In the following we outline management of heartbeat attributes and adapter state information in a membership component","4.1 Heartbeating","A.) A distinguished heartbeat signature exists that is suited to test basic network connectivity as described earlier. This heartbeat signature contains a sequence of heartbeats of which is assumed that if an adapter is able to receive from a neighbor any heartbeat of a given attribute, then it will be able to receive a subset of heartbeats of H1, . . . , Hn and thus receipt of any heartbeat of that set is proof that the remote adapter is alive. Receiving such distinguished heartbeats can be thought of as a prerequisite to receive other heartbeats and is a mean to detect most accurately if a remote member is alive and hence to deduce most accurately domain membership.","B.) For each logical subnet, three distinguished heartbeat signatures exist, for the following purposes:","B.1) Initialization: When heartbeating is started, for applicable attributes a range of values may be sent such as packets of various size for receivers to be able to determine a maximum packet size.","B.2) Heartbeating: The signature for heartbeating that is used once a stable set of network attributes has been established.","B.3) Stabilization after State Change: Once heartbeats of a stable attribute value are no longer received, a heartbeat signature with a variation of value for that attribute is sent, to establish the new maximum value for that attribute.","4.2 Protocols","A.) Initialization\u2014entails mediation of a best possible set of attribute values sent during heartbeating. Attribute values are assumed to be assigned such that the highest value is the best value.","1. Adapter A sends heartbeats according to configured heartbeat signatures basic_active and diag_active to its set of listeners. For a given heartbeat of diag_active, packets with all attribute values are sent.","2. The listeners acknowledge receipt of a heartbeat, Hi, of basic or diagnostic type by sending an ACK back to sender A.","3. Sender A does the following upon receipt of heartbeat ACK responses from listeners:","3.A) Based on the set of attribute values received by senders for which connectivity exists, it forms the four heartbeat signatures described in 1.D, which are called the stable active signature. The diag_active signature may contain for a given heartbeat multiple instances with different attribute values, the maximum for which each listener acknowledged receipt.","3.B) Sender A maintains a list per listener which specifies for which attribute value connectivity exists and based on that builds the retry signatures 1.D.ii and 1.D.iv as follows:\n\n","4. Sender A sends the stable active signature to its set of listeners.","5. Listeners publish the state with regards to monitored attributes to the reliable messaging component and to clients as follows:\n\n","B.) Heartbeating\u2014entails sending heartbeats according to heartbeat signatures in 1.D) that have been determined during initialization. As stated in 1.D) above, not all heartbeats of the collated signature may have the same tunables.","1. Adapter A sends heartbeats signatures as described in 1.D) above with configured frequencies.","2. The recipients listen for heartbeats. If a recipient detects a state change, i.e., either failure to receive a heartbeat for its associated grace period or that the recipient again receives heartbeats with attributes that are not part of the current state signature, the recipient initiates a protocol by notifying sender A.","3. The Stabilization after State Change protocol, described in 4.2.0 below is executed. In response to a change in the network configurations, multiple iterations of described protocol may be executed until a new stable heartbeat signature has been mediated.","C.) Stabilization after State Change","Upon receipt of a notification as described in 4.2.B.2 Sender A will do the following:","1.) If notification that a heartbeat, Hi, of any active heartbeat signature, 4.2.D.1 or 4.2.D.3 is not received, sender A will do the following:","1.A) Update list 4.2.A.3.B","1.B) If Hi belongs to a basic signature, do the following:\n\n","1.C) If H1 belongs to a diagnostics signature and its attribute value is equal or larger than values for the attribute received by any other listener according to list 4.2.A.3.B, diagnostics heartbeating signatures are changed as follows:\n\n","2.) If response to a heartbeat, Hi, of any retry signature is received with an attribute value that is larger than the currently known value for which connectivity exists, i.e. the value in the per listener and attribute connectivity list described in 4.2.A.3.B, sender A will do the following:","2.A) Update list 4.2.A.3.B","2.B) If Hi belongs to a basic signature, do the following:\n\n","2.C) If Hi belongs to a diagnostics signature, and its attribute value is equal or smaller than values for the attribute received by any other listener according to list 4.2.A.3.B, diagnostics heartbeating signatures are changed as follows:\n\n","3. Listeners publish the new state with regards to monitored attributes to the reliable messaging component and to clients as described in 4.2.A.4.","D.) Example of a state transitions in response to a soft network failure","1. Adapter A sends heartbeats with stable signature.","2. Listener Ai and Aj detect a failure to receive diagnostics heartbeats of attribute values","attr_l(Ai)=ail and attr_l(Aj)=ajl.","3. Ai, Aj each send a packet to A, informing of failure to receive the attribute attr_l with corresponding specified value.","4. A, upon receipt of notifications to receive attribute values ail, ajl, looks up if diag_active contains heartbeats with attribute values one step lower than ail, ajl, called ail\u22121, ajl\u22121, correspondingly and adds missing ones to the list. Further, A looks up if an instance of each heartbeat with values ail, ajl is in diag_retry and if not adds the instance to the diag-retry.","5. A resumes heartbeating with that signatures.","6. Ai receives heartbeats with the new value ail\u22121 and sends an ACK to A.","7. A sends a reply to Ai's ACK.","8. Ai publishes the new attribute ail\u22121 for receipt of heartbeats from A to the reliable messaging component and clients.","9. Aj does not receive heartbeats with the new value ajl\u22121 and sends a packet to A, informing of failure to receive heartbeats with attribute value ajl\u22121.","10. A adds the next lower value for ajl\u22121, that is ajl\u22122, to the values signature and ajl\u22121 to the diag_retry signature.","11. Aj receives the heartbeat with value ajl\u22122 and sends an ACK to A.","12. A sends a reply to Aj's ACK.","13. Aj publishes the new attribute ajl\u22122 for receipt of heartbeats from A to the reliable messaging component and clients.","4.3 Maintenance of Membership and Logical Adapter State Information","Adapter state information is obtained as a result of receipt of heartbeats with selected signature. Below is an example of externalized adapter state information in raw format:","adapter: A1","listeners A11, . . . , A1n","diagnostics monitored: packet_size, UDP, multicast, TCP, bitpattern_test","collated diagnostics: (packet size, UDP, bitpattern_test), (packet_size, TCP, bitpattern_test)","diagnostics range: size: min: 64, max: 8192, bit_pattern cycle size: 2-8192","values by listeners: A11 A12 . . . A1n","packet_size (UDP) max 128 . . . max","bit_pattern (UDP) 1 1 . . . 0","packet_size (TCP) max 1 . . . 1","bit_pattern (TCP) 1 1 . . . 0","tunables: frequency grace-period retry-frequency","basic: 2 10 8","diag: 8 32 48","4.4 Use of Adapter State Information by Reliable Messaging Component","The messaging infrastructure specifies monitoring of a set of logical networks it will use to route its traffic and select heartbeat attributes for these networks according to its network traffic characteristics. If a change of network connectivity with regards to monitored attributes affecting the currently used logical subnet has been detected, the reliable messaging layer will switch to use another subnet to route its traffic or for a degradation of certain attributes change its transmission characteristics, such as using smaller size packets.","The flowchart and block diagrams in the Figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods, and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","Thus, a computer implemented method, system, and computer program product are provided in the illustrative embodiments for synchronizing a distributed communication system using diagnostic heartbeating.","The diagnostics system with the described properties of an embodiment solves important problems in the implementation of reliable peer-to-peer communication systems and distributed clients. Soft network failures occur frequently, and, as described above, they have a pervasive effect on the functionality of distributed middleware, applications, and clients. Failures or mis-configurations are detected and reacted to as soon as they occur, rather than being exposed as random application errors and hangs that are expensive to diagnose via presently available methods. The integrated diagnostics infrastructure greatly reduces the need to localize soft network errors by means of test tools for network hardware, such as network sniffers, and internals knowledge of the client and reliable messaging component.","A network configuration may have been fully functional at some point and a system passed all tests pertaining to reliable peer-to-peer communications before deployment. A simple change in networking, such as replacement of a cable, switch reboot, or change of switch port may introduce a soft network error. In conjunction with the network stress test tool described elsewhere in the disclosure, the described diagnostics embodiments are particularly suited to assess network connectivity before restarting production, thus eliminating downtime. Tunables for maximum bandwidth used for diagnostic heartbeating allow satisfying a range of requirements for performance and latency of failure detection of clients. It is further contemplated that an embodiment can be enhanced with a network stress test tool capable of sending all heartbeat attribute combinations in all ranges that are usable for detecting soft network errors in distributed applications environments.","Furthermore, an embodiment is useful in a cloud environment for Infrastructure as a Service (IaaS) and Platform as a Service (PaaS) providers to comply with Service Level Agreements (SLAs). In a cloud setting networks may span across an inhomogeneous network environment. An embodiment that implements heartbeat construction at lower layer in the network device stack is more effective in diagnosing and reacting to soft network failures as compared to an embodiment that observes network protocol errors in higher layers. Cloud platforms host applications whose network bandwidth characteristics are not necessarily known. A soft network error may be exposed by network load. History information about soft network errors may be used by cloud providers to schedule applications to use certain networks.","An embodiment may be particularly beneficial in detecting soft network errors in low latency data processing environments. For example, in a stock trading or brokerage application, a soft network error can cause a transaction to be delayed, which can result in unacceptable outcome of the transaction. In such low latency environments, predicting soft network errors, or detecting them earlier than presently possible helps meet the stringent service level requirements in those environments.","As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method, or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable storage device(s) or computer readable media having computer readable program code embodied thereon.","Any combination of one or more computer readable storage device(s) or computer readable media may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage device may be an electronic, magnetic, optical, electromagnetic, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage device would include the following: a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage device may be any tangible device that can store a program for use by or in connection with an instruction execution system, apparatus, or device. The term \u201ccomputer-readable tangible storage device\u201d does not encompass a signal propagation medium such as a copper cable, optical fiber, or wireless transmission medium, any description in this disclosure to the contrary notwithstanding.","Program code embodied on a computer readable storage device or computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the present invention are described herein with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to one or more processors of one or more general purpose computers, special purpose computers, or other programmable data processing apparatuses to produce a machine, such that the instructions, which execute via the one or more processors of the computers or other programmable data processing apparatuses, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in one or more computer readable storage devices or computer readable media that can direct one or more computers, one or more other programmable data processing apparatuses, or one or more other devices to function in a particular manner, such that the instructions stored in the one or more computer readable storage devices or computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto one or more computers, one or more other programmable data processing apparatuses, or one or more other devices to cause a series of operational steps to be performed on the one or more computers, one or more other programmable data processing apparatuses, or one or more other devices to produce a computer implemented process such that the instructions which execute on the one or more computers, one or more other programmable data processing apparatuses, or one or more other devices provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. As used herein, a set includes one or more members unless the context indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiments were chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":["The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself, however, as well as a preferred mode of use, further objectives and advantages thereof, will best be understood by reference to the following detailed description of illustrative embodiments when read in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 19A"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 19B"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 27"}]},"DETDESC":[{},{}]}
